/**
 * Copyright (C) 2010-2016 Gordon Fraser, Andrea Arcuri and EvoSuite
 * contributors
 *
 * This file is part of EvoSuite.
 *
 * EvoSuite is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3.0 of the License, or
 * (at your option) any later version.
 *
 * EvoSuite is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with EvoSuite. If not, see <http://www.gnu.org/licenses/>.
 */
/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 14 19:49:30 GMT 2015
 */

package org.evosuite.runtime.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static shaded.org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.util.AtMostOnceLogger;
import org.junit.runner.RunWith;
import org.slf4j.Logger;
import org.slf4j.helpers.SubstituteLogger;
import shaded.org.evosuite.runtime.EvoRunner;
import shaded.org.evosuite.runtime.EvoRunnerParameters;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class AtMostOnceLogger_ESTest extends AtMostOnceLogger_ESTest_scaffolding {

  @Test
  public void test0()  throws Throwable  {
      SubstituteLogger substituteLogger0 = new SubstituteLogger((String) null);
      // Undeclared exception!
      try { 
        AtMostOnceLogger.warn(substituteLogger0, ">qHursx+g% QZ)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        AtMostOnceLogger.warn((Logger) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null input in position 0
         //
         assertThrownBy("org.evosuite.runtime.util.Inputs", e);
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SubstituteLogger substituteLogger0 = new SubstituteLogger((String) null);
      // Undeclared exception!
      try { 
        AtMostOnceLogger.error(substituteLogger0, "}d3NA19oy(9FZ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      SubstituteLogger substituteLogger0 = new SubstituteLogger("");
      // Undeclared exception!
      try { 
        AtMostOnceLogger.error(substituteLogger0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null input in position 1
         //
         assertThrownBy("org.evosuite.runtime.util.Inputs", e);
      }
  }

  @Test
  public void test4()  throws Throwable  {
      AtMostOnceLogger atMostOnceLogger0 = new AtMostOnceLogger();
  }

  @Test
  public void test5()  throws Throwable  {
      SubstituteLogger substituteLogger0 = new SubstituteLogger(".Y#T");
      AtMostOnceLogger.warn(substituteLogger0, ".Y#T");
  }

  @Test
  public void test6()  throws Throwable  {
      SubstituteLogger substituteLogger0 = new SubstituteLogger("/>.k%'eu<[1X\"l5gmt`");
      AtMostOnceLogger.error(substituteLogger0, "/>.k%'eu<[1X\"l5gmt`");
  }
}

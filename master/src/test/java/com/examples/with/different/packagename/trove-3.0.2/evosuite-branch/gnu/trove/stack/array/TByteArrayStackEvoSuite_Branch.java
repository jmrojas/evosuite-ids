/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.stack.array;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.stack.TByteStack;
import gnu.trove.stack.array.TByteArrayStack;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TByteArrayStackEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 1 covered goal:
   * 1 gnu.trove.stack.array.TByteArrayStack.<init>(IB)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TByteArrayStack tByteArrayStack0 = null;
      try {
        tByteArrayStack0 = new TByteArrayStack((int) (byte) (-63), (byte)0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * 1 gnu.trove.stack.array.TByteArrayStack.writeExternal(Ljava/io/ObjectOutput;)V: root-Branch
   * 2 gnu.trove.stack.array.TByteArrayStack.<init>()V: root-Branch
   * 3 gnu.trove.stack.array.TByteArrayStack.<init>(I)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TByteArrayStack tByteArrayStack0 = new TByteArrayStack();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tByteArrayStack0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals("\uFFFD\uFFFD\u0000\u0005w\u0001\u0000sr\u0000#gnu.trove.list.array.TByteArrayList\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\f\u0000\u0000xpw\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000x", byteArrayOutputStream0.toString());
      assertEquals(82, byteArrayOutputStream0.size());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.stack.array.TByteArrayStack.getNoEntryValue()B: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TByteArrayStack tByteArrayStack0 = new TByteArrayStack(0);
      byte byte0 = tByteArrayStack0.getNoEntryValue();
      assertEquals((byte)0, byte0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.stack.array.TByteArrayStack.peek()B: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TByteArrayStack tByteArrayStack0 = new TByteArrayStack(0);
      // Undeclared exception!
      try {
        tByteArrayStack0.peek();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.stack.array.TByteArrayStack.clear()V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TByteArrayStack tByteArrayStack0 = new TByteArrayStack();
      tByteArrayStack0.clear();
      assertEquals(0, tByteArrayStack0.size());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.stack.array.TByteArrayStack.pop()B: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TByteArrayStack tByteArrayStack0 = new TByteArrayStack();
      // Undeclared exception!
      try {
        tByteArrayStack0.pop();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
      }
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.stack.array.TByteArrayStack.readExternal(Ljava/io/ObjectInput;)V: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TByteArrayStack tByteArrayStack0 = new TByteArrayStack(693);
      // Undeclared exception!
      try {
        tByteArrayStack0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.stack.array.TByteArrayStack.hashCode()I: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TByteArrayStack tByteArrayStack0 = new TByteArrayStack(693);
      int int0 = tByteArrayStack0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 8
  /*
   * 8 covered goals:
   * 1 gnu.trove.stack.array.TByteArrayStack.swap([BII)V: root-Branch
   * 2 gnu.trove.stack.array.TByteArrayStack.reverse([BII)V: I4 Branch 4 IF_ICMPNE L205 - true
   * 3 gnu.trove.stack.array.TByteArrayStack.reverse([BII)V: I12 Branch 5 IF_ICMPLE L208 - true
   * 4 gnu.trove.stack.array.TByteArrayStack.reverse([BII)V: I32 Branch 6 IF_ICMPGE L211 - true
   * 5 gnu.trove.stack.array.TByteArrayStack.reverse([BII)V: I32 Branch 6 IF_ICMPGE L211 - false
   * 6 gnu.trove.stack.array.TByteArrayStack.push(B)V: root-Branch
   * 7 gnu.trove.stack.array.TByteArrayStack.toArray()[B: root-Branch
   * 8 gnu.trove.stack.array.TByteArrayStack.size()I: root-Branch
   */

//   @Test
//   public void test8()  throws Throwable  {
//       TByteArrayStack tByteArrayStack0 = new TByteArrayStack(0);
//       tByteArrayStack0.push((byte) (-63));
//       tByteArrayStack0.push((byte) (-63));
//       byte[] byteArray0 = tByteArrayStack0.toArray();
//       assertNotNull(byteArray0);
//       assertEquals(2, tByteArrayStack0.size());
//       assertEquals(-63, tByteArrayStack0.peek());
//   }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.stack.array.TByteArrayStack.<init>(Lgnu/trove/stack/TByteStack;)V: I8 Branch 1 IFEQ L90 - true
   */

  @Test
  public void test9()  throws Throwable  {
      TByteArrayStack tByteArrayStack0 = null;
      try {
        tByteArrayStack0 = new TByteArrayStack((TByteStack) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Only support TByteArrayStack
         //
      }
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.stack.array.TByteArrayStack.<init>(Lgnu/trove/stack/TByteStack;)V: I8 Branch 1 IFEQ L90 - false
   */

//   @Test
//   public void test10()  throws Throwable  {
//       TByteArrayStack tByteArrayStack0 = new TByteArrayStack();
//       TByteArrayStack tByteArrayStack1 = new TByteArrayStack((TByteStack) tByteArrayStack0);
//       assertEquals(0, tByteArrayStack1.getNoEntryValue());
//   }

  //Test case number: 11
  /*
   * 4 covered goals:
   * 1 gnu.trove.stack.array.TByteArrayStack.toArray([B)V: I15 Branch 2 IFGE L184 - true
   * 2 gnu.trove.stack.array.TByteArrayStack.toArray([B)V: I48 Branch 3 IF_ICMPLE L191 - true
   * 3 gnu.trove.stack.array.TByteArrayStack.toArray()[B: root-Branch
   * 4 gnu.trove.stack.array.TByteArrayStack.reverse([BII)V: I4 Branch 4 IF_ICMPNE L205 - false
   */

  @Test
  public void test11()  throws Throwable  {
      TByteArrayStack tByteArrayStack0 = new TByteArrayStack(0);
      byte[] byteArray0 = tByteArrayStack0.toArray();
      tByteArrayStack0.toArray(byteArray0);
      assertEquals(0, tByteArrayStack0.size());
  }

  //Test case number: 12
  /*
   * 3 covered goals:
   * 1 gnu.trove.stack.array.TByteArrayStack.toArray([B)V: I15 Branch 2 IFGE L184 - false
   * 2 gnu.trove.stack.array.TByteArrayStack.toArray([B)V: I48 Branch 3 IF_ICMPLE L191 - false
   * 3 gnu.trove.stack.array.TByteArrayStack.reverse([BII)V: I4 Branch 4 IF_ICMPNE L205 - false
   */

  @Test
  public void test12()  throws Throwable  {
      TByteArrayStack tByteArrayStack0 = new TByteArrayStack();
      byte[] byteArray0 = new byte[2];
      tByteArrayStack0.toArray(byteArray0);
      assertEquals("{}", tByteArrayStack0.toString());
  }

  //Test case number: 13
  /*
   * 3 covered goals:
   * 1 gnu.trove.stack.array.TByteArrayStack.toString()Ljava/lang/String;: I17 Branch 7 IFLE L238 - true
   * 2 gnu.trove.stack.array.TByteArrayStack.toString()Ljava/lang/String;: I41 Branch 8 IFLE L242 - true
   * 3 gnu.trove.stack.array.TByteArrayStack.<init>()V: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TByteArrayStack tByteArrayStack0 = new TByteArrayStack();
      String string0 = tByteArrayStack0.toString();
      assertEquals("{}", string0);
      assertNotNull(string0);
  }

  //Test case number: 14
  /*
   * 5 covered goals:
   * 1 gnu.trove.stack.array.TByteArrayStack.toString()Ljava/lang/String;: I17 Branch 7 IFLE L238 - false
   * 2 gnu.trove.stack.array.TByteArrayStack.toString()Ljava/lang/String;: I41 Branch 8 IFLE L242 - false
   * 3 gnu.trove.stack.array.TByteArrayStack.push(B)V: root-Branch
   * 4 gnu.trove.stack.array.TByteArrayStack.size()I: root-Branch
   * 5 gnu.trove.stack.array.TByteArrayStack.toString()Ljava/lang/String;: I17 Branch 7 IFLE L238 - true
   */

  @Test
  public void test14()  throws Throwable  {
      TByteArrayStack tByteArrayStack0 = new TByteArrayStack(0);
      tByteArrayStack0.push((byte) (-63));
      tByteArrayStack0.push((byte) (-63));
      String string0 = tByteArrayStack0.toString();
      assertEquals(2, tByteArrayStack0.size());
      assertNotNull(string0);
      assertEquals("{-63, -63}", string0);
  }

  //Test case number: 15
  /*
   * 2 covered goals:
   * 1 gnu.trove.stack.array.TByteArrayStack.equals(Ljava/lang/Object;)Z: I4 Branch 9 IF_ACMPNE L251 - true
   * 2 gnu.trove.stack.array.TByteArrayStack.equals(Ljava/lang/Object;)Z: I12 Branch 10 IFNULL L254 - true
   */

  @Test
  public void test15()  throws Throwable  {
      TByteArrayStack tByteArrayStack0 = new TByteArrayStack(0);
      boolean boolean0 = tByteArrayStack0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 16
  /*
   * 3 covered goals:
   * 1 gnu.trove.stack.array.TByteArrayStack.equals(Ljava/lang/Object;)Z: I12 Branch 10 IFNULL L254 - false
   * 2 gnu.trove.stack.array.TByteArrayStack.equals(Ljava/lang/Object;)Z: I17 Branch 11 IF_ACMPEQ L254 - false
   * 3 gnu.trove.stack.array.TByteArrayStack.equals(Ljava/lang/Object;)Z: I4 Branch 9 IF_ACMPNE L251 - true
   */

  @Test
  public void test16()  throws Throwable  {
      TByteArrayStack tByteArrayStack0 = new TByteArrayStack(0);
      boolean boolean0 = tByteArrayStack0.equals((Object) "{-63, -63}");
      assertEquals(false, boolean0);
  }

  //Test case number: 17
  /*
   * 4 covered goals:
   * 1 gnu.trove.stack.array.TByteArrayStack.equals(Ljava/lang/Object;)Z: I17 Branch 11 IF_ACMPEQ L254 - true
   * 2 gnu.trove.stack.array.TByteArrayStack.<init>(I)V: root-Branch
   * 3 gnu.trove.stack.array.TByteArrayStack.equals(Ljava/lang/Object;)Z: I4 Branch 9 IF_ACMPNE L251 - false
   * 4 gnu.trove.stack.array.TByteArrayStack.equals(Ljava/lang/Object;)Z: I12 Branch 10 IFNULL L254 - false
   */

  @Test
  public void test17()  throws Throwable  {
      TByteArrayStack tByteArrayStack0 = new TByteArrayStack(1);
      TByteArrayStack tByteArrayStack1 = new TByteArrayStack(1);
      boolean boolean0 = tByteArrayStack0.equals((Object) tByteArrayStack1);
      assertEquals(true, boolean0);
  }
}

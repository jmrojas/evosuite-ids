/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TDoubleFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCollection;
import gnu.trove.map.TCharDoubleMap;
import gnu.trove.map.hash.TCharDoubleHashMap;
import gnu.trove.procedure.TCharDoubleProcedure;
import gnu.trove.procedure.TCharProcedure;
import gnu.trove.procedure.TDoubleProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableCharDoubleMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.size()I: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.iterator()Lgnu/trove/iterator/TCharDoubleIterator;: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap$1.hasNext()Z: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableCharDoubleMap;)V: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap$1.key()C: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap$1.value()D: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap$1.advance()V: root-Branch
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.<init>(Lgnu/trove/map/TCharDoubleMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      char[] charArray0 = new char[10];
      double[] doubleArray0 = new double[6];
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(charArray0, doubleArray0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      TCharDoubleHashMap tCharDoubleHashMap1 = new TCharDoubleHashMap((TCharDoubleMap) tUnmodifiableCharDoubleMap0);
      assertEquals(1, tUnmodifiableCharDoubleMap0.size());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.putIfAbsent(CD)D: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap((int) '_');
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableCharDoubleMap0.putIfAbsent('_', '_');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.putAll(Lgnu/trove/map/TCharDoubleMap;)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap((-1929), (float) (-1929), 'M', (double) (-1929));
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableCharDoubleMap0.putAll((TCharDoubleMap) tCharDoubleHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap((-1407), (-1407));
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      boolean boolean0 = tUnmodifiableCharDoubleMap0.forEachValue((TDoubleProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.adjustValue(CD)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap();
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableCharDoubleMap0.adjustValue('\u001F', '\u001F');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.keys([C)[C: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap();
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      char[] charArray0 = tUnmodifiableCharDoubleMap0.keys(tCharDoubleHashMap0._set);
      assertNotNull(charArray0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap((-1084), (-1084));
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      String string0 = tUnmodifiableCharDoubleMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.getNoEntryValue()D: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(8);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      double double0 = tUnmodifiableCharDoubleMap0.getNoEntryValue();
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.keys()[C: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap((-512), (-512));
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      char[] charArray0 = tUnmodifiableCharDoubleMap0.keys();
      assertNotNull(charArray0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.getNoEntryKey()C: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap((-512), (-512));
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      char char0 = tUnmodifiableCharDoubleMap0.getNoEntryKey();
      assertEquals('\u0000', char0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap();
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      boolean boolean0 = tUnmodifiableCharDoubleMap0.forEachKey((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.put(CD)D: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(8);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableCharDoubleMap0.put('\u0086', '\u0086');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.get(C)D: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap((-1084), (-1084));
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      double double0 = tUnmodifiableCharDoubleMap0.get('[');
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.forEachEntry(Lgnu/trove/procedure/TCharDoubleProcedure;)Z: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap();
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      boolean boolean0 = tUnmodifiableCharDoubleMap0.forEachEntry((TCharDoubleProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap((-1084), (-1084));
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableCharDoubleMap0.transformValues((TDoubleFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.increment(C)Z: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap((-1903), (-1903));
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableCharDoubleMap0.increment('#');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.values([D)[D: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(0, 0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      double[] doubleArray0 = new double[8];
      double[] doubleArray1 = tUnmodifiableCharDoubleMap0.values(doubleArray0);
      assertSame(doubleArray0, doubleArray1);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap((-512), (-512));
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      boolean boolean0 = tUnmodifiableCharDoubleMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap();
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      HashMap<Character, Double> hashMap0 = new HashMap<Character, Double>();
      // Undeclared exception!
      try {
        tUnmodifiableCharDoubleMap0.putAll((Map<? extends Character, ? extends Double>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.adjustOrPutValue(CDD)D: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[10];
      double[] doubleArray0 = new double[6];
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(charArray0, doubleArray0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableCharDoubleMap0.adjustOrPutValue('\u0000', 0.0, (double) (-746));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.retainEntries(Lgnu/trove/procedure/TCharDoubleProcedure;)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap();
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableCharDoubleMap0.retainEntries((TCharDoubleProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.containsKey(C)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap((-512), (-512));
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      boolean boolean0 = tUnmodifiableCharDoubleMap0.containsKey('G');
      assertEquals(false, boolean0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.containsValue(D)Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap((-512), (-512));
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      boolean boolean0 = tUnmodifiableCharDoubleMap0.containsValue((double) (-512));
      assertEquals(false, boolean0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.clear()V: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableCharDoubleMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.hashCode()I: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap();
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      int int0 = tUnmodifiableCharDoubleMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.values()[D: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[10];
      double[] doubleArray0 = new double[6];
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(charArray0, doubleArray0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      double[] doubleArray1 = tUnmodifiableCharDoubleMap0.values();
      assertFalse(doubleArray0.equals(doubleArray1));
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.remove(C)D: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap((-1407), (-1407));
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableCharDoubleMap0.remove(']');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.<init>(Lgnu/trove/map/TCharDoubleMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = null;
      try {
        tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.keySet()Lgnu/trove/set/TCharSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.keySet()Lgnu/trove/set/TCharSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap((-512), (-512));
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      TUnmodifiableCharSet tUnmodifiableCharSet0 = (TUnmodifiableCharSet)tUnmodifiableCharDoubleMap0.keySet();
      assertNotNull(tUnmodifiableCharSet0);
      
      TUnmodifiableCharSet tUnmodifiableCharSet1 = (TUnmodifiableCharSet)tUnmodifiableCharDoubleMap0.keySet();
      assertSame(tUnmodifiableCharSet1, tUnmodifiableCharSet0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap();
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      TUnmodifiableDoubleCollection tUnmodifiableDoubleCollection0 = (TUnmodifiableDoubleCollection)tUnmodifiableCharDoubleMap0.valueCollection();
      assertNotNull(tUnmodifiableDoubleCollection0);
      
      TUnmodifiableDoubleCollection tUnmodifiableDoubleCollection1 = (TUnmodifiableDoubleCollection)tUnmodifiableCharDoubleMap0.valueCollection();
      assertSame(tUnmodifiableDoubleCollection1, tUnmodifiableDoubleCollection0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap.<init>(Lgnu/trove/map/TCharDoubleMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap((-1929), (float) (-1929), 'M', (double) (-1929));
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      boolean boolean0 = tUnmodifiableCharDoubleMap0.equals((Object) "{}");
      assertEquals(false, boolean0);
  }
}

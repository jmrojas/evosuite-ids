/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedFloatList;
import gnu.trove.impl.sync.TSynchronizedRandomAccessFloatList;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessFloatList;
import gnu.trove.list.TFloatList;
import gnu.trove.list.array.TFloatArrayList;
import gnu.trove.list.linked.TFloatLinkedList;
import gnu.trove.set.hash.TFloatHashSet;
import java.util.Stack;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedFloatListEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 11 covered goals:
   * 1 Weak Mutation 2: gnu.trove.impl.sync.TSynchronizedFloatList.equals(Ljava/lang/Object;)Z:69 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 3: gnu.trove.impl.sync.TSynchronizedFloatList.equals(Ljava/lang/Object;)Z:69 - DeleteField: listLgnu/trove/list/TFloatList;
   * 3 Weak Mutation 4: gnu.trove.impl.sync.TSynchronizedFloatList.equals(Ljava/lang/Object;)Z:69 - ReplaceVariable o -> mutex
   * 4 Weak Mutation 5: gnu.trove.impl.sync.TSynchronizedFloatList.equals(Ljava/lang/Object;)Z:69 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 5 gnu.trove.impl.sync.TSynchronizedFloatList.equals(Ljava/lang/Object;)Z: root-Branch
   * 6 Weak Mutation 0: gnu.trove.impl.sync.TSynchronizedFloatList.<init>(Lgnu/trove/list/TFloatList;)V:61 - ReplaceVariable list -> list
   * 7 Weak Mutation 2: gnu.trove.impl.sync.TSynchronizedFloatList.equals(Ljava/lang/Object;)Z:69 - DeleteField: mutexLjava/lang/Object;
   * 8 Weak Mutation 3: gnu.trove.impl.sync.TSynchronizedFloatList.equals(Ljava/lang/Object;)Z:69 - DeleteField: listLgnu/trove/list/TFloatList;
   * 9 Weak Mutation 4: gnu.trove.impl.sync.TSynchronizedFloatList.equals(Ljava/lang/Object;)Z:69 - ReplaceVariable o -> mutex
   * 10 Weak Mutation 5: gnu.trove.impl.sync.TSynchronizedFloatList.equals(Ljava/lang/Object;)Z:69 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 11 gnu.trove.impl.sync.TSynchronizedFloatList.<init>(Lgnu/trove/list/TFloatList;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList0);
      boolean boolean0 = tSynchronizedRandomAccessFloatList0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 1
  /*
   * 7 covered goals:
   * 1 Weak Mutation 6: gnu.trove.impl.sync.TSynchronizedFloatList.hashCode()I:72 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 7: gnu.trove.impl.sync.TSynchronizedFloatList.hashCode()I:72 - DeleteField: listLgnu/trove/list/TFloatList;
   * 3 Weak Mutation 8: gnu.trove.impl.sync.TSynchronizedFloatList.hashCode()I:72 - DeleteStatement: hashCode()I
   * 4 gnu.trove.impl.sync.TSynchronizedFloatList.hashCode()I: root-Branch
   * 5 Weak Mutation 6: gnu.trove.impl.sync.TSynchronizedFloatList.hashCode()I:72 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 7: gnu.trove.impl.sync.TSynchronizedFloatList.hashCode()I:72 - DeleteField: listLgnu/trove/list/TFloatList;
   * 7 Weak Mutation 8: gnu.trove.impl.sync.TSynchronizedFloatList.hashCode()I:72 - DeleteStatement: hashCode()I
   */

  @Test
  public void test1()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(0.0F);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList0);
      int int0 = tSynchronizedRandomAccessFloatList0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 2
  /*
   * 13 covered goals:
   * 1 Weak Mutation 9: gnu.trove.impl.sync.TSynchronizedFloatList.get(I)F:76 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 10: gnu.trove.impl.sync.TSynchronizedFloatList.get(I)F:76 - DeleteField: listLgnu/trove/list/TFloatList;
   * 3 Weak Mutation 11: gnu.trove.impl.sync.TSynchronizedFloatList.get(I)F:76 - InsertUnaryOp Negation of index
   * 4 Weak Mutation 12: gnu.trove.impl.sync.TSynchronizedFloatList.get(I)F:76 - InsertUnaryOp IINC 1 index
   * 5 Weak Mutation 13: gnu.trove.impl.sync.TSynchronizedFloatList.get(I)F:76 - InsertUnaryOp IINC -1 index
   * 6 Weak Mutation 14: gnu.trove.impl.sync.TSynchronizedFloatList.get(I)F:76 - DeleteStatement: get(I)F
   * 7 gnu.trove.impl.sync.TSynchronizedFloatList.get(I)F: root-Branch
   * 8 Weak Mutation 9: gnu.trove.impl.sync.TSynchronizedFloatList.get(I)F:76 - DeleteField: mutexLjava/lang/Object;
   * 9 Weak Mutation 10: gnu.trove.impl.sync.TSynchronizedFloatList.get(I)F:76 - DeleteField: listLgnu/trove/list/TFloatList;
   * 10 Weak Mutation 11: gnu.trove.impl.sync.TSynchronizedFloatList.get(I)F:76 - InsertUnaryOp Negation of index
   * 11 Weak Mutation 12: gnu.trove.impl.sync.TSynchronizedFloatList.get(I)F:76 - InsertUnaryOp IINC 1 index
   * 12 Weak Mutation 13: gnu.trove.impl.sync.TSynchronizedFloatList.get(I)F:76 - InsertUnaryOp IINC -1 index
   * 13 Weak Mutation 14: gnu.trove.impl.sync.TSynchronizedFloatList.get(I)F:76 - DeleteStatement: get(I)F
   */

//   @Test
//   public void test2()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
//       TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList0);
//       float float0 = tSynchronizedRandomAccessFloatList0.get(0);
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 3
  /*
   * 15 covered goals:
   * 1 Weak Mutation 15: gnu.trove.impl.sync.TSynchronizedFloatList.set(IF)F:79 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 17: gnu.trove.impl.sync.TSynchronizedFloatList.set(IF)F:79 - InsertUnaryOp Negation of index
   * 3 Weak Mutation 16: gnu.trove.impl.sync.TSynchronizedFloatList.set(IF)F:79 - DeleteField: listLgnu/trove/list/TFloatList;
   * 4 Weak Mutation 19: gnu.trove.impl.sync.TSynchronizedFloatList.set(IF)F:79 - InsertUnaryOp IINC -1 index
   * 5 Weak Mutation 18: gnu.trove.impl.sync.TSynchronizedFloatList.set(IF)F:79 - InsertUnaryOp IINC 1 index
   * 6 Weak Mutation 21: gnu.trove.impl.sync.TSynchronizedFloatList.set(IF)F:79 - DeleteStatement: set(IF)F
   * 7 Weak Mutation 20: gnu.trove.impl.sync.TSynchronizedFloatList.set(IF)F:79 - InsertUnaryOp Negation of element
   * 8 gnu.trove.impl.sync.TSynchronizedFloatList.set(IF)F: root-Branch
   * 9 Weak Mutation 15: gnu.trove.impl.sync.TSynchronizedFloatList.set(IF)F:79 - DeleteField: mutexLjava/lang/Object;
   * 10 Weak Mutation 17: gnu.trove.impl.sync.TSynchronizedFloatList.set(IF)F:79 - InsertUnaryOp Negation of index
   * 11 Weak Mutation 16: gnu.trove.impl.sync.TSynchronizedFloatList.set(IF)F:79 - DeleteField: listLgnu/trove/list/TFloatList;
   * 12 Weak Mutation 19: gnu.trove.impl.sync.TSynchronizedFloatList.set(IF)F:79 - InsertUnaryOp IINC -1 index
   * 13 Weak Mutation 18: gnu.trove.impl.sync.TSynchronizedFloatList.set(IF)F:79 - InsertUnaryOp IINC 1 index
   * 14 Weak Mutation 21: gnu.trove.impl.sync.TSynchronizedFloatList.set(IF)F:79 - DeleteStatement: set(IF)F
   * 15 Weak Mutation 20: gnu.trove.impl.sync.TSynchronizedFloatList.set(IF)F:79 - InsertUnaryOp Negation of element
   */

  @Test
  public void test3()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(0.0F);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessFloatList0.set(0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // at offset 0
         //
      }
  }

  //Test case number: 4
  /*
   * 13 covered goals:
   * 1 Weak Mutation 23: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[F)V:82 - DeleteField: listLgnu/trove/list/TFloatList;
   * 2 Weak Mutation 22: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[F)V:82 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 25: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[F)V:82 - InsertUnaryOp IINC 1 offset
   * 4 Weak Mutation 24: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[F)V:82 - InsertUnaryOp Negation of offset
   * 5 Weak Mutation 27: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[F)V:82 - DeleteStatement: set(I[F)V
   * 6 Weak Mutation 26: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[F)V:82 - InsertUnaryOp IINC -1 offset
   * 7 gnu.trove.impl.sync.TSynchronizedFloatList.set(I[F)V: root-Branch
   * 8 Weak Mutation 23: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[F)V:82 - DeleteField: listLgnu/trove/list/TFloatList;
   * 9 Weak Mutation 22: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[F)V:82 - DeleteField: mutexLjava/lang/Object;
   * 10 Weak Mutation 25: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[F)V:82 - InsertUnaryOp IINC 1 offset
   * 11 Weak Mutation 24: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[F)V:82 - InsertUnaryOp Negation of offset
   * 12 Weak Mutation 27: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[F)V:82 - DeleteStatement: set(I[F)V
   * 13 Weak Mutation 26: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[F)V:82 - InsertUnaryOp IINC -1 offset
   */

  @Test
  public void test4()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      TSynchronizedFloatList tSynchronizedFloatList0 = new TSynchronizedFloatList((TFloatList) tUnmodifiableRandomAccessFloatList0);
      float[] floatArray0 = new float[2];
      // Undeclared exception!
      try {
        tSynchronizedFloatList0.set((-1751), floatArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 39 covered goals:
   * 1 Weak Mutation 29: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - DeleteField: listLgnu/trove/list/TFloatList;
   * 2 Weak Mutation 28: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 31: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - ReplaceVariable offset -> length
   * 4 Weak Mutation 30: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - ReplaceVariable offset -> valOffset
   * 5 Weak Mutation 34: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - InsertUnaryOp IINC -1 offset
   * 6 Weak Mutation 35: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - ReplaceVariable valOffset -> length
   * 7 Weak Mutation 32: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - InsertUnaryOp Negation of offset
   * 8 Weak Mutation 33: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - InsertUnaryOp IINC 1 offset
   * 9 Weak Mutation 38: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - InsertUnaryOp IINC 1 valOffset
   * 10 Weak Mutation 39: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - InsertUnaryOp IINC -1 valOffset
   * 11 Weak Mutation 36: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - ReplaceVariable valOffset -> offset
   * 12 Weak Mutation 37: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - InsertUnaryOp Negation of valOffset
   * 13 Weak Mutation 42: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - InsertUnaryOp Negation of length
   * 14 Weak Mutation 43: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - InsertUnaryOp IINC 1 length
   * 15 Weak Mutation 40: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - ReplaceVariable length -> valOffset
   * 16 Weak Mutation 41: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - ReplaceVariable length -> offset
   * 17 Weak Mutation 44: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - InsertUnaryOp IINC -1 length
   * 18 Weak Mutation 45: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - DeleteStatement: set(I[FII)V
   * 19 gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V: root-Branch
   * 20 Weak Mutation 1: gnu.trove.impl.sync.TSynchronizedFloatList.<init>(Lgnu/trove/list/TFloatList;Ljava/lang/Object;)V:65 - ReplaceVariable list -> list
   * 21 Weak Mutation 29: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - DeleteField: listLgnu/trove/list/TFloatList;
   * 22 Weak Mutation 28: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - DeleteField: mutexLjava/lang/Object;
   * 23 Weak Mutation 31: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - ReplaceVariable offset -> length
   * 24 Weak Mutation 30: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - ReplaceVariable offset -> valOffset
   * 25 Weak Mutation 34: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - InsertUnaryOp IINC -1 offset
   * 26 Weak Mutation 35: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - ReplaceVariable valOffset -> length
   * 27 Weak Mutation 32: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - InsertUnaryOp Negation of offset
   * 28 Weak Mutation 33: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - InsertUnaryOp IINC 1 offset
   * 29 Weak Mutation 38: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - InsertUnaryOp IINC 1 valOffset
   * 30 Weak Mutation 39: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - InsertUnaryOp IINC -1 valOffset
   * 31 Weak Mutation 36: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - ReplaceVariable valOffset -> offset
   * 32 Weak Mutation 37: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - InsertUnaryOp Negation of valOffset
   * 33 Weak Mutation 42: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - InsertUnaryOp Negation of length
   * 34 Weak Mutation 43: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - InsertUnaryOp IINC 1 length
   * 35 Weak Mutation 40: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - ReplaceVariable length -> valOffset
   * 36 Weak Mutation 41: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - ReplaceVariable length -> offset
   * 37 Weak Mutation 44: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - InsertUnaryOp IINC -1 length
   * 38 Weak Mutation 45: gnu.trove.impl.sync.TSynchronizedFloatList.set(I[FII)V:85 - DeleteStatement: set(I[FII)V
   * 39 gnu.trove.impl.sync.TSynchronizedFloatList.<init>(Lgnu/trove/list/TFloatList;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      float[] floatArray0 = new float[3];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList0);
      TSynchronizedFloatList tSynchronizedFloatList0 = new TSynchronizedFloatList((TFloatList) tUnmodifiableFloatList0, (Object) "");
      // Undeclared exception!
      try {
        tSynchronizedFloatList0.set(0, floatArray0, 756, 1096696463);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 15 covered goals:
   * 1 Weak Mutation 46: gnu.trove.impl.sync.TSynchronizedFloatList.replace(IF)F:89 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 47: gnu.trove.impl.sync.TSynchronizedFloatList.replace(IF)F:89 - DeleteField: listLgnu/trove/list/TFloatList;
   * 3 Weak Mutation 51: gnu.trove.impl.sync.TSynchronizedFloatList.replace(IF)F:89 - InsertUnaryOp Negation of val
   * 4 Weak Mutation 50: gnu.trove.impl.sync.TSynchronizedFloatList.replace(IF)F:89 - InsertUnaryOp IINC -1 offset
   * 5 Weak Mutation 49: gnu.trove.impl.sync.TSynchronizedFloatList.replace(IF)F:89 - InsertUnaryOp IINC 1 offset
   * 6 Weak Mutation 48: gnu.trove.impl.sync.TSynchronizedFloatList.replace(IF)F:89 - InsertUnaryOp Negation of offset
   * 7 Weak Mutation 52: gnu.trove.impl.sync.TSynchronizedFloatList.replace(IF)F:89 - DeleteStatement: replace(IF)F
   * 8 gnu.trove.impl.sync.TSynchronizedFloatList.replace(IF)F: root-Branch
   * 9 Weak Mutation 46: gnu.trove.impl.sync.TSynchronizedFloatList.replace(IF)F:89 - DeleteField: mutexLjava/lang/Object;
   * 10 Weak Mutation 47: gnu.trove.impl.sync.TSynchronizedFloatList.replace(IF)F:89 - DeleteField: listLgnu/trove/list/TFloatList;
   * 11 Weak Mutation 51: gnu.trove.impl.sync.TSynchronizedFloatList.replace(IF)F:89 - InsertUnaryOp Negation of val
   * 12 Weak Mutation 50: gnu.trove.impl.sync.TSynchronizedFloatList.replace(IF)F:89 - InsertUnaryOp IINC -1 offset
   * 13 Weak Mutation 49: gnu.trove.impl.sync.TSynchronizedFloatList.replace(IF)F:89 - InsertUnaryOp IINC 1 offset
   * 14 Weak Mutation 48: gnu.trove.impl.sync.TSynchronizedFloatList.replace(IF)F:89 - InsertUnaryOp Negation of offset
   * 15 Weak Mutation 52: gnu.trove.impl.sync.TSynchronizedFloatList.replace(IF)F:89 - DeleteStatement: replace(IF)F
   */

  @Test
  public void test6()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessFloatList0.replace(1208, 1.0F);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // index 1208 exceeds size 0
         //
      }
  }

  //Test case number: 7
  /*
   * 19 covered goals:
   * 1 Weak Mutation 54: gnu.trove.impl.sync.TSynchronizedFloatList.remove(II)V:92 - DeleteField: listLgnu/trove/list/TFloatList;
   * 2 Weak Mutation 53: gnu.trove.impl.sync.TSynchronizedFloatList.remove(II)V:92 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 58: gnu.trove.impl.sync.TSynchronizedFloatList.remove(II)V:92 - InsertUnaryOp IINC -1 offset
   * 4 Weak Mutation 57: gnu.trove.impl.sync.TSynchronizedFloatList.remove(II)V:92 - InsertUnaryOp IINC 1 offset
   * 5 Weak Mutation 56: gnu.trove.impl.sync.TSynchronizedFloatList.remove(II)V:92 - InsertUnaryOp Negation of offset
   * 6 Weak Mutation 63: gnu.trove.impl.sync.TSynchronizedFloatList.remove(II)V:92 - DeleteStatement: remove(II)V
   * 7 Weak Mutation 62: gnu.trove.impl.sync.TSynchronizedFloatList.remove(II)V:92 - InsertUnaryOp IINC -1 length
   * 8 Weak Mutation 61: gnu.trove.impl.sync.TSynchronizedFloatList.remove(II)V:92 - InsertUnaryOp IINC 1 length
   * 9 Weak Mutation 60: gnu.trove.impl.sync.TSynchronizedFloatList.remove(II)V:92 - InsertUnaryOp Negation of length
   * 10 gnu.trove.impl.sync.TSynchronizedFloatList.remove(II)V: root-Branch
   * 11 Weak Mutation 54: gnu.trove.impl.sync.TSynchronizedFloatList.remove(II)V:92 - DeleteField: listLgnu/trove/list/TFloatList;
   * 12 Weak Mutation 53: gnu.trove.impl.sync.TSynchronizedFloatList.remove(II)V:92 - DeleteField: mutexLjava/lang/Object;
   * 13 Weak Mutation 58: gnu.trove.impl.sync.TSynchronizedFloatList.remove(II)V:92 - InsertUnaryOp IINC -1 offset
   * 14 Weak Mutation 57: gnu.trove.impl.sync.TSynchronizedFloatList.remove(II)V:92 - InsertUnaryOp IINC 1 offset
   * 15 Weak Mutation 56: gnu.trove.impl.sync.TSynchronizedFloatList.remove(II)V:92 - InsertUnaryOp Negation of offset
   * 16 Weak Mutation 63: gnu.trove.impl.sync.TSynchronizedFloatList.remove(II)V:92 - DeleteStatement: remove(II)V
   * 17 Weak Mutation 62: gnu.trove.impl.sync.TSynchronizedFloatList.remove(II)V:92 - InsertUnaryOp IINC -1 length
   * 18 Weak Mutation 61: gnu.trove.impl.sync.TSynchronizedFloatList.remove(II)V:92 - InsertUnaryOp IINC 1 length
   * 19 Weak Mutation 60: gnu.trove.impl.sync.TSynchronizedFloatList.remove(II)V:92 - InsertUnaryOp Negation of length
   */

  @Test
  public void test7()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(1680.996F);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessFloatList0.remove(327, 327);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no elemenet at 327
         //
      }
  }

  //Test case number: 8
  /*
   * 13 covered goals:
   * 1 Weak Mutation 68: gnu.trove.impl.sync.TSynchronizedFloatList.removeAt(I)F:95 - InsertUnaryOp IINC -1 offset
   * 2 Weak Mutation 69: gnu.trove.impl.sync.TSynchronizedFloatList.removeAt(I)F:95 - DeleteStatement: removeAt(I)F
   * 3 Weak Mutation 64: gnu.trove.impl.sync.TSynchronizedFloatList.removeAt(I)F:95 - DeleteField: mutexLjava/lang/Object;
   * 4 Weak Mutation 65: gnu.trove.impl.sync.TSynchronizedFloatList.removeAt(I)F:95 - DeleteField: listLgnu/trove/list/TFloatList;
   * 5 Weak Mutation 66: gnu.trove.impl.sync.TSynchronizedFloatList.removeAt(I)F:95 - InsertUnaryOp Negation of offset
   * 6 Weak Mutation 67: gnu.trove.impl.sync.TSynchronizedFloatList.removeAt(I)F:95 - InsertUnaryOp IINC 1 offset
   * 7 gnu.trove.impl.sync.TSynchronizedFloatList.removeAt(I)F: root-Branch
   * 8 Weak Mutation 68: gnu.trove.impl.sync.TSynchronizedFloatList.removeAt(I)F:95 - InsertUnaryOp IINC -1 offset
   * 9 Weak Mutation 69: gnu.trove.impl.sync.TSynchronizedFloatList.removeAt(I)F:95 - DeleteStatement: removeAt(I)F
   * 10 Weak Mutation 64: gnu.trove.impl.sync.TSynchronizedFloatList.removeAt(I)F:95 - DeleteField: mutexLjava/lang/Object;
   * 11 Weak Mutation 65: gnu.trove.impl.sync.TSynchronizedFloatList.removeAt(I)F:95 - DeleteField: listLgnu/trove/list/TFloatList;
   * 12 Weak Mutation 66: gnu.trove.impl.sync.TSynchronizedFloatList.removeAt(I)F:95 - InsertUnaryOp Negation of offset
   * 13 Weak Mutation 67: gnu.trove.impl.sync.TSynchronizedFloatList.removeAt(I)F:95 - InsertUnaryOp IINC 1 offset
   */

  @Test
  public void test8()  throws Throwable  {
      float[] floatArray0 = new float[7];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessFloatList0.removeAt(129);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 129
         //
      }
  }

  //Test case number: 9
  /*
   * 7 covered goals:
   * 1 Weak Mutation 70: gnu.trove.impl.sync.TSynchronizedFloatList.add([F)V:99 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 71: gnu.trove.impl.sync.TSynchronizedFloatList.add([F)V:99 - DeleteField: listLgnu/trove/list/TFloatList;
   * 3 Weak Mutation 72: gnu.trove.impl.sync.TSynchronizedFloatList.add([F)V:99 - DeleteStatement: add([F)V
   * 4 gnu.trove.impl.sync.TSynchronizedFloatList.add([F)V: root-Branch
   * 5 Weak Mutation 70: gnu.trove.impl.sync.TSynchronizedFloatList.add([F)V:99 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 71: gnu.trove.impl.sync.TSynchronizedFloatList.add([F)V:99 - DeleteField: listLgnu/trove/list/TFloatList;
   * 7 Weak Mutation 72: gnu.trove.impl.sync.TSynchronizedFloatList.add([F)V:99 - DeleteStatement: add([F)V
   */

  @Test
  public void test9()  throws Throwable  {
      float[] floatArray0 = new float[3];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, 3.4028235E38F);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList0);
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet(0, (-1.0F), (-1.0F));
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessFloatList0.add(tFloatHashSet0._set);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Can not grow ArrayList wrapped external array
         //
      }
  }

  //Test case number: 10
  /*
   * 19 covered goals:
   * 1 Weak Mutation 76: gnu.trove.impl.sync.TSynchronizedFloatList.add([FII)V:102 - InsertUnaryOp Negation of offset
   * 2 Weak Mutation 77: gnu.trove.impl.sync.TSynchronizedFloatList.add([FII)V:102 - InsertUnaryOp IINC 1 offset
   * 3 Weak Mutation 78: gnu.trove.impl.sync.TSynchronizedFloatList.add([FII)V:102 - InsertUnaryOp IINC -1 offset
   * 4 Weak Mutation 73: gnu.trove.impl.sync.TSynchronizedFloatList.add([FII)V:102 - DeleteField: mutexLjava/lang/Object;
   * 5 Weak Mutation 74: gnu.trove.impl.sync.TSynchronizedFloatList.add([FII)V:102 - DeleteField: listLgnu/trove/list/TFloatList;
   * 6 Weak Mutation 81: gnu.trove.impl.sync.TSynchronizedFloatList.add([FII)V:102 - InsertUnaryOp IINC 1 length
   * 7 Weak Mutation 80: gnu.trove.impl.sync.TSynchronizedFloatList.add([FII)V:102 - InsertUnaryOp Negation of length
   * 8 Weak Mutation 83: gnu.trove.impl.sync.TSynchronizedFloatList.add([FII)V:102 - DeleteStatement: add([FII)V
   * 9 Weak Mutation 82: gnu.trove.impl.sync.TSynchronizedFloatList.add([FII)V:102 - InsertUnaryOp IINC -1 length
   * 10 gnu.trove.impl.sync.TSynchronizedFloatList.add([FII)V: root-Branch
   * 11 Weak Mutation 76: gnu.trove.impl.sync.TSynchronizedFloatList.add([FII)V:102 - InsertUnaryOp Negation of offset
   * 12 Weak Mutation 77: gnu.trove.impl.sync.TSynchronizedFloatList.add([FII)V:102 - InsertUnaryOp IINC 1 offset
   * 13 Weak Mutation 78: gnu.trove.impl.sync.TSynchronizedFloatList.add([FII)V:102 - InsertUnaryOp IINC -1 offset
   * 14 Weak Mutation 73: gnu.trove.impl.sync.TSynchronizedFloatList.add([FII)V:102 - DeleteField: mutexLjava/lang/Object;
   * 15 Weak Mutation 74: gnu.trove.impl.sync.TSynchronizedFloatList.add([FII)V:102 - DeleteField: listLgnu/trove/list/TFloatList;
   * 16 Weak Mutation 81: gnu.trove.impl.sync.TSynchronizedFloatList.add([FII)V:102 - InsertUnaryOp IINC 1 length
   * 17 Weak Mutation 80: gnu.trove.impl.sync.TSynchronizedFloatList.add([FII)V:102 - InsertUnaryOp Negation of length
   * 18 Weak Mutation 83: gnu.trove.impl.sync.TSynchronizedFloatList.add([FII)V:102 - DeleteStatement: add([FII)V
   * 19 Weak Mutation 82: gnu.trove.impl.sync.TSynchronizedFloatList.add([FII)V:102 - InsertUnaryOp IINC -1 length
   */

  @Test
  public void test10()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(1849.8385F);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList0, (Object) "Japanese");
      float[] floatArray0 = new float[5];
      tSynchronizedRandomAccessFloatList0.add(floatArray0, 0, 0);
      assertEquals(0, tFloatLinkedList0.size());
      assertEquals(true, tSynchronizedRandomAccessFloatList0.isEmpty());
  }

  //Test case number: 11
  /*
   * 15 covered goals:
   * 1 Weak Mutation 85: gnu.trove.impl.sync.TSynchronizedFloatList.insert(IF)V:106 - DeleteField: listLgnu/trove/list/TFloatList;
   * 2 Weak Mutation 84: gnu.trove.impl.sync.TSynchronizedFloatList.insert(IF)V:106 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 87: gnu.trove.impl.sync.TSynchronizedFloatList.insert(IF)V:106 - InsertUnaryOp IINC 1 offset
   * 4 Weak Mutation 86: gnu.trove.impl.sync.TSynchronizedFloatList.insert(IF)V:106 - InsertUnaryOp Negation of offset
   * 5 Weak Mutation 89: gnu.trove.impl.sync.TSynchronizedFloatList.insert(IF)V:106 - InsertUnaryOp Negation of value
   * 6 Weak Mutation 88: gnu.trove.impl.sync.TSynchronizedFloatList.insert(IF)V:106 - InsertUnaryOp IINC -1 offset
   * 7 Weak Mutation 90: gnu.trove.impl.sync.TSynchronizedFloatList.insert(IF)V:106 - DeleteStatement: insert(IF)V
   * 8 gnu.trove.impl.sync.TSynchronizedFloatList.insert(IF)V: root-Branch
   * 9 Weak Mutation 85: gnu.trove.impl.sync.TSynchronizedFloatList.insert(IF)V:106 - DeleteField: listLgnu/trove/list/TFloatList;
   * 10 Weak Mutation 84: gnu.trove.impl.sync.TSynchronizedFloatList.insert(IF)V:106 - DeleteField: mutexLjava/lang/Object;
   * 11 Weak Mutation 87: gnu.trove.impl.sync.TSynchronizedFloatList.insert(IF)V:106 - InsertUnaryOp IINC 1 offset
   * 12 Weak Mutation 86: gnu.trove.impl.sync.TSynchronizedFloatList.insert(IF)V:106 - InsertUnaryOp Negation of offset
   * 13 Weak Mutation 89: gnu.trove.impl.sync.TSynchronizedFloatList.insert(IF)V:106 - InsertUnaryOp Negation of value
   * 14 Weak Mutation 88: gnu.trove.impl.sync.TSynchronizedFloatList.insert(IF)V:106 - InsertUnaryOp IINC -1 offset
   * 15 Weak Mutation 90: gnu.trove.impl.sync.TSynchronizedFloatList.insert(IF)V:106 - DeleteStatement: insert(IF)V
   */

  @Test
  public void test11()  throws Throwable  {
      float[] floatArray0 = new float[7];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      TSynchronizedFloatList tSynchronizedFloatList0 = new TSynchronizedFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tSynchronizedFloatList0.insert((-828), (-858.44226F));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 13 covered goals:
   * 1 Weak Mutation 93: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[F)V:109 - InsertUnaryOp Negation of offset
   * 2 Weak Mutation 92: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[F)V:109 - DeleteField: listLgnu/trove/list/TFloatList;
   * 3 Weak Mutation 95: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[F)V:109 - InsertUnaryOp IINC -1 offset
   * 4 Weak Mutation 94: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[F)V:109 - InsertUnaryOp IINC 1 offset
   * 5 Weak Mutation 91: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[F)V:109 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 96: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[F)V:109 - DeleteStatement: insert(I[F)V
   * 7 gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[F)V: root-Branch
   * 8 Weak Mutation 93: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[F)V:109 - InsertUnaryOp Negation of offset
   * 9 Weak Mutation 92: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[F)V:109 - DeleteField: listLgnu/trove/list/TFloatList;
   * 10 Weak Mutation 95: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[F)V:109 - InsertUnaryOp IINC -1 offset
   * 11 Weak Mutation 94: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[F)V:109 - InsertUnaryOp IINC 1 offset
   * 12 Weak Mutation 91: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[F)V:109 - DeleteField: mutexLjava/lang/Object;
   * 13 Weak Mutation 96: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[F)V:109 - DeleteStatement: insert(I[F)V
   */

  @Test
  public void test12()  throws Throwable  {
      float[] floatArray0 = new float[3];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, 3.4028235E38F);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList0);
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet(0, (-1.0F), (-1.0F));
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessFloatList0.insert(0, tFloatHashSet0._set);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Can not grow ArrayList wrapped external array
         //
      }
  }

  //Test case number: 13
  /*
   * 33 covered goals:
   * 1 Weak Mutation 102: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - InsertUnaryOp IINC 1 offset
   * 2 Weak Mutation 103: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - InsertUnaryOp IINC -1 offset
   * 3 Weak Mutation 100: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - ReplaceVariable offset -> len
   * 4 Weak Mutation 101: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - InsertUnaryOp Negation of offset
   * 5 Weak Mutation 98: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - DeleteField: listLgnu/trove/list/TFloatList;
   * 6 Weak Mutation 99: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - ReplaceVariable offset -> valOffset
   * 7 Weak Mutation 97: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - DeleteField: mutexLjava/lang/Object;
   * 8 Weak Mutation 110: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - ReplaceVariable len -> offset
   * 9 Weak Mutation 111: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - InsertUnaryOp Negation of len
   * 10 Weak Mutation 108: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - InsertUnaryOp IINC -1 valOffset
   * 11 Weak Mutation 106: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - InsertUnaryOp Negation of valOffset
   * 12 Weak Mutation 107: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - InsertUnaryOp IINC 1 valOffset
   * 13 Weak Mutation 105: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - ReplaceVariable valOffset -> offset
   * 14 Weak Mutation 114: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - DeleteStatement: insert(I[FII)V
   * 15 Weak Mutation 113: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - InsertUnaryOp IINC -1 len
   * 16 Weak Mutation 112: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - InsertUnaryOp IINC 1 len
   * 17 gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V: root-Branch
   * 18 Weak Mutation 102: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - InsertUnaryOp IINC 1 offset
   * 19 Weak Mutation 103: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - InsertUnaryOp IINC -1 offset
   * 20 Weak Mutation 100: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - ReplaceVariable offset -> len
   * 21 Weak Mutation 101: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - InsertUnaryOp Negation of offset
   * 22 Weak Mutation 98: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - DeleteField: listLgnu/trove/list/TFloatList;
   * 23 Weak Mutation 99: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - ReplaceVariable offset -> valOffset
   * 24 Weak Mutation 97: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - DeleteField: mutexLjava/lang/Object;
   * 25 Weak Mutation 110: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - ReplaceVariable len -> offset
   * 26 Weak Mutation 111: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - InsertUnaryOp Negation of len
   * 27 Weak Mutation 108: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - InsertUnaryOp IINC -1 valOffset
   * 28 Weak Mutation 106: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - InsertUnaryOp Negation of valOffset
   * 29 Weak Mutation 107: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - InsertUnaryOp IINC 1 valOffset
   * 30 Weak Mutation 105: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - ReplaceVariable valOffset -> offset
   * 31 Weak Mutation 114: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - DeleteStatement: insert(I[FII)V
   * 32 Weak Mutation 113: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - InsertUnaryOp IINC -1 len
   * 33 Weak Mutation 112: gnu.trove.impl.sync.TSynchronizedFloatList.insert(I[FII)V:112 - InsertUnaryOp IINC 1 len
   */

  @Test
  public void test13()  throws Throwable  {
      float[] floatArray0 = new float[7];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      TSynchronizedFloatList tSynchronizedFloatList0 = new TSynchronizedFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tSynchronizedFloatList0.insert(581, floatArray0, (-1859), (-1859));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 9 covered goals:
   * 1 Weak Mutation 119: gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(F)I:119 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 122: gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(F)I:119 - DeleteStatement: lastIndexOf(F)I
   * 3 Weak Mutation 121: gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(F)I:119 - InsertUnaryOp Negation of o
   * 4 Weak Mutation 120: gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(F)I:119 - DeleteField: listLgnu/trove/list/TFloatList;
   * 5 gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(F)I: root-Branch
   * 6 Weak Mutation 119: gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(F)I:119 - DeleteField: mutexLjava/lang/Object;
   * 7 Weak Mutation 122: gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(F)I:119 - DeleteStatement: lastIndexOf(F)I
   * 8 Weak Mutation 121: gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(F)I:119 - InsertUnaryOp Negation of o
   * 9 Weak Mutation 120: gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(F)I:119 - DeleteField: listLgnu/trove/list/TFloatList;
   */

  @Test
  public void test14()  throws Throwable  {
      float[] floatArray0 = new float[3];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, 3.4028235E38F);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList0);
      int int0 = tSynchronizedRandomAccessFloatList0.lastIndexOf((-1.0F));
      assertEquals((-1), int0);
  }

  //Test case number: 15
  /*
   * 23 covered goals:
   * 1 Weak Mutation 137: gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F:138 - ReplaceVariable offset -> len
   * 2 Weak Mutation 136: gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F:138 - DeleteField: listLgnu/trove/list/TFloatList;
   * 3 Weak Mutation 139: gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F:138 - InsertUnaryOp IINC 1 offset
   * 4 Weak Mutation 138: gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F:138 - InsertUnaryOp Negation of offset
   * 5 Weak Mutation 141: gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F:138 - ReplaceVariable len -> offset
   * 6 Weak Mutation 140: gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F:138 - InsertUnaryOp IINC -1 offset
   * 7 Weak Mutation 143: gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F:138 - InsertUnaryOp IINC 1 len
   * 8 Weak Mutation 142: gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F:138 - InsertUnaryOp Negation of len
   * 9 Weak Mutation 135: gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F:138 - DeleteField: mutexLjava/lang/Object;
   * 10 Weak Mutation 144: gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F:138 - InsertUnaryOp IINC -1 len
   * 11 Weak Mutation 145: gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F:138 - DeleteStatement: toArray(II)[F
   * 12 gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F: root-Branch
   * 13 Weak Mutation 137: gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F:138 - ReplaceVariable offset -> len
   * 14 Weak Mutation 136: gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F:138 - DeleteField: listLgnu/trove/list/TFloatList;
   * 15 Weak Mutation 139: gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F:138 - InsertUnaryOp IINC 1 offset
   * 16 Weak Mutation 138: gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F:138 - InsertUnaryOp Negation of offset
   * 17 Weak Mutation 141: gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F:138 - ReplaceVariable len -> offset
   * 18 Weak Mutation 140: gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F:138 - InsertUnaryOp IINC -1 offset
   * 19 Weak Mutation 143: gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F:138 - InsertUnaryOp IINC 1 len
   * 20 Weak Mutation 142: gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F:138 - InsertUnaryOp Negation of len
   * 21 Weak Mutation 135: gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F:138 - DeleteField: mutexLjava/lang/Object;
   * 22 Weak Mutation 144: gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F:138 - InsertUnaryOp IINC -1 len
   * 23 Weak Mutation 145: gnu.trove.impl.sync.TSynchronizedFloatList.toArray(II)[F:138 - DeleteStatement: toArray(II)[F
   */

  @Test
  public void test15()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessFloatList0.toArray(443, (-357));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 16
  /*
   * 19 covered goals:
   * 1 Weak Mutation 153: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FII)[F:141 - InsertUnaryOp Negation of len
   * 2 Weak Mutation 154: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FII)[F:141 - InsertUnaryOp IINC 1 len
   * 3 Weak Mutation 155: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FII)[F:141 - InsertUnaryOp IINC -1 len
   * 4 Weak Mutation 156: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FII)[F:141 - DeleteStatement: toArray([FII)[F
   * 5 Weak Mutation 146: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FII)[F:141 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 147: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FII)[F:141 - DeleteField: listLgnu/trove/list/TFloatList;
   * 7 Weak Mutation 149: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FII)[F:141 - InsertUnaryOp Negation of offset
   * 8 Weak Mutation 150: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FII)[F:141 - InsertUnaryOp IINC 1 offset
   * 9 Weak Mutation 151: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FII)[F:141 - InsertUnaryOp IINC -1 offset
   * 10 gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FII)[F: root-Branch
   * 11 Weak Mutation 153: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FII)[F:141 - InsertUnaryOp Negation of len
   * 12 Weak Mutation 154: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FII)[F:141 - InsertUnaryOp IINC 1 len
   * 13 Weak Mutation 155: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FII)[F:141 - InsertUnaryOp IINC -1 len
   * 14 Weak Mutation 156: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FII)[F:141 - DeleteStatement: toArray([FII)[F
   * 15 Weak Mutation 146: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FII)[F:141 - DeleteField: mutexLjava/lang/Object;
   * 16 Weak Mutation 147: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FII)[F:141 - DeleteField: listLgnu/trove/list/TFloatList;
   * 17 Weak Mutation 149: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FII)[F:141 - InsertUnaryOp Negation of offset
   * 18 Weak Mutation 150: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FII)[F:141 - InsertUnaryOp IINC 1 offset
   * 19 Weak Mutation 151: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FII)[F:141 - InsertUnaryOp IINC -1 offset
   */

  @Test
  public void test16()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(0.0F);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList0);
      float[] floatArray0 = new float[3];
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessFloatList0.toArray(floatArray0, 102, 102);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 102
         //
      }
  }

  //Test case number: 17
  /*
   * 26 covered goals:
   * 1 Weak Mutation 157: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 158: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - DeleteField: listLgnu/trove/list/TFloatList;
   * 3 Weak Mutation 171: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - InsertUnaryOp Negation of len
   * 4 Weak Mutation 168: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - InsertUnaryOp IINC -1 dest_pos
   * 5 Weak Mutation 174: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - DeleteStatement: toArray([FIII)[F
   * 6 Weak Mutation 173: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - InsertUnaryOp IINC -1 len
   * 7 Weak Mutation 172: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - InsertUnaryOp IINC 1 len
   * 8 Weak Mutation 163: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - InsertUnaryOp IINC -1 source_pos
   * 9 Weak Mutation 162: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - InsertUnaryOp IINC 1 source_pos
   * 10 Weak Mutation 161: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - InsertUnaryOp Negation of source_pos
   * 11 Weak Mutation 167: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - InsertUnaryOp IINC 1 dest_pos
   * 12 Weak Mutation 166: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - InsertUnaryOp Negation of dest_pos
   * 13 gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F: root-Branch
   * 14 Weak Mutation 1: gnu.trove.impl.sync.TSynchronizedFloatList.<init>(Lgnu/trove/list/TFloatList;Ljava/lang/Object;)V:65 - ReplaceVariable list -> list
   * 15 Weak Mutation 157: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - DeleteField: mutexLjava/lang/Object;
   * 16 Weak Mutation 158: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - DeleteField: listLgnu/trove/list/TFloatList;
   * 17 Weak Mutation 171: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - InsertUnaryOp Negation of len
   * 18 Weak Mutation 168: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - InsertUnaryOp IINC -1 dest_pos
   * 19 Weak Mutation 174: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - DeleteStatement: toArray([FIII)[F
   * 20 Weak Mutation 173: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - InsertUnaryOp IINC -1 len
   * 21 Weak Mutation 172: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - InsertUnaryOp IINC 1 len
   * 22 Weak Mutation 163: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - InsertUnaryOp IINC -1 source_pos
   * 23 Weak Mutation 162: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - InsertUnaryOp IINC 1 source_pos
   * 24 Weak Mutation 161: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - InsertUnaryOp Negation of source_pos
   * 25 Weak Mutation 167: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - InsertUnaryOp IINC 1 dest_pos
   * 26 Weak Mutation 166: gnu.trove.impl.sync.TSynchronizedFloatList.toArray([FIII)[F:144 - InsertUnaryOp Negation of dest_pos
   */

  @Test
  public void test17()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(1849.8385F);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList0, (Object) "Japanese");
      float[] floatArray0 = new float[8];
      float[] floatArray1 = tSynchronizedRandomAccessFloatList0.toArray(floatArray0, 0, 0, 0);
      assertSame(floatArray0, floatArray1);
  }

  //Test case number: 18
  /*
   * 15 covered goals:
   * 1 Weak Mutation 175: gnu.trove.impl.sync.TSynchronizedFloatList.indexOf(IF)I:148 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 178: gnu.trove.impl.sync.TSynchronizedFloatList.indexOf(IF)I:148 - InsertUnaryOp IINC 1 offset
   * 3 Weak Mutation 179: gnu.trove.impl.sync.TSynchronizedFloatList.indexOf(IF)I:148 - InsertUnaryOp IINC -1 offset
   * 4 Weak Mutation 176: gnu.trove.impl.sync.TSynchronizedFloatList.indexOf(IF)I:148 - DeleteField: listLgnu/trove/list/TFloatList;
   * 5 Weak Mutation 177: gnu.trove.impl.sync.TSynchronizedFloatList.indexOf(IF)I:148 - InsertUnaryOp Negation of offset
   * 6 Weak Mutation 180: gnu.trove.impl.sync.TSynchronizedFloatList.indexOf(IF)I:148 - InsertUnaryOp Negation of value
   * 7 Weak Mutation 181: gnu.trove.impl.sync.TSynchronizedFloatList.indexOf(IF)I:148 - DeleteStatement: indexOf(IF)I
   * 8 gnu.trove.impl.sync.TSynchronizedFloatList.indexOf(IF)I: root-Branch
   * 9 Weak Mutation 175: gnu.trove.impl.sync.TSynchronizedFloatList.indexOf(IF)I:148 - DeleteField: mutexLjava/lang/Object;
   * 10 Weak Mutation 178: gnu.trove.impl.sync.TSynchronizedFloatList.indexOf(IF)I:148 - InsertUnaryOp IINC 1 offset
   * 11 Weak Mutation 179: gnu.trove.impl.sync.TSynchronizedFloatList.indexOf(IF)I:148 - InsertUnaryOp IINC -1 offset
   * 12 Weak Mutation 176: gnu.trove.impl.sync.TSynchronizedFloatList.indexOf(IF)I:148 - DeleteField: listLgnu/trove/list/TFloatList;
   * 13 Weak Mutation 177: gnu.trove.impl.sync.TSynchronizedFloatList.indexOf(IF)I:148 - InsertUnaryOp Negation of offset
   * 14 Weak Mutation 180: gnu.trove.impl.sync.TSynchronizedFloatList.indexOf(IF)I:148 - InsertUnaryOp Negation of value
   * 15 Weak Mutation 181: gnu.trove.impl.sync.TSynchronizedFloatList.indexOf(IF)I:148 - DeleteStatement: indexOf(IF)I
   */

  @Test
  public void test18()  throws Throwable  {
      float[] floatArray0 = new float[3];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, 3.4028235E38F);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList0);
      int int0 = tSynchronizedRandomAccessFloatList0.indexOf(0, 0);
      assertEquals(0, int0);
  }

  //Test case number: 19
  /*
   * 15 covered goals:
   * 1 Weak Mutation 186: gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(IF)I:151 - InsertUnaryOp IINC -1 offset
   * 2 Weak Mutation 187: gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(IF)I:151 - InsertUnaryOp Negation of value
   * 3 Weak Mutation 184: gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(IF)I:151 - InsertUnaryOp Negation of offset
   * 4 Weak Mutation 185: gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(IF)I:151 - InsertUnaryOp IINC 1 offset
   * 5 Weak Mutation 188: gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(IF)I:151 - DeleteStatement: lastIndexOf(IF)I
   * 6 Weak Mutation 182: gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(IF)I:151 - DeleteField: mutexLjava/lang/Object;
   * 7 Weak Mutation 183: gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(IF)I:151 - DeleteField: listLgnu/trove/list/TFloatList;
   * 8 gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(IF)I: root-Branch
   * 9 Weak Mutation 186: gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(IF)I:151 - InsertUnaryOp IINC -1 offset
   * 10 Weak Mutation 187: gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(IF)I:151 - InsertUnaryOp Negation of value
   * 11 Weak Mutation 184: gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(IF)I:151 - InsertUnaryOp Negation of offset
   * 12 Weak Mutation 185: gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(IF)I:151 - InsertUnaryOp IINC 1 offset
   * 13 Weak Mutation 188: gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(IF)I:151 - DeleteStatement: lastIndexOf(IF)I
   * 14 Weak Mutation 182: gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(IF)I:151 - DeleteField: mutexLjava/lang/Object;
   * 15 Weak Mutation 183: gnu.trove.impl.sync.TSynchronizedFloatList.lastIndexOf(IF)I:151 - DeleteField: listLgnu/trove/list/TFloatList;
   */

  @Test
  public void test19()  throws Throwable  {
      float[] floatArray0 = new float[3];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, 3.4028235E38F);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList0);
      int int0 = tSynchronizedRandomAccessFloatList0.lastIndexOf((-1114), 1271.3505F);
      assertEquals((-1), int0);
  }

  //Test case number: 20
  /*
   * 9 covered goals:
   * 1 Weak Mutation 190: gnu.trove.impl.sync.TSynchronizedFloatList.fill(F)V:155 - DeleteField: listLgnu/trove/list/TFloatList;
   * 2 Weak Mutation 191: gnu.trove.impl.sync.TSynchronizedFloatList.fill(F)V:155 - InsertUnaryOp Negation of val
   * 3 Weak Mutation 189: gnu.trove.impl.sync.TSynchronizedFloatList.fill(F)V:155 - DeleteField: mutexLjava/lang/Object;
   * 4 Weak Mutation 192: gnu.trove.impl.sync.TSynchronizedFloatList.fill(F)V:155 - DeleteStatement: fill(F)V
   * 5 gnu.trove.impl.sync.TSynchronizedFloatList.fill(F)V: root-Branch
   * 6 Weak Mutation 190: gnu.trove.impl.sync.TSynchronizedFloatList.fill(F)V:155 - DeleteField: listLgnu/trove/list/TFloatList;
   * 7 Weak Mutation 191: gnu.trove.impl.sync.TSynchronizedFloatList.fill(F)V:155 - InsertUnaryOp Negation of val
   * 8 Weak Mutation 189: gnu.trove.impl.sync.TSynchronizedFloatList.fill(F)V:155 - DeleteField: mutexLjava/lang/Object;
   * 9 Weak Mutation 192: gnu.trove.impl.sync.TSynchronizedFloatList.fill(F)V:155 - DeleteStatement: fill(F)V
   */

  @Test
  public void test20()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList0);
      tSynchronizedRandomAccessFloatList0.fill(0.0F);
      assertEquals(true, tSynchronizedRandomAccessFloatList0.isEmpty());
  }

  //Test case number: 21
  /*
   * 25 covered goals:
   * 1 Weak Mutation 204: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - DeleteStatement: fill(IIF)V
   * 2 Weak Mutation 201: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - InsertUnaryOp IINC 1 toIndex
   * 3 Weak Mutation 200: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - InsertUnaryOp Negation of toIndex
   * 4 Weak Mutation 203: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - InsertUnaryOp Negation of val
   * 5 Weak Mutation 202: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - InsertUnaryOp IINC -1 toIndex
   * 6 Weak Mutation 197: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - InsertUnaryOp IINC 1 fromIndex
   * 7 Weak Mutation 196: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - InsertUnaryOp Negation of fromIndex
   * 8 Weak Mutation 199: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - ReplaceVariable toIndex -> fromIndex
   * 9 Weak Mutation 198: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - InsertUnaryOp IINC -1 fromIndex
   * 10 Weak Mutation 193: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - DeleteField: mutexLjava/lang/Object;
   * 11 Weak Mutation 195: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - ReplaceVariable fromIndex -> toIndex
   * 12 Weak Mutation 194: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - DeleteField: listLgnu/trove/list/TFloatList;
   * 13 gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V: root-Branch
   * 14 Weak Mutation 204: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - DeleteStatement: fill(IIF)V
   * 15 Weak Mutation 201: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - InsertUnaryOp IINC 1 toIndex
   * 16 Weak Mutation 200: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - InsertUnaryOp Negation of toIndex
   * 17 Weak Mutation 203: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - InsertUnaryOp Negation of val
   * 18 Weak Mutation 202: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - InsertUnaryOp IINC -1 toIndex
   * 19 Weak Mutation 197: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - InsertUnaryOp IINC 1 fromIndex
   * 20 Weak Mutation 196: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - InsertUnaryOp Negation of fromIndex
   * 21 Weak Mutation 199: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - ReplaceVariable toIndex -> fromIndex
   * 22 Weak Mutation 198: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - InsertUnaryOp IINC -1 fromIndex
   * 23 Weak Mutation 193: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - DeleteField: mutexLjava/lang/Object;
   * 24 Weak Mutation 195: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - ReplaceVariable fromIndex -> toIndex
   * 25 Weak Mutation 194: gnu.trove.impl.sync.TSynchronizedFloatList.fill(IIF)V:158 - DeleteField: listLgnu/trove/list/TFloatList;
   */

  @Test
  public void test21()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList0);
      tSynchronizedRandomAccessFloatList0.fill(44, 0, 0);
      assertEquals("{}", tFloatLinkedList0.toString());
      assertEquals("{}", tSynchronizedRandomAccessFloatList0.toString());
  }

  //Test case number: 22
  /*
   * 7 covered goals:
   * 1 Weak Mutation 205: gnu.trove.impl.sync.TSynchronizedFloatList.reverse()V:162 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 207: gnu.trove.impl.sync.TSynchronizedFloatList.reverse()V:162 - DeleteStatement: reverse()V
   * 3 Weak Mutation 206: gnu.trove.impl.sync.TSynchronizedFloatList.reverse()V:162 - DeleteField: listLgnu/trove/list/TFloatList;
   * 4 gnu.trove.impl.sync.TSynchronizedFloatList.reverse()V: root-Branch
   * 5 Weak Mutation 205: gnu.trove.impl.sync.TSynchronizedFloatList.reverse()V:162 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 207: gnu.trove.impl.sync.TSynchronizedFloatList.reverse()V:162 - DeleteStatement: reverse()V
   * 7 Weak Mutation 206: gnu.trove.impl.sync.TSynchronizedFloatList.reverse()V:162 - DeleteField: listLgnu/trove/list/TFloatList;
   */

  @Test
  public void test22()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList0);
      tSynchronizedRandomAccessFloatList0.reverse();
      assertEquals(true, tSynchronizedRandomAccessFloatList0.isEmpty());
  }

  //Test case number: 23
  /*
   * 19 covered goals:
   * 1 Weak Mutation 216: gnu.trove.impl.sync.TSynchronizedFloatList.reverse(II)V:165 - InsertUnaryOp IINC 1 to
   * 2 Weak Mutation 217: gnu.trove.impl.sync.TSynchronizedFloatList.reverse(II)V:165 - InsertUnaryOp IINC -1 to
   * 3 Weak Mutation 218: gnu.trove.impl.sync.TSynchronizedFloatList.reverse(II)V:165 - DeleteStatement: reverse(II)V
   * 4 Weak Mutation 212: gnu.trove.impl.sync.TSynchronizedFloatList.reverse(II)V:165 - InsertUnaryOp IINC 1 from
   * 5 Weak Mutation 213: gnu.trove.impl.sync.TSynchronizedFloatList.reverse(II)V:165 - InsertUnaryOp IINC -1 from
   * 6 Weak Mutation 215: gnu.trove.impl.sync.TSynchronizedFloatList.reverse(II)V:165 - InsertUnaryOp Negation of to
   * 7 Weak Mutation 208: gnu.trove.impl.sync.TSynchronizedFloatList.reverse(II)V:165 - DeleteField: mutexLjava/lang/Object;
   * 8 Weak Mutation 209: gnu.trove.impl.sync.TSynchronizedFloatList.reverse(II)V:165 - DeleteField: listLgnu/trove/list/TFloatList;
   * 9 Weak Mutation 211: gnu.trove.impl.sync.TSynchronizedFloatList.reverse(II)V:165 - InsertUnaryOp Negation of from
   * 10 gnu.trove.impl.sync.TSynchronizedFloatList.reverse(II)V: root-Branch
   * 11 Weak Mutation 216: gnu.trove.impl.sync.TSynchronizedFloatList.reverse(II)V:165 - InsertUnaryOp IINC 1 to
   * 12 Weak Mutation 217: gnu.trove.impl.sync.TSynchronizedFloatList.reverse(II)V:165 - InsertUnaryOp IINC -1 to
   * 13 Weak Mutation 218: gnu.trove.impl.sync.TSynchronizedFloatList.reverse(II)V:165 - DeleteStatement: reverse(II)V
   * 14 Weak Mutation 212: gnu.trove.impl.sync.TSynchronizedFloatList.reverse(II)V:165 - InsertUnaryOp IINC 1 from
   * 15 Weak Mutation 213: gnu.trove.impl.sync.TSynchronizedFloatList.reverse(II)V:165 - InsertUnaryOp IINC -1 from
   * 16 Weak Mutation 215: gnu.trove.impl.sync.TSynchronizedFloatList.reverse(II)V:165 - InsertUnaryOp Negation of to
   * 17 Weak Mutation 208: gnu.trove.impl.sync.TSynchronizedFloatList.reverse(II)V:165 - DeleteField: mutexLjava/lang/Object;
   * 18 Weak Mutation 209: gnu.trove.impl.sync.TSynchronizedFloatList.reverse(II)V:165 - DeleteField: listLgnu/trove/list/TFloatList;
   * 19 Weak Mutation 211: gnu.trove.impl.sync.TSynchronizedFloatList.reverse(II)V:165 - InsertUnaryOp Negation of from
   */

//   @Test
//   public void test23()  throws Throwable  {
//       float[] floatArray0 = new float[6];
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
//       TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList0);
//       tSynchronizedRandomAccessFloatList0.reverse(1, 1);
//       assertEquals(0.0F, tSynchronizedRandomAccessFloatList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 24
  /*
   * 7 covered goals:
   * 1 Weak Mutation 222: gnu.trove.impl.sync.TSynchronizedFloatList.sort()V:173 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 223: gnu.trove.impl.sync.TSynchronizedFloatList.sort()V:173 - DeleteField: listLgnu/trove/list/TFloatList;
   * 3 Weak Mutation 224: gnu.trove.impl.sync.TSynchronizedFloatList.sort()V:173 - DeleteStatement: sort()V
   * 4 gnu.trove.impl.sync.TSynchronizedFloatList.sort()V: root-Branch
   * 5 Weak Mutation 222: gnu.trove.impl.sync.TSynchronizedFloatList.sort()V:173 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 223: gnu.trove.impl.sync.TSynchronizedFloatList.sort()V:173 - DeleteField: listLgnu/trove/list/TFloatList;
   * 7 Weak Mutation 224: gnu.trove.impl.sync.TSynchronizedFloatList.sort()V:173 - DeleteStatement: sort()V
   */

  @Test
  public void test24()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList0);
      tSynchronizedRandomAccessFloatList0.sort();
      assertEquals(true, tSynchronizedRandomAccessFloatList0.isEmpty());
  }

  //Test case number: 25
  /*
   * 21 covered goals:
   * 1 Weak Mutation 235: gnu.trove.impl.sync.TSynchronizedFloatList.sort(II)V:176 - DeleteStatement: sort(II)V
   * 2 Weak Mutation 234: gnu.trove.impl.sync.TSynchronizedFloatList.sort(II)V:176 - InsertUnaryOp IINC -1 toIndex
   * 3 Weak Mutation 233: gnu.trove.impl.sync.TSynchronizedFloatList.sort(II)V:176 - InsertUnaryOp IINC 1 toIndex
   * 4 Weak Mutation 232: gnu.trove.impl.sync.TSynchronizedFloatList.sort(II)V:176 - InsertUnaryOp Negation of toIndex
   * 5 Weak Mutation 231: gnu.trove.impl.sync.TSynchronizedFloatList.sort(II)V:176 - ReplaceVariable toIndex -> fromIndex
   * 6 Weak Mutation 230: gnu.trove.impl.sync.TSynchronizedFloatList.sort(II)V:176 - InsertUnaryOp IINC -1 fromIndex
   * 7 Weak Mutation 229: gnu.trove.impl.sync.TSynchronizedFloatList.sort(II)V:176 - InsertUnaryOp IINC 1 fromIndex
   * 8 Weak Mutation 228: gnu.trove.impl.sync.TSynchronizedFloatList.sort(II)V:176 - InsertUnaryOp Negation of fromIndex
   * 9 Weak Mutation 227: gnu.trove.impl.sync.TSynchronizedFloatList.sort(II)V:176 - ReplaceVariable fromIndex -> toIndex
   * 10 Weak Mutation 225: gnu.trove.impl.sync.TSynchronizedFloatList.sort(II)V:176 - DeleteField: mutexLjava/lang/Object;
   * 11 gnu.trove.impl.sync.TSynchronizedFloatList.sort(II)V: root-Branch
   * 12 Weak Mutation 235: gnu.trove.impl.sync.TSynchronizedFloatList.sort(II)V:176 - DeleteStatement: sort(II)V
   * 13 Weak Mutation 234: gnu.trove.impl.sync.TSynchronizedFloatList.sort(II)V:176 - InsertUnaryOp IINC -1 toIndex
   * 14 Weak Mutation 233: gnu.trove.impl.sync.TSynchronizedFloatList.sort(II)V:176 - InsertUnaryOp IINC 1 toIndex
   * 15 Weak Mutation 232: gnu.trove.impl.sync.TSynchronizedFloatList.sort(II)V:176 - InsertUnaryOp Negation of toIndex
   * 16 Weak Mutation 231: gnu.trove.impl.sync.TSynchronizedFloatList.sort(II)V:176 - ReplaceVariable toIndex -> fromIndex
   * 17 Weak Mutation 230: gnu.trove.impl.sync.TSynchronizedFloatList.sort(II)V:176 - InsertUnaryOp IINC -1 fromIndex
   * 18 Weak Mutation 229: gnu.trove.impl.sync.TSynchronizedFloatList.sort(II)V:176 - InsertUnaryOp IINC 1 fromIndex
   * 19 Weak Mutation 228: gnu.trove.impl.sync.TSynchronizedFloatList.sort(II)V:176 - InsertUnaryOp Negation of fromIndex
   * 20 Weak Mutation 227: gnu.trove.impl.sync.TSynchronizedFloatList.sort(II)V:176 - ReplaceVariable fromIndex -> toIndex
   * 21 Weak Mutation 225: gnu.trove.impl.sync.TSynchronizedFloatList.sort(II)V:176 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test25()  throws Throwable  {
      Stack<Integer> stack0 = new Stack<Integer>();
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) null, (Object) stack0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessFloatList0.sort(1948, 68543509);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 9 covered goals:
   * 1 Weak Mutation 239: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(F)I:180 - DeleteStatement: binarySearch(F)I
   * 2 Weak Mutation 238: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(F)I:180 - InsertUnaryOp Negation of value
   * 3 Weak Mutation 237: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(F)I:180 - DeleteField: listLgnu/trove/list/TFloatList;
   * 4 Weak Mutation 236: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(F)I:180 - DeleteField: mutexLjava/lang/Object;
   * 5 gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(F)I: root-Branch
   * 6 Weak Mutation 239: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(F)I:180 - DeleteStatement: binarySearch(F)I
   * 7 Weak Mutation 238: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(F)I:180 - InsertUnaryOp Negation of value
   * 8 Weak Mutation 237: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(F)I:180 - DeleteField: listLgnu/trove/list/TFloatList;
   * 9 Weak Mutation 236: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(F)I:180 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test26()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList0);
      int int0 = tSynchronizedRandomAccessFloatList0.binarySearch((-722.238F));
      assertEquals((-1), int0);
  }

  //Test case number: 27
  /*
   * 25 covered goals:
   * 1 Weak Mutation 250: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - InsertUnaryOp IINC -1 toIndex
   * 2 Weak Mutation 251: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - DeleteStatement: binarySearch(FII)I
   * 3 Weak Mutation 248: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - InsertUnaryOp Negation of toIndex
   * 4 Weak Mutation 249: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - InsertUnaryOp IINC 1 toIndex
   * 5 Weak Mutation 246: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - InsertUnaryOp IINC -1 fromIndex
   * 6 Weak Mutation 247: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - ReplaceVariable toIndex -> fromIndex
   * 7 Weak Mutation 244: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - InsertUnaryOp Negation of fromIndex
   * 8 Weak Mutation 245: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - InsertUnaryOp IINC 1 fromIndex
   * 9 Weak Mutation 242: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - InsertUnaryOp Negation of value
   * 10 Weak Mutation 243: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - ReplaceVariable fromIndex -> toIndex
   * 11 Weak Mutation 240: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - DeleteField: mutexLjava/lang/Object;
   * 12 Weak Mutation 241: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - DeleteField: listLgnu/trove/list/TFloatList;
   * 13 gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I: root-Branch
   * 14 Weak Mutation 250: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - InsertUnaryOp IINC -1 toIndex
   * 15 Weak Mutation 251: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - DeleteStatement: binarySearch(FII)I
   * 16 Weak Mutation 248: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - InsertUnaryOp Negation of toIndex
   * 17 Weak Mutation 249: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - InsertUnaryOp IINC 1 toIndex
   * 18 Weak Mutation 246: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - InsertUnaryOp IINC -1 fromIndex
   * 19 Weak Mutation 247: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - ReplaceVariable toIndex -> fromIndex
   * 20 Weak Mutation 244: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - InsertUnaryOp Negation of fromIndex
   * 21 Weak Mutation 245: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - InsertUnaryOp IINC 1 fromIndex
   * 22 Weak Mutation 242: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - InsertUnaryOp Negation of value
   * 23 Weak Mutation 243: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - ReplaceVariable fromIndex -> toIndex
   * 24 Weak Mutation 240: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - DeleteField: mutexLjava/lang/Object;
   * 25 Weak Mutation 241: gnu.trove.impl.sync.TSynchronizedFloatList.binarySearch(FII)I:183 - DeleteField: listLgnu/trove/list/TFloatList;
   */

  @Test
  public void test27()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(0.0F);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList0);
      int int0 = tSynchronizedRandomAccessFloatList0.binarySearch((float) 946, 946, (-915));
      assertEquals((-947), int0);
  }

  //Test case number: 28
  /*
   * 7 covered goals:
   * 1 Weak Mutation 262: gnu.trove.impl.sync.TSynchronizedFloatList.min()F:194 - DeleteField: listLgnu/trove/list/TFloatList;
   * 2 Weak Mutation 263: gnu.trove.impl.sync.TSynchronizedFloatList.min()F:194 - DeleteStatement: min()F
   * 3 Weak Mutation 261: gnu.trove.impl.sync.TSynchronizedFloatList.min()F:194 - DeleteField: mutexLjava/lang/Object;
   * 4 gnu.trove.impl.sync.TSynchronizedFloatList.min()F: root-Branch
   * 5 Weak Mutation 262: gnu.trove.impl.sync.TSynchronizedFloatList.min()F:194 - DeleteField: listLgnu/trove/list/TFloatList;
   * 6 Weak Mutation 263: gnu.trove.impl.sync.TSynchronizedFloatList.min()F:194 - DeleteStatement: min()F
   * 7 Weak Mutation 261: gnu.trove.impl.sync.TSynchronizedFloatList.min()F:194 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test28()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessFloatList0.min();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 29
  /*
   * 8 covered goals:
   * 1 Weak Mutation 266: gnu.trove.impl.sync.TSynchronizedFloatList.sum()F:195 - DeleteStatement: sum()F
   * 2 Weak Mutation 264: gnu.trove.impl.sync.TSynchronizedFloatList.sum()F:195 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 265: gnu.trove.impl.sync.TSynchronizedFloatList.sum()F:195 - DeleteField: listLgnu/trove/list/TFloatList;
   * 4 gnu.trove.impl.sync.TSynchronizedFloatList.sum()F: root-Branch
   * 5 Weak Mutation 0: gnu.trove.impl.sync.TSynchronizedFloatList.<init>(Lgnu/trove/list/TFloatList;)V:61 - ReplaceVariable list -> list
   * 6 Weak Mutation 266: gnu.trove.impl.sync.TSynchronizedFloatList.sum()F:195 - DeleteStatement: sum()F
   * 7 Weak Mutation 264: gnu.trove.impl.sync.TSynchronizedFloatList.sum()F:195 - DeleteField: mutexLjava/lang/Object;
   * 8 Weak Mutation 265: gnu.trove.impl.sync.TSynchronizedFloatList.sum()F:195 - DeleteField: listLgnu/trove/list/TFloatList;
   */

//   @Test
//   public void test29()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
//       TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList0);
//       float float0 = tSynchronizedRandomAccessFloatList0.sum();
//       assertEquals(0.0F, float0, 0.01F);
//   }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatSet;
import gnu.trove.map.TFloatByteMap;
import gnu.trove.map.hash.TFloatByteHashMap;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TFloatProcedure;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableFloatByteMapEvoSuite_StrongMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 6 covered goals:
   * 1 Strong Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.isEmpty()Z:64 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.isEmpty()Z: root-Branch
   * 3 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.<init>(Lgnu/trove/map/TFloatByteMap;)V:58 - ReplaceComparisonOperator != null -> = null
   * 4 Strong Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.isEmpty()Z:64 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 5 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.<init>(Lgnu/trove/map/TFloatByteMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      float[] floatArray0 = new float[7];
      floatArray0[1] = 0.0F;
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(0, 116.501205F);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      tUnmodifiableFloatByteMap0.isEmpty();
      floatArray0[1] = 501.00906F;
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   */

  @Test
  public void test1()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap((-245));
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      boolean boolean0 = tUnmodifiableFloatByteMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 Strong Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.containsKey(F)Z:65 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.containsKey(F)Z: root-Branch
   * 3 Strong Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.containsKey(F)Z:65 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   */

  @Test
  public void test2()  throws Throwable  {
      float[] floatArray0 = new float[4];
      floatArray0[0] = 200.54944F;
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(0, 0.5F, 200.54944F, (byte) (-125));
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      tUnmodifiableFloatByteMap0.containsKey(1.0F);
      floatArray0[0] = (float) (byte) (-1);
  }

  //Test case number: 3
  /*
   * 4 covered goals:
   * 1 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.containsKey(F)Z:65 - DeleteStatement: containsKey(F)Z
   * 2 Strong Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.containsKey(F)Z:65 - InsertUnaryOp Negation of key
   * 3 Strong Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.containsKey(F)Z:65 - InsertUnaryOp Negation of key
   * 4 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.containsKey(F)Z:65 - DeleteStatement: containsKey(F)Z
   */

  @Test
  public void test3()  throws Throwable  {
      float[] floatArray0 = new float[5];
      floatArray0[0] = (float) (byte) (-29);
      byte[] byteArray0 = new byte[10];
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(floatArray0, byteArray0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      boolean boolean0 = tUnmodifiableFloatByteMap0.containsKey((float) (byte) (-29));
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * 1 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.containsValue(B)Z:66 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 2 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.containsValue(B)Z:66 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.containsValue(B)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      float[] floatArray0 = new float[4];
      floatArray0[0] = 200.54944F;
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(0, 0.5F, 200.54944F, (byte) (-125));
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      tUnmodifiableFloatByteMap0.containsValue((byte)127);
      floatArray0[0] = (float) (byte) (-1);
  }

  //Test case number: 5
  /*
   * 8 covered goals:
   * 1 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.containsValue(B)Z:66 - DeleteStatement: containsValue(B)Z
   * 2 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.containsValue(B)Z:66 - InsertUnaryOp Negation of val
   * 3 Strong Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.containsValue(B)Z:66 - InsertUnaryOp IINC -1 val
   * 4 Strong Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.containsValue(B)Z:66 - InsertUnaryOp IINC 1 val
   * 5 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.containsValue(B)Z:66 - InsertUnaryOp Negation of val
   * 6 Strong Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.containsValue(B)Z:66 - InsertUnaryOp IINC -1 val
   * 7 Strong Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.containsValue(B)Z:66 - InsertUnaryOp IINC 1 val
   * 8 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.containsValue(B)Z:66 - DeleteStatement: containsValue(B)Z
   */

  @Test
  public void test5()  throws Throwable  {
      float[] floatArray0 = new float[6];
      byte[] byteArray0 = new byte[7];
      byteArray0[5] = (byte) (-16);
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(floatArray0, byteArray0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      boolean boolean0 = tUnmodifiableFloatByteMap0.containsValue((byte) (-16));
      assertEquals(true, boolean0);
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * 1 Strong Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.get(F)B:67 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.get(F)B: root-Branch
   * 3 Strong Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.get(F)B:67 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   */

  @Test
  public void test6()  throws Throwable  {
      float[] floatArray0 = new float[4];
      byte[] byteArray0 = new byte[4];
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(floatArray0, byteArray0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-111);
      tUnmodifiableFloatByteMap0.get((float) (byte)0);
      byteArray1[0] = (byte) (-1);
  }

  //Test case number: 7
  /*
   * 4 covered goals:
   * 1 Strong Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.get(F)B:67 - InsertUnaryOp Negation of key
   * 2 Strong Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.get(F)B:67 - DeleteStatement: get(F)B
   * 3 Strong Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.get(F)B:67 - DeleteStatement: get(F)B
   * 4 Strong Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.get(F)B:67 - InsertUnaryOp Negation of key
   */

  @Test
  public void test7()  throws Throwable  {
      float[] floatArray0 = new float[4];
      floatArray0[0] = 200.54944F;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-125);
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(floatArray0, byteArray0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      TFloatByteHashMap tFloatByteHashMap1 = new TFloatByteHashMap(floatArray0, tFloatByteHashMap0._states);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap1 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap1);
      tUnmodifiableFloatByteMap1.get((float) (byte)0);
      assertFalse(tUnmodifiableFloatByteMap1.equals(tUnmodifiableFloatByteMap0));
  }

  //Test case number: 8
  /*
   * 5 covered goals:
   * 1 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keys()[F:83 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 2 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keys()[F:83 - DeleteStatement: keys()[F
   * 3 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keys()[F:83 - DeleteStatement: keys()[F
   * 4 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keys()[F:83 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keys()[F: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap((-128), Float.NEGATIVE_INFINITY, 10.0F, (byte) (-1));
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      float[] floatArray0 = tUnmodifiableFloatByteMap0.keys();
      assertNotNull(floatArray0);
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keys([F)[F:84 - DeleteStatement: keys([F)[F
   * 2 Strong Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keys([F)[F:84 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 3 Strong Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keys([F)[F:84 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 4 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keys([F)[F:84 - DeleteStatement: keys([F)[F
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keys([F)[F: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      float[] floatArray0 = tUnmodifiableFloatByteMap0.keys(tFloatByteHashMap0._set);
      assertNotNull(floatArray0);
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.values()[B:91 - DeleteStatement: values()[B
   * 2 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.values()[B:91 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 3 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.values()[B:91 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 4 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.values()[B:91 - DeleteStatement: values()[B
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.values()[B: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      byte[] byteArray0 = tUnmodifiableFloatByteMap0.values();
      assertNotNull(byteArray0);
  }

  //Test case number: 11
  /*
   * 5 covered goals:
   * 1 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.values([B)[B:92 - DeleteStatement: values([B)[B
   * 2 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.values([B)[B:92 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 3 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.values([B)[B:92 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 4 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.values([B)[B:92 - DeleteStatement: values([B)[B
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.values([B)[B: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      byte[] byteArray0 = tUnmodifiableFloatByteMap0.values(tFloatByteHashMap0._states);
      assertNotNull(byteArray0);
  }

  //Test case number: 12
  /*
   * 7 covered goals:
   * 1 Strong Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 4 Strong Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 5 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 6 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 7 Strong Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   */

  @Test
  public void test12()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap((-1292), (-1292));
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap1 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      boolean boolean0 = tUnmodifiableFloatByteMap1.equals((Object) "ja");
      assertEquals(false, boolean0);
      assertTrue(tUnmodifiableFloatByteMap1.equals(tUnmodifiableFloatByteMap0));
  }

  //Test case number: 13
  /*
   * 2 covered goals:
   * 1 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.equals(Ljava/lang/Object;)Z:94 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 2 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.equals(Ljava/lang/Object;)Z:94 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   */

  @Test
  public void test13()  throws Throwable  {
      float[] floatArray0 = new float[4];
      byte[] byteArray0 = new byte[4];
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(floatArray0, byteArray0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-111);
      tUnmodifiableFloatByteMap0.equals((Object) floatArray0[0]);
      byteArray1[0] = (byte) (-1);
  }

  //Test case number: 14
  /*
   * 3 covered goals:
   * 1 Strong Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   * 2 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 3 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test14()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap((-1292), (-1292));
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      boolean boolean0 = tUnmodifiableFloatByteMap0.equals((Object) "ja");
      assertEquals(false, boolean0);
  }

  //Test case number: 15
  /*
   * 3 covered goals:
   * 1 Strong Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.hashCode()I:95 - DeleteStatement: hashCode()I
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.hashCode()I: root-Branch
   * 3 Strong Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.hashCode()I:95 - DeleteStatement: hashCode()I
   */

  @Test
  public void test15()  throws Throwable  {
      float[] floatArray0 = new float[10];
      floatArray0[2] = 1385.4547F;
      byte[] byteArray0 = new byte[6];
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(floatArray0, byteArray0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      int int0 = tUnmodifiableFloatByteMap0.hashCode();
      assertEquals(1398149253, int0);
  }

  //Test case number: 16
  /*
   * 2 covered goals:
   * 1 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.hashCode()I:95 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 2 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.hashCode()I:95 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   */

  @Test
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(1201, 1407.4268F, (-1.0F), (byte)0);
      byteArray0[4] = (byte)0;
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      tUnmodifiableFloatByteMap0.hashCode();
      byteArray0[4] = (byte)107;
  }

  //Test case number: 17
  /*
   * 5 covered goals:
   * 1 Strong Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 2 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 3 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 4 Strong Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(0, 0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      String string0 = tUnmodifiableFloatByteMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 18
  /*
   * 5 covered goals:
   * 1 Strong Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.getNoEntryKey()F:97 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 2 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.getNoEntryKey()F:97 - DeleteStatement: getNoEntryKey()F
   * 3 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.getNoEntryKey()F:97 - DeleteStatement: getNoEntryKey()F
   * 4 Strong Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.getNoEntryKey()F:97 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.getNoEntryKey()F: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(1201, 1407.4268F, (-1.0F), (byte)0);
      byteArray0[4] = (byte)0;
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      tUnmodifiableFloatByteMap0.getNoEntryKey();
      byteArray0[4] = (byte)107;
  }

  //Test case number: 19
  /*
   * 3 covered goals:
   * 1 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.getNoEntryValue()B:98 - DeleteStatement: getNoEntryValue()B
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.getNoEntryValue()B: root-Branch
   * 3 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.getNoEntryValue()B:98 - DeleteStatement: getNoEntryValue()B
   */

  @Test
  public void test19()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(1, 1);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      TFloatByteHashMap tFloatByteHashMap1 = new TFloatByteHashMap(485, (float) 1, (float) 1, (byte)3);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap1 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap1);
      byte byte0 = tUnmodifiableFloatByteMap0.getNoEntryValue();
      assertEquals((byte)0, byte0);
  }

  //Test case number: 20
  /*
   * 2 covered goals:
   * 1 Strong Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.getNoEntryValue()B:98 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 2 Strong Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.getNoEntryValue()B:98 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   */

  @Test
  public void test20()  throws Throwable  {
      float[] floatArray0 = new float[4];
      byte[] byteArray0 = new byte[4];
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(floatArray0, byteArray0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-111);
      tUnmodifiableFloatByteMap0.getNoEntryValue();
      byteArray1[0] = (byte) (-1);
  }

  //Test case number: 21
  /*
   * 3 covered goals:
   * 1 Strong Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   * 3 Strong Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z
   */

  @Test
  public void test21()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap((-1), (-1947.2577F), (-273.04926F), (byte)0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      boolean boolean0 = tUnmodifiableFloatByteMap0.forEachKey((TFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 22
  /*
   * 3 covered goals:
   * 1 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   * 3 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z
   */

  @Test
  public void test22()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(0, 0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      boolean boolean0 = tUnmodifiableFloatByteMap0.forEachValue((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 19 covered goals:
   * 1 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.value()B:115 - DeleteStatement: value()B
   * 2 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.key()F:114 - DeleteStatement: key()F
   * 3 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.key()F:114 - DeleteField: iterLgnu/trove/iterator/TFloatByteIterator;
   * 4 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.key()F:114 - DeleteStatement: key()F
   * 5 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.value()B:115 - DeleteField: iterLgnu/trove/iterator/TFloatByteIterator;
   * 6 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.value()B:115 - DeleteStatement: value()B
   * 7 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TFloatByteIterator;
   * 8 Strong Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.advance()V:116 - DeleteStatement: advance()V
   * 9 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TFloatByteIterator;
   * 10 Strong Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 11 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.size()I:63 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 12 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.size()I:63 - DeleteStatement: size()I
   * 13 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.iterator()Lgnu/trove/iterator/TFloatByteIterator;: root-Branch
   * 14 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.size()I: root-Branch
   * 15 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableFloatByteMap;)V: root-Branch
   * 16 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.hasNext()Z: root-Branch
   * 17 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.key()F: root-Branch
   * 18 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.advance()V: root-Branch
   * 19 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.value()B: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      float[] floatArray0 = new float[10];
      floatArray0[2] = 1385.4547F;
      floatArray0[3] = (-1466.8617F);
      floatArray0[4] = 0.5F;
      floatArray0[5] = (-1535.7736F);
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)10;
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(floatArray0, byteArray0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      TFloatByteHashMap tFloatByteHashMap1 = new TFloatByteHashMap((TFloatByteMap) tUnmodifiableFloatByteMap0);
      assertEquals("{1385.4547=0, -1466.8617=0, 0.5=0, -1535.7736=0, 0.0=10}", tFloatByteHashMap1.toString());
  }

  //Test case number: 24
  /*
   * 8 covered goals:
   * 1 Strong Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 2 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.key()F:114 - DeleteField: iterLgnu/trove/iterator/TFloatByteIterator;
   * 3 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.value()B:115 - DeleteField: iterLgnu/trove/iterator/TFloatByteIterator;
   * 4 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TFloatByteIterator;
   * 5 Strong Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.advance()V:116 - DeleteStatement: advance()V
   * 6 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TFloatByteIterator;
   * 7 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.size()I:63 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 8 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.size()I:63 - DeleteStatement: size()I
   */

  @Test
  public void test24()  throws Throwable  {
      float[] floatArray0 = new float[10];
      byte[] byteArray0 = new byte[6];
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(floatArray0, byteArray0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      TFloatByteHashMap tFloatByteHashMap1 = new TFloatByteHashMap((TFloatByteMap) tUnmodifiableFloatByteMap0);
      assertEquals("{0.0=0}", tFloatByteHashMap1.toString());
      assertEquals(1, tUnmodifiableFloatByteMap0.size());
  }

  //Test case number: 25
  /*
   * 12 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keySet()Lgnu/trove/set/TFloatSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keySet()Lgnu/trove/set/TFloatSet;:79 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keySet()Lgnu/trove/set/TFloatSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TFloatSet;
   * 4 Strong Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keySet()Lgnu/trove/set/TFloatSet;:80 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 5 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keySet()Lgnu/trove/set/TFloatSet;:81 - DeleteField: keySetLgnu/trove/set/TFloatSet;
   * 6 Strong Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keySet()Lgnu/trove/set/TFloatSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TFloatSet;)Lgnu/trove/set/TFloatSet;
   * 7 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keySet()Lgnu/trove/set/TFloatSet;:79 - ReplaceComparisonOperator != null -> = null
   * 8 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keySet()Lgnu/trove/set/TFloatSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TFloatSet;
   * 9 Strong Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keySet()Lgnu/trove/set/TFloatSet;:80 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 10 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keySet()Lgnu/trove/set/TFloatSet;:81 - DeleteField: keySetLgnu/trove/set/TFloatSet;
   * 11 Strong Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keySet()Lgnu/trove/set/TFloatSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TFloatSet;)Lgnu/trove/set/TFloatSet;
   * 12 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keySet()Lgnu/trove/set/TFloatSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test25()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(1734, 1734);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      TUnmodifiableFloatSet tUnmodifiableFloatSet0 = (TUnmodifiableFloatSet)tUnmodifiableFloatByteMap0.keySet();
      assertNotNull(tUnmodifiableFloatSet0);
      
      TUnmodifiableFloatSet tUnmodifiableFloatSet1 = (TUnmodifiableFloatSet)tUnmodifiableFloatByteMap0.keySet();
      assertSame(tUnmodifiableFloatSet1, tUnmodifiableFloatSet0);
  }

  //Test case number: 26
  /*
   * 13 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.valueCollection()Lgnu/trove/TByteCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.<init>(Lgnu/trove/map/TFloatByteMap;)V:58 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.valueCollection()Lgnu/trove/TByteCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 4 Strong Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TByteCollection;)Lgnu/trove/TByteCollection;
   * 5 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.valueCollection()Lgnu/trove/TByteCollection;:89 - DeleteField: valuesLgnu/trove/TByteCollection;
   * 6 Strong Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 7 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TByteCollection;
   * 8 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.valueCollection()Lgnu/trove/TByteCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 9 Strong Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TByteCollection;)Lgnu/trove/TByteCollection;
   * 10 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.valueCollection()Lgnu/trove/TByteCollection;:89 - DeleteField: valuesLgnu/trove/TByteCollection;
   * 11 Strong Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteField: mLgnu/trove/map/TFloatByteMap;
   * 12 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TByteCollection;
   * 13 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.valueCollection()Lgnu/trove/TByteCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test26()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(1734, 1734);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      TUnmodifiableByteCollection tUnmodifiableByteCollection0 = (TUnmodifiableByteCollection)tUnmodifiableFloatByteMap0.valueCollection();
      assertNotNull(tUnmodifiableByteCollection0);
      
      TUnmodifiableByteCollection tUnmodifiableByteCollection1 = (TUnmodifiableByteCollection)tUnmodifiableFloatByteMap0.valueCollection();
      assertSame(tUnmodifiableByteCollection1, tUnmodifiableByteCollection0);
  }
}

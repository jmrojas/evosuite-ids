/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.custom_hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TDoubleFunction;
import gnu.trove.map.TObjectDoubleMap;
import gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap;
import gnu.trove.procedure.TDoubleProcedure;
import gnu.trove.procedure.TObjectDoubleProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.AbstractMap;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TObjectDoubleCustomHashMapEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 365 covered goals:
   * 1 Weak Mutation 0: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$1.execute(Ljava/lang/Object;D)Z:60 - DeleteField: this$0Lgnu/trove/map/custom_hash/TObjectDoubleCustomHashMap;
   * 2 Weak Mutation 1: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$1.execute(Ljava/lang/Object;D)Z:60 - InsertUnaryOp Negation of value
   * 3 Weak Mutation 2: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$1.execute(Ljava/lang/Object;D)Z:60 - DeleteStatement: put(Ljava/lang/Object;D)D
   * 4 Weak Mutation 3: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$1.execute(Ljava/lang/Object;D)Z:61 - ReplaceConstant - 1 -> 0
   * 5 Weak Mutation 98: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:132 - InsertUnaryOp Negation of noEntryValue
   * 6 Weak Mutation 102: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:134 - ReplaceConstant - 0.0 -> -1.0
   * 7 Weak Mutation 103: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:134 - DeleteStatement: doubleSub(DD)I
   * 8 Weak Mutation 100: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:134 - DeleteField: no_entry_valueD
   * 9 Weak Mutation 101: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:134 - ReplaceConstant - 0.0 -> 1.0
   * 10 Weak Mutation 99: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:134 - InsertUnaryOp Negation
   * 11 Weak Mutation 104: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:134 - ReplaceComparisonOperator == -> >=
   * 12 Weak Mutation 110: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:135 - DeleteStatement: fill([DD)V
   * 13 Weak Mutation 108: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:135 - InsertUnaryOp Negation
   * 14 Weak Mutation 109: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:135 - DeleteField: no_entry_valueD
   * 15 Weak Mutation 107: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:135 - DeleteField: _values[D
   * 16 Weak Mutation 111: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:151 - ReplaceComparisonOperator == -> !=
   * 17 Weak Mutation 114: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:153 - DeleteField: _loadFactorF
   * 18 Weak Mutation 113: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:153 - InsertUnaryOp Negation
   * 19 Weak Mutation 112: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:153 - ReplaceVariable hashmap -> this
   * 20 Weak Mutation 117: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:154 - DeleteField: no_entry_valueD
   * 21 Weak Mutation 116: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:154 - InsertUnaryOp Negation
   * 22 Weak Mutation 115: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:154 - ReplaceVariable hashmap -> this
   * 23 Weak Mutation 119: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:155 - DeleteField: strategyLgnu/trove/strategy/HashingStrategy;
   * 24 Weak Mutation 118: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:155 - ReplaceVariable hashmap -> this
   * 25 Weak Mutation 125: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:157 - ReplaceComparisonOperator == -> >=
   * 26 Weak Mutation 124: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:157 - DeleteStatement: doubleSub(DD)I
   * 27 Weak Mutation 123: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:157 - ReplaceConstant - 0.0 -> -1.0
   * 28 Weak Mutation 122: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:157 - ReplaceConstant - 0.0 -> 1.0
   * 29 Weak Mutation 121: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:157 - DeleteField: no_entry_valueD
   * 30 Weak Mutation 120: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:157 - InsertUnaryOp Negation
   * 31 Weak Mutation 129: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:158 - InsertUnaryOp Negation
   * 32 Weak Mutation 128: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:158 - DeleteField: _values[D
   * 33 Weak Mutation 131: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:158 - DeleteStatement: fill([DD)V
   * 34 Weak Mutation 130: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:158 - DeleteField: no_entry_valueD
   * 35 Weak Mutation 137: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - InsertUnaryOp Negation
   * 36 Weak Mutation 136: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceConstant - 10.0 -> 11.0
   * 37 Weak Mutation 139: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceArithmeticOperator / -> -
   * 38 Weak Mutation 138: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - DeleteField: _loadFactorF
   * 39 Weak Mutation 141: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceArithmeticOperator / -> %
   * 40 Weak Mutation 140: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceArithmeticOperator / -> +
   * 41 Weak Mutation 143: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - DeleteStatement: ceil(D)D
   * 42 Weak Mutation 142: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceArithmeticOperator / -> *
   * 43 Weak Mutation 133: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceConstant - 10.0 -> 1.0
   * 44 Weak Mutation 132: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceConstant - 10.0 -> 0.0
   * 45 Weak Mutation 135: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceConstant - 10.0 -> 9.0
   * 46 Weak Mutation 134: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceConstant - 10.0 -> -1.0
   * 47 Weak Mutation 144: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - DeleteStatement: setUp(I)I
   * 48 Weak Mutation 145: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:162 - DeleteStatement: putAll(Lgnu/trove/map/TObjectDoubleMap;)V
   * 49 Weak Mutation 146: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:176 - InsertUnaryOp Negation of initialCapacity
   * 50 Weak Mutation 147: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:176 - InsertUnaryOp IINC 1 initialCapacity
   * 51 Weak Mutation 148: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:176 - InsertUnaryOp IINC -1 initialCapacity
   * 52 Weak Mutation 152: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:177 - InsertUnaryOp IINC -1 capacity
   * 53 Weak Mutation 149: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:177 - ReplaceVariable capacity -> initialCapacity
   * 54 Weak Mutation 150: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:177 - InsertUnaryOp Negation of capacity
   * 55 Weak Mutation 151: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:177 - InsertUnaryOp IINC 1 capacity
   * 56 Weak Mutation 153: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:178 - ReplaceVariable capacity -> initialCapacity
   * 57 Weak Mutation 154: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:178 - InsertUnaryOp Negation of capacity
   * 58 Weak Mutation 155: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:178 - InsertUnaryOp IINC 1 capacity
   * 59 Weak Mutation 156: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:178 - InsertUnaryOp IINC -1 capacity
   * 60 Weak Mutation 157: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:188 - DeleteField: _set[Ljava/lang/Object;
   * 61 Weak Mutation 158: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:191 - DeleteField: _set[Ljava/lang/Object;
   * 62 Weak Mutation 159: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:192 - DeleteField: _values[D
   * 63 Weak Mutation 163: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:194 - InsertUnaryOp IINC -1 newCapacity
   * 64 Weak Mutation 162: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:194 - InsertUnaryOp IINC 1 newCapacity
   * 65 Weak Mutation 161: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:194 - InsertUnaryOp Negation of newCapacity
   * 66 Weak Mutation 160: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:194 - ReplaceVariable newCapacity -> oldCapacity
   * 67 Weak Mutation 167: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:195 - DeleteStatement: fill([Ljava/lang/Object;Ljava/lang/Object;)V
   * 68 Weak Mutation 166: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:195 - DeleteField: FREELjava/lang/Object;
   * 69 Weak Mutation 165: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:195 - ReplaceVariable FREE -> REMOVED
   * 70 Weak Mutation 164: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:195 - DeleteField: _set[Ljava/lang/Object;
   * 71 Weak Mutation 171: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:196 - InsertUnaryOp IINC -1 newCapacity
   * 72 Weak Mutation 170: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:196 - InsertUnaryOp IINC 1 newCapacity
   * 73 Weak Mutation 169: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:196 - InsertUnaryOp Negation of newCapacity
   * 74 Weak Mutation 168: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:196 - ReplaceVariable newCapacity -> oldCapacity
   * 75 Weak Mutation 175: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:197 - DeleteStatement: fill([DD)V
   * 76 Weak Mutation 174: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:197 - DeleteField: no_entry_valueD
   * 77 Weak Mutation 173: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:197 - InsertUnaryOp Negation
   * 78 Weak Mutation 172: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:197 - DeleteField: _values[D
   * 79 Weak Mutation 186: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> oldCapacity
   * 80 Weak Mutation 184: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC -1 i
   * 81 Weak Mutation 185: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> newCapacity
   * 82 Weak Mutation 188: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - ReplaceComparisonOperator <= -> <
   * 83 Weak Mutation 189: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - ReplaceComparisonOperator <= -> -1
   * 84 Weak Mutation 178: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC 1 oldCapacity
   * 85 Weak Mutation 179: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC -1 oldCapacity
   * 86 Weak Mutation 176: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - ReplaceVariable oldCapacity -> newCapacity
   * 87 Weak Mutation 177: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - InsertUnaryOp Negation of oldCapacity
   * 88 Weak Mutation 182: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - InsertUnaryOp Negation of i
   * 89 Weak Mutation 183: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC 1 i
   * 90 Weak Mutation 180: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> newCapacity
   * 91 Weak Mutation 181: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> oldCapacity
   * 92 Weak Mutation 190: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:200 - ReplaceVariable oldKeys -> _set
   * 93 Weak Mutation 191: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:200 - ReplaceVariable i -> newCapacity
   * 94 Weak Mutation 193: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:200 - InsertUnaryOp Negation of i
   * 95 Weak Mutation 192: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:200 - ReplaceVariable i -> oldCapacity
   * 96 Weak Mutation 195: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:200 - InsertUnaryOp IINC -1 i
   * 97 Weak Mutation 194: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:200 - InsertUnaryOp IINC 1 i
   * 98 Weak Mutation 205: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceComparisonOperator == -> !=
   * 99 Weak Mutation 204: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - DeleteField: REMOVEDLjava/lang/Object;
   * 100 Weak Mutation 201: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceVariable o -> FREE
   * 101 Weak Mutation 200: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceComparisonOperator == -> !=
   * 102 Weak Mutation 203: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceVariable REMOVED -> FREE
   * 103 Weak Mutation 202: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceVariable o -> REMOVED
   * 104 Weak Mutation 197: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceVariable o -> REMOVED
   * 105 Weak Mutation 196: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceVariable o -> FREE
   * 106 Weak Mutation 199: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - DeleteField: FREELjava/lang/Object;
   * 107 Weak Mutation 198: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceVariable FREE -> REMOVED
   * 108 Weak Mutation 207: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:202 - ReplaceVariable o -> REMOVED
   * 109 Weak Mutation 206: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:202 - ReplaceVariable o -> FREE
   * 110 Weak Mutation 208: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:202 - DeleteStatement: insertKey(Ljava/lang/Object;)I
   * 111 Weak Mutation 212: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:203 - InsertUnaryOp Negation of index
   * 112 Weak Mutation 213: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:203 - InsertUnaryOp IINC 1 index
   * 113 Weak Mutation 214: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:203 - InsertUnaryOp IINC -1 index
   * 114 Weak Mutation 215: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:203 - ReplaceComparisonOperator >= -> ==
   * 115 Weak Mutation 209: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:203 - ReplaceVariable index -> newCapacity
   * 116 Weak Mutation 210: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:203 - ReplaceVariable index -> oldCapacity
   * 117 Weak Mutation 234: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.getNoEntryValue()D:216 - DeleteField: no_entry_valueD
   * 118 Weak Mutation 233: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.getNoEntryValue()D:216 - InsertUnaryOp Negation
   * 119 Weak Mutation 287: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D:251 - DeleteStatement: insertKey(Ljava/lang/Object;)I
   * 120 Weak Mutation 286: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D:251 - ReplaceVariable key -> REMOVED
   * 121 Weak Mutation 285: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D:251 - ReplaceVariable key -> FREE
   * 122 Weak Mutation 288: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D:252 - InsertUnaryOp Negation of value
   * 123 Weak Mutation 289: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D:252 - InsertUnaryOp Negation of index
   * 124 Weak Mutation 290: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D:252 - InsertUnaryOp IINC 1 index
   * 125 Weak Mutation 291: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D:252 - InsertUnaryOp IINC -1 index
   * 126 Weak Mutation 315: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:266 - DeleteField: no_entry_valueD
   * 127 Weak Mutation 314: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:266 - InsertUnaryOp Negation
   * 128 Weak Mutation 316: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:267 - ReplaceConstant - 1 -> 0
   * 129 Weak Mutation 317: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:268 - InsertUnaryOp Negation of index
   * 130 Weak Mutation 318: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:268 - ReplaceComparisonOperator >= -> ==
   * 131 Weak Mutation 337: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:274 - InsertUnaryOp Negation of value
   * 132 Weak Mutation 334: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:274 - InsertUnaryOp IINC 1 index
   * 133 Weak Mutation 335: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:274 - InsertUnaryOp IINC -1 index
   * 134 Weak Mutation 332: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:274 - DeleteField: _values[D
   * 135 Weak Mutation 333: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:274 - InsertUnaryOp Negation of index
   * 136 Weak Mutation 339: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:276 - ReplaceComparisonOperator == -> !=
   * 137 Weak Mutation 338: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:276 - InsertUnaryOp Negation of isNewMapping
   * 138 Weak Mutation 342: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:277 - DeleteStatement: postInsertHook(Z)V
   * 139 Weak Mutation 341: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:277 - DeleteField: consumeFreeSlotZ
   * 140 Weak Mutation 340: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:277 - InsertUnaryOp Negation
   * 141 Weak Mutation 344: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:279 - InsertUnaryOp Negation of previous
   * 142 Weak Mutation 383: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putAll(Lgnu/trove/map/TObjectDoubleMap;)V:321 - DeleteField: PUT_ALL_PROCLgnu/trove/procedure/TObjectDoubleProcedure;
   * 143 Weak Mutation 384: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putAll(Lgnu/trove/map/TObjectDoubleMap;)V:321 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z
   * 144 Weak Mutation 720: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:516 - DeleteField: _set[Ljava/lang/Object;
   * 145 Weak Mutation 721: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:517 - DeleteField: _values[D
   * 146 Weak Mutation 728: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:518 - ReplaceComparisonOperator <= -> -1
   * 147 Weak Mutation 723: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:518 - InsertUnaryOp Negation of i
   * 148 Weak Mutation 724: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:518 - InsertUnaryOp IINC 1 i
   * 149 Weak Mutation 725: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:518 - InsertUnaryOp IINC -1 i
   * 150 Weak Mutation 727: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:518 - ReplaceComparisonOperator <= -> <
   * 151 Weak Mutation 747: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 152 Weak Mutation 746: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 153 Weak Mutation 745: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 154 Weak Mutation 744: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 155 Weak Mutation 751: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - ReplaceComparisonOperator != -> ==
   * 156 Weak Mutation 750: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - DeleteStatement: execute(Ljava/lang/Object;D)Z
   * 157 Weak Mutation 749: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 158 Weak Mutation 748: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 159 Weak Mutation 739: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 160 Weak Mutation 738: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 161 Weak Mutation 737: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 162 Weak Mutation 742: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - ReplaceComparisonOperator == -> !=
   * 163 Weak Mutation 741: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - DeleteField: REMOVEDLjava/lang/Object;
   * 164 Weak Mutation 740: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - ReplaceVariable REMOVED -> FREE
   * 165 Weak Mutation 730: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 166 Weak Mutation 731: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 167 Weak Mutation 732: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 168 Weak Mutation 733: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - ReplaceVariable FREE -> REMOVED
   * 169 Weak Mutation 734: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - DeleteField: FREELjava/lang/Object;
   * 170 Weak Mutation 735: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - ReplaceComparisonOperator == -> !=
   * 171 Weak Mutation 753: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:525 - ReplaceConstant - 1 -> 0
   * 172 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I: root-Branch
   * 173 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putAll(Lgnu/trove/map/TObjectDoubleMap;)V: root-Branch
   * 174 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D: root-Branch
   * 175 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.getNoEntryValue()D: root-Branch
   * 176 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$1.<init>(Lgnu/trove/map/custom_hash/TObjectDoubleCustomHashMap;)V: root-Branch
   * 177 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$1.execute(Ljava/lang/Object;D)Z: root-Branch
   * 178 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V: I26 Branch 8 IFEQ L134 - false
   * 179 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V: I14 Branch 9 IFEQ L151 - false
   * 180 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V: I44 Branch 10 IFEQ L157 - false
   * 181 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - true
   * 182 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - false
   * 183 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - true
   * 184 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - false
   * 185 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V: I63 Branch 13 IF_ACMPEQ L201 - false
   * 186 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V: I73 Branch 14 IFGE L203 - true
   * 187 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D: I12 Branch 21 IFGE L268 - true
   * 188 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D: I41 Branch 22 IFEQ L276 - false
   * 189 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I18 Branch 47 IFLE L518 - true
   * 190 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I18 Branch 47 IFLE L518 - false
   * 191 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - true
   * 192 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - false
   * 193 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I30 Branch 49 IF_ACMPEQ L519 - false
   * 194 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I39 Branch 50 IFNE L519 - true
   * 195 Weak Mutation 0: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$1.execute(Ljava/lang/Object;D)Z:60 - DeleteField: this$0Lgnu/trove/map/custom_hash/TObjectDoubleCustomHashMap;
   * 196 Weak Mutation 1: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$1.execute(Ljava/lang/Object;D)Z:60 - InsertUnaryOp Negation of value
   * 197 Weak Mutation 2: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$1.execute(Ljava/lang/Object;D)Z:60 - DeleteStatement: put(Ljava/lang/Object;D)D
   * 198 Weak Mutation 3: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$1.execute(Ljava/lang/Object;D)Z:61 - ReplaceConstant - 1 -> 0
   * 199 Weak Mutation 102: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:134 - ReplaceConstant - 0.0 -> -1.0
   * 200 Weak Mutation 103: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:134 - DeleteStatement: doubleSub(DD)I
   * 201 Weak Mutation 100: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:134 - DeleteField: no_entry_valueD
   * 202 Weak Mutation 101: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:134 - ReplaceConstant - 0.0 -> 1.0
   * 203 Weak Mutation 98: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:132 - InsertUnaryOp Negation of noEntryValue
   * 204 Weak Mutation 99: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:134 - InsertUnaryOp Negation
   * 205 Weak Mutation 110: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:135 - DeleteStatement: fill([DD)V
   * 206 Weak Mutation 111: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:151 - ReplaceComparisonOperator == -> !=
   * 207 Weak Mutation 108: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:135 - InsertUnaryOp Negation
   * 208 Weak Mutation 109: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:135 - DeleteField: no_entry_valueD
   * 209 Weak Mutation 107: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:135 - DeleteField: _values[D
   * 210 Weak Mutation 104: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:134 - ReplaceComparisonOperator == -> >=
   * 211 Weak Mutation 119: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:155 - DeleteField: strategyLgnu/trove/strategy/HashingStrategy;
   * 212 Weak Mutation 118: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:155 - ReplaceVariable hashmap -> this
   * 213 Weak Mutation 117: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:154 - DeleteField: no_entry_valueD
   * 214 Weak Mutation 116: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:154 - InsertUnaryOp Negation
   * 215 Weak Mutation 115: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:154 - ReplaceVariable hashmap -> this
   * 216 Weak Mutation 114: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:153 - DeleteField: _loadFactorF
   * 217 Weak Mutation 113: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:153 - InsertUnaryOp Negation
   * 218 Weak Mutation 112: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:153 - ReplaceVariable hashmap -> this
   * 219 Weak Mutation 125: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:157 - ReplaceComparisonOperator == -> >=
   * 220 Weak Mutation 124: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:157 - DeleteStatement: doubleSub(DD)I
   * 221 Weak Mutation 123: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:157 - ReplaceConstant - 0.0 -> -1.0
   * 222 Weak Mutation 122: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:157 - ReplaceConstant - 0.0 -> 1.0
   * 223 Weak Mutation 121: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:157 - DeleteField: no_entry_valueD
   * 224 Weak Mutation 120: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:157 - InsertUnaryOp Negation
   * 225 Weak Mutation 137: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - InsertUnaryOp Negation
   * 226 Weak Mutation 136: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceConstant - 10.0 -> 11.0
   * 227 Weak Mutation 139: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceArithmeticOperator / -> -
   * 228 Weak Mutation 138: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - DeleteField: _loadFactorF
   * 229 Weak Mutation 141: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceArithmeticOperator / -> %
   * 230 Weak Mutation 140: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceArithmeticOperator / -> +
   * 231 Weak Mutation 143: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - DeleteStatement: ceil(D)D
   * 232 Weak Mutation 142: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceArithmeticOperator / -> *
   * 233 Weak Mutation 129: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:158 - InsertUnaryOp Negation
   * 234 Weak Mutation 128: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:158 - DeleteField: _values[D
   * 235 Weak Mutation 131: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:158 - DeleteStatement: fill([DD)V
   * 236 Weak Mutation 130: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:158 - DeleteField: no_entry_valueD
   * 237 Weak Mutation 133: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceConstant - 10.0 -> 1.0
   * 238 Weak Mutation 132: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceConstant - 10.0 -> 0.0
   * 239 Weak Mutation 135: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceConstant - 10.0 -> 9.0
   * 240 Weak Mutation 134: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceConstant - 10.0 -> -1.0
   * 241 Weak Mutation 152: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:177 - InsertUnaryOp IINC -1 capacity
   * 242 Weak Mutation 153: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:178 - ReplaceVariable capacity -> initialCapacity
   * 243 Weak Mutation 154: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:178 - InsertUnaryOp Negation of capacity
   * 244 Weak Mutation 155: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:178 - InsertUnaryOp IINC 1 capacity
   * 245 Weak Mutation 156: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:178 - InsertUnaryOp IINC -1 capacity
   * 246 Weak Mutation 157: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:188 - DeleteField: _set[Ljava/lang/Object;
   * 247 Weak Mutation 158: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:191 - DeleteField: _set[Ljava/lang/Object;
   * 248 Weak Mutation 159: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:192 - DeleteField: _values[D
   * 249 Weak Mutation 144: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - DeleteStatement: setUp(I)I
   * 250 Weak Mutation 145: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:162 - DeleteStatement: putAll(Lgnu/trove/map/TObjectDoubleMap;)V
   * 251 Weak Mutation 146: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:176 - InsertUnaryOp Negation of initialCapacity
   * 252 Weak Mutation 147: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:176 - InsertUnaryOp IINC 1 initialCapacity
   * 253 Weak Mutation 148: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:176 - InsertUnaryOp IINC -1 initialCapacity
   * 254 Weak Mutation 149: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:177 - ReplaceVariable capacity -> initialCapacity
   * 255 Weak Mutation 150: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:177 - InsertUnaryOp Negation of capacity
   * 256 Weak Mutation 151: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:177 - InsertUnaryOp IINC 1 capacity
   * 257 Weak Mutation 171: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:196 - InsertUnaryOp IINC -1 newCapacity
   * 258 Weak Mutation 170: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:196 - InsertUnaryOp IINC 1 newCapacity
   * 259 Weak Mutation 169: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:196 - InsertUnaryOp Negation of newCapacity
   * 260 Weak Mutation 168: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:196 - ReplaceVariable newCapacity -> oldCapacity
   * 261 Weak Mutation 175: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:197 - DeleteStatement: fill([DD)V
   * 262 Weak Mutation 174: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:197 - DeleteField: no_entry_valueD
   * 263 Weak Mutation 173: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:197 - InsertUnaryOp Negation
   * 264 Weak Mutation 172: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:197 - DeleteField: _values[D
   * 265 Weak Mutation 163: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:194 - InsertUnaryOp IINC -1 newCapacity
   * 266 Weak Mutation 162: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:194 - InsertUnaryOp IINC 1 newCapacity
   * 267 Weak Mutation 161: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:194 - InsertUnaryOp Negation of newCapacity
   * 268 Weak Mutation 160: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:194 - ReplaceVariable newCapacity -> oldCapacity
   * 269 Weak Mutation 167: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:195 - DeleteStatement: fill([Ljava/lang/Object;Ljava/lang/Object;)V
   * 270 Weak Mutation 166: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:195 - DeleteField: FREELjava/lang/Object;
   * 271 Weak Mutation 165: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:195 - ReplaceVariable FREE -> REMOVED
   * 272 Weak Mutation 164: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:195 - DeleteField: _set[Ljava/lang/Object;
   * 273 Weak Mutation 186: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> oldCapacity
   * 274 Weak Mutation 184: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC -1 i
   * 275 Weak Mutation 185: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> newCapacity
   * 276 Weak Mutation 190: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:200 - ReplaceVariable oldKeys -> _set
   * 277 Weak Mutation 191: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:200 - ReplaceVariable i -> newCapacity
   * 278 Weak Mutation 188: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - ReplaceComparisonOperator <= -> <
   * 279 Weak Mutation 189: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - ReplaceComparisonOperator <= -> -1
   * 280 Weak Mutation 178: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC 1 oldCapacity
   * 281 Weak Mutation 179: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC -1 oldCapacity
   * 282 Weak Mutation 176: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - ReplaceVariable oldCapacity -> newCapacity
   * 283 Weak Mutation 177: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - InsertUnaryOp Negation of oldCapacity
   * 284 Weak Mutation 182: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - InsertUnaryOp Negation of i
   * 285 Weak Mutation 183: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC 1 i
   * 286 Weak Mutation 180: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> newCapacity
   * 287 Weak Mutation 181: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> oldCapacity
   * 288 Weak Mutation 205: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceComparisonOperator == -> !=
   * 289 Weak Mutation 204: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - DeleteField: REMOVEDLjava/lang/Object;
   * 290 Weak Mutation 207: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:202 - ReplaceVariable o -> REMOVED
   * 291 Weak Mutation 206: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:202 - ReplaceVariable o -> FREE
   * 292 Weak Mutation 201: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceVariable o -> FREE
   * 293 Weak Mutation 200: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceComparisonOperator == -> !=
   * 294 Weak Mutation 203: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceVariable REMOVED -> FREE
   * 295 Weak Mutation 202: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceVariable o -> REMOVED
   * 296 Weak Mutation 197: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceVariable o -> REMOVED
   * 297 Weak Mutation 196: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceVariable o -> FREE
   * 298 Weak Mutation 199: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - DeleteField: FREELjava/lang/Object;
   * 299 Weak Mutation 198: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceVariable FREE -> REMOVED
   * 300 Weak Mutation 193: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:200 - InsertUnaryOp Negation of i
   * 301 Weak Mutation 192: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:200 - ReplaceVariable i -> oldCapacity
   * 302 Weak Mutation 195: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:200 - InsertUnaryOp IINC -1 i
   * 303 Weak Mutation 194: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:200 - InsertUnaryOp IINC 1 i
   * 304 Weak Mutation 212: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:203 - InsertUnaryOp Negation of index
   * 305 Weak Mutation 213: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:203 - InsertUnaryOp IINC 1 index
   * 306 Weak Mutation 214: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:203 - InsertUnaryOp IINC -1 index
   * 307 Weak Mutation 215: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:203 - ReplaceComparisonOperator >= -> ==
   * 308 Weak Mutation 208: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:202 - DeleteStatement: insertKey(Ljava/lang/Object;)I
   * 309 Weak Mutation 209: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:203 - ReplaceVariable index -> newCapacity
   * 310 Weak Mutation 210: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:203 - ReplaceVariable index -> oldCapacity
   * 311 Weak Mutation 234: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.getNoEntryValue()D:216 - DeleteField: no_entry_valueD
   * 312 Weak Mutation 233: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.getNoEntryValue()D:216 - InsertUnaryOp Negation
   * 313 Weak Mutation 287: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D:251 - DeleteStatement: insertKey(Ljava/lang/Object;)I
   * 314 Weak Mutation 286: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D:251 - ReplaceVariable key -> REMOVED
   * 315 Weak Mutation 285: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D:251 - ReplaceVariable key -> FREE
   * 316 Weak Mutation 315: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:266 - DeleteField: no_entry_valueD
   * 317 Weak Mutation 314: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:266 - InsertUnaryOp Negation
   * 318 Weak Mutation 317: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:268 - InsertUnaryOp Negation of index
   * 319 Weak Mutation 316: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:267 - ReplaceConstant - 1 -> 0
   * 320 Weak Mutation 318: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:268 - ReplaceComparisonOperator >= -> ==
   * 321 Weak Mutation 288: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D:252 - InsertUnaryOp Negation of value
   * 322 Weak Mutation 289: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D:252 - InsertUnaryOp Negation of index
   * 323 Weak Mutation 290: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D:252 - InsertUnaryOp IINC 1 index
   * 324 Weak Mutation 291: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D:252 - InsertUnaryOp IINC -1 index
   * 325 Weak Mutation 342: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:277 - DeleteStatement: postInsertHook(Z)V
   * 326 Weak Mutation 341: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:277 - DeleteField: consumeFreeSlotZ
   * 327 Weak Mutation 340: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:277 - InsertUnaryOp Negation
   * 328 Weak Mutation 339: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:276 - ReplaceComparisonOperator == -> !=
   * 329 Weak Mutation 338: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:276 - InsertUnaryOp Negation of isNewMapping
   * 330 Weak Mutation 337: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:274 - InsertUnaryOp Negation of value
   * 331 Weak Mutation 344: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:279 - InsertUnaryOp Negation of previous
   * 332 Weak Mutation 334: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:274 - InsertUnaryOp IINC 1 index
   * 333 Weak Mutation 335: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:274 - InsertUnaryOp IINC -1 index
   * 334 Weak Mutation 332: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:274 - DeleteField: _values[D
   * 335 Weak Mutation 333: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:274 - InsertUnaryOp Negation of index
   * 336 Weak Mutation 383: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putAll(Lgnu/trove/map/TObjectDoubleMap;)V:321 - DeleteField: PUT_ALL_PROCLgnu/trove/procedure/TObjectDoubleProcedure;
   * 337 Weak Mutation 384: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putAll(Lgnu/trove/map/TObjectDoubleMap;)V:321 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z
   * 338 Weak Mutation 747: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 339 Weak Mutation 746: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 340 Weak Mutation 745: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 341 Weak Mutation 744: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 342 Weak Mutation 751: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - ReplaceComparisonOperator != -> ==
   * 343 Weak Mutation 750: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - DeleteStatement: execute(Ljava/lang/Object;D)Z
   * 344 Weak Mutation 749: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 345 Weak Mutation 748: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 346 Weak Mutation 739: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 347 Weak Mutation 738: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 348 Weak Mutation 737: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 349 Weak Mutation 742: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - ReplaceComparisonOperator == -> !=
   * 350 Weak Mutation 741: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - DeleteField: REMOVEDLjava/lang/Object;
   * 351 Weak Mutation 740: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - ReplaceVariable REMOVED -> FREE
   * 352 Weak Mutation 753: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:525 - ReplaceConstant - 1 -> 0
   * 353 Weak Mutation 728: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:518 - ReplaceComparisonOperator <= -> -1
   * 354 Weak Mutation 730: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 355 Weak Mutation 731: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 356 Weak Mutation 732: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 357 Weak Mutation 733: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - ReplaceVariable FREE -> REMOVED
   * 358 Weak Mutation 734: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - DeleteField: FREELjava/lang/Object;
   * 359 Weak Mutation 735: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - ReplaceComparisonOperator == -> !=
   * 360 Weak Mutation 720: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:516 - DeleteField: _set[Ljava/lang/Object;
   * 361 Weak Mutation 721: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:517 - DeleteField: _values[D
   * 362 Weak Mutation 723: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:518 - InsertUnaryOp Negation of i
   * 363 Weak Mutation 724: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:518 - InsertUnaryOp IINC 1 i
   * 364 Weak Mutation 725: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:518 - InsertUnaryOp IINC -1 i
   * 365 Weak Mutation 727: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:518 - ReplaceComparisonOperator <= -> <
   */

  @Test
  public void test0()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, 169, (-1227.854F), 1483.659713960503);
      tObjectDoubleCustomHashMap0.put((Double) 1483.659713960503, 1483.659713960503);
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap1 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, (TObjectDoubleMap<? extends Double>) tObjectDoubleCustomHashMap0);
      assertEquals(false, tObjectDoubleCustomHashMap0.isEmpty());
      assertTrue(tObjectDoubleCustomHashMap0.equals(tObjectDoubleCustomHashMap1));
  }

  //Test case number: 1
  /*
   * 34 covered goals:
   * 1 Weak Mutation 127: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:157 - ReplaceComparisonOperator == -> -2
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>()V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V: I44 Branch 10 IFEQ L157 - true
   * 4 Weak Mutation 111: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:151 - ReplaceComparisonOperator == -> !=
   * 5 Weak Mutation 118: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:155 - ReplaceVariable hashmap -> this
   * 6 Weak Mutation 116: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:154 - InsertUnaryOp Negation
   * 7 Weak Mutation 115: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:154 - ReplaceVariable hashmap -> this
   * 8 Weak Mutation 114: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:153 - DeleteField: _loadFactorF
   * 9 Weak Mutation 113: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:153 - InsertUnaryOp Negation
   * 10 Weak Mutation 112: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:153 - ReplaceVariable hashmap -> this
   * 11 Weak Mutation 124: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:157 - DeleteStatement: doubleSub(DD)I
   * 12 Weak Mutation 123: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:157 - ReplaceConstant - 0.0 -> -1.0
   * 13 Weak Mutation 122: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:157 - ReplaceConstant - 0.0 -> 1.0
   * 14 Weak Mutation 120: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:157 - InsertUnaryOp Negation
   * 15 Weak Mutation 137: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - InsertUnaryOp Negation
   * 16 Weak Mutation 136: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceConstant - 10.0 -> 11.0
   * 17 Weak Mutation 139: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceArithmeticOperator / -> -
   * 18 Weak Mutation 138: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - DeleteField: _loadFactorF
   * 19 Weak Mutation 141: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceArithmeticOperator / -> %
   * 20 Weak Mutation 140: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceArithmeticOperator / -> +
   * 21 Weak Mutation 143: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - DeleteStatement: ceil(D)D
   * 22 Weak Mutation 142: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceArithmeticOperator / -> *
   * 23 Weak Mutation 133: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceConstant - 10.0 -> 1.0
   * 24 Weak Mutation 132: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceConstant - 10.0 -> 0.0
   * 25 Weak Mutation 135: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceConstant - 10.0 -> 9.0
   * 26 Weak Mutation 134: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - ReplaceConstant - 10.0 -> -1.0
   * 27 Weak Mutation 144: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:160 - DeleteStatement: setUp(I)I
   * 28 Weak Mutation 145: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:162 - DeleteStatement: putAll(Lgnu/trove/map/TObjectDoubleMap;)V
   * 29 Weak Mutation 233: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.getNoEntryValue()D:216 - InsertUnaryOp Negation
   * 30 Weak Mutation 383: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putAll(Lgnu/trove/map/TObjectDoubleMap;)V:321 - DeleteField: PUT_ALL_PROCLgnu/trove/procedure/TObjectDoubleProcedure;
   * 31 Weak Mutation 384: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putAll(Lgnu/trove/map/TObjectDoubleMap;)V:321 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z
   * 32 Weak Mutation 106: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:134 - ReplaceComparisonOperator == -> -2
   * 33 Weak Mutation 127: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V:157 - ReplaceComparisonOperator == -> -2
   * 34 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V: I26 Branch 8 IFEQ L134 - true
   */

  @Test
  public void test1()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>();
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap1 = new TObjectDoubleCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (TObjectDoubleMap<? extends Integer>) tObjectDoubleCustomHashMap0);
      assertEquals(23, tObjectDoubleCustomHashMap1.capacity());
      assertEquals(0.0, tObjectDoubleCustomHashMap1.getNoEntryValue(), 0.01D);
  }

  //Test case number: 2
  /*
   * 7 covered goals:
   * 1 Weak Mutation 237: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsKey(Ljava/lang/Object;)Z:222 - DeleteStatement: contains(Ljava/lang/Object;)Z
   * 2 Weak Mutation 236: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsKey(Ljava/lang/Object;)Z:222 - ReplaceVariable key -> REMOVED
   * 3 Weak Mutation 235: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsKey(Ljava/lang/Object;)Z:222 - ReplaceVariable key -> FREE
   * 4 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsKey(Ljava/lang/Object;)Z: root-Branch
   * 5 Weak Mutation 237: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsKey(Ljava/lang/Object;)Z:222 - DeleteStatement: contains(Ljava/lang/Object;)Z
   * 6 Weak Mutation 236: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsKey(Ljava/lang/Object;)Z:222 - ReplaceVariable key -> REMOVED
   * 7 Weak Mutation 235: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsKey(Ljava/lang/Object;)Z:222 - ReplaceVariable key -> FREE
   */

  @Test
  public void test2()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<String> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 0, 0.0F, (double) 0.0F);
      AbstractMap.SimpleImmutableEntry<String, Integer> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<String, Integer>(",", (Integer) (-1));
      tObjectDoubleCustomHashMap0.containsKey((Object) abstractMap_SimpleImmutableEntry0);
      assertEquals(0.0, tObjectDoubleCustomHashMap0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 3
  /*
   * 33 covered goals:
   * 1 Weak Mutation 238: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:228 - DeleteField: _set[Ljava/lang/Object;
   * 2 Weak Mutation 239: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:229 - DeleteField: _values[D
   * 3 Weak Mutation 244: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:231 - ReplaceComparisonOperator <= -> <
   * 4 Weak Mutation 245: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:231 - ReplaceComparisonOperator <= -> -1
   * 5 Weak Mutation 242: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:231 - InsertUnaryOp IINC -1 i
   * 6 Weak Mutation 240: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:231 - InsertUnaryOp Negation of i
   * 7 Weak Mutation 241: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:231 - InsertUnaryOp IINC 1 i
   * 8 Weak Mutation 252: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - ReplaceComparisonOperator == -> !=
   * 9 Weak Mutation 250: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - ReplaceVariable FREE -> REMOVED
   * 10 Weak Mutation 251: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - DeleteField: FREELjava/lang/Object;
   * 11 Weak Mutation 248: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp IINC 1 i
   * 12 Weak Mutation 249: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp IINC -1 i
   * 13 Weak Mutation 247: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp Negation of i
   * 14 Weak Mutation 269: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:236 - ReplaceConstant - 0 -> 1
   * 15 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z: I18 Branch 15 IFLE L231 - true
   * 16 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z: I18 Branch 15 IFLE L231 - false
   * 17 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z: I25 Branch 16 IF_ACMPEQ L232 - true
   * 18 Weak Mutation 94: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;I)V:97 - InsertUnaryOp Negation
   * 19 Weak Mutation 239: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:229 - DeleteField: _values[D
   * 20 Weak Mutation 238: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:228 - DeleteField: _set[Ljava/lang/Object;
   * 21 Weak Mutation 252: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - ReplaceComparisonOperator == -> !=
   * 22 Weak Mutation 250: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - ReplaceVariable FREE -> REMOVED
   * 23 Weak Mutation 251: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - DeleteField: FREELjava/lang/Object;
   * 24 Weak Mutation 248: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp IINC 1 i
   * 25 Weak Mutation 249: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp IINC -1 i
   * 26 Weak Mutation 247: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp Negation of i
   * 27 Weak Mutation 244: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:231 - ReplaceComparisonOperator <= -> <
   * 28 Weak Mutation 245: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:231 - ReplaceComparisonOperator <= -> -1
   * 29 Weak Mutation 242: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:231 - InsertUnaryOp IINC -1 i
   * 30 Weak Mutation 240: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:231 - InsertUnaryOp Negation of i
   * 31 Weak Mutation 241: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:231 - InsertUnaryOp IINC 1 i
   * 32 Weak Mutation 269: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:236 - ReplaceConstant - 0 -> 1
   * 33 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;I)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, 481);
      boolean boolean0 = tObjectDoubleCustomHashMap0.containsValue((double) 481);
      assertEquals(0.0, tObjectDoubleCustomHashMap0.getNoEntryValue(), 0.01D);
      assertEquals(false, boolean0);
      assertEquals(1039, tObjectDoubleCustomHashMap0.capacity());
  }

  //Test case number: 4
  /*
   * 43 covered goals:
   * 1 Weak Mutation 254: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp Negation of i
   * 2 Weak Mutation 255: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp IINC 1 i
   * 3 Weak Mutation 258: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - DeleteField: REMOVEDLjava/lang/Object;
   * 4 Weak Mutation 259: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - ReplaceComparisonOperator == -> !=
   * 5 Weak Mutation 256: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp IINC -1 i
   * 6 Weak Mutation 257: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - ReplaceVariable REMOVED -> FREE
   * 7 Weak Mutation 262: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp IINC 1 i
   * 8 Weak Mutation 263: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp IINC -1 i
   * 9 Weak Mutation 260: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp Negation of val
   * 10 Weak Mutation 261: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp Negation of i
   * 11 Weak Mutation 267: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - ReplaceComparisonOperator != -> -1
   * 12 Weak Mutation 264: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - DeleteStatement: doubleSub(DD)I
   * 13 Weak Mutation 268: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:233 - ReplaceConstant - 1 -> 0
   * 14 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z: I25 Branch 16 IF_ACMPEQ L232 - false
   * 15 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z: I30 Branch 17 IF_ACMPEQ L232 - false
   * 16 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z: I36 Branch 18 IFNE L232 - false
   * 17 Weak Mutation 239: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:229 - DeleteField: _values[D
   * 18 Weak Mutation 238: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:228 - DeleteField: _set[Ljava/lang/Object;
   * 19 Weak Mutation 252: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - ReplaceComparisonOperator == -> !=
   * 20 Weak Mutation 250: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - ReplaceVariable FREE -> REMOVED
   * 21 Weak Mutation 251: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - DeleteField: FREELjava/lang/Object;
   * 22 Weak Mutation 248: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp IINC 1 i
   * 23 Weak Mutation 249: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp IINC -1 i
   * 24 Weak Mutation 247: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp Negation of i
   * 25 Weak Mutation 245: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:231 - ReplaceComparisonOperator <= -> -1
   * 26 Weak Mutation 242: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:231 - InsertUnaryOp IINC -1 i
   * 27 Weak Mutation 240: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:231 - InsertUnaryOp Negation of i
   * 28 Weak Mutation 241: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:231 - InsertUnaryOp IINC 1 i
   * 29 Weak Mutation 254: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp Negation of i
   * 30 Weak Mutation 255: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp IINC 1 i
   * 31 Weak Mutation 258: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - DeleteField: REMOVEDLjava/lang/Object;
   * 32 Weak Mutation 259: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - ReplaceComparisonOperator == -> !=
   * 33 Weak Mutation 256: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp IINC -1 i
   * 34 Weak Mutation 257: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - ReplaceVariable REMOVED -> FREE
   * 35 Weak Mutation 262: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp IINC 1 i
   * 36 Weak Mutation 263: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp IINC -1 i
   * 37 Weak Mutation 260: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp Negation of val
   * 38 Weak Mutation 261: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - InsertUnaryOp Negation of i
   * 39 Weak Mutation 267: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - ReplaceComparisonOperator != -> -1
   * 40 Weak Mutation 264: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:232 - DeleteStatement: doubleSub(DD)I
   * 41 Weak Mutation 268: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z:233 - ReplaceConstant - 1 -> 0
   * 42 Weak Mutation 343: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:279 - ReplaceVariable previous -> value
   * 43 Weak Mutation 336: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:274 - ReplaceVariable value -> previous
   */

  @Test
  public void test4()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, 481);
      Double double0 = new Double((double) 481);
      tObjectDoubleCustomHashMap0.put(double0, (double) 481);
      boolean boolean0 = tObjectDoubleCustomHashMap0.containsValue((double) 481);
      assertEquals(1, tObjectDoubleCustomHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 21 covered goals:
   * 1 Weak Mutation 280: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.get(Ljava/lang/Object;)D:243 - DeleteField: no_entry_valueD
   * 2 Weak Mutation 105: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:134 - ReplaceComparisonOperator == -> <=
   * 3 Weak Mutation 275: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.get(Ljava/lang/Object;)D:243 - InsertUnaryOp IINC -1 index
   * 4 Weak Mutation 274: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.get(Ljava/lang/Object;)D:243 - InsertUnaryOp IINC 1 index
   * 5 Weak Mutation 273: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.get(Ljava/lang/Object;)D:243 - InsertUnaryOp Negation of index
   * 6 Weak Mutation 272: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.get(Ljava/lang/Object;)D:242 - DeleteStatement: index(Ljava/lang/Object;)I
   * 7 Weak Mutation 279: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.get(Ljava/lang/Object;)D:243 - InsertUnaryOp Negation
   * 8 Weak Mutation 278: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.get(Ljava/lang/Object;)D:243 - ReplaceComparisonOperator >= -> -1
   * 9 Weak Mutation 270: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.get(Ljava/lang/Object;)D:242 - ReplaceVariable key -> FREE
   * 10 Weak Mutation 271: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.get(Ljava/lang/Object;)D:242 - ReplaceVariable key -> REMOVED
   * 11 Weak Mutation 105: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:134 - ReplaceComparisonOperator == -> <=
   * 12 Weak Mutation 275: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.get(Ljava/lang/Object;)D:243 - InsertUnaryOp IINC -1 index
   * 13 Weak Mutation 274: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.get(Ljava/lang/Object;)D:243 - InsertUnaryOp IINC 1 index
   * 14 Weak Mutation 273: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.get(Ljava/lang/Object;)D:243 - InsertUnaryOp Negation of index
   * 15 Weak Mutation 272: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.get(Ljava/lang/Object;)D:242 - DeleteStatement: index(Ljava/lang/Object;)I
   * 16 Weak Mutation 279: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.get(Ljava/lang/Object;)D:243 - InsertUnaryOp Negation
   * 17 Weak Mutation 278: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.get(Ljava/lang/Object;)D:243 - ReplaceComparisonOperator >= -> -1
   * 18 Weak Mutation 280: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.get(Ljava/lang/Object;)D:243 - DeleteField: no_entry_valueD
   * 19 Weak Mutation 270: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.get(Ljava/lang/Object;)D:242 - ReplaceVariable key -> FREE
   * 20 Weak Mutation 271: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.get(Ljava/lang/Object;)D:242 - ReplaceVariable key -> REMOVED
   * 21 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.get(Ljava/lang/Object;)D: I9 Branch 19 IFGE L243 - false
   */

  @Test
  public void test5()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 842879579, (float) 842879579, (-1277.6148697293197));
      AbstractMap.SimpleEntry<Object, Integer> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Integer>((Object) "", (Integer) 842879579);
      double double0 = tObjectDoubleCustomHashMap0.get((Object) abstractMap_SimpleEntry0);
      assertEquals((-1277.6148697293197), double0, 0.01D);
  }

  //Test case number: 6
  /*
   * 15 covered goals:
   * 1 Weak Mutation 299: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:259 - ReplaceComparisonOperator >= -> >
   * 2 Weak Mutation 211: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:203 - ReplaceVariable index -> i
   * 3 Weak Mutation 311: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:261 - InsertUnaryOp Negation of index
   * 4 Weak Mutation 310: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:261 - InsertUnaryOp Negation of value
   * 5 Weak Mutation 313: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:261 - InsertUnaryOp IINC -1 index
   * 6 Weak Mutation 312: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:261 - InsertUnaryOp IINC 1 index
   * 7 Weak Mutation 319: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:268 - ReplaceComparisonOperator >= -> >
   * 8 Weak Mutation 292: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:258 - ReplaceVariable key -> FREE
   * 9 Weak Mutation 293: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:258 - ReplaceVariable key -> REMOVED
   * 10 Weak Mutation 294: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:258 - DeleteStatement: insertKey(Ljava/lang/Object;)I
   * 11 Weak Mutation 295: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:259 - InsertUnaryOp Negation of index
   * 12 Weak Mutation 296: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:259 - InsertUnaryOp IINC 1 index
   * 13 Weak Mutation 297: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:259 - InsertUnaryOp IINC -1 index
   * 14 Weak Mutation 299: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:259 - ReplaceComparisonOperator >= -> >
   * 15 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D: I9 Branch 20 IFGE L259 - true
   */

  @Test
  public void test6()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, 686, (-11.629767F), 0.0);
      double double0 = tObjectDoubleCustomHashMap0.putIfAbsent((Double) 0.0, (double) 0);
      assertEquals(false, tObjectDoubleCustomHashMap0.isEmpty());
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 7
  /*
   * 22 covered goals:
   * 1 Weak Mutation 300: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:259 - ReplaceComparisonOperator >= -> -1
   * 2 Weak Mutation 305: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:260 - ReplaceConstant - 1 -> 0
   * 3 Weak Mutation 304: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:260 - InsertUnaryOp IINC -1 index
   * 4 Weak Mutation 307: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:260 - ReplaceArithmeticOperator - -> %
   * 5 Weak Mutation 306: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:260 - ReplaceArithmeticOperator - -> +
   * 6 Weak Mutation 309: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:260 - ReplaceArithmeticOperator - -> *
   * 7 Weak Mutation 308: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:260 - ReplaceArithmeticOperator - -> /
   * 8 Weak Mutation 301: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:260 - DeleteField: _values[D
   * 9 Weak Mutation 302: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:260 - InsertUnaryOp Negation of index
   * 10 Weak Mutation 303: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:260 - InsertUnaryOp IINC 1 index
   * 11 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D: I9 Branch 20 IFGE L259 - false
   * 12 Weak Mutation 305: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:260 - ReplaceConstant - 1 -> 0
   * 13 Weak Mutation 304: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:260 - InsertUnaryOp IINC -1 index
   * 14 Weak Mutation 307: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:260 - ReplaceArithmeticOperator - -> %
   * 15 Weak Mutation 306: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:260 - ReplaceArithmeticOperator - -> +
   * 16 Weak Mutation 309: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:260 - ReplaceArithmeticOperator - -> *
   * 17 Weak Mutation 308: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:260 - ReplaceArithmeticOperator - -> /
   * 18 Weak Mutation 298: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:259 - ReplaceComparisonOperator >= -> ==
   * 19 Weak Mutation 300: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:259 - ReplaceComparisonOperator >= -> -1
   * 20 Weak Mutation 301: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:260 - DeleteField: _values[D
   * 21 Weak Mutation 302: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:260 - InsertUnaryOp Negation of index
   * 22 Weak Mutation 303: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:260 - InsertUnaryOp IINC 1 index
   */

//   @Test
//   public void test7()  throws Throwable  {
//       IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
//       TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, 481);
//       tObjectDoubleCustomHashMap0.putIfAbsent((Double) 1.3989189769906396, (double) 481);
//       double double0 = tObjectDoubleCustomHashMap0.putIfAbsent((Double) 1.3989189769906396, (double) 481);
//       assertEquals("{1.3989189769906396=481.0}", tObjectDoubleCustomHashMap0.toString());
//       assertEquals(481.0, double0, 0.01D);
//   }

  //Test case number: 8
  /*
   * 26 covered goals:
   * 1 Weak Mutation 320: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:268 - ReplaceComparisonOperator >= -> -1
   * 2 Weak Mutation 326: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:269 - ReplaceArithmeticOperator - -> *
   * 3 Weak Mutation 324: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:269 - ReplaceArithmeticOperator - -> %
   * 4 Weak Mutation 325: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:269 - ReplaceArithmeticOperator - -> /
   * 5 Weak Mutation 322: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:269 - ReplaceConstant - 1 -> 0
   * 6 Weak Mutation 323: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:269 - ReplaceArithmeticOperator - -> +
   * 7 Weak Mutation 321: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:269 - InsertUnaryOp Negation of index
   * 8 Weak Mutation 327: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:270 - DeleteField: _values[D
   * 9 Weak Mutation 330: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:270 - InsertUnaryOp IINC -1 index
   * 10 Weak Mutation 328: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:270 - InsertUnaryOp Negation of index
   * 11 Weak Mutation 329: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:270 - InsertUnaryOp IINC 1 index
   * 12 Weak Mutation 331: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:271 - ReplaceConstant - 0 -> 1
   * 13 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D: I12 Branch 21 IFGE L268 - false
   * 14 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D: I41 Branch 22 IFEQ L276 - true
   * 15 Weak Mutation 326: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:269 - ReplaceArithmeticOperator - -> *
   * 16 Weak Mutation 327: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:270 - DeleteField: _values[D
   * 17 Weak Mutation 324: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:269 - ReplaceArithmeticOperator - -> %
   * 18 Weak Mutation 325: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:269 - ReplaceArithmeticOperator - -> /
   * 19 Weak Mutation 322: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:269 - ReplaceConstant - 1 -> 0
   * 20 Weak Mutation 323: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:269 - ReplaceArithmeticOperator - -> +
   * 21 Weak Mutation 320: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:268 - ReplaceComparisonOperator >= -> -1
   * 22 Weak Mutation 321: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:269 - InsertUnaryOp Negation of index
   * 23 Weak Mutation 330: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:270 - InsertUnaryOp IINC -1 index
   * 24 Weak Mutation 331: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:271 - ReplaceConstant - 0 -> 1
   * 25 Weak Mutation 328: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:270 - InsertUnaryOp Negation of index
   * 26 Weak Mutation 329: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:270 - InsertUnaryOp IINC 1 index
   */

  @Test
  public void test8()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, 169, (-1227.854F), 1483.659713960503);
      tObjectDoubleCustomHashMap0.put((Double) 1483.659713960503, 1483.659713960503);
      double double0 = tObjectDoubleCustomHashMap0.put((Double) 1483.659713960503, 1206.634535224895);
      assertEquals(false, tObjectDoubleCustomHashMap0.isEmpty());
      assertEquals(1483.659713960503, double0, 0.01D);
  }

  //Test case number: 9
  /*
   * 21 covered goals:
   * 1 Weak Mutation 346: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.remove(Ljava/lang/Object;)D:285 - DeleteField: no_entry_valueD
   * 2 Weak Mutation 345: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.remove(Ljava/lang/Object;)D:285 - InsertUnaryOp Negation
   * 3 Weak Mutation 349: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.remove(Ljava/lang/Object;)D:286 - DeleteStatement: index(Ljava/lang/Object;)I
   * 4 Weak Mutation 348: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.remove(Ljava/lang/Object;)D:286 - ReplaceVariable key -> REMOVED
   * 5 Weak Mutation 347: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.remove(Ljava/lang/Object;)D:286 - ReplaceVariable key -> FREE
   * 6 Weak Mutation 351: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.remove(Ljava/lang/Object;)D:287 - InsertUnaryOp IINC 1 index
   * 7 Weak Mutation 350: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.remove(Ljava/lang/Object;)D:287 - InsertUnaryOp Negation of index
   * 8 Weak Mutation 352: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.remove(Ljava/lang/Object;)D:287 - InsertUnaryOp IINC -1 index
   * 9 Weak Mutation 355: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.remove(Ljava/lang/Object;)D:287 - ReplaceComparisonOperator < -> -2
   * 10 Weak Mutation 364: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.remove(Ljava/lang/Object;)D:291 - InsertUnaryOp Negation of prev
   * 11 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.remove(Ljava/lang/Object;)D: I14 Branch 23 IFLT L287 - true
   * 12 Weak Mutation 351: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.remove(Ljava/lang/Object;)D:287 - InsertUnaryOp IINC 1 index
   * 13 Weak Mutation 350: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.remove(Ljava/lang/Object;)D:287 - InsertUnaryOp Negation of index
   * 14 Weak Mutation 349: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.remove(Ljava/lang/Object;)D:286 - DeleteStatement: index(Ljava/lang/Object;)I
   * 15 Weak Mutation 348: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.remove(Ljava/lang/Object;)D:286 - ReplaceVariable key -> REMOVED
   * 16 Weak Mutation 347: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.remove(Ljava/lang/Object;)D:286 - ReplaceVariable key -> FREE
   * 17 Weak Mutation 346: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.remove(Ljava/lang/Object;)D:285 - DeleteField: no_entry_valueD
   * 18 Weak Mutation 345: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.remove(Ljava/lang/Object;)D:285 - InsertUnaryOp Negation
   * 19 Weak Mutation 352: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.remove(Ljava/lang/Object;)D:287 - InsertUnaryOp IINC -1 index
   * 20 Weak Mutation 355: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.remove(Ljava/lang/Object;)D:287 - ReplaceComparisonOperator < -> -2
   * 21 Weak Mutation 364: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.remove(Ljava/lang/Object;)D:291 - InsertUnaryOp Negation of prev
   */

  @Test
  public void test9()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectDoubleCustomHashMap<String> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (-2025), (float) 17, (double) 1644461127);
      double double0 = tObjectDoubleCustomHashMap0.remove((Object) tObjectDoubleCustomHashMap0);
      assertEquals(3, tObjectDoubleCustomHashMap0.capacity());
      assertEquals(1.644461127E9, double0, 0.01D);
      assertEquals(0, tObjectDoubleCustomHashMap0.size());
  }

  //Test case number: 10
  /*
   * 9 covered goals:
   * 1 Weak Mutation 374: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putAll(Ljava/util/Map;)V:312 - DeleteStatement: entrySet()Ljava/util/Set;
   * 2 Weak Mutation 375: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putAll(Ljava/util/Map;)V:313 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 3 Weak Mutation 377: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putAll(Ljava/util/Map;)V:313 - ReplaceComparisonOperator == -> !=
   * 4 Weak Mutation 376: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putAll(Ljava/util/Map;)V:313 - DeleteStatement: hasNext()Z
   * 5 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putAll(Ljava/util/Map;)V: I13 Branch 24 IFEQ L313 - true
   * 6 Weak Mutation 375: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putAll(Ljava/util/Map;)V:313 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 7 Weak Mutation 374: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putAll(Ljava/util/Map;)V:312 - DeleteStatement: entrySet()Ljava/util/Set;
   * 8 Weak Mutation 377: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putAll(Ljava/util/Map;)V:313 - ReplaceComparisonOperator == -> !=
   * 9 Weak Mutation 376: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putAll(Ljava/util/Map;)V:313 - DeleteStatement: hasNext()Z
   */

  @Test
  public void test10()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectDoubleCustomHashMap<String> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (-2025), (float) 17, (double) 1644461127);
      HashMap<String, Double> hashMap0 = new HashMap<String, Double>();
      tObjectDoubleCustomHashMap0.putAll((Map<? extends String, ? extends Double>) hashMap0);
      assertEquals(1.644461127E9, tObjectDoubleCustomHashMap0.getNoEntryValue(), 0.01D);
      assertEquals(3, tObjectDoubleCustomHashMap0.capacity());
  }

  //Test case number: 11
  /*
   * 23 covered goals:
   * 1 Weak Mutation 387: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V:328 - DeleteField: _set[Ljava/lang/Object;
   * 2 Weak Mutation 386: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V:328 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 385: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V:328 - DeleteField: _set[Ljava/lang/Object;
   * 4 Weak Mutation 390: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V:328 - DeleteStatement: fill([Ljava/lang/Object;IILjava/lang/Object;)V
   * 5 Weak Mutation 389: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V:328 - DeleteField: FREELjava/lang/Object;
   * 6 Weak Mutation 388: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V:328 - ReplaceVariable FREE -> REMOVED
   * 7 Weak Mutation 394: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V:329 - InsertUnaryOp Negation
   * 8 Weak Mutation 393: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V:329 - DeleteField: _values[D
   * 9 Weak Mutation 392: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V:329 - ReplaceConstant - 0 -> 1
   * 10 Weak Mutation 396: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V:329 - DeleteStatement: fill([DIID)V
   * 11 Weak Mutation 391: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V:329 - DeleteField: _values[D
   * 12 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V: root-Branch
   * 13 Weak Mutation 394: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V:329 - InsertUnaryOp Negation
   * 14 Weak Mutation 393: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V:329 - DeleteField: _values[D
   * 15 Weak Mutation 392: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V:329 - ReplaceConstant - 0 -> 1
   * 16 Weak Mutation 396: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V:329 - DeleteStatement: fill([DIID)V
   * 17 Weak Mutation 387: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V:328 - DeleteField: _set[Ljava/lang/Object;
   * 18 Weak Mutation 386: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V:328 - ReplaceConstant - 0 -> 1
   * 19 Weak Mutation 385: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V:328 - DeleteField: _set[Ljava/lang/Object;
   * 20 Weak Mutation 391: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V:329 - DeleteField: _values[D
   * 21 Weak Mutation 390: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V:328 - DeleteStatement: fill([Ljava/lang/Object;IILjava/lang/Object;)V
   * 22 Weak Mutation 389: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V:328 - DeleteField: FREELjava/lang/Object;
   * 23 Weak Mutation 388: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V:328 - ReplaceVariable FREE -> REMOVED
   */

  @Test
  public void test11()  throws Throwable  {
      TObjectDoubleCustomHashMap<String> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<String>();
      tObjectDoubleCustomHashMap0.clear();
      assertEquals(23, tObjectDoubleCustomHashMap0.capacity());
      assertEquals("{}", tObjectDoubleCustomHashMap0.toString());
  }

  //Test case number: 12
  /*
   * 87 covered goals:
   * 1 Weak Mutation 425: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable REMOVED -> FREE
   * 2 Weak Mutation 424: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp IINC -1 i
   * 3 Weak Mutation 427: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceComparisonOperator == -> !=
   * 4 Weak Mutation 426: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - DeleteField: REMOVEDLjava/lang/Object;
   * 5 Weak Mutation 419: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable k -> keys
   * 6 Weak Mutation 421: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable i -> j
   * 7 Weak Mutation 423: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp IINC 1 i
   * 8 Weak Mutation 422: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp Negation of i
   * 9 Weak Mutation 440: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp IINC -1 i
   * 10 Weak Mutation 432: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp IINC 1 j
   * 11 Weak Mutation 433: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp IINC -1 j
   * 12 Weak Mutation 434: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable j -> i
   * 13 Weak Mutation 435: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable k -> keys
   * 14 Weak Mutation 437: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable i -> j
   * 15 Weak Mutation 438: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp Negation of i
   * 16 Weak Mutation 439: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp IINC 1 i
   * 17 Weak Mutation 429: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable keys -> k
   * 18 Weak Mutation 428: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable keys -> _set
   * 19 Weak Mutation 431: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp Negation of j
   * 20 Weak Mutation 430: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable j -> i
   * 21 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L348 - false
   * 22 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;: I35 Branch 27 IF_ACMPEQ L348 - false
   * 23 Weak Mutation 410: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable k -> keys
   * 24 Weak Mutation 408: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceComparisonOperator <= -> <
   * 25 Weak Mutation 409: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceComparisonOperator <= -> -1
   * 26 Weak Mutation 414: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp IINC 1 i
   * 27 Weak Mutation 415: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp IINC -1 i
   * 28 Weak Mutation 412: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable i -> j
   * 29 Weak Mutation 413: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp Negation of i
   * 30 Weak Mutation 402: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceVariable i -> j
   * 31 Weak Mutation 403: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:347 - InsertUnaryOp Negation of i
   * 32 Weak Mutation 401: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceConstant - 0 -> 1
   * 33 Weak Mutation 406: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceVariable i -> j
   * 34 Weak Mutation 404: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:347 - InsertUnaryOp IINC 1 i
   * 35 Weak Mutation 405: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:347 - InsertUnaryOp IINC -1 i
   * 36 Weak Mutation 399: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceVariable k -> keys
   * 37 Weak Mutation 398: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:345 - DeleteField: _set[Ljava/lang/Object;
   * 38 Weak Mutation 397: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:344 - DeleteStatement: size()I
   * 39 Weak Mutation 441: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:353 - ReplaceVariable keys -> _set
   * 40 Weak Mutation 442: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:353 - ReplaceVariable keys -> k
   * 41 Weak Mutation 417: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - DeleteField: FREELjava/lang/Object;
   * 42 Weak Mutation 416: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable FREE -> REMOVED
   * 43 Weak Mutation 418: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceComparisonOperator == -> !=
   * 44 Weak Mutation 410: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable k -> keys
   * 45 Weak Mutation 408: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceComparisonOperator <= -> <
   * 46 Weak Mutation 409: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceComparisonOperator <= -> -1
   * 47 Weak Mutation 414: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp IINC 1 i
   * 48 Weak Mutation 415: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp IINC -1 i
   * 49 Weak Mutation 412: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable i -> j
   * 50 Weak Mutation 413: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp Negation of i
   * 51 Weak Mutation 402: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceVariable i -> j
   * 52 Weak Mutation 403: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:347 - InsertUnaryOp Negation of i
   * 53 Weak Mutation 401: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceConstant - 0 -> 1
   * 54 Weak Mutation 406: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceVariable i -> j
   * 55 Weak Mutation 404: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:347 - InsertUnaryOp IINC 1 i
   * 56 Weak Mutation 405: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:347 - InsertUnaryOp IINC -1 i
   * 57 Weak Mutation 399: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceVariable k -> keys
   * 58 Weak Mutation 398: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:345 - DeleteField: _set[Ljava/lang/Object;
   * 59 Weak Mutation 397: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:344 - DeleteStatement: size()I
   * 60 Weak Mutation 440: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp IINC -1 i
   * 61 Weak Mutation 441: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:353 - ReplaceVariable keys -> _set
   * 62 Weak Mutation 442: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:353 - ReplaceVariable keys -> k
   * 63 Weak Mutation 432: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp IINC 1 j
   * 64 Weak Mutation 433: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp IINC -1 j
   * 65 Weak Mutation 434: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable j -> i
   * 66 Weak Mutation 435: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable k -> keys
   * 67 Weak Mutation 437: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable i -> j
   * 68 Weak Mutation 438: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp Negation of i
   * 69 Weak Mutation 439: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp IINC 1 i
   * 70 Weak Mutation 425: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable REMOVED -> FREE
   * 71 Weak Mutation 424: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp IINC -1 i
   * 72 Weak Mutation 427: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceComparisonOperator == -> !=
   * 73 Weak Mutation 426: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - DeleteField: REMOVEDLjava/lang/Object;
   * 74 Weak Mutation 429: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable keys -> k
   * 75 Weak Mutation 428: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable keys -> _set
   * 76 Weak Mutation 431: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp Negation of j
   * 77 Weak Mutation 430: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable j -> i
   * 78 Weak Mutation 417: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - DeleteField: FREELjava/lang/Object;
   * 79 Weak Mutation 416: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable FREE -> REMOVED
   * 80 Weak Mutation 419: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable k -> keys
   * 81 Weak Mutation 418: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceComparisonOperator == -> !=
   * 82 Weak Mutation 421: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable i -> j
   * 83 Weak Mutation 423: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp IINC 1 i
   * 84 Weak Mutation 422: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp Negation of i
   * 85 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L347 - true
   * 86 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L347 - false
   * 87 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L348 - true
   */

  @Test
  public void test12()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, 481);
      Double double0 = new Double((double) 481);
      tObjectDoubleCustomHashMap0.put(double0, (double) 481);
      tObjectDoubleCustomHashMap0.keys();
      assertEquals(1, tObjectDoubleCustomHashMap0.size());
      assertEquals("{481.0=481.0}", tObjectDoubleCustomHashMap0.toString());
  }

  //Test case number: 13
  /*
   * 62 covered goals:
   * 1 Weak Mutation 443: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:359 - DeleteStatement: size()I
   * 2 Weak Mutation 444: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - ReplaceVariable a -> _set
   * 3 Weak Mutation 445: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - InsertUnaryOp Negation of size
   * 4 Weak Mutation 446: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - InsertUnaryOp IINC 1 size
   * 5 Weak Mutation 447: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - InsertUnaryOp IINC -1 size
   * 6 Weak Mutation 448: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - ReplaceComparisonOperator >= -> ==
   * 7 Weak Mutation 458: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:366 - DeleteField: _set[Ljava/lang/Object;
   * 8 Weak Mutation 470: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceComparisonOperator <= -> <
   * 9 Weak Mutation 471: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceComparisonOperator <= -> -1
   * 10 Weak Mutation 468: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable i -> size
   * 11 Weak Mutation 466: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - InsertUnaryOp IINC -1 i
   * 12 Weak Mutation 467: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable i -> j
   * 13 Weak Mutation 464: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - InsertUnaryOp Negation of i
   * 14 Weak Mutation 465: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - InsertUnaryOp IINC 1 i
   * 15 Weak Mutation 463: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable i -> size
   * 16 Weak Mutation 462: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable i -> j
   * 17 Weak Mutation 461: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceConstant - 0 -> 1
   * 18 Weak Mutation 459: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable k -> a
   * 19 Weak Mutation 478: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - InsertUnaryOp IINC -1 i
   * 20 Weak Mutation 479: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable FREE -> REMOVED
   * 21 Weak Mutation 476: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - InsertUnaryOp Negation of i
   * 22 Weak Mutation 477: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - InsertUnaryOp IINC 1 i
   * 23 Weak Mutation 474: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable i -> j
   * 24 Weak Mutation 475: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable i -> size
   * 25 Weak Mutation 472: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable k -> a
   * 26 Weak Mutation 481: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceComparisonOperator == -> !=
   * 27 Weak Mutation 480: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - DeleteField: FREELjava/lang/Object;
   * 28 Weak Mutation 508: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:374 - ReplaceVariable a -> _set
   * 29 Weak Mutation 509: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:374 - ReplaceVariable a -> k
   * 30 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I10 Branch 28 IF_ICMPGE L360 - true
   * 31 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L368 - true
   * 32 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L368 - false
   * 33 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L369 - true
   * 34 Weak Mutation 443: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:359 - DeleteStatement: size()I
   * 35 Weak Mutation 444: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - ReplaceVariable a -> _set
   * 36 Weak Mutation 445: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - InsertUnaryOp Negation of size
   * 37 Weak Mutation 446: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - InsertUnaryOp IINC 1 size
   * 38 Weak Mutation 447: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - InsertUnaryOp IINC -1 size
   * 39 Weak Mutation 478: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - InsertUnaryOp IINC -1 i
   * 40 Weak Mutation 479: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable FREE -> REMOVED
   * 41 Weak Mutation 476: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - InsertUnaryOp Negation of i
   * 42 Weak Mutation 477: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - InsertUnaryOp IINC 1 i
   * 43 Weak Mutation 474: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable i -> j
   * 44 Weak Mutation 475: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable i -> size
   * 45 Weak Mutation 472: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable k -> a
   * 46 Weak Mutation 470: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceComparisonOperator <= -> <
   * 47 Weak Mutation 471: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceComparisonOperator <= -> -1
   * 48 Weak Mutation 468: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable i -> size
   * 49 Weak Mutation 466: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - InsertUnaryOp IINC -1 i
   * 50 Weak Mutation 467: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable i -> j
   * 51 Weak Mutation 464: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - InsertUnaryOp Negation of i
   * 52 Weak Mutation 465: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - InsertUnaryOp IINC 1 i
   * 53 Weak Mutation 463: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable i -> size
   * 54 Weak Mutation 462: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable i -> j
   * 55 Weak Mutation 461: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceConstant - 0 -> 1
   * 56 Weak Mutation 459: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable k -> a
   * 57 Weak Mutation 458: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:366 - DeleteField: _set[Ljava/lang/Object;
   * 58 Weak Mutation 448: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - ReplaceComparisonOperator >= -> ==
   * 59 Weak Mutation 508: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:374 - ReplaceVariable a -> _set
   * 60 Weak Mutation 509: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:374 - ReplaceVariable a -> k
   * 61 Weak Mutation 481: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceComparisonOperator == -> !=
   * 62 Weak Mutation 480: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - DeleteField: FREELjava/lang/Object;
   */

  @Test
  public void test13()  throws Throwable  {
      TObjectDoubleCustomHashMap<String> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<String>();
      String[] stringArray0 = new String[1];
      String[] stringArray1 = tObjectDoubleCustomHashMap0.keys(stringArray0);
      assertSame(stringArray1, stringArray0);
      assertEquals(23, tObjectDoubleCustomHashMap0.capacity());
      assertNotNull(stringArray1);
  }

  //Test case number: 14
  /*
   * 85 covered goals:
   * 1 Weak Mutation 533: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - InsertUnaryOp Negation of i
   * 2 Weak Mutation 535: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - InsertUnaryOp IINC -1 i
   * 3 Weak Mutation 534: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - InsertUnaryOp IINC 1 i
   * 4 Weak Mutation 537: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - DeleteField: REMOVEDLjava/lang/Object;
   * 5 Weak Mutation 536: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - ReplaceVariable REMOVED -> FREE
   * 6 Weak Mutation 538: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - ReplaceComparisonOperator == -> !=
   * 7 Weak Mutation 548: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - InsertUnaryOp IINC 1 i
   * 8 Weak Mutation 549: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - InsertUnaryOp IINC -1 i
   * 9 Weak Mutation 546: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - ReplaceVariable i -> j
   * 10 Weak Mutation 547: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - InsertUnaryOp Negation of i
   * 11 Weak Mutation 544: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - ReplaceVariable j -> i
   * 12 Weak Mutation 545: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - ReplaceVariable v -> vals
   * 13 Weak Mutation 541: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - InsertUnaryOp Negation of j
   * 14 Weak Mutation 543: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - InsertUnaryOp IINC -1 j
   * 15 Weak Mutation 542: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - InsertUnaryOp IINC 1 j
   * 16 Weak Mutation 539: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - ReplaceVariable vals -> v
   * 17 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D: I34 Branch 33 IF_ACMPEQ L391 - false
   * 18 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D: I39 Branch 34 IF_ACMPEQ L391 - false
   * 19 Weak Mutation 216: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:203 - ReplaceComparisonOperator >= -> >
   * 20 Weak Mutation 687: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:470 - ReplaceVariable newValue -> adjust_amount
   * 21 Weak Mutation 679: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:461 - ReplaceVariable put_amount -> adjust_amount
   * 22 Weak Mutation 654: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:456 - ReplaceComparisonOperator >= -> >
   * 23 Weak Mutation 216: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:203 - ReplaceComparisonOperator >= -> >
   * 24 Weak Mutation 510: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:386 - DeleteStatement: size()I
   * 25 Weak Mutation 511: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:387 - DeleteField: _values[D
   * 26 Weak Mutation 550: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:395 - ReplaceVariable vals -> v
   * 27 Weak Mutation 548: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - InsertUnaryOp IINC 1 i
   * 28 Weak Mutation 549: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - InsertUnaryOp IINC -1 i
   * 29 Weak Mutation 546: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - ReplaceVariable i -> j
   * 30 Weak Mutation 547: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - InsertUnaryOp Negation of i
   * 31 Weak Mutation 544: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - ReplaceVariable j -> i
   * 32 Weak Mutation 545: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - ReplaceVariable v -> vals
   * 33 Weak Mutation 516: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:390 - InsertUnaryOp Negation of i
   * 34 Weak Mutation 517: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:390 - InsertUnaryOp IINC 1 i
   * 35 Weak Mutation 518: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:390 - InsertUnaryOp IINC -1 i
   * 36 Weak Mutation 519: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:390 - ReplaceVariable i -> j
   * 37 Weak Mutation 512: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:388 - DeleteField: _set[Ljava/lang/Object;
   * 38 Weak Mutation 513: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:390 - ReplaceVariable v -> vals
   * 39 Weak Mutation 514: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:390 - ReplaceConstant - 0 -> 1
   * 40 Weak Mutation 515: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:390 - ReplaceVariable i -> j
   * 41 Weak Mutation 524: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - ReplaceVariable i -> j
   * 42 Weak Mutation 525: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - InsertUnaryOp Negation of i
   * 43 Weak Mutation 526: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - InsertUnaryOp IINC 1 i
   * 44 Weak Mutation 527: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - InsertUnaryOp IINC -1 i
   * 45 Weak Mutation 521: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:390 - ReplaceComparisonOperator <= -> <
   * 46 Weak Mutation 522: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:390 - ReplaceComparisonOperator <= -> -1
   * 47 Weak Mutation 533: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - InsertUnaryOp Negation of i
   * 48 Weak Mutation 535: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - InsertUnaryOp IINC -1 i
   * 49 Weak Mutation 534: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - InsertUnaryOp IINC 1 i
   * 50 Weak Mutation 529: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - DeleteField: FREELjava/lang/Object;
   * 51 Weak Mutation 528: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - ReplaceVariable FREE -> REMOVED
   * 52 Weak Mutation 530: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - ReplaceComparisonOperator == -> !=
   * 53 Weak Mutation 541: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - InsertUnaryOp Negation of j
   * 54 Weak Mutation 543: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - InsertUnaryOp IINC -1 j
   * 55 Weak Mutation 542: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - InsertUnaryOp IINC 1 j
   * 56 Weak Mutation 537: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - DeleteField: REMOVEDLjava/lang/Object;
   * 57 Weak Mutation 536: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - ReplaceVariable REMOVED -> FREE
   * 58 Weak Mutation 539: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - ReplaceVariable vals -> v
   * 59 Weak Mutation 538: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - ReplaceComparisonOperator == -> !=
   * 60 Weak Mutation 687: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:470 - ReplaceVariable newValue -> adjust_amount
   * 61 Weak Mutation 686: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:467 - DeleteStatement: postInsertHook(Z)V
   * 62 Weak Mutation 685: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:467 - DeleteField: consumeFreeSlotZ
   * 63 Weak Mutation 684: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:467 - InsertUnaryOp Negation
   * 64 Weak Mutation 683: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:466 - ReplaceComparisonOperator == -> !=
   * 65 Weak Mutation 682: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:466 - InsertUnaryOp Negation of isNewMapping
   * 66 Weak Mutation 681: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:462 - ReplaceConstant - 1 -> 0
   * 67 Weak Mutation 680: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:461 - InsertUnaryOp Negation of put_amount
   * 68 Weak Mutation 679: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:461 - ReplaceVariable put_amount -> adjust_amount
   * 69 Weak Mutation 678: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:461 - InsertUnaryOp IINC -1 index
   * 70 Weak Mutation 677: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:461 - InsertUnaryOp IINC 1 index
   * 71 Weak Mutation 676: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:461 - InsertUnaryOp Negation of index
   * 72 Weak Mutation 675: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:461 - DeleteField: _values[D
   * 73 Weak Mutation 689: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:470 - InsertUnaryOp Negation of newValue
   * 74 Weak Mutation 652: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:456 - InsertUnaryOp IINC -1 index
   * 75 Weak Mutation 654: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:456 - ReplaceComparisonOperator >= -> >
   * 76 Weak Mutation 649: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:453 - DeleteStatement: insertKey(Ljava/lang/Object;)I
   * 77 Weak Mutation 648: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:453 - ReplaceVariable key -> REMOVED
   * 78 Weak Mutation 651: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:456 - InsertUnaryOp IINC 1 index
   * 79 Weak Mutation 650: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:456 - InsertUnaryOp Negation of index
   * 80 Weak Mutation 647: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:453 - ReplaceVariable key -> FREE
   * 81 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D: I9 Branch 41 IFGE L456 - true
   * 82 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D: I51 Branch 42 IFEQ L466 - false
   * 83 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D: I27 Branch 32 IFLE L390 - true
   * 84 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D: I27 Branch 32 IFLE L390 - false
   * 85 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D: I34 Branch 33 IF_ACMPEQ L391 - true
   */

  @Test
  public void test14()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, 686, (-11.629767F), 0.0);
      tObjectDoubleCustomHashMap0.adjustOrPutValue((Double) 0.0, (double) (-11.629767F), 0.0);
      tObjectDoubleCustomHashMap0.values();
      assertEquals(false, tObjectDoubleCustomHashMap0.isEmpty());
      assertEquals(7, tObjectDoubleCustomHashMap0.capacity());
  }

  //Test case number: 15
  /*
   * 40 covered goals:
   * 1 Weak Mutation 532: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - ReplaceVariable i -> j
   * 2 Weak Mutation 540: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - ReplaceVariable j -> i
   * 3 Weak Mutation 510: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:386 - DeleteStatement: size()I
   * 4 Weak Mutation 511: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:387 - DeleteField: _values[D
   * 5 Weak Mutation 550: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:395 - ReplaceVariable vals -> v
   * 6 Weak Mutation 548: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - InsertUnaryOp IINC 1 i
   * 7 Weak Mutation 549: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - InsertUnaryOp IINC -1 i
   * 8 Weak Mutation 546: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - ReplaceVariable i -> j
   * 9 Weak Mutation 547: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - InsertUnaryOp Negation of i
   * 10 Weak Mutation 544: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - ReplaceVariable j -> i
   * 11 Weak Mutation 545: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - ReplaceVariable v -> vals
   * 12 Weak Mutation 516: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:390 - InsertUnaryOp Negation of i
   * 13 Weak Mutation 517: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:390 - InsertUnaryOp IINC 1 i
   * 14 Weak Mutation 518: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:390 - InsertUnaryOp IINC -1 i
   * 15 Weak Mutation 519: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:390 - ReplaceVariable i -> j
   * 16 Weak Mutation 512: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:388 - DeleteField: _set[Ljava/lang/Object;
   * 17 Weak Mutation 513: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:390 - ReplaceVariable v -> vals
   * 18 Weak Mutation 514: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:390 - ReplaceConstant - 0 -> 1
   * 19 Weak Mutation 515: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:390 - ReplaceVariable i -> j
   * 20 Weak Mutation 524: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - ReplaceVariable i -> j
   * 21 Weak Mutation 525: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - InsertUnaryOp Negation of i
   * 22 Weak Mutation 526: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - InsertUnaryOp IINC 1 i
   * 23 Weak Mutation 527: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - InsertUnaryOp IINC -1 i
   * 24 Weak Mutation 521: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:390 - ReplaceComparisonOperator <= -> <
   * 25 Weak Mutation 522: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:390 - ReplaceComparisonOperator <= -> -1
   * 26 Weak Mutation 533: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - InsertUnaryOp Negation of i
   * 27 Weak Mutation 535: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - InsertUnaryOp IINC -1 i
   * 28 Weak Mutation 534: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - InsertUnaryOp IINC 1 i
   * 29 Weak Mutation 529: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - DeleteField: FREELjava/lang/Object;
   * 30 Weak Mutation 528: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - ReplaceVariable FREE -> REMOVED
   * 31 Weak Mutation 530: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - ReplaceComparisonOperator == -> !=
   * 32 Weak Mutation 541: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - InsertUnaryOp Negation of j
   * 33 Weak Mutation 543: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - InsertUnaryOp IINC -1 j
   * 34 Weak Mutation 542: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - InsertUnaryOp IINC 1 j
   * 35 Weak Mutation 537: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - DeleteField: REMOVEDLjava/lang/Object;
   * 36 Weak Mutation 536: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - ReplaceVariable REMOVED -> FREE
   * 37 Weak Mutation 539: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - ReplaceVariable vals -> v
   * 38 Weak Mutation 538: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - ReplaceComparisonOperator == -> !=
   * 39 Weak Mutation 532: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:391 - ReplaceVariable i -> j
   * 40 Weak Mutation 540: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D:392 - ReplaceVariable j -> i
   */

  @Test
  public void test15()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, 686, (-11.629767F), 0.0);
      tObjectDoubleCustomHashMap0.put((Double) 804.6100210802085, 1.0);
      tObjectDoubleCustomHashMap0.values();
      assertEquals(1, tObjectDoubleCustomHashMap0.size());
      assertEquals("{804.6100210802085=1.0}", tObjectDoubleCustomHashMap0.toString());
  }

  //Test case number: 16
  /*
   * 125 covered goals:
   * 1 Weak Mutation 585: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - ReplaceVariable i -> j
   * 2 Weak Mutation 586: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - ReplaceVariable i -> size
   * 3 Weak Mutation 587: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - InsertUnaryOp Negation of i
   * 4 Weak Mutation 588: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - InsertUnaryOp IINC 1 i
   * 5 Weak Mutation 589: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - InsertUnaryOp IINC -1 i
   * 6 Weak Mutation 590: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - ReplaceVariable REMOVED -> FREE
   * 7 Weak Mutation 591: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - DeleteField: REMOVEDLjava/lang/Object;
   * 8 Weak Mutation 592: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - ReplaceComparisonOperator == -> !=
   * 9 Weak Mutation 593: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - ReplaceVariable array -> v
   * 10 Weak Mutation 595: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - ReplaceVariable j -> size
   * 11 Weak Mutation 594: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - ReplaceVariable j -> i
   * 12 Weak Mutation 597: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - InsertUnaryOp IINC 1 j
   * 13 Weak Mutation 596: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - InsertUnaryOp Negation of j
   * 14 Weak Mutation 599: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - ReplaceVariable j -> i
   * 15 Weak Mutation 598: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - InsertUnaryOp IINC -1 j
   * 16 Weak Mutation 601: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - ReplaceVariable v -> array
   * 17 Weak Mutation 600: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - ReplaceVariable j -> size
   * 18 Weak Mutation 603: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - ReplaceVariable i -> size
   * 19 Weak Mutation 602: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - ReplaceVariable i -> j
   * 20 Weak Mutation 605: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - InsertUnaryOp IINC 1 i
   * 21 Weak Mutation 604: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - InsertUnaryOp Negation of i
   * 22 Weak Mutation 606: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - InsertUnaryOp IINC -1 i
   * 23 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D: I44 Branch 37 IF_ACMPEQ L410 - false
   * 24 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D: I49 Branch 38 IF_ACMPEQ L410 - false
   * 25 Weak Mutation 551: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:401 - DeleteStatement: size()I
   * 26 Weak Mutation 554: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:402 - InsertUnaryOp IINC -1 size
   * 27 Weak Mutation 555: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:402 - ReplaceComparisonOperator >= -> ==
   * 28 Weak Mutation 552: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:402 - InsertUnaryOp Negation of size
   * 29 Weak Mutation 553: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:402 - InsertUnaryOp IINC 1 size
   * 30 Weak Mutation 567: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:409 - InsertUnaryOp Negation of i
   * 31 Weak Mutation 566: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:409 - ReplaceVariable i -> size
   * 32 Weak Mutation 565: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:409 - ReplaceVariable i -> j
   * 33 Weak Mutation 564: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:409 - ReplaceConstant - 0 -> 1
   * 34 Weak Mutation 563: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:409 - ReplaceVariable v -> array
   * 35 Weak Mutation 562: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:407 - DeleteField: _set[Ljava/lang/Object;
   * 36 Weak Mutation 561: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:406 - DeleteField: _values[D
   * 37 Weak Mutation 574: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:409 - ReplaceComparisonOperator <= -> -1
   * 38 Weak Mutation 573: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:409 - ReplaceComparisonOperator <= -> <
   * 39 Weak Mutation 571: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:409 - ReplaceVariable i -> size
   * 40 Weak Mutation 570: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:409 - ReplaceVariable i -> j
   * 41 Weak Mutation 569: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:409 - InsertUnaryOp IINC -1 i
   * 42 Weak Mutation 568: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:409 - InsertUnaryOp IINC 1 i
   * 43 Weak Mutation 610: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:414 - InsertUnaryOp IINC -1 size
   * 44 Weak Mutation 608: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:414 - InsertUnaryOp Negation of size
   * 45 Weak Mutation 609: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:414 - InsertUnaryOp IINC 1 size
   * 46 Weak Mutation 614: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:415 - ReplaceVariable array -> v
   * 47 Weak Mutation 615: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:415 - InsertUnaryOp Negation of size
   * 48 Weak Mutation 613: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:414 - ReplaceComparisonOperator <= -> -1
   * 49 Weak Mutation 618: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:415 - InsertUnaryOp Negation
   * 50 Weak Mutation 616: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:415 - InsertUnaryOp IINC 1 size
   * 51 Weak Mutation 617: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:415 - InsertUnaryOp IINC -1 size
   * 52 Weak Mutation 620: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:417 - ReplaceVariable array -> v
   * 53 Weak Mutation 576: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - ReplaceVariable i -> j
   * 54 Weak Mutation 577: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - ReplaceVariable i -> size
   * 55 Weak Mutation 578: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - InsertUnaryOp Negation of i
   * 56 Weak Mutation 579: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - InsertUnaryOp IINC 1 i
   * 57 Weak Mutation 580: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - InsertUnaryOp IINC -1 i
   * 58 Weak Mutation 581: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - ReplaceVariable FREE -> REMOVED
   * 59 Weak Mutation 582: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - DeleteField: FREELjava/lang/Object;
   * 60 Weak Mutation 583: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - ReplaceComparisonOperator == -> !=
   * 61 Weak Mutation 607: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:414 - ReplaceVariable array -> v
   * 62 Weak Mutation 551: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:401 - DeleteStatement: size()I
   * 63 Weak Mutation 554: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:402 - InsertUnaryOp IINC -1 size
   * 64 Weak Mutation 555: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:402 - ReplaceComparisonOperator >= -> ==
   * 65 Weak Mutation 552: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:402 - InsertUnaryOp Negation of size
   * 66 Weak Mutation 553: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:402 - InsertUnaryOp IINC 1 size
   * 67 Weak Mutation 567: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:409 - InsertUnaryOp Negation of i
   * 68 Weak Mutation 566: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:409 - ReplaceVariable i -> size
   * 69 Weak Mutation 565: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:409 - ReplaceVariable i -> j
   * 70 Weak Mutation 564: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:409 - ReplaceConstant - 0 -> 1
   * 71 Weak Mutation 563: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:409 - ReplaceVariable v -> array
   * 72 Weak Mutation 562: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:407 - DeleteField: _set[Ljava/lang/Object;
   * 73 Weak Mutation 561: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:406 - DeleteField: _values[D
   * 74 Weak Mutation 574: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:409 - ReplaceComparisonOperator <= -> -1
   * 75 Weak Mutation 573: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:409 - ReplaceComparisonOperator <= -> <
   * 76 Weak Mutation 571: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:409 - ReplaceVariable i -> size
   * 77 Weak Mutation 570: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:409 - ReplaceVariable i -> j
   * 78 Weak Mutation 569: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:409 - InsertUnaryOp IINC -1 i
   * 79 Weak Mutation 568: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:409 - InsertUnaryOp IINC 1 i
   * 80 Weak Mutation 610: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:414 - InsertUnaryOp IINC -1 size
   * 81 Weak Mutation 608: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:414 - InsertUnaryOp Negation of size
   * 82 Weak Mutation 609: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:414 - InsertUnaryOp IINC 1 size
   * 83 Weak Mutation 614: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:415 - ReplaceVariable array -> v
   * 84 Weak Mutation 615: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:415 - InsertUnaryOp Negation of size
   * 85 Weak Mutation 613: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:414 - ReplaceComparisonOperator <= -> -1
   * 86 Weak Mutation 618: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:415 - InsertUnaryOp Negation
   * 87 Weak Mutation 616: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:415 - InsertUnaryOp IINC 1 size
   * 88 Weak Mutation 617: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:415 - InsertUnaryOp IINC -1 size
   * 89 Weak Mutation 620: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:417 - ReplaceVariable array -> v
   * 90 Weak Mutation 576: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - ReplaceVariable i -> j
   * 91 Weak Mutation 577: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - ReplaceVariable i -> size
   * 92 Weak Mutation 578: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - InsertUnaryOp Negation of i
   * 93 Weak Mutation 579: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - InsertUnaryOp IINC 1 i
   * 94 Weak Mutation 580: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - InsertUnaryOp IINC -1 i
   * 95 Weak Mutation 581: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - ReplaceVariable FREE -> REMOVED
   * 96 Weak Mutation 582: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - DeleteField: FREELjava/lang/Object;
   * 97 Weak Mutation 583: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - ReplaceComparisonOperator == -> !=
   * 98 Weak Mutation 585: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - ReplaceVariable i -> j
   * 99 Weak Mutation 586: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - ReplaceVariable i -> size
   * 100 Weak Mutation 587: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - InsertUnaryOp Negation of i
   * 101 Weak Mutation 588: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - InsertUnaryOp IINC 1 i
   * 102 Weak Mutation 589: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - InsertUnaryOp IINC -1 i
   * 103 Weak Mutation 590: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - ReplaceVariable REMOVED -> FREE
   * 104 Weak Mutation 591: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - DeleteField: REMOVEDLjava/lang/Object;
   * 105 Weak Mutation 593: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - ReplaceVariable array -> v
   * 106 Weak Mutation 592: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:410 - ReplaceComparisonOperator == -> !=
   * 107 Weak Mutation 595: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - ReplaceVariable j -> size
   * 108 Weak Mutation 594: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - ReplaceVariable j -> i
   * 109 Weak Mutation 597: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - InsertUnaryOp IINC 1 j
   * 110 Weak Mutation 596: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - InsertUnaryOp Negation of j
   * 111 Weak Mutation 599: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - ReplaceVariable j -> i
   * 112 Weak Mutation 598: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - InsertUnaryOp IINC -1 j
   * 113 Weak Mutation 601: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - ReplaceVariable v -> array
   * 114 Weak Mutation 600: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - ReplaceVariable j -> size
   * 115 Weak Mutation 603: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - ReplaceVariable i -> size
   * 116 Weak Mutation 602: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - ReplaceVariable i -> j
   * 117 Weak Mutation 605: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - InsertUnaryOp IINC 1 i
   * 118 Weak Mutation 604: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - InsertUnaryOp Negation of i
   * 119 Weak Mutation 607: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:414 - ReplaceVariable array -> v
   * 120 Weak Mutation 606: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D:411 - InsertUnaryOp IINC -1 i
   * 121 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D: I10 Branch 35 IF_ICMPGE L402 - true
   * 122 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D: I37 Branch 36 IFLE L409 - true
   * 123 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D: I37 Branch 36 IFLE L409 - false
   * 124 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D: I44 Branch 37 IF_ACMPEQ L410 - true
   * 125 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D: I65 Branch 39 IF_ICMPLE L414 - false
   */

  @Test
  public void test16()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, 481);
      Double double0 = new Double((double) 481);
      tObjectDoubleCustomHashMap0.put(double0, (double) 481);
      double[] doubleArray0 = new double[8];
      tObjectDoubleCustomHashMap0.values(doubleArray0);
      assertEquals("{481.0=481.0}", tObjectDoubleCustomHashMap0.toString());
      assertEquals(1, tObjectDoubleCustomHashMap0.size());
  }

  //Test case number: 17
  /*
   * 31 covered goals:
   * 1 Weak Mutation 622: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceVariable key -> REMOVED
   * 2 Weak Mutation 623: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceConstant - 1.0 -> 0.0
   * 3 Weak Mutation 621: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceVariable key -> FREE
   * 4 Weak Mutation 626: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.increment(Ljava/lang/Object;)Z:433 - DeleteStatement: adjustValue(Ljava/lang/Object;D)Z
   * 5 Weak Mutation 625: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceConstant - 1.0 -> 2.0
   * 6 Weak Mutation 624: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceConstant - 1.0 -> -1.0
   * 7 Weak Mutation 627: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:439 - ReplaceVariable key -> FREE
   * 8 Weak Mutation 629: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:439 - DeleteStatement: index(Ljava/lang/Object;)I
   * 9 Weak Mutation 628: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:439 - ReplaceVariable key -> REMOVED
   * 10 Weak Mutation 631: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:440 - InsertUnaryOp IINC 1 index
   * 11 Weak Mutation 630: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:440 - InsertUnaryOp Negation of index
   * 12 Weak Mutation 635: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:440 - ReplaceComparisonOperator >= -> -1
   * 13 Weak Mutation 632: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:440 - InsertUnaryOp IINC -1 index
   * 14 Weak Mutation 636: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:441 - ReplaceConstant - 0 -> 1
   * 15 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.increment(Ljava/lang/Object;)Z: root-Branch
   * 16 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;)V: root-Branch
   * 17 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z: I9 Branch 40 IFGE L440 - false
   * 18 Weak Mutation 622: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceVariable key -> REMOVED
   * 19 Weak Mutation 623: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceConstant - 1.0 -> 0.0
   * 20 Weak Mutation 621: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceVariable key -> FREE
   * 21 Weak Mutation 627: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:439 - ReplaceVariable key -> FREE
   * 22 Weak Mutation 626: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.increment(Ljava/lang/Object;)Z:433 - DeleteStatement: adjustValue(Ljava/lang/Object;D)Z
   * 23 Weak Mutation 625: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceConstant - 1.0 -> 2.0
   * 24 Weak Mutation 624: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceConstant - 1.0 -> -1.0
   * 25 Weak Mutation 631: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:440 - InsertUnaryOp IINC 1 index
   * 26 Weak Mutation 630: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:440 - InsertUnaryOp Negation of index
   * 27 Weak Mutation 629: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:439 - DeleteStatement: index(Ljava/lang/Object;)I
   * 28 Weak Mutation 628: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:439 - ReplaceVariable key -> REMOVED
   * 29 Weak Mutation 635: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:440 - ReplaceComparisonOperator >= -> -1
   * 30 Weak Mutation 632: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:440 - InsertUnaryOp IINC -1 index
   * 31 Weak Mutation 636: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:441 - ReplaceConstant - 0 -> 1
   */

  @Test
  public void test17()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      boolean boolean0 = tObjectDoubleCustomHashMap0.increment((Integer) 1868);
      assertEquals(23, tObjectDoubleCustomHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 18
  /*
   * 30 covered goals:
   * 1 Weak Mutation 633: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:440 - ReplaceComparisonOperator >= -> ==
   * 2 Weak Mutation 639: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:443 - InsertUnaryOp IINC 1 index
   * 3 Weak Mutation 638: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:443 - InsertUnaryOp Negation of index
   * 4 Weak Mutation 637: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:443 - DeleteField: _values[D
   * 5 Weak Mutation 645: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:443 - ReplaceArithmeticOperator + -> *
   * 6 Weak Mutation 644: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:443 - ReplaceArithmeticOperator + -> /
   * 7 Weak Mutation 641: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:443 - InsertUnaryOp Negation of amount
   * 8 Weak Mutation 640: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:443 - InsertUnaryOp IINC -1 index
   * 9 Weak Mutation 643: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:443 - ReplaceArithmeticOperator + -> %
   * 10 Weak Mutation 642: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:443 - ReplaceArithmeticOperator + -> -
   * 11 Weak Mutation 646: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:444 - ReplaceConstant - 1 -> 0
   * 12 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z: I9 Branch 40 IFGE L440 - true
   * 13 Weak Mutation 319: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:268 - ReplaceComparisonOperator >= -> >
   * 14 Weak Mutation 627: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:439 - ReplaceVariable key -> FREE
   * 15 Weak Mutation 631: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:440 - InsertUnaryOp IINC 1 index
   * 16 Weak Mutation 630: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:440 - InsertUnaryOp Negation of index
   * 17 Weak Mutation 629: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:439 - DeleteStatement: index(Ljava/lang/Object;)I
   * 18 Weak Mutation 628: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:439 - ReplaceVariable key -> REMOVED
   * 19 Weak Mutation 632: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:440 - InsertUnaryOp IINC -1 index
   * 20 Weak Mutation 633: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:440 - ReplaceComparisonOperator >= -> ==
   * 21 Weak Mutation 639: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:443 - InsertUnaryOp IINC 1 index
   * 22 Weak Mutation 638: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:443 - InsertUnaryOp Negation of index
   * 23 Weak Mutation 637: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:443 - DeleteField: _values[D
   * 24 Weak Mutation 645: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:443 - ReplaceArithmeticOperator + -> *
   * 25 Weak Mutation 644: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:443 - ReplaceArithmeticOperator + -> /
   * 26 Weak Mutation 646: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:444 - ReplaceConstant - 1 -> 0
   * 27 Weak Mutation 641: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:443 - InsertUnaryOp Negation of amount
   * 28 Weak Mutation 640: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:443 - InsertUnaryOp IINC -1 index
   * 29 Weak Mutation 643: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:443 - ReplaceArithmeticOperator + -> %
   * 30 Weak Mutation 642: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z:443 - ReplaceArithmeticOperator + -> -
   */

//   @Test
//   public void test18()  throws Throwable  {
//       IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
//       TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, 686, (-11.629767F), 0.0);
//       tObjectDoubleCustomHashMap0.put((Double) 804.6100210802085, 1.0);
//       boolean boolean0 = tObjectDoubleCustomHashMap0.adjustValue((Double) 804.6100210802085, 16.30841612343905);
//       assertEquals(1, tObjectDoubleCustomHashMap0.size());
//       assertEquals(true, boolean0);
//   }

  //Test case number: 19
  /*
   * 3 covered goals:
   * 1 Weak Mutation 690: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z:482 - DeleteStatement: forEach(Lgnu/trove/procedure/TObjectProcedure;)Z
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   * 3 Weak Mutation 690: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z:482 - DeleteStatement: forEach(Lgnu/trove/procedure/TObjectProcedure;)Z
   */

  @Test
  public void test19()  throws Throwable  {
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>();
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tObjectDoubleCustomHashMap0._set);
      boolean boolean0 = tObjectDoubleCustomHashMap0.forEachKey((TObjectProcedure<? super Integer>) toObjectArrayProceedure0);
      assertEquals(true, boolean0);
      assertEquals(23, tObjectDoubleCustomHashMap0.capacity());
  }

  //Test case number: 20
  /*
   * 33 covered goals:
   * 1 Weak Mutation 691: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:494 - DeleteField: _set[Ljava/lang/Object;
   * 2 Weak Mutation 692: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:495 - DeleteField: _values[D
   * 3 Weak Mutation 698: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:496 - ReplaceComparisonOperator <= -> -1
   * 4 Weak Mutation 697: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:496 - ReplaceComparisonOperator <= -> <
   * 5 Weak Mutation 694: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:496 - InsertUnaryOp IINC 1 i
   * 6 Weak Mutation 695: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:496 - InsertUnaryOp IINC -1 i
   * 7 Weak Mutation 693: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:496 - InsertUnaryOp Negation of i
   * 8 Weak Mutation 702: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:497 - InsertUnaryOp IINC -1 i
   * 9 Weak Mutation 703: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:497 - ReplaceVariable FREE -> REMOVED
   * 10 Weak Mutation 700: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:497 - InsertUnaryOp Negation of i
   * 11 Weak Mutation 701: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:497 - InsertUnaryOp IINC 1 i
   * 12 Weak Mutation 705: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:497 - ReplaceComparisonOperator == -> !=
   * 13 Weak Mutation 704: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:497 - DeleteField: FREELjava/lang/Object;
   * 14 Weak Mutation 719: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:502 - ReplaceConstant - 1 -> 0
   * 15 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: I18 Branch 43 IFLE L496 - true
   * 16 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: I18 Branch 43 IFLE L496 - false
   * 17 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: I25 Branch 44 IF_ACMPEQ L497 - true
   * 18 Weak Mutation 96: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IF)V:114 - InsertUnaryOp Negation
   * 19 Weak Mutation 702: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:497 - InsertUnaryOp IINC -1 i
   * 20 Weak Mutation 703: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:497 - ReplaceVariable FREE -> REMOVED
   * 21 Weak Mutation 700: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:497 - InsertUnaryOp Negation of i
   * 22 Weak Mutation 701: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:497 - InsertUnaryOp IINC 1 i
   * 23 Weak Mutation 698: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:496 - ReplaceComparisonOperator <= -> -1
   * 24 Weak Mutation 697: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:496 - ReplaceComparisonOperator <= -> <
   * 25 Weak Mutation 694: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:496 - InsertUnaryOp IINC 1 i
   * 26 Weak Mutation 695: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:496 - InsertUnaryOp IINC -1 i
   * 27 Weak Mutation 692: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:495 - DeleteField: _values[D
   * 28 Weak Mutation 693: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:496 - InsertUnaryOp Negation of i
   * 29 Weak Mutation 691: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:494 - DeleteField: _set[Ljava/lang/Object;
   * 30 Weak Mutation 719: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:502 - ReplaceConstant - 1 -> 0
   * 31 Weak Mutation 705: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:497 - ReplaceComparisonOperator == -> !=
   * 32 Weak Mutation 704: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:497 - DeleteField: FREELjava/lang/Object;
   * 33 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IF)V: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, 0, (float) 0);
      boolean boolean0 = tObjectDoubleCustomHashMap0.forEachValue((TDoubleProcedure) null);
      assertEquals(true, boolean0);
      assertEquals(0.0, tObjectDoubleCustomHashMap0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 21
  /*
   * 43 covered goals:
   * 1 Weak Mutation 754: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:537 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 755: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:539 - DeleteField: _set[Ljava/lang/Object;
   * 3 Weak Mutation 756: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:540 - DeleteField: _values[D
   * 4 Weak Mutation 757: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:543 - DeleteStatement: tempDisableAutoCompaction()V
   * 5 Weak Mutation 763: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:545 - ReplaceComparisonOperator <= -> <
   * 6 Weak Mutation 760: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:545 - InsertUnaryOp IINC 1 i
   * 7 Weak Mutation 761: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:545 - InsertUnaryOp IINC -1 i
   * 8 Weak Mutation 764: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:545 - ReplaceComparisonOperator <= -> -1
   * 9 Weak Mutation 759: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:545 - InsertUnaryOp Negation of i
   * 10 Weak Mutation 766: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:546 - InsertUnaryOp Negation of i
   * 11 Weak Mutation 767: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:546 - InsertUnaryOp IINC 1 i
   * 12 Weak Mutation 770: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:546 - DeleteField: FREELjava/lang/Object;
   * 13 Weak Mutation 771: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:546 - ReplaceComparisonOperator == -> !=
   * 14 Weak Mutation 768: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:546 - InsertUnaryOp IINC -1 i
   * 15 Weak Mutation 769: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:546 - ReplaceVariable FREE -> REMOVED
   * 16 Weak Mutation 794: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:555 - DeleteStatement: reenableAutoCompaction(Z)V
   * 17 Weak Mutation 793: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:555 - ReplaceConstant - 1 -> 0
   * 18 Weak Mutation 799: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:558 - InsertUnaryOp IINC -1 modified
   * 19 Weak Mutation 798: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:558 - InsertUnaryOp IINC 1 modified
   * 20 Weak Mutation 797: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:558 - InsertUnaryOp Negation of modified
   * 21 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I27 Branch 51 IFLE L545 - true
   * 22 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I27 Branch 51 IFLE L545 - false
   * 23 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I34 Branch 52 IF_ACMPEQ L546 - true
   * 24 Weak Mutation 763: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:545 - ReplaceComparisonOperator <= -> <
   * 25 Weak Mutation 760: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:545 - InsertUnaryOp IINC 1 i
   * 26 Weak Mutation 761: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:545 - InsertUnaryOp IINC -1 i
   * 27 Weak Mutation 766: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:546 - InsertUnaryOp Negation of i
   * 28 Weak Mutation 767: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:546 - InsertUnaryOp IINC 1 i
   * 29 Weak Mutation 764: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:545 - ReplaceComparisonOperator <= -> -1
   * 30 Weak Mutation 754: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:537 - ReplaceConstant - 0 -> 1
   * 31 Weak Mutation 755: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:539 - DeleteField: _set[Ljava/lang/Object;
   * 32 Weak Mutation 759: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:545 - InsertUnaryOp Negation of i
   * 33 Weak Mutation 756: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:540 - DeleteField: _values[D
   * 34 Weak Mutation 757: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:543 - DeleteStatement: tempDisableAutoCompaction()V
   * 35 Weak Mutation 799: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:558 - InsertUnaryOp IINC -1 modified
   * 36 Weak Mutation 798: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:558 - InsertUnaryOp IINC 1 modified
   * 37 Weak Mutation 797: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:558 - InsertUnaryOp Negation of modified
   * 38 Weak Mutation 794: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:555 - DeleteStatement: reenableAutoCompaction(Z)V
   * 39 Weak Mutation 793: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:555 - ReplaceConstant - 1 -> 0
   * 40 Weak Mutation 770: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:546 - DeleteField: FREELjava/lang/Object;
   * 41 Weak Mutation 771: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:546 - ReplaceComparisonOperator == -> !=
   * 42 Weak Mutation 768: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:546 - InsertUnaryOp IINC -1 i
   * 43 Weak Mutation 769: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:546 - ReplaceVariable FREE -> REMOVED
   */

  @Test
  public void test21()  throws Throwable  {
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>();
      boolean boolean0 = tObjectDoubleCustomHashMap0.retainEntries((TObjectDoubleProcedure<? super Double>) null);
      assertEquals(23, tObjectDoubleCustomHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 22
  /*
   * 49 covered goals:
   * 1 Weak Mutation 800: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:568 - DeleteField: _set[Ljava/lang/Object;
   * 2 Weak Mutation 801: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:569 - DeleteField: _values[D
   * 3 Weak Mutation 804: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:570 - InsertUnaryOp IINC -1 i
   * 4 Weak Mutation 807: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:570 - ReplaceComparisonOperator <= -> -1
   * 5 Weak Mutation 802: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:570 - InsertUnaryOp Negation of i
   * 6 Weak Mutation 803: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:570 - InsertUnaryOp IINC 1 i
   * 7 Weak Mutation 817: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:571 - ReplaceVariable REMOVED -> FREE
   * 8 Weak Mutation 816: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:571 - InsertUnaryOp IINC -1 i
   * 9 Weak Mutation 819: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:571 - ReplaceComparisonOperator == -> !=
   * 10 Weak Mutation 818: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:571 - DeleteField: REMOVEDLjava/lang/Object;
   * 11 Weak Mutation 812: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:571 - ReplaceComparisonOperator = null -> != null
   * 12 Weak Mutation 814: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:571 - InsertUnaryOp Negation of i
   * 13 Weak Mutation 815: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:571 - InsertUnaryOp IINC 1 i
   * 14 Weak Mutation 809: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:571 - InsertUnaryOp Negation of i
   * 15 Weak Mutation 810: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:571 - InsertUnaryOp IINC 1 i
   * 16 Weak Mutation 811: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:571 - InsertUnaryOp IINC -1 i
   * 17 Weak Mutation 821: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:572 - InsertUnaryOp IINC 1 i
   * 18 Weak Mutation 820: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:572 - InsertUnaryOp Negation of i
   * 19 Weak Mutation 823: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:572 - InsertUnaryOp Negation of i
   * 20 Weak Mutation 822: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:572 - InsertUnaryOp IINC -1 i
   * 21 Weak Mutation 825: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:572 - InsertUnaryOp IINC -1 i
   * 22 Weak Mutation 824: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:572 - InsertUnaryOp IINC 1 i
   * 23 Weak Mutation 826: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:572 - DeleteStatement: execute(D)D
   * 24 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V: I18 Branch 55 IFLE L570 - false
   * 25 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V: I24 Branch 56 IFNULL L571 - false
   * 26 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V: I29 Branch 57 IF_ACMPEQ L571 - false
   * 27 Weak Mutation 821: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:572 - InsertUnaryOp IINC 1 i
   * 28 Weak Mutation 820: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:572 - InsertUnaryOp Negation of i
   * 29 Weak Mutation 823: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:572 - InsertUnaryOp Negation of i
   * 30 Weak Mutation 822: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:572 - InsertUnaryOp IINC -1 i
   * 31 Weak Mutation 817: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:571 - ReplaceVariable REMOVED -> FREE
   * 32 Weak Mutation 816: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:571 - InsertUnaryOp IINC -1 i
   * 33 Weak Mutation 819: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:571 - ReplaceComparisonOperator == -> !=
   * 34 Weak Mutation 818: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:571 - DeleteField: REMOVEDLjava/lang/Object;
   * 35 Weak Mutation 825: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:572 - InsertUnaryOp IINC -1 i
   * 36 Weak Mutation 824: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:572 - InsertUnaryOp IINC 1 i
   * 37 Weak Mutation 826: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:572 - DeleteStatement: execute(D)D
   * 38 Weak Mutation 804: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:570 - InsertUnaryOp IINC -1 i
   * 39 Weak Mutation 807: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:570 - ReplaceComparisonOperator <= -> -1
   * 40 Weak Mutation 800: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:568 - DeleteField: _set[Ljava/lang/Object;
   * 41 Weak Mutation 801: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:569 - DeleteField: _values[D
   * 42 Weak Mutation 802: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:570 - InsertUnaryOp Negation of i
   * 43 Weak Mutation 803: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:570 - InsertUnaryOp IINC 1 i
   * 44 Weak Mutation 812: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:571 - ReplaceComparisonOperator = null -> != null
   * 45 Weak Mutation 814: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:571 - InsertUnaryOp Negation of i
   * 46 Weak Mutation 815: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:571 - InsertUnaryOp IINC 1 i
   * 47 Weak Mutation 809: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:571 - InsertUnaryOp Negation of i
   * 48 Weak Mutation 810: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:571 - InsertUnaryOp IINC 1 i
   * 49 Weak Mutation 811: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:571 - InsertUnaryOp IINC -1 i
   */

  @Test
  public void test22()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, (-819));
      // Undeclared exception!
      try {
        tObjectDoubleCustomHashMap0.transformValues((TDoubleFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 27 covered goals:
   * 1 Weak Mutation 829: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:588 - ReplaceComparisonOperator != -> ==
   * 2 Weak Mutation 828: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:588 - ReplaceVariable other -> REMOVED
   * 3 Weak Mutation 827: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:588 - ReplaceVariable other -> FREE
   * 4 Weak Mutation 831: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:591 - ReplaceVariable other -> FREE
   * 5 Weak Mutation 832: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:591 - ReplaceVariable other -> REMOVED
   * 6 Weak Mutation 834: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:592 - DeleteStatement: size()I
   * 7 Weak Mutation 833: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:592 - DeleteStatement: size()I
   * 8 Weak Mutation 836: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:592 - ReplaceComparisonOperator == -> -2
   * 9 Weak Mutation 839: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:596 - DeleteStatement: iterator()Lgnu/trove/iterator/TObjectDoubleIterator;
   * 10 Weak Mutation 840: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:597 - DeleteStatement: hasNext()Z
   * 11 Weak Mutation 841: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:597 - ReplaceComparisonOperator == -> !=
   * 12 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.iterator()Lgnu/trove/iterator/TObjectDoubleIterator;: root-Branch
   * 13 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$TObjectDoubleHashIterator.<init>(Lgnu/trove/map/custom_hash/TObjectDoubleCustomHashMap;Lgnu/trove/map/custom_hash/TObjectDoubleCustomHashMap;)V: root-Branch
   * 14 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L588 - true
   * 15 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 59 IF_ICMPEQ L592 - true
   * 16 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 60 IFEQ L597 - true
   * 17 Weak Mutation 829: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:588 - ReplaceComparisonOperator != -> ==
   * 18 Weak Mutation 828: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:588 - ReplaceVariable other -> REMOVED
   * 19 Weak Mutation 831: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:591 - ReplaceVariable other -> FREE
   * 20 Weak Mutation 827: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:588 - ReplaceVariable other -> FREE
   * 21 Weak Mutation 834: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:592 - DeleteStatement: size()I
   * 22 Weak Mutation 832: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:591 - ReplaceVariable other -> REMOVED
   * 23 Weak Mutation 833: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:592 - DeleteStatement: size()I
   * 24 Weak Mutation 839: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:596 - DeleteStatement: iterator()Lgnu/trove/iterator/TObjectDoubleIterator;
   * 25 Weak Mutation 836: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:592 - ReplaceComparisonOperator == -> -2
   * 26 Weak Mutation 840: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:597 - DeleteStatement: hasNext()Z
   * 27 Weak Mutation 841: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:597 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test23()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0);
      boolean boolean0 = tObjectDoubleCustomHashMap0.equals((Object) tObjectDoubleCustomHashMap0);
      assertEquals(true, boolean0);
      assertEquals(23, tObjectDoubleCustomHashMap0.capacity());
  }

  //Test case number: 24
  /*
   * 6 covered goals:
   * 1 Weak Mutation 830: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:589 - ReplaceConstant - 0 -> 1
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L588 - false
   * 3 Weak Mutation 829: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:588 - ReplaceComparisonOperator != -> ==
   * 4 Weak Mutation 828: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:588 - ReplaceVariable other -> REMOVED
   * 5 Weak Mutation 827: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:588 - ReplaceVariable other -> FREE
   * 6 Weak Mutation 830: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z:589 - ReplaceConstant - 0 -> 1
   */

  @Test
  public void test24()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      boolean boolean0 = tObjectDoubleCustomHashMap0.equals((Object) "*,fpvdvqq2kuu");
      assertEquals(23, tObjectDoubleCustomHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 25
  /*
   * 125 covered goals:
   * 1 Weak Mutation 928: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - ReplaceArithmeticOperator + -> -
   * 2 Weak Mutation 931: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - ReplaceArithmeticOperator + -> *
   * 3 Weak Mutation 100: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:134 - DeleteField: no_entry_valueD
   * 4 Weak Mutation 110: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:135 - DeleteStatement: fill([DD)V
   * 5 Weak Mutation 108: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:135 - InsertUnaryOp Negation
   * 6 Weak Mutation 109: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:135 - DeleteField: no_entry_valueD
   * 7 Weak Mutation 107: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:135 - DeleteField: _values[D
   * 8 Weak Mutation 104: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:134 - ReplaceComparisonOperator == -> >=
   * 9 Weak Mutation 174: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:197 - DeleteField: no_entry_valueD
   * 10 Weak Mutation 287: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D:251 - DeleteStatement: insertKey(Ljava/lang/Object;)I
   * 11 Weak Mutation 286: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D:251 - ReplaceVariable key -> REMOVED
   * 12 Weak Mutation 285: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D:251 - ReplaceVariable key -> FREE
   * 13 Weak Mutation 315: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:266 - DeleteField: no_entry_valueD
   * 14 Weak Mutation 288: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D:252 - InsertUnaryOp Negation of value
   * 15 Weak Mutation 289: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D:252 - InsertUnaryOp Negation of index
   * 16 Weak Mutation 290: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D:252 - InsertUnaryOp IINC 1 index
   * 17 Weak Mutation 291: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D:252 - InsertUnaryOp IINC -1 index
   * 18 Weak Mutation 881: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:625 - InsertUnaryOp Negation of i
   * 19 Weak Mutation 880: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:625 - ReplaceVariable i -> hashcode
   * 20 Weak Mutation 883: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:625 - InsertUnaryOp IINC -1 i
   * 21 Weak Mutation 882: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:625 - InsertUnaryOp IINC 1 i
   * 22 Weak Mutation 884: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:625 - ReplaceVariable i -> hashcode
   * 23 Weak Mutation 887: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:625 - ReplaceComparisonOperator <= -> -1
   * 24 Weak Mutation 886: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:625 - ReplaceComparisonOperator <= -> <
   * 25 Weak Mutation 889: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - ReplaceVariable i -> hashcode
   * 26 Weak Mutation 891: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - InsertUnaryOp IINC 1 i
   * 27 Weak Mutation 890: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - InsertUnaryOp Negation of i
   * 28 Weak Mutation 893: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - ReplaceVariable FREE -> REMOVED
   * 29 Weak Mutation 892: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - InsertUnaryOp IINC -1 i
   * 30 Weak Mutation 895: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - ReplaceComparisonOperator == -> !=
   * 31 Weak Mutation 894: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - DeleteField: FREELjava/lang/Object;
   * 32 Weak Mutation 877: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:622 - ReplaceConstant - 0 -> 1
   * 33 Weak Mutation 878: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:623 - DeleteField: _set[Ljava/lang/Object;
   * 34 Weak Mutation 879: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:624 - DeleteField: _values[D
   * 35 Weak Mutation 933: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:631 - InsertUnaryOp IINC 1 hashcode
   * 36 Weak Mutation 932: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:631 - InsertUnaryOp Negation of hashcode
   * 37 Weak Mutation 934: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:631 - InsertUnaryOp IINC -1 hashcode
   * 38 Weak Mutation 929: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - ReplaceArithmeticOperator + -> %
   * 39 Weak Mutation 930: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - ReplaceArithmeticOperator + -> /
   * 40 Weak Mutation 926: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - ReplaceBitwiseOperator ^ -> &
   * 41 Weak Mutation 927: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - ReplaceBitwiseOperator ^ -> |
   * 42 Weak Mutation 924: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC -1 i
   * 43 Weak Mutation 925: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - DeleteStatement: hashCode()I
   * 44 Weak Mutation 922: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp Negation of i
   * 45 Weak Mutation 923: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC 1 i
   * 46 Weak Mutation 921: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - ReplaceVariable i -> hashcode
   * 47 Weak Mutation 918: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - ReplaceComparisonOperator != null -> = null
   * 48 Weak Mutation 916: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC 1 i
   * 49 Weak Mutation 917: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC -1 i
   * 50 Weak Mutation 914: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - ReplaceVariable i -> hashcode
   * 51 Weak Mutation 915: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp Negation of i
   * 52 Weak Mutation 912: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - DeleteStatement: hash(D)I
   * 53 Weak Mutation 911: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC -1 i
   * 54 Weak Mutation 910: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC 1 i
   * 55 Weak Mutation 909: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp Negation of i
   * 56 Weak Mutation 908: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - ReplaceVariable i -> hashcode
   * 57 Weak Mutation 907: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC -1 hashcode
   * 58 Weak Mutation 906: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC 1 hashcode
   * 59 Weak Mutation 905: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp Negation of hashcode
   * 60 Weak Mutation 904: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - ReplaceVariable hashcode -> i
   * 61 Weak Mutation 903: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - ReplaceComparisonOperator == -> !=
   * 62 Weak Mutation 902: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - DeleteField: REMOVEDLjava/lang/Object;
   * 63 Weak Mutation 901: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - ReplaceVariable REMOVED -> FREE
   * 64 Weak Mutation 900: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - InsertUnaryOp IINC -1 i
   * 65 Weak Mutation 899: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - InsertUnaryOp IINC 1 i
   * 66 Weak Mutation 898: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - InsertUnaryOp Negation of i
   * 67 Weak Mutation 897: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - ReplaceVariable i -> hashcode
   * 68 Weak Mutation 881: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:625 - InsertUnaryOp Negation of i
   * 69 Weak Mutation 880: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:625 - ReplaceVariable i -> hashcode
   * 70 Weak Mutation 883: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:625 - InsertUnaryOp IINC -1 i
   * 71 Weak Mutation 882: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:625 - InsertUnaryOp IINC 1 i
   * 72 Weak Mutation 884: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:625 - ReplaceVariable i -> hashcode
   * 73 Weak Mutation 887: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:625 - ReplaceComparisonOperator <= -> -1
   * 74 Weak Mutation 886: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:625 - ReplaceComparisonOperator <= -> <
   * 75 Weak Mutation 889: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - ReplaceVariable i -> hashcode
   * 76 Weak Mutation 891: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - InsertUnaryOp IINC 1 i
   * 77 Weak Mutation 890: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - InsertUnaryOp Negation of i
   * 78 Weak Mutation 893: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - ReplaceVariable FREE -> REMOVED
   * 79 Weak Mutation 892: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - InsertUnaryOp IINC -1 i
   * 80 Weak Mutation 895: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - ReplaceComparisonOperator == -> !=
   * 81 Weak Mutation 894: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - DeleteField: FREELjava/lang/Object;
   * 82 Weak Mutation 877: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:622 - ReplaceConstant - 0 -> 1
   * 83 Weak Mutation 878: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:623 - DeleteField: _set[Ljava/lang/Object;
   * 84 Weak Mutation 879: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:624 - DeleteField: _values[D
   * 85 Weak Mutation 933: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:631 - InsertUnaryOp IINC 1 hashcode
   * 86 Weak Mutation 932: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:631 - InsertUnaryOp Negation of hashcode
   * 87 Weak Mutation 934: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:631 - InsertUnaryOp IINC -1 hashcode
   * 88 Weak Mutation 929: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - ReplaceArithmeticOperator + -> %
   * 89 Weak Mutation 928: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - ReplaceArithmeticOperator + -> -
   * 90 Weak Mutation 931: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - ReplaceArithmeticOperator + -> *
   * 91 Weak Mutation 930: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - ReplaceArithmeticOperator + -> /
   * 92 Weak Mutation 926: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - ReplaceBitwiseOperator ^ -> &
   * 93 Weak Mutation 927: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - ReplaceBitwiseOperator ^ -> |
   * 94 Weak Mutation 924: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC -1 i
   * 95 Weak Mutation 925: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - DeleteStatement: hashCode()I
   * 96 Weak Mutation 922: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp Negation of i
   * 97 Weak Mutation 923: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC 1 i
   * 98 Weak Mutation 921: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - ReplaceVariable i -> hashcode
   * 99 Weak Mutation 918: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - ReplaceComparisonOperator != null -> = null
   * 100 Weak Mutation 916: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC 1 i
   * 101 Weak Mutation 917: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC -1 i
   * 102 Weak Mutation 914: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - ReplaceVariable i -> hashcode
   * 103 Weak Mutation 915: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp Negation of i
   * 104 Weak Mutation 912: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - DeleteStatement: hash(D)I
   * 105 Weak Mutation 911: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC -1 i
   * 106 Weak Mutation 910: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC 1 i
   * 107 Weak Mutation 909: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp Negation of i
   * 108 Weak Mutation 908: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - ReplaceVariable i -> hashcode
   * 109 Weak Mutation 907: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC -1 hashcode
   * 110 Weak Mutation 906: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC 1 hashcode
   * 111 Weak Mutation 905: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - InsertUnaryOp Negation of hashcode
   * 112 Weak Mutation 904: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:627 - ReplaceVariable hashcode -> i
   * 113 Weak Mutation 903: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - ReplaceComparisonOperator == -> !=
   * 114 Weak Mutation 902: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - DeleteField: REMOVEDLjava/lang/Object;
   * 115 Weak Mutation 901: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - ReplaceVariable REMOVED -> FREE
   * 116 Weak Mutation 900: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - InsertUnaryOp IINC -1 i
   * 117 Weak Mutation 899: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - InsertUnaryOp IINC 1 i
   * 118 Weak Mutation 898: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - InsertUnaryOp Negation of i
   * 119 Weak Mutation 897: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I:626 - ReplaceVariable i -> hashcode
   * 120 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I: I22 Branch 65 IFLE L625 - true
   * 121 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I: I22 Branch 65 IFLE L625 - false
   * 122 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L626 - true
   * 123 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L626 - false
   * 124 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I: I34 Branch 67 IF_ACMPEQ L626 - false
   * 125 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I: I45 Branch 68 IFNONNULL L627 - true
   */

  @Test
  public void test25()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, 169, (-1227.854F), 1483.659713960503);
      tObjectDoubleCustomHashMap0.put((Double) 1483.659713960503, 1206.634535224895);
      int int0 = tObjectDoubleCustomHashMap0.hashCode();
      assertEquals(false, tObjectDoubleCustomHashMap0.isEmpty());
      assertEquals(1334942769, int0);
  }

  //Test case number: 26
  /*
   * 116 covered goals:
   * 1 Weak Mutation 945: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1104 - DeleteField: _sizeI
   * 2 Weak Mutation 971: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1109 - InsertUnaryOp IINC -1 i
   * 3 Weak Mutation 970: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1109 - InsertUnaryOp IINC 1 i
   * 4 Weak Mutation 969: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1109 - InsertUnaryOp Negation of i
   * 5 Weak Mutation 968: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1109 - DeleteField: _set[Ljava/lang/Object;
   * 6 Weak Mutation 972: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1109 - DeleteStatement: writeObject(Ljava/lang/Object;)V
   * 7 Weak Mutation 976: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1110 - InsertUnaryOp IINC -1 i
   * 8 Weak Mutation 977: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1110 - DeleteStatement: writeDouble(D)V
   * 9 Weak Mutation 975: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1110 - InsertUnaryOp IINC 1 i
   * 10 Weak Mutation 974: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1110 - InsertUnaryOp Negation of i
   * 11 Weak Mutation 973: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1110 - DeleteField: _values[D
   * 12 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I51 Branch 71 IF_ACMPEQ L1108 - false
   * 13 Weak Mutation 94: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;I)V:97 - InsertUnaryOp Negation
   * 14 Weak Mutation 311: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:261 - InsertUnaryOp Negation of index
   * 15 Weak Mutation 310: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:261 - InsertUnaryOp Negation of value
   * 16 Weak Mutation 313: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:261 - InsertUnaryOp IINC -1 index
   * 17 Weak Mutation 312: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:261 - InsertUnaryOp IINC 1 index
   * 18 Weak Mutation 314: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:266 - InsertUnaryOp Negation
   * 19 Weak Mutation 317: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:268 - InsertUnaryOp Negation of index
   * 20 Weak Mutation 316: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:267 - ReplaceConstant - 1 -> 0
   * 21 Weak Mutation 318: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:268 - ReplaceComparisonOperator >= -> ==
   * 22 Weak Mutation 292: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:258 - ReplaceVariable key -> FREE
   * 23 Weak Mutation 293: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:258 - ReplaceVariable key -> REMOVED
   * 24 Weak Mutation 294: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:258 - DeleteStatement: insertKey(Ljava/lang/Object;)I
   * 25 Weak Mutation 295: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:259 - InsertUnaryOp Negation of index
   * 26 Weak Mutation 296: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:259 - InsertUnaryOp IINC 1 index
   * 27 Weak Mutation 297: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:259 - InsertUnaryOp IINC -1 index
   * 28 Weak Mutation 298: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D:259 - ReplaceComparisonOperator >= -> ==
   * 29 Weak Mutation 343: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:279 - ReplaceVariable previous -> value
   * 30 Weak Mutation 342: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:277 - DeleteStatement: postInsertHook(Z)V
   * 31 Weak Mutation 341: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:277 - DeleteField: consumeFreeSlotZ
   * 32 Weak Mutation 340: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:277 - InsertUnaryOp Negation
   * 33 Weak Mutation 339: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:276 - ReplaceComparisonOperator == -> !=
   * 34 Weak Mutation 338: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:276 - InsertUnaryOp Negation of isNewMapping
   * 35 Weak Mutation 337: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:274 - InsertUnaryOp Negation of value
   * 36 Weak Mutation 336: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:274 - ReplaceVariable value -> previous
   * 37 Weak Mutation 344: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:279 - InsertUnaryOp Negation of previous
   * 38 Weak Mutation 334: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:274 - InsertUnaryOp IINC 1 index
   * 39 Weak Mutation 335: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:274 - InsertUnaryOp IINC -1 index
   * 40 Weak Mutation 332: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:274 - DeleteField: _values[D
   * 41 Weak Mutation 333: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D:274 - InsertUnaryOp Negation of index
   * 42 Weak Mutation 956: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp IINC 1 i
   * 43 Weak Mutation 957: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp IINC -1 i
   * 44 Weak Mutation 958: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - ReplaceVariable REMOVED -> FREE
   * 45 Weak Mutation 959: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - DeleteField: REMOVEDLjava/lang/Object;
   * 46 Weak Mutation 952: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - ReplaceComparisonOperator <= -> <
   * 47 Weak Mutation 953: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - ReplaceComparisonOperator <= -> -1
   * 48 Weak Mutation 954: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - DeleteField: _set[Ljava/lang/Object;
   * 49 Weak Mutation 955: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp Negation of i
   * 50 Weak Mutation 948: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - InsertUnaryOp Negation of i
   * 51 Weak Mutation 949: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - InsertUnaryOp IINC 1 i
   * 52 Weak Mutation 950: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - InsertUnaryOp IINC -1 i
   * 53 Weak Mutation 944: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1104 - InsertUnaryOp -1
   * 54 Weak Mutation 946: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1104 - DeleteStatement: writeInt(I)V
   * 55 Weak Mutation 947: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - DeleteField: _set[Ljava/lang/Object;
   * 56 Weak Mutation 941: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1101 - DeleteStatement: writeDouble(D)V
   * 57 Weak Mutation 943: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1104 - InsertUnaryOp +1
   * 58 Weak Mutation 942: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1104 - InsertUnaryOp Negation
   * 59 Weak Mutation 937: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1098 - DeleteField: strategyLgnu/trove/strategy/HashingStrategy;
   * 60 Weak Mutation 936: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1092 - DeleteStatement: writeByte(I)V
   * 61 Weak Mutation 939: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1101 - InsertUnaryOp Negation
   * 62 Weak Mutation 938: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1098 - DeleteStatement: writeObject(Ljava/lang/Object;)V
   * 63 Weak Mutation 935: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1092 - ReplaceConstant - 0 -> 1
   * 64 Weak Mutation 963: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp IINC 1 i
   * 65 Weak Mutation 962: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp Negation of i
   * 66 Weak Mutation 961: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - DeleteField: _set[Ljava/lang/Object;
   * 67 Weak Mutation 960: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - ReplaceComparisonOperator == -> !=
   * 68 Weak Mutation 967: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - ReplaceComparisonOperator == -> !=
   * 69 Weak Mutation 966: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - DeleteField: FREELjava/lang/Object;
   * 70 Weak Mutation 965: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - ReplaceVariable FREE -> REMOVED
   * 71 Weak Mutation 964: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp IINC -1 i
   * 72 Weak Mutation 956: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp IINC 1 i
   * 73 Weak Mutation 957: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp IINC -1 i
   * 74 Weak Mutation 958: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - ReplaceVariable REMOVED -> FREE
   * 75 Weak Mutation 959: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - DeleteField: REMOVEDLjava/lang/Object;
   * 76 Weak Mutation 952: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - ReplaceComparisonOperator <= -> <
   * 77 Weak Mutation 953: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - ReplaceComparisonOperator <= -> -1
   * 78 Weak Mutation 954: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - DeleteField: _set[Ljava/lang/Object;
   * 79 Weak Mutation 955: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp Negation of i
   * 80 Weak Mutation 948: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - InsertUnaryOp Negation of i
   * 81 Weak Mutation 949: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - InsertUnaryOp IINC 1 i
   * 82 Weak Mutation 950: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - InsertUnaryOp IINC -1 i
   * 83 Weak Mutation 944: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1104 - InsertUnaryOp -1
   * 84 Weak Mutation 945: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1104 - DeleteField: _sizeI
   * 85 Weak Mutation 946: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1104 - DeleteStatement: writeInt(I)V
   * 86 Weak Mutation 947: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - DeleteField: _set[Ljava/lang/Object;
   * 87 Weak Mutation 941: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1101 - DeleteStatement: writeDouble(D)V
   * 88 Weak Mutation 943: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1104 - InsertUnaryOp +1
   * 89 Weak Mutation 942: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1104 - InsertUnaryOp Negation
   * 90 Weak Mutation 937: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1098 - DeleteField: strategyLgnu/trove/strategy/HashingStrategy;
   * 91 Weak Mutation 936: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1092 - DeleteStatement: writeByte(I)V
   * 92 Weak Mutation 939: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1101 - InsertUnaryOp Negation
   * 93 Weak Mutation 938: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1098 - DeleteStatement: writeObject(Ljava/lang/Object;)V
   * 94 Weak Mutation 935: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1092 - ReplaceConstant - 0 -> 1
   * 95 Weak Mutation 976: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1110 - InsertUnaryOp IINC -1 i
   * 96 Weak Mutation 977: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1110 - DeleteStatement: writeDouble(D)V
   * 97 Weak Mutation 971: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1109 - InsertUnaryOp IINC -1 i
   * 98 Weak Mutation 970: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1109 - InsertUnaryOp IINC 1 i
   * 99 Weak Mutation 969: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1109 - InsertUnaryOp Negation of i
   * 100 Weak Mutation 968: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1109 - DeleteField: _set[Ljava/lang/Object;
   * 101 Weak Mutation 975: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1110 - InsertUnaryOp IINC 1 i
   * 102 Weak Mutation 974: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1110 - InsertUnaryOp Negation of i
   * 103 Weak Mutation 973: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1110 - DeleteField: _values[D
   * 104 Weak Mutation 972: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1109 - DeleteStatement: writeObject(Ljava/lang/Object;)V
   * 105 Weak Mutation 963: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp IINC 1 i
   * 106 Weak Mutation 962: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp Negation of i
   * 107 Weak Mutation 961: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - DeleteField: _set[Ljava/lang/Object;
   * 108 Weak Mutation 960: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - ReplaceComparisonOperator == -> !=
   * 109 Weak Mutation 967: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - ReplaceComparisonOperator == -> !=
   * 110 Weak Mutation 966: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - DeleteField: FREELjava/lang/Object;
   * 111 Weak Mutation 965: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - ReplaceVariable FREE -> REMOVED
   * 112 Weak Mutation 964: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp IINC -1 i
   * 113 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 69 IFLE L1107 - true
   * 114 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 69 IFLE L1107 - false
   * 115 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I45 Branch 70 IF_ACMPEQ L1108 - false
   * 116 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I51 Branch 71 IF_ACMPEQ L1108 - true
   */

  @Test
  public void test26()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 0);
      tObjectDoubleCustomHashMap0.putIfAbsent((Integer) 0, 845.3757093017774);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tObjectDoubleCustomHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(1, tObjectDoubleCustomHashMap0.size());
      assertEquals(173, byteArrayOutputStream0.size());
  }

  //Test case number: 27
  /*
   * 146 covered goals:
   * 1 Weak Mutation 1255: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z:1151 - ReplaceComparisonOperator == -> !=
   * 2 Weak Mutation 1254: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z:1151 - DeleteField: firstZ
   * 3 Weak Mutation 1253: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z:1151 - InsertUnaryOp Negation
   * 4 Weak Mutation 1256: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z:1151 - ReplaceConstant - 0 -> 1
   * 5 Weak Mutation 1263: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z:1154 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 6 Weak Mutation 1262: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z:1154 - ReplaceConstant - = -> 
   * 7 Weak Mutation 1261: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z:1154 - DeleteStatement: append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   * 8 Weak Mutation 1260: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z:1154 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 9 Weak Mutation 1264: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z:1154 - InsertUnaryOp Negation of value
   * 10 Weak Mutation 1265: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z:1154 - DeleteStatement: append(D)Ljava/lang/StringBuilder;
   * 11 Weak Mutation 1266: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z:1155 - ReplaceConstant - 1 -> 0
   * 12 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z: I4 Branch 102 IFEQ L1151 - false
   * 13 Weak Mutation 102: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:134 - ReplaceConstant - 0.0 -> -1.0
   * 14 Weak Mutation 103: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:134 - DeleteStatement: doubleSub(DD)I
   * 15 Weak Mutation 101: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:134 - ReplaceConstant - 0.0 -> 1.0
   * 16 Weak Mutation 98: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:132 - InsertUnaryOp Negation of noEntryValue
   * 17 Weak Mutation 99: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:134 - InsertUnaryOp Negation
   * 18 Weak Mutation 106: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V:134 - ReplaceComparisonOperator == -> -2
   * 19 Weak Mutation 157: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:188 - DeleteField: _set[Ljava/lang/Object;
   * 20 Weak Mutation 158: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:191 - DeleteField: _set[Ljava/lang/Object;
   * 21 Weak Mutation 159: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:192 - DeleteField: _values[D
   * 22 Weak Mutation 171: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:196 - InsertUnaryOp IINC -1 newCapacity
   * 23 Weak Mutation 170: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:196 - InsertUnaryOp IINC 1 newCapacity
   * 24 Weak Mutation 169: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:196 - InsertUnaryOp Negation of newCapacity
   * 25 Weak Mutation 168: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:196 - ReplaceVariable newCapacity -> oldCapacity
   * 26 Weak Mutation 175: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:197 - DeleteStatement: fill([DD)V
   * 27 Weak Mutation 173: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:197 - InsertUnaryOp Negation
   * 28 Weak Mutation 172: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:197 - DeleteField: _values[D
   * 29 Weak Mutation 163: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:194 - InsertUnaryOp IINC -1 newCapacity
   * 30 Weak Mutation 162: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:194 - InsertUnaryOp IINC 1 newCapacity
   * 31 Weak Mutation 161: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:194 - InsertUnaryOp Negation of newCapacity
   * 32 Weak Mutation 160: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:194 - ReplaceVariable newCapacity -> oldCapacity
   * 33 Weak Mutation 167: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:195 - DeleteStatement: fill([Ljava/lang/Object;Ljava/lang/Object;)V
   * 34 Weak Mutation 166: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:195 - DeleteField: FREELjava/lang/Object;
   * 35 Weak Mutation 165: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:195 - ReplaceVariable FREE -> REMOVED
   * 36 Weak Mutation 164: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:195 - DeleteField: _set[Ljava/lang/Object;
   * 37 Weak Mutation 186: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> oldCapacity
   * 38 Weak Mutation 184: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC -1 i
   * 39 Weak Mutation 185: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> newCapacity
   * 40 Weak Mutation 190: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:200 - ReplaceVariable oldKeys -> _set
   * 41 Weak Mutation 191: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:200 - ReplaceVariable i -> newCapacity
   * 42 Weak Mutation 188: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - ReplaceComparisonOperator <= -> <
   * 43 Weak Mutation 189: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - ReplaceComparisonOperator <= -> -1
   * 44 Weak Mutation 178: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC 1 oldCapacity
   * 45 Weak Mutation 179: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC -1 oldCapacity
   * 46 Weak Mutation 176: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - ReplaceVariable oldCapacity -> newCapacity
   * 47 Weak Mutation 177: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - InsertUnaryOp Negation of oldCapacity
   * 48 Weak Mutation 182: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - InsertUnaryOp Negation of i
   * 49 Weak Mutation 183: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC 1 i
   * 50 Weak Mutation 180: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> newCapacity
   * 51 Weak Mutation 181: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> oldCapacity
   * 52 Weak Mutation 205: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceComparisonOperator == -> !=
   * 53 Weak Mutation 204: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - DeleteField: REMOVEDLjava/lang/Object;
   * 54 Weak Mutation 207: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:202 - ReplaceVariable o -> REMOVED
   * 55 Weak Mutation 206: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:202 - ReplaceVariable o -> FREE
   * 56 Weak Mutation 201: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceVariable o -> FREE
   * 57 Weak Mutation 200: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceComparisonOperator == -> !=
   * 58 Weak Mutation 203: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceVariable REMOVED -> FREE
   * 59 Weak Mutation 202: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceVariable o -> REMOVED
   * 60 Weak Mutation 197: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceVariable o -> REMOVED
   * 61 Weak Mutation 196: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceVariable o -> FREE
   * 62 Weak Mutation 199: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - DeleteField: FREELjava/lang/Object;
   * 63 Weak Mutation 198: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:201 - ReplaceVariable FREE -> REMOVED
   * 64 Weak Mutation 193: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:200 - InsertUnaryOp Negation of i
   * 65 Weak Mutation 192: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:200 - ReplaceVariable i -> oldCapacity
   * 66 Weak Mutation 195: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:200 - InsertUnaryOp IINC -1 i
   * 67 Weak Mutation 194: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:200 - InsertUnaryOp IINC 1 i
   * 68 Weak Mutation 212: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:203 - InsertUnaryOp Negation of index
   * 69 Weak Mutation 213: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:203 - InsertUnaryOp IINC 1 index
   * 70 Weak Mutation 214: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:203 - InsertUnaryOp IINC -1 index
   * 71 Weak Mutation 215: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:203 - ReplaceComparisonOperator >= -> ==
   * 72 Weak Mutation 208: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:202 - DeleteStatement: insertKey(Ljava/lang/Object;)I
   * 73 Weak Mutation 209: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:203 - ReplaceVariable index -> newCapacity
   * 74 Weak Mutation 210: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:203 - ReplaceVariable index -> oldCapacity
   * 75 Weak Mutation 211: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V:203 - ReplaceVariable index -> i
   * 76 Weak Mutation 686: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:467 - DeleteStatement: postInsertHook(Z)V
   * 77 Weak Mutation 685: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:467 - DeleteField: consumeFreeSlotZ
   * 78 Weak Mutation 684: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:467 - InsertUnaryOp Negation
   * 79 Weak Mutation 683: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:466 - ReplaceComparisonOperator == -> !=
   * 80 Weak Mutation 682: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:466 - InsertUnaryOp Negation of isNewMapping
   * 81 Weak Mutation 681: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:462 - ReplaceConstant - 1 -> 0
   * 82 Weak Mutation 680: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:461 - InsertUnaryOp Negation of put_amount
   * 83 Weak Mutation 678: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:461 - InsertUnaryOp IINC -1 index
   * 84 Weak Mutation 677: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:461 - InsertUnaryOp IINC 1 index
   * 85 Weak Mutation 676: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:461 - InsertUnaryOp Negation of index
   * 86 Weak Mutation 675: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:461 - DeleteField: _values[D
   * 87 Weak Mutation 689: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:470 - InsertUnaryOp Negation of newValue
   * 88 Weak Mutation 653: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:456 - ReplaceComparisonOperator >= -> ==
   * 89 Weak Mutation 652: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:456 - InsertUnaryOp IINC -1 index
   * 90 Weak Mutation 649: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:453 - DeleteStatement: insertKey(Ljava/lang/Object;)I
   * 91 Weak Mutation 648: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:453 - ReplaceVariable key -> REMOVED
   * 92 Weak Mutation 651: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:456 - InsertUnaryOp IINC 1 index
   * 93 Weak Mutation 650: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:456 - InsertUnaryOp Negation of index
   * 94 Weak Mutation 647: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:453 - ReplaceVariable key -> FREE
   * 95 Weak Mutation 747: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 96 Weak Mutation 746: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 97 Weak Mutation 745: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 98 Weak Mutation 744: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 99 Weak Mutation 751: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - ReplaceComparisonOperator != -> ==
   * 100 Weak Mutation 750: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - DeleteStatement: execute(Ljava/lang/Object;D)Z
   * 101 Weak Mutation 749: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 102 Weak Mutation 748: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 103 Weak Mutation 739: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 104 Weak Mutation 738: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 105 Weak Mutation 737: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 106 Weak Mutation 742: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - ReplaceComparisonOperator == -> !=
   * 107 Weak Mutation 741: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - DeleteField: REMOVEDLjava/lang/Object;
   * 108 Weak Mutation 740: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - ReplaceVariable REMOVED -> FREE
   * 109 Weak Mutation 753: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:525 - ReplaceConstant - 1 -> 0
   * 110 Weak Mutation 728: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:518 - ReplaceComparisonOperator <= -> -1
   * 111 Weak Mutation 730: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 112 Weak Mutation 731: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 113 Weak Mutation 732: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 114 Weak Mutation 733: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - ReplaceVariable FREE -> REMOVED
   * 115 Weak Mutation 734: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - DeleteField: FREELjava/lang/Object;
   * 116 Weak Mutation 735: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:519 - ReplaceComparisonOperator == -> !=
   * 117 Weak Mutation 720: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:516 - DeleteField: _set[Ljava/lang/Object;
   * 118 Weak Mutation 721: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:517 - DeleteField: _values[D
   * 119 Weak Mutation 723: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:518 - InsertUnaryOp Negation of i
   * 120 Weak Mutation 724: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:518 - InsertUnaryOp IINC 1 i
   * 121 Weak Mutation 725: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:518 - InsertUnaryOp IINC -1 i
   * 122 Weak Mutation 727: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:518 - ReplaceComparisonOperator <= -> <
   * 123 Weak Mutation 1001: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.toString()Ljava/lang/String;:1158 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 124 Weak Mutation 1000: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.toString()Ljava/lang/String;:1158 - ReplaceConstant - } -> 
   * 125 Weak Mutation 1002: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.toString()Ljava/lang/String;:1159 - DeleteStatement: toString()Ljava/lang/String;
   * 126 Weak Mutation 999: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.toString()Ljava/lang/String;:1148 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z
   * 127 Weak Mutation 998: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.toString()Ljava/lang/String;:1147 - ReplaceConstant - { -> 
   * 128 Weak Mutation 653: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D:456 - ReplaceComparisonOperator >= -> ==
   * 129 Weak Mutation 1001: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.toString()Ljava/lang/String;:1158 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 130 Weak Mutation 1000: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.toString()Ljava/lang/String;:1158 - ReplaceConstant - } -> 
   * 131 Weak Mutation 1002: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.toString()Ljava/lang/String;:1159 - DeleteStatement: toString()Ljava/lang/String;
   * 132 Weak Mutation 999: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.toString()Ljava/lang/String;:1148 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z
   * 133 Weak Mutation 998: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.toString()Ljava/lang/String;:1147 - ReplaceConstant - { -> 
   * 134 Weak Mutation 1255: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z:1151 - ReplaceComparisonOperator == -> !=
   * 135 Weak Mutation 1254: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z:1151 - DeleteField: firstZ
   * 136 Weak Mutation 1253: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z:1151 - InsertUnaryOp Negation
   * 137 Weak Mutation 1263: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z:1154 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 138 Weak Mutation 1262: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z:1154 - ReplaceConstant - = -> 
   * 139 Weak Mutation 1261: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z:1154 - DeleteStatement: append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   * 140 Weak Mutation 1260: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z:1154 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 141 Weak Mutation 1256: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z:1151 - ReplaceConstant - 0 -> 1
   * 142 Weak Mutation 1266: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z:1155 - ReplaceConstant - 1 -> 0
   * 143 Weak Mutation 1264: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z:1154 - InsertUnaryOp Negation of value
   * 144 Weak Mutation 1265: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z:1154 - DeleteStatement: append(D)Ljava/lang/StringBuilder;
   * 145 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.toString()Ljava/lang/String;: root-Branch
   * 146 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.<init>(Lgnu/trove/map/custom_hash/TObjectDoubleCustomHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 0, (float) 0, (double) 0);
      tObjectDoubleCustomHashMap0.adjustOrPutValue((Integer) 0, (double) 0, (double) 0);
      String string0 = tObjectDoubleCustomHashMap0.toString();
      assertEquals(7, tObjectDoubleCustomHashMap0.capacity());
      assertEquals("{0=0.0}", string0);
  }

  //Test case number: 28
  /*
   * 14 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keySet()Ljava/util/Set;: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$KeyView.<init>(Lgnu/trove/map/custom_hash/TObjectDoubleCustomHashMap;)V: root-Branch
   * 3 Weak Mutation 96: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IF)V:114 - InsertUnaryOp Negation
   * 4 Weak Mutation 152: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:177 - InsertUnaryOp IINC -1 capacity
   * 5 Weak Mutation 153: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:178 - ReplaceVariable capacity -> initialCapacity
   * 6 Weak Mutation 154: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:178 - InsertUnaryOp Negation of capacity
   * 7 Weak Mutation 155: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:178 - InsertUnaryOp IINC 1 capacity
   * 8 Weak Mutation 156: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:178 - InsertUnaryOp IINC -1 capacity
   * 9 Weak Mutation 146: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:176 - InsertUnaryOp Negation of initialCapacity
   * 10 Weak Mutation 147: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:176 - InsertUnaryOp IINC 1 initialCapacity
   * 11 Weak Mutation 148: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:176 - InsertUnaryOp IINC -1 initialCapacity
   * 12 Weak Mutation 149: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:177 - ReplaceVariable capacity -> initialCapacity
   * 13 Weak Mutation 150: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:177 - InsertUnaryOp Negation of capacity
   * 14 Weak Mutation 151: gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I:177 - InsertUnaryOp IINC 1 capacity
   */

  @Test
  public void test28()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 0, (float) 0);
      tObjectDoubleCustomHashMap0.keySet();
      assertEquals(0.0, tObjectDoubleCustomHashMap0.getNoEntryValue(), 0.01D);
  }
}

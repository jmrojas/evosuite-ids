/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TObjectFunction;
import gnu.trove.impl.hash.TObjectHash;
import gnu.trove.map.hash.TCustomHashMap;
import gnu.trove.procedure.TObjectObjectProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TCustomHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap.containsKey(Ljava/lang/Object;)Z: root-Branch
   * 2 gnu.trove.map.hash.TCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;)V: root-Branch
   * 3 gnu.trove.map.hash.TCustomHashMap.setUp(I)I: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TCustomHashMap<Integer, String> tCustomHashMap0 = new TCustomHashMap<Integer, String>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      tCustomHashMap0.containsKey((Object) null);
      assertEquals(23, tCustomHashMap0.capacity());
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap.values()Ljava/util/Collection;: root-Branch
   * 2 gnu.trove.map.hash.TCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;I)V: root-Branch
   * 3 gnu.trove.map.hash.TCustomHashMap$ValueView.<init>(Lgnu/trove/map/hash/TCustomHashMap;)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TCustomHashMap<Integer, Object> tCustomHashMap0 = new TCustomHashMap<Integer, Object>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-10));
      tCustomHashMap0.values();
      assertEquals(3, tCustomHashMap0.capacity());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   * 2 gnu.trove.map.hash.TCustomHashMap.<init>()V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TCustomHashMap<Integer, Object> tCustomHashMap0 = new TCustomHashMap<Integer, Object>();
      Integer[] integerArray0 = new Integer[8];
      ToObjectArrayProceedure<Integer> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Integer>(integerArray0);
      boolean boolean0 = tCustomHashMap0.forEachKey((TObjectProcedure<? super Integer>) toObjectArrayProceedure0);
      assertEquals(true, boolean0);
      assertEquals(23, tCustomHashMap0.capacity());
  }

  //Test case number: 3
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap.keySet()Ljava/util/Set;: root-Branch
   * 2 gnu.trove.map.hash.TCustomHashMap$KeyView.<init>(Lgnu/trove/map/hash/TCustomHashMap;)V: root-Branch
   * 3 gnu.trove.map.hash.TCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/hash/TCustomHashMap;)V: root-Branch
   * 4 gnu.trove.map.hash.TCustomHashMap.entrySet()Ljava/util/Set;: root-Branch
   * 5 gnu.trove.map.hash.TCustomHashMap.putAll(Ljava/util/Map;)V: I15 Branch 61 IFEQ L550 - true
   * 6 gnu.trove.map.hash.TCustomHashMap$EntryView.<init>(Lgnu/trove/map/hash/TCustomHashMap;)V: root-Branch
   * 7 gnu.trove.map.hash.TCustomHashMap$EntryView.iterator()Ljava/util/Iterator;: root-Branch
   * 8 gnu.trove.map.hash.TCustomHashMap$EntryView$EntryIterator.<init>(Lgnu/trove/map/hash/TCustomHashMap$EntryView;Lgnu/trove/map/hash/TCustomHashMap;)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TCustomHashMap<String, String> tCustomHashMap0 = new TCustomHashMap<String, String>((HashingStrategy<? super String>) identityHashingStrategy0, 0);
      TCustomHashMap<Object, String> tCustomHashMap1 = new TCustomHashMap<Object, String>((HashingStrategy<? super Object>) identityHashingStrategy0, (TCustomHashMap<?, ? extends String>) tCustomHashMap0);
      Set<Object> set0 = tCustomHashMap1.keySet();
      assertEquals(0, set0.size());
  }

  //Test case number: 4
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap$Entry.getValue()Ljava/lang/Object;: root-Branch
   * 2 gnu.trove.map.hash.TCustomHashMap$Entry.getKey()Ljava/lang/Object;: root-Branch
   * 3 gnu.trove.map.hash.TCustomHashMap$Entry.<init>(Lgnu/trove/map/hash/TCustomHashMap;Ljava/lang/Object;Ljava/lang/Object;I)V: root-Branch
   * 4 gnu.trove.map.hash.TCustomHashMap$EntryView$EntryIterator.objectAtIndex(I)Lgnu/trove/map/hash/TCustomHashMap$Entry;: root-Branch
   * 5 gnu.trove.map.hash.TCustomHashMap.putAll(Ljava/util/Map;)V: I15 Branch 61 IFEQ L550 - false
   * 6 gnu.trove.map.hash.TCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/hash/TCustomHashMap;)V: root-Branch
   * 7 gnu.trove.map.hash.TCustomHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * 8 gnu.trove.map.hash.TCustomHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I11 Branch 24 IFGE L173 - true
   * 9 gnu.trove.map.hash.TCustomHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I40 Branch 25 IFEQ L181 - false
   */

  @Test
  public void test4()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TCustomHashMap<String, String> tCustomHashMap0 = new TCustomHashMap<String, String>((HashingStrategy<? super String>) identityHashingStrategy0, 0);
      tCustomHashMap0.put((String) null, ")K_VPVO-n,Lgm");
      TCustomHashMap<Object, String> tCustomHashMap1 = new TCustomHashMap<Object, String>((HashingStrategy<? super Object>) identityHashingStrategy0, (TCustomHashMap<?, ? extends String>) tCustomHashMap0);
      assertEquals(false, tCustomHashMap0.isEmpty());
      assertEquals("{null=)K_VPVO-n,Lgm}", tCustomHashMap1.toString());
  }

  //Test case number: 5
  /*
   * 13 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap$EqProcedure.<init>(Ljava/util/Map;)V: root-Branch
   * 2 gnu.trove.map.hash.TCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 26 IFNE L198 - true
   * 3 gnu.trove.map.hash.TCustomHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 27 IF_ICMPEQ L202 - true
   * 4 gnu.trove.map.hash.TCustomHashMap$EqProcedure.execute(Ljava/lang/Object;Ljava/lang/Object;)Z: I3 Branch 1 IFNONNULL L266 - false
   * 5 gnu.trove.map.hash.TCustomHashMap$EqProcedure.execute(Ljava/lang/Object;Ljava/lang/Object;)Z: I8 Branch 2 IFGT L266 - true
   * 6 gnu.trove.map.hash.TCustomHashMap$EqProcedure.execute(Ljava/lang/Object;Ljava/lang/Object;)Z: I24 Branch 3 IF_ACMPEQ L271 - false
   * 7 gnu.trove.map.hash.TCustomHashMap$EqProcedure.execute(Ljava/lang/Object;Ljava/lang/Object;)Z: I26 Branch 4 IFNULL L271 - false
   * 8 gnu.trove.map.hash.TCustomHashMap$EqProcedure.execute(Ljava/lang/Object;Ljava/lang/Object;)Z: I30 Branch 5 IFEQ L271 - true
   * 9 gnu.trove.map.hash.TCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectObjectProcedure;)Z: I25 Branch 33 IF_ACMPEQ L322 - false
   * 10 gnu.trove.map.hash.TCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectObjectProcedure;)Z: I30 Branch 34 IF_ACMPEQ L322 - false
   * 11 gnu.trove.map.hash.TCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectObjectProcedure;)Z: I39 Branch 35 IFNE L322 - false
   * 12 gnu.trove.map.hash.TCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectObjectProcedure;)Z: I18 Branch 32 IFLE L321 - false
   * 13 gnu.trove.map.hash.TCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectObjectProcedure;)Z: I25 Branch 33 IF_ACMPEQ L322 - true
   */

  @Test
  public void test5()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TCustomHashMap<String, Integer> tCustomHashMap0 = new TCustomHashMap<String, Integer>((HashingStrategy<? super String>) identityHashingStrategy0, 8);
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      hashMap0.put("+D,^,#GiNUw>Xu4Y", (Integer) 8);
      tCustomHashMap0.put("+D,^,#GiNUw>Xu4Y", (Integer) null);
      boolean boolean0 = tCustomHashMap0.equals((Object) hashMap0);
      assertEquals(false, tCustomHashMap0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TCustomHashMap.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: I9 Branch 23 IFGE L163 - false
   */

  @Test
  public void test6()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TCustomHashMap<Integer, String> tCustomHashMap0 = new TCustomHashMap<Integer, String>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      tCustomHashMap0.put((Integer) null, ")K_VPVO-n,Lgm");
      tCustomHashMap0.putIfAbsent((Integer) null, ")K_VPVO-n,Lgm");
      assertEquals(false, tCustomHashMap0.isEmpty());
      assertEquals(1, tCustomHashMap0.size());
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I11 Branch 24 IFGE L173 - false
   * 2 gnu.trove.map.hash.TCustomHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I40 Branch 25 IFEQ L181 - true
   */

  @Test
  public void test7()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TCustomHashMap<Integer, String> tCustomHashMap0 = new TCustomHashMap<Integer, String>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      tCustomHashMap0.put((Integer) null, ")K_VPVO-n,Lgm");
      tCustomHashMap0.put((Integer) null, ")K_VPVO-n,Lgm");
      assertEquals("{null=)K_VPVO-n,Lgm}", tCustomHashMap0.toString());
      assertEquals(1, tCustomHashMap0.size());
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 26 IFNE L198 - false
   */

  @Test
  public void test8()  throws Throwable  {
      TCustomHashMap<Object, Integer> tCustomHashMap0 = new TCustomHashMap<Object, Integer>((HashingStrategy<? super Object>) null, 8);
      boolean boolean0 = tCustomHashMap0.equals((Object) "");
      assertEquals(false, boolean0);
      assertEquals(17, tCustomHashMap0.capacity());
  }

  //Test case number: 9
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap$1.execute(Ljava/lang/Object;Ljava/lang/Object;)Z: I4 Branch 7 IFEQ L223 - true
   * 2 gnu.trove.map.hash.TCustomHashMap$1.execute(Ljava/lang/Object;Ljava/lang/Object;)Z: I4 Branch 7 IFEQ L223 - false
   * 3 gnu.trove.map.hash.TCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectObjectProcedure;)Z: I39 Branch 35 IFNE L322 - true
   * 4 gnu.trove.map.hash.TCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IF)V: root-Branch
   * 5 gnu.trove.map.hash.TCustomHashMap.toString()Ljava/lang/String;: root-Branch
   * 6 gnu.trove.map.hash.TCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectObjectProcedure;)Z: I18 Branch 32 IFLE L321 - true
   * 7 gnu.trove.map.hash.TCustomHashMap$1.<init>(Lgnu/trove/map/hash/TCustomHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TCustomHashMap<Integer, Object> tCustomHashMap0 = new TCustomHashMap<Integer, Object>((HashingStrategy<? super Integer>) identityHashingStrategy0, 147, (float) 147);
      tCustomHashMap0.put((Integer) 2038533924, (Object) identityHashingStrategy0);
      tCustomHashMap0.put((Integer) 147, (Object) identityHashingStrategy0);
      tCustomHashMap0.toString();
      assertEquals(false, tCustomHashMap0.isEmpty());
      assertEquals(2, tCustomHashMap0.size());
  }

  //Test case number: 10
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap$HashProcedure.execute(Ljava/lang/Object;Ljava/lang/Object;)Z: I8 Branch 6 IFNONNULL L248 - true
   * 2 gnu.trove.map.hash.TCustomHashMap.hashCode()I: root-Branch
   * 3 gnu.trove.map.hash.TCustomHashMap$HashProcedure.getHashCode()I: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TCustomHashMap<Integer, String> tCustomHashMap0 = new TCustomHashMap<Integer, String>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      tCustomHashMap0.put((Integer) null, ")K_VPVO-n,Lgm");
      int int0 = tCustomHashMap0.hashCode();
      assertEquals(false, tCustomHashMap0.isEmpty());
      assertEquals((-1500301385), int0);
  }

  //Test case number: 11
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap$HashProcedure.execute(Ljava/lang/Object;Ljava/lang/Object;)Z: I8 Branch 6 IFNONNULL L248 - false
   * 2 gnu.trove.map.hash.TCustomHashMap.hashCode()I: root-Branch
   * 3 gnu.trove.map.hash.TCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectObjectProcedure;)Z: I39 Branch 35 IFNE L322 - true
   * 4 gnu.trove.map.hash.TCustomHashMap$HashProcedure.getHashCode()I: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TCustomHashMap<Integer, String> tCustomHashMap0 = new TCustomHashMap<Integer, String>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      tCustomHashMap0.put((Integer) 0, (String) null);
      int int0 = tCustomHashMap0.hashCode();
      assertEquals(false, tCustomHashMap0.isEmpty());
      assertEquals(0, int0);
  }

  //Test case number: 12
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap$EqProcedure.execute(Ljava/lang/Object;Ljava/lang/Object;)Z: I3 Branch 1 IFNONNULL L266 - true
   * 2 gnu.trove.map.hash.TCustomHashMap$EqProcedure.execute(Ljava/lang/Object;Ljava/lang/Object;)Z: I26 Branch 4 IFNULL L271 - true
   * 3 gnu.trove.map.hash.TCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 26 IFNE L198 - true
   * 4 gnu.trove.map.hash.TCustomHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 27 IF_ICMPEQ L202 - true
   * 5 gnu.trove.map.hash.TCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectObjectProcedure;)Z: I30 Branch 34 IF_ACMPEQ L322 - false
   * 6 gnu.trove.map.hash.TCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectObjectProcedure;)Z: I39 Branch 35 IFNE L322 - false
   * 7 gnu.trove.map.hash.TCustomHashMap$EqProcedure.<init>(Ljava/util/Map;)V: root-Branch
   * 8 gnu.trove.map.hash.TCustomHashMap$EqProcedure.execute(Ljava/lang/Object;Ljava/lang/Object;)Z: I24 Branch 3 IF_ACMPEQ L271 - false
   */

  @Test
  public void test12()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TCustomHashMap<String, Integer> tCustomHashMap0 = new TCustomHashMap<String, Integer>((HashingStrategy<? super String>) identityHashingStrategy0, 8);
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      hashMap0.put((String) null, (Integer) 8);
      tCustomHashMap0.put(", ", (Integer) 8);
      boolean boolean0 = tCustomHashMap0.equals((Object) hashMap0);
      assertEquals(1, tCustomHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I25 Branch 29 IF_ACMPEQ L299 - false
   * 2 gnu.trove.map.hash.TCustomHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I30 Branch 30 IF_ACMPEQ L299 - false
   * 3 gnu.trove.map.hash.TCustomHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I36 Branch 31 IFNE L299 - true
   * 4 gnu.trove.map.hash.TCustomHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I18 Branch 28 IFLE L298 - true
   * 5 gnu.trove.map.hash.TCustomHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I18 Branch 28 IFLE L298 - false
   * 6 gnu.trove.map.hash.TCustomHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I25 Branch 29 IF_ACMPEQ L299 - true
   */

  @Test
  public void test13()  throws Throwable  {
      TCustomHashMap<String, Integer> tCustomHashMap0 = new TCustomHashMap<String, Integer>();
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tCustomHashMap0._set);
      toObjectArrayProceedure0.execute((Object) tCustomHashMap0);
      boolean boolean0 = tCustomHashMap0.forEachValue((TObjectProcedure<? super Integer>) toObjectArrayProceedure0);
      assertEquals(true, boolean0);
      assertEquals(23, tCustomHashMap0.capacity());
  }

  //Test case number: 14
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I30 Branch 30 IF_ACMPEQ L299 - true
   * 2 gnu.trove.map.hash.TCustomHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I18 Branch 28 IFLE L298 - true
   * 3 gnu.trove.map.hash.TCustomHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I18 Branch 28 IFLE L298 - false
   * 4 gnu.trove.map.hash.TCustomHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I25 Branch 29 IF_ACMPEQ L299 - true
   * 5 gnu.trove.map.hash.TCustomHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I25 Branch 29 IF_ACMPEQ L299 - false
   */

  @Test
  public void test14()  throws Throwable  {
      TCustomHashMap<String, Integer> tCustomHashMap0 = new TCustomHashMap<String, Integer>();
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tCustomHashMap0._set);
      Object object0 = TObjectHash.REMOVED;
      toObjectArrayProceedure0.execute(object0);
      boolean boolean0 = tCustomHashMap0.forEachValue((TObjectProcedure<? super Integer>) toObjectArrayProceedure0);
      assertEquals("{}", tCustomHashMap0.toString());
      assertEquals(23, tCustomHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 15
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectObjectProcedure;)Z: I30 Branch 34 IF_ACMPEQ L322 - true
   * 2 gnu.trove.map.hash.TCustomHashMap.toString()Ljava/lang/String;: root-Branch
   * 3 gnu.trove.map.hash.TCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectObjectProcedure;)Z: I18 Branch 32 IFLE L321 - true
   * 4 gnu.trove.map.hash.TCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectObjectProcedure;)Z: I18 Branch 32 IFLE L321 - false
   * 5 gnu.trove.map.hash.TCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectObjectProcedure;)Z: I25 Branch 33 IF_ACMPEQ L322 - true
   * 6 gnu.trove.map.hash.TCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectObjectProcedure;)Z: I25 Branch 33 IF_ACMPEQ L322 - false
   * 7 gnu.trove.map.hash.TCustomHashMap$1.<init>(Lgnu/trove/map/hash/TCustomHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TCustomHashMap<String, Integer> tCustomHashMap0 = new TCustomHashMap<String, Integer>();
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tCustomHashMap0._set);
      Object object0 = TObjectHash.REMOVED;
      toObjectArrayProceedure0.execute(object0);
      String string0 = tCustomHashMap0.toString();
      assertEquals(23, tCustomHashMap0.capacity());
      assertEquals("{}", string0);
      assertNotNull(string0);
  }

  //Test case number: 16
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectObjectProcedure;)Z: I26 Branch 36 IFLE L348 - true
   * 2 gnu.trove.map.hash.TCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectObjectProcedure;)Z: I26 Branch 36 IFLE L348 - false
   * 3 gnu.trove.map.hash.TCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectObjectProcedure;)Z: I33 Branch 37 IF_ACMPEQ L349 - true
   * 4 gnu.trove.map.hash.TCustomHashMap.rehash(I)V: I47 Branch 43 IFLE L399 - true
   * 5 gnu.trove.map.hash.TCustomHashMap.rehash(I)V: I47 Branch 43 IFLE L399 - false
   * 6 gnu.trove.map.hash.TCustomHashMap.rehash(I)V: I58 Branch 44 IF_ACMPEQ L401 - true
   */

  @Test
  public void test16()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TCustomHashMap<String, Integer> tCustomHashMap0 = new TCustomHashMap<String, Integer>((HashingStrategy<? super String>) identityHashingStrategy0, 0);
      boolean boolean0 = tCustomHashMap0.retainEntries((TObjectObjectProcedure<? super String, ? super Integer>) null);
      assertEquals(3, tCustomHashMap0.capacity());
      assertEquals(false, boolean0);
      assertEquals("{}", tCustomHashMap0.toString());
  }

  //Test case number: 17
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectObjectProcedure;)Z: I33 Branch 37 IF_ACMPEQ L349 - false
   * 2 gnu.trove.map.hash.TCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectObjectProcedure;)Z: I38 Branch 38 IF_ACMPEQ L349 - false
   * 3 gnu.trove.map.hash.TCustomHashMap.rehash(I)V: I58 Branch 44 IF_ACMPEQ L401 - false
   * 4 gnu.trove.map.hash.TCustomHashMap.rehash(I)V: I61 Branch 45 IF_ACMPNE L401 - true
   * 5 gnu.trove.map.hash.TCustomHashMap.rehash(I)V: I72 Branch 46 IFGE L404 - true
   * 6 gnu.trove.map.hash.TCustomHashMap.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: I9 Branch 23 IFGE L163 - true
   * 7 gnu.trove.map.hash.TCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectObjectProcedure;)Z: I26 Branch 36 IFLE L348 - false
   * 8 gnu.trove.map.hash.TCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectObjectProcedure;)Z: I33 Branch 37 IF_ACMPEQ L349 - true
   */

  @Test
  public void test17()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TCustomHashMap<String, Integer> tCustomHashMap0 = new TCustomHashMap<String, Integer>((HashingStrategy<? super String>) identityHashingStrategy0, 0);
      tCustomHashMap0.putIfAbsent("\"_7Ak^)K+[8c,a", (Integer) 0);
      // Undeclared exception!
      try {
        tCustomHashMap0.retainEntries((TObjectObjectProcedure<? super String, ? super Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 18
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: I18 Branch 40 IFLE L373 - true
   * 2 gnu.trove.map.hash.TCustomHashMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: I18 Branch 40 IFLE L373 - false
   * 3 gnu.trove.map.hash.TCustomHashMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: I25 Branch 41 IF_ACMPEQ L374 - true
   */

  @Test
  public void test18()  throws Throwable  {
      TCustomHashMap<Object, Integer> tCustomHashMap0 = new TCustomHashMap<Object, Integer>();
      tCustomHashMap0.transformValues((TObjectFunction<Integer, Integer>) null);
      assertEquals(23, tCustomHashMap0.capacity());
  }

  //Test case number: 19
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: I25 Branch 41 IF_ACMPEQ L374 - false
   * 2 gnu.trove.map.hash.TCustomHashMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: I30 Branch 42 IF_ACMPEQ L374 - false
   * 3 gnu.trove.map.hash.TCustomHashMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: I18 Branch 40 IFLE L373 - false
   * 4 gnu.trove.map.hash.TCustomHashMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: I25 Branch 41 IF_ACMPEQ L374 - true
   */

  @Test
  public void test19()  throws Throwable  {
      TCustomHashMap<Integer, Integer> tCustomHashMap0 = new TCustomHashMap<Integer, Integer>((HashingStrategy<? super Integer>) null, 0);
      tCustomHashMap0.put((Integer) null, (Integer) null);
      // Undeclared exception!
      try {
        tCustomHashMap0.transformValues((TObjectFunction<Integer, Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 20
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap.rehash(I)V: I61 Branch 45 IF_ACMPNE L401 - false
   * 2 gnu.trove.map.hash.TCustomHashMap.rehash(I)V: I47 Branch 43 IFLE L399 - true
   * 3 gnu.trove.map.hash.TCustomHashMap.rehash(I)V: I47 Branch 43 IFLE L399 - false
   * 4 gnu.trove.map.hash.TCustomHashMap.rehash(I)V: I58 Branch 44 IF_ACMPEQ L401 - true
   * 5 gnu.trove.map.hash.TCustomHashMap.rehash(I)V: I58 Branch 44 IF_ACMPEQ L401 - false
   * 6 gnu.trove.map.hash.TCustomHashMap.removeAt(I)V: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TCustomHashMap<Object, Integer> tCustomHashMap0 = new TCustomHashMap<Object, Integer>((HashingStrategy<? super Object>) null, 0);
      tCustomHashMap0.removeAt(0);
      assertEquals(false, tCustomHashMap0.isEmpty());
      assertEquals(-1, tCustomHashMap0.size());
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TCustomHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;: I9 Branch 47 IFLT L421 - true
   */

  @Test
  public void test21()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TCustomHashMap<String, Integer> tCustomHashMap0 = new TCustomHashMap<String, Integer>((HashingStrategy<? super String>) identityHashingStrategy0, 0);
      tCustomHashMap0.get((Object) null);
  }

  //Test case number: 22
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;: I9 Branch 47 IFLT L421 - false
   * 2 gnu.trove.map.hash.TCustomHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;: I18 Branch 48 IFNE L421 - true
   * 3 gnu.trove.map.hash.TCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;)V: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TCustomHashMap<Integer, String> tCustomHashMap0 = new TCustomHashMap<Integer, String>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      tCustomHashMap0.put((Integer) null, ")K_VPVO-n,Lgm");
      tCustomHashMap0.get((Object) null);
      assertEquals("{null=)K_VPVO-n,Lgm}", tCustomHashMap0.toString());
      assertEquals(false, tCustomHashMap0.isEmpty());
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TCustomHashMap.clear()V: I4 Branch 49 IFNE L430 - true
   */

  @Test
  public void test23()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TCustomHashMap<String, Integer> tCustomHashMap0 = new TCustomHashMap<String, Integer>((HashingStrategy<? super String>) identityHashingStrategy0, 0);
      tCustomHashMap0.put("R,EQ.}v.)6a", (Integer) 0);
      assertEquals("{R,EQ.}v.)6a=0}", tCustomHashMap0.toString());
      
      tCustomHashMap0.clear();
      assertEquals("{}", tCustomHashMap0.toString());
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TCustomHashMap.clear()V: I4 Branch 49 IFNE L430 - false
   */

  @Test
  public void test24()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TCustomHashMap<String, Integer> tCustomHashMap0 = new TCustomHashMap<String, Integer>((HashingStrategy<? super String>) identityHashingStrategy0, 0);
      tCustomHashMap0.clear();
      assertEquals("{}", tCustomHashMap0.toString());
  }

  //Test case number: 25
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap.remove(Ljava/lang/Object;)Ljava/lang/Object;: I13 Branch 50 IFLT L451 - true
   * 2 gnu.trove.map.hash.TCustomHashMap.entrySet()Ljava/util/Set;: root-Branch
   * 3 gnu.trove.map.hash.TCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Ljava/util/Map;)V: root-Branch
   * 4 gnu.trove.map.hash.TCustomHashMap.putAll(Ljava/util/Map;)V: I15 Branch 61 IFEQ L550 - true
   * 5 gnu.trove.map.hash.TCustomHashMap$EntryView.<init>(Lgnu/trove/map/hash/TCustomHashMap;)V: root-Branch
   * 6 gnu.trove.map.hash.TCustomHashMap$EntryView.iterator()Ljava/util/Iterator;: root-Branch
   * 7 gnu.trove.map.hash.TCustomHashMap$EntryView$EntryIterator.<init>(Lgnu/trove/map/hash/TCustomHashMap$EntryView;Lgnu/trove/map/hash/TCustomHashMap;)V: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TCustomHashMap<String, Integer> tCustomHashMap0 = new TCustomHashMap<String, Integer>((HashingStrategy<? super String>) identityHashingStrategy0, 0);
      IdentityHashingStrategy<Object> identityHashingStrategy1 = new IdentityHashingStrategy<Object>();
      TCustomHashMap<Object, Integer> tCustomHashMap1 = new TCustomHashMap<Object, Integer>((HashingStrategy<? super Object>) identityHashingStrategy1, (Map<?, ? extends Integer>) tCustomHashMap0);
      tCustomHashMap1.remove((Object) ")K_VPVO-n,Lgm");
      assertEquals(0, tCustomHashMap1.size());
      assertEquals(true, tCustomHashMap1.isEmpty());
  }

  //Test case number: 26
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I30 Branch 53 IF_ACMPEQ L514 - false
   * 2 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I35 Branch 54 IF_ACMPEQ L514 - false
   * 3 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I40 Branch 55 IF_ACMPNE L514 - false
   * 4 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I14 Branch 51 IF_ACMPNE L512 - false
   * 5 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I23 Branch 52 IFLE L513 - false
   * 6 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I30 Branch 53 IF_ACMPEQ L514 - true
   */

  @Test
  public void test26()  throws Throwable  {
      TCustomHashMap<String, Integer> tCustomHashMap0 = new TCustomHashMap<String, Integer>();
      tCustomHashMap0.put((String) null, (Integer) null);
      boolean boolean0 = tCustomHashMap0.containsValue((Object) null);
      assertEquals(1, tCustomHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 27
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I35 Branch 54 IF_ACMPEQ L514 - true
   * 2 gnu.trove.map.hash.TCustomHashMap.removeAt(I)V: root-Branch
   * 3 gnu.trove.map.hash.TCustomHashMap.<init>()V: root-Branch
   * 4 gnu.trove.map.hash.TCustomHashMap.remove(Ljava/lang/Object;)Ljava/lang/Object;: I13 Branch 50 IFLT L451 - false
   * 5 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I23 Branch 52 IFLE L513 - true
   */

  @Test
  public void test27()  throws Throwable  {
      TCustomHashMap<String, Integer> tCustomHashMap0 = new TCustomHashMap<String, Integer>();
      tCustomHashMap0.put((String) null, (Integer) null);
      assertEquals("{null=null}", tCustomHashMap0.toString());
      
      tCustomHashMap0.remove((Object) null);
      boolean boolean0 = tCustomHashMap0.containsValue((Object) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 28
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I40 Branch 55 IF_ACMPNE L514 - true
   * 2 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I14 Branch 51 IF_ACMPNE L512 - false
   * 3 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I23 Branch 52 IFLE L513 - true
   * 4 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I23 Branch 52 IFLE L513 - false
   * 5 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I30 Branch 53 IF_ACMPEQ L514 - true
   * 6 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I30 Branch 53 IF_ACMPEQ L514 - false
   * 7 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I35 Branch 54 IF_ACMPEQ L514 - false
   */

  @Test
  public void test28()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TCustomHashMap<Integer, Integer> tCustomHashMap0 = new TCustomHashMap<Integer, Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 0);
      tCustomHashMap0.put((Integer) (-1500301385), (Integer) (-1500301385));
      boolean boolean0 = tCustomHashMap0.containsValue((Object) null);
      assertEquals("{-1500301385=-1500301385}", tCustomHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 29
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I62 Branch 57 IF_ACMPEQ L521 - false
   * 2 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I67 Branch 58 IF_ACMPEQ L521 - false
   * 3 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I72 Branch 59 IF_ACMPEQ L521 - false
   * 4 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I80 Branch 60 IFEQ L521 - true
   * 5 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I55 Branch 56 IFLE L520 - true
   * 6 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I62 Branch 57 IF_ACMPEQ L521 - true
   * 7 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I14 Branch 51 IF_ACMPNE L512 - true
   * 8 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I55 Branch 56 IFLE L520 - false
   */

  @Test
  public void test29()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TCustomHashMap<Integer, Object> tCustomHashMap0 = new TCustomHashMap<Integer, Object>((HashingStrategy<? super Integer>) identityHashingStrategy0, 147, (float) 147);
      tCustomHashMap0.put((Integer) 1542878199, (Object) identityHashingStrategy0);
      TCustomHashMap<Object, Integer> tCustomHashMap1 = new TCustomHashMap<Object, Integer>((HashingStrategy<? super Object>) identityHashingStrategy0, 147);
      boolean boolean0 = tCustomHashMap0.containsValue((Object) tCustomHashMap1);
      assertEquals(false, tCustomHashMap0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 30
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I72 Branch 59 IF_ACMPEQ L521 - true
   * 2 gnu.trove.map.hash.TCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IF)V: root-Branch
   * 3 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I14 Branch 51 IF_ACMPNE L512 - true
   * 4 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I55 Branch 56 IFLE L520 - false
   * 5 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I62 Branch 57 IF_ACMPEQ L521 - false
   * 6 gnu.trove.map.hash.TCustomHashMap.containsValue(Ljava/lang/Object;)Z: I67 Branch 58 IF_ACMPEQ L521 - false
   */

  @Test
  public void test30()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TCustomHashMap<Integer, Object> tCustomHashMap0 = new TCustomHashMap<Integer, Object>((HashingStrategy<? super Integer>) identityHashingStrategy0, 147, (float) 147);
      tCustomHashMap0.put((Integer) 2038533924, (Object) identityHashingStrategy0);
      boolean boolean0 = tCustomHashMap0.containsValue((Object) identityHashingStrategy0);
      assertEquals(false, tCustomHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 31
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.hash.TCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I39 Branch 64 IF_ACMPEQ L871 - false
   * 2 gnu.trove.map.hash.TCustomHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * 3 gnu.trove.map.hash.TCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;I)V: root-Branch
   * 4 gnu.trove.map.hash.TCustomHashMap.setUp(I)I: root-Branch
   * 5 gnu.trove.map.hash.TCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 62 IFLE L870 - true
   * 6 gnu.trove.map.hash.TCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 62 IFLE L870 - false
   * 7 gnu.trove.map.hash.TCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 63 IF_ACMPEQ L871 - false
   * 8 gnu.trove.map.hash.TCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I39 Branch 64 IF_ACMPEQ L871 - true
   * 9 gnu.trove.map.hash.TCustomHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I11 Branch 24 IFGE L173 - true
   * 10 gnu.trove.map.hash.TCustomHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I40 Branch 25 IFEQ L181 - false
   */

//   @Test
//   public void test31()  throws Throwable  {
//       IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
//       TCustomHashMap<Integer, Integer> tCustomHashMap0 = new TCustomHashMap<Integer, Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 0);
//       tCustomHashMap0.put((Integer) (-1500301385), (Integer) (-1500301385));
//       ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
//       ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
//       tCustomHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
//       assertEquals(1, tCustomHashMap0.size());
//       assertEquals("\uFFFD\uFFFD\u0000\u0005w\f\u0001\u0000\u0000\u0000?\u0000\u0000\u0000?\u0000\u0000\u0000sr\u0000*gnu.trove.strategy.IdentityHashingStrategy\uFFFD\uFFFD\uFFFDgQ\uFFFD\uFFFDX\u0002\u0000\u0000xpw\u0004\u0000\u0000\u0000\u0001sr\u0000\u0011java.lang.Integer\u0012\u2824\uFFFD\uFFFD\uFFFD8\u0002\u0000\u0001I\u0000\u0005valuexr\u0000\u0010java.lang.Number\uFFFD\uFFFD\uFFFD\u001D\u000B\uFFFD\uFFFD\uFFFD\u0002\u0000\u0000xp\uFFFD\uFFFD7\uFFFDq\u0000~\u0000\u0004", byteArrayOutputStream0.toString());
//   }
}

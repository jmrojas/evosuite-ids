/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TDoubleLongMapDecorator;
import gnu.trove.map.TDoubleLongMap;
import gnu.trove.map.hash.TDoubleLongHashMap;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.EOFException;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.RandomAccessFile;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.AbstractMap;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TDoubleLongMapDecoratorEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[10];
      double double0 = (-1430.2867544397043);
      doubleArray0[0] = double0;
      double double1 = 1357.2706385240845;
      doubleArray0[1] = double1;
      double double2 = 0.0;
      doubleArray0[2] = double2;
      double double3 = 1047.6852832073737;
      doubleArray0[3] = double3;
      double double4 = (-1.0);
      doubleArray0[4] = double4;
      double double5 = 0.0;
      doubleArray0[5] = double5;
      double double6 = (-1.0);
      doubleArray0[6] = double6;
      double double7 = 0.0;
      doubleArray0[7] = double7;
      double double8 = 0.0;
      doubleArray0[8] = double8;
      double double9 = (-1.0);
      doubleArray0[9] = double9;
      long[] longArray0 = new long[2];
      long long0 = 0L;
      longArray0[0] = long0;
      long long1 = (-1082L);
      longArray0[1] = long1;
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      TDoubleLongMapDecorator tDoubleLongMapDecorator0 = new TDoubleLongMapDecorator((TDoubleLongMap) tDoubleLongHashMap0);
      assertEquals(false, tDoubleLongMapDecorator0.isEmpty());
  }

  @Test
  public void test1()  throws Throwable  {
      TDoubleLongMapDecorator tDoubleLongMapDecorator0 = new TDoubleLongMapDecorator();
      double double0 = 1703.664337798695;
      long long0 = 1L;
      Long long1 = new Long(long0);
      // Undeclared exception!
      try {
        tDoubleLongMapDecorator0.put((Double) double0, (Long) long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      tDoubleLongHashMap0.keys();
      TDoubleLongMapDecorator tDoubleLongMapDecorator0 = new TDoubleLongMapDecorator();
      String string0 = "4Fuy<Funo%#|\\l|$";
      Locale locale0 = Locale.forLanguageTag(string0);
      String string1 = locale0.getDisplayLanguage();
      tDoubleLongMapDecorator0.containsKey((Object) string1);
      locale0.getScript();
      TDoubleLongMapDecorator tDoubleLongMapDecorator1 = new TDoubleLongMapDecorator((TDoubleLongMap) tDoubleLongHashMap0);
      int int0 = 0;
      TDoubleLongMapDecorator tDoubleLongMapDecorator2 = new TDoubleLongMapDecorator((TDoubleLongMap) tDoubleLongHashMap0);
      tDoubleLongHashMap0.ensureCapacity(int0);
      int int1 = (-735);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      double double0 = (-1744.930820925889);
      doubleArray0[0] = double0;
      double double1 = (-966.942592136099);
      doubleArray0[1] = double1;
      double double2 = (-1.0);
      doubleArray0[2] = double2;
      long[] longArray0 = new long[9];
      long long0 = 16L;
      longArray0[0] = long0;
      long long1 = 984L;
      longArray0[1] = long1;
      long long2 = (-1471L);
      longArray0[2] = long2;
      long long3 = 9223372036854775807L;
      longArray0[3] = long3;
      long long4 = (-816L);
      longArray0[4] = long4;
      long long5 = (-1L);
      longArray0[5] = long5;
      long long6 = 150L;
      longArray0[6] = long6;
      long long7 = 0L;
      longArray0[7] = long7;
      long long8 = 156L;
      longArray0[8] = long8;
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      TDoubleLongMapDecorator tDoubleLongMapDecorator0 = new TDoubleLongMapDecorator((TDoubleLongMap) tDoubleLongHashMap0);
      Set<Map.Entry<Double, Long>> set0 = (Set<Map.Entry<Double, Long>>)tDoubleLongMapDecorator0.entrySet();
      assertEquals(false, set0.isEmpty());
  }

  @Test
  public void test4()  throws Throwable  {
      String string0 = "HnPvtj,6/\\x1:";
      RandomAccessFile randomAccessFile0 = null;
      try {
        randomAccessFile0 = new RandomAccessFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"HnPvtj,6/\\x1:\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      double double0 = 0.0;
      doubleArray0[0] = double0;
      double double1 = 0.0;
      doubleArray0[0] = double0;
      doubleArray0[1] = double0;
      doubleArray0[2] = double1;
      doubleArray0[3] = double0;
      doubleArray0[1] = double1;
      double double2 = 0.0;
      doubleArray0[2] = double2;
      double double3 = 1315.4286365835314;
      doubleArray0[3] = double3;
      long[] longArray0 = new long[7];
      long long0 = 0L;
      longArray0[0] = long0;
      long long1 = 0L;
      longArray0[1] = long1;
      long long2 = (-1L);
      longArray0[2] = long2;
      long long3 = (-1656L);
      longArray0[3] = long3;
      long long4 = 1275L;
      longArray0[4] = long4;
      long long5 = 1847L;
      longArray0[5] = long5;
      long long6 = (-578L);
      longArray0[6] = long6;
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      TDoubleLongMapDecorator tDoubleLongMapDecorator0 = new TDoubleLongMapDecorator((TDoubleLongMap) tDoubleLongHashMap0);
      Set<Double> set0 = tDoubleLongMapDecorator0.keySet();
      assertEquals(false, set0.isEmpty());
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = 0;
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(int0, int0, int0, int0);
      tDoubleLongHashMap0.isEmpty();
      TDoubleLongMapDecorator tDoubleLongMapDecorator0 = new TDoubleLongMapDecorator();
      tDoubleLongMapDecorator0.values();
      TDoubleLongMapDecorator tDoubleLongMapDecorator1 = new TDoubleLongMapDecorator((TDoubleLongMap) tDoubleLongHashMap0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(tDoubleLongHashMap0._states, int0, int0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) byteArrayInputStream0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) bufferedInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TDoubleLongMapDecorator tDoubleLongMapDecorator0 = new TDoubleLongMapDecorator();
      // Undeclared exception!
      try {
        tDoubleLongMapDecorator0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = 1380;
      float float0 = 1687.9977F;
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(int0, float0);
      TDoubleLongHashMap tDoubleLongHashMap1 = new TDoubleLongHashMap((TDoubleLongMap) tDoubleLongHashMap0);
      TDoubleLongMapDecorator tDoubleLongMapDecorator0 = new TDoubleLongMapDecorator((TDoubleLongMap) tDoubleLongHashMap1);
      OutputStream outputStream0 = null;
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(outputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) bufferedOutputStream0);
      tDoubleLongMapDecorator0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0, tDoubleLongMapDecorator0.size());
  }

  @Test
  public void test9()  throws Throwable  {
      TDoubleLongMapDecorator tDoubleLongMapDecorator0 = new TDoubleLongMapDecorator();
      TDoubleLongMap tDoubleLongMap0 = tDoubleLongMapDecorator0.getMap();
      TDoubleLongMapDecorator tDoubleLongMapDecorator1 = new TDoubleLongMapDecorator(tDoubleLongMap0);
      long long0 = (-1625L);
      int int0 = (-2030);
      ByteArrayOutputStream byteArrayOutputStream0 = null;
      try {
        byteArrayOutputStream0 = new ByteArrayOutputStream(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative initial size: -2030
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TDoubleLongMapDecorator tDoubleLongMapDecorator0 = new TDoubleLongMapDecorator();
      double double0 = 1.0;
      Double double1 = new Double(double0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = double0;
      doubleArray0[1] = double0;
      doubleArray0[2] = (double) double1;
      long[] longArray0 = new long[2];
      long long0 = (-1307L);
      longArray0[0] = long0;
      long long1 = 1589L;
      longArray0[1] = long1;
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      String string0 = tDoubleLongHashMap0.toString();
      Long long2 = tDoubleLongMapDecorator0.remove((Object) string0);
      // Undeclared exception!
      try {
        tDoubleLongMapDecorator0.put(double1, long2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      double double0 = 774.1856127121117;
      doubleArray0[0] = double0;
      double double1 = 571.5119454015904;
      doubleArray0[1] = double1;
      double double2 = 1617.9591004127287;
      doubleArray0[2] = double2;
      double double3 = 0.0;
      doubleArray0[3] = double3;
      double double4 = (-136.276437656025);
      doubleArray0[4] = double4;
      double double5 = 1.0;
      doubleArray0[5] = double5;
      double double6 = 0.0;
      doubleArray0[0] = double0;
      doubleArray0[1] = double1;
      double double7 = 1363.81243363637;
      doubleArray0[2] = double7;
      doubleArray0[3] = double0;
      double double8 = (-1948.45911720383);
      doubleArray0[4] = double8;
      doubleArray0[5] = double6;
      doubleArray0[6] = double0;
      doubleArray0[7] = double4;
      doubleArray0[8] = double5;
      int int0 = 0;
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(int0);
      TDoubleLongMapDecorator tDoubleLongMapDecorator0 = new TDoubleLongMapDecorator((TDoubleLongMap) tDoubleLongHashMap0);
      TDoubleLongHashMap tDoubleLongHashMap1 = (TDoubleLongHashMap)tDoubleLongMapDecorator0.getMap();
      assertNotNull(tDoubleLongHashMap1);
      
      doubleArray0[6] = double6;
      double double9 = 0.0;
      doubleArray0[7] = double9;
      double double10 = 1689.6501451201116;
      doubleArray0[8] = double10;
      long[] longArray0 = new long[1];
      long long0 = 1L;
      longArray0[0] = long0;
      TDoubleLongHashMap tDoubleLongHashMap2 = new TDoubleLongHashMap(doubleArray0, longArray0);
      TDoubleLongMapDecorator tDoubleLongMapDecorator1 = new TDoubleLongMapDecorator((TDoubleLongMap) tDoubleLongHashMap2);
      boolean boolean0 = tDoubleLongMapDecorator1.isEmpty();
      assertEquals(false, boolean0);
      
      tDoubleLongMapDecorator1.putAll((Map<? extends Double, ? extends Long>) tDoubleLongMapDecorator0);
      assertEquals(true, tDoubleLongMapDecorator0.isEmpty());
  }

  @Test
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      double double0 = 1.0;
      doubleArray0[0] = double0;
      double double1 = 0.0;
      doubleArray0[1] = double1;
      double double2 = 0.0;
      doubleArray0[2] = double2;
      double double3 = (-949.8455174171761);
      TDoubleLongMapDecorator tDoubleLongMapDecorator0 = new TDoubleLongMapDecorator();
      tDoubleLongMapDecorator0.values();
      tDoubleLongMapDecorator0.values();
      doubleArray0[3] = double3;
      double double4 = (-1310.4635825025084);
      doubleArray0[4] = double4;
      long[] longArray0 = new long[7];
      long long0 = (-1347L);
      longArray0[0] = long0;
      long long1 = 0L;
      longArray0[1] = long1;
      long long2 = 1777L;
      longArray0[2] = long2;
      long long3 = (-1332L);
      longArray0[3] = long3;
      long long4 = 1882L;
      longArray0[4] = long4;
      // Undeclared exception!
      try {
        tDoubleLongMapDecorator0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TDoubleLongMapDecorator tDoubleLongMapDecorator0 = new TDoubleLongMapDecorator();
      double double0 = Double.POSITIVE_INFINITY;
      Double double1 = new Double(double0);
      long long0 = (-1204L);
      Long long1 = new Long(long0);
      // Undeclared exception!
      try {
        tDoubleLongMapDecorator0.put(double1, long1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TDoubleLongMap tDoubleLongMap0 = null;
      TDoubleLongMapDecorator tDoubleLongMapDecorator0 = new TDoubleLongMapDecorator(tDoubleLongMap0);
      double double0 = (-1675.7111064835178);
      // Undeclared exception!
      try {
        tDoubleLongMapDecorator0.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TDoubleLongMapDecorator tDoubleLongMapDecorator0 = new TDoubleLongMapDecorator((TDoubleLongMap) tDoubleLongHashMap0);
      TDoubleLongHashMap tDoubleLongHashMap1 = new TDoubleLongHashMap();
      TDoubleLongMapDecorator tDoubleLongMapDecorator1 = new TDoubleLongMapDecorator((TDoubleLongMap) tDoubleLongHashMap1);
      String string0 = "";
      Locale locale0 = Locale.TAIWAN;
      Locale locale1 = Locale.KOREA;
      Object object0 = null;
      tDoubleLongMapDecorator1.equals(object0);
      String string1 = locale0.getDisplayName(locale1);
      tDoubleLongMapDecorator1.remove((Object) string1);
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://#
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      TDoubleLongMapDecorator tDoubleLongMapDecorator0 = new TDoubleLongMapDecorator();
      // Undeclared exception!
      try {
        tDoubleLongMapDecorator0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      TDoubleLongMapDecorator tDoubleLongMapDecorator0 = new TDoubleLongMapDecorator();
      String string0 = "";
      String string1 = "";
      // Undeclared exception!
      try {
        tDoubleLongMapDecorator0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      String string0 = "V:l";
      Object object0 = null;
      AbstractMap.SimpleEntry<String, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, Object>(string0, object0);
      abstractMap_SimpleEntry0.equals(object0);
      TDoubleLongMapDecorator tDoubleLongMapDecorator0 = new TDoubleLongMapDecorator((TDoubleLongMap) tDoubleLongHashMap0);
      Double double0 = null;
      String string1 = "4U1 U|CjU \\67";
      RandomAccessFile randomAccessFile0 = null;
      try {
        randomAccessFile0 = new RandomAccessFile(string1, string1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"4U1 U|CjU \\67\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
      }
  }
}

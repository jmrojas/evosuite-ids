/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TObjectFloatMapDecorator;
import gnu.trove.map.TObjectFloatMap;
import gnu.trove.map.custom_hash.TObjectFloatCustomHashMap;
import gnu.trove.map.hash.TObjectFloatHashMap;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TObjectFloatMapDecoratorEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 7 covered goals:
   * 1 gnu.trove.decorator.TObjectFloatMapDecorator$1$1.<init>(Lgnu/trove/decorator/TObjectFloatMapDecorator$1;)V: root-Branch
   * 2 gnu.trove.decorator.TObjectFloatMapDecorator$1.iterator()Ljava/util/Iterator;: root-Branch
   * 3 gnu.trove.decorator.TObjectFloatMapDecorator$1.<init>(Lgnu/trove/decorator/TObjectFloatMapDecorator;)V: root-Branch
   * 4 gnu.trove.decorator.TObjectFloatMapDecorator.size()I: root-Branch
   * 5 gnu.trove.decorator.TObjectFloatMapDecorator.entrySet()Ljava/util/Set;: root-Branch
   * 6 gnu.trove.decorator.TObjectFloatMapDecorator.<init>(Lgnu/trove/map/TObjectFloatMap;)V: root-Branch
   * 7 gnu.trove.decorator.TObjectFloatMapDecorator.putAll(Ljava/util/Map;)V: I14 Branch 11 IFLE L297 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TObjectFloatMapDecorator<Object> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<Object>((TObjectFloatMap<Object>) null);
      TObjectFloatHashMap<Integer> tObjectFloatHashMap0 = new TObjectFloatHashMap<Integer>((-365));
      TObjectFloatMapDecorator<Integer> tObjectFloatMapDecorator1 = new TObjectFloatMapDecorator<Integer>((TObjectFloatMap<Integer>) tObjectFloatHashMap0);
      tObjectFloatMapDecorator0.putAll((Map<?, ? extends Float>) tObjectFloatMapDecorator1);
      assertEquals(0, tObjectFloatMapDecorator1.size());
  }

  //Test case number: 1
  /*
   * 13 covered goals:
   * 1 gnu.trove.decorator.TObjectFloatMapDecorator$1$1.next()Ljava/util/Map$Entry;: root-Branch
   * 2 gnu.trove.decorator.TObjectFloatMapDecorator$1$1$1.getValue()Ljava/lang/Float;: root-Branch
   * 3 gnu.trove.decorator.TObjectFloatMapDecorator$1$1$1.getKey()Ljava/lang/Object;: root-Branch
   * 4 gnu.trove.decorator.TObjectFloatMapDecorator$1$1$1.<init>(Lgnu/trove/decorator/TObjectFloatMapDecorator$1$1;Ljava/lang/Float;Ljava/lang/Object;)V: root-Branch
   * 5 gnu.trove.decorator.TObjectFloatMapDecorator.wrapValue(F)Ljava/lang/Float;: root-Branch
   * 6 gnu.trove.decorator.TObjectFloatMapDecorator.unwrapValue(Ljava/lang/Object;)F: root-Branch
   * 7 gnu.trove.decorator.TObjectFloatMapDecorator.put(Ljava/lang/Object;Ljava/lang/Float;)Ljava/lang/Float;: I3 Branch 5 IFNONNULL L97 - true
   * 8 gnu.trove.decorator.TObjectFloatMapDecorator.putAll(Ljava/util/Map;)V: I14 Branch 11 IFLE L297 - false
   * 9 gnu.trove.decorator.TObjectFloatMapDecorator$1$1.<init>(Lgnu/trove/decorator/TObjectFloatMapDecorator$1;)V: root-Branch
   * 10 gnu.trove.decorator.TObjectFloatMapDecorator$1.iterator()Ljava/util/Iterator;: root-Branch
   * 11 gnu.trove.decorator.TObjectFloatMapDecorator$1.<init>(Lgnu/trove/decorator/TObjectFloatMapDecorator;)V: root-Branch
   * 12 gnu.trove.decorator.TObjectFloatMapDecorator.size()I: root-Branch
   * 13 gnu.trove.decorator.TObjectFloatMapDecorator.entrySet()Ljava/util/Set;: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TObjectFloatMapDecorator<Object> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<Object>((TObjectFloatMap<Object>) null);
      TObjectFloatHashMap<Integer> tObjectFloatHashMap0 = new TObjectFloatHashMap<Integer>((-365));
      TObjectFloatMapDecorator<Integer> tObjectFloatMapDecorator1 = new TObjectFloatMapDecorator<Integer>((TObjectFloatMap<Integer>) tObjectFloatHashMap0);
      tObjectFloatMapDecorator1.put((Integer) (-365), (Float) (-968.1541F));
      // Undeclared exception!
      try {
        tObjectFloatMapDecorator0.putAll((Map<?, ? extends Float>) tObjectFloatMapDecorator1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 gnu.trove.decorator.TObjectFloatMapDecorator.readExternal(Ljava/io/ObjectInput;)V: root-Branch
   * 2 gnu.trove.decorator.TObjectFloatMapDecorator.<init>()V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TObjectFloatMapDecorator<Float> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<Float>();
      // Undeclared exception!
      try {
        tObjectFloatMapDecorator0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectFloatMapDecorator.clear()V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TObjectFloatCustomHashMap<Integer> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Integer>();
      TObjectFloatMapDecorator<Integer> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<Integer>((TObjectFloatMap<Integer>) tObjectFloatCustomHashMap0);
      tObjectFloatMapDecorator0.clear();
      assertEquals(0, tObjectFloatMapDecorator0.size());
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectFloatMapDecorator.containsKey(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<Float> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Float>((HashingStrategy<? super Float>) identityHashingStrategy0, (-865), (float) (-865));
      TObjectFloatMapDecorator<Float> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<Float>((TObjectFloatMap<Float>) tObjectFloatCustomHashMap0);
      boolean boolean0 = tObjectFloatMapDecorator0.containsKey((Object) "3Bp&Pfr<Vs9]^AxLco");
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectFloatMapDecorator.getMap()Lgnu/trove/map/TObjectFloatMap;: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TObjectFloatMapDecorator<Object> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<Object>((TObjectFloatMap<Object>) null);
      TObjectFloatMap<Object> tObjectFloatMap0 = tObjectFloatMapDecorator0.getMap();
      assertNull(tObjectFloatMap0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectFloatMapDecorator.writeExternal(Ljava/io/ObjectOutput;)V: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (-865), (float) (-865), (float) (-865));
      TObjectFloatMapDecorator<Object> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<Object>((TObjectFloatMap<Object>) tObjectFloatCustomHashMap0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tObjectFloatMapDecorator0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(302, byteArrayOutputStream0.size());
      assertEquals("\uFFFD\uFFFD\u0000\u0005w\u0001\u0000sr\u00003gnu.trove.map.custom_hash.TObjectFloatCustomHashMap\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\f\u0000\u0000xr\u0000%gnu.trove.impl.hash.TCustomObjectHashy\uFFFDBapS\uFFFDp\f\u0000\u0000xr\u0000\u001Fgnu.trove.impl.hash.TObjectHash\uFFFD\uFFFD\uFFFDy\uFFFD\uFFFD\uFFFD1\f\u0000\u0000xr\u0000\u0019gnu.trove.impl.hash.THash\uFFFD\u001E*\uFFFD>\uFFFD7\uFFFD\f\u0000\u0000xpw\f\u0000\u0000\u0000\u0000\uFFFDX@\u0000\uFFFDX@\u0000sr\u0000*gnu.trove.strategy.IdentityHashingStrategy\uFFFD\uFFFD\uFFFDgQ\uFFFD\uFFFDX\u0002\u0000\u0000xpq\u0000~\u0000\u0006w\b\uFFFDX@\u0000\u0000\u0000\u0000\u0000x", byteArrayOutputStream0.toString());
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectFloatMapDecorator.put(Ljava/lang/Object;Ljava/lang/Float;)Ljava/lang/Float;: I3 Branch 5 IFNONNULL L97 - false
   */

  @Test
  public void test7()  throws Throwable  {
      TObjectFloatCustomHashMap<Integer> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Integer>();
      TObjectFloatMapDecorator<Integer> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<Integer>((TObjectFloatMap<Integer>) tObjectFloatCustomHashMap0);
      // Undeclared exception!
      try {
        tObjectFloatMapDecorator0.put((Integer) (-1518), (Float) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectFloatMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Float;: I14 Branch 6 IFNE L113 - false
   */

  @Test
  public void test8()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<Float> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Float>((HashingStrategy<? super Float>) identityHashingStrategy0, (-865), (float) (-865));
      TObjectFloatMapDecorator<Float> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<Float>((TObjectFloatMap<Float>) tObjectFloatCustomHashMap0);
      tObjectFloatMapDecorator0.get((Object) tObjectFloatCustomHashMap0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectFloatMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Float;: I14 Branch 7 IFNE L140 - true
   */

//   @Test
//   public void test9()  throws Throwable  {
//       TObjectFloatHashMap<Object> tObjectFloatHashMap0 = new TObjectFloatHashMap<Object>(1292);
//       TObjectFloatMapDecorator<Object> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<Object>((TObjectFloatMap<Object>) tObjectFloatHashMap0);
//       Float float0 = new Float((double) 1292);
//       tObjectFloatMapDecorator0.put((Object) 1292, float0);
//       assertEquals(false, tObjectFloatHashMap0.isEmpty());
//       
//       Float float1 = tObjectFloatMapDecorator0.remove((Object) 1292);
//       assertEquals(1292.0F, (float)float1, 0.01F);
//   }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectFloatMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Float;: I14 Branch 7 IFNE L140 - false
   */

  @Test
  public void test10()  throws Throwable  {
      TObjectFloatHashMap<Object> tObjectFloatHashMap0 = new TObjectFloatHashMap<Object>(1249);
      TObjectFloatMapDecorator<Object> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<Object>((TObjectFloatMap<Object>) tObjectFloatHashMap0);
      tObjectFloatMapDecorator0.remove((Object) tObjectFloatHashMap0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectFloatMapDecorator.containsValue(Ljava/lang/Object;)Z: I4 Branch 8 IFEQ L253 - true
   */

  @Test
  public void test11()  throws Throwable  {
      TObjectFloatHashMap<Object> tObjectFloatHashMap0 = new TObjectFloatHashMap<Object>(376);
      TObjectFloatMapDecorator<Object> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<Object>((TObjectFloatMap<Object>) tObjectFloatHashMap0);
      boolean boolean0 = tObjectFloatMapDecorator0.containsValue((Object) "{}");
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 2 covered goals:
   * 1 gnu.trove.decorator.TObjectFloatMapDecorator.containsValue(Ljava/lang/Object;)Z: I4 Branch 8 IFEQ L253 - false
   * 2 gnu.trove.decorator.TObjectFloatMapDecorator.containsValue(Ljava/lang/Object;)Z: I11 Branch 9 IFEQ L253 - true
   */

  @Test
  public void test12()  throws Throwable  {
      TObjectFloatHashMap<Integer> tObjectFloatHashMap0 = new TObjectFloatHashMap<Integer>(0, 0, 0);
      TObjectFloatMapDecorator<Integer> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<Integer>((TObjectFloatMap<Integer>) tObjectFloatHashMap0);
      Float float0 = new Float((float) 0);
      boolean boolean0 = tObjectFloatMapDecorator0.containsValue((Object) float0);
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 2 covered goals:
   * 1 gnu.trove.decorator.TObjectFloatMapDecorator.containsValue(Ljava/lang/Object;)Z: I11 Branch 9 IFEQ L253 - false
   * 2 gnu.trove.decorator.TObjectFloatMapDecorator.containsValue(Ljava/lang/Object;)Z: I4 Branch 8 IFEQ L253 - false
   */

  @Test
  public void test13()  throws Throwable  {
      TObjectFloatHashMap<Integer> tObjectFloatHashMap0 = new TObjectFloatHashMap<Integer>(1856, 1856, 1856);
      TObjectFloatMapDecorator<Integer> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<Integer>((TObjectFloatMap<Integer>) tObjectFloatHashMap0);
      Float float0 = new Float((float) 1856);
      tObjectFloatMapDecorator0.put((Integer) 1856, float0);
      boolean boolean0 = tObjectFloatMapDecorator0.containsValue((Object) float0);
      assertEquals(false, tObjectFloatMapDecorator0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 14
  /*
   * 4 covered goals:
   * 1 gnu.trove.decorator.TObjectFloatMapDecorator.isEmpty()Z: I5 Branch 10 IFNE L284 - true
   * 2 gnu.trove.decorator.TObjectFloatMapDecorator.wrapValue(F)Ljava/lang/Float;: root-Branch
   * 3 gnu.trove.decorator.TObjectFloatMapDecorator.unwrapValue(Ljava/lang/Object;)F: root-Branch
   * 4 gnu.trove.decorator.TObjectFloatMapDecorator.put(Ljava/lang/Object;Ljava/lang/Float;)Ljava/lang/Float;: I3 Branch 5 IFNONNULL L97 - true
   */

  @Test
  public void test14()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectFloatCustomHashMap<Integer> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-126), (float) (-126));
      TObjectFloatMapDecorator<Integer> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<Integer>((TObjectFloatMap<Integer>) tObjectFloatCustomHashMap0);
      Float float0 = Float.valueOf((float) (-126));
      tObjectFloatMapDecorator0.put((Integer) (-126), float0);
      boolean boolean0 = tObjectFloatMapDecorator0.isEmpty();
      assertEquals(7, tObjectFloatCustomHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 15
  /*
   * 2 covered goals:
   * 1 gnu.trove.decorator.TObjectFloatMapDecorator.isEmpty()Z: I5 Branch 10 IFNE L284 - false
   * 2 gnu.trove.decorator.TObjectFloatMapDecorator.<init>(Lgnu/trove/map/TObjectFloatMap;)V: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TObjectFloatHashMap<String> tObjectFloatHashMap0 = new TObjectFloatHashMap<String>((-1518));
      TObjectFloatHashMap<Object> tObjectFloatHashMap1 = new TObjectFloatHashMap<Object>((TObjectFloatMap<?>) tObjectFloatHashMap0);
      TObjectFloatMapDecorator<Object> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<Object>((TObjectFloatMap<Object>) tObjectFloatHashMap1);
      boolean boolean0 = tObjectFloatMapDecorator0.isEmpty();
      assertEquals(true, boolean0);
  }
}

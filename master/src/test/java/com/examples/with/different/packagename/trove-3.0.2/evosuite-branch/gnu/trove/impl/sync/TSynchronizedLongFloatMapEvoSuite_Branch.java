/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TFloatFunction;
import gnu.trove.impl.sync.TSynchronizedFloatCollection;
import gnu.trove.impl.sync.TSynchronizedLongFloatMap;
import gnu.trove.impl.sync.TSynchronizedLongSet;
import gnu.trove.map.TLongFloatMap;
import gnu.trove.map.hash.TLongFloatHashMap;
import gnu.trove.procedure.TFloatProcedure;
import gnu.trove.procedure.TLongFloatProcedure;
import gnu.trove.procedure.TLongProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedLongFloatMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.retainEntries(Lgnu/trove/procedure/TLongFloatProcedure;)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedLongFloatMap.<init>(Lgnu/trove/map/TLongFloatMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(26, 26, 26, 26);
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tSynchronizedLongFloatMap0.retainEntries((TLongFloatProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.iterator()Lgnu/trove/iterator/TLongFloatIterator;: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedLongFloatMap.size()I: root-Branch
   * 3 gnu.trove.impl.sync.TSynchronizedLongFloatMap.putAll(Lgnu/trove/map/TLongFloatMap;)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(1);
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      tSynchronizedLongFloatMap0.putAll((TLongFloatMap) tSynchronizedLongFloatMap0);
      assertEquals("{}", tSynchronizedLongFloatMap0.toString());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.values()[F: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      float[] floatArray0 = tSynchronizedLongFloatMap0.values();
      assertNotNull(floatArray0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tSynchronizedLongFloatMap0.equals((Object) "1695");
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.remove(J)F: root-Branch
   */

//   @Test
//   public void test4()  throws Throwable  {
//       TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
//       TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
//       float float0 = tSynchronizedLongFloatMap0.remove(0L);
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.hashCode()I: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      int int0 = tSynchronizedLongFloatMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.adjustOrPutValue(JFF)F: root-Branch
   */

//   @Test
//   public void test6()  throws Throwable  {
//       TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(1);
//       TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
//       float float0 = tSynchronizedLongFloatMap0.adjustOrPutValue((long) 1, (float) 1, (float) 1);
//       assertEquals("{1=1.0}", tLongFloatHashMap0.toString());
//       assertEquals(1.0F, float0, 0.01F);
//   }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.forEachEntry(Lgnu/trove/procedure/TLongFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(26, 26, 26, 26);
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tSynchronizedLongFloatMap0.forEachEntry((TLongFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.containsKey(J)Z: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(1);
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tSynchronizedLongFloatMap0.containsKey((long) 1);
      assertEquals(false, boolean0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(1);
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tSynchronizedLongFloatMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      long[] longArray0 = new long[1];
      float[] floatArray0 = new float[3];
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(longArray0, floatArray0);
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      HashMap<Long, Float> hashMap0 = new HashMap<Long, Float>();
      tSynchronizedLongFloatMap0.putAll((Map<? extends Long, ? extends Float>) hashMap0);
      assertEquals("{0=0.0}", tSynchronizedLongFloatMap0.toString());
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.getNoEntryKey()J: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      long long0 = tSynchronizedLongFloatMap0.getNoEntryKey();
      assertEquals(0L, long0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.increment(J)Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tSynchronizedLongFloatMap0.increment(1695L);
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(1);
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      String string0 = tSynchronizedLongFloatMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.put(JF)F: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap((-171), (-171));
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      tSynchronizedLongFloatMap0.put((long) (-171), (float) (-171));
      assertEquals(7, tLongFloatHashMap0.capacity());
      assertEquals(1, tSynchronizedLongFloatMap0.size());
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.values([F)[F: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      float[] floatArray0 = new float[22];
      float[] floatArray1 = tSynchronizedLongFloatMap0.values(floatArray0);
      assertSame(floatArray0, floatArray1);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(0, 0);
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tSynchronizedLongFloatMap0.forEachKey((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.keys()[J: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      long[] longArray0 = tSynchronizedLongFloatMap0.keys();
      assertNotNull(longArray0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.<init>(Lgnu/trove/map/TLongFloatMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0, (Object) "");
      assertEquals(0L, tSynchronizedLongFloatMap0.getNoEntryKey());
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.putIfAbsent(JF)F: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      tSynchronizedLongFloatMap0.putIfAbsent((-1417L), 0.0F);
      assertEquals(false, tLongFloatHashMap0.isEmpty());
      assertEquals("{-1417=0.0}", tLongFloatHashMap0.toString());
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.get(J)F: root-Branch
   */

//   @Test
//   public void test20()  throws Throwable  {
//       TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
//       TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
//       float float0 = tSynchronizedLongFloatMap0.get(0L);
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.transformValues(Lgnu/trove/function/TFloatFunction;)V: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      tSynchronizedLongFloatMap0.transformValues((TFloatFunction) null);
      assertEquals("{}", tSynchronizedLongFloatMap0.toString());
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.adjustValue(JF)Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(1);
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tSynchronizedLongFloatMap0.adjustValue((long) 1, (float) 1);
      assertEquals(false, boolean0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.containsValue(F)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(1);
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tSynchronizedLongFloatMap0.containsValue((float) 1);
      assertEquals(false, boolean0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.getNoEntryValue()F: root-Branch
   */

//   @Test
//   public void test24()  throws Throwable  {
//       TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
//       TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
//       float float0 = tSynchronizedLongFloatMap0.getNoEntryValue();
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(1246);
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tSynchronizedLongFloatMap0.forEachValue((TFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.clear()V: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(1);
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      tSynchronizedLongFloatMap0.clear();
      assertEquals(true, tSynchronizedLongFloatMap0.isEmpty());
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.keys([J)[J: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap((-171), (-171));
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      long[] longArray0 = tSynchronizedLongFloatMap0.keys(tLongFloatHashMap0._set);
      assertNotNull(longArray0);
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.<init>(Lgnu/trove/map/TLongFloatMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = null;
      try {
        tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.keySet()Lgnu/trove/set/TLongSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedLongFloatMap.keySet()Lgnu/trove/set/TLongSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      TSynchronizedLongSet tSynchronizedLongSet0 = (TSynchronizedLongSet)tSynchronizedLongFloatMap0.keySet();
      assertNotNull(tSynchronizedLongSet0);
      
      TSynchronizedLongSet tSynchronizedLongSet1 = (TSynchronizedLongSet)tSynchronizedLongFloatMap0.keySet();
      assertSame(tSynchronizedLongSet1, tSynchronizedLongSet0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedLongFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 gnu.trove.impl.sync.TSynchronizedLongFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I11 Branch 3 IFNONNULL L121 - false
   * 3 gnu.trove.impl.sync.TSynchronizedLongFloatMap.<init>(Lgnu/trove/map/TLongFloatMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(1);
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = new TSynchronizedLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      TSynchronizedFloatCollection tSynchronizedFloatCollection0 = (TSynchronizedFloatCollection)tSynchronizedLongFloatMap0.valueCollection();
      assertNotNull(tSynchronizedFloatCollection0);
      
      TSynchronizedFloatCollection tSynchronizedFloatCollection1 = (TSynchronizedFloatCollection)tSynchronizedLongFloatMap0.valueCollection();
      assertSame(tSynchronizedFloatCollection1, tSynchronizedFloatCollection0);
  }
}

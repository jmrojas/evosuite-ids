/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TCharFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortSet;
import gnu.trove.map.TShortCharMap;
import gnu.trove.map.hash.TShortCharHashMap;
import gnu.trove.procedure.TCharProcedure;
import gnu.trove.procedure.TShortCharProcedure;
import gnu.trove.procedure.TShortProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableShortCharMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap$1.key()S: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap$1.advance()V: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap$1.value()C: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap$1.hasNext()Z: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableShortCharMap;)V: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.size()I: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.iterator()Lgnu/trove/iterator/TShortCharIterator;: root-Branch
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.<init>(Lgnu/trove/map/TShortCharMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap((-17), (-17));
      char[] charArray0 = new char[10];
      TShortCharHashMap tShortCharHashMap1 = new TShortCharHashMap(tShortCharHashMap0._set, charArray0);
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap1);
      TShortCharHashMap tShortCharHashMap2 = new TShortCharHashMap((TShortCharMap) tUnmodifiableShortCharMap0);
      assertEquals(1, tUnmodifiableShortCharMap0.size());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.values([C)[C: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      char[] charArray0 = new char[9];
      char[] charArray1 = tUnmodifiableShortCharMap0.values(charArray0);
      assertSame(charArray1, charArray0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.containsKey(S)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap((-1604), (float) (-1604), (short)0, '!');
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      boolean boolean0 = tUnmodifiableShortCharMap0.containsKey((short)70);
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.putIfAbsent(SC)C: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap((-1999), (float) (-1999), (short) (-577), 'e');
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortCharMap0.putIfAbsent((short) (-577), 'e');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.keys()[S: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap(1730);
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      short[] shortArray0 = tUnmodifiableShortCharMap0.keys();
      assertNotNull(shortArray0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.increment(S)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      short[] shortArray0 = new short[1];
      char[] charArray0 = new char[4];
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap(shortArray0, charArray0);
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortCharMap0.increment((short)46);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.adjustOrPutValue(SCC)C: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap((-1604), (float) (-1604), (short)0, '!');
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortCharMap0.adjustOrPutValue((short)0, '!', '!');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.getNoEntryValue()C: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      char char0 = tUnmodifiableShortCharMap0.getNoEntryValue();
      assertEquals('\u0000', char0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.containsValue(C)Z: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      boolean boolean0 = tUnmodifiableShortCharMap0.containsValue('J');
      assertEquals(false, boolean0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.remove(S)C: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortCharMap0.remove((short) (-856));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      boolean boolean0 = tUnmodifiableShortCharMap0.forEachKey((TShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      short[] shortArray0 = new short[6];
      char[] charArray0 = new char[6];
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap(shortArray0, charArray0);
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      String string0 = tUnmodifiableShortCharMap0.toString();
      assertEquals("{0=\u0000}", string0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.get(S)C: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap((-17), (-17));
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      char char0 = tUnmodifiableShortCharMap0.get((short)0);
      assertEquals('\u0000', char0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.transformValues(Lgnu/trove/function/TCharFunction;)V: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap((-24));
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortCharMap0.transformValues((TCharFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.clear()V: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortCharMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap((-1999), (float) (-1999), (short) (-577), 'e');
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      boolean boolean0 = tUnmodifiableShortCharMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap((-1999), (float) (-1999), (short) (-577), 'e');
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      boolean boolean0 = tUnmodifiableShortCharMap0.forEachValue((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.getNoEntryKey()S: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap((-17), (-17));
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      short short0 = tUnmodifiableShortCharMap0.getNoEntryKey();
      assertEquals((short)0, short0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.forEachEntry(Lgnu/trove/procedure/TShortCharProcedure;)Z: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      boolean boolean0 = tUnmodifiableShortCharMap0.forEachEntry((TShortCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap((-20), (-20));
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      HashMap<Short, Character> hashMap0 = new HashMap<Short, Character>();
      // Undeclared exception!
      try {
        tUnmodifiableShortCharMap0.putAll((Map<? extends Short, ? extends Character>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.hashCode()I: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap(1730);
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      int int0 = tUnmodifiableShortCharMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.keys([S)[S: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      short[] shortArray0 = tUnmodifiableShortCharMap0.keys(tShortCharHashMap0._set);
      assertNotNull(shortArray0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.put(SC)C: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortCharMap0.put((short) (-858), ')');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.putAll(Lgnu/trove/map/TShortCharMap;)V: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      short[] shortArray0 = new short[6];
      char[] charArray0 = new char[6];
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap(shortArray0, charArray0);
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortCharMap0.putAll((TShortCharMap) tShortCharHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.retainEntries(Lgnu/trove/procedure/TShortCharProcedure;)Z: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortCharMap0.retainEntries((TShortCharProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.adjustValue(SC)Z: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap(29);
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortCharMap0.adjustValue((short)92, 'h');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.values()[C: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      char[] charArray0 = tUnmodifiableShortCharMap0.values();
      assertNotNull(charArray0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.<init>(Lgnu/trove/map/TShortCharMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = null;
      try {
        tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.keySet()Lgnu/trove/set/TShortSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.keySet()Lgnu/trove/set/TShortSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      TUnmodifiableShortSet tUnmodifiableShortSet0 = (TUnmodifiableShortSet)tUnmodifiableShortCharMap0.keySet();
      assertNotNull(tUnmodifiableShortSet0);
      
      TUnmodifiableShortSet tUnmodifiableShortSet1 = (TUnmodifiableShortSet)tUnmodifiableShortCharMap0.keySet();
      assertSame(tUnmodifiableShortSet1, tUnmodifiableShortSet0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.valueCollection()Lgnu/trove/TCharCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.valueCollection()Lgnu/trove/TCharCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      TUnmodifiableCharCollection tUnmodifiableCharCollection0 = (TUnmodifiableCharCollection)tUnmodifiableShortCharMap0.valueCollection();
      assertNotNull(tUnmodifiableCharCollection0);
      
      TUnmodifiableCharCollection tUnmodifiableCharCollection1 = (TUnmodifiableCharCollection)tUnmodifiableShortCharMap0.valueCollection();
      assertSame(tUnmodifiableCharCollection1, tUnmodifiableCharCollection0);
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - false
   */

  @Test
  public void test30()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      boolean boolean0 = tUnmodifiableShortCharMap0.equals((Object) tShortCharHashMap0);
      assertEquals(true, boolean0);
  }

  //Test case number: 31
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap.<init>(Lgnu/trove/map/TShortCharMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = new TUnmodifiableShortCharMap((TShortCharMap) tShortCharHashMap0);
      boolean boolean0 = tUnmodifiableShortCharMap0.equals((Object) "");
      assertEquals(false, boolean0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.custom_hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TLongCollection;
import gnu.trove.function.TLongFunction;
import gnu.trove.impl.hash.TObjectHash;
import gnu.trove.map.TObjectLongMap;
import gnu.trove.map.custom_hash.TObjectLongCustomHashMap;
import gnu.trove.map.hash.TObjectLongHashMap;
import gnu.trove.procedure.TLongProcedure;
import gnu.trove.procedure.TObjectLongProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TObjectLongCustomHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$KeyView.<init>(Lgnu/trove/map/custom_hash/TObjectLongCustomHashMap;)V: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$1.<init>(Lgnu/trove/map/custom_hash/TObjectLongCustomHashMap;)V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keySet()Ljava/util/Set;: root-Branch
   * 5 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putAll(Lgnu/trove/map/TObjectLongMap;)V: root-Branch
   * 6 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V: I26 Branch 8 IFEQ L134 - true
   * 7 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V: I14 Branch 9 IFEQ L151 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) null, (TObjectLongMap<? extends Long>) tObjectLongHashMap0);
      tObjectLongCustomHashMap0.keySet();
      assertEquals(0L, tObjectLongCustomHashMap0.getNoEntryValue());
  }

  //Test case number: 1
  /*
   * 16 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$1.execute(Ljava/lang/Object;J)Z: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.getNoEntryValue()J: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V: I14 Branch 9 IFEQ L151 - false
   * 5 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V: I44 Branch 10 IFEQ L157 - true
   * 6 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J: I12 Branch 21 IFGE L268 - true
   * 7 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J: I41 Branch 22 IFEQ L276 - false
   * 8 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J: I9 Branch 41 IFGE L456 - true
   * 9 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J: I51 Branch 42 IFEQ L466 - false
   * 10 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - false
   * 11 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I30 Branch 49 IF_ACMPEQ L519 - false
   * 12 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I39 Branch 50 IFNE L519 - true
   * 13 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IF)V: root-Branch
   * 14 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I18 Branch 47 IFLE L518 - true
   * 15 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I18 Branch 47 IFLE L518 - false
   * 16 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - true
   */

  @Test
  public void test1()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 458, (float) 458);
      tObjectLongCustomHashMap0.adjustOrPutValue((Long) 1L, 1L, 0L);
      TObjectLongCustomHashMap<Object> tObjectLongCustomHashMap1 = new TObjectLongCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectLongMap<?>) tObjectLongCustomHashMap0);
      assertEquals(1, tObjectLongCustomHashMap0.size());
      assertEquals(false, tObjectLongCustomHashMap1.isEmpty());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V: I26 Branch 8 IFEQ L134 - false
   */

  @Test
  public void test2()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 18, (float) 18, 83L);
      tObjectLongCustomHashMap0.clear();
      assertEquals("{}", tObjectLongCustomHashMap0.toString());
      assertEquals(83L, tObjectLongCustomHashMap0.getNoEntryValue());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.valueCollection()Lgnu/trove/TLongCollection;: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$TLongValueCollection.<init>(Lgnu/trove/map/custom_hash/TObjectLongCustomHashMap;)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 1, 1179.071F);
      TLongCollection tLongCollection0 = tObjectLongCustomHashMap0.valueCollection();
      assertEquals(0L, tLongCollection0.getNoEntryValue());
  }

  //Test case number: 4
  /*
   * 16 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.iterator()Lgnu/trove/iterator/TObjectLongIterator;: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$TObjectLongHashIterator.key()Ljava/lang/Object;: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$TObjectLongHashIterator.value()J: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$TObjectLongHashIterator.<init>(Lgnu/trove/map/custom_hash/TObjectLongCustomHashMap;Lgnu/trove/map/custom_hash/TObjectLongCustomHashMap;)V: root-Branch
   * 5 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$TObjectLongHashIterator.advance()V: root-Branch
   * 6 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - true
   * 7 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - false
   * 8 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - true
   * 9 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - false
   * 10 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V: I63 Branch 13 IF_ACMPEQ L201 - false
   * 11 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V: I73 Branch 14 IFGE L203 - true
   * 12 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L588 - true
   * 13 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 59 IF_ICMPEQ L592 - true
   * 14 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 60 IFEQ L597 - false
   * 15 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z: I55 Branch 61 IFNE L601 - true
   * 16 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z: I81 Branch 64 IFEQ L608 - false
   */

  @Test
  public void test4()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1, 0.0F);
      tObjectLongCustomHashMap0.adjustOrPutValue((Integer) 1, (long) 1, (long) 1);
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap1 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 1, (float) 1);
      tObjectLongCustomHashMap1.adjustOrPutValue((Long) 1L, 1L, (long) 1);
      TObjectLongHashMap<Integer> tObjectLongHashMap0 = new TObjectLongHashMap<Integer>((TObjectLongMap<? extends Integer>) tObjectLongCustomHashMap0);
      boolean boolean0 = tObjectLongCustomHashMap1.equals((Object) tObjectLongHashMap0);
      assertEquals(false, tObjectLongCustomHashMap0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, (-56), (float) (-56), (long) 64958094);
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tObjectLongCustomHashMap0._set);
      boolean boolean0 = tObjectLongCustomHashMap0.forEachKey((TObjectProcedure<? super Long>) toObjectArrayProceedure0);
      assertEquals(true, boolean0);
      assertEquals(64958094L, tObjectLongCustomHashMap0.getNoEntryValue());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsKey(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-1038), 0.0F);
      Object object0 = new Object();
      boolean boolean0 = tObjectLongCustomHashMap0.containsKey(object0);
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.increment(Ljava/lang/Object;)Z: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z: I9 Branch 40 IFGE L440 - false
   */

  @Test
  public void test7()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-1038), 0.0F);
      boolean boolean0 = tObjectLongCustomHashMap0.increment((Integer) (-12));
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.removeAt(I)V: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J: I14 Branch 23 IFLT L287 - false
   */

  @Test
  public void test8()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 1, 1179.071F);
      tObjectLongCustomHashMap0.adjustOrPutValue((Long) 1L, 1L, (long) 1);
      assertEquals(false, tObjectLongCustomHashMap0.isEmpty());
      
      long long0 = tObjectLongCustomHashMap0.remove((Object) 1L);
      assertEquals(1L, long0);
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V: I44 Branch 10 IFEQ L157 - false
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V: I14 Branch 9 IFEQ L151 - false
   */

  @Test
  public void test9()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, (-1038), (float) 0L, (long) (-1038));
      TObjectLongCustomHashMap<Object> tObjectLongCustomHashMap1 = null;
      try {
        tObjectLongCustomHashMap1 = new TObjectLongCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectLongMap<?>) tObjectLongCustomHashMap0);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V: I63 Branch 13 IF_ACMPEQ L201 - true
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J: I9 Branch 20 IFGE L259 - true
   */

  @Test
  public void test10()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      Object object0 = TObjectHash.REMOVED;
      TObjectLongCustomHashMap<Object> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (-199), (float) (-199));
      long long0 = tObjectLongCustomHashMap0.putIfAbsent(object0, (long) 1325436730);
      assertEquals(false, tObjectLongCustomHashMap0.isEmpty());
      assertEquals(0L, long0);
  }

  //Test case number: 11
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z: I25 Branch 16 IF_ACMPEQ L232 - false
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z: I30 Branch 17 IF_ACMPEQ L232 - false
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z: I36 Branch 18 IFNE L232 - true
   * 4 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z: I18 Branch 15 IFLE L231 - true
   * 5 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z: I18 Branch 15 IFLE L231 - false
   * 6 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z: I25 Branch 16 IF_ACMPEQ L232 - true
   */

  @Test
  public void test11()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1, 460.27118F);
      tObjectLongCustomHashMap0.put((Integer) 1, (long) 1);
      boolean boolean0 = tObjectLongCustomHashMap0.containsValue((long) 451);
      assertEquals(false, tObjectLongCustomHashMap0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z: I36 Branch 18 IFNE L232 - false
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z: I18 Branch 15 IFLE L231 - false
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z: I25 Branch 16 IF_ACMPEQ L232 - true
   * 4 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z: I25 Branch 16 IF_ACMPEQ L232 - false
   * 5 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z: I30 Branch 17 IF_ACMPEQ L232 - false
   */

  @Test
  public void test12()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-1038), 0.0F);
      tObjectLongCustomHashMap0.putIfAbsent((Integer) (-1038), (long) (-1038));
      boolean boolean0 = tObjectLongCustomHashMap0.containsValue((long) (-1038));
      assertEquals(7, tObjectLongCustomHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J: I9 Branch 19 IFGE L243 - false
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;)V: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0);
      long long0 = tObjectLongCustomHashMap0.get((Object) "\u4E2D\u6587 (\u4E2D\u56FD)");
      assertEquals(23, tObjectLongCustomHashMap0.capacity());
      assertEquals(0L, long0);
  }

  //Test case number: 14
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J: I9 Branch 20 IFGE L259 - false
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J: I9 Branch 20 IFGE L259 - true
   */

//   @Test
//   public void test14()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-1038), 0.0F);
//       tObjectLongCustomHashMap0.putIfAbsent((Integer) (-1038), (long) (-1038));
//       long long0 = tObjectLongCustomHashMap0.putIfAbsent((Integer) (-1038), (-1836L));
//       assertEquals(false, tObjectLongCustomHashMap0.isEmpty());
//       assertEquals((-1038L), long0);
//   }

  //Test case number: 15
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J: I12 Branch 21 IFGE L268 - false
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J: I41 Branch 22 IFEQ L276 - true
   */

  @Test
  public void test15()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1, 0.0F);
      tObjectLongCustomHashMap0.adjustOrPutValue((Integer) 1, (long) 1, (long) 1);
      long long0 = tObjectLongCustomHashMap0.put((Integer) 1, (long) 1);
      assertEquals(false, tObjectLongCustomHashMap0.isEmpty());
      assertEquals(1L, long0);
  }

  //Test case number: 16
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J: I14 Branch 23 IFLT L287 - true
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;I)V: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, (-268));
      long long0 = tObjectLongCustomHashMap0.remove((Object) 18L);
      assertEquals(0L, long0);
      assertEquals(0, tObjectLongCustomHashMap0.size());
      assertEquals(3, tObjectLongCustomHashMap0.capacity());
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putAll(Ljava/util/Map;)V: I13 Branch 24 IFEQ L313 - true
   */

  @Test
  public void test17()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 17, (float) 17, (long) 17);
      HashMap<Long, Long> hashMap0 = new HashMap<Long, Long>();
      tObjectLongCustomHashMap0.putAll((Map<? extends Long, ? extends Long>) hashMap0);
      assertEquals(17L, tObjectLongCustomHashMap0.getNoEntryValue());
  }

  //Test case number: 18
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L348 - false
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;: I35 Branch 27 IF_ACMPEQ L348 - false
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L347 - true
   * 4 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L347 - false
   * 5 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L348 - true
   */

  @Test
  public void test18()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 1, 1179.071F);
      tObjectLongCustomHashMap0.adjustOrPutValue((Long) 1L, 1L, (long) 1);
      tObjectLongCustomHashMap0.keys();
      assertEquals(false, tObjectLongCustomHashMap0.isEmpty());
      assertEquals("{1=1}", tObjectLongCustomHashMap0.toString());
  }

  //Test case number: 19
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I10 Branch 28 IF_ICMPGE L360 - true
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L368 - true
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L368 - false
   * 4 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L369 - true
   */

  @Test
  public void test19()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-1038), 0.0F);
      Integer[] integerArray0 = new Integer[6];
      Integer[] integerArray1 = tObjectLongCustomHashMap0.keys(integerArray0);
      assertNotNull(integerArray1);
      assertSame(integerArray0, integerArray1);
  }

  //Test case number: 20
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I10 Branch 28 IF_ICMPGE L360 - false
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L369 - false
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I49 Branch 31 IF_ACMPEQ L369 - false
   * 4 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L368 - true
   * 5 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L368 - false
   * 6 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L369 - true
   */

//   @Test
//   public void test20()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1, 460.27118F);
//       tObjectLongCustomHashMap0.put((Integer) 1, (long) 1);
//       tObjectLongCustomHashMap0.put((Integer) 451, 3L);
//       Integer[] integerArray0 = new Integer[1];
//       tObjectLongCustomHashMap0.keys(integerArray0);
//       assertEquals(2, tObjectLongCustomHashMap0.size());
//       assertEquals("{451=3,1=1}", tObjectLongCustomHashMap0.toString());
//   }

  //Test case number: 21
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J: I34 Branch 33 IF_ACMPEQ L391 - false
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J: I39 Branch 34 IF_ACMPEQ L391 - false
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J: I27 Branch 32 IFLE L390 - true
   * 4 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J: I27 Branch 32 IFLE L390 - false
   * 5 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J: I34 Branch 33 IF_ACMPEQ L391 - true
   */

  @Test
  public void test21()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0);
      Long long0 = new Long((-1272L));
      tObjectLongCustomHashMap0.put(long0, 0L);
      tObjectLongCustomHashMap0.values();
      assertEquals(1, tObjectLongCustomHashMap0.size());
      assertEquals("{-1272=0}", tObjectLongCustomHashMap0.toString());
  }

  //Test case number: 22
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J: I44 Branch 37 IF_ACMPEQ L410 - false
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J: I49 Branch 38 IF_ACMPEQ L410 - false
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J: I65 Branch 39 IF_ICMPLE L414 - false
   * 4 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J: I10 Branch 35 IF_ICMPGE L402 - true
   * 5 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J: I37 Branch 36 IFLE L409 - true
   * 6 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J: I37 Branch 36 IFLE L409 - false
   * 7 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J: I44 Branch 37 IF_ACMPEQ L410 - true
   */

  @Test
  public void test22()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 1, 1179.071F);
      long[] longArray0 = new long[6];
      tObjectLongCustomHashMap0.adjustOrPutValue((Long) 1L, 1L, (long) 1);
      tObjectLongCustomHashMap0.values(longArray0);
      assertEquals(1, tObjectLongCustomHashMap0.size());
      assertEquals("{1=1}", tObjectLongCustomHashMap0.toString());
  }

  //Test case number: 23
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J: I65 Branch 39 IF_ICMPLE L414 - true
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J: I27 Branch 32 IFLE L390 - true
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J: I27 Branch 32 IFLE L390 - false
   * 4 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J: I34 Branch 33 IF_ACMPEQ L391 - true
   * 5 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J: I10 Branch 35 IF_ICMPGE L402 - true
   * 6 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J: I37 Branch 36 IFLE L409 - true
   * 7 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J: I37 Branch 36 IFLE L409 - false
   * 8 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J: I44 Branch 37 IF_ACMPEQ L410 - true
   */

  @Test
  public void test23()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0);
      long[] longArray0 = tObjectLongCustomHashMap0.values();
      assertNotNull(longArray0);
      
      TObjectLongCustomHashMap<Object> tObjectLongCustomHashMap1 = new TObjectLongCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      long[] longArray1 = tObjectLongCustomHashMap1.values(longArray0);
      assertSame(longArray1, longArray0);
      assertEquals(23, tObjectLongCustomHashMap1.capacity());
      assertNotNull(longArray1);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z: I9 Branch 40 IFGE L440 - true
   */

  @Test
  public void test24()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 18, (float) 18, 83L);
      tObjectLongCustomHashMap0.adjustOrPutValue((Integer) 18, (long) 18, (long) 18);
      boolean boolean0 = tObjectLongCustomHashMap0.adjustValue((Integer) 18, 18L);
      assertEquals(1, tObjectLongCustomHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 25
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J: I9 Branch 41 IFGE L456 - false
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J: I51 Branch 42 IFEQ L466 - true
   */

  @Test
  public void test25()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1, 460.27118F);
      tObjectLongCustomHashMap0.put((Integer) 1, (long) 1);
      long long0 = tObjectLongCustomHashMap0.adjustOrPutValue((Integer) 1, (long) 1, (long) 1);
      assertEquals(false, tObjectLongCustomHashMap0.isEmpty());
      assertEquals(2L, long0);
  }

  //Test case number: 26
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 43 IFLE L496 - true
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 43 IFLE L496 - false
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 44 IF_ACMPEQ L497 - true
   * 4 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putAll(Lgnu/trove/map/TObjectLongMap;)V: root-Branch
   * 5 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V: I14 Branch 9 IFEQ L151 - true
   * 6 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V: I26 Branch 8 IFEQ L134 - true
   */

  @Test
  public void test26()  throws Throwable  {
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) null, (TObjectLongMap<? extends Long>) tObjectLongHashMap0);
      boolean boolean0 = tObjectLongCustomHashMap0.forEachValue((TLongProcedure) null);
      assertEquals(true, boolean0);
      assertEquals(0L, tObjectLongCustomHashMap0.getNoEntryValue());
  }

  //Test case number: 27
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I27 Branch 51 IFLE L545 - true
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I27 Branch 51 IFLE L545 - false
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I34 Branch 52 IF_ACMPEQ L546 - true
   */

  @Test
  public void test27()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0);
      boolean boolean0 = tObjectLongCustomHashMap0.retainEntries((TObjectLongProcedure<? super Long>) null);
      assertEquals(23, tObjectLongCustomHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 28
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I34 Branch 52 IF_ACMPEQ L546 - false
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I39 Branch 53 IF_ACMPEQ L546 - false
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;)V: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I27 Branch 51 IFLE L545 - false
   * 5 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I34 Branch 52 IF_ACMPEQ L546 - true
   */

  @Test
  public void test28()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0);
      Long long0 = new Long((-1272L));
      tObjectLongCustomHashMap0.put(long0, 0L);
      // Undeclared exception!
      try {
        tObjectLongCustomHashMap0.retainEntries((TObjectLongProcedure<? super Long>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 29
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I18 Branch 55 IFLE L570 - false
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I24 Branch 56 IFNULL L571 - false
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I29 Branch 57 IF_ACMPEQ L571 - false
   */

  @Test
  public void test29()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 17, (float) 17, (long) 17);
      // Undeclared exception!
      try {
        tObjectLongCustomHashMap0.transformValues((TLongFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L588 - false
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>()V: root-Branch
   */

  @Test
  public void test30()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Object> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Object>();
      boolean boolean0 = tObjectLongCustomHashMap0.equals((Object) identityHashingStrategy0);
      assertEquals(23, tObjectLongCustomHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 59 IF_ICMPEQ L592 - false
   */

  @Test
  public void test31()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectLongCustomHashMap<String> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1253, (float) 1253, 1657L);
      tObjectLongCustomHashMap0.put("\uC774\uD0C8\uB9AC\uC544", 0L);
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>((-1315), 1253);
      boolean boolean0 = tObjectLongCustomHashMap0.equals((Object) tObjectLongHashMap0);
      assertEquals(false, tObjectLongCustomHashMap0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 32
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 60 IFEQ L597 - true
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;I)V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V: I26 Branch 8 IFEQ L134 - false
   */

  @Test
  public void test32()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 18, (float) 18, 83L);
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap1 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, (-268));
      TObjectLongHashMap<Integer> tObjectLongHashMap0 = new TObjectLongHashMap<Integer>((TObjectLongMap<? extends Integer>) tObjectLongCustomHashMap0);
      boolean boolean0 = tObjectLongCustomHashMap1.equals((Object) tObjectLongHashMap0);
      assertEquals(83L, tObjectLongCustomHashMap0.getNoEntryValue());
      assertEquals(3, tObjectLongCustomHashMap1.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 33
  /*
   * 12 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z: I55 Branch 61 IFNE L601 - false
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z: I64 Branch 62 IFNE L602 - false
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z: I68 Branch 63 IFNE L602 - false
   * 4 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.getNoEntryValue()J: root-Branch
   * 5 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.iterator()Lgnu/trove/iterator/TObjectLongIterator;: root-Branch
   * 6 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L588 - true
   * 7 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 59 IF_ICMPEQ L592 - true
   * 8 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 60 IFEQ L597 - false
   * 9 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$TObjectLongHashIterator.key()Ljava/lang/Object;: root-Branch
   * 10 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$TObjectLongHashIterator.value()J: root-Branch
   * 11 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$TObjectLongHashIterator.<init>(Lgnu/trove/map/custom_hash/TObjectLongCustomHashMap;Lgnu/trove/map/custom_hash/TObjectLongCustomHashMap;)V: root-Branch
   * 12 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$TObjectLongHashIterator.advance()V: root-Branch
   */

  @Test
  public void test33()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1, 460.27118F);
      tObjectLongCustomHashMap0.adjustOrPutValue((Integer) 1, (long) 1, (long) 1);
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap1 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 458, (float) 458);
      tObjectLongCustomHashMap1.adjustOrPutValue((Long) 1L, 1L, 0L);
      TObjectLongHashMap<Integer> tObjectLongHashMap0 = new TObjectLongHashMap<Integer>((TObjectLongMap<? extends Integer>) tObjectLongCustomHashMap0);
      boolean boolean0 = tObjectLongCustomHashMap1.equals((Object) tObjectLongHashMap0);
      assertEquals(false, tObjectLongCustomHashMap0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 34
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I: I22 Branch 65 IFLE L625 - true
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I: I22 Branch 65 IFLE L625 - false
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L626 - true
   * 4 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>()V: root-Branch
   */

  @Test
  public void test34()  throws Throwable  {
      TObjectLongCustomHashMap<Object> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Object>();
      int int0 = tObjectLongCustomHashMap0.hashCode();
      assertEquals(23, tObjectLongCustomHashMap0.capacity());
      assertEquals(0, int0);
  }

  //Test case number: 35
  /*
   * 14 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L626 - false
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I: I34 Branch 67 IF_ACMPEQ L626 - false
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I: I45 Branch 68 IFNONNULL L627 - true
   * 4 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - true
   * 5 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - false
   * 6 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - true
   * 7 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - false
   * 8 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V: I63 Branch 13 IF_ACMPEQ L201 - false
   * 9 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V: I73 Branch 14 IFGE L203 - true
   * 10 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I: I22 Branch 65 IFLE L625 - true
   * 11 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I: I22 Branch 65 IFLE L625 - false
   * 12 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L626 - true
   * 13 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J: I9 Branch 41 IFGE L456 - true
   * 14 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J: I51 Branch 42 IFEQ L466 - false
   */

  @Test
  public void test35()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1, 0.0F);
      tObjectLongCustomHashMap0.adjustOrPutValue((Integer) 1, (long) 1, (long) 1);
      int int0 = tObjectLongCustomHashMap0.hashCode();
      assertEquals("{1=1}", tObjectLongCustomHashMap0.toString());
      assertEquals(0, int0);
  }

  //Test case number: 36
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 69 IFLE L1107 - true
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 69 IFLE L1107 - false
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I45 Branch 70 IF_ACMPEQ L1108 - false
   * 4 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I51 Branch 71 IF_ACMPEQ L1108 - true
   */

  @Test
  public void test36()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 451, 1270.44F);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tObjectLongCustomHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals("\uFFFD\uFFFD\u0000\u0005w\f\u0000\u0000\u0000\u0000D\uFFFD\uFFFD\u0014D\uFFFD\uFFFD\u0014sr\u0000*gnu.trove.strategy.IdentityHashingStrategy\uFFFD\uFFFD\uFFFDgQ\uFFFD\uFFFDX\u0002\u0000\u0000xpq\u0000~\u0000\u0001", byteArrayOutputStream0.toString());
      assertEquals(82, byteArrayOutputStream0.size());
  }

  //Test case number: 37
  /*
   * 16 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z: I4 Branch 102 IFEQ L1151 - true
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z: I4 Branch 102 IFEQ L1151 - false
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.<init>(Lgnu/trove/map/custom_hash/TObjectLongCustomHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$1.<init>(Lgnu/trove/map/custom_hash/TObjectLongCustomHashMap;)V: root-Branch
   * 5 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.toString()Ljava/lang/String;: root-Branch
   * 6 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I: root-Branch
   * 7 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J: root-Branch
   * 8 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IF)V: root-Branch
   * 9 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I18 Branch 47 IFLE L518 - true
   * 10 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I18 Branch 47 IFLE L518 - false
   * 11 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - true
   * 12 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - false
   * 13 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I30 Branch 49 IF_ACMPEQ L519 - false
   * 14 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I39 Branch 50 IFNE L519 - true
   * 15 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J: I12 Branch 21 IFGE L268 - true
   * 16 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J: I41 Branch 22 IFEQ L276 - false
   */

//   @Test
//   public void test37()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1, 460.27118F);
//       tObjectLongCustomHashMap0.put((Integer) 1, (long) 1);
//       tObjectLongCustomHashMap0.put((Integer) 451, 3L);
//       String string0 = tObjectLongCustomHashMap0.toString();
//       assertEquals(2, tObjectLongCustomHashMap0.size());
//       assertEquals("{451=3,1=1}", string0);
//   }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.list.array;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TFloatCollection;
import gnu.trove.function.TFloatFunction;
import gnu.trove.impl.sync.TSynchronizedFloatList;
import gnu.trove.impl.sync.TSynchronizedFloatSet;
import gnu.trove.impl.sync.TSynchronizedRandomAccessFloatList;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatList;
import gnu.trove.list.TFloatList;
import gnu.trove.list.array.TFloatArrayList;
import gnu.trove.list.linked.TFloatLinkedList;
import gnu.trove.procedure.TFloatProcedure;
import gnu.trove.set.TFloatSet;
import gnu.trove.set.hash.TFloatHashSet;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Random;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TFloatArrayListEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 26 covered goals:
   * 1 Weak Mutation 5: gnu.trove.list.array.TFloatArrayList$1.ensureCapacity(I)V:164 - ReplaceComparisonOperator <= -> <
   * 2 Weak Mutation 442: gnu.trove.list.array.TFloatArrayList.clear(I)V:352 - InsertUnaryOp Negation of capacity
   * 3 Weak Mutation 443: gnu.trove.list.array.TFloatArrayList.clear(I)V:352 - InsertUnaryOp IINC 1 capacity
   * 4 Weak Mutation 444: gnu.trove.list.array.TFloatArrayList.clear(I)V:352 - InsertUnaryOp IINC -1 capacity
   * 5 Weak Mutation 445: gnu.trove.list.array.TFloatArrayList.clear(I)V:353 - ReplaceConstant - 0 -> 1
   * 6 gnu.trove.list.array.TFloatArrayList.clear(I)V: root-Branch
   * 7 Weak Mutation 0: gnu.trove.list.array.TFloatArrayList$1.ensureCapacity(I)V:164 - InsertUnaryOp Negation of capacity
   * 8 Weak Mutation 1: gnu.trove.list.array.TFloatArrayList$1.ensureCapacity(I)V:164 - InsertUnaryOp IINC 1 capacity
   * 9 Weak Mutation 2: gnu.trove.list.array.TFloatArrayList$1.ensureCapacity(I)V:164 - InsertUnaryOp IINC -1 capacity
   * 10 Weak Mutation 3: gnu.trove.list.array.TFloatArrayList$1.ensureCapacity(I)V:164 - DeleteField: _data[F
   * 11 Weak Mutation 5: gnu.trove.list.array.TFloatArrayList$1.ensureCapacity(I)V:164 - ReplaceComparisonOperator <= -> <
   * 12 Weak Mutation 15: gnu.trove.list.array.TFloatArrayList.<init>([FFZ)V:123 - InsertUnaryOp Negation of wrap
   * 13 Weak Mutation 16: gnu.trove.list.array.TFloatArrayList.<init>([FFZ)V:123 - ReplaceComparisonOperator != -> ==
   * 14 Weak Mutation 18: gnu.trove.list.array.TFloatArrayList.<init>([FFZ)V:126 - ReplaceComparisonOperator != null -> = null
   * 15 Weak Mutation 20: gnu.trove.list.array.TFloatArrayList.<init>([FFZ)V:131 - InsertUnaryOp Negation of no_entry_value
   * 16 Weak Mutation 25: gnu.trove.list.array.TFloatArrayList.wrap([FF)Lgnu/trove/list/array/TFloatArrayList;:158 - ReplaceConstant - 1 -> 0
   * 17 Weak Mutation 24: gnu.trove.list.array.TFloatArrayList.wrap([FF)Lgnu/trove/list/array/TFloatArrayList;:158 - InsertUnaryOp Negation of no_entry_value
   * 18 Weak Mutation 442: gnu.trove.list.array.TFloatArrayList.clear(I)V:352 - InsertUnaryOp Negation of capacity
   * 19 Weak Mutation 443: gnu.trove.list.array.TFloatArrayList.clear(I)V:352 - InsertUnaryOp IINC 1 capacity
   * 20 Weak Mutation 444: gnu.trove.list.array.TFloatArrayList.clear(I)V:352 - InsertUnaryOp IINC -1 capacity
   * 21 Weak Mutation 445: gnu.trove.list.array.TFloatArrayList.clear(I)V:353 - ReplaceConstant - 0 -> 1
   * 22 gnu.trove.list.array.TFloatArrayList$1.<init>([FFZ)V: root-Branch
   * 23 gnu.trove.list.array.TFloatArrayList$1.ensureCapacity(I)V: I6 Branch 1 IF_ICMPLE L164 - true
   * 24 gnu.trove.list.array.TFloatArrayList.wrap([FF)Lgnu/trove/list/array/TFloatArrayList;: root-Branch
   * 25 gnu.trove.list.array.TFloatArrayList.<init>([FFZ)V: I7 Branch 2 IFNE L123 - true
   * 26 gnu.trove.list.array.TFloatArrayList.<init>([FFZ)V: I18 Branch 3 IFNONNULL L126 - true
   */

  @Test
  public void test0()  throws Throwable  {
      float[] floatArray0 = new float[6];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, (-1.0F));
      assertNotNull(tFloatArrayList0);
      
      tFloatArrayList0.clear(1442);
      tFloatArrayList0.ensureCapacity(1442);
      assertEquals(0, tFloatArrayList0.size());
      assertEquals(true, tFloatArrayList0.isEmpty());
  }

  //Test case number: 1
  /*
   * 5 covered goals:
   * 1 Weak Mutation 27: gnu.trove.list.array.TFloatArrayList.getNoEntryValue()F:172 - DeleteField: no_entry_valueF
   * 2 Weak Mutation 26: gnu.trove.list.array.TFloatArrayList.getNoEntryValue()F:172 - InsertUnaryOp Negation
   * 3 gnu.trove.list.array.TFloatArrayList.getNoEntryValue()F: root-Branch
   * 4 Weak Mutation 27: gnu.trove.list.array.TFloatArrayList.getNoEntryValue()F:172 - DeleteField: no_entry_valueF
   * 5 Weak Mutation 26: gnu.trove.list.array.TFloatArrayList.getNoEntryValue()F:172 - InsertUnaryOp Negation
   */

//   @Test
//   public void test1()  throws Throwable  {
//       float[] floatArray0 = new float[6];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, (float) 115);
//       assertNotNull(tFloatArrayList0);
//       
//       float float0 = tFloatArrayList0.getNoEntryValue();
//       assertEquals(115.0F, float0, 0.01F);
//   }

  //Test case number: 2
  /*
   * 181 covered goals:
   * 1 Weak Mutation 32: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:184 - ReplaceComparisonOperator <= -> ==
   * 2 Weak Mutation 55: gnu.trove.list.array.TFloatArrayList.size()I:195 - DeleteField: _posI
   * 3 Weak Mutation 54: gnu.trove.list.array.TFloatArrayList.size()I:195 - InsertUnaryOp -1
   * 4 Weak Mutation 53: gnu.trove.list.array.TFloatArrayList.size()I:195 - InsertUnaryOp +1
   * 5 Weak Mutation 52: gnu.trove.list.array.TFloatArrayList.size()I:195 - InsertUnaryOp Negation
   * 6 Weak Mutation 76: gnu.trove.list.array.TFloatArrayList.add(F)Z:221 - DeleteField: _posI
   * 7 Weak Mutation 87: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - DeleteField: _posI
   * 8 Weak Mutation 305: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - InsertUnaryOp IINC 1 offset
   * 9 Weak Mutation 304: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - InsertUnaryOp Negation of offset
   * 10 Weak Mutation 307: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - InsertUnaryOp Negation
   * 11 Weak Mutation 306: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - InsertUnaryOp IINC -1 offset
   * 12 Weak Mutation 309: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - InsertUnaryOp -1
   * 13 Weak Mutation 308: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - InsertUnaryOp +1
   * 14 Weak Mutation 310: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - DeleteField: _posI
   * 15 Weak Mutation 312: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - ReplaceComparisonOperator < -> -2
   * 16 Weak Mutation 317: gnu.trove.list.array.TFloatArrayList.get(I)F:283 - DeleteField: _data[F
   * 17 Weak Mutation 319: gnu.trove.list.array.TFloatArrayList.get(I)F:283 - InsertUnaryOp IINC 1 offset
   * 18 Weak Mutation 318: gnu.trove.list.array.TFloatArrayList.get(I)F:283 - InsertUnaryOp Negation of offset
   * 19 Weak Mutation 320: gnu.trove.list.array.TFloatArrayList.get(I)F:283 - InsertUnaryOp IINC -1 offset
   * 20 Weak Mutation 615: gnu.trove.list.array.TFloatArrayList.iterator()Lgnu/trove/iterator/TFloatIterator;:430 - ReplaceConstant - 0 -> 1
   * 21 Weak Mutation 669: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:496 - DeleteStatement: next()F
   * 22 Weak Mutation 672: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:497 - ReplaceComparisonOperator == -> !=
   * 23 Weak Mutation 670: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:497 - InsertUnaryOp Negation of element
   * 24 Weak Mutation 671: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:497 - DeleteStatement: add(F)Z
   * 25 Weak Mutation 673: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:498 - ReplaceConstant - 1 -> 0
   * 26 Weak Mutation 1769: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:988 - ReplaceConstant - 0 -> 1
   * 27 Weak Mutation 1771: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:995 - ReplaceConstant - -1 -> 1
   * 28 Weak Mutation 1770: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:995 - ReplaceConstant - -1 -> 0
   * 29 Weak Mutation 1772: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:995 - ReplaceConstant - -1 -> -2
   * 30 Weak Mutation 1775: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:999 - InsertUnaryOp IINC 1 index
   * 31 Weak Mutation 1774: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:999 - InsertUnaryOp Negation of index
   * 32 Weak Mutation 1773: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:999 - ReplaceVariable index -> lastRet
   * 33 Weak Mutation 1776: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:999 - InsertUnaryOp IINC -1 index
   * 34 Weak Mutation 1778: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - InsertUnaryOp Negation
   * 35 Weak Mutation 1779: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - InsertUnaryOp +1
   * 36 Weak Mutation 1777: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - ReplaceVariable cursor -> lastRet
   * 37 Weak Mutation 1782: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - DeleteField: this$0Lgnu/trove/list/array/TFloatArrayList;
   * 38 Weak Mutation 1783: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - DeleteStatement: size()I
   * 39 Weak Mutation 1780: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - InsertUnaryOp -1
   * 40 Weak Mutation 1781: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - DeleteField: cursorI
   * 41 Weak Mutation 1786: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - ReplaceComparisonOperator >= -> -1
   * 42 Weak Mutation 1787: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - ReplaceConstant - 1 -> 0
   * 43 Weak Mutation 1785: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - ReplaceComparisonOperator >= -> >
   * 44 Weak Mutation 1788: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - ReplaceConstant - 0 -> 1
   * 45 Weak Mutation 1790: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1012 - ReplaceVariable cursor -> lastRet
   * 46 Weak Mutation 1791: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1012 - InsertUnaryOp Negation
   * 47 Weak Mutation 1789: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1012 - DeleteField: this$0Lgnu/trove/list/array/TFloatArrayList;
   * 48 Weak Mutation 1794: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1012 - DeleteField: cursorI
   * 49 Weak Mutation 1795: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1012 - DeleteStatement: get(I)F
   * 50 Weak Mutation 1792: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1012 - InsertUnaryOp +1
   * 51 Weak Mutation 1793: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1012 - InsertUnaryOp -1
   * 52 Weak Mutation 1804: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - ReplaceArithmeticOperator + -> /
   * 53 Weak Mutation 1805: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - ReplaceArithmeticOperator + -> *
   * 54 Weak Mutation 1802: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - ReplaceArithmeticOperator + -> -
   * 55 Weak Mutation 1803: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - ReplaceArithmeticOperator + -> %
   * 56 Weak Mutation 1800: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - DeleteField: cursorI
   * 57 Weak Mutation 1801: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - ReplaceConstant - 1 -> 0
   * 58 Weak Mutation 1798: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - InsertUnaryOp +1
   * 59 Weak Mutation 1799: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - InsertUnaryOp -1
   * 60 Weak Mutation 1796: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - ReplaceVariable cursor -> lastRet
   * 61 Weak Mutation 1797: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - InsertUnaryOp Negation
   * 62 Weak Mutation 1806: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1014 - InsertUnaryOp Negation of next
   * 63 gnu.trove.list.array.TFloatArrayList.size()I: root-Branch
   * 64 gnu.trove.list.array.TFloatArrayList.iterator()Lgnu/trove/iterator/TFloatIterator;: root-Branch
   * 65 gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F: root-Branch
   * 66 gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V: root-Branch
   * 67 gnu.trove.list.array.TFloatArrayList.get(I)F: I5 Branch 9 IF_ICMPLT L280 - true
   * 68 gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z: I13 Branch 31 IFEQ L495 - false
   * 69 gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z: I24 Branch 32 IFEQ L497 - false
   * 70 gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 71 gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - false
   * 72 Weak Mutation 8: gnu.trove.list.array.TFloatArrayList.<init>(IF)V:91 - InsertUnaryOp Negation of capacity
   * 73 Weak Mutation 9: gnu.trove.list.array.TFloatArrayList.<init>(IF)V:91 - InsertUnaryOp IINC 1 capacity
   * 74 Weak Mutation 10: gnu.trove.list.array.TFloatArrayList.<init>(IF)V:91 - InsertUnaryOp IINC -1 capacity
   * 75 Weak Mutation 11: gnu.trove.list.array.TFloatArrayList.<init>(IF)V:92 - ReplaceConstant - 0 -> 1
   * 76 Weak Mutation 12: gnu.trove.list.array.TFloatArrayList.<init>(IF)V:93 - InsertUnaryOp Negation of no_entry_value
   * 77 Weak Mutation 13: gnu.trove.list.array.TFloatArrayList.<init>(Lgnu/trove/TFloatCollection;)V:104 - DeleteStatement: addAll(Lgnu/trove/TFloatCollection;)Z
   * 78 Weak Mutation 21: gnu.trove.list.array.TFloatArrayList.wrap([F)Lgnu/trove/list/array/TFloatArrayList;:144 - ReplaceConstant - 0.0 -> 1.0
   * 79 Weak Mutation 23: gnu.trove.list.array.TFloatArrayList.wrap([F)Lgnu/trove/list/array/TFloatArrayList;:144 - DeleteStatement: wrap([FF)Lgnu/trove/list/array/TFloatArrayList;
   * 80 Weak Mutation 22: gnu.trove.list.array.TFloatArrayList.wrap([F)Lgnu/trove/list/array/TFloatArrayList;:144 - ReplaceConstant - 0.0 -> -1.0
   * 81 Weak Mutation 29: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:184 - InsertUnaryOp IINC 1 capacity
   * 82 Weak Mutation 28: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:184 - InsertUnaryOp Negation of capacity
   * 83 Weak Mutation 31: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:184 - DeleteField: _data[F
   * 84 Weak Mutation 30: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:184 - InsertUnaryOp IINC -1 capacity
   * 85 Weak Mutation 32: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:184 - ReplaceComparisonOperator <= -> ==
   * 86 Weak Mutation 33: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:184 - ReplaceComparisonOperator <= -> <
   * 87 Weak Mutation 55: gnu.trove.list.array.TFloatArrayList.size()I:195 - DeleteField: _posI
   * 88 Weak Mutation 54: gnu.trove.list.array.TFloatArrayList.size()I:195 - InsertUnaryOp -1
   * 89 Weak Mutation 53: gnu.trove.list.array.TFloatArrayList.size()I:195 - InsertUnaryOp +1
   * 90 Weak Mutation 52: gnu.trove.list.array.TFloatArrayList.size()I:195 - InsertUnaryOp Negation
   * 91 Weak Mutation 76: gnu.trove.list.array.TFloatArrayList.add(F)Z:221 - DeleteField: _posI
   * 92 Weak Mutation 77: gnu.trove.list.array.TFloatArrayList.add(F)Z:221 - ReplaceConstant - 1 -> 0
   * 93 Weak Mutation 78: gnu.trove.list.array.TFloatArrayList.add(F)Z:221 - ReplaceArithmeticOperator + -> -
   * 94 Weak Mutation 79: gnu.trove.list.array.TFloatArrayList.add(F)Z:221 - ReplaceArithmeticOperator + -> %
   * 95 Weak Mutation 73: gnu.trove.list.array.TFloatArrayList.add(F)Z:221 - InsertUnaryOp Negation
   * 96 Weak Mutation 74: gnu.trove.list.array.TFloatArrayList.add(F)Z:221 - InsertUnaryOp +1
   * 97 Weak Mutation 75: gnu.trove.list.array.TFloatArrayList.add(F)Z:221 - InsertUnaryOp -1
   * 98 Weak Mutation 85: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - InsertUnaryOp +1
   * 99 Weak Mutation 84: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - InsertUnaryOp Negation
   * 100 Weak Mutation 87: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - DeleteField: _posI
   * 101 Weak Mutation 86: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - InsertUnaryOp -1
   * 102 Weak Mutation 81: gnu.trove.list.array.TFloatArrayList.add(F)Z:221 - ReplaceArithmeticOperator + -> *
   * 103 Weak Mutation 80: gnu.trove.list.array.TFloatArrayList.add(F)Z:221 - ReplaceArithmeticOperator + -> /
   * 104 Weak Mutation 83: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - DeleteField: _data[F
   * 105 Weak Mutation 82: gnu.trove.list.array.TFloatArrayList.add(F)Z:221 - DeleteStatement: ensureCapacity(I)V
   * 106 Weak Mutation 93: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - InsertUnaryOp Negation of val
   * 107 Weak Mutation 92: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - ReplaceArithmeticOperator + -> *
   * 108 Weak Mutation 94: gnu.trove.list.array.TFloatArrayList.add(F)Z:223 - ReplaceConstant - 1 -> 0
   * 109 Weak Mutation 89: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - ReplaceArithmeticOperator + -> -
   * 110 Weak Mutation 88: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - ReplaceConstant - 1 -> 0
   * 111 Weak Mutation 91: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - ReplaceArithmeticOperator + -> /
   * 112 Weak Mutation 90: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - ReplaceArithmeticOperator + -> %
   * 113 Weak Mutation 305: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - InsertUnaryOp IINC 1 offset
   * 114 Weak Mutation 304: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - InsertUnaryOp Negation of offset
   * 115 Weak Mutation 307: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - InsertUnaryOp Negation
   * 116 Weak Mutation 306: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - InsertUnaryOp IINC -1 offset
   * 117 Weak Mutation 309: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - InsertUnaryOp -1
   * 118 Weak Mutation 308: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - InsertUnaryOp +1
   * 119 Weak Mutation 310: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - DeleteField: _posI
   * 120 Weak Mutation 312: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - ReplaceComparisonOperator < -> -2
   * 121 Weak Mutation 317: gnu.trove.list.array.TFloatArrayList.get(I)F:283 - DeleteField: _data[F
   * 122 Weak Mutation 319: gnu.trove.list.array.TFloatArrayList.get(I)F:283 - InsertUnaryOp IINC 1 offset
   * 123 Weak Mutation 318: gnu.trove.list.array.TFloatArrayList.get(I)F:283 - InsertUnaryOp Negation of offset
   * 124 Weak Mutation 320: gnu.trove.list.array.TFloatArrayList.get(I)F:283 - InsertUnaryOp IINC -1 offset
   * 125 Weak Mutation 615: gnu.trove.list.array.TFloatArrayList.iterator()Lgnu/trove/iterator/TFloatIterator;:430 - ReplaceConstant - 0 -> 1
   * 126 Weak Mutation 676: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:501 - InsertUnaryOp IINC -1 changed
   * 127 Weak Mutation 675: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:501 - InsertUnaryOp IINC 1 changed
   * 128 Weak Mutation 674: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:501 - InsertUnaryOp Negation of changed
   * 129 Weak Mutation 673: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:498 - ReplaceConstant - 1 -> 0
   * 130 Weak Mutation 672: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:497 - ReplaceComparisonOperator == -> !=
   * 131 Weak Mutation 668: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:495 - ReplaceComparisonOperator == -> !=
   * 132 Weak Mutation 669: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:496 - DeleteStatement: next()F
   * 133 Weak Mutation 670: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:497 - InsertUnaryOp Negation of element
   * 134 Weak Mutation 671: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:497 - DeleteStatement: add(F)Z
   * 135 Weak Mutation 665: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:493 - ReplaceConstant - 0 -> 1
   * 136 Weak Mutation 666: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:494 - DeleteStatement: iterator()Lgnu/trove/iterator/TFloatIterator;
   * 137 Weak Mutation 667: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:495 - DeleteStatement: hasNext()Z
   * 138 Weak Mutation 1771: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:995 - ReplaceConstant - -1 -> 1
   * 139 Weak Mutation 1770: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:995 - ReplaceConstant - -1 -> 0
   * 140 Weak Mutation 1769: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:988 - ReplaceConstant - 0 -> 1
   * 141 Weak Mutation 1775: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:999 - InsertUnaryOp IINC 1 index
   * 142 Weak Mutation 1774: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:999 - InsertUnaryOp Negation of index
   * 143 Weak Mutation 1773: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:999 - ReplaceVariable index -> lastRet
   * 144 Weak Mutation 1772: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:995 - ReplaceConstant - -1 -> -2
   * 145 Weak Mutation 1778: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - InsertUnaryOp Negation
   * 146 Weak Mutation 1779: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - InsertUnaryOp +1
   * 147 Weak Mutation 1776: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:999 - InsertUnaryOp IINC -1 index
   * 148 Weak Mutation 1777: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - ReplaceVariable cursor -> lastRet
   * 149 Weak Mutation 1782: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - DeleteField: this$0Lgnu/trove/list/array/TFloatArrayList;
   * 150 Weak Mutation 1783: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - DeleteStatement: size()I
   * 151 Weak Mutation 1780: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - InsertUnaryOp -1
   * 152 Weak Mutation 1781: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - DeleteField: cursorI
   * 153 Weak Mutation 1786: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - ReplaceComparisonOperator >= -> -1
   * 154 Weak Mutation 1787: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - ReplaceConstant - 1 -> 0
   * 155 Weak Mutation 1785: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - ReplaceComparisonOperator >= -> >
   * 156 Weak Mutation 1790: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1012 - ReplaceVariable cursor -> lastRet
   * 157 Weak Mutation 1791: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1012 - InsertUnaryOp Negation
   * 158 Weak Mutation 1788: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - ReplaceConstant - 0 -> 1
   * 159 Weak Mutation 1789: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1012 - DeleteField: this$0Lgnu/trove/list/array/TFloatArrayList;
   * 160 Weak Mutation 1806: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1014 - InsertUnaryOp Negation of next
   * 161 Weak Mutation 1804: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - ReplaceArithmeticOperator + -> /
   * 162 Weak Mutation 1805: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - ReplaceArithmeticOperator + -> *
   * 163 Weak Mutation 1802: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - ReplaceArithmeticOperator + -> -
   * 164 Weak Mutation 1803: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - ReplaceArithmeticOperator + -> %
   * 165 Weak Mutation 1800: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - DeleteField: cursorI
   * 166 Weak Mutation 1801: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - ReplaceConstant - 1 -> 0
   * 167 Weak Mutation 1798: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - InsertUnaryOp +1
   * 168 Weak Mutation 1799: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - InsertUnaryOp -1
   * 169 Weak Mutation 1796: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - ReplaceVariable cursor -> lastRet
   * 170 Weak Mutation 1797: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - InsertUnaryOp Negation
   * 171 Weak Mutation 1794: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1012 - DeleteField: cursorI
   * 172 Weak Mutation 1795: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1012 - DeleteStatement: get(I)F
   * 173 Weak Mutation 1792: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1012 - InsertUnaryOp +1
   * 174 Weak Mutation 1793: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1012 - InsertUnaryOp -1
   * 175 gnu.trove.list.array.TFloatArrayList.add(F)Z: root-Branch
   * 176 gnu.trove.list.array.TFloatArrayList.wrap([F)Lgnu/trove/list/array/TFloatArrayList;: root-Branch
   * 177 gnu.trove.list.array.TFloatArrayList.<init>(IF)V: root-Branch
   * 178 gnu.trove.list.array.TFloatArrayList.<init>(I)V: root-Branch
   * 179 gnu.trove.list.array.TFloatArrayList.<init>(Lgnu/trove/TFloatCollection;)V: root-Branch
   * 180 gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 181 gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z: I13 Branch 31 IFEQ L495 - true
   */

//   @Test
//   public void test2()  throws Throwable  {
//       float[] floatArray0 = new float[12];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
//       assertNotNull(tFloatArrayList0);
//       
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList((TFloatList) tFloatArrayList0);
//       TSynchronizedFloatList tSynchronizedFloatList0 = new TSynchronizedFloatList((TFloatList) tFloatLinkedList0);
//       TFloatArrayList tFloatArrayList1 = new TFloatArrayList((TFloatCollection) tSynchronizedFloatList0);
//       assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}", tFloatArrayList1.toString());
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(0.0F, tFloatArrayList1.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 3
  /*
   * 13 covered goals:
   * 1 Weak Mutation 59: gnu.trove.list.array.TFloatArrayList.isEmpty()Z:201 - DeleteField: _posI
   * 2 Weak Mutation 58: gnu.trove.list.array.TFloatArrayList.isEmpty()Z:201 - InsertUnaryOp -1
   * 3 Weak Mutation 57: gnu.trove.list.array.TFloatArrayList.isEmpty()Z:201 - InsertUnaryOp +1
   * 4 Weak Mutation 56: gnu.trove.list.array.TFloatArrayList.isEmpty()Z:201 - InsertUnaryOp Negation
   * 5 Weak Mutation 60: gnu.trove.list.array.TFloatArrayList.isEmpty()Z:201 - ReplaceComparisonOperator != -> <
   * 6 Weak Mutation 64: gnu.trove.list.array.TFloatArrayList.isEmpty()Z:201 - ReplaceConstant - 0 -> 1
   * 7 gnu.trove.list.array.TFloatArrayList.isEmpty()Z: I4 Branch 5 IFNE L201 - true
   * 8 Weak Mutation 59: gnu.trove.list.array.TFloatArrayList.isEmpty()Z:201 - DeleteField: _posI
   * 9 Weak Mutation 58: gnu.trove.list.array.TFloatArrayList.isEmpty()Z:201 - InsertUnaryOp -1
   * 10 Weak Mutation 57: gnu.trove.list.array.TFloatArrayList.isEmpty()Z:201 - InsertUnaryOp +1
   * 11 Weak Mutation 56: gnu.trove.list.array.TFloatArrayList.isEmpty()Z:201 - InsertUnaryOp Negation
   * 12 Weak Mutation 60: gnu.trove.list.array.TFloatArrayList.isEmpty()Z:201 - ReplaceComparisonOperator != -> <
   * 13 Weak Mutation 64: gnu.trove.list.array.TFloatArrayList.isEmpty()Z:201 - ReplaceConstant - 0 -> 1
   */

//   @Test
//   public void test3()  throws Throwable  {
//       float[] floatArray0 = new float[4];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
//       assertNotNull(tFloatArrayList0);
//       
//       boolean boolean0 = tFloatArrayList0.isEmpty();
//       assertEquals(false, boolean0);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 4
  /*
   * 8 covered goals:
   * 1 Weak Mutation 63: gnu.trove.list.array.TFloatArrayList.isEmpty()Z:201 - ReplaceConstant - 1 -> 0
   * 2 Weak Mutation 62: gnu.trove.list.array.TFloatArrayList.isEmpty()Z:201 - ReplaceComparisonOperator != -> -1
   * 3 gnu.trove.list.array.TFloatArrayList.isEmpty()Z: I4 Branch 5 IFNE L201 - false
   * 4 Weak Mutation 58: gnu.trove.list.array.TFloatArrayList.isEmpty()Z:201 - InsertUnaryOp -1
   * 5 Weak Mutation 57: gnu.trove.list.array.TFloatArrayList.isEmpty()Z:201 - InsertUnaryOp +1
   * 6 Weak Mutation 56: gnu.trove.list.array.TFloatArrayList.isEmpty()Z:201 - InsertUnaryOp Negation
   * 7 Weak Mutation 63: gnu.trove.list.array.TFloatArrayList.isEmpty()Z:201 - ReplaceConstant - 1 -> 0
   * 8 Weak Mutation 62: gnu.trove.list.array.TFloatArrayList.isEmpty()Z:201 - ReplaceComparisonOperator != -> -1
   */

//   @Test
//   public void test4()  throws Throwable  {
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(0);
//       boolean boolean0 = tFloatArrayList0.isEmpty();
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(true, boolean0);
//   }

  //Test case number: 5
  /*
   * 49 covered goals:
   * 1 Weak Mutation 68: gnu.trove.list.array.TFloatArrayList.trimToSize()V:209 - ReplaceComparisonOperator <= -> <
   * 2 Weak Mutation 65: gnu.trove.list.array.TFloatArrayList.trimToSize()V:209 - DeleteField: _data[F
   * 3 Weak Mutation 66: gnu.trove.list.array.TFloatArrayList.trimToSize()V:209 - DeleteStatement: size()I
   * 4 gnu.trove.list.array.TFloatArrayList.trimToSize()V: I7 Branch 6 IF_ICMPLE L209 - true
   * 5 Weak Mutation 14: gnu.trove.list.array.TFloatArrayList.<init>([F)V:119 - DeleteStatement: add([F)V
   * 6 Weak Mutation 68: gnu.trove.list.array.TFloatArrayList.trimToSize()V:209 - ReplaceComparisonOperator <= -> <
   * 7 Weak Mutation 65: gnu.trove.list.array.TFloatArrayList.trimToSize()V:209 - DeleteField: _data[F
   * 8 Weak Mutation 66: gnu.trove.list.array.TFloatArrayList.trimToSize()V:209 - DeleteStatement: size()I
   * 9 Weak Mutation 95: gnu.trove.list.array.TFloatArrayList.add([F)V:229 - ReplaceConstant - 0 -> 1
   * 10 Weak Mutation 102: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - InsertUnaryOp Negation of length
   * 11 Weak Mutation 103: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - InsertUnaryOp IINC 1 length
   * 12 Weak Mutation 101: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - ReplaceVariable length -> offset
   * 13 Weak Mutation 98: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - InsertUnaryOp +1
   * 14 Weak Mutation 99: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - InsertUnaryOp -1
   * 15 Weak Mutation 96: gnu.trove.list.array.TFloatArrayList.add([F)V:229 - DeleteStatement: add([FII)V
   * 16 Weak Mutation 97: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - InsertUnaryOp Negation
   * 17 Weak Mutation 110: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - ReplaceVariable offset -> length
   * 18 Weak Mutation 111: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - InsertUnaryOp Negation of offset
   * 19 Weak Mutation 108: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - ReplaceArithmeticOperator + -> *
   * 20 Weak Mutation 109: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - DeleteStatement: ensureCapacity(I)V
   * 21 Weak Mutation 106: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - ReplaceArithmeticOperator + -> %
   * 22 Weak Mutation 107: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - ReplaceArithmeticOperator + -> /
   * 23 Weak Mutation 104: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - InsertUnaryOp IINC -1 length
   * 24 Weak Mutation 105: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - ReplaceArithmeticOperator + -> -
   * 25 Weak Mutation 119: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - ReplaceVariable length -> offset
   * 26 Weak Mutation 117: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - InsertUnaryOp -1
   * 27 Weak Mutation 116: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - InsertUnaryOp +1
   * 28 Weak Mutation 115: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - InsertUnaryOp Negation
   * 29 Weak Mutation 114: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - DeleteField: _data[F
   * 30 Weak Mutation 113: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - InsertUnaryOp IINC -1 offset
   * 31 Weak Mutation 112: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - InsertUnaryOp IINC 1 offset
   * 32 Weak Mutation 126: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - InsertUnaryOp -1
   * 33 Weak Mutation 125: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - InsertUnaryOp +1
   * 34 Weak Mutation 124: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - InsertUnaryOp Negation
   * 35 Weak Mutation 123: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 36 Weak Mutation 122: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - InsertUnaryOp IINC -1 length
   * 37 Weak Mutation 121: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - InsertUnaryOp IINC 1 length
   * 38 Weak Mutation 120: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - InsertUnaryOp Negation of length
   * 39 Weak Mutation 129: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - InsertUnaryOp Negation of length
   * 40 Weak Mutation 128: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - ReplaceVariable length -> offset
   * 41 Weak Mutation 131: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - InsertUnaryOp IINC -1 length
   * 42 Weak Mutation 130: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - InsertUnaryOp IINC 1 length
   * 43 Weak Mutation 133: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - ReplaceArithmeticOperator + -> %
   * 44 Weak Mutation 132: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - ReplaceArithmeticOperator + -> -
   * 45 Weak Mutation 135: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - ReplaceArithmeticOperator + -> *
   * 46 Weak Mutation 134: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - ReplaceArithmeticOperator + -> /
   * 47 gnu.trove.list.array.TFloatArrayList.add([F)V: root-Branch
   * 48 gnu.trove.list.array.TFloatArrayList.add([FII)V: root-Branch
   * 49 gnu.trove.list.array.TFloatArrayList.<init>([F)V: root-Branch
   */

//   @Test
//   public void test5()  throws Throwable  {
//       float[] floatArray0 = new float[5];
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
//       tFloatArrayList0.trimToSize();
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(5, tFloatArrayList0.size());
//       assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0}", tFloatArrayList0.toString());
//   }

  //Test case number: 6
  /*
   * 29 covered goals:
   * 1 Weak Mutation 69: gnu.trove.list.array.TFloatArrayList.trimToSize()V:209 - ReplaceComparisonOperator <= -> -1
   * 2 Weak Mutation 70: gnu.trove.list.array.TFloatArrayList.trimToSize()V:210 - DeleteStatement: size()I
   * 3 Weak Mutation 71: gnu.trove.list.array.TFloatArrayList.trimToSize()V:211 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 72: gnu.trove.list.array.TFloatArrayList.trimToSize()V:211 - DeleteStatement: toArray([FII)[F
   * 5 Weak Mutation 446: gnu.trove.list.array.TFloatArrayList.reset()V:363 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 447: gnu.trove.list.array.TFloatArrayList.reset()V:364 - DeleteField: _data[F
   * 7 Weak Mutation 450: gnu.trove.list.array.TFloatArrayList.reset()V:364 - DeleteStatement: fill([FF)V
   * 8 Weak Mutation 448: gnu.trove.list.array.TFloatArrayList.reset()V:364 - InsertUnaryOp Negation
   * 9 Weak Mutation 1064: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:709 - InsertUnaryOp IINC 1 len
   * 10 Weak Mutation 1065: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:709 - InsertUnaryOp IINC -1 len
   * 11 Weak Mutation 1068: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:709 - ReplaceComparisonOperator != -> -1
   * 12 Weak Mutation 1063: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:709 - InsertUnaryOp Negation of len
   * 13 gnu.trove.list.array.TFloatArrayList.reset()V: root-Branch
   * 14 gnu.trove.list.array.TFloatArrayList.trimToSize()V: I7 Branch 6 IF_ICMPLE L209 - false
   * 15 gnu.trove.list.array.TFloatArrayList.toArray([FII)[F: I3 Branch 60 IFNE L709 - false
   * 16 Weak Mutation 65: gnu.trove.list.array.TFloatArrayList.trimToSize()V:209 - DeleteField: _data[F
   * 17 Weak Mutation 66: gnu.trove.list.array.TFloatArrayList.trimToSize()V:209 - DeleteStatement: size()I
   * 18 Weak Mutation 69: gnu.trove.list.array.TFloatArrayList.trimToSize()V:209 - ReplaceComparisonOperator <= -> -1
   * 19 Weak Mutation 70: gnu.trove.list.array.TFloatArrayList.trimToSize()V:210 - DeleteStatement: size()I
   * 20 Weak Mutation 71: gnu.trove.list.array.TFloatArrayList.trimToSize()V:211 - ReplaceConstant - 0 -> 1
   * 21 Weak Mutation 72: gnu.trove.list.array.TFloatArrayList.trimToSize()V:211 - DeleteStatement: toArray([FII)[F
   * 22 Weak Mutation 446: gnu.trove.list.array.TFloatArrayList.reset()V:363 - ReplaceConstant - 0 -> 1
   * 23 Weak Mutation 447: gnu.trove.list.array.TFloatArrayList.reset()V:364 - DeleteField: _data[F
   * 24 Weak Mutation 450: gnu.trove.list.array.TFloatArrayList.reset()V:364 - DeleteStatement: fill([FF)V
   * 25 Weak Mutation 448: gnu.trove.list.array.TFloatArrayList.reset()V:364 - InsertUnaryOp Negation
   * 26 Weak Mutation 1064: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:709 - InsertUnaryOp IINC 1 len
   * 27 Weak Mutation 1065: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:709 - InsertUnaryOp IINC -1 len
   * 28 Weak Mutation 1068: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:709 - ReplaceComparisonOperator != -> -1
   * 29 Weak Mutation 1063: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:709 - InsertUnaryOp Negation of len
   */

//   @Test
//   public void test6()  throws Throwable  {
//       float[] floatArray0 = new float[5];
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
//       assertEquals(5, tFloatArrayList0.size());
//       
//       tFloatArrayList0.reset();
//       tFloatArrayList0.trimToSize();
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 7
  /*
   * 6 covered goals:
   * 1 Weak Mutation 100: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - DeleteField: _posI
   * 2 Weak Mutation 118: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - DeleteField: _posI
   * 3 Weak Mutation 4: gnu.trove.list.array.TFloatArrayList$1.ensureCapacity(I)V:164 - ReplaceComparisonOperator <= -> ==
   * 4 Weak Mutation 4: gnu.trove.list.array.TFloatArrayList$1.ensureCapacity(I)V:164 - ReplaceComparisonOperator <= -> ==
   * 5 Weak Mutation 100: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - DeleteField: _posI
   * 6 Weak Mutation 118: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - DeleteField: _posI
   */

  @Test
  public void test7()  throws Throwable  {
      float[] floatArray0 = new float[1];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, (-203.43948F));
      assertNotNull(tFloatArrayList0);
      
      // Undeclared exception!
      try {
        tFloatArrayList0.add(floatArray0, (-1038), (-2));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 8
  /*
   * 62 covered goals:
   * 1 Weak Mutation 127: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - DeleteField: _posI
   * 2 Weak Mutation 1278: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - ReplaceVariable toIndex -> fromIndex
   * 3 Weak Mutation 1279: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - InsertUnaryOp Negation of toIndex
   * 4 Weak Mutation 1288: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - ReplaceComparisonOperator <= -> -1
   * 5 Weak Mutation 1282: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - InsertUnaryOp Negation
   * 6 Weak Mutation 1283: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - InsertUnaryOp +1
   * 7 Weak Mutation 1280: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - InsertUnaryOp IINC 1 toIndex
   * 8 Weak Mutation 1281: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - InsertUnaryOp IINC -1 toIndex
   * 9 Weak Mutation 1284: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - InsertUnaryOp -1
   * 10 Weak Mutation 1290: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:817 - InsertUnaryOp Negation of toIndex
   * 11 Weak Mutation 1291: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:817 - InsertUnaryOp IINC 1 toIndex
   * 12 Weak Mutation 1289: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:817 - ReplaceVariable toIndex -> fromIndex
   * 13 Weak Mutation 1292: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:817 - InsertUnaryOp IINC -1 toIndex
   * 14 Weak Mutation 1293: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:817 - DeleteStatement: ensureCapacity(I)V
   * 15 Weak Mutation 1297: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:818 - InsertUnaryOp IINC -1 toIndex
   * 16 Weak Mutation 1296: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:818 - InsertUnaryOp IINC 1 toIndex
   * 17 Weak Mutation 1294: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:818 - ReplaceVariable toIndex -> fromIndex
   * 18 Weak Mutation 1295: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:818 - InsertUnaryOp Negation of toIndex
   * 19 Weak Mutation 1307: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - InsertUnaryOp Negation of val
   * 20 Weak Mutation 1306: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - InsertUnaryOp IINC -1 toIndex
   * 21 Weak Mutation 1305: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - InsertUnaryOp IINC 1 toIndex
   * 22 Weak Mutation 1304: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - InsertUnaryOp Negation of toIndex
   * 23 Weak Mutation 1308: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - DeleteStatement: fill([FIIF)V
   * 24 Weak Mutation 1299: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - ReplaceVariable fromIndex -> toIndex
   * 25 Weak Mutation 1298: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - DeleteField: _data[F
   * 26 Weak Mutation 1303: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - ReplaceVariable toIndex -> fromIndex
   * 27 Weak Mutation 1302: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - InsertUnaryOp IINC -1 fromIndex
   * 28 Weak Mutation 1301: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - InsertUnaryOp IINC 1 fromIndex
   * 29 Weak Mutation 1300: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - InsertUnaryOp Negation of fromIndex
   * 30 gnu.trove.list.array.TFloatArrayList.<init>()V: root-Branch
   * 31 gnu.trove.list.array.TFloatArrayList.fill(IIF)V: I5 Branch 76 IF_ICMPLE L816 - false
   * 32 Weak Mutation 100: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - DeleteField: _posI
   * 33 Weak Mutation 118: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - DeleteField: _posI
   * 34 Weak Mutation 127: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - DeleteField: _posI
   * 35 Weak Mutation 1278: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - ReplaceVariable toIndex -> fromIndex
   * 36 Weak Mutation 1279: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - InsertUnaryOp Negation of toIndex
   * 37 Weak Mutation 1307: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - InsertUnaryOp Negation of val
   * 38 Weak Mutation 1306: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - InsertUnaryOp IINC -1 toIndex
   * 39 Weak Mutation 1305: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - InsertUnaryOp IINC 1 toIndex
   * 40 Weak Mutation 1304: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - InsertUnaryOp Negation of toIndex
   * 41 Weak Mutation 1308: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - DeleteStatement: fill([FIIF)V
   * 42 Weak Mutation 1299: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - ReplaceVariable fromIndex -> toIndex
   * 43 Weak Mutation 1298: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - DeleteField: _data[F
   * 44 Weak Mutation 1297: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:818 - InsertUnaryOp IINC -1 toIndex
   * 45 Weak Mutation 1296: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:818 - InsertUnaryOp IINC 1 toIndex
   * 46 Weak Mutation 1303: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - ReplaceVariable toIndex -> fromIndex
   * 47 Weak Mutation 1302: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - InsertUnaryOp IINC -1 fromIndex
   * 48 Weak Mutation 1301: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - InsertUnaryOp IINC 1 fromIndex
   * 49 Weak Mutation 1300: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - InsertUnaryOp Negation of fromIndex
   * 50 Weak Mutation 1290: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:817 - InsertUnaryOp Negation of toIndex
   * 51 Weak Mutation 1291: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:817 - InsertUnaryOp IINC 1 toIndex
   * 52 Weak Mutation 1288: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - ReplaceComparisonOperator <= -> -1
   * 53 Weak Mutation 1289: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:817 - ReplaceVariable toIndex -> fromIndex
   * 54 Weak Mutation 1294: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:818 - ReplaceVariable toIndex -> fromIndex
   * 55 Weak Mutation 1295: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:818 - InsertUnaryOp Negation of toIndex
   * 56 Weak Mutation 1292: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:817 - InsertUnaryOp IINC -1 toIndex
   * 57 Weak Mutation 1293: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:817 - DeleteStatement: ensureCapacity(I)V
   * 58 Weak Mutation 1282: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - InsertUnaryOp Negation
   * 59 Weak Mutation 1283: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - InsertUnaryOp +1
   * 60 Weak Mutation 1280: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - InsertUnaryOp IINC 1 toIndex
   * 61 Weak Mutation 1281: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - InsertUnaryOp IINC -1 toIndex
   * 62 Weak Mutation 1284: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - InsertUnaryOp -1
   */

//   @Test
//   public void test8()  throws Throwable  {
//       float[] floatArray0 = new float[4];
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
//       tFloatArrayList0.fill(0, 2, 58.0F);
//       tFloatArrayList0.add(floatArray0);
//       assertEquals(116.0F, tFloatArrayList0.sum(), 0.01F);
//       assertEquals(6, tFloatArrayList0.size());
//   }

  //Test case number: 9
  /*
   * 44 covered goals:
   * 1 Weak Mutation 144: gnu.trove.list.array.TFloatArrayList.insert(IF)V:243 - ReplaceComparisonOperator != -> <
   * 2 Weak Mutation 178: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - ReplaceArithmeticOperator - -> +
   * 3 Weak Mutation 181: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - ReplaceArithmeticOperator - -> *
   * 4 Weak Mutation 137: gnu.trove.list.array.TFloatArrayList.insert(IF)V:243 - InsertUnaryOp IINC 1 offset
   * 5 Weak Mutation 136: gnu.trove.list.array.TFloatArrayList.insert(IF)V:243 - InsertUnaryOp Negation of offset
   * 6 Weak Mutation 139: gnu.trove.list.array.TFloatArrayList.insert(IF)V:243 - InsertUnaryOp Negation
   * 7 Weak Mutation 138: gnu.trove.list.array.TFloatArrayList.insert(IF)V:243 - InsertUnaryOp IINC -1 offset
   * 8 Weak Mutation 141: gnu.trove.list.array.TFloatArrayList.insert(IF)V:243 - InsertUnaryOp -1
   * 9 Weak Mutation 140: gnu.trove.list.array.TFloatArrayList.insert(IF)V:243 - InsertUnaryOp +1
   * 10 Weak Mutation 152: gnu.trove.list.array.TFloatArrayList.insert(IF)V:247 - ReplaceConstant - 1 -> 0
   * 11 Weak Mutation 153: gnu.trove.list.array.TFloatArrayList.insert(IF)V:247 - ReplaceArithmeticOperator + -> -
   * 12 Weak Mutation 154: gnu.trove.list.array.TFloatArrayList.insert(IF)V:247 - ReplaceArithmeticOperator + -> %
   * 13 Weak Mutation 155: gnu.trove.list.array.TFloatArrayList.insert(IF)V:247 - ReplaceArithmeticOperator + -> /
   * 14 Weak Mutation 156: gnu.trove.list.array.TFloatArrayList.insert(IF)V:247 - ReplaceArithmeticOperator + -> *
   * 15 Weak Mutation 157: gnu.trove.list.array.TFloatArrayList.insert(IF)V:247 - DeleteStatement: ensureCapacity(I)V
   * 16 Weak Mutation 158: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - DeleteField: _data[F
   * 17 Weak Mutation 159: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp Negation of offset
   * 18 Weak Mutation 144: gnu.trove.list.array.TFloatArrayList.insert(IF)V:243 - ReplaceComparisonOperator != -> <
   * 19 Weak Mutation 148: gnu.trove.list.array.TFloatArrayList.insert(IF)V:247 - InsertUnaryOp Negation
   * 20 Weak Mutation 149: gnu.trove.list.array.TFloatArrayList.insert(IF)V:247 - InsertUnaryOp +1
   * 21 Weak Mutation 150: gnu.trove.list.array.TFloatArrayList.insert(IF)V:247 - InsertUnaryOp -1
   * 22 Weak Mutation 171: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp Negation
   * 23 Weak Mutation 170: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - ReplaceArithmeticOperator + -> *
   * 24 Weak Mutation 169: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - ReplaceArithmeticOperator + -> /
   * 25 Weak Mutation 168: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - ReplaceArithmeticOperator + -> %
   * 26 Weak Mutation 175: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp Negation of offset
   * 27 Weak Mutation 173: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp -1
   * 28 Weak Mutation 172: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp +1
   * 29 Weak Mutation 163: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp Negation of offset
   * 30 Weak Mutation 162: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - DeleteField: _data[F
   * 31 Weak Mutation 161: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp IINC -1 offset
   * 32 Weak Mutation 160: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp IINC 1 offset
   * 33 Weak Mutation 167: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - ReplaceArithmeticOperator + -> -
   * 34 Weak Mutation 166: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - ReplaceConstant - 1 -> 0
   * 35 Weak Mutation 165: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp IINC -1 offset
   * 36 Weak Mutation 164: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp IINC 1 offset
   * 37 Weak Mutation 178: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - ReplaceArithmeticOperator - -> +
   * 38 Weak Mutation 179: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - ReplaceArithmeticOperator - -> %
   * 39 Weak Mutation 176: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp IINC 1 offset
   * 40 Weak Mutation 177: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp IINC -1 offset
   * 41 Weak Mutation 182: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 42 Weak Mutation 180: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - ReplaceArithmeticOperator - -> /
   * 43 Weak Mutation 181: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - ReplaceArithmeticOperator - -> *
   * 44 gnu.trove.list.array.TFloatArrayList.insert(IF)V: I5 Branch 7 IF_ICMPNE L243 - true
   */

  @Test
  public void test9()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      // Undeclared exception!
      try {
        tFloatArrayList0.insert(359, Float.POSITIVE_INFINITY);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 49 covered goals:
   * 1 Weak Mutation 213: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - ReplaceComparisonOperator != -> -1
   * 2 Weak Mutation 220: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:265 - ReplaceVariable len -> offset
   * 3 Weak Mutation 221: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:265 - InsertUnaryOp Negation of len
   * 4 Weak Mutation 222: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:265 - InsertUnaryOp IINC 1 len
   * 5 Weak Mutation 223: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:265 - InsertUnaryOp IINC -1 len
   * 6 Weak Mutation 216: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:265 - InsertUnaryOp Negation of valOffset
   * 7 Weak Mutation 217: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:265 - InsertUnaryOp IINC 1 valOffset
   * 8 Weak Mutation 218: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:265 - InsertUnaryOp IINC -1 valOffset
   * 9 Weak Mutation 219: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:265 - ReplaceVariable len -> valOffset
   * 10 Weak Mutation 214: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:265 - ReplaceVariable valOffset -> len
   * 11 Weak Mutation 215: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:265 - ReplaceVariable valOffset -> offset
   * 12 Weak Mutation 224: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:265 - DeleteStatement: add([FII)V
   * 13 gnu.trove.list.array.TFloatArrayList.insert(I[FII)V: I5 Branch 8 IF_ICMPNE L264 - false
   * 14 Weak Mutation 34: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:184 - ReplaceComparisonOperator <= -> -1
   * 15 Weak Mutation 35: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:185 - DeleteField: _data[F
   * 16 Weak Mutation 39: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:185 - InsertUnaryOp Negation of capacity
   * 17 Weak Mutation 36: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:185 - ReplaceConstant - 1 -> 0
   * 18 Weak Mutation 42: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:185 - DeleteStatement: max(II)I
   * 19 Weak Mutation 40: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:185 - InsertUnaryOp IINC 1 capacity
   * 20 Weak Mutation 41: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:185 - InsertUnaryOp IINC -1 capacity
   * 21 Weak Mutation 46: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:186 - InsertUnaryOp IINC -1 newCap
   * 22 Weak Mutation 47: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:187 - DeleteField: _data[F
   * 23 Weak Mutation 44: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:186 - InsertUnaryOp Negation of newCap
   * 24 Weak Mutation 45: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:186 - InsertUnaryOp IINC 1 newCap
   * 25 Weak Mutation 51: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:187 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 26 Weak Mutation 50: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:187 - DeleteField: _data[F
   * 27 Weak Mutation 49: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:187 - ReplaceConstant - 0 -> 1
   * 28 Weak Mutation 48: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:187 - ReplaceConstant - 0 -> 1
   * 29 Weak Mutation 205: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - InsertUnaryOp IINC 1 offset
   * 30 Weak Mutation 204: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - InsertUnaryOp Negation of offset
   * 31 Weak Mutation 207: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - InsertUnaryOp Negation
   * 32 Weak Mutation 206: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - InsertUnaryOp IINC -1 offset
   * 33 Weak Mutation 203: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - ReplaceVariable offset -> len
   * 34 Weak Mutation 202: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - ReplaceVariable offset -> valOffset
   * 35 Weak Mutation 220: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:265 - ReplaceVariable len -> offset
   * 36 Weak Mutation 221: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:265 - InsertUnaryOp Negation of len
   * 37 Weak Mutation 222: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:265 - InsertUnaryOp IINC 1 len
   * 38 Weak Mutation 223: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:265 - InsertUnaryOp IINC -1 len
   * 39 Weak Mutation 216: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:265 - InsertUnaryOp Negation of valOffset
   * 40 Weak Mutation 217: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:265 - InsertUnaryOp IINC 1 valOffset
   * 41 Weak Mutation 218: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:265 - InsertUnaryOp IINC -1 valOffset
   * 42 Weak Mutation 219: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:265 - ReplaceVariable len -> valOffset
   * 43 Weak Mutation 213: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - ReplaceComparisonOperator != -> -1
   * 44 Weak Mutation 214: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:265 - ReplaceVariable valOffset -> len
   * 45 Weak Mutation 215: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:265 - ReplaceVariable valOffset -> offset
   * 46 Weak Mutation 208: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - InsertUnaryOp +1
   * 47 Weak Mutation 209: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - InsertUnaryOp -1
   * 48 Weak Mutation 224: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:265 - DeleteStatement: add([FII)V
   * 49 gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - false
   */

  @Test
  public void test10()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(0, (-1370.8738F));
      float[] floatArray0 = new float[3];
      // Undeclared exception!
      try {
        tFloatArrayList0.insert(0, floatArray0, 192, 623);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 11
  /*
   * 96 covered goals:
   * 1 Weak Mutation 239: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - DeleteField: _data[F
   * 2 Weak Mutation 254: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC 1 len
   * 3 Weak Mutation 255: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC -1 len
   * 4 Weak Mutation 252: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable len -> offset
   * 5 Weak Mutation 253: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp Negation of len
   * 6 Weak Mutation 250: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC -1 offset
   * 7 Weak Mutation 251: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable len -> valOffset
   * 8 Weak Mutation 248: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp Negation of offset
   * 9 Weak Mutation 249: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC 1 offset
   * 10 Weak Mutation 246: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable offset -> valOffset
   * 11 Weak Mutation 247: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable offset -> len
   * 12 Weak Mutation 244: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC -1 offset
   * 13 Weak Mutation 245: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - DeleteField: _data[F
   * 14 Weak Mutation 242: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp Negation of offset
   * 15 Weak Mutation 243: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC 1 offset
   * 16 Weak Mutation 240: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable offset -> valOffset
   * 17 Weak Mutation 241: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable offset -> len
   * 18 Weak Mutation 273: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 19 Weak Mutation 272: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator - -> *
   * 20 Weak Mutation 258: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator + -> /
   * 21 Weak Mutation 259: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator + -> *
   * 22 Weak Mutation 256: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator + -> -
   * 23 Weak Mutation 257: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator + -> %
   * 24 Weak Mutation 262: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp -1
   * 25 Weak Mutation 263: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - DeleteField: _posI
   * 26 Weak Mutation 260: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp Negation
   * 27 Weak Mutation 261: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp +1
   * 28 Weak Mutation 266: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp Negation of offset
   * 29 Weak Mutation 267: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC 1 offset
   * 30 Weak Mutation 264: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable offset -> valOffset
   * 31 Weak Mutation 265: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable offset -> len
   * 32 Weak Mutation 270: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator - -> %
   * 33 Weak Mutation 271: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator - -> /
   * 34 Weak Mutation 268: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC -1 offset
   * 35 Weak Mutation 269: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator - -> +
   * 36 Weak Mutation 212: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - ReplaceComparisonOperator != -> <
   * 37 Weak Mutation 38: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:185 - ReplaceBitwiseOperator << -> >>
   * 38 Weak Mutation 37: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:185 - ReplaceBitwiseOperator << -> >>>
   * 39 Weak Mutation 201: gnu.trove.list.array.TFloatArrayList.insert(I[F)V:258 - DeleteStatement: insert(I[FII)V
   * 40 Weak Mutation 200: gnu.trove.list.array.TFloatArrayList.insert(I[F)V:258 - ReplaceConstant - 0 -> 1
   * 41 Weak Mutation 197: gnu.trove.list.array.TFloatArrayList.insert(I[F)V:258 - InsertUnaryOp Negation of offset
   * 42 Weak Mutation 199: gnu.trove.list.array.TFloatArrayList.insert(I[F)V:258 - InsertUnaryOp IINC -1 offset
   * 43 Weak Mutation 198: gnu.trove.list.array.TFloatArrayList.insert(I[F)V:258 - InsertUnaryOp IINC 1 offset
   * 44 Weak Mutation 212: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - ReplaceComparisonOperator != -> <
   * 45 Weak Mutation 210: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - DeleteField: _posI
   * 46 Weak Mutation 239: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - DeleteField: _data[F
   * 47 Weak Mutation 238: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - DeleteStatement: ensureCapacity(I)V
   * 48 Weak Mutation 237: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - ReplaceArithmeticOperator + -> *
   * 49 Weak Mutation 236: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - ReplaceArithmeticOperator + -> /
   * 50 Weak Mutation 235: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - ReplaceArithmeticOperator + -> %
   * 51 Weak Mutation 234: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - ReplaceArithmeticOperator + -> -
   * 52 Weak Mutation 233: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - InsertUnaryOp IINC -1 len
   * 53 Weak Mutation 232: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - InsertUnaryOp IINC 1 len
   * 54 Weak Mutation 231: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - InsertUnaryOp Negation of len
   * 55 Weak Mutation 230: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - ReplaceVariable len -> offset
   * 56 Weak Mutation 229: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - ReplaceVariable len -> valOffset
   * 57 Weak Mutation 228: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - DeleteField: _posI
   * 58 Weak Mutation 227: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - InsertUnaryOp -1
   * 59 Weak Mutation 226: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - InsertUnaryOp +1
   * 60 Weak Mutation 225: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - InsertUnaryOp Negation
   * 61 Weak Mutation 254: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC 1 len
   * 62 Weak Mutation 255: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC -1 len
   * 63 Weak Mutation 252: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable len -> offset
   * 64 Weak Mutation 253: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp Negation of len
   * 65 Weak Mutation 250: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC -1 offset
   * 66 Weak Mutation 251: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable len -> valOffset
   * 67 Weak Mutation 248: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp Negation of offset
   * 68 Weak Mutation 249: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC 1 offset
   * 69 Weak Mutation 246: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable offset -> valOffset
   * 70 Weak Mutation 247: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable offset -> len
   * 71 Weak Mutation 244: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC -1 offset
   * 72 Weak Mutation 245: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - DeleteField: _data[F
   * 73 Weak Mutation 242: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp Negation of offset
   * 74 Weak Mutation 243: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC 1 offset
   * 75 Weak Mutation 240: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable offset -> valOffset
   * 76 Weak Mutation 241: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable offset -> len
   * 77 Weak Mutation 273: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 78 Weak Mutation 272: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator - -> *
   * 79 Weak Mutation 258: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator + -> /
   * 80 Weak Mutation 259: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator + -> *
   * 81 Weak Mutation 256: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator + -> -
   * 82 Weak Mutation 257: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator + -> %
   * 83 Weak Mutation 262: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp -1
   * 84 Weak Mutation 263: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - DeleteField: _posI
   * 85 Weak Mutation 260: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp Negation
   * 86 Weak Mutation 261: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp +1
   * 87 Weak Mutation 266: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp Negation of offset
   * 88 Weak Mutation 267: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC 1 offset
   * 89 Weak Mutation 264: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable offset -> valOffset
   * 90 Weak Mutation 265: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable offset -> len
   * 91 Weak Mutation 270: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator - -> %
   * 92 Weak Mutation 271: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator - -> /
   * 93 Weak Mutation 268: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC -1 offset
   * 94 Weak Mutation 269: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator - -> +
   * 95 gnu.trove.list.array.TFloatArrayList.insert(I[F)V: root-Branch
   * 96 gnu.trove.list.array.TFloatArrayList.insert(I[FII)V: I5 Branch 8 IF_ICMPNE L264 - true
   */

  @Test
  public void test11()  throws Throwable  {
      float[] floatArray0 = new float[1];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      // Undeclared exception!
      try {
        tFloatArrayList0.insert(10, floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 124 covered goals:
   * 1 Weak Mutation 275: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - ReplaceVariable valOffset -> offset
   * 2 Weak Mutation 274: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - ReplaceVariable valOffset -> len
   * 3 Weak Mutation 279: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - DeleteField: _data[F
   * 4 Weak Mutation 278: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - InsertUnaryOp IINC -1 valOffset
   * 5 Weak Mutation 277: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - InsertUnaryOp IINC 1 valOffset
   * 6 Weak Mutation 276: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - InsertUnaryOp Negation of valOffset
   * 7 Weak Mutation 283: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - InsertUnaryOp IINC 1 offset
   * 8 Weak Mutation 282: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - InsertUnaryOp Negation of offset
   * 9 Weak Mutation 281: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - ReplaceVariable offset -> len
   * 10 Weak Mutation 280: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - ReplaceVariable offset -> valOffset
   * 11 Weak Mutation 287: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - InsertUnaryOp Negation of len
   * 12 Weak Mutation 286: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - ReplaceVariable len -> offset
   * 13 Weak Mutation 285: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - ReplaceVariable len -> valOffset
   * 14 Weak Mutation 284: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - InsertUnaryOp IINC -1 offset
   * 15 Weak Mutation 288: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - InsertUnaryOp IINC 1 len
   * 16 Weak Mutation 289: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - InsertUnaryOp IINC -1 len
   * 17 Weak Mutation 290: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 18 Weak Mutation 291: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - InsertUnaryOp Negation
   * 19 Weak Mutation 292: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - InsertUnaryOp +1
   * 20 Weak Mutation 293: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - InsertUnaryOp -1
   * 21 Weak Mutation 294: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - DeleteField: _posI
   * 22 Weak Mutation 295: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - ReplaceVariable len -> valOffset
   * 23 Weak Mutation 296: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - ReplaceVariable len -> offset
   * 24 Weak Mutation 297: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - InsertUnaryOp Negation of len
   * 25 Weak Mutation 298: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - InsertUnaryOp IINC 1 len
   * 26 Weak Mutation 299: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - InsertUnaryOp IINC -1 len
   * 27 Weak Mutation 300: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - ReplaceArithmeticOperator + -> -
   * 28 Weak Mutation 301: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - ReplaceArithmeticOperator + -> %
   * 29 Weak Mutation 302: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - ReplaceArithmeticOperator + -> /
   * 30 Weak Mutation 303: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - ReplaceArithmeticOperator + -> *
   * 31 Weak Mutation 205: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - InsertUnaryOp IINC 1 offset
   * 32 Weak Mutation 204: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - InsertUnaryOp Negation of offset
   * 33 Weak Mutation 207: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - InsertUnaryOp Negation
   * 34 Weak Mutation 206: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - InsertUnaryOp IINC -1 offset
   * 35 Weak Mutation 201: gnu.trove.list.array.TFloatArrayList.insert(I[F)V:258 - DeleteStatement: insert(I[FII)V
   * 36 Weak Mutation 200: gnu.trove.list.array.TFloatArrayList.insert(I[F)V:258 - ReplaceConstant - 0 -> 1
   * 37 Weak Mutation 203: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - ReplaceVariable offset -> len
   * 38 Weak Mutation 202: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - ReplaceVariable offset -> valOffset
   * 39 Weak Mutation 197: gnu.trove.list.array.TFloatArrayList.insert(I[F)V:258 - InsertUnaryOp Negation of offset
   * 40 Weak Mutation 199: gnu.trove.list.array.TFloatArrayList.insert(I[F)V:258 - InsertUnaryOp IINC -1 offset
   * 41 Weak Mutation 198: gnu.trove.list.array.TFloatArrayList.insert(I[F)V:258 - InsertUnaryOp IINC 1 offset
   * 42 Weak Mutation 208: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - InsertUnaryOp +1
   * 43 Weak Mutation 209: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - InsertUnaryOp -1
   * 44 Weak Mutation 210: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - DeleteField: _posI
   * 45 Weak Mutation 211: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - ReplaceComparisonOperator != -> >
   * 46 Weak Mutation 239: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - DeleteField: _data[F
   * 47 Weak Mutation 238: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - DeleteStatement: ensureCapacity(I)V
   * 48 Weak Mutation 237: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - ReplaceArithmeticOperator + -> *
   * 49 Weak Mutation 236: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - ReplaceArithmeticOperator + -> /
   * 50 Weak Mutation 235: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - ReplaceArithmeticOperator + -> %
   * 51 Weak Mutation 234: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - ReplaceArithmeticOperator + -> -
   * 52 Weak Mutation 233: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - InsertUnaryOp IINC -1 len
   * 53 Weak Mutation 232: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - InsertUnaryOp IINC 1 len
   * 54 Weak Mutation 231: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - InsertUnaryOp Negation of len
   * 55 Weak Mutation 230: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - ReplaceVariable len -> offset
   * 56 Weak Mutation 229: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - ReplaceVariable len -> valOffset
   * 57 Weak Mutation 228: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - DeleteField: _posI
   * 58 Weak Mutation 227: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - InsertUnaryOp -1
   * 59 Weak Mutation 226: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - InsertUnaryOp +1
   * 60 Weak Mutation 225: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:269 - InsertUnaryOp Negation
   * 61 Weak Mutation 254: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC 1 len
   * 62 Weak Mutation 255: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC -1 len
   * 63 Weak Mutation 252: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable len -> offset
   * 64 Weak Mutation 253: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp Negation of len
   * 65 Weak Mutation 250: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC -1 offset
   * 66 Weak Mutation 251: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable len -> valOffset
   * 67 Weak Mutation 248: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp Negation of offset
   * 68 Weak Mutation 249: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC 1 offset
   * 69 Weak Mutation 246: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable offset -> valOffset
   * 70 Weak Mutation 247: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable offset -> len
   * 71 Weak Mutation 244: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC -1 offset
   * 72 Weak Mutation 245: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - DeleteField: _data[F
   * 73 Weak Mutation 242: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp Negation of offset
   * 74 Weak Mutation 243: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC 1 offset
   * 75 Weak Mutation 240: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable offset -> valOffset
   * 76 Weak Mutation 241: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable offset -> len
   * 77 Weak Mutation 273: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 78 Weak Mutation 272: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator - -> *
   * 79 Weak Mutation 258: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator + -> /
   * 80 Weak Mutation 259: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator + -> *
   * 81 Weak Mutation 256: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator + -> -
   * 82 Weak Mutation 257: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator + -> %
   * 83 Weak Mutation 262: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp -1
   * 84 Weak Mutation 263: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - DeleteField: _posI
   * 85 Weak Mutation 260: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp Negation
   * 86 Weak Mutation 261: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp +1
   * 87 Weak Mutation 266: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp Negation of offset
   * 88 Weak Mutation 267: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC 1 offset
   * 89 Weak Mutation 264: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable offset -> valOffset
   * 90 Weak Mutation 265: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceVariable offset -> len
   * 91 Weak Mutation 270: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator - -> %
   * 92 Weak Mutation 268: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - InsertUnaryOp IINC -1 offset
   * 93 Weak Mutation 269: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:271 - ReplaceArithmeticOperator - -> +
   * 94 Weak Mutation 211: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:264 - ReplaceComparisonOperator != -> >
   * 95 Weak Mutation 275: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - ReplaceVariable valOffset -> offset
   * 96 Weak Mutation 274: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - ReplaceVariable valOffset -> len
   * 97 Weak Mutation 279: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - DeleteField: _data[F
   * 98 Weak Mutation 278: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - InsertUnaryOp IINC -1 valOffset
   * 99 Weak Mutation 277: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - InsertUnaryOp IINC 1 valOffset
   * 100 Weak Mutation 276: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - InsertUnaryOp Negation of valOffset
   * 101 Weak Mutation 283: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - InsertUnaryOp IINC 1 offset
   * 102 Weak Mutation 282: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - InsertUnaryOp Negation of offset
   * 103 Weak Mutation 281: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - ReplaceVariable offset -> len
   * 104 Weak Mutation 280: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - ReplaceVariable offset -> valOffset
   * 105 Weak Mutation 287: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - InsertUnaryOp Negation of len
   * 106 Weak Mutation 286: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - ReplaceVariable len -> offset
   * 107 Weak Mutation 285: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - ReplaceVariable len -> valOffset
   * 108 Weak Mutation 284: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - InsertUnaryOp IINC -1 offset
   * 109 Weak Mutation 288: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - InsertUnaryOp IINC 1 len
   * 110 Weak Mutation 289: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - InsertUnaryOp IINC -1 len
   * 111 Weak Mutation 290: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:273 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 112 Weak Mutation 291: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - InsertUnaryOp Negation
   * 113 Weak Mutation 292: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - InsertUnaryOp +1
   * 114 Weak Mutation 293: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - InsertUnaryOp -1
   * 115 Weak Mutation 294: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - DeleteField: _posI
   * 116 Weak Mutation 295: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - ReplaceVariable len -> valOffset
   * 117 Weak Mutation 296: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - ReplaceVariable len -> offset
   * 118 Weak Mutation 297: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - InsertUnaryOp Negation of len
   * 119 Weak Mutation 298: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - InsertUnaryOp IINC 1 len
   * 120 Weak Mutation 299: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - InsertUnaryOp IINC -1 len
   * 121 Weak Mutation 300: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - ReplaceArithmeticOperator + -> -
   * 122 Weak Mutation 301: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - ReplaceArithmeticOperator + -> %
   * 123 Weak Mutation 302: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - ReplaceArithmeticOperator + -> /
   * 124 Weak Mutation 303: gnu.trove.list.array.TFloatArrayList.insert(I[FII)V:274 - ReplaceArithmeticOperator + -> *
   */

  @Test
  public void test12()  throws Throwable  {
      float[] floatArray0 = new float[4];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      tFloatArrayList0.add(floatArray0);
      tFloatArrayList0.insert(2, floatArray0);
      assertEquals(8, tFloatArrayList0.size());
      assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}", tFloatArrayList0.toString());
  }

  //Test case number: 13
  /*
   * 18 covered goals:
   * 1 Weak Mutation 311: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - ReplaceComparisonOperator < -> !=
   * 2 Weak Mutation 315: gnu.trove.list.array.TFloatArrayList.get(I)F:281 - InsertUnaryOp IINC 1 offset
   * 3 Weak Mutation 314: gnu.trove.list.array.TFloatArrayList.get(I)F:281 - InsertUnaryOp Negation of offset
   * 4 Weak Mutation 316: gnu.trove.list.array.TFloatArrayList.get(I)F:281 - InsertUnaryOp IINC -1 offset
   * 5 Weak Mutation 479: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:395 - InsertUnaryOp Negation of offset
   * 6 Weak Mutation 481: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:395 - InsertUnaryOp IINC -1 offset
   * 7 Weak Mutation 480: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:395 - InsertUnaryOp IINC 1 offset
   * 8 Weak Mutation 482: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:395 - DeleteStatement: get(I)F
   * 9 gnu.trove.list.array.TFloatArrayList.removeAt(I)F: root-Branch
   * 10 gnu.trove.list.array.TFloatArrayList.get(I)F: I5 Branch 9 IF_ICMPLT L280 - false
   * 11 Weak Mutation 311: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - ReplaceComparisonOperator < -> !=
   * 12 Weak Mutation 315: gnu.trove.list.array.TFloatArrayList.get(I)F:281 - InsertUnaryOp IINC 1 offset
   * 13 Weak Mutation 314: gnu.trove.list.array.TFloatArrayList.get(I)F:281 - InsertUnaryOp Negation of offset
   * 14 Weak Mutation 316: gnu.trove.list.array.TFloatArrayList.get(I)F:281 - InsertUnaryOp IINC -1 offset
   * 15 Weak Mutation 479: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:395 - InsertUnaryOp Negation of offset
   * 16 Weak Mutation 481: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:395 - InsertUnaryOp IINC -1 offset
   * 17 Weak Mutation 480: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:395 - InsertUnaryOp IINC 1 offset
   * 18 Weak Mutation 482: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:395 - DeleteStatement: get(I)F
   */

  @Test
  public void test13()  throws Throwable  {
      float[] floatArray0 = new float[6];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, (-1.0F));
      assertNotNull(tFloatArrayList0);
      
      // Undeclared exception!
      try {
        tFloatArrayList0.removeAt(1442);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1442
         //
      }
  }

  //Test case number: 14
  /*
   * 5 covered goals:
   * 1 Weak Mutation 313: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - ReplaceComparisonOperator < -> <=
   * 2 Weak Mutation 315: gnu.trove.list.array.TFloatArrayList.get(I)F:281 - InsertUnaryOp IINC 1 offset
   * 3 Weak Mutation 314: gnu.trove.list.array.TFloatArrayList.get(I)F:281 - InsertUnaryOp Negation of offset
   * 4 Weak Mutation 316: gnu.trove.list.array.TFloatArrayList.get(I)F:281 - InsertUnaryOp IINC -1 offset
   * 5 Weak Mutation 313: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - ReplaceComparisonOperator < -> <=
   */

  @Test
  public void test14()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(969);
      // Undeclared exception!
      try {
        tFloatArrayList0.get(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
      }
  }

  //Test case number: 15
  /*
   * 9 covered goals:
   * 1 Weak Mutation 324: gnu.trove.list.array.TFloatArrayList.getQuick(I)F:291 - InsertUnaryOp IINC -1 offset
   * 2 Weak Mutation 322: gnu.trove.list.array.TFloatArrayList.getQuick(I)F:291 - InsertUnaryOp Negation of offset
   * 3 Weak Mutation 323: gnu.trove.list.array.TFloatArrayList.getQuick(I)F:291 - InsertUnaryOp IINC 1 offset
   * 4 Weak Mutation 321: gnu.trove.list.array.TFloatArrayList.getQuick(I)F:291 - DeleteField: _data[F
   * 5 gnu.trove.list.array.TFloatArrayList.getQuick(I)F: root-Branch
   * 6 Weak Mutation 324: gnu.trove.list.array.TFloatArrayList.getQuick(I)F:291 - InsertUnaryOp IINC -1 offset
   * 7 Weak Mutation 322: gnu.trove.list.array.TFloatArrayList.getQuick(I)F:291 - InsertUnaryOp Negation of offset
   * 8 Weak Mutation 323: gnu.trove.list.array.TFloatArrayList.getQuick(I)F:291 - InsertUnaryOp IINC 1 offset
   * 9 Weak Mutation 321: gnu.trove.list.array.TFloatArrayList.getQuick(I)F:291 - DeleteField: _data[F
   */

//   @Test
//   public void test15()  throws Throwable  {
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
//       tFloatArrayList0.getQuick(0);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals("{}", tFloatArrayList0.toString());
//       assertEquals(true, tFloatArrayList0.isEmpty());
//   }

  //Test case number: 16
  /*
   * 21 covered goals:
   * 1 Weak Mutation 326: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - InsertUnaryOp IINC 1 offset
   * 2 Weak Mutation 327: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - InsertUnaryOp IINC -1 offset
   * 3 Weak Mutation 325: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - InsertUnaryOp Negation of offset
   * 4 Weak Mutation 332: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - ReplaceComparisonOperator < -> !=
   * 5 Weak Mutation 330: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - InsertUnaryOp -1
   * 6 Weak Mutation 328: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - InsertUnaryOp Negation
   * 7 Weak Mutation 329: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - InsertUnaryOp +1
   * 8 Weak Mutation 337: gnu.trove.list.array.TFloatArrayList.set(IF)F:298 - InsertUnaryOp IINC -1 offset
   * 9 Weak Mutation 336: gnu.trove.list.array.TFloatArrayList.set(IF)F:298 - InsertUnaryOp IINC 1 offset
   * 10 Weak Mutation 335: gnu.trove.list.array.TFloatArrayList.set(IF)F:298 - InsertUnaryOp Negation of offset
   * 11 gnu.trove.list.array.TFloatArrayList.set(IF)F: I5 Branch 10 IF_ICMPLT L297 - false
   * 12 Weak Mutation 337: gnu.trove.list.array.TFloatArrayList.set(IF)F:298 - InsertUnaryOp IINC -1 offset
   * 13 Weak Mutation 336: gnu.trove.list.array.TFloatArrayList.set(IF)F:298 - InsertUnaryOp IINC 1 offset
   * 14 Weak Mutation 326: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - InsertUnaryOp IINC 1 offset
   * 15 Weak Mutation 327: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - InsertUnaryOp IINC -1 offset
   * 16 Weak Mutation 325: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - InsertUnaryOp Negation of offset
   * 17 Weak Mutation 335: gnu.trove.list.array.TFloatArrayList.set(IF)F:298 - InsertUnaryOp Negation of offset
   * 18 Weak Mutation 332: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - ReplaceComparisonOperator < -> !=
   * 19 Weak Mutation 330: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - InsertUnaryOp -1
   * 20 Weak Mutation 328: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - InsertUnaryOp Negation
   * 21 Weak Mutation 329: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - InsertUnaryOp +1
   */

  @Test
  public void test16()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(758);
      // Undeclared exception!
      try {
        tFloatArrayList0.set(758, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 758
         //
      }
  }

  //Test case number: 17
  /*
   * 5 covered goals:
   * 1 Weak Mutation 334: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - ReplaceComparisonOperator < -> <=
   * 2 Weak Mutation 337: gnu.trove.list.array.TFloatArrayList.set(IF)F:298 - InsertUnaryOp IINC -1 offset
   * 3 Weak Mutation 336: gnu.trove.list.array.TFloatArrayList.set(IF)F:298 - InsertUnaryOp IINC 1 offset
   * 4 Weak Mutation 335: gnu.trove.list.array.TFloatArrayList.set(IF)F:298 - InsertUnaryOp Negation of offset
   * 5 Weak Mutation 334: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - ReplaceComparisonOperator < -> <=
   */

  @Test
  public void test17()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      // Undeclared exception!
      try {
        tFloatArrayList0.set(0, (-569.869F));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
      }
  }

  //Test case number: 18
  /*
   * 35 covered goals:
   * 1 Weak Mutation 333: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - ReplaceComparisonOperator < -> -2
   * 2 Weak Mutation 331: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - DeleteField: _posI
   * 3 Weak Mutation 341: gnu.trove.list.array.TFloatArrayList.set(IF)F:301 - InsertUnaryOp IINC -1 offset
   * 4 Weak Mutation 340: gnu.trove.list.array.TFloatArrayList.set(IF)F:301 - InsertUnaryOp IINC 1 offset
   * 5 Weak Mutation 339: gnu.trove.list.array.TFloatArrayList.set(IF)F:301 - InsertUnaryOp Negation of offset
   * 6 Weak Mutation 338: gnu.trove.list.array.TFloatArrayList.set(IF)F:301 - DeleteField: _data[F
   * 7 Weak Mutation 343: gnu.trove.list.array.TFloatArrayList.set(IF)F:302 - InsertUnaryOp Negation of offset
   * 8 Weak Mutation 342: gnu.trove.list.array.TFloatArrayList.set(IF)F:302 - DeleteField: _data[F
   * 9 Weak Mutation 347: gnu.trove.list.array.TFloatArrayList.set(IF)F:302 - InsertUnaryOp Negation of val
   * 10 Weak Mutation 346: gnu.trove.list.array.TFloatArrayList.set(IF)F:302 - ReplaceVariable val -> prev_val
   * 11 Weak Mutation 345: gnu.trove.list.array.TFloatArrayList.set(IF)F:302 - InsertUnaryOp IINC -1 offset
   * 12 Weak Mutation 344: gnu.trove.list.array.TFloatArrayList.set(IF)F:302 - InsertUnaryOp IINC 1 offset
   * 13 Weak Mutation 349: gnu.trove.list.array.TFloatArrayList.set(IF)F:303 - InsertUnaryOp Negation of prev_val
   * 14 Weak Mutation 348: gnu.trove.list.array.TFloatArrayList.set(IF)F:303 - ReplaceVariable prev_val -> val
   * 15 gnu.trove.list.array.TFloatArrayList.set(IF)F: I5 Branch 10 IF_ICMPLT L297 - true
   * 16 Weak Mutation 326: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - InsertUnaryOp IINC 1 offset
   * 17 Weak Mutation 327: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - InsertUnaryOp IINC -1 offset
   * 18 Weak Mutation 325: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - InsertUnaryOp Negation of offset
   * 19 Weak Mutation 330: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - InsertUnaryOp -1
   * 20 Weak Mutation 328: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - InsertUnaryOp Negation
   * 21 Weak Mutation 329: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - InsertUnaryOp +1
   * 22 Weak Mutation 343: gnu.trove.list.array.TFloatArrayList.set(IF)F:302 - InsertUnaryOp Negation of offset
   * 23 Weak Mutation 342: gnu.trove.list.array.TFloatArrayList.set(IF)F:302 - DeleteField: _data[F
   * 24 Weak Mutation 341: gnu.trove.list.array.TFloatArrayList.set(IF)F:301 - InsertUnaryOp IINC -1 offset
   * 25 Weak Mutation 340: gnu.trove.list.array.TFloatArrayList.set(IF)F:301 - InsertUnaryOp IINC 1 offset
   * 26 Weak Mutation 339: gnu.trove.list.array.TFloatArrayList.set(IF)F:301 - InsertUnaryOp Negation of offset
   * 27 Weak Mutation 338: gnu.trove.list.array.TFloatArrayList.set(IF)F:301 - DeleteField: _data[F
   * 28 Weak Mutation 349: gnu.trove.list.array.TFloatArrayList.set(IF)F:303 - InsertUnaryOp Negation of prev_val
   * 29 Weak Mutation 348: gnu.trove.list.array.TFloatArrayList.set(IF)F:303 - ReplaceVariable prev_val -> val
   * 30 Weak Mutation 347: gnu.trove.list.array.TFloatArrayList.set(IF)F:302 - InsertUnaryOp Negation of val
   * 31 Weak Mutation 346: gnu.trove.list.array.TFloatArrayList.set(IF)F:302 - ReplaceVariable val -> prev_val
   * 32 Weak Mutation 345: gnu.trove.list.array.TFloatArrayList.set(IF)F:302 - InsertUnaryOp IINC -1 offset
   * 33 Weak Mutation 344: gnu.trove.list.array.TFloatArrayList.set(IF)F:302 - InsertUnaryOp IINC 1 offset
   * 34 Weak Mutation 333: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - ReplaceComparisonOperator < -> -2
   * 35 Weak Mutation 331: gnu.trove.list.array.TFloatArrayList.set(IF)F:297 - DeleteField: _posI
   */

//   @Test
//   public void test18()  throws Throwable  {
//       float[] floatArray0 = new float[17];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, Float.NEGATIVE_INFINITY);
//       assertNotNull(tFloatArrayList0);
//       
//       float float0 = tFloatArrayList0.set(1, Float.NEGATIVE_INFINITY);
//       assertEquals(Float.NEGATIVE_INFINITY, tFloatArrayList0.sum(), 0.01F);
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 19
  /*
   * 21 covered goals:
   * 1 Weak Mutation 351: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - InsertUnaryOp IINC 1 offset
   * 2 Weak Mutation 350: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - InsertUnaryOp Negation of offset
   * 3 Weak Mutation 357: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - ReplaceComparisonOperator < -> !=
   * 4 Weak Mutation 352: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - InsertUnaryOp IINC -1 offset
   * 5 Weak Mutation 353: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - InsertUnaryOp Negation
   * 6 Weak Mutation 354: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - InsertUnaryOp +1
   * 7 Weak Mutation 355: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - InsertUnaryOp -1
   * 8 Weak Mutation 360: gnu.trove.list.array.TFloatArrayList.replace(IF)F:310 - InsertUnaryOp Negation of offset
   * 9 Weak Mutation 361: gnu.trove.list.array.TFloatArrayList.replace(IF)F:310 - InsertUnaryOp IINC 1 offset
   * 10 Weak Mutation 362: gnu.trove.list.array.TFloatArrayList.replace(IF)F:310 - InsertUnaryOp IINC -1 offset
   * 11 gnu.trove.list.array.TFloatArrayList.replace(IF)F: I5 Branch 11 IF_ICMPLT L309 - false
   * 12 Weak Mutation 351: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - InsertUnaryOp IINC 1 offset
   * 13 Weak Mutation 350: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - InsertUnaryOp Negation of offset
   * 14 Weak Mutation 357: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - ReplaceComparisonOperator < -> !=
   * 15 Weak Mutation 352: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - InsertUnaryOp IINC -1 offset
   * 16 Weak Mutation 353: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - InsertUnaryOp Negation
   * 17 Weak Mutation 354: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - InsertUnaryOp +1
   * 18 Weak Mutation 355: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - InsertUnaryOp -1
   * 19 Weak Mutation 360: gnu.trove.list.array.TFloatArrayList.replace(IF)F:310 - InsertUnaryOp Negation of offset
   * 20 Weak Mutation 361: gnu.trove.list.array.TFloatArrayList.replace(IF)F:310 - InsertUnaryOp IINC 1 offset
   * 21 Weak Mutation 362: gnu.trove.list.array.TFloatArrayList.replace(IF)F:310 - InsertUnaryOp IINC -1 offset
   */

  @Test
  public void test19()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(10, 10);
      // Undeclared exception!
      try {
        tFloatArrayList0.replace(45, 3.4028235E38F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 45
         //
      }
  }

  //Test case number: 20
  /*
   * 29 covered goals:
   * 1 Weak Mutation 356: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - DeleteField: _posI
   * 2 Weak Mutation 358: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - ReplaceComparisonOperator < -> -2
   * 3 Weak Mutation 364: gnu.trove.list.array.TFloatArrayList.replace(IF)F:312 - InsertUnaryOp Negation of offset
   * 4 Weak Mutation 365: gnu.trove.list.array.TFloatArrayList.replace(IF)F:312 - InsertUnaryOp IINC 1 offset
   * 5 Weak Mutation 366: gnu.trove.list.array.TFloatArrayList.replace(IF)F:312 - InsertUnaryOp IINC -1 offset
   * 6 Weak Mutation 363: gnu.trove.list.array.TFloatArrayList.replace(IF)F:312 - DeleteField: _data[F
   * 7 Weak Mutation 372: gnu.trove.list.array.TFloatArrayList.replace(IF)F:313 - InsertUnaryOp Negation of val
   * 8 Weak Mutation 369: gnu.trove.list.array.TFloatArrayList.replace(IF)F:313 - InsertUnaryOp IINC 1 offset
   * 9 Weak Mutation 368: gnu.trove.list.array.TFloatArrayList.replace(IF)F:313 - InsertUnaryOp Negation of offset
   * 10 Weak Mutation 371: gnu.trove.list.array.TFloatArrayList.replace(IF)F:313 - ReplaceVariable val -> old
   * 11 Weak Mutation 370: gnu.trove.list.array.TFloatArrayList.replace(IF)F:313 - InsertUnaryOp IINC -1 offset
   * 12 Weak Mutation 367: gnu.trove.list.array.TFloatArrayList.replace(IF)F:313 - DeleteField: _data[F
   * 13 Weak Mutation 373: gnu.trove.list.array.TFloatArrayList.replace(IF)F:314 - ReplaceVariable old -> val
   * 14 Weak Mutation 374: gnu.trove.list.array.TFloatArrayList.replace(IF)F:314 - InsertUnaryOp Negation of old
   * 15 gnu.trove.list.array.TFloatArrayList.replace(IF)F: I5 Branch 11 IF_ICMPLT L309 - true
   * 16 Weak Mutation 373: gnu.trove.list.array.TFloatArrayList.replace(IF)F:314 - ReplaceVariable old -> val
   * 17 Weak Mutation 372: gnu.trove.list.array.TFloatArrayList.replace(IF)F:313 - InsertUnaryOp Negation of val
   * 18 Weak Mutation 374: gnu.trove.list.array.TFloatArrayList.replace(IF)F:314 - InsertUnaryOp Negation of old
   * 19 Weak Mutation 369: gnu.trove.list.array.TFloatArrayList.replace(IF)F:313 - InsertUnaryOp IINC 1 offset
   * 20 Weak Mutation 368: gnu.trove.list.array.TFloatArrayList.replace(IF)F:313 - InsertUnaryOp Negation of offset
   * 21 Weak Mutation 371: gnu.trove.list.array.TFloatArrayList.replace(IF)F:313 - ReplaceVariable val -> old
   * 22 Weak Mutation 370: gnu.trove.list.array.TFloatArrayList.replace(IF)F:313 - InsertUnaryOp IINC -1 offset
   * 23 Weak Mutation 356: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - DeleteField: _posI
   * 24 Weak Mutation 358: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - ReplaceComparisonOperator < -> -2
   * 25 Weak Mutation 364: gnu.trove.list.array.TFloatArrayList.replace(IF)F:312 - InsertUnaryOp Negation of offset
   * 26 Weak Mutation 365: gnu.trove.list.array.TFloatArrayList.replace(IF)F:312 - InsertUnaryOp IINC 1 offset
   * 27 Weak Mutation 366: gnu.trove.list.array.TFloatArrayList.replace(IF)F:312 - InsertUnaryOp IINC -1 offset
   * 28 Weak Mutation 367: gnu.trove.list.array.TFloatArrayList.replace(IF)F:313 - DeleteField: _data[F
   * 29 Weak Mutation 363: gnu.trove.list.array.TFloatArrayList.replace(IF)F:312 - DeleteField: _data[F
   */

//   @Test
//   public void test20()  throws Throwable  {
//       float[] floatArray0 = new float[12];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
//       assertNotNull(tFloatArrayList0);
//       
//       float float0 = tFloatArrayList0.replace(0, Float.NEGATIVE_INFINITY);
//       assertEquals(Float.NEGATIVE_INFINITY, tFloatArrayList0.sum(), 0.01F);
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 21
  /*
   * 11 covered goals:
   * 1 Weak Mutation 359: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - ReplaceComparisonOperator < -> <=
   * 2 Weak Mutation 351: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - InsertUnaryOp IINC 1 offset
   * 3 Weak Mutation 350: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - InsertUnaryOp Negation of offset
   * 4 Weak Mutation 352: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - InsertUnaryOp IINC -1 offset
   * 5 Weak Mutation 353: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - InsertUnaryOp Negation
   * 6 Weak Mutation 354: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - InsertUnaryOp +1
   * 7 Weak Mutation 355: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - InsertUnaryOp -1
   * 8 Weak Mutation 360: gnu.trove.list.array.TFloatArrayList.replace(IF)F:310 - InsertUnaryOp Negation of offset
   * 9 Weak Mutation 361: gnu.trove.list.array.TFloatArrayList.replace(IF)F:310 - InsertUnaryOp IINC 1 offset
   * 10 Weak Mutation 362: gnu.trove.list.array.TFloatArrayList.replace(IF)F:310 - InsertUnaryOp IINC -1 offset
   * 11 Weak Mutation 359: gnu.trove.list.array.TFloatArrayList.replace(IF)F:309 - ReplaceComparisonOperator < -> <=
   */

  @Test
  public void test21()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      // Undeclared exception!
      try {
        tFloatArrayList0.replace(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
      }
  }

  //Test case number: 22
  /*
   * 89 covered goals:
   * 1 Weak Mutation 375: gnu.trove.list.array.TFloatArrayList.set(I[F)V:320 - InsertUnaryOp Negation of offset
   * 2 Weak Mutation 377: gnu.trove.list.array.TFloatArrayList.set(I[F)V:320 - InsertUnaryOp IINC -1 offset
   * 3 Weak Mutation 376: gnu.trove.list.array.TFloatArrayList.set(I[F)V:320 - InsertUnaryOp IINC 1 offset
   * 4 Weak Mutation 379: gnu.trove.list.array.TFloatArrayList.set(I[F)V:320 - DeleteStatement: set(I[FII)V
   * 5 Weak Mutation 378: gnu.trove.list.array.TFloatArrayList.set(I[F)V:320 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 381: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceVariable offset -> length
   * 7 Weak Mutation 383: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp IINC 1 offset
   * 8 Weak Mutation 382: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp Negation of offset
   * 9 Weak Mutation 402: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp Negation
   * 10 Weak Mutation 403: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp +1
   * 11 Weak Mutation 400: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceArithmeticOperator + -> /
   * 12 Weak Mutation 401: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceArithmeticOperator + -> *
   * 13 Weak Mutation 407: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceComparisonOperator <= -> <
   * 14 Weak Mutation 404: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp -1
   * 15 Weak Mutation 405: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - DeleteField: _posI
   * 16 Weak Mutation 395: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp Negation of length
   * 17 Weak Mutation 394: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceVariable length -> offset
   * 18 Weak Mutation 393: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceVariable length -> valOffset
   * 19 Weak Mutation 392: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp IINC -1 offset
   * 20 Weak Mutation 399: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceArithmeticOperator + -> %
   * 21 Weak Mutation 398: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceArithmeticOperator + -> -
   * 22 Weak Mutation 397: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp IINC -1 length
   * 23 Weak Mutation 396: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp IINC 1 length
   * 24 Weak Mutation 386: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceComparisonOperator < -> <=
   * 25 Weak Mutation 384: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp IINC -1 offset
   * 26 Weak Mutation 391: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp IINC 1 offset
   * 27 Weak Mutation 390: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp Negation of offset
   * 28 Weak Mutation 389: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceVariable offset -> length
   * 29 Weak Mutation 414: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - ReplaceVariable valOffset -> length
   * 30 Weak Mutation 425: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - ReplaceVariable length -> valOffset
   * 31 Weak Mutation 424: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp IINC -1 offset
   * 32 Weak Mutation 427: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp Negation of length
   * 33 Weak Mutation 426: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - ReplaceVariable length -> offset
   * 34 Weak Mutation 429: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp IINC -1 length
   * 35 Weak Mutation 428: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp IINC 1 length
   * 36 Weak Mutation 430: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 37 Weak Mutation 417: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp IINC 1 valOffset
   * 38 Weak Mutation 416: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp Negation of valOffset
   * 39 Weak Mutation 419: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - DeleteField: _data[F
   * 40 Weak Mutation 418: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp IINC -1 valOffset
   * 41 Weak Mutation 421: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - ReplaceVariable offset -> length
   * 42 Weak Mutation 423: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp IINC 1 offset
   * 43 Weak Mutation 422: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp Negation of offset
   * 44 gnu.trove.list.array.TFloatArrayList.set(I[F)V: root-Branch
   * 45 gnu.trove.list.array.TFloatArrayList.set(I[FII)V: I3 Branch 12 IFLT L326 - false
   * 46 gnu.trove.list.array.TFloatArrayList.set(I[FII)V: I9 Branch 13 IF_ICMPLE L326 - true
   * 47 Weak Mutation 375: gnu.trove.list.array.TFloatArrayList.set(I[F)V:320 - InsertUnaryOp Negation of offset
   * 48 Weak Mutation 381: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceVariable offset -> length
   * 49 Weak Mutation 383: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp IINC 1 offset
   * 50 Weak Mutation 382: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp Negation of offset
   * 51 Weak Mutation 377: gnu.trove.list.array.TFloatArrayList.set(I[F)V:320 - InsertUnaryOp IINC -1 offset
   * 52 Weak Mutation 376: gnu.trove.list.array.TFloatArrayList.set(I[F)V:320 - InsertUnaryOp IINC 1 offset
   * 53 Weak Mutation 379: gnu.trove.list.array.TFloatArrayList.set(I[F)V:320 - DeleteStatement: set(I[FII)V
   * 54 Weak Mutation 378: gnu.trove.list.array.TFloatArrayList.set(I[F)V:320 - ReplaceConstant - 0 -> 1
   * 55 Weak Mutation 414: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - ReplaceVariable valOffset -> length
   * 56 Weak Mutation 402: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp Negation
   * 57 Weak Mutation 403: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp +1
   * 58 Weak Mutation 400: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceArithmeticOperator + -> /
   * 59 Weak Mutation 401: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceArithmeticOperator + -> *
   * 60 Weak Mutation 407: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceComparisonOperator <= -> <
   * 61 Weak Mutation 404: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp -1
   * 62 Weak Mutation 405: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - DeleteField: _posI
   * 63 Weak Mutation 395: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp Negation of length
   * 64 Weak Mutation 394: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceVariable length -> offset
   * 65 Weak Mutation 393: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceVariable length -> valOffset
   * 66 Weak Mutation 392: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp IINC -1 offset
   * 67 Weak Mutation 399: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceArithmeticOperator + -> %
   * 68 Weak Mutation 398: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceArithmeticOperator + -> -
   * 69 Weak Mutation 397: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp IINC -1 length
   * 70 Weak Mutation 396: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp IINC 1 length
   * 71 Weak Mutation 386: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceComparisonOperator < -> <=
   * 72 Weak Mutation 384: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp IINC -1 offset
   * 73 Weak Mutation 391: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp IINC 1 offset
   * 74 Weak Mutation 390: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp Negation of offset
   * 75 Weak Mutation 389: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceVariable offset -> length
   * 76 Weak Mutation 425: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - ReplaceVariable length -> valOffset
   * 77 Weak Mutation 424: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp IINC -1 offset
   * 78 Weak Mutation 427: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp Negation of length
   * 79 Weak Mutation 426: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - ReplaceVariable length -> offset
   * 80 Weak Mutation 429: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp IINC -1 length
   * 81 Weak Mutation 428: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp IINC 1 length
   * 82 Weak Mutation 430: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 83 Weak Mutation 417: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp IINC 1 valOffset
   * 84 Weak Mutation 416: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp Negation of valOffset
   * 85 Weak Mutation 419: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - DeleteField: _data[F
   * 86 Weak Mutation 418: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp IINC -1 valOffset
   * 87 Weak Mutation 421: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - ReplaceVariable offset -> length
   * 88 Weak Mutation 423: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp IINC 1 offset
   * 89 Weak Mutation 422: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp Negation of offset
   */

//   @Test
//   public void test22()  throws Throwable  {
//       float[] floatArray0 = new float[12];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
//       assertNotNull(tFloatArrayList0);
//       
//       tFloatArrayList0.set(0, floatArray0);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 23
  /*
   * 13 covered goals:
   * 1 Weak Mutation 380: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceVariable offset -> valOffset
   * 2 Weak Mutation 387: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceComparisonOperator < -> -2
   * 3 Weak Mutation 411: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:327 - InsertUnaryOp Negation of offset
   * 4 Weak Mutation 409: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:327 - ReplaceVariable offset -> valOffset
   * 5 Weak Mutation 412: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:327 - InsertUnaryOp IINC 1 offset
   * 6 Weak Mutation 413: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:327 - InsertUnaryOp IINC -1 offset
   * 7 gnu.trove.list.array.TFloatArrayList.set(I[FII)V: I3 Branch 12 IFLT L326 - true
   * 8 Weak Mutation 380: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceVariable offset -> valOffset
   * 9 Weak Mutation 411: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:327 - InsertUnaryOp Negation of offset
   * 10 Weak Mutation 409: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:327 - ReplaceVariable offset -> valOffset
   * 11 Weak Mutation 412: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:327 - InsertUnaryOp IINC 1 offset
   * 12 Weak Mutation 413: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:327 - InsertUnaryOp IINC -1 offset
   * 13 Weak Mutation 387: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceComparisonOperator < -> -2
   */

  @Test
  public void test23()  throws Throwable  {
      float[] floatArray0 = new float[4];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
      assertNotNull(tFloatArrayList0);
      
      // Undeclared exception!
      try {
        tFloatArrayList0.set((-980), floatArray0, 139, (-980));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -980
         //
      }
  }

  //Test case number: 24
  /*
   * 23 covered goals:
   * 1 Weak Mutation 408: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceComparisonOperator <= -> -1
   * 2 Weak Mutation 385: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceComparisonOperator < -> !=
   * 3 Weak Mutation 388: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceVariable offset -> valOffset
   * 4 Weak Mutation 410: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:327 - ReplaceVariable offset -> length
   * 5 gnu.trove.list.array.TFloatArrayList.set(I[FII)V: I9 Branch 13 IF_ICMPLE L326 - false
   * 6 Weak Mutation 375: gnu.trove.list.array.TFloatArrayList.set(I[F)V:320 - InsertUnaryOp Negation of offset
   * 7 Weak Mutation 381: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceVariable offset -> length
   * 8 Weak Mutation 377: gnu.trove.list.array.TFloatArrayList.set(I[F)V:320 - InsertUnaryOp IINC -1 offset
   * 9 Weak Mutation 376: gnu.trove.list.array.TFloatArrayList.set(I[F)V:320 - InsertUnaryOp IINC 1 offset
   * 10 Weak Mutation 379: gnu.trove.list.array.TFloatArrayList.set(I[F)V:320 - DeleteStatement: set(I[FII)V
   * 11 Weak Mutation 378: gnu.trove.list.array.TFloatArrayList.set(I[F)V:320 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 411: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:327 - InsertUnaryOp Negation of offset
   * 13 Weak Mutation 409: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:327 - ReplaceVariable offset -> valOffset
   * 14 Weak Mutation 412: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:327 - InsertUnaryOp IINC 1 offset
   * 15 Weak Mutation 413: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:327 - InsertUnaryOp IINC -1 offset
   * 16 Weak Mutation 401: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceArithmeticOperator + -> *
   * 17 Weak Mutation 394: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceVariable length -> offset
   * 18 Weak Mutation 398: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceArithmeticOperator + -> -
   * 19 Weak Mutation 389: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceVariable offset -> length
   * 20 Weak Mutation 410: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:327 - ReplaceVariable offset -> length
   * 21 Weak Mutation 408: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceComparisonOperator <= -> -1
   * 22 Weak Mutation 385: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceComparisonOperator < -> !=
   * 23 Weak Mutation 388: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceVariable offset -> valOffset
   */

  @Test
  public void test24()  throws Throwable  {
      float[] floatArray0 = new float[9];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, 1323.1213F);
      assertNotNull(tFloatArrayList0);
      
      // Undeclared exception!
      try {
        tFloatArrayList0.set(1, floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
      }
  }

  //Test case number: 25
  /*
   * 38 covered goals:
   * 1 Weak Mutation 406: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceComparisonOperator <= -> ==
   * 2 Weak Mutation 415: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - ReplaceVariable valOffset -> offset
   * 3 Weak Mutation 420: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - ReplaceVariable offset -> valOffset
   * 4 Weak Mutation 380: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceVariable offset -> valOffset
   * 5 Weak Mutation 383: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp IINC 1 offset
   * 6 Weak Mutation 382: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp Negation of offset
   * 7 Weak Mutation 414: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - ReplaceVariable valOffset -> length
   * 8 Weak Mutation 402: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp Negation
   * 9 Weak Mutation 403: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp +1
   * 10 Weak Mutation 400: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceArithmeticOperator + -> /
   * 11 Weak Mutation 404: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp -1
   * 12 Weak Mutation 405: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - DeleteField: _posI
   * 13 Weak Mutation 395: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp Negation of length
   * 14 Weak Mutation 393: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceVariable length -> valOffset
   * 15 Weak Mutation 392: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp IINC -1 offset
   * 16 Weak Mutation 399: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceArithmeticOperator + -> %
   * 17 Weak Mutation 397: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp IINC -1 length
   * 18 Weak Mutation 396: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp IINC 1 length
   * 19 Weak Mutation 386: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceComparisonOperator < -> <=
   * 20 Weak Mutation 384: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp IINC -1 offset
   * 21 Weak Mutation 391: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp IINC 1 offset
   * 22 Weak Mutation 390: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - InsertUnaryOp Negation of offset
   * 23 Weak Mutation 388: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceVariable offset -> valOffset
   * 24 Weak Mutation 425: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - ReplaceVariable length -> valOffset
   * 25 Weak Mutation 424: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp IINC -1 offset
   * 26 Weak Mutation 427: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp Negation of length
   * 27 Weak Mutation 429: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp IINC -1 length
   * 28 Weak Mutation 428: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp IINC 1 length
   * 29 Weak Mutation 430: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 30 Weak Mutation 417: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp IINC 1 valOffset
   * 31 Weak Mutation 416: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp Negation of valOffset
   * 32 Weak Mutation 419: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - DeleteField: _data[F
   * 33 Weak Mutation 418: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp IINC -1 valOffset
   * 34 Weak Mutation 423: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp IINC 1 offset
   * 35 Weak Mutation 422: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - InsertUnaryOp Negation of offset
   * 36 Weak Mutation 415: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - ReplaceVariable valOffset -> offset
   * 37 Weak Mutation 406: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:326 - ReplaceComparisonOperator <= -> ==
   * 38 Weak Mutation 420: gnu.trove.list.array.TFloatArrayList.set(I[FII)V:329 - ReplaceVariable offset -> valOffset
   */

  @Test
  public void test25()  throws Throwable  {
      float[] floatArray0 = new float[8];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
      assertNotNull(tFloatArrayList0);
      
      // Undeclared exception!
      try {
        tFloatArrayList0.set(0, floatArray0, 139, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 11 covered goals:
   * 1 Weak Mutation 432: gnu.trove.list.array.TFloatArrayList.setQuick(IF)V:337 - InsertUnaryOp Negation of offset
   * 2 Weak Mutation 433: gnu.trove.list.array.TFloatArrayList.setQuick(IF)V:337 - InsertUnaryOp IINC 1 offset
   * 3 Weak Mutation 434: gnu.trove.list.array.TFloatArrayList.setQuick(IF)V:337 - InsertUnaryOp IINC -1 offset
   * 4 Weak Mutation 435: gnu.trove.list.array.TFloatArrayList.setQuick(IF)V:337 - InsertUnaryOp Negation of val
   * 5 Weak Mutation 431: gnu.trove.list.array.TFloatArrayList.setQuick(IF)V:337 - DeleteField: _data[F
   * 6 gnu.trove.list.array.TFloatArrayList.setQuick(IF)V: root-Branch
   * 7 Weak Mutation 432: gnu.trove.list.array.TFloatArrayList.setQuick(IF)V:337 - InsertUnaryOp Negation of offset
   * 8 Weak Mutation 433: gnu.trove.list.array.TFloatArrayList.setQuick(IF)V:337 - InsertUnaryOp IINC 1 offset
   * 9 Weak Mutation 434: gnu.trove.list.array.TFloatArrayList.setQuick(IF)V:337 - InsertUnaryOp IINC -1 offset
   * 10 Weak Mutation 435: gnu.trove.list.array.TFloatArrayList.setQuick(IF)V:337 - InsertUnaryOp Negation of val
   * 11 Weak Mutation 431: gnu.trove.list.array.TFloatArrayList.setQuick(IF)V:337 - DeleteField: _data[F
   */

  @Test
  public void test26()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(645, 645);
      // Undeclared exception!
      try {
        tFloatArrayList0.setQuick(645, 0.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 645
         //
      }
  }

  //Test case number: 27
  /*
   * 20 covered goals:
   * 1 Weak Mutation 440: gnu.trove.list.array.TFloatArrayList.clear()V:343 - ReplaceConstant - 10 -> 11
   * 2 Weak Mutation 441: gnu.trove.list.array.TFloatArrayList.clear()V:343 - DeleteStatement: clear(I)V
   * 3 Weak Mutation 436: gnu.trove.list.array.TFloatArrayList.clear()V:343 - ReplaceConstant - 10 -> 0
   * 4 Weak Mutation 437: gnu.trove.list.array.TFloatArrayList.clear()V:343 - ReplaceConstant - 10 -> 1
   * 5 Weak Mutation 438: gnu.trove.list.array.TFloatArrayList.clear()V:343 - ReplaceConstant - 10 -> -1
   * 6 Weak Mutation 439: gnu.trove.list.array.TFloatArrayList.clear()V:343 - ReplaceConstant - 10 -> 9
   * 7 Weak Mutation 775: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:582 - ReplaceComparisonOperator != -> ==
   * 8 Weak Mutation 776: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:583 - DeleteStatement: clear()V
   * 9 Weak Mutation 777: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:584 - ReplaceConstant - 1 -> 0
   * 10 gnu.trove.list.array.TFloatArrayList.clear()V: root-Branch
   * 11 gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z: I4 Branch 45 IF_ACMPNE L582 - false
   * 12 Weak Mutation 440: gnu.trove.list.array.TFloatArrayList.clear()V:343 - ReplaceConstant - 10 -> 11
   * 13 Weak Mutation 441: gnu.trove.list.array.TFloatArrayList.clear()V:343 - DeleteStatement: clear(I)V
   * 14 Weak Mutation 436: gnu.trove.list.array.TFloatArrayList.clear()V:343 - ReplaceConstant - 10 -> 0
   * 15 Weak Mutation 437: gnu.trove.list.array.TFloatArrayList.clear()V:343 - ReplaceConstant - 10 -> 1
   * 16 Weak Mutation 438: gnu.trove.list.array.TFloatArrayList.clear()V:343 - ReplaceConstant - 10 -> -1
   * 17 Weak Mutation 439: gnu.trove.list.array.TFloatArrayList.clear()V:343 - ReplaceConstant - 10 -> 9
   * 18 Weak Mutation 775: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:582 - ReplaceComparisonOperator != -> ==
   * 19 Weak Mutation 776: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:583 - DeleteStatement: clear()V
   * 20 Weak Mutation 777: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:584 - ReplaceConstant - 1 -> 0
   */

  @Test
  public void test27()  throws Throwable  {
      float[] floatArray0 = new float[4];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      assertEquals("{0.0, 0.0, 0.0, 0.0}", tFloatArrayList0.toString());
      
      boolean boolean0 = tFloatArrayList0.removeAll((TFloatCollection) tFloatArrayList0);
      assertEquals(0, tFloatArrayList0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 28
  /*
   * 6 covered goals:
   * 1 Weak Mutation 449: gnu.trove.list.array.TFloatArrayList.reset()V:364 - DeleteField: no_entry_valueF
   * 2 Weak Mutation 446: gnu.trove.list.array.TFloatArrayList.reset()V:363 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 447: gnu.trove.list.array.TFloatArrayList.reset()V:364 - DeleteField: _data[F
   * 4 Weak Mutation 450: gnu.trove.list.array.TFloatArrayList.reset()V:364 - DeleteStatement: fill([FF)V
   * 5 Weak Mutation 448: gnu.trove.list.array.TFloatArrayList.reset()V:364 - InsertUnaryOp Negation
   * 6 Weak Mutation 449: gnu.trove.list.array.TFloatArrayList.reset()V:364 - DeleteField: no_entry_valueF
   */

//   @Test
//   public void test28()  throws Throwable  {
//       float[] floatArray0 = new float[3];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, 2041.2944F);
//       assertNotNull(tFloatArrayList0);
//       
//       tFloatArrayList0.reset();
//       assertEquals(true, tFloatArrayList0.isEmpty());
//       assertEquals(2041.2944F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 29
  /*
   * 3 covered goals:
   * 1 Weak Mutation 451: gnu.trove.list.array.TFloatArrayList.resetQuick()V:377 - ReplaceConstant - 0 -> 1
   * 2 gnu.trove.list.array.TFloatArrayList.resetQuick()V: root-Branch
   * 3 Weak Mutation 451: gnu.trove.list.array.TFloatArrayList.resetQuick()V:377 - ReplaceConstant - 0 -> 1
   */

//   @Test
//   public void test29()  throws Throwable  {
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
//       tFloatArrayList0.resetQuick();
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(true, tFloatArrayList0.isEmpty());
//       assertEquals(0, tFloatArrayList0.size());
//   }

  //Test case number: 30
  /*
   * 187 covered goals:
   * 1 Weak Mutation 462: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - ReplaceComparisonOperator >= -> -1
   * 2 Weak Mutation 459: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - DeleteField: _posI
   * 3 Weak Mutation 458: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - InsertUnaryOp -1
   * 4 Weak Mutation 457: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - InsertUnaryOp +1
   * 5 Weak Mutation 456: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - InsertUnaryOp Negation
   * 6 Weak Mutation 455: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - InsertUnaryOp IINC -1 index
   * 7 Weak Mutation 454: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - InsertUnaryOp IINC 1 index
   * 8 Weak Mutation 453: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - InsertUnaryOp Negation of index
   * 9 Weak Mutation 452: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - ReplaceConstant - 0 -> 1
   * 10 Weak Mutation 471: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - ReplaceComparisonOperator != -> -1
   * 11 Weak Mutation 468: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - DeleteStatement: floatSub(FF)I
   * 12 Weak Mutation 466: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - InsertUnaryOp IINC 1 index
   * 13 Weak Mutation 467: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - InsertUnaryOp IINC -1 index
   * 14 Weak Mutation 464: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - DeleteField: _data[F
   * 15 Weak Mutation 465: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - InsertUnaryOp Negation of index
   * 16 Weak Mutation 463: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - InsertUnaryOp Negation of value
   * 17 Weak Mutation 476: gnu.trove.list.array.TFloatArrayList.remove(F)Z:385 - DeleteStatement: remove(II)V
   * 18 Weak Mutation 474: gnu.trove.list.array.TFloatArrayList.remove(F)Z:385 - InsertUnaryOp IINC -1 index
   * 19 Weak Mutation 475: gnu.trove.list.array.TFloatArrayList.remove(F)Z:385 - ReplaceConstant - 1 -> 0
   * 20 Weak Mutation 472: gnu.trove.list.array.TFloatArrayList.remove(F)Z:385 - InsertUnaryOp Negation of index
   * 21 Weak Mutation 473: gnu.trove.list.array.TFloatArrayList.remove(F)Z:385 - InsertUnaryOp IINC 1 index
   * 22 Weak Mutation 477: gnu.trove.list.array.TFloatArrayList.remove(F)Z:386 - ReplaceConstant - 1 -> 0
   * 23 Weak Mutation 493: gnu.trove.list.array.TFloatArrayList.remove(II)V:403 - ReplaceComparisonOperator != -> <
   * 24 Weak Mutation 492: gnu.trove.list.array.TFloatArrayList.remove(II)V:403 - InsertUnaryOp IINC -1 length
   * 25 Weak Mutation 489: gnu.trove.list.array.TFloatArrayList.remove(II)V:403 - ReplaceVariable length -> offset
   * 26 Weak Mutation 491: gnu.trove.list.array.TFloatArrayList.remove(II)V:403 - InsertUnaryOp IINC 1 length
   * 27 Weak Mutation 490: gnu.trove.list.array.TFloatArrayList.remove(II)V:403 - InsertUnaryOp Negation of length
   * 28 Weak Mutation 508: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp +1
   * 29 Weak Mutation 509: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp -1
   * 30 Weak Mutation 510: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - DeleteField: _posI
   * 31 Weak Mutation 504: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp Negation of offset
   * 32 Weak Mutation 505: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp IINC 1 offset
   * 33 Weak Mutation 506: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp IINC -1 offset
   * 34 Weak Mutation 507: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp Negation
   * 35 Weak Mutation 501: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - ReplaceComparisonOperator < -> <=
   * 36 Weak Mutation 503: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - ReplaceVariable offset -> length
   * 37 Weak Mutation 496: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - ReplaceVariable offset -> length
   * 38 Weak Mutation 497: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp Negation of offset
   * 39 Weak Mutation 498: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp IINC 1 offset
   * 40 Weak Mutation 499: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp IINC -1 offset
   * 41 Weak Mutation 512: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - ReplaceComparisonOperator < -> -2
   * 42 Weak Mutation 518: gnu.trove.list.array.TFloatArrayList.remove(II)V:408 - ReplaceVariable offset -> length
   * 43 Weak Mutation 519: gnu.trove.list.array.TFloatArrayList.remove(II)V:408 - InsertUnaryOp Negation of offset
   * 44 Weak Mutation 524: gnu.trove.list.array.TFloatArrayList.remove(II)V:408 - ReplaceComparisonOperator != -> -1
   * 45 Weak Mutation 520: gnu.trove.list.array.TFloatArrayList.remove(II)V:408 - InsertUnaryOp IINC 1 offset
   * 46 Weak Mutation 521: gnu.trove.list.array.TFloatArrayList.remove(II)V:408 - InsertUnaryOp IINC -1 offset
   * 47 Weak Mutation 544: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 48 Weak Mutation 525: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - DeleteField: _data[F
   * 49 Weak Mutation 526: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - ReplaceVariable length -> offset
   * 50 Weak Mutation 527: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp Negation of length
   * 51 Weak Mutation 533: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp +1
   * 52 Weak Mutation 532: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp Negation
   * 53 Weak Mutation 535: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - DeleteField: _posI
   * 54 Weak Mutation 534: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp -1
   * 55 Weak Mutation 529: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp IINC -1 length
   * 56 Weak Mutation 528: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp IINC 1 length
   * 57 Weak Mutation 531: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - ReplaceConstant - 0 -> 1
   * 58 Weak Mutation 530: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - DeleteField: _data[F
   * 59 Weak Mutation 540: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - ReplaceArithmeticOperator - -> +
   * 60 Weak Mutation 543: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - ReplaceArithmeticOperator - -> *
   * 61 Weak Mutation 542: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - ReplaceArithmeticOperator - -> /
   * 62 Weak Mutation 537: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp Negation of length
   * 63 Weak Mutation 536: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - ReplaceVariable length -> offset
   * 64 Weak Mutation 539: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp IINC -1 length
   * 65 Weak Mutation 538: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp IINC 1 length
   * 66 Weak Mutation 610: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - InsertUnaryOp IINC -1 length
   * 67 Weak Mutation 611: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - ReplaceArithmeticOperator - -> +
   * 68 Weak Mutation 608: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - InsertUnaryOp Negation of length
   * 69 Weak Mutation 609: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - InsertUnaryOp IINC 1 length
   * 70 Weak Mutation 614: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - ReplaceArithmeticOperator - -> *
   * 71 Weak Mutation 613: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - ReplaceArithmeticOperator - -> /
   * 72 Weak Mutation 603: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - InsertUnaryOp Negation
   * 73 Weak Mutation 605: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - InsertUnaryOp -1
   * 74 Weak Mutation 604: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - InsertUnaryOp +1
   * 75 Weak Mutation 607: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - ReplaceVariable length -> offset
   * 76 Weak Mutation 606: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - DeleteField: _posI
   * 77 Weak Mutation 778: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:586 - ReplaceConstant - 0 -> 1
   * 78 Weak Mutation 779: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:587 - DeleteStatement: iterator()Lgnu/trove/iterator/TFloatIterator;
   * 79 Weak Mutation 780: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:588 - DeleteStatement: hasNext()Z
   * 80 Weak Mutation 781: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:588 - ReplaceComparisonOperator == -> !=
   * 81 Weak Mutation 782: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:589 - DeleteStatement: next()F
   * 82 Weak Mutation 785: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:590 - ReplaceComparisonOperator == -> !=
   * 83 Weak Mutation 784: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:590 - DeleteStatement: remove(F)Z
   * 84 Weak Mutation 783: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:590 - InsertUnaryOp Negation of element
   * 85 Weak Mutation 786: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:591 - ReplaceConstant - 1 -> 0
   * 86 Weak Mutation 789: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:594 - InsertUnaryOp IINC -1 changed
   * 87 Weak Mutation 788: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:594 - InsertUnaryOp IINC 1 changed
   * 88 Weak Mutation 787: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:594 - InsertUnaryOp Negation of changed
   * 89 Weak Mutation 1784: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - ReplaceComparisonOperator >= -> ==
   * 90 gnu.trove.list.array.TFloatArrayList.remove(F)Z: I8 Branch 14 IF_ICMPGE L383 - false
   * 91 gnu.trove.list.array.TFloatArrayList.remove(F)Z: I17 Branch 15 IFNE L384 - false
   * 92 gnu.trove.list.array.TFloatArrayList.remove(II)V: I3 Branch 16 IFNE L403 - true
   * 93 gnu.trove.list.array.TFloatArrayList.remove(II)V: I8 Branch 17 IFLT L404 - false
   * 94 gnu.trove.list.array.TFloatArrayList.remove(II)V: I12 Branch 18 IF_ICMPLT L404 - true
   * 95 gnu.trove.list.array.TFloatArrayList.remove(II)V: I23 Branch 19 IFNE L408 - false
   * 96 gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z: I26 Branch 46 IFEQ L588 - true
   * 97 gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z: I26 Branch 46 IFEQ L588 - false
   * 98 gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z: I37 Branch 47 IFEQ L590 - false
   * 99 Weak Mutation 476: gnu.trove.list.array.TFloatArrayList.remove(F)Z:385 - DeleteStatement: remove(II)V
   * 100 Weak Mutation 477: gnu.trove.list.array.TFloatArrayList.remove(F)Z:386 - ReplaceConstant - 1 -> 0
   * 101 Weak Mutation 474: gnu.trove.list.array.TFloatArrayList.remove(F)Z:385 - InsertUnaryOp IINC -1 index
   * 102 Weak Mutation 475: gnu.trove.list.array.TFloatArrayList.remove(F)Z:385 - ReplaceConstant - 1 -> 0
   * 103 Weak Mutation 472: gnu.trove.list.array.TFloatArrayList.remove(F)Z:385 - InsertUnaryOp Negation of index
   * 104 Weak Mutation 473: gnu.trove.list.array.TFloatArrayList.remove(F)Z:385 - InsertUnaryOp IINC 1 index
   * 105 Weak Mutation 471: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - ReplaceComparisonOperator != -> -1
   * 106 Weak Mutation 468: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - DeleteStatement: floatSub(FF)I
   * 107 Weak Mutation 466: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - InsertUnaryOp IINC 1 index
   * 108 Weak Mutation 467: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - InsertUnaryOp IINC -1 index
   * 109 Weak Mutation 464: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - DeleteField: _data[F
   * 110 Weak Mutation 465: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - InsertUnaryOp Negation of index
   * 111 Weak Mutation 463: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - InsertUnaryOp Negation of value
   * 112 Weak Mutation 462: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - ReplaceComparisonOperator >= -> -1
   * 113 Weak Mutation 459: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - DeleteField: _posI
   * 114 Weak Mutation 458: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - InsertUnaryOp -1
   * 115 Weak Mutation 457: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - InsertUnaryOp +1
   * 116 Weak Mutation 456: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - InsertUnaryOp Negation
   * 117 Weak Mutation 455: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - InsertUnaryOp IINC -1 index
   * 118 Weak Mutation 454: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - InsertUnaryOp IINC 1 index
   * 119 Weak Mutation 453: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - InsertUnaryOp Negation of index
   * 120 Weak Mutation 452: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - ReplaceConstant - 0 -> 1
   * 121 Weak Mutation 508: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp +1
   * 122 Weak Mutation 509: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp -1
   * 123 Weak Mutation 510: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - DeleteField: _posI
   * 124 Weak Mutation 504: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp Negation of offset
   * 125 Weak Mutation 505: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp IINC 1 offset
   * 126 Weak Mutation 506: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp IINC -1 offset
   * 127 Weak Mutation 507: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp Negation
   * 128 Weak Mutation 501: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - ReplaceComparisonOperator < -> <=
   * 129 Weak Mutation 503: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - ReplaceVariable offset -> length
   * 130 Weak Mutation 496: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - ReplaceVariable offset -> length
   * 131 Weak Mutation 497: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp Negation of offset
   * 132 Weak Mutation 498: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp IINC 1 offset
   * 133 Weak Mutation 499: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp IINC -1 offset
   * 134 Weak Mutation 493: gnu.trove.list.array.TFloatArrayList.remove(II)V:403 - ReplaceComparisonOperator != -> <
   * 135 Weak Mutation 492: gnu.trove.list.array.TFloatArrayList.remove(II)V:403 - InsertUnaryOp IINC -1 length
   * 136 Weak Mutation 489: gnu.trove.list.array.TFloatArrayList.remove(II)V:403 - ReplaceVariable length -> offset
   * 137 Weak Mutation 491: gnu.trove.list.array.TFloatArrayList.remove(II)V:403 - InsertUnaryOp IINC 1 length
   * 138 Weak Mutation 490: gnu.trove.list.array.TFloatArrayList.remove(II)V:403 - InsertUnaryOp Negation of length
   * 139 Weak Mutation 544: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 140 Weak Mutation 518: gnu.trove.list.array.TFloatArrayList.remove(II)V:408 - ReplaceVariable offset -> length
   * 141 Weak Mutation 519: gnu.trove.list.array.TFloatArrayList.remove(II)V:408 - InsertUnaryOp Negation of offset
   * 142 Weak Mutation 512: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - ReplaceComparisonOperator < -> -2
   * 143 Weak Mutation 524: gnu.trove.list.array.TFloatArrayList.remove(II)V:408 - ReplaceComparisonOperator != -> -1
   * 144 Weak Mutation 525: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - DeleteField: _data[F
   * 145 Weak Mutation 526: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - ReplaceVariable length -> offset
   * 146 Weak Mutation 527: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp Negation of length
   * 147 Weak Mutation 520: gnu.trove.list.array.TFloatArrayList.remove(II)V:408 - InsertUnaryOp IINC 1 offset
   * 148 Weak Mutation 521: gnu.trove.list.array.TFloatArrayList.remove(II)V:408 - InsertUnaryOp IINC -1 offset
   * 149 Weak Mutation 533: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp +1
   * 150 Weak Mutation 532: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp Negation
   * 151 Weak Mutation 535: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - DeleteField: _posI
   * 152 Weak Mutation 534: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp -1
   * 153 Weak Mutation 529: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp IINC -1 length
   * 154 Weak Mutation 528: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp IINC 1 length
   * 155 Weak Mutation 531: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - ReplaceConstant - 0 -> 1
   * 156 Weak Mutation 530: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - DeleteField: _data[F
   * 157 Weak Mutation 540: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - ReplaceArithmeticOperator - -> +
   * 158 Weak Mutation 543: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - ReplaceArithmeticOperator - -> *
   * 159 Weak Mutation 542: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - ReplaceArithmeticOperator - -> /
   * 160 Weak Mutation 537: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp Negation of length
   * 161 Weak Mutation 536: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - ReplaceVariable length -> offset
   * 162 Weak Mutation 539: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp IINC -1 length
   * 163 Weak Mutation 538: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp IINC 1 length
   * 164 Weak Mutation 610: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - InsertUnaryOp IINC -1 length
   * 165 Weak Mutation 611: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - ReplaceArithmeticOperator - -> +
   * 166 Weak Mutation 608: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - InsertUnaryOp Negation of length
   * 167 Weak Mutation 609: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - InsertUnaryOp IINC 1 length
   * 168 Weak Mutation 614: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - ReplaceArithmeticOperator - -> *
   * 169 Weak Mutation 613: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - ReplaceArithmeticOperator - -> /
   * 170 Weak Mutation 603: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - InsertUnaryOp Negation
   * 171 Weak Mutation 605: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - InsertUnaryOp -1
   * 172 Weak Mutation 604: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - InsertUnaryOp +1
   * 173 Weak Mutation 607: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - ReplaceVariable length -> offset
   * 174 Weak Mutation 606: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - DeleteField: _posI
   * 175 Weak Mutation 789: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:594 - InsertUnaryOp IINC -1 changed
   * 176 Weak Mutation 788: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:594 - InsertUnaryOp IINC 1 changed
   * 177 Weak Mutation 787: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:594 - InsertUnaryOp Negation of changed
   * 178 Weak Mutation 786: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:591 - ReplaceConstant - 1 -> 0
   * 179 Weak Mutation 785: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:590 - ReplaceComparisonOperator == -> !=
   * 180 Weak Mutation 784: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:590 - DeleteStatement: remove(F)Z
   * 181 Weak Mutation 782: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:589 - DeleteStatement: next()F
   * 182 Weak Mutation 783: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:590 - InsertUnaryOp Negation of element
   * 183 Weak Mutation 780: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:588 - DeleteStatement: hasNext()Z
   * 184 Weak Mutation 781: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:588 - ReplaceComparisonOperator == -> !=
   * 185 Weak Mutation 778: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:586 - ReplaceConstant - 0 -> 1
   * 186 Weak Mutation 779: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:587 - DeleteStatement: iterator()Lgnu/trove/iterator/TFloatIterator;
   * 187 Weak Mutation 1784: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - ReplaceComparisonOperator >= -> ==
   */

  @Test
  public void test30()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(0, (-1365));
      tFloatArrayList0.add((float) (-1365));
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList0);
      assertEquals(1, tFloatArrayList0.size());
      
      boolean boolean0 = tFloatArrayList0.removeAll((TFloatCollection) tUnmodifiableFloatList0);
      assertEquals(true, boolean0);
  }

  //Test case number: 31
  /*
   * 20 covered goals:
   * 1 Weak Mutation 485: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:396 - InsertUnaryOp IINC -1 offset
   * 2 Weak Mutation 484: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:396 - InsertUnaryOp IINC 1 offset
   * 3 Weak Mutation 487: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:396 - DeleteStatement: remove(II)V
   * 4 Weak Mutation 486: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:396 - ReplaceConstant - 1 -> 0
   * 5 Weak Mutation 483: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:396 - InsertUnaryOp Negation of offset
   * 6 Weak Mutation 488: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:397 - InsertUnaryOp Negation of old
   * 7 Weak Mutation 541: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - ReplaceArithmeticOperator - -> %
   * 8 Weak Mutation 612: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - ReplaceArithmeticOperator - -> %
   * 9 Weak Mutation 479: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:395 - InsertUnaryOp Negation of offset
   * 10 Weak Mutation 481: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:395 - InsertUnaryOp IINC -1 offset
   * 11 Weak Mutation 480: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:395 - InsertUnaryOp IINC 1 offset
   * 12 Weak Mutation 482: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:395 - DeleteStatement: get(I)F
   * 13 Weak Mutation 488: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:397 - InsertUnaryOp Negation of old
   * 14 Weak Mutation 485: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:396 - InsertUnaryOp IINC -1 offset
   * 15 Weak Mutation 484: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:396 - InsertUnaryOp IINC 1 offset
   * 16 Weak Mutation 487: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:396 - DeleteStatement: remove(II)V
   * 17 Weak Mutation 486: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:396 - ReplaceConstant - 1 -> 0
   * 18 Weak Mutation 483: gnu.trove.list.array.TFloatArrayList.removeAt(I)F:396 - InsertUnaryOp Negation of offset
   * 19 Weak Mutation 541: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - ReplaceArithmeticOperator - -> %
   * 20 Weak Mutation 612: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - ReplaceArithmeticOperator - -> %
   */

  @Test
  public void test31()  throws Throwable  {
      float[] floatArray0 = new float[4];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      tFloatArrayList0.removeAt(0);
      assertEquals(3, tFloatArrayList0.size());
  }

  //Test case number: 32
  /*
   * 3 covered goals:
   * 1 Weak Mutation 495: gnu.trove.list.array.TFloatArrayList.remove(II)V:403 - ReplaceComparisonOperator != -> -1
   * 2 gnu.trove.list.array.TFloatArrayList.remove(II)V: I3 Branch 16 IFNE L403 - false
   * 3 Weak Mutation 495: gnu.trove.list.array.TFloatArrayList.remove(II)V:403 - ReplaceComparisonOperator != -> -1
   */

//   @Test
//   public void test32()  throws Throwable  {
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
//       tFloatArrayList0.remove(865, 0);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(true, tFloatArrayList0.isEmpty());
//   }

  //Test case number: 33
  /*
   * 13 covered goals:
   * 1 Weak Mutation 494: gnu.trove.list.array.TFloatArrayList.remove(II)V:403 - ReplaceComparisonOperator != -> >
   * 2 Weak Mutation 502: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - ReplaceComparisonOperator < -> -2
   * 3 Weak Mutation 516: gnu.trove.list.array.TFloatArrayList.remove(II)V:405 - InsertUnaryOp IINC 1 offset
   * 4 Weak Mutation 517: gnu.trove.list.array.TFloatArrayList.remove(II)V:405 - InsertUnaryOp IINC -1 offset
   * 5 Weak Mutation 514: gnu.trove.list.array.TFloatArrayList.remove(II)V:405 - ReplaceVariable offset -> length
   * 6 Weak Mutation 515: gnu.trove.list.array.TFloatArrayList.remove(II)V:405 - InsertUnaryOp Negation of offset
   * 7 gnu.trove.list.array.TFloatArrayList.remove(II)V: I8 Branch 17 IFLT L404 - true
   * 8 Weak Mutation 502: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - ReplaceComparisonOperator < -> -2
   * 9 Weak Mutation 494: gnu.trove.list.array.TFloatArrayList.remove(II)V:403 - ReplaceComparisonOperator != -> >
   * 10 Weak Mutation 516: gnu.trove.list.array.TFloatArrayList.remove(II)V:405 - InsertUnaryOp IINC 1 offset
   * 11 Weak Mutation 517: gnu.trove.list.array.TFloatArrayList.remove(II)V:405 - InsertUnaryOp IINC -1 offset
   * 12 Weak Mutation 514: gnu.trove.list.array.TFloatArrayList.remove(II)V:405 - ReplaceVariable offset -> length
   * 13 Weak Mutation 515: gnu.trove.list.array.TFloatArrayList.remove(II)V:405 - InsertUnaryOp Negation of offset
   */

  @Test
  public void test33()  throws Throwable  {
      float[] floatArray0 = new float[5];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      // Undeclared exception!
      try {
        tFloatArrayList0.remove((-8), (-481));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -8
         //
      }
  }

  //Test case number: 34
  /*
   * 47 covered goals:
   * 1 Weak Mutation 511: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - ReplaceComparisonOperator < -> !=
   * 2 Weak Mutation 500: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - ReplaceComparisonOperator < -> !=
   * 3 Weak Mutation 733: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:551 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 734: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:552 - DeleteStatement: sort([F)V
   * 5 Weak Mutation 735: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:553 - DeleteField: _data[F
   * 6 Weak Mutation 739: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:555 - InsertUnaryOp IINC -1 i
   * 7 Weak Mutation 738: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:555 - InsertUnaryOp IINC 1 i
   * 8 Weak Mutation 737: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:555 - InsertUnaryOp Negation of i
   * 9 Weak Mutation 736: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:555 - ReplaceVariable data -> array
   * 10 Weak Mutation 742: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:555 - ReplaceComparisonOperator <= -> -1
   * 11 Weak Mutation 747: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - InsertUnaryOp IINC -1 i
   * 12 Weak Mutation 746: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - InsertUnaryOp IINC 1 i
   * 13 Weak Mutation 745: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - InsertUnaryOp Negation of i
   * 14 Weak Mutation 744: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - ReplaceVariable data -> array
   * 15 Weak Mutation 751: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - ReplaceComparisonOperator >= -> -1
   * 16 Weak Mutation 748: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - DeleteStatement: binarySearch([FF)I
   * 17 Weak Mutation 743: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - ReplaceVariable array -> data
   * 18 Weak Mutation 754: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:557 - InsertUnaryOp IINC -1 i
   * 19 Weak Mutation 755: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:557 - ReplaceConstant - 1 -> 0
   * 20 Weak Mutation 752: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:557 - InsertUnaryOp Negation of i
   * 21 Weak Mutation 753: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:557 - InsertUnaryOp IINC 1 i
   * 22 Weak Mutation 756: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:557 - DeleteStatement: remove(II)V
   * 23 gnu.trove.list.array.TFloatArrayList.remove(II)V: I12 Branch 18 IF_ICMPLT L404 - false
   * 24 gnu.trove.list.array.TFloatArrayList.retainAll([F)Z: I21 Branch 40 IFLE L555 - false
   * 25 gnu.trove.list.array.TFloatArrayList.retainAll([F)Z: I29 Branch 41 IFGE L556 - false
   * 26 Weak Mutation 511: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - ReplaceComparisonOperator < -> !=
   * 27 Weak Mutation 500: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - ReplaceComparisonOperator < -> !=
   * 28 Weak Mutation 747: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - InsertUnaryOp IINC -1 i
   * 29 Weak Mutation 746: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - InsertUnaryOp IINC 1 i
   * 30 Weak Mutation 745: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - InsertUnaryOp Negation of i
   * 31 Weak Mutation 744: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - ReplaceVariable data -> array
   * 32 Weak Mutation 751: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - ReplaceComparisonOperator >= -> -1
   * 33 Weak Mutation 748: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - DeleteStatement: binarySearch([FF)I
   * 34 Weak Mutation 739: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:555 - InsertUnaryOp IINC -1 i
   * 35 Weak Mutation 738: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:555 - InsertUnaryOp IINC 1 i
   * 36 Weak Mutation 737: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:555 - InsertUnaryOp Negation of i
   * 37 Weak Mutation 736: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:555 - ReplaceVariable data -> array
   * 38 Weak Mutation 743: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - ReplaceVariable array -> data
   * 39 Weak Mutation 742: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:555 - ReplaceComparisonOperator <= -> -1
   * 40 Weak Mutation 754: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:557 - InsertUnaryOp IINC -1 i
   * 41 Weak Mutation 755: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:557 - ReplaceConstant - 1 -> 0
   * 42 Weak Mutation 752: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:557 - InsertUnaryOp Negation of i
   * 43 Weak Mutation 753: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:557 - InsertUnaryOp IINC 1 i
   * 44 Weak Mutation 756: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:557 - DeleteStatement: remove(II)V
   * 45 Weak Mutation 733: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:551 - ReplaceConstant - 0 -> 1
   * 46 Weak Mutation 734: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:552 - DeleteStatement: sort([F)V
   * 47 Weak Mutation 735: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:553 - DeleteField: _data[F
   */

  @Test
  public void test34()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) 508;
      floatArray0[1] = (float) 508;
      floatArray0[2] = (float) 508;
      // Undeclared exception!
      try {
        tFloatArrayList0.retainAll(floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 9
         //
      }
  }

  //Test case number: 35
  /*
   * 6 covered goals:
   * 1 Weak Mutation 513: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - ReplaceComparisonOperator < -> <=
   * 2 Weak Mutation 516: gnu.trove.list.array.TFloatArrayList.remove(II)V:405 - InsertUnaryOp IINC 1 offset
   * 3 Weak Mutation 517: gnu.trove.list.array.TFloatArrayList.remove(II)V:405 - InsertUnaryOp IINC -1 offset
   * 4 Weak Mutation 514: gnu.trove.list.array.TFloatArrayList.remove(II)V:405 - ReplaceVariable offset -> length
   * 5 Weak Mutation 515: gnu.trove.list.array.TFloatArrayList.remove(II)V:405 - InsertUnaryOp Negation of offset
   * 6 Weak Mutation 513: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - ReplaceComparisonOperator < -> <=
   */

  @Test
  public void test35()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(0, (-1365));
      // Undeclared exception!
      try {
        tFloatArrayList0.remove(0, 37);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
      }
  }

  //Test case number: 36
  /*
   * 118 covered goals:
   * 1 Weak Mutation 522: gnu.trove.list.array.TFloatArrayList.remove(II)V:408 - ReplaceComparisonOperator != -> <
   * 2 Weak Mutation 550: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp Negation of length
   * 3 Weak Mutation 551: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp IINC 1 length
   * 4 Weak Mutation 548: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - DeleteField: _posI
   * 5 Weak Mutation 549: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - ReplaceVariable length -> offset
   * 6 Weak Mutation 546: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp +1
   * 7 Weak Mutation 547: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp -1
   * 8 Weak Mutation 545: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp Negation
   * 9 Weak Mutation 558: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp Negation of offset
   * 10 Weak Mutation 559: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp IINC 1 offset
   * 11 Weak Mutation 556: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - ReplaceArithmeticOperator - -> *
   * 12 Weak Mutation 557: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - ReplaceVariable offset -> length
   * 13 Weak Mutation 554: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - ReplaceArithmeticOperator - -> %
   * 14 Weak Mutation 555: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - ReplaceArithmeticOperator - -> /
   * 15 Weak Mutation 552: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp IINC -1 length
   * 16 Weak Mutation 553: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - ReplaceArithmeticOperator - -> +
   * 17 Weak Mutation 562: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - ReplaceComparisonOperator != -> <
   * 18 Weak Mutation 560: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp IINC -1 offset
   * 19 Weak Mutation 567: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC 1 offset
   * 20 Weak Mutation 566: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp Negation of offset
   * 21 Weak Mutation 565: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceVariable offset -> length
   * 22 Weak Mutation 564: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - DeleteField: _data[F
   * 23 Weak Mutation 575: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> /
   * 24 Weak Mutation 574: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> %
   * 25 Weak Mutation 573: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> -
   * 26 Weak Mutation 572: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC -1 length
   * 27 Weak Mutation 571: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC 1 length
   * 28 Weak Mutation 570: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp Negation of length
   * 29 Weak Mutation 569: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceVariable length -> offset
   * 30 Weak Mutation 568: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC -1 offset
   * 31 Weak Mutation 576: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> *
   * 32 Weak Mutation 577: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - DeleteField: _data[F
   * 33 Weak Mutation 578: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceVariable offset -> length
   * 34 Weak Mutation 579: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp Negation of offset
   * 35 Weak Mutation 580: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC 1 offset
   * 36 Weak Mutation 581: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC -1 offset
   * 37 Weak Mutation 582: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp Negation
   * 38 Weak Mutation 583: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp +1
   * 39 Weak Mutation 584: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp -1
   * 40 Weak Mutation 585: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - DeleteField: _posI
   * 41 Weak Mutation 586: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceVariable offset -> length
   * 42 Weak Mutation 587: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp Negation of offset
   * 43 Weak Mutation 588: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC 1 offset
   * 44 Weak Mutation 589: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC -1 offset
   * 45 Weak Mutation 590: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceVariable length -> offset
   * 46 Weak Mutation 591: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp Negation of length
   * 47 Weak Mutation 593: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC -1 length
   * 48 Weak Mutation 592: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC 1 length
   * 49 Weak Mutation 595: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> %
   * 50 Weak Mutation 594: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> -
   * 51 Weak Mutation 597: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> *
   * 52 Weak Mutation 596: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> /
   * 53 Weak Mutation 599: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator - -> %
   * 54 Weak Mutation 598: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator - -> +
   * 55 Weak Mutation 601: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator - -> *
   * 56 Weak Mutation 600: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator - -> /
   * 57 Weak Mutation 602: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 58 gnu.trove.list.array.TFloatArrayList.remove(II)V: I23 Branch 19 IFNE L408 - true
   * 59 gnu.trove.list.array.TFloatArrayList.remove(II)V: I45 Branch 20 IF_ICMPNE L412 - true
   * 60 Weak Mutation 469: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - ReplaceComparisonOperator != -> <
   * 61 Weak Mutation 550: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp Negation of length
   * 62 Weak Mutation 551: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp IINC 1 length
   * 63 Weak Mutation 548: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - DeleteField: _posI
   * 64 Weak Mutation 549: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - ReplaceVariable length -> offset
   * 65 Weak Mutation 546: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp +1
   * 66 Weak Mutation 547: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp -1
   * 67 Weak Mutation 545: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp Negation
   * 68 Weak Mutation 558: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp Negation of offset
   * 69 Weak Mutation 559: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp IINC 1 offset
   * 70 Weak Mutation 556: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - ReplaceArithmeticOperator - -> *
   * 71 Weak Mutation 557: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - ReplaceVariable offset -> length
   * 72 Weak Mutation 554: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - ReplaceArithmeticOperator - -> %
   * 73 Weak Mutation 555: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - ReplaceArithmeticOperator - -> /
   * 74 Weak Mutation 552: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp IINC -1 length
   * 75 Weak Mutation 553: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - ReplaceArithmeticOperator - -> +
   * 76 Weak Mutation 567: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC 1 offset
   * 77 Weak Mutation 566: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp Negation of offset
   * 78 Weak Mutation 565: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceVariable offset -> length
   * 79 Weak Mutation 564: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - DeleteField: _data[F
   * 80 Weak Mutation 562: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - ReplaceComparisonOperator != -> <
   * 81 Weak Mutation 560: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp IINC -1 offset
   * 82 Weak Mutation 575: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> /
   * 83 Weak Mutation 574: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> %
   * 84 Weak Mutation 573: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> -
   * 85 Weak Mutation 572: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC -1 length
   * 86 Weak Mutation 571: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC 1 length
   * 87 Weak Mutation 570: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp Negation of length
   * 88 Weak Mutation 569: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceVariable length -> offset
   * 89 Weak Mutation 568: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC -1 offset
   * 90 Weak Mutation 522: gnu.trove.list.array.TFloatArrayList.remove(II)V:408 - ReplaceComparisonOperator != -> <
   * 91 Weak Mutation 576: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> *
   * 92 Weak Mutation 577: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - DeleteField: _data[F
   * 93 Weak Mutation 578: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceVariable offset -> length
   * 94 Weak Mutation 579: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp Negation of offset
   * 95 Weak Mutation 580: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC 1 offset
   * 96 Weak Mutation 581: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC -1 offset
   * 97 Weak Mutation 582: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp Negation
   * 98 Weak Mutation 583: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp +1
   * 99 Weak Mutation 584: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp -1
   * 100 Weak Mutation 585: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - DeleteField: _posI
   * 101 Weak Mutation 586: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceVariable offset -> length
   * 102 Weak Mutation 587: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp Negation of offset
   * 103 Weak Mutation 588: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC 1 offset
   * 104 Weak Mutation 589: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC -1 offset
   * 105 Weak Mutation 590: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceVariable length -> offset
   * 106 Weak Mutation 591: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp Negation of length
   * 107 Weak Mutation 593: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC -1 length
   * 108 Weak Mutation 592: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC 1 length
   * 109 Weak Mutation 595: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> %
   * 110 Weak Mutation 594: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> -
   * 111 Weak Mutation 597: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> *
   * 112 Weak Mutation 596: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> /
   * 113 Weak Mutation 599: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator - -> %
   * 114 Weak Mutation 598: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator - -> +
   * 115 Weak Mutation 601: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator - -> *
   * 116 Weak Mutation 600: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator - -> /
   * 117 Weak Mutation 602: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 118 gnu.trove.list.array.TFloatArrayList.remove(F)Z: I17 Branch 15 IFNE L384 - true
   */

//   @Test
//   public void test36()  throws Throwable  {
//       float[] floatArray0 = new float[12];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
//       assertNotNull(tFloatArrayList0);
//       
//       floatArray0[4] = 597.4638F;
//       TFloatArrayList tFloatArrayList1 = TFloatArrayList.wrap(floatArray0, 0.0F);
//       boolean boolean0 = tFloatArrayList1.removeAll((TFloatCollection) tFloatArrayList0);
//       assertEquals(0.0F, tFloatArrayList1.sum(), 0.01F);
//       assertEquals(true, boolean0);
//   }

  //Test case number: 37
  /*
   * 9 covered goals:
   * 1 Weak Mutation 618: gnu.trove.list.array.TFloatArrayList.containsAll(Ljava/util/Collection;)Z:436 - ReplaceComparisonOperator == -> !=
   * 2 Weak Mutation 616: gnu.trove.list.array.TFloatArrayList.containsAll(Ljava/util/Collection;)Z:436 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 3 Weak Mutation 617: gnu.trove.list.array.TFloatArrayList.containsAll(Ljava/util/Collection;)Z:436 - DeleteStatement: hasNext()Z
   * 4 Weak Mutation 627: gnu.trove.list.array.TFloatArrayList.containsAll(Ljava/util/Collection;)Z:447 - ReplaceConstant - 1 -> 0
   * 5 gnu.trove.list.array.TFloatArrayList.containsAll(Ljava/util/Collection;)Z: I8 Branch 21 IFEQ L436 - true
   * 6 Weak Mutation 618: gnu.trove.list.array.TFloatArrayList.containsAll(Ljava/util/Collection;)Z:436 - ReplaceComparisonOperator == -> !=
   * 7 Weak Mutation 616: gnu.trove.list.array.TFloatArrayList.containsAll(Ljava/util/Collection;)Z:436 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 8 Weak Mutation 617: gnu.trove.list.array.TFloatArrayList.containsAll(Ljava/util/Collection;)Z:436 - DeleteStatement: hasNext()Z
   * 9 Weak Mutation 627: gnu.trove.list.array.TFloatArrayList.containsAll(Ljava/util/Collection;)Z:447 - ReplaceConstant - 1 -> 0
   */

//   @Test
//   public void test37()  throws Throwable  {
//       float[] floatArray0 = new float[5];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, 0.0F);
//       assertNotNull(tFloatArrayList0);
//       
//       LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
//       boolean boolean0 = tFloatArrayList0.containsAll((Collection<?>) linkedList0);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(true, boolean0);
//   }

  //Test case number: 38
  /*
   * 4 covered goals:
   * 1 Weak Mutation 629: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:454 - ReplaceConstant - 1 -> 0
   * 2 gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z: I4 Branch 24 IF_ACMPNE L453 - false
   * 3 Weak Mutation 629: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:454 - ReplaceConstant - 1 -> 0
   * 4 Weak Mutation 628: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:453 - ReplaceComparisonOperator != -> ==
   */

//   @Test
//   public void test38()  throws Throwable  {
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(19373, (-358.5751F));
//       boolean boolean0 = tFloatArrayList0.containsAll((TFloatCollection) tFloatArrayList0);
//       assertEquals((-358.5751F), tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(0, tFloatArrayList0.size());
//       assertEquals(true, boolean0);
//   }

  //Test case number: 39
  /*
   * 85 covered goals:
   * 1 Weak Mutation 633: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:458 - DeleteStatement: next()F
   * 2 Weak Mutation 635: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:459 - DeleteStatement: contains(F)Z
   * 3 Weak Mutation 634: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:459 - InsertUnaryOp Negation of element
   * 4 Weak Mutation 636: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:459 - ReplaceComparisonOperator != -> ==
   * 5 Weak Mutation 1485: gnu.trove.list.array.TFloatArrayList.lastIndexOf(F)I:881 - DeleteStatement: lastIndexOf(IF)I
   * 6 Weak Mutation 1484: gnu.trove.list.array.TFloatArrayList.lastIndexOf(F)I:881 - InsertUnaryOp Negation of value
   * 7 Weak Mutation 1483: gnu.trove.list.array.TFloatArrayList.lastIndexOf(F)I:881 - DeleteField: _posI
   * 8 Weak Mutation 1482: gnu.trove.list.array.TFloatArrayList.lastIndexOf(F)I:881 - InsertUnaryOp -1
   * 9 Weak Mutation 1481: gnu.trove.list.array.TFloatArrayList.lastIndexOf(F)I:881 - InsertUnaryOp +1
   * 10 Weak Mutation 1480: gnu.trove.list.array.TFloatArrayList.lastIndexOf(F)I:881 - InsertUnaryOp Negation
   * 11 Weak Mutation 1492: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - InsertUnaryOp IINC -1 i
   * 12 Weak Mutation 1493: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - ReplaceVariable i -> offset
   * 13 Weak Mutation 1490: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - InsertUnaryOp Negation of i
   * 14 Weak Mutation 1491: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - InsertUnaryOp IINC 1 i
   * 15 Weak Mutation 1488: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - InsertUnaryOp IINC -1 offset
   * 16 Weak Mutation 1496: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - ReplaceComparisonOperator <= -> -1
   * 17 Weak Mutation 1487: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - InsertUnaryOp IINC 1 offset
   * 18 Weak Mutation 1486: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - InsertUnaryOp Negation of offset
   * 19 Weak Mutation 1502: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - InsertUnaryOp Negation of value
   * 20 Weak Mutation 1503: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - DeleteStatement: floatSub(FF)I
   * 21 Weak Mutation 1500: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - InsertUnaryOp IINC 1 i
   * 22 Weak Mutation 1501: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - InsertUnaryOp IINC -1 i
   * 23 Weak Mutation 1498: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - ReplaceVariable i -> offset
   * 24 Weak Mutation 1499: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - InsertUnaryOp Negation of i
   * 25 Weak Mutation 1497: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - DeleteField: _data[F
   * 26 Weak Mutation 1506: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - ReplaceComparisonOperator != -> -1
   * 27 Weak Mutation 1509: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:889 - InsertUnaryOp IINC 1 i
   * 28 Weak Mutation 1508: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:889 - InsertUnaryOp Negation of i
   * 29 Weak Mutation 1510: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:889 - InsertUnaryOp IINC -1 i
   * 30 Weak Mutation 1507: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:889 - ReplaceVariable i -> offset
   * 31 Weak Mutation 1517: gnu.trove.list.array.TFloatArrayList.contains(F)Z:898 - ReplaceComparisonOperator < -> <=
   * 32 Weak Mutation 1519: gnu.trove.list.array.TFloatArrayList.contains(F)Z:898 - ReplaceConstant - 1 -> 0
   * 33 Weak Mutation 1515: gnu.trove.list.array.TFloatArrayList.contains(F)Z:898 - DeleteStatement: lastIndexOf(F)I
   * 34 Weak Mutation 1514: gnu.trove.list.array.TFloatArrayList.contains(F)Z:898 - InsertUnaryOp Negation of value
   * 35 gnu.trove.list.array.TFloatArrayList.lastIndexOf(F)I: root-Branch
   * 36 gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z: I18 Branch 25 IFEQ L457 - false
   * 37 gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z: I29 Branch 26 IFNE L459 - true
   * 38 gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I: I7 Branch 84 IFLE L887 - false
   * 39 gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I: I16 Branch 85 IFNE L888 - false
   * 40 gnu.trove.list.array.TFloatArrayList.contains(F)Z: I5 Branch 86 IFLT L898 - false
   * 41 Weak Mutation 638: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:463 - ReplaceConstant - 1 -> 0
   * 42 Weak Mutation 145: gnu.trove.list.array.TFloatArrayList.insert(IF)V:243 - ReplaceComparisonOperator != -> -1
   * 43 Weak Mutation 146: gnu.trove.list.array.TFloatArrayList.insert(IF)V:244 - InsertUnaryOp Negation of value
   * 44 Weak Mutation 147: gnu.trove.list.array.TFloatArrayList.insert(IF)V:244 - DeleteStatement: add(F)Z
   * 45 Weak Mutation 631: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:457 - DeleteStatement: hasNext()Z
   * 46 Weak Mutation 630: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:456 - DeleteStatement: iterator()Lgnu/trove/iterator/TFloatIterator;
   * 47 Weak Mutation 635: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:459 - DeleteStatement: contains(F)Z
   * 48 Weak Mutation 634: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:459 - InsertUnaryOp Negation of element
   * 49 Weak Mutation 633: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:458 - DeleteStatement: next()F
   * 50 Weak Mutation 632: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:457 - ReplaceComparisonOperator == -> !=
   * 51 Weak Mutation 638: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:463 - ReplaceConstant - 1 -> 0
   * 52 Weak Mutation 636: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:459 - ReplaceComparisonOperator != -> ==
   * 53 Weak Mutation 1492: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - InsertUnaryOp IINC -1 i
   * 54 Weak Mutation 1493: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - ReplaceVariable i -> offset
   * 55 Weak Mutation 1490: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - InsertUnaryOp Negation of i
   * 56 Weak Mutation 1491: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - InsertUnaryOp IINC 1 i
   * 57 Weak Mutation 1488: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - InsertUnaryOp IINC -1 offset
   * 58 Weak Mutation 1502: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - InsertUnaryOp Negation of value
   * 59 Weak Mutation 1503: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - DeleteStatement: floatSub(FF)I
   * 60 Weak Mutation 1500: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - InsertUnaryOp IINC 1 i
   * 61 Weak Mutation 1501: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - InsertUnaryOp IINC -1 i
   * 62 Weak Mutation 1498: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - ReplaceVariable i -> offset
   * 63 Weak Mutation 1499: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - InsertUnaryOp Negation of i
   * 64 Weak Mutation 1496: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - ReplaceComparisonOperator <= -> -1
   * 65 Weak Mutation 1497: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - DeleteField: _data[F
   * 66 Weak Mutation 1487: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - InsertUnaryOp IINC 1 offset
   * 67 Weak Mutation 1486: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - InsertUnaryOp Negation of offset
   * 68 Weak Mutation 1485: gnu.trove.list.array.TFloatArrayList.lastIndexOf(F)I:881 - DeleteStatement: lastIndexOf(IF)I
   * 69 Weak Mutation 1484: gnu.trove.list.array.TFloatArrayList.lastIndexOf(F)I:881 - InsertUnaryOp Negation of value
   * 70 Weak Mutation 1483: gnu.trove.list.array.TFloatArrayList.lastIndexOf(F)I:881 - DeleteField: _posI
   * 71 Weak Mutation 1482: gnu.trove.list.array.TFloatArrayList.lastIndexOf(F)I:881 - InsertUnaryOp -1
   * 72 Weak Mutation 1481: gnu.trove.list.array.TFloatArrayList.lastIndexOf(F)I:881 - InsertUnaryOp +1
   * 73 Weak Mutation 1480: gnu.trove.list.array.TFloatArrayList.lastIndexOf(F)I:881 - InsertUnaryOp Negation
   * 74 Weak Mutation 1509: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:889 - InsertUnaryOp IINC 1 i
   * 75 Weak Mutation 1508: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:889 - InsertUnaryOp Negation of i
   * 76 Weak Mutation 1510: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:889 - InsertUnaryOp IINC -1 i
   * 77 Weak Mutation 1507: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:889 - ReplaceVariable i -> offset
   * 78 Weak Mutation 1506: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - ReplaceComparisonOperator != -> -1
   * 79 Weak Mutation 1517: gnu.trove.list.array.TFloatArrayList.contains(F)Z:898 - ReplaceComparisonOperator < -> <=
   * 80 Weak Mutation 1519: gnu.trove.list.array.TFloatArrayList.contains(F)Z:898 - ReplaceConstant - 1 -> 0
   * 81 Weak Mutation 1515: gnu.trove.list.array.TFloatArrayList.contains(F)Z:898 - DeleteStatement: lastIndexOf(F)I
   * 82 Weak Mutation 1514: gnu.trove.list.array.TFloatArrayList.contains(F)Z:898 - InsertUnaryOp Negation of value
   * 83 gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z: I4 Branch 24 IF_ACMPNE L453 - true
   * 84 gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z: I18 Branch 25 IFEQ L457 - true
   * 85 gnu.trove.list.array.TFloatArrayList.insert(IF)V: I5 Branch 7 IF_ICMPNE L243 - false
   */

  @Test
  public void test39()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      tFloatArrayList0.insert(0, 1391);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList0);
      boolean boolean0 = tFloatArrayList0.containsAll((TFloatCollection) tSynchronizedRandomAccessFloatList0);
      assertEquals(false, tFloatArrayList0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 40
  /*
   * 25 covered goals:
   * 1 Weak Mutation 637: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:460 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 1495: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - ReplaceComparisonOperator <= -> <
   * 3 Weak Mutation 1511: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:892 - ReplaceConstant - -1 -> 0
   * 4 Weak Mutation 1513: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:892 - ReplaceConstant - -1 -> -2
   * 5 Weak Mutation 1512: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:892 - ReplaceConstant - -1 -> 1
   * 6 Weak Mutation 1520: gnu.trove.list.array.TFloatArrayList.contains(F)Z:898 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 1518: gnu.trove.list.array.TFloatArrayList.contains(F)Z:898 - ReplaceComparisonOperator < -> -2
   * 8 gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z: I29 Branch 26 IFNE L459 - false
   * 9 gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I: I7 Branch 84 IFLE L887 - true
   * 10 gnu.trove.list.array.TFloatArrayList.contains(F)Z: I5 Branch 86 IFLT L898 - true
   * 11 Weak Mutation 631: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:457 - DeleteStatement: hasNext()Z
   * 12 Weak Mutation 630: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:456 - DeleteStatement: iterator()Lgnu/trove/iterator/TFloatIterator;
   * 13 Weak Mutation 628: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:453 - ReplaceComparisonOperator != -> ==
   * 14 Weak Mutation 635: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:459 - DeleteStatement: contains(F)Z
   * 15 Weak Mutation 634: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:459 - InsertUnaryOp Negation of element
   * 16 Weak Mutation 633: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:458 - DeleteStatement: next()F
   * 17 Weak Mutation 632: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:457 - ReplaceComparisonOperator == -> !=
   * 18 Weak Mutation 636: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:459 - ReplaceComparisonOperator != -> ==
   * 19 Weak Mutation 637: gnu.trove.list.array.TFloatArrayList.containsAll(Lgnu/trove/TFloatCollection;)Z:460 - ReplaceConstant - 0 -> 1
   * 20 Weak Mutation 1495: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - ReplaceComparisonOperator <= -> <
   * 21 Weak Mutation 1520: gnu.trove.list.array.TFloatArrayList.contains(F)Z:898 - ReplaceConstant - 0 -> 1
   * 22 Weak Mutation 1511: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:892 - ReplaceConstant - -1 -> 0
   * 23 Weak Mutation 1518: gnu.trove.list.array.TFloatArrayList.contains(F)Z:898 - ReplaceComparisonOperator < -> -2
   * 24 Weak Mutation 1513: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:892 - ReplaceConstant - -1 -> -2
   * 25 Weak Mutation 1512: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:892 - ReplaceConstant - -1 -> 1
   */

//   @Test
//   public void test40()  throws Throwable  {
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(645, 645);
//       float[] floatArray0 = new float[3];
//       TFloatArrayList tFloatArrayList1 = TFloatArrayList.wrap(floatArray0, 0.0F);
//       assertNotNull(tFloatArrayList1);
//       
//       boolean boolean0 = tFloatArrayList0.containsAll((TFloatCollection) tFloatArrayList1);
//       assertEquals(0.0F, tFloatArrayList1.getNoEntryValue(), 0.01F);
//       assertEquals(3, tFloatArrayList1.size());
//       assertEquals(645.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(false, boolean0);
//   }

  //Test case number: 41
  /*
   * 27 covered goals:
   * 1 Weak Mutation 639: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:469 - InsertUnaryOp Negation of i
   * 2 Weak Mutation 644: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:469 - ReplaceComparisonOperator <= -> -1
   * 3 Weak Mutation 641: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:469 - InsertUnaryOp IINC -1 i
   * 4 Weak Mutation 640: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:469 - InsertUnaryOp IINC 1 i
   * 5 Weak Mutation 643: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:469 - ReplaceComparisonOperator <= -> <
   * 6 Weak Mutation 649: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:470 - ReplaceComparisonOperator != -> ==
   * 7 Weak Mutation 648: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:470 - DeleteStatement: contains(F)Z
   * 8 Weak Mutation 645: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:470 - InsertUnaryOp Negation of i
   * 9 Weak Mutation 647: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:470 - InsertUnaryOp IINC -1 i
   * 10 Weak Mutation 646: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:470 - InsertUnaryOp IINC 1 i
   * 11 Weak Mutation 651: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:474 - ReplaceConstant - 1 -> 0
   * 12 Weak Mutation 1516: gnu.trove.list.array.TFloatArrayList.contains(F)Z:898 - ReplaceComparisonOperator < -> !=
   * 13 gnu.trove.list.array.TFloatArrayList.containsAll([F)Z: I8 Branch 27 IFLE L469 - true
   * 14 gnu.trove.list.array.TFloatArrayList.containsAll([F)Z: I8 Branch 27 IFLE L469 - false
   * 15 gnu.trove.list.array.TFloatArrayList.containsAll([F)Z: I16 Branch 28 IFNE L470 - true
   * 16 Weak Mutation 639: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:469 - InsertUnaryOp Negation of i
   * 17 Weak Mutation 649: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:470 - ReplaceComparisonOperator != -> ==
   * 18 Weak Mutation 648: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:470 - DeleteStatement: contains(F)Z
   * 19 Weak Mutation 651: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:474 - ReplaceConstant - 1 -> 0
   * 20 Weak Mutation 645: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:470 - InsertUnaryOp Negation of i
   * 21 Weak Mutation 644: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:469 - ReplaceComparisonOperator <= -> -1
   * 22 Weak Mutation 647: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:470 - InsertUnaryOp IINC -1 i
   * 23 Weak Mutation 646: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:470 - InsertUnaryOp IINC 1 i
   * 24 Weak Mutation 641: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:469 - InsertUnaryOp IINC -1 i
   * 25 Weak Mutation 640: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:469 - InsertUnaryOp IINC 1 i
   * 26 Weak Mutation 643: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:469 - ReplaceComparisonOperator <= -> <
   * 27 Weak Mutation 1516: gnu.trove.list.array.TFloatArrayList.contains(F)Z:898 - ReplaceComparisonOperator < -> !=
   */

//   @Test
//   public void test41()  throws Throwable  {
//       float[] floatArray0 = new float[4];
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
//       boolean boolean0 = tFloatArrayList0.containsAll(floatArray0);
//       assertEquals(true, boolean0);
//       assertEquals(4, tFloatArrayList0.size());
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 42
  /*
   * 17 covered goals:
   * 1 Weak Mutation 650: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:471 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 1489: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - ReplaceVariable i -> offset
   * 3 Weak Mutation 1505: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - ReplaceComparisonOperator != -> >
   * 4 gnu.trove.list.array.TFloatArrayList.containsAll([F)Z: I16 Branch 28 IFNE L470 - false
   * 5 gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I: I16 Branch 85 IFNE L888 - true
   * 6 Weak Mutation 639: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:469 - InsertUnaryOp Negation of i
   * 7 Weak Mutation 649: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:470 - ReplaceComparisonOperator != -> ==
   * 8 Weak Mutation 648: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:470 - DeleteStatement: contains(F)Z
   * 9 Weak Mutation 645: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:470 - InsertUnaryOp Negation of i
   * 10 Weak Mutation 644: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:469 - ReplaceComparisonOperator <= -> -1
   * 11 Weak Mutation 647: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:470 - InsertUnaryOp IINC -1 i
   * 12 Weak Mutation 646: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:470 - InsertUnaryOp IINC 1 i
   * 13 Weak Mutation 641: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:469 - InsertUnaryOp IINC -1 i
   * 14 Weak Mutation 640: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:469 - InsertUnaryOp IINC 1 i
   * 15 Weak Mutation 650: gnu.trove.list.array.TFloatArrayList.containsAll([F)Z:471 - ReplaceConstant - 0 -> 1
   * 16 Weak Mutation 1489: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - ReplaceVariable i -> offset
   * 17 Weak Mutation 1505: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - ReplaceComparisonOperator != -> >
   */

//   @Test
//   public void test42()  throws Throwable  {
//       float[] floatArray0 = new float[4];
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
//       floatArray0[1] = 6.6360896E8F;
//       boolean boolean0 = tFloatArrayList0.containsAll(floatArray0);
//       assertEquals(4, tFloatArrayList0.size());
//       assertEquals(false, boolean0);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 43
  /*
   * 15 covered goals:
   * 1 Weak Mutation 652: gnu.trove.list.array.TFloatArrayList.addAll(Ljava/util/Collection;)Z:480 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 653: gnu.trove.list.array.TFloatArrayList.addAll(Ljava/util/Collection;)Z:481 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 3 Weak Mutation 655: gnu.trove.list.array.TFloatArrayList.addAll(Ljava/util/Collection;)Z:481 - ReplaceComparisonOperator == -> !=
   * 4 Weak Mutation 654: gnu.trove.list.array.TFloatArrayList.addAll(Ljava/util/Collection;)Z:481 - DeleteStatement: hasNext()Z
   * 5 Weak Mutation 664: gnu.trove.list.array.TFloatArrayList.addAll(Ljava/util/Collection;)Z:487 - InsertUnaryOp IINC -1 changed
   * 6 Weak Mutation 662: gnu.trove.list.array.TFloatArrayList.addAll(Ljava/util/Collection;)Z:487 - InsertUnaryOp Negation of changed
   * 7 Weak Mutation 663: gnu.trove.list.array.TFloatArrayList.addAll(Ljava/util/Collection;)Z:487 - InsertUnaryOp IINC 1 changed
   * 8 gnu.trove.list.array.TFloatArrayList.addAll(Ljava/util/Collection;)Z: I12 Branch 29 IFEQ L481 - true
   * 9 Weak Mutation 653: gnu.trove.list.array.TFloatArrayList.addAll(Ljava/util/Collection;)Z:481 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 10 Weak Mutation 652: gnu.trove.list.array.TFloatArrayList.addAll(Ljava/util/Collection;)Z:480 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 655: gnu.trove.list.array.TFloatArrayList.addAll(Ljava/util/Collection;)Z:481 - ReplaceComparisonOperator == -> !=
   * 12 Weak Mutation 654: gnu.trove.list.array.TFloatArrayList.addAll(Ljava/util/Collection;)Z:481 - DeleteStatement: hasNext()Z
   * 13 Weak Mutation 664: gnu.trove.list.array.TFloatArrayList.addAll(Ljava/util/Collection;)Z:487 - InsertUnaryOp IINC -1 changed
   * 14 Weak Mutation 662: gnu.trove.list.array.TFloatArrayList.addAll(Ljava/util/Collection;)Z:487 - InsertUnaryOp Negation of changed
   * 15 Weak Mutation 663: gnu.trove.list.array.TFloatArrayList.addAll(Ljava/util/Collection;)Z:487 - InsertUnaryOp IINC 1 changed
   */

//   @Test
//   public void test43()  throws Throwable  {
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
//       LinkedList<Float> linkedList0 = new LinkedList<Float>();
//       boolean boolean0 = tFloatArrayList0.addAll((Collection<? extends Float>) linkedList0);
//       assertEquals(false, boolean0);
//       assertEquals(0, tFloatArrayList0.size());
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 44
  /*
   * 44 covered goals:
   * 1 Weak Mutation 677: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:507 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 687: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp IINC -1 len$
   * 3 Weak Mutation 686: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp IINC 1 len$
   * 4 Weak Mutation 685: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp Negation of len$
   * 5 Weak Mutation 684: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - ReplaceVariable len$ -> i$
   * 6 Weak Mutation 683: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp IINC -1 i$
   * 7 Weak Mutation 682: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp IINC 1 i$
   * 8 Weak Mutation 681: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp Negation of i$
   * 9 Weak Mutation 680: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - ReplaceVariable i$ -> len$
   * 10 Weak Mutation 679: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 694: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp IINC 1 i$
   * 12 Weak Mutation 695: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp IINC -1 i$
   * 13 Weak Mutation 692: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - ReplaceVariable i$ -> len$
   * 14 Weak Mutation 693: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp Negation of i$
   * 15 Weak Mutation 690: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - ReplaceComparisonOperator >= -> -1
   * 16 Weak Mutation 696: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:509 - InsertUnaryOp Negation of element
   * 17 Weak Mutation 697: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:509 - DeleteStatement: add(F)Z
   * 18 gnu.trove.list.array.TFloatArrayList.addAll([F)Z: I18 Branch 33 IF_ICMPGE L508 - false
   * 19 Weak Mutation 0: gnu.trove.list.array.TFloatArrayList$1.ensureCapacity(I)V:164 - InsertUnaryOp Negation of capacity
   * 20 Weak Mutation 1: gnu.trove.list.array.TFloatArrayList$1.ensureCapacity(I)V:164 - InsertUnaryOp IINC 1 capacity
   * 21 Weak Mutation 2: gnu.trove.list.array.TFloatArrayList$1.ensureCapacity(I)V:164 - InsertUnaryOp IINC -1 capacity
   * 22 Weak Mutation 3: gnu.trove.list.array.TFloatArrayList$1.ensureCapacity(I)V:164 - DeleteField: _data[F
   * 23 Weak Mutation 6: gnu.trove.list.array.TFloatArrayList$1.ensureCapacity(I)V:164 - ReplaceComparisonOperator <= -> -1
   * 24 Weak Mutation 7: gnu.trove.list.array.TFloatArrayList$1.ensureCapacity(I)V:165 - ReplaceConstant - Can not grow ArrayList wrapped external array -> 
   * 25 Weak Mutation 6: gnu.trove.list.array.TFloatArrayList$1.ensureCapacity(I)V:164 - ReplaceComparisonOperator <= -> -1
   * 26 Weak Mutation 7: gnu.trove.list.array.TFloatArrayList$1.ensureCapacity(I)V:165 - ReplaceConstant - Can not grow ArrayList wrapped external array -> 
   * 27 Weak Mutation 687: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp IINC -1 len$
   * 28 Weak Mutation 686: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp IINC 1 len$
   * 29 Weak Mutation 685: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp Negation of len$
   * 30 Weak Mutation 684: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - ReplaceVariable len$ -> i$
   * 31 Weak Mutation 683: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp IINC -1 i$
   * 32 Weak Mutation 682: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp IINC 1 i$
   * 33 Weak Mutation 681: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp Negation of i$
   * 34 Weak Mutation 680: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - ReplaceVariable i$ -> len$
   * 35 Weak Mutation 679: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - ReplaceConstant - 0 -> 1
   * 36 Weak Mutation 677: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:507 - ReplaceConstant - 0 -> 1
   * 37 Weak Mutation 696: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:509 - InsertUnaryOp Negation of element
   * 38 Weak Mutation 697: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:509 - DeleteStatement: add(F)Z
   * 39 Weak Mutation 694: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp IINC 1 i$
   * 40 Weak Mutation 695: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp IINC -1 i$
   * 41 Weak Mutation 692: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - ReplaceVariable i$ -> len$
   * 42 Weak Mutation 693: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp Negation of i$
   * 43 Weak Mutation 690: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - ReplaceComparisonOperator >= -> -1
   * 44 gnu.trove.list.array.TFloatArrayList$1.ensureCapacity(I)V: I6 Branch 1 IF_ICMPLE L164 - false
   */

  @Test
  public void test44()  throws Throwable  {
      float[] floatArray0 = new float[7];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
      assertNotNull(tFloatArrayList0);
      
      // Undeclared exception!
      try {
        tFloatArrayList0.addAll(floatArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Can not grow ArrayList wrapped external array
         //
      }
  }

  //Test case number: 45
  /*
   * 132 covered goals:
   * 1 Weak Mutation 709: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:523 - DeleteStatement: valueOf(F)Ljava/lang/Float;
   * 2 Weak Mutation 708: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:523 - DeleteStatement: next()F
   * 3 Weak Mutation 711: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:523 - ReplaceComparisonOperator > -> !=
   * 4 Weak Mutation 710: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:523 - DeleteStatement: collectionContains(Ljava/util/Collection;Ljava/lang/Object;)I
   * 5 Weak Mutation 714: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:524 - DeleteStatement: remove()V
   * 6 Weak Mutation 715: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:525 - ReplaceConstant - 1 -> 0
   * 7 Weak Mutation 1815: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - ReplaceComparisonOperator != -> <
   * 8 Weak Mutation 1813: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - ReplaceConstant - -1 -> -2
   * 9 Weak Mutation 1812: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - ReplaceConstant - -1 -> 1
   * 10 Weak Mutation 1811: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - ReplaceConstant - -1 -> 0
   * 11 Weak Mutation 1809: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - InsertUnaryOp -1
   * 12 Weak Mutation 1808: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - InsertUnaryOp +1
   * 13 Weak Mutation 1807: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - InsertUnaryOp Negation
   * 14 Weak Mutation 1823: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1027 - DeleteStatement: remove(II)V
   * 15 Weak Mutation 1822: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1027 - ReplaceConstant - 1 -> 0
   * 16 Weak Mutation 1820: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1027 - InsertUnaryOp -1
   * 17 Weak Mutation 1819: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1027 - InsertUnaryOp +1
   * 18 Weak Mutation 1818: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1027 - InsertUnaryOp Negation
   * 19 Weak Mutation 1817: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1027 - DeleteField: this$0Lgnu/trove/list/array/TFloatArrayList;
   * 20 Weak Mutation 1832: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - DeleteField: cursorI
   * 21 Weak Mutation 1835: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - ReplaceComparisonOperator >= -> -1
   * 22 Weak Mutation 1828: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - ReplaceVariable cursor -> lastRet
   * 23 Weak Mutation 1829: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - InsertUnaryOp Negation
   * 24 Weak Mutation 1830: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - InsertUnaryOp +1
   * 25 Weak Mutation 1831: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - InsertUnaryOp -1
   * 26 Weak Mutation 1824: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - InsertUnaryOp Negation
   * 27 Weak Mutation 1825: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - InsertUnaryOp +1
   * 28 Weak Mutation 1826: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - InsertUnaryOp -1
   * 29 Weak Mutation 1845: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - ReplaceArithmeticOperator - -> *
   * 30 Weak Mutation 1844: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - ReplaceArithmeticOperator - -> /
   * 31 Weak Mutation 1841: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - ReplaceConstant - 1 -> 0
   * 32 Weak Mutation 1840: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - DeleteField: cursorI
   * 33 Weak Mutation 1842: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - ReplaceArithmeticOperator - -> +
   * 34 Weak Mutation 1836: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - ReplaceVariable cursor -> lastRet
   * 35 Weak Mutation 1837: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - InsertUnaryOp Negation
   * 36 Weak Mutation 1838: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - InsertUnaryOp +1
   * 37 Weak Mutation 1839: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - InsertUnaryOp -1
   * 38 Weak Mutation 1848: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1030 - ReplaceConstant - -1 -> -2
   * 39 Weak Mutation 1847: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1030 - ReplaceConstant - -1 -> 1
   * 40 Weak Mutation 1846: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1030 - ReplaceConstant - -1 -> 0
   * 41 gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z: I13 Branch 35 IFEQ L522 - false
   * 42 gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z: I21 Branch 36 IFGT L523 - false
   * 43 gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V: I5 Branch 103 IF_ICMPNE L1023 - true
   * 44 gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V: I26 Branch 104 IF_ICMPGE L1028 - false
   * 45 Weak Mutation 687: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp IINC -1 len$
   * 46 Weak Mutation 686: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp IINC 1 len$
   * 47 Weak Mutation 685: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp Negation of len$
   * 48 Weak Mutation 684: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - ReplaceVariable len$ -> i$
   * 49 Weak Mutation 683: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp IINC -1 i$
   * 50 Weak Mutation 682: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp IINC 1 i$
   * 51 Weak Mutation 681: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp Negation of i$
   * 52 Weak Mutation 680: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - ReplaceVariable i$ -> len$
   * 53 Weak Mutation 679: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - ReplaceConstant - 0 -> 1
   * 54 Weak Mutation 677: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:507 - ReplaceConstant - 0 -> 1
   * 55 Weak Mutation 702: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:513 - InsertUnaryOp IINC 1 changed
   * 56 Weak Mutation 703: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:513 - InsertUnaryOp IINC -1 changed
   * 57 Weak Mutation 700: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - ReplaceVariable i$ -> len$
   * 58 Weak Mutation 701: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:513 - InsertUnaryOp Negation of changed
   * 59 Weak Mutation 698: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:509 - ReplaceComparisonOperator == -> !=
   * 60 Weak Mutation 699: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:510 - ReplaceConstant - 1 -> 0
   * 61 Weak Mutation 696: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:509 - InsertUnaryOp Negation of element
   * 62 Weak Mutation 697: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:509 - DeleteStatement: add(F)Z
   * 63 Weak Mutation 694: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp IINC 1 i$
   * 64 Weak Mutation 695: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp IINC -1 i$
   * 65 Weak Mutation 692: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - ReplaceVariable i$ -> len$
   * 66 Weak Mutation 693: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - InsertUnaryOp Negation of i$
   * 67 Weak Mutation 690: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - ReplaceComparisonOperator >= -> -1
   * 68 Weak Mutation 689: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - ReplaceComparisonOperator >= -> >
   * 69 Weak Mutation 717: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:528 - InsertUnaryOp IINC 1 modified
   * 70 Weak Mutation 716: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:528 - InsertUnaryOp Negation of modified
   * 71 Weak Mutation 718: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:528 - InsertUnaryOp IINC -1 modified
   * 72 Weak Mutation 705: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:521 - DeleteStatement: iterator()Lgnu/trove/iterator/TFloatIterator;
   * 73 Weak Mutation 704: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:520 - ReplaceConstant - 0 -> 1
   * 74 Weak Mutation 707: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:522 - ReplaceComparisonOperator == -> !=
   * 75 Weak Mutation 706: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:522 - DeleteStatement: hasNext()Z
   * 76 Weak Mutation 702: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:513 - InsertUnaryOp IINC 1 changed
   * 77 Weak Mutation 703: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:513 - InsertUnaryOp IINC -1 changed
   * 78 Weak Mutation 700: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - ReplaceVariable i$ -> len$
   * 79 Weak Mutation 701: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:513 - InsertUnaryOp Negation of changed
   * 80 Weak Mutation 698: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:509 - ReplaceComparisonOperator == -> !=
   * 81 Weak Mutation 699: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:510 - ReplaceConstant - 1 -> 0
   * 82 Weak Mutation 689: gnu.trove.list.array.TFloatArrayList.addAll([F)Z:508 - ReplaceComparisonOperator >= -> >
   * 83 Weak Mutation 715: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:525 - ReplaceConstant - 1 -> 0
   * 84 Weak Mutation 714: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:524 - DeleteStatement: remove()V
   * 85 Weak Mutation 717: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:528 - InsertUnaryOp IINC 1 modified
   * 86 Weak Mutation 716: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:528 - InsertUnaryOp Negation of modified
   * 87 Weak Mutation 718: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:528 - InsertUnaryOp IINC -1 modified
   * 88 Weak Mutation 705: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:521 - DeleteStatement: iterator()Lgnu/trove/iterator/TFloatIterator;
   * 89 Weak Mutation 704: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:520 - ReplaceConstant - 0 -> 1
   * 90 Weak Mutation 707: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:522 - ReplaceComparisonOperator == -> !=
   * 91 Weak Mutation 706: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:522 - DeleteStatement: hasNext()Z
   * 92 Weak Mutation 709: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:523 - DeleteStatement: valueOf(F)Ljava/lang/Float;
   * 93 Weak Mutation 708: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:523 - DeleteStatement: next()F
   * 94 Weak Mutation 711: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:523 - ReplaceComparisonOperator > -> !=
   * 95 Weak Mutation 710: gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z:523 - DeleteStatement: collectionContains(Ljava/util/Collection;Ljava/lang/Object;)I
   * 96 Weak Mutation 1848: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1030 - ReplaceConstant - -1 -> -2
   * 97 Weak Mutation 1845: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - ReplaceArithmeticOperator - -> *
   * 98 Weak Mutation 1844: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - ReplaceArithmeticOperator - -> /
   * 99 Weak Mutation 1847: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1030 - ReplaceConstant - -1 -> 1
   * 100 Weak Mutation 1846: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1030 - ReplaceConstant - -1 -> 0
   * 101 Weak Mutation 1841: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - ReplaceConstant - 1 -> 0
   * 102 Weak Mutation 1840: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - DeleteField: cursorI
   * 103 Weak Mutation 1842: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - ReplaceArithmeticOperator - -> +
   * 104 Weak Mutation 1836: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - ReplaceVariable cursor -> lastRet
   * 105 Weak Mutation 1837: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - InsertUnaryOp Negation
   * 106 Weak Mutation 1838: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - InsertUnaryOp +1
   * 107 Weak Mutation 1839: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - InsertUnaryOp -1
   * 108 Weak Mutation 1832: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - DeleteField: cursorI
   * 109 Weak Mutation 1835: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - ReplaceComparisonOperator >= -> -1
   * 110 Weak Mutation 1828: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - ReplaceVariable cursor -> lastRet
   * 111 Weak Mutation 1829: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - InsertUnaryOp Negation
   * 112 Weak Mutation 1830: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - InsertUnaryOp +1
   * 113 Weak Mutation 1831: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - InsertUnaryOp -1
   * 114 Weak Mutation 1824: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - InsertUnaryOp Negation
   * 115 Weak Mutation 1825: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - InsertUnaryOp +1
   * 116 Weak Mutation 1826: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - InsertUnaryOp -1
   * 117 Weak Mutation 1823: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1027 - DeleteStatement: remove(II)V
   * 118 Weak Mutation 1822: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1027 - ReplaceConstant - 1 -> 0
   * 119 Weak Mutation 1820: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1027 - InsertUnaryOp -1
   * 120 Weak Mutation 1819: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1027 - InsertUnaryOp +1
   * 121 Weak Mutation 1818: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1027 - InsertUnaryOp Negation
   * 122 Weak Mutation 1817: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1027 - DeleteField: this$0Lgnu/trove/list/array/TFloatArrayList;
   * 123 Weak Mutation 1815: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - ReplaceComparisonOperator != -> <
   * 124 Weak Mutation 1813: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - ReplaceConstant - -1 -> -2
   * 125 Weak Mutation 1812: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - ReplaceConstant - -1 -> 1
   * 126 Weak Mutation 1811: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - ReplaceConstant - -1 -> 0
   * 127 Weak Mutation 1809: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - InsertUnaryOp -1
   * 128 Weak Mutation 1808: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - InsertUnaryOp +1
   * 129 Weak Mutation 1807: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - InsertUnaryOp Negation
   * 130 gnu.trove.list.array.TFloatArrayList.retainAll(Ljava/util/Collection;)Z: I13 Branch 35 IFEQ L522 - true
   * 131 gnu.trove.list.array.TFloatArrayList.addAll([F)Z: I18 Branch 33 IF_ICMPGE L508 - true
   * 132 gnu.trove.list.array.TFloatArrayList.addAll([F)Z: I28 Branch 34 IFEQ L509 - false
   */

  @Test
  public void test45()  throws Throwable  {
      float[] floatArray0 = new float[7];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      tFloatArrayList0.addAll(floatArray0);
      assertEquals(false, tFloatArrayList0.isEmpty());
      
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      boolean boolean0 = tFloatArrayList0.retainAll((Collection<?>) linkedList0);
      assertEquals(true, boolean0);
  }

  //Test case number: 46
  /*
   * 5 covered goals:
   * 1 Weak Mutation 719: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:534 - ReplaceComparisonOperator != -> ==
   * 2 Weak Mutation 720: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:535 - ReplaceConstant - 0 -> 1
   * 3 gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z: I4 Branch 37 IF_ACMPNE L534 - false
   * 4 Weak Mutation 719: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:534 - ReplaceComparisonOperator != -> ==
   * 5 Weak Mutation 720: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:535 - ReplaceConstant - 0 -> 1
   */

//   @Test
//   public void test46()  throws Throwable  {
//       float[] floatArray0 = new float[6];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, (-1.0F));
//       assertNotNull(tFloatArrayList0);
//       
//       boolean boolean0 = tFloatArrayList0.retainAll((TFloatCollection) tFloatArrayList0);
//       assertEquals(false, boolean0);
//       assertEquals((-1.0F), tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 47
  /*
   * 17 covered goals:
   * 1 Weak Mutation 721: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:537 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 722: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:538 - DeleteStatement: iterator()Lgnu/trove/iterator/TFloatIterator;
   * 3 Weak Mutation 723: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:539 - DeleteStatement: hasNext()Z
   * 4 Weak Mutation 724: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:539 - ReplaceComparisonOperator == -> !=
   * 5 Weak Mutation 730: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:545 - InsertUnaryOp Negation of modified
   * 6 Weak Mutation 731: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:545 - InsertUnaryOp IINC 1 modified
   * 7 Weak Mutation 732: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:545 - InsertUnaryOp IINC -1 modified
   * 8 gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z: I4 Branch 37 IF_ACMPNE L534 - true
   * 9 gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z: I22 Branch 38 IFEQ L539 - true
   * 10 Weak Mutation 26: gnu.trove.list.array.TFloatArrayList.getNoEntryValue()F:172 - InsertUnaryOp Negation
   * 11 Weak Mutation 730: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:545 - InsertUnaryOp Negation of modified
   * 12 Weak Mutation 731: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:545 - InsertUnaryOp IINC 1 modified
   * 13 Weak Mutation 732: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:545 - InsertUnaryOp IINC -1 modified
   * 14 Weak Mutation 721: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:537 - ReplaceConstant - 0 -> 1
   * 15 Weak Mutation 722: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:538 - DeleteStatement: iterator()Lgnu/trove/iterator/TFloatIterator;
   * 16 Weak Mutation 723: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:539 - DeleteStatement: hasNext()Z
   * 17 Weak Mutation 724: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:539 - ReplaceComparisonOperator == -> !=
   */

//   @Test
//   public void test47()  throws Throwable  {
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList((TFloatList) tFloatArrayList0);
//       boolean boolean0 = tFloatArrayList0.retainAll((TFloatCollection) tFloatLinkedList0);
//       assertEquals(0, tFloatArrayList0.size());
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(false, boolean0);
//   }

  //Test case number: 48
  /*
   * 9 covered goals:
   * 1 Weak Mutation 725: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:540 - DeleteStatement: next()F
   * 2 Weak Mutation 726: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:540 - DeleteStatement: contains(F)Z
   * 3 Weak Mutation 727: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:540 - ReplaceComparisonOperator != -> ==
   * 4 gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z: I22 Branch 38 IFEQ L539 - false
   * 5 gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z: I29 Branch 39 IFNE L540 - true
   * 6 Weak Mutation 1516: gnu.trove.list.array.TFloatArrayList.contains(F)Z:898 - ReplaceComparisonOperator < -> !=
   * 7 Weak Mutation 725: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:540 - DeleteStatement: next()F
   * 8 Weak Mutation 726: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:540 - DeleteStatement: contains(F)Z
   * 9 Weak Mutation 727: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:540 - ReplaceComparisonOperator != -> ==
   */

//   @Test
//   public void test48()  throws Throwable  {
//       float[] floatArray0 = new float[12];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
//       assertNotNull(tFloatArrayList0);
//       
//       TFloatArrayList tFloatArrayList1 = TFloatArrayList.wrap(floatArray0, 0.0F);
//       boolean boolean0 = tFloatArrayList0.retainAll((TFloatCollection) tFloatArrayList1);
//       assertEquals(false, boolean0);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(12, tFloatArrayList0.size());
//   }

  //Test case number: 49
  /*
   * 9 covered goals:
   * 1 Weak Mutation 750: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - ReplaceComparisonOperator >= -> >
   * 2 Weak Mutation 750: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - ReplaceComparisonOperator >= -> >
   * 3 Weak Mutation 749: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - ReplaceComparisonOperator >= -> ==
   * 4 Weak Mutation 741: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:555 - ReplaceComparisonOperator <= -> <
   * 5 Weak Mutation 760: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:561 - InsertUnaryOp IINC -1 changed
   * 6 Weak Mutation 758: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:561 - InsertUnaryOp Negation of changed
   * 7 Weak Mutation 759: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:561 - InsertUnaryOp IINC 1 changed
   * 8 gnu.trove.list.array.TFloatArrayList.retainAll([F)Z: I21 Branch 40 IFLE L555 - true
   * 9 gnu.trove.list.array.TFloatArrayList.retainAll([F)Z: I29 Branch 41 IFGE L556 - true
   */

//   @Test
//   public void test49()  throws Throwable  {
//       float[] floatArray0 = new float[7];
//       floatArray0[0] = Float.NEGATIVE_INFINITY;
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
//       assertNotNull(tFloatArrayList0);
//       
//       boolean boolean0 = tFloatArrayList0.retainAll(floatArray0);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(false, boolean0);
//   }

  //Test case number: 50
  /*
   * 98 covered goals:
   * 1 Weak Mutation 757: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:558 - ReplaceConstant - 1 -> 0
   * 2 Weak Mutation 38: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:185 - ReplaceBitwiseOperator << -> >>
   * 3 Weak Mutation 37: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:185 - ReplaceBitwiseOperator << -> >>>
   * 4 Weak Mutation 43: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:186 - ReplaceVariable newCap -> capacity
   * 5 Weak Mutation 143: gnu.trove.list.array.TFloatArrayList.insert(IF)V:243 - ReplaceComparisonOperator != -> >
   * 6 Weak Mutation 142: gnu.trove.list.array.TFloatArrayList.insert(IF)V:243 - DeleteField: _posI
   * 7 Weak Mutation 152: gnu.trove.list.array.TFloatArrayList.insert(IF)V:247 - ReplaceConstant - 1 -> 0
   * 8 Weak Mutation 153: gnu.trove.list.array.TFloatArrayList.insert(IF)V:247 - ReplaceArithmeticOperator + -> -
   * 9 Weak Mutation 154: gnu.trove.list.array.TFloatArrayList.insert(IF)V:247 - ReplaceArithmeticOperator + -> %
   * 10 Weak Mutation 155: gnu.trove.list.array.TFloatArrayList.insert(IF)V:247 - ReplaceArithmeticOperator + -> /
   * 11 Weak Mutation 156: gnu.trove.list.array.TFloatArrayList.insert(IF)V:247 - ReplaceArithmeticOperator + -> *
   * 12 Weak Mutation 157: gnu.trove.list.array.TFloatArrayList.insert(IF)V:247 - DeleteStatement: ensureCapacity(I)V
   * 13 Weak Mutation 158: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - DeleteField: _data[F
   * 14 Weak Mutation 159: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp Negation of offset
   * 15 Weak Mutation 148: gnu.trove.list.array.TFloatArrayList.insert(IF)V:247 - InsertUnaryOp Negation
   * 16 Weak Mutation 149: gnu.trove.list.array.TFloatArrayList.insert(IF)V:247 - InsertUnaryOp +1
   * 17 Weak Mutation 150: gnu.trove.list.array.TFloatArrayList.insert(IF)V:247 - InsertUnaryOp -1
   * 18 Weak Mutation 151: gnu.trove.list.array.TFloatArrayList.insert(IF)V:247 - DeleteField: _posI
   * 19 Weak Mutation 171: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp Negation
   * 20 Weak Mutation 170: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - ReplaceArithmeticOperator + -> *
   * 21 Weak Mutation 169: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - ReplaceArithmeticOperator + -> /
   * 22 Weak Mutation 168: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - ReplaceArithmeticOperator + -> %
   * 23 Weak Mutation 175: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp Negation of offset
   * 24 Weak Mutation 174: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - DeleteField: _posI
   * 25 Weak Mutation 173: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp -1
   * 26 Weak Mutation 172: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp +1
   * 27 Weak Mutation 163: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp Negation of offset
   * 28 Weak Mutation 162: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - DeleteField: _data[F
   * 29 Weak Mutation 161: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp IINC -1 offset
   * 30 Weak Mutation 160: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp IINC 1 offset
   * 31 Weak Mutation 167: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - ReplaceArithmeticOperator + -> -
   * 32 Weak Mutation 166: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - ReplaceConstant - 1 -> 0
   * 33 Weak Mutation 165: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp IINC -1 offset
   * 34 Weak Mutation 164: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp IINC 1 offset
   * 35 Weak Mutation 186: gnu.trove.list.array.TFloatArrayList.insert(IF)V:251 - InsertUnaryOp IINC -1 offset
   * 36 Weak Mutation 187: gnu.trove.list.array.TFloatArrayList.insert(IF)V:251 - InsertUnaryOp Negation of value
   * 37 Weak Mutation 184: gnu.trove.list.array.TFloatArrayList.insert(IF)V:251 - InsertUnaryOp Negation of offset
   * 38 Weak Mutation 185: gnu.trove.list.array.TFloatArrayList.insert(IF)V:251 - InsertUnaryOp IINC 1 offset
   * 39 Weak Mutation 190: gnu.trove.list.array.TFloatArrayList.insert(IF)V:252 - InsertUnaryOp -1
   * 40 Weak Mutation 191: gnu.trove.list.array.TFloatArrayList.insert(IF)V:252 - DeleteField: _posI
   * 41 Weak Mutation 188: gnu.trove.list.array.TFloatArrayList.insert(IF)V:252 - InsertUnaryOp Negation
   * 42 Weak Mutation 189: gnu.trove.list.array.TFloatArrayList.insert(IF)V:252 - InsertUnaryOp +1
   * 43 Weak Mutation 179: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - ReplaceArithmeticOperator - -> %
   * 44 Weak Mutation 176: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp IINC 1 offset
   * 45 Weak Mutation 177: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - InsertUnaryOp IINC -1 offset
   * 46 Weak Mutation 182: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 47 Weak Mutation 183: gnu.trove.list.array.TFloatArrayList.insert(IF)V:251 - DeleteField: _data[F
   * 48 Weak Mutation 180: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - ReplaceArithmeticOperator - -> /
   * 49 Weak Mutation 196: gnu.trove.list.array.TFloatArrayList.insert(IF)V:252 - ReplaceArithmeticOperator + -> *
   * 50 Weak Mutation 193: gnu.trove.list.array.TFloatArrayList.insert(IF)V:252 - ReplaceArithmeticOperator + -> -
   * 51 Weak Mutation 192: gnu.trove.list.array.TFloatArrayList.insert(IF)V:252 - ReplaceConstant - 1 -> 0
   * 52 Weak Mutation 195: gnu.trove.list.array.TFloatArrayList.insert(IF)V:252 - ReplaceArithmeticOperator + -> /
   * 53 Weak Mutation 194: gnu.trove.list.array.TFloatArrayList.insert(IF)V:252 - ReplaceArithmeticOperator + -> %
   * 54 Weak Mutation 747: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - InsertUnaryOp IINC -1 i
   * 55 Weak Mutation 746: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - InsertUnaryOp IINC 1 i
   * 56 Weak Mutation 745: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - InsertUnaryOp Negation of i
   * 57 Weak Mutation 744: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - ReplaceVariable data -> array
   * 58 Weak Mutation 751: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - ReplaceComparisonOperator >= -> -1
   * 59 Weak Mutation 749: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - ReplaceComparisonOperator >= -> ==
   * 60 Weak Mutation 748: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - DeleteStatement: binarySearch([FF)I
   * 61 Weak Mutation 739: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:555 - InsertUnaryOp IINC -1 i
   * 62 Weak Mutation 738: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:555 - InsertUnaryOp IINC 1 i
   * 63 Weak Mutation 737: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:555 - InsertUnaryOp Negation of i
   * 64 Weak Mutation 736: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:555 - ReplaceVariable data -> array
   * 65 Weak Mutation 743: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:556 - ReplaceVariable array -> data
   * 66 Weak Mutation 742: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:555 - ReplaceComparisonOperator <= -> -1
   * 67 Weak Mutation 741: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:555 - ReplaceComparisonOperator <= -> <
   * 68 Weak Mutation 760: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:561 - InsertUnaryOp IINC -1 changed
   * 69 Weak Mutation 754: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:557 - InsertUnaryOp IINC -1 i
   * 70 Weak Mutation 755: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:557 - ReplaceConstant - 1 -> 0
   * 71 Weak Mutation 752: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:557 - InsertUnaryOp Negation of i
   * 72 Weak Mutation 753: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:557 - InsertUnaryOp IINC 1 i
   * 73 Weak Mutation 758: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:561 - InsertUnaryOp Negation of changed
   * 74 Weak Mutation 759: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:561 - InsertUnaryOp IINC 1 changed
   * 75 Weak Mutation 756: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:557 - DeleteStatement: remove(II)V
   * 76 Weak Mutation 733: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:551 - ReplaceConstant - 0 -> 1
   * 77 Weak Mutation 734: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:552 - DeleteStatement: sort([F)V
   * 78 Weak Mutation 735: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:553 - DeleteField: _data[F
   * 79 Weak Mutation 43: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:186 - ReplaceVariable newCap -> capacity
   * 80 Weak Mutation 143: gnu.trove.list.array.TFloatArrayList.insert(IF)V:243 - ReplaceComparisonOperator != -> >
   * 81 Weak Mutation 142: gnu.trove.list.array.TFloatArrayList.insert(IF)V:243 - DeleteField: _posI
   * 82 Weak Mutation 151: gnu.trove.list.array.TFloatArrayList.insert(IF)V:247 - DeleteField: _posI
   * 83 Weak Mutation 174: gnu.trove.list.array.TFloatArrayList.insert(IF)V:249 - DeleteField: _posI
   * 84 Weak Mutation 186: gnu.trove.list.array.TFloatArrayList.insert(IF)V:251 - InsertUnaryOp IINC -1 offset
   * 85 Weak Mutation 187: gnu.trove.list.array.TFloatArrayList.insert(IF)V:251 - InsertUnaryOp Negation of value
   * 86 Weak Mutation 184: gnu.trove.list.array.TFloatArrayList.insert(IF)V:251 - InsertUnaryOp Negation of offset
   * 87 Weak Mutation 185: gnu.trove.list.array.TFloatArrayList.insert(IF)V:251 - InsertUnaryOp IINC 1 offset
   * 88 Weak Mutation 190: gnu.trove.list.array.TFloatArrayList.insert(IF)V:252 - InsertUnaryOp -1
   * 89 Weak Mutation 191: gnu.trove.list.array.TFloatArrayList.insert(IF)V:252 - DeleteField: _posI
   * 90 Weak Mutation 188: gnu.trove.list.array.TFloatArrayList.insert(IF)V:252 - InsertUnaryOp Negation
   * 91 Weak Mutation 189: gnu.trove.list.array.TFloatArrayList.insert(IF)V:252 - InsertUnaryOp +1
   * 92 Weak Mutation 183: gnu.trove.list.array.TFloatArrayList.insert(IF)V:251 - DeleteField: _data[F
   * 93 Weak Mutation 196: gnu.trove.list.array.TFloatArrayList.insert(IF)V:252 - ReplaceArithmeticOperator + -> *
   * 94 Weak Mutation 193: gnu.trove.list.array.TFloatArrayList.insert(IF)V:252 - ReplaceArithmeticOperator + -> -
   * 95 Weak Mutation 192: gnu.trove.list.array.TFloatArrayList.insert(IF)V:252 - ReplaceConstant - 1 -> 0
   * 96 Weak Mutation 195: gnu.trove.list.array.TFloatArrayList.insert(IF)V:252 - ReplaceArithmeticOperator + -> /
   * 97 Weak Mutation 194: gnu.trove.list.array.TFloatArrayList.insert(IF)V:252 - ReplaceArithmeticOperator + -> %
   * 98 Weak Mutation 757: gnu.trove.list.array.TFloatArrayList.retainAll([F)Z:558 - ReplaceConstant - 1 -> 0
   */

  @Test
  public void test50()  throws Throwable  {
      float[] floatArray0 = new float[10];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      tFloatArrayList0.insert(0, 292.83426F);
      assertEquals(11, tFloatArrayList0.size());
      
      boolean boolean0 = tFloatArrayList0.retainAll(floatArray0);
      assertEquals(true, boolean0);
  }

  //Test case number: 51
  /*
   * 15 covered goals:
   * 1 Weak Mutation 761: gnu.trove.list.array.TFloatArrayList.removeAll(Ljava/util/Collection;)Z:567 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 762: gnu.trove.list.array.TFloatArrayList.removeAll(Ljava/util/Collection;)Z:568 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 3 Weak Mutation 763: gnu.trove.list.array.TFloatArrayList.removeAll(Ljava/util/Collection;)Z:568 - DeleteStatement: hasNext()Z
   * 4 Weak Mutation 764: gnu.trove.list.array.TFloatArrayList.removeAll(Ljava/util/Collection;)Z:568 - ReplaceComparisonOperator == -> !=
   * 5 Weak Mutation 774: gnu.trove.list.array.TFloatArrayList.removeAll(Ljava/util/Collection;)Z:576 - InsertUnaryOp IINC -1 changed
   * 6 Weak Mutation 772: gnu.trove.list.array.TFloatArrayList.removeAll(Ljava/util/Collection;)Z:576 - InsertUnaryOp Negation of changed
   * 7 Weak Mutation 773: gnu.trove.list.array.TFloatArrayList.removeAll(Ljava/util/Collection;)Z:576 - InsertUnaryOp IINC 1 changed
   * 8 gnu.trove.list.array.TFloatArrayList.removeAll(Ljava/util/Collection;)Z: I12 Branch 42 IFEQ L568 - true
   * 9 Weak Mutation 762: gnu.trove.list.array.TFloatArrayList.removeAll(Ljava/util/Collection;)Z:568 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 10 Weak Mutation 763: gnu.trove.list.array.TFloatArrayList.removeAll(Ljava/util/Collection;)Z:568 - DeleteStatement: hasNext()Z
   * 11 Weak Mutation 761: gnu.trove.list.array.TFloatArrayList.removeAll(Ljava/util/Collection;)Z:567 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 764: gnu.trove.list.array.TFloatArrayList.removeAll(Ljava/util/Collection;)Z:568 - ReplaceComparisonOperator == -> !=
   * 13 Weak Mutation 774: gnu.trove.list.array.TFloatArrayList.removeAll(Ljava/util/Collection;)Z:576 - InsertUnaryOp IINC -1 changed
   * 14 Weak Mutation 772: gnu.trove.list.array.TFloatArrayList.removeAll(Ljava/util/Collection;)Z:576 - InsertUnaryOp Negation of changed
   * 15 Weak Mutation 773: gnu.trove.list.array.TFloatArrayList.removeAll(Ljava/util/Collection;)Z:576 - InsertUnaryOp IINC 1 changed
   */

//   @Test
//   public void test51()  throws Throwable  {
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
//       LinkedList<Object> linkedList0 = new LinkedList<Object>();
//       boolean boolean0 = tFloatArrayList0.removeAll((Collection<?>) linkedList0);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(false, boolean0);
//       assertEquals("{}", tFloatArrayList0.toString());
//   }

  //Test case number: 52
  /*
   * 49 covered goals:
   * 1 Weak Mutation 802: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:603 - ReplaceConstant - 1 -> 0
   * 2 gnu.trove.list.array.TFloatArrayList.removeAll([F)Z: I20 Branch 49 IFEQ L602 - false
   * 3 Weak Mutation 470: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - ReplaceComparisonOperator != -> >
   * 4 Weak Mutation 804: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:606 - InsertUnaryOp IINC 1 changed
   * 5 Weak Mutation 805: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:606 - InsertUnaryOp IINC -1 changed
   * 6 Weak Mutation 800: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:602 - DeleteStatement: remove(F)Z
   * 7 Weak Mutation 801: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:602 - ReplaceComparisonOperator == -> !=
   * 8 Weak Mutation 803: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:606 - InsertUnaryOp Negation of changed
   * 9 Weak Mutation 791: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:601 - InsertUnaryOp Negation of i
   * 10 Weak Mutation 790: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:600 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 799: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:602 - InsertUnaryOp IINC -1 i
   * 12 Weak Mutation 798: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:602 - InsertUnaryOp IINC 1 i
   * 13 Weak Mutation 797: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:602 - InsertUnaryOp Negation of i
   * 14 Weak Mutation 796: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:601 - ReplaceComparisonOperator <= -> -1
   * 15 Weak Mutation 795: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:601 - ReplaceComparisonOperator <= -> <
   * 16 Weak Mutation 793: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:601 - InsertUnaryOp IINC -1 i
   * 17 Weak Mutation 792: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:601 - InsertUnaryOp IINC 1 i
   * 18 Weak Mutation 1297: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:818 - InsertUnaryOp IINC -1 toIndex
   * 19 Weak Mutation 1296: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:818 - InsertUnaryOp IINC 1 toIndex
   * 20 Weak Mutation 1290: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:817 - InsertUnaryOp Negation of toIndex
   * 21 Weak Mutation 1291: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:817 - InsertUnaryOp IINC 1 toIndex
   * 22 Weak Mutation 1288: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - ReplaceComparisonOperator <= -> -1
   * 23 Weak Mutation 1289: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:817 - ReplaceVariable toIndex -> fromIndex
   * 24 Weak Mutation 1294: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:818 - ReplaceVariable toIndex -> fromIndex
   * 25 Weak Mutation 1295: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:818 - InsertUnaryOp Negation of toIndex
   * 26 Weak Mutation 1292: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:817 - InsertUnaryOp IINC -1 toIndex
   * 27 Weak Mutation 1293: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:817 - DeleteStatement: ensureCapacity(I)V
   * 28 Weak Mutation 478: gnu.trove.list.array.TFloatArrayList.remove(F)Z:389 - ReplaceConstant - 0 -> 1
   * 29 Weak Mutation 470: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - ReplaceComparisonOperator != -> >
   * 30 Weak Mutation 461: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - ReplaceComparisonOperator >= -> >
   * 31 Weak Mutation 804: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:606 - InsertUnaryOp IINC 1 changed
   * 32 Weak Mutation 805: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:606 - InsertUnaryOp IINC -1 changed
   * 33 Weak Mutation 800: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:602 - DeleteStatement: remove(F)Z
   * 34 Weak Mutation 801: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:602 - ReplaceComparisonOperator == -> !=
   * 35 Weak Mutation 802: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:603 - ReplaceConstant - 1 -> 0
   * 36 Weak Mutation 803: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:606 - InsertUnaryOp Negation of changed
   * 37 Weak Mutation 791: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:601 - InsertUnaryOp Negation of i
   * 38 Weak Mutation 790: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:600 - ReplaceConstant - 0 -> 1
   * 39 Weak Mutation 799: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:602 - InsertUnaryOp IINC -1 i
   * 40 Weak Mutation 798: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:602 - InsertUnaryOp IINC 1 i
   * 41 Weak Mutation 797: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:602 - InsertUnaryOp Negation of i
   * 42 Weak Mutation 796: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:601 - ReplaceComparisonOperator <= -> -1
   * 43 Weak Mutation 795: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:601 - ReplaceComparisonOperator <= -> <
   * 44 Weak Mutation 793: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:601 - InsertUnaryOp IINC -1 i
   * 45 Weak Mutation 792: gnu.trove.list.array.TFloatArrayList.removeAll([F)Z:601 - InsertUnaryOp IINC 1 i
   * 46 gnu.trove.list.array.TFloatArrayList.removeAll([F)Z: I12 Branch 48 IFLE L601 - true
   * 47 gnu.trove.list.array.TFloatArrayList.removeAll([F)Z: I12 Branch 48 IFLE L601 - false
   * 48 gnu.trove.list.array.TFloatArrayList.removeAll([F)Z: I20 Branch 49 IFEQ L602 - true
   * 49 gnu.trove.list.array.TFloatArrayList.remove(F)Z: I8 Branch 14 IF_ICMPGE L383 - true
   */

  @Test
  public void test52()  throws Throwable  {
      float[] floatArray0 = new float[4];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      floatArray0[0] = (float) 58;
      tFloatArrayList0.fill(0, 2, 58.0F);
      boolean boolean0 = tFloatArrayList0.removeAll(floatArray0);
      assertEquals("{58.0}", tFloatArrayList0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 53
  /*
   * 15 covered goals:
   * 1 Weak Mutation 806: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - InsertUnaryOp Negation
   * 2 Weak Mutation 807: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - InsertUnaryOp +1
   * 3 Weak Mutation 812: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - InsertUnaryOp IINC -1 i
   * 4 Weak Mutation 814: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - ReplaceComparisonOperator <= -> <
   * 5 Weak Mutation 808: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - InsertUnaryOp -1
   * 6 Weak Mutation 810: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - InsertUnaryOp Negation of i
   * 7 Weak Mutation 811: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - InsertUnaryOp IINC 1 i
   * 8 gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V: I8 Branch 50 IFLE L612 - true
   * 9 Weak Mutation 806: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - InsertUnaryOp Negation
   * 10 Weak Mutation 807: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - InsertUnaryOp +1
   * 11 Weak Mutation 812: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - InsertUnaryOp IINC -1 i
   * 12 Weak Mutation 814: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - ReplaceComparisonOperator <= -> <
   * 13 Weak Mutation 808: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - InsertUnaryOp -1
   * 14 Weak Mutation 810: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - InsertUnaryOp Negation of i
   * 15 Weak Mutation 811: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - InsertUnaryOp IINC 1 i
   */

//   @Test
//   public void test53()  throws Throwable  {
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
//       tFloatArrayList0.transformValues((TFloatFunction) null);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals("{}", tFloatArrayList0.toString());
//   }

  //Test case number: 54
  /*
   * 29 covered goals:
   * 1 Weak Mutation 815: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - ReplaceComparisonOperator <= -> -1
   * 2 Weak Mutation 809: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - DeleteField: _posI
   * 3 Weak Mutation 821: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:613 - InsertUnaryOp Negation of i
   * 4 Weak Mutation 820: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:613 - DeleteField: _data[F
   * 5 Weak Mutation 823: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:613 - InsertUnaryOp IINC -1 i
   * 6 Weak Mutation 822: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:613 - InsertUnaryOp IINC 1 i
   * 7 Weak Mutation 817: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:613 - InsertUnaryOp Negation of i
   * 8 Weak Mutation 816: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:613 - DeleteField: _data[F
   * 9 Weak Mutation 819: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:613 - InsertUnaryOp IINC -1 i
   * 10 Weak Mutation 818: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:613 - InsertUnaryOp IINC 1 i
   * 11 Weak Mutation 824: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:613 - DeleteStatement: execute(F)F
   * 12 gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V: I8 Branch 50 IFLE L612 - false
   * 13 Weak Mutation 806: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - InsertUnaryOp Negation
   * 14 Weak Mutation 807: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - InsertUnaryOp +1
   * 15 Weak Mutation 812: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - InsertUnaryOp IINC -1 i
   * 16 Weak Mutation 808: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - InsertUnaryOp -1
   * 17 Weak Mutation 810: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - InsertUnaryOp Negation of i
   * 18 Weak Mutation 811: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - InsertUnaryOp IINC 1 i
   * 19 Weak Mutation 821: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:613 - InsertUnaryOp Negation of i
   * 20 Weak Mutation 820: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:613 - DeleteField: _data[F
   * 21 Weak Mutation 823: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:613 - InsertUnaryOp IINC -1 i
   * 22 Weak Mutation 822: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:613 - InsertUnaryOp IINC 1 i
   * 23 Weak Mutation 817: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:613 - InsertUnaryOp Negation of i
   * 24 Weak Mutation 816: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:613 - DeleteField: _data[F
   * 25 Weak Mutation 819: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:613 - InsertUnaryOp IINC -1 i
   * 26 Weak Mutation 818: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:613 - InsertUnaryOp IINC 1 i
   * 27 Weak Mutation 824: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:613 - DeleteStatement: execute(F)F
   * 28 Weak Mutation 815: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - ReplaceComparisonOperator <= -> -1
   * 29 Weak Mutation 809: gnu.trove.list.array.TFloatArrayList.transformValues(Lgnu/trove/function/TFloatFunction;)V:612 - DeleteField: _posI
   */

  @Test
  public void test54()  throws Throwable  {
      float[] floatArray0 = new float[8];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, (-233.03033F));
      assertNotNull(tFloatArrayList0);
      
      // Undeclared exception!
      try {
        tFloatArrayList0.transformValues((TFloatFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 55
  /*
   * 188 covered goals:
   * 1 Weak Mutation 829: gnu.trove.list.array.TFloatArrayList.reverse()V:620 - DeleteField: _posI
   * 2 Weak Mutation 828: gnu.trove.list.array.TFloatArrayList.reverse()V:620 - InsertUnaryOp -1
   * 3 Weak Mutation 830: gnu.trove.list.array.TFloatArrayList.reverse()V:620 - DeleteStatement: reverse(II)V
   * 4 Weak Mutation 825: gnu.trove.list.array.TFloatArrayList.reverse()V:620 - ReplaceConstant - 0 -> 1
   * 5 Weak Mutation 827: gnu.trove.list.array.TFloatArrayList.reverse()V:620 - InsertUnaryOp +1
   * 6 Weak Mutation 826: gnu.trove.list.array.TFloatArrayList.reverse()V:620 - InsertUnaryOp Negation
   * 7 Weak Mutation 831: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - ReplaceVariable from -> to
   * 8 Weak Mutation 834: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - InsertUnaryOp IINC -1 from
   * 9 Weak Mutation 835: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - ReplaceVariable to -> from
   * 10 Weak Mutation 832: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - InsertUnaryOp Negation of from
   * 11 Weak Mutation 833: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - InsertUnaryOp IINC 1 from
   * 12 Weak Mutation 838: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - InsertUnaryOp IINC -1 to
   * 13 Weak Mutation 839: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - ReplaceComparisonOperator != -> >
   * 14 Weak Mutation 836: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - InsertUnaryOp Negation of to
   * 15 Weak Mutation 837: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - InsertUnaryOp IINC 1 to
   * 16 Weak Mutation 850: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - ReplaceComparisonOperator <= -> ==
   * 17 Weak Mutation 849: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - InsertUnaryOp IINC -1 to
   * 18 Weak Mutation 848: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - InsertUnaryOp IINC 1 to
   * 19 Weak Mutation 842: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - ReplaceVariable from -> to
   * 20 Weak Mutation 843: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - InsertUnaryOp Negation of from
   * 21 Weak Mutation 846: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - ReplaceVariable to -> from
   * 22 Weak Mutation 847: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - InsertUnaryOp Negation of to
   * 23 Weak Mutation 844: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - InsertUnaryOp IINC 1 from
   * 24 Weak Mutation 845: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - InsertUnaryOp IINC -1 from
   * 25 Weak Mutation 880: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceComparisonOperator >= -> ==
   * 26 Weak Mutation 882: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceComparisonOperator >= -> -1
   * 27 Weak Mutation 895: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable i -> to
   * 28 Weak Mutation 864: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceArithmeticOperator - -> +
   * 29 Weak Mutation 865: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceArithmeticOperator - -> %
   * 30 Weak Mutation 866: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceArithmeticOperator - -> /
   * 31 Weak Mutation 867: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceArithmeticOperator - -> *
   * 32 Weak Mutation 868: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable i -> to
   * 33 Weak Mutation 869: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable i -> from
   * 34 Weak Mutation 870: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable i -> j
   * 35 Weak Mutation 871: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp Negation of i
   * 36 Weak Mutation 872: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC 1 i
   * 37 Weak Mutation 873: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC -1 i
   * 38 Weak Mutation 874: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable j -> to
   * 39 Weak Mutation 875: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable j -> from
   * 40 Weak Mutation 876: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable j -> i
   * 41 Weak Mutation 877: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp Negation of j
   * 42 Weak Mutation 878: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC 1 j
   * 43 Weak Mutation 879: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC -1 j
   * 44 Weak Mutation 855: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp Negation of from
   * 45 Weak Mutation 854: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable from -> to
   * 46 Weak Mutation 859: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable to -> i
   * 47 Weak Mutation 858: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable to -> from
   * 48 Weak Mutation 857: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC -1 from
   * 49 Weak Mutation 856: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC 1 from
   * 50 Weak Mutation 863: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceConstant - 1 -> 0
   * 51 Weak Mutation 862: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC -1 to
   * 52 Weak Mutation 861: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC 1 to
   * 53 Weak Mutation 860: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp Negation of to
   * 54 Weak Mutation 900: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable j -> i
   * 55 Weak Mutation 899: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable j -> from
   * 56 Weak Mutation 898: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable j -> to
   * 57 Weak Mutation 897: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable i -> j
   * 58 Weak Mutation 896: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable i -> from
   * 59 Weak Mutation 883: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - ReplaceVariable i -> to
   * 60 Weak Mutation 885: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - ReplaceVariable i -> j
   * 61 Weak Mutation 884: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - ReplaceVariable i -> from
   * 62 Weak Mutation 887: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - InsertUnaryOp IINC 1 i
   * 63 Weak Mutation 886: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - InsertUnaryOp Negation of i
   * 64 Weak Mutation 889: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - ReplaceVariable j -> to
   * 65 Weak Mutation 888: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - InsertUnaryOp IINC -1 i
   * 66 Weak Mutation 891: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - ReplaceVariable j -> i
   * 67 Weak Mutation 890: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - ReplaceVariable j -> from
   * 68 Weak Mutation 893: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - InsertUnaryOp IINC 1 j
   * 69 Weak Mutation 892: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - InsertUnaryOp Negation of j
   * 70 Weak Mutation 894: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - InsertUnaryOp IINC -1 j
   * 71 Weak Mutation 920: gnu.trove.list.array.TFloatArrayList.swap(II)V:653 - InsertUnaryOp IINC 1 i
   * 72 Weak Mutation 921: gnu.trove.list.array.TFloatArrayList.swap(II)V:653 - InsertUnaryOp IINC -1 i
   * 73 Weak Mutation 918: gnu.trove.list.array.TFloatArrayList.swap(II)V:653 - ReplaceVariable i -> j
   * 74 Weak Mutation 919: gnu.trove.list.array.TFloatArrayList.swap(II)V:653 - InsertUnaryOp Negation of i
   * 75 Weak Mutation 917: gnu.trove.list.array.TFloatArrayList.swap(II)V:653 - DeleteField: _data[F
   * 76 Weak Mutation 929: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - InsertUnaryOp Negation of j
   * 77 Weak Mutation 928: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - ReplaceVariable j -> i
   * 78 Weak Mutation 931: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - InsertUnaryOp IINC -1 j
   * 79 Weak Mutation 930: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - InsertUnaryOp IINC 1 j
   * 80 Weak Mutation 926: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - InsertUnaryOp IINC -1 i
   * 81 Weak Mutation 927: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - DeleteField: _data[F
   * 82 Weak Mutation 924: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - InsertUnaryOp Negation of i
   * 83 Weak Mutation 925: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - InsertUnaryOp IINC 1 i
   * 84 Weak Mutation 922: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - DeleteField: _data[F
   * 85 Weak Mutation 923: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - ReplaceVariable i -> j
   * 86 Weak Mutation 937: gnu.trove.list.array.TFloatArrayList.swap(II)V:655 - InsertUnaryOp Negation of tmp
   * 87 Weak Mutation 936: gnu.trove.list.array.TFloatArrayList.swap(II)V:655 - InsertUnaryOp IINC -1 j
   * 88 Weak Mutation 933: gnu.trove.list.array.TFloatArrayList.swap(II)V:655 - ReplaceVariable j -> i
   * 89 Weak Mutation 932: gnu.trove.list.array.TFloatArrayList.swap(II)V:655 - DeleteField: _data[F
   * 90 Weak Mutation 935: gnu.trove.list.array.TFloatArrayList.swap(II)V:655 - InsertUnaryOp IINC 1 j
   * 91 Weak Mutation 934: gnu.trove.list.array.TFloatArrayList.swap(II)V:655 - InsertUnaryOp Negation of j
   * 92 gnu.trove.list.array.TFloatArrayList.swap(II)V: root-Branch
   * 93 gnu.trove.list.array.TFloatArrayList.reverse()V: root-Branch
   * 94 gnu.trove.list.array.TFloatArrayList.reverse(II)V: I4 Branch 51 IF_ICMPNE L626 - true
   * 95 gnu.trove.list.array.TFloatArrayList.reverse(II)V: I12 Branch 52 IF_ICMPLE L629 - true
   * 96 gnu.trove.list.array.TFloatArrayList.reverse(II)V: I32 Branch 53 IF_ICMPGE L632 - true
   * 97 gnu.trove.list.array.TFloatArrayList.reverse(II)V: I32 Branch 53 IF_ICMPGE L632 - false
   * 98 Weak Mutation 829: gnu.trove.list.array.TFloatArrayList.reverse()V:620 - DeleteField: _posI
   * 99 Weak Mutation 828: gnu.trove.list.array.TFloatArrayList.reverse()V:620 - InsertUnaryOp -1
   * 100 Weak Mutation 831: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - ReplaceVariable from -> to
   * 101 Weak Mutation 830: gnu.trove.list.array.TFloatArrayList.reverse()V:620 - DeleteStatement: reverse(II)V
   * 102 Weak Mutation 825: gnu.trove.list.array.TFloatArrayList.reverse()V:620 - ReplaceConstant - 0 -> 1
   * 103 Weak Mutation 827: gnu.trove.list.array.TFloatArrayList.reverse()V:620 - InsertUnaryOp +1
   * 104 Weak Mutation 826: gnu.trove.list.array.TFloatArrayList.reverse()V:620 - InsertUnaryOp Negation
   * 105 Weak Mutation 880: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceComparisonOperator >= -> ==
   * 106 Weak Mutation 883: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - ReplaceVariable i -> to
   * 107 Weak Mutation 882: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceComparisonOperator >= -> -1
   * 108 Weak Mutation 885: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - ReplaceVariable i -> j
   * 109 Weak Mutation 884: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - ReplaceVariable i -> from
   * 110 Weak Mutation 887: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - InsertUnaryOp IINC 1 i
   * 111 Weak Mutation 886: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - InsertUnaryOp Negation of i
   * 112 Weak Mutation 889: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - ReplaceVariable j -> to
   * 113 Weak Mutation 888: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - InsertUnaryOp IINC -1 i
   * 114 Weak Mutation 891: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - ReplaceVariable j -> i
   * 115 Weak Mutation 890: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - ReplaceVariable j -> from
   * 116 Weak Mutation 893: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - InsertUnaryOp IINC 1 j
   * 117 Weak Mutation 892: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - InsertUnaryOp Negation of j
   * 118 Weak Mutation 895: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable i -> to
   * 119 Weak Mutation 894: gnu.trove.list.array.TFloatArrayList.reverse(II)V:633 - InsertUnaryOp IINC -1 j
   * 120 Weak Mutation 864: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceArithmeticOperator - -> +
   * 121 Weak Mutation 865: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceArithmeticOperator - -> %
   * 122 Weak Mutation 866: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceArithmeticOperator - -> /
   * 123 Weak Mutation 867: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceArithmeticOperator - -> *
   * 124 Weak Mutation 868: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable i -> to
   * 125 Weak Mutation 869: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable i -> from
   * 126 Weak Mutation 870: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable i -> j
   * 127 Weak Mutation 871: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp Negation of i
   * 128 Weak Mutation 872: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC 1 i
   * 129 Weak Mutation 873: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC -1 i
   * 130 Weak Mutation 874: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable j -> to
   * 131 Weak Mutation 875: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable j -> from
   * 132 Weak Mutation 876: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable j -> i
   * 133 Weak Mutation 877: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp Negation of j
   * 134 Weak Mutation 878: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC 1 j
   * 135 Weak Mutation 879: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC -1 j
   * 136 Weak Mutation 850: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - ReplaceComparisonOperator <= -> ==
   * 137 Weak Mutation 849: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - InsertUnaryOp IINC -1 to
   * 138 Weak Mutation 848: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - InsertUnaryOp IINC 1 to
   * 139 Weak Mutation 855: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp Negation of from
   * 140 Weak Mutation 854: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable from -> to
   * 141 Weak Mutation 859: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable to -> i
   * 142 Weak Mutation 858: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable to -> from
   * 143 Weak Mutation 857: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC -1 from
   * 144 Weak Mutation 856: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC 1 from
   * 145 Weak Mutation 863: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceConstant - 1 -> 0
   * 146 Weak Mutation 862: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC -1 to
   * 147 Weak Mutation 861: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC 1 to
   * 148 Weak Mutation 860: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp Negation of to
   * 149 Weak Mutation 834: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - InsertUnaryOp IINC -1 from
   * 150 Weak Mutation 835: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - ReplaceVariable to -> from
   * 151 Weak Mutation 832: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - InsertUnaryOp Negation of from
   * 152 Weak Mutation 833: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - InsertUnaryOp IINC 1 from
   * 153 Weak Mutation 838: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - InsertUnaryOp IINC -1 to
   * 154 Weak Mutation 839: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - ReplaceComparisonOperator != -> >
   * 155 Weak Mutation 836: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - InsertUnaryOp Negation of to
   * 156 Weak Mutation 837: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - InsertUnaryOp IINC 1 to
   * 157 Weak Mutation 842: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - ReplaceVariable from -> to
   * 158 Weak Mutation 843: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - InsertUnaryOp Negation of from
   * 159 Weak Mutation 846: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - ReplaceVariable to -> from
   * 160 Weak Mutation 847: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - InsertUnaryOp Negation of to
   * 161 Weak Mutation 844: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - InsertUnaryOp IINC 1 from
   * 162 Weak Mutation 845: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - InsertUnaryOp IINC -1 from
   * 163 Weak Mutation 937: gnu.trove.list.array.TFloatArrayList.swap(II)V:655 - InsertUnaryOp Negation of tmp
   * 164 Weak Mutation 936: gnu.trove.list.array.TFloatArrayList.swap(II)V:655 - InsertUnaryOp IINC -1 j
   * 165 Weak Mutation 933: gnu.trove.list.array.TFloatArrayList.swap(II)V:655 - ReplaceVariable j -> i
   * 166 Weak Mutation 932: gnu.trove.list.array.TFloatArrayList.swap(II)V:655 - DeleteField: _data[F
   * 167 Weak Mutation 935: gnu.trove.list.array.TFloatArrayList.swap(II)V:655 - InsertUnaryOp IINC 1 j
   * 168 Weak Mutation 934: gnu.trove.list.array.TFloatArrayList.swap(II)V:655 - InsertUnaryOp Negation of j
   * 169 Weak Mutation 929: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - InsertUnaryOp Negation of j
   * 170 Weak Mutation 928: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - ReplaceVariable j -> i
   * 171 Weak Mutation 931: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - InsertUnaryOp IINC -1 j
   * 172 Weak Mutation 930: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - InsertUnaryOp IINC 1 j
   * 173 Weak Mutation 926: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - InsertUnaryOp IINC -1 i
   * 174 Weak Mutation 927: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - DeleteField: _data[F
   * 175 Weak Mutation 924: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - InsertUnaryOp Negation of i
   * 176 Weak Mutation 925: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - InsertUnaryOp IINC 1 i
   * 177 Weak Mutation 922: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - DeleteField: _data[F
   * 178 Weak Mutation 923: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - ReplaceVariable i -> j
   * 179 Weak Mutation 920: gnu.trove.list.array.TFloatArrayList.swap(II)V:653 - InsertUnaryOp IINC 1 i
   * 180 Weak Mutation 921: gnu.trove.list.array.TFloatArrayList.swap(II)V:653 - InsertUnaryOp IINC -1 i
   * 181 Weak Mutation 918: gnu.trove.list.array.TFloatArrayList.swap(II)V:653 - ReplaceVariable i -> j
   * 182 Weak Mutation 919: gnu.trove.list.array.TFloatArrayList.swap(II)V:653 - InsertUnaryOp Negation of i
   * 183 Weak Mutation 917: gnu.trove.list.array.TFloatArrayList.swap(II)V:653 - DeleteField: _data[F
   * 184 Weak Mutation 900: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable j -> i
   * 185 Weak Mutation 899: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable j -> from
   * 186 Weak Mutation 898: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable j -> to
   * 187 Weak Mutation 897: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable i -> j
   * 188 Weak Mutation 896: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable i -> from
   */

//   @Test
//   public void test55()  throws Throwable  {
//       float[] floatArray0 = new float[10];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, 0.0F);
//       assertNotNull(tFloatArrayList0);
//       
//       tFloatArrayList0.reverse();
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 56
  /*
   * 7 covered goals:
   * 1 Weak Mutation 840: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - ReplaceComparisonOperator != -> <
   * 2 Weak Mutation 852: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - ReplaceComparisonOperator <= -> -1
   * 3 Weak Mutation 853: gnu.trove.list.array.TFloatArrayList.reverse(II)V:630 - ReplaceConstant - from cannot be greater than to -> 
   * 4 gnu.trove.list.array.TFloatArrayList.reverse(II)V: I12 Branch 52 IF_ICMPLE L629 - false
   * 5 Weak Mutation 853: gnu.trove.list.array.TFloatArrayList.reverse(II)V:630 - ReplaceConstant - from cannot be greater than to -> 
   * 6 Weak Mutation 852: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - ReplaceComparisonOperator <= -> -1
   * 7 Weak Mutation 840: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - ReplaceComparisonOperator != -> <
   */

  @Test
  public void test56()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(10);
      // Undeclared exception!
      try {
        tFloatArrayList0.reverse(89834777, (-471));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // from cannot be greater than to
         //
      }
  }

  //Test case number: 57
  /*
   * 3 covered goals:
   * 1 Weak Mutation 841: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - ReplaceComparisonOperator != -> -1
   * 2 gnu.trove.list.array.TFloatArrayList.reverse(II)V: I4 Branch 51 IF_ICMPNE L626 - false
   * 3 Weak Mutation 841: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - ReplaceComparisonOperator != -> -1
   */

//   @Test
//   public void test57()  throws Throwable  {
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
//       tFloatArrayList0.reverse(0, 0);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals("{}", tFloatArrayList0.toString());
//   }

  //Test case number: 58
  /*
   * 47 covered goals:
   * 1 Weak Mutation 881: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceComparisonOperator >= -> >
   * 2 Weak Mutation 829: gnu.trove.list.array.TFloatArrayList.reverse()V:620 - DeleteField: _posI
   * 3 Weak Mutation 828: gnu.trove.list.array.TFloatArrayList.reverse()V:620 - InsertUnaryOp -1
   * 4 Weak Mutation 831: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - ReplaceVariable from -> to
   * 5 Weak Mutation 830: gnu.trove.list.array.TFloatArrayList.reverse()V:620 - DeleteStatement: reverse(II)V
   * 6 Weak Mutation 825: gnu.trove.list.array.TFloatArrayList.reverse()V:620 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 827: gnu.trove.list.array.TFloatArrayList.reverse()V:620 - InsertUnaryOp +1
   * 8 Weak Mutation 826: gnu.trove.list.array.TFloatArrayList.reverse()V:620 - InsertUnaryOp Negation
   * 9 Weak Mutation 864: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceArithmeticOperator - -> +
   * 10 Weak Mutation 866: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceArithmeticOperator - -> /
   * 11 Weak Mutation 867: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceArithmeticOperator - -> *
   * 12 Weak Mutation 868: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable i -> to
   * 13 Weak Mutation 871: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp Negation of i
   * 14 Weak Mutation 872: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC 1 i
   * 15 Weak Mutation 873: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC -1 i
   * 16 Weak Mutation 874: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable j -> to
   * 17 Weak Mutation 877: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp Negation of j
   * 18 Weak Mutation 878: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC 1 j
   * 19 Weak Mutation 879: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC -1 j
   * 20 Weak Mutation 850: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - ReplaceComparisonOperator <= -> ==
   * 21 Weak Mutation 849: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - InsertUnaryOp IINC -1 to
   * 22 Weak Mutation 848: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - InsertUnaryOp IINC 1 to
   * 23 Weak Mutation 855: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp Negation of from
   * 24 Weak Mutation 854: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable from -> to
   * 25 Weak Mutation 859: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable to -> i
   * 26 Weak Mutation 858: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceVariable to -> from
   * 27 Weak Mutation 857: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC -1 from
   * 28 Weak Mutation 856: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC 1 from
   * 29 Weak Mutation 863: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceConstant - 1 -> 0
   * 30 Weak Mutation 862: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC -1 to
   * 31 Weak Mutation 861: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp IINC 1 to
   * 32 Weak Mutation 860: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - InsertUnaryOp Negation of to
   * 33 Weak Mutation 834: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - InsertUnaryOp IINC -1 from
   * 34 Weak Mutation 835: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - ReplaceVariable to -> from
   * 35 Weak Mutation 832: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - InsertUnaryOp Negation of from
   * 36 Weak Mutation 833: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - InsertUnaryOp IINC 1 from
   * 37 Weak Mutation 838: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - InsertUnaryOp IINC -1 to
   * 38 Weak Mutation 839: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - ReplaceComparisonOperator != -> >
   * 39 Weak Mutation 836: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - InsertUnaryOp Negation of to
   * 40 Weak Mutation 837: gnu.trove.list.array.TFloatArrayList.reverse(II)V:626 - InsertUnaryOp IINC 1 to
   * 41 Weak Mutation 842: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - ReplaceVariable from -> to
   * 42 Weak Mutation 843: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - InsertUnaryOp Negation of from
   * 43 Weak Mutation 846: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - ReplaceVariable to -> from
   * 44 Weak Mutation 847: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - InsertUnaryOp Negation of to
   * 45 Weak Mutation 844: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - InsertUnaryOp IINC 1 from
   * 46 Weak Mutation 845: gnu.trove.list.array.TFloatArrayList.reverse(II)V:629 - InsertUnaryOp IINC -1 from
   * 47 Weak Mutation 881: gnu.trove.list.array.TFloatArrayList.reverse(II)V:632 - ReplaceComparisonOperator >= -> >
   */

//   @Test
//   public void test58()  throws Throwable  {
//       float[] floatArray0 = new float[1];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, (-203.43948F));
//       assertNotNull(tFloatArrayList0);
//       
//       tFloatArrayList0.reverse();
//       assertEquals((-203.43948F), tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 59
  /*
   * 55 covered goals:
   * 1 Weak Mutation 916: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:641 - DeleteStatement: nextInt(I)I
   * 2 Weak Mutation 914: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:641 - InsertUnaryOp IINC 1 i
   * 3 Weak Mutation 915: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:641 - InsertUnaryOp IINC -1 i
   * 4 Weak Mutation 912: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:641 - InsertUnaryOp IINC -1 i
   * 5 Weak Mutation 913: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:641 - InsertUnaryOp Negation of i
   * 6 Weak Mutation 911: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:641 - InsertUnaryOp IINC 1 i
   * 7 Weak Mutation 910: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:641 - InsertUnaryOp Negation of i
   * 8 gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V: I9 Branch 54 IF_ICMPLE L640 - false
   * 9 Weak Mutation 937: gnu.trove.list.array.TFloatArrayList.swap(II)V:655 - InsertUnaryOp Negation of tmp
   * 10 Weak Mutation 936: gnu.trove.list.array.TFloatArrayList.swap(II)V:655 - InsertUnaryOp IINC -1 j
   * 11 Weak Mutation 933: gnu.trove.list.array.TFloatArrayList.swap(II)V:655 - ReplaceVariable j -> i
   * 12 Weak Mutation 932: gnu.trove.list.array.TFloatArrayList.swap(II)V:655 - DeleteField: _data[F
   * 13 Weak Mutation 935: gnu.trove.list.array.TFloatArrayList.swap(II)V:655 - InsertUnaryOp IINC 1 j
   * 14 Weak Mutation 934: gnu.trove.list.array.TFloatArrayList.swap(II)V:655 - InsertUnaryOp Negation of j
   * 15 Weak Mutation 929: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - InsertUnaryOp Negation of j
   * 16 Weak Mutation 928: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - ReplaceVariable j -> i
   * 17 Weak Mutation 931: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - InsertUnaryOp IINC -1 j
   * 18 Weak Mutation 930: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - InsertUnaryOp IINC 1 j
   * 19 Weak Mutation 926: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - InsertUnaryOp IINC -1 i
   * 20 Weak Mutation 927: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - DeleteField: _data[F
   * 21 Weak Mutation 924: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - InsertUnaryOp Negation of i
   * 22 Weak Mutation 925: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - InsertUnaryOp IINC 1 i
   * 23 Weak Mutation 922: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - DeleteField: _data[F
   * 24 Weak Mutation 923: gnu.trove.list.array.TFloatArrayList.swap(II)V:654 - ReplaceVariable i -> j
   * 25 Weak Mutation 920: gnu.trove.list.array.TFloatArrayList.swap(II)V:653 - InsertUnaryOp IINC 1 i
   * 26 Weak Mutation 921: gnu.trove.list.array.TFloatArrayList.swap(II)V:653 - InsertUnaryOp IINC -1 i
   * 27 Weak Mutation 918: gnu.trove.list.array.TFloatArrayList.swap(II)V:653 - ReplaceVariable i -> j
   * 28 Weak Mutation 919: gnu.trove.list.array.TFloatArrayList.swap(II)V:653 - InsertUnaryOp Negation of i
   * 29 Weak Mutation 917: gnu.trove.list.array.TFloatArrayList.swap(II)V:653 - DeleteField: _data[F
   * 30 Weak Mutation 909: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:640 - ReplaceComparisonOperator <= -> >
   * 31 Weak Mutation 908: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:640 - ReplaceConstant - 1 -> 0
   * 32 Weak Mutation 907: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:640 - InsertUnaryOp IINC -1 i
   * 33 Weak Mutation 906: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:640 - InsertUnaryOp IINC 1 i
   * 34 Weak Mutation 905: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:640 - InsertUnaryOp Negation of i
   * 35 Weak Mutation 904: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:640 - DeleteField: _posI
   * 36 Weak Mutation 903: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:640 - InsertUnaryOp -1
   * 37 Weak Mutation 902: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:640 - InsertUnaryOp +1
   * 38 Weak Mutation 901: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:640 - InsertUnaryOp Negation
   * 39 Weak Mutation 916: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:641 - DeleteStatement: nextInt(I)I
   * 40 Weak Mutation 914: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:641 - InsertUnaryOp IINC 1 i
   * 41 Weak Mutation 915: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:641 - InsertUnaryOp IINC -1 i
   * 42 Weak Mutation 912: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:641 - InsertUnaryOp IINC -1 i
   * 43 Weak Mutation 913: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:641 - InsertUnaryOp Negation of i
   * 44 Weak Mutation 911: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:641 - InsertUnaryOp IINC 1 i
   * 45 Weak Mutation 910: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:641 - InsertUnaryOp Negation of i
   * 46 Weak Mutation 909: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:640 - ReplaceComparisonOperator <= -> >
   * 47 Weak Mutation 908: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:640 - ReplaceConstant - 1 -> 0
   * 48 Weak Mutation 907: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:640 - InsertUnaryOp IINC -1 i
   * 49 Weak Mutation 906: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:640 - InsertUnaryOp IINC 1 i
   * 50 Weak Mutation 905: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:640 - InsertUnaryOp Negation of i
   * 51 Weak Mutation 904: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:640 - DeleteField: _posI
   * 52 Weak Mutation 903: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:640 - InsertUnaryOp -1
   * 53 Weak Mutation 902: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:640 - InsertUnaryOp +1
   * 54 Weak Mutation 901: gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V:640 - InsertUnaryOp Negation
   * 55 gnu.trove.list.array.TFloatArrayList.shuffle(Ljava/util/Random;)V: I9 Branch 54 IF_ICMPLE L640 - true
   */

//   @Test
//   public void test59()  throws Throwable  {
//       float[] floatArray0 = new float[4];
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
//       Random random0 = new Random();
//       tFloatArrayList0.shuffle(random0);
//       assertEquals(0.15990734F, random0.nextFloat(), 0.01F);
//       assertEquals(4, tFloatArrayList0.size());
//   }

  //Test case number: 60
  /*
   * 49 covered goals:
   * 1 Weak Mutation 948: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - ReplaceComparisonOperator >= -> -1
   * 2 Weak Mutation 944: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - InsertUnaryOp IINC 1 begin
   * 3 Weak Mutation 945: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - InsertUnaryOp IINC -1 begin
   * 4 Weak Mutation 941: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - InsertUnaryOp IINC -1 end
   * 5 Weak Mutation 940: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - InsertUnaryOp IINC 1 end
   * 6 Weak Mutation 943: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - InsertUnaryOp Negation of begin
   * 7 Weak Mutation 942: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - ReplaceVariable begin -> end
   * 8 Weak Mutation 939: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - InsertUnaryOp Negation of end
   * 9 Weak Mutation 938: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - ReplaceVariable end -> begin
   * 10 Weak Mutation 956: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - ReplaceConstant -  greater than begin index  -> 
   * 11 Weak Mutation 957: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 12 Weak Mutation 958: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - ReplaceVariable begin -> end
   * 13 Weak Mutation 959: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - InsertUnaryOp Negation of begin
   * 14 Weak Mutation 952: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - InsertUnaryOp Negation of end
   * 15 Weak Mutation 953: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - InsertUnaryOp IINC 1 end
   * 16 Weak Mutation 954: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - InsertUnaryOp IINC -1 end
   * 17 Weak Mutation 955: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - DeleteStatement: append(I)Ljava/lang/StringBuilder;
   * 18 Weak Mutation 949: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - ReplaceConstant - end index  -> 
   * 19 Weak Mutation 950: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 20 Weak Mutation 951: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - ReplaceVariable end -> begin
   * 21 Weak Mutation 963: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - DeleteStatement: toString()Ljava/lang/String;
   * 22 Weak Mutation 962: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - DeleteStatement: append(I)Ljava/lang/StringBuilder;
   * 23 Weak Mutation 961: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - InsertUnaryOp IINC -1 begin
   * 24 Weak Mutation 960: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - InsertUnaryOp IINC 1 begin
   * 25 gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;: I4 Branch 55 IF_ICMPGE L663 - false
   * 26 Weak Mutation 956: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - ReplaceConstant -  greater than begin index  -> 
   * 27 Weak Mutation 957: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 28 Weak Mutation 958: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - ReplaceVariable begin -> end
   * 29 Weak Mutation 959: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - InsertUnaryOp Negation of begin
   * 30 Weak Mutation 952: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - InsertUnaryOp Negation of end
   * 31 Weak Mutation 953: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - InsertUnaryOp IINC 1 end
   * 32 Weak Mutation 954: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - InsertUnaryOp IINC -1 end
   * 33 Weak Mutation 955: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - DeleteStatement: append(I)Ljava/lang/StringBuilder;
   * 34 Weak Mutation 948: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - ReplaceComparisonOperator >= -> -1
   * 35 Weak Mutation 949: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - ReplaceConstant - end index  -> 
   * 36 Weak Mutation 950: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 37 Weak Mutation 951: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - ReplaceVariable end -> begin
   * 38 Weak Mutation 944: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - InsertUnaryOp IINC 1 begin
   * 39 Weak Mutation 945: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - InsertUnaryOp IINC -1 begin
   * 40 Weak Mutation 941: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - InsertUnaryOp IINC -1 end
   * 41 Weak Mutation 940: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - InsertUnaryOp IINC 1 end
   * 42 Weak Mutation 943: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - InsertUnaryOp Negation of begin
   * 43 Weak Mutation 942: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - ReplaceVariable begin -> end
   * 44 Weak Mutation 939: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - InsertUnaryOp Negation of end
   * 45 Weak Mutation 938: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - ReplaceVariable end -> begin
   * 46 Weak Mutation 963: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - DeleteStatement: toString()Ljava/lang/String;
   * 47 Weak Mutation 962: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - DeleteStatement: append(I)Ljava/lang/StringBuilder;
   * 48 Weak Mutation 961: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - InsertUnaryOp IINC -1 begin
   * 49 Weak Mutation 960: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:664 - InsertUnaryOp IINC 1 begin
   */

  @Test
  public void test60()  throws Throwable  {
      float[] floatArray0 = new float[7];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
      assertNotNull(tFloatArrayList0);
      
      // Undeclared exception!
      try {
        tFloatArrayList0.subList(883, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // end index 0 greater than begin index 883
         //
      }
  }

  //Test case number: 61
  /*
   * 24 covered goals:
   * 1 Weak Mutation 946: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - ReplaceComparisonOperator >= -> ==
   * 2 Weak Mutation 970: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:667 - ReplaceComparisonOperator >= -> -1
   * 3 Weak Mutation 967: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:667 - InsertUnaryOp IINC -1 begin
   * 4 Weak Mutation 966: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:667 - InsertUnaryOp IINC 1 begin
   * 5 Weak Mutation 965: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:667 - InsertUnaryOp Negation of begin
   * 6 Weak Mutation 964: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:667 - ReplaceVariable begin -> end
   * 7 Weak Mutation 971: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:668 - ReplaceConstant - begin index can not be < 0 -> 
   * 8 gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;: I4 Branch 55 IF_ICMPGE L663 - true
   * 9 gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;: I26 Branch 56 IFGE L667 - false
   * 10 Weak Mutation 13: gnu.trove.list.array.TFloatArrayList.<init>(Lgnu/trove/TFloatCollection;)V:104 - DeleteStatement: addAll(Lgnu/trove/TFloatCollection;)Z
   * 11 Weak Mutation 676: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:501 - InsertUnaryOp IINC -1 changed
   * 12 Weak Mutation 675: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:501 - InsertUnaryOp IINC 1 changed
   * 13 Weak Mutation 674: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:501 - InsertUnaryOp Negation of changed
   * 14 Weak Mutation 668: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:495 - ReplaceComparisonOperator == -> !=
   * 15 Weak Mutation 665: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:493 - ReplaceConstant - 0 -> 1
   * 16 Weak Mutation 666: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:494 - DeleteStatement: iterator()Lgnu/trove/iterator/TFloatIterator;
   * 17 Weak Mutation 667: gnu.trove.list.array.TFloatArrayList.addAll(Lgnu/trove/TFloatCollection;)Z:495 - DeleteStatement: hasNext()Z
   * 18 Weak Mutation 946: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - ReplaceComparisonOperator >= -> ==
   * 19 Weak Mutation 971: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:668 - ReplaceConstant - begin index can not be < 0 -> 
   * 20 Weak Mutation 970: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:667 - ReplaceComparisonOperator >= -> -1
   * 21 Weak Mutation 967: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:667 - InsertUnaryOp IINC -1 begin
   * 22 Weak Mutation 966: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:667 - InsertUnaryOp IINC 1 begin
   * 23 Weak Mutation 965: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:667 - InsertUnaryOp Negation of begin
   * 24 Weak Mutation 964: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:667 - ReplaceVariable begin -> end
   */

  @Test
  public void test61()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList((TFloatCollection) tFloatLinkedList0);
      // Undeclared exception!
      try {
        tFloatArrayList0.subList((-846), (-287));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  //Test case number: 62
  /*
   * 31 covered goals:
   * 1 Weak Mutation 969: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:667 - ReplaceComparisonOperator >= -> >
   * 2 Weak Mutation 978: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:670 - ReplaceComparisonOperator <= -> <
   * 3 Weak Mutation 994: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - ReplaceArithmeticOperator - -> %
   * 4 Weak Mutation 947: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - ReplaceComparisonOperator >= -> >
   * 5 Weak Mutation 1008: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - InsertUnaryOp Negation of end
   * 6 Weak Mutation 1009: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - InsertUnaryOp IINC 1 end
   * 7 Weak Mutation 1010: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - InsertUnaryOp IINC -1 end
   * 8 Weak Mutation 1012: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - ReplaceComparisonOperator >= -> >
   * 9 Weak Mutation 1000: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - InsertUnaryOp IINC -1 begin
   * 10 Weak Mutation 1003: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - InsertUnaryOp Negation of i
   * 11 Weak Mutation 1005: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - InsertUnaryOp IINC -1 i
   * 12 Weak Mutation 1004: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - InsertUnaryOp IINC 1 i
   * 13 Weak Mutation 992: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - InsertUnaryOp IINC -1 begin
   * 14 Weak Mutation 995: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - ReplaceArithmeticOperator - -> /
   * 15 Weak Mutation 994: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - ReplaceArithmeticOperator - -> %
   * 16 Weak Mutation 999: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - InsertUnaryOp IINC 1 begin
   * 17 Weak Mutation 998: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - InsertUnaryOp Negation of begin
   * 18 Weak Mutation 986: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - InsertUnaryOp Negation of end
   * 19 Weak Mutation 987: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - InsertUnaryOp IINC 1 end
   * 20 Weak Mutation 990: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - InsertUnaryOp Negation of begin
   * 21 Weak Mutation 991: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - InsertUnaryOp IINC 1 begin
   * 22 Weak Mutation 988: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - InsertUnaryOp IINC -1 end
   * 23 Weak Mutation 978: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:670 - ReplaceComparisonOperator <= -> <
   * 24 Weak Mutation 976: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:670 - DeleteField: _data[F
   * 25 Weak Mutation 969: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:667 - ReplaceComparisonOperator >= -> >
   * 26 Weak Mutation 975: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:670 - InsertUnaryOp IINC -1 end
   * 27 Weak Mutation 974: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:670 - InsertUnaryOp IINC 1 end
   * 28 Weak Mutation 973: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:670 - InsertUnaryOp Negation of end
   * 29 gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;: I26 Branch 56 IFGE L667 - true
   * 30 gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;: I40 Branch 57 IF_ICMPLE L670 - true
   * 31 gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;: I73 Branch 58 IF_ICMPGE L674 - true
   */

//   @Test
//   public void test62()  throws Throwable  {
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(0, (-1441.3468F));
//       TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList0);
//       TUnmodifiableFloatList tUnmodifiableFloatList1 = (TUnmodifiableFloatList)tUnmodifiableFloatList0.subList(0, 0);
//       assertEquals((-1441.3468F), tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(true, tFloatArrayList0.isEmpty());
//       assertNotNull(tUnmodifiableFloatList1);
//       assertEquals(0, tUnmodifiableFloatList1.size());
//   }

  //Test case number: 63
  /*
   * 15 covered goals:
   * 1 Weak Mutation 979: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:670 - ReplaceComparisonOperator <= -> -1
   * 2 Weak Mutation 984: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:671 - DeleteStatement: toString()Ljava/lang/String;
   * 3 Weak Mutation 982: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:671 - DeleteField: _data[F
   * 4 Weak Mutation 983: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:671 - DeleteStatement: append(I)Ljava/lang/StringBuilder;
   * 5 Weak Mutation 980: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:671 - ReplaceConstant - end index <  -> 
   * 6 Weak Mutation 981: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:671 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 7 gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;: I40 Branch 57 IF_ICMPLE L670 - false
   * 8 Weak Mutation 947: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - ReplaceComparisonOperator >= -> >
   * 9 Weak Mutation 984: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:671 - DeleteStatement: toString()Ljava/lang/String;
   * 10 Weak Mutation 979: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:670 - ReplaceComparisonOperator <= -> -1
   * 11 Weak Mutation 982: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:671 - DeleteField: _data[F
   * 12 Weak Mutation 983: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:671 - DeleteStatement: append(I)Ljava/lang/StringBuilder;
   * 13 Weak Mutation 980: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:671 - ReplaceConstant - end index <  -> 
   * 14 Weak Mutation 981: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:671 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 15 Weak Mutation 968: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:667 - ReplaceComparisonOperator >= -> ==
   */

  @Test
  public void test63()  throws Throwable  {
      float[] floatArray0 = new float[3];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, 2041.2944F);
      assertNotNull(tFloatArrayList0);
      
      // Undeclared exception!
      try {
        tFloatArrayList0.subList(818, 818);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index < 3
         //
      }
  }

  //Test case number: 64
  /*
   * 83 covered goals:
   * 1 Weak Mutation 972: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:670 - ReplaceVariable end -> begin
   * 2 Weak Mutation 985: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - ReplaceVariable end -> begin
   * 3 Weak Mutation 989: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - ReplaceVariable begin -> end
   * 4 Weak Mutation 1022: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - ReplaceVariable i -> end
   * 5 Weak Mutation 1023: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - ReplaceVariable i -> begin
   * 6 Weak Mutation 1013: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - ReplaceComparisonOperator >= -> -1
   * 7 Weak Mutation 1001: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - ReplaceVariable i -> end
   * 8 Weak Mutation 1002: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - ReplaceVariable i -> begin
   * 9 Weak Mutation 1007: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - ReplaceVariable end -> begin
   * 10 Weak Mutation 1006: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - ReplaceVariable end -> i
   * 11 Weak Mutation 997: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - ReplaceVariable begin -> end
   * 12 Weak Mutation 1016: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:675 - ReplaceVariable i -> end
   * 13 Weak Mutation 1017: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:675 - ReplaceVariable i -> begin
   * 14 Weak Mutation 1018: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:675 - InsertUnaryOp Negation of i
   * 15 Weak Mutation 1019: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:675 - InsertUnaryOp IINC 1 i
   * 16 Weak Mutation 1020: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:675 - InsertUnaryOp IINC -1 i
   * 17 Weak Mutation 1021: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:675 - DeleteStatement: add(F)Z
   * 18 Weak Mutation 1014: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:675 - ReplaceVariable list -> this
   * 19 Weak Mutation 1015: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:675 - DeleteField: _data[F
   * 20 gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;: I73 Branch 58 IF_ICMPGE L674 - false
   * 21 Weak Mutation 76: gnu.trove.list.array.TFloatArrayList.add(F)Z:221 - DeleteField: _posI
   * 22 Weak Mutation 87: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - DeleteField: _posI
   * 23 Weak Mutation 944: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - InsertUnaryOp IINC 1 begin
   * 24 Weak Mutation 945: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - InsertUnaryOp IINC -1 begin
   * 25 Weak Mutation 946: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - ReplaceComparisonOperator >= -> ==
   * 26 Weak Mutation 941: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - InsertUnaryOp IINC -1 end
   * 27 Weak Mutation 940: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - InsertUnaryOp IINC 1 end
   * 28 Weak Mutation 943: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - InsertUnaryOp Negation of begin
   * 29 Weak Mutation 942: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - ReplaceVariable begin -> end
   * 30 Weak Mutation 939: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - InsertUnaryOp Negation of end
   * 31 Weak Mutation 938: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:663 - ReplaceVariable end -> begin
   * 32 Weak Mutation 1008: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - InsertUnaryOp Negation of end
   * 33 Weak Mutation 1009: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - InsertUnaryOp IINC 1 end
   * 34 Weak Mutation 1010: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - InsertUnaryOp IINC -1 end
   * 35 Weak Mutation 1012: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - ReplaceComparisonOperator >= -> >
   * 36 Weak Mutation 1000: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - InsertUnaryOp IINC -1 begin
   * 37 Weak Mutation 1003: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - InsertUnaryOp Negation of i
   * 38 Weak Mutation 1005: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - InsertUnaryOp IINC -1 i
   * 39 Weak Mutation 1004: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - InsertUnaryOp IINC 1 i
   * 40 Weak Mutation 993: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - ReplaceArithmeticOperator - -> +
   * 41 Weak Mutation 992: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - InsertUnaryOp IINC -1 begin
   * 42 Weak Mutation 995: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - ReplaceArithmeticOperator - -> /
   * 43 Weak Mutation 994: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - ReplaceArithmeticOperator - -> %
   * 44 Weak Mutation 996: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - ReplaceArithmeticOperator - -> *
   * 45 Weak Mutation 999: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - InsertUnaryOp IINC 1 begin
   * 46 Weak Mutation 998: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - InsertUnaryOp Negation of begin
   * 47 Weak Mutation 986: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - InsertUnaryOp Negation of end
   * 48 Weak Mutation 987: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - InsertUnaryOp IINC 1 end
   * 49 Weak Mutation 990: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - InsertUnaryOp Negation of begin
   * 50 Weak Mutation 991: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - InsertUnaryOp IINC 1 begin
   * 51 Weak Mutation 988: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - InsertUnaryOp IINC -1 end
   * 52 Weak Mutation 976: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:670 - DeleteField: _data[F
   * 53 Weak Mutation 977: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:670 - ReplaceComparisonOperator <= -> ==
   * 54 Weak Mutation 968: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:667 - ReplaceComparisonOperator >= -> ==
   * 55 Weak Mutation 975: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:670 - InsertUnaryOp IINC -1 end
   * 56 Weak Mutation 974: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:670 - InsertUnaryOp IINC 1 end
   * 57 Weak Mutation 973: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:670 - InsertUnaryOp Negation of end
   * 58 Weak Mutation 967: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:667 - InsertUnaryOp IINC -1 begin
   * 59 Weak Mutation 966: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:667 - InsertUnaryOp IINC 1 begin
   * 60 Weak Mutation 965: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:667 - InsertUnaryOp Negation of begin
   * 61 Weak Mutation 964: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:667 - ReplaceVariable begin -> end
   * 62 Weak Mutation 1016: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:675 - ReplaceVariable i -> end
   * 63 Weak Mutation 1017: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:675 - ReplaceVariable i -> begin
   * 64 Weak Mutation 1018: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:675 - InsertUnaryOp Negation of i
   * 65 Weak Mutation 1019: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:675 - InsertUnaryOp IINC 1 i
   * 66 Weak Mutation 1020: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:675 - InsertUnaryOp IINC -1 i
   * 67 Weak Mutation 1021: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:675 - DeleteStatement: add(F)Z
   * 68 Weak Mutation 1022: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - ReplaceVariable i -> end
   * 69 Weak Mutation 1023: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - ReplaceVariable i -> begin
   * 70 Weak Mutation 1013: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - ReplaceComparisonOperator >= -> -1
   * 71 Weak Mutation 1014: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:675 - ReplaceVariable list -> this
   * 72 Weak Mutation 1015: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:675 - DeleteField: _data[F
   * 73 Weak Mutation 1001: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - ReplaceVariable i -> end
   * 74 Weak Mutation 1002: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - ReplaceVariable i -> begin
   * 75 Weak Mutation 1007: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - ReplaceVariable end -> begin
   * 76 Weak Mutation 1006: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - ReplaceVariable end -> i
   * 77 Weak Mutation 993: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - ReplaceArithmeticOperator - -> +
   * 78 Weak Mutation 997: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:674 - ReplaceVariable begin -> end
   * 79 Weak Mutation 996: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - ReplaceArithmeticOperator - -> *
   * 80 Weak Mutation 985: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - ReplaceVariable end -> begin
   * 81 Weak Mutation 989: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:673 - ReplaceVariable begin -> end
   * 82 Weak Mutation 977: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:670 - ReplaceComparisonOperator <= -> ==
   * 83 Weak Mutation 972: gnu.trove.list.array.TFloatArrayList.subList(II)Lgnu/trove/list/TFloatList;:670 - ReplaceVariable end -> begin
   */

//   @Test
//   public void test64()  throws Throwable  {
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(969);
//       TFloatArrayList tFloatArrayList1 = (TFloatArrayList)tFloatArrayList0.subList(239, 811);
//       assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}", tFloatArrayList1.toString());
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertNotNull(tFloatArrayList1);
//   }

  //Test case number: 65
  /*
   * 93 covered goals:
   * 1 Weak Mutation 1024: gnu.trove.list.array.TFloatArrayList.toArray()[F:683 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 1025: gnu.trove.list.array.TFloatArrayList.toArray()[F:683 - InsertUnaryOp Negation
   * 3 Weak Mutation 1026: gnu.trove.list.array.TFloatArrayList.toArray()[F:683 - InsertUnaryOp +1
   * 4 Weak Mutation 1027: gnu.trove.list.array.TFloatArrayList.toArray()[F:683 - InsertUnaryOp -1
   * 5 Weak Mutation 1028: gnu.trove.list.array.TFloatArrayList.toArray()[F:683 - DeleteField: _posI
   * 6 Weak Mutation 1029: gnu.trove.list.array.TFloatArrayList.toArray()[F:683 - DeleteStatement: toArray(II)[F
   * 7 Weak Mutation 1032: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:689 - InsertUnaryOp IINC 1 len
   * 8 Weak Mutation 1033: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:689 - InsertUnaryOp IINC -1 len
   * 9 Weak Mutation 1030: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:689 - ReplaceVariable len -> offset
   * 10 Weak Mutation 1031: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:689 - InsertUnaryOp Negation of len
   * 11 Weak Mutation 1034: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - ReplaceVariable offset -> len
   * 12 Weak Mutation 1035: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - InsertUnaryOp Negation of offset
   * 13 Weak Mutation 1036: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - InsertUnaryOp IINC 1 offset
   * 14 Weak Mutation 1037: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - InsertUnaryOp IINC -1 offset
   * 15 Weak Mutation 1038: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - ReplaceVariable len -> offset
   * 16 Weak Mutation 1039: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - InsertUnaryOp Negation of len
   * 17 Weak Mutation 1041: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - InsertUnaryOp IINC -1 len
   * 18 Weak Mutation 1040: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - InsertUnaryOp IINC 1 len
   * 19 Weak Mutation 1042: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - DeleteStatement: toArray([FII)[F
   * 20 Weak Mutation 1066: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:709 - ReplaceComparisonOperator != -> <
   * 21 Weak Mutation 1062: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:709 - ReplaceVariable len -> offset
   * 22 Weak Mutation 1070: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp Negation of offset
   * 23 Weak Mutation 1071: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp IINC 1 offset
   * 24 Weak Mutation 1069: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - ReplaceVariable offset -> len
   * 25 Weak Mutation 1083: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - DeleteField: _posI
   * 26 Weak Mutation 1082: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp -1
   * 27 Weak Mutation 1081: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp +1
   * 28 Weak Mutation 1080: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp Negation
   * 29 Weak Mutation 1085: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - ReplaceComparisonOperator < -> -2
   * 30 Weak Mutation 1074: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - ReplaceComparisonOperator < -> <=
   * 31 Weak Mutation 1072: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp IINC -1 offset
   * 32 Weak Mutation 1079: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp IINC -1 offset
   * 33 Weak Mutation 1078: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp IINC 1 offset
   * 34 Weak Mutation 1077: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp Negation of offset
   * 35 Weak Mutation 1076: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - ReplaceVariable offset -> len
   * 36 Weak Mutation 1096: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - ReplaceConstant - 0 -> 1
   * 37 Weak Mutation 1097: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - ReplaceVariable len -> offset
   * 38 Weak Mutation 1098: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - InsertUnaryOp Negation of len
   * 39 Weak Mutation 1099: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 40 Weak Mutation 1092: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - ReplaceVariable offset -> len
   * 41 Weak Mutation 1093: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - InsertUnaryOp Negation of offset
   * 42 Weak Mutation 1094: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - InsertUnaryOp IINC 1 offset
   * 43 Weak Mutation 1095: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - InsertUnaryOp IINC -1 offset
   * 44 Weak Mutation 1091: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - DeleteField: _data[F
   * 45 gnu.trove.list.array.TFloatArrayList.toArray(II)[F: root-Branch
   * 46 gnu.trove.list.array.TFloatArrayList.toArray()[F: root-Branch
   * 47 gnu.trove.list.array.TFloatArrayList.toArray([FII)[F: I3 Branch 60 IFNE L709 - true
   * 48 gnu.trove.list.array.TFloatArrayList.toArray([FII)[F: I11 Branch 61 IFLT L712 - false
   * 49 gnu.trove.list.array.TFloatArrayList.toArray([FII)[F: I15 Branch 62 IF_ICMPLT L712 - true
   * 50 Weak Mutation 1096: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - ReplaceConstant - 0 -> 1
   * 51 Weak Mutation 1097: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - ReplaceVariable len -> offset
   * 52 Weak Mutation 1098: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - InsertUnaryOp Negation of len
   * 53 Weak Mutation 1099: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 54 Weak Mutation 1092: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - ReplaceVariable offset -> len
   * 55 Weak Mutation 1093: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - InsertUnaryOp Negation of offset
   * 56 Weak Mutation 1094: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - InsertUnaryOp IINC 1 offset
   * 57 Weak Mutation 1095: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - InsertUnaryOp IINC -1 offset
   * 58 Weak Mutation 1091: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - DeleteField: _data[F
   * 59 Weak Mutation 1032: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:689 - InsertUnaryOp IINC 1 len
   * 60 Weak Mutation 1033: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:689 - InsertUnaryOp IINC -1 len
   * 61 Weak Mutation 1034: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - ReplaceVariable offset -> len
   * 62 Weak Mutation 1035: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - InsertUnaryOp Negation of offset
   * 63 Weak Mutation 1036: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - InsertUnaryOp IINC 1 offset
   * 64 Weak Mutation 1037: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - InsertUnaryOp IINC -1 offset
   * 65 Weak Mutation 1038: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - ReplaceVariable len -> offset
   * 66 Weak Mutation 1039: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - InsertUnaryOp Negation of len
   * 67 Weak Mutation 1024: gnu.trove.list.array.TFloatArrayList.toArray()[F:683 - ReplaceConstant - 0 -> 1
   * 68 Weak Mutation 1025: gnu.trove.list.array.TFloatArrayList.toArray()[F:683 - InsertUnaryOp Negation
   * 69 Weak Mutation 1026: gnu.trove.list.array.TFloatArrayList.toArray()[F:683 - InsertUnaryOp +1
   * 70 Weak Mutation 1027: gnu.trove.list.array.TFloatArrayList.toArray()[F:683 - InsertUnaryOp -1
   * 71 Weak Mutation 1028: gnu.trove.list.array.TFloatArrayList.toArray()[F:683 - DeleteField: _posI
   * 72 Weak Mutation 1029: gnu.trove.list.array.TFloatArrayList.toArray()[F:683 - DeleteStatement: toArray(II)[F
   * 73 Weak Mutation 1030: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:689 - ReplaceVariable len -> offset
   * 74 Weak Mutation 1031: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:689 - InsertUnaryOp Negation of len
   * 75 Weak Mutation 1041: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - InsertUnaryOp IINC -1 len
   * 76 Weak Mutation 1040: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - InsertUnaryOp IINC 1 len
   * 77 Weak Mutation 1042: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - DeleteStatement: toArray([FII)[F
   * 78 Weak Mutation 1066: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:709 - ReplaceComparisonOperator != -> <
   * 79 Weak Mutation 1070: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp Negation of offset
   * 80 Weak Mutation 1071: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp IINC 1 offset
   * 81 Weak Mutation 1069: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - ReplaceVariable offset -> len
   * 82 Weak Mutation 1062: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:709 - ReplaceVariable len -> offset
   * 83 Weak Mutation 1083: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - DeleteField: _posI
   * 84 Weak Mutation 1082: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp -1
   * 85 Weak Mutation 1081: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp +1
   * 86 Weak Mutation 1080: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp Negation
   * 87 Weak Mutation 1085: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - ReplaceComparisonOperator < -> -2
   * 88 Weak Mutation 1074: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - ReplaceComparisonOperator < -> <=
   * 89 Weak Mutation 1072: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp IINC -1 offset
   * 90 Weak Mutation 1079: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp IINC -1 offset
   * 91 Weak Mutation 1078: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp IINC 1 offset
   * 92 Weak Mutation 1077: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp Negation of offset
   * 93 Weak Mutation 1076: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - ReplaceVariable offset -> len
   */

//   @Test
//   public void test65()  throws Throwable  {
//       float[] floatArray0 = new float[3];
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
//       float[] floatArray1 = tFloatArrayList0.toArray();
//       assertNotNull(floatArray1);
//       assertEquals("{0.0, 0.0, 0.0}", tFloatArrayList0.toString());
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(3, tFloatArrayList0.size());
//   }

  //Test case number: 66
  /*
   * 32 covered goals:
   * 1 Weak Mutation 1049: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:698 - ReplaceComparisonOperator <= -> -1
   * 2 Weak Mutation 1043: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:698 - InsertUnaryOp Negation
   * 3 Weak Mutation 1045: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:698 - InsertUnaryOp -1
   * 4 Weak Mutation 1044: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:698 - InsertUnaryOp +1
   * 5 Weak Mutation 1051: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:699 - InsertUnaryOp +1
   * 6 Weak Mutation 1050: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:699 - InsertUnaryOp Negation
   * 7 Weak Mutation 1052: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:699 - InsertUnaryOp -1
   * 8 Weak Mutation 1055: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:700 - InsertUnaryOp IINC 1 len
   * 9 Weak Mutation 1054: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:700 - InsertUnaryOp Negation of len
   * 10 Weak Mutation 1058: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:700 - DeleteField: no_entry_valueF
   * 11 Weak Mutation 1056: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:700 - InsertUnaryOp IINC -1 len
   * 12 Weak Mutation 1057: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:700 - InsertUnaryOp Negation
   * 13 Weak Mutation 1059: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:702 - ReplaceConstant - 0 -> 1
   * 14 Weak Mutation 1060: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:702 - InsertUnaryOp Negation of len
   * 15 Weak Mutation 1061: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:702 - DeleteStatement: toArray([FII)[F
   * 16 gnu.trove.list.array.TFloatArrayList.toArray([F)[F: I11 Branch 59 IF_ICMPLE L698 - false
   * 17 Weak Mutation 1068: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:709 - ReplaceComparisonOperator != -> -1
   * 18 Weak Mutation 1049: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:698 - ReplaceComparisonOperator <= -> -1
   * 19 Weak Mutation 1051: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:699 - InsertUnaryOp +1
   * 20 Weak Mutation 1050: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:699 - InsertUnaryOp Negation
   * 21 Weak Mutation 1052: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:699 - InsertUnaryOp -1
   * 22 Weak Mutation 1055: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:700 - InsertUnaryOp IINC 1 len
   * 23 Weak Mutation 1054: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:700 - InsertUnaryOp Negation of len
   * 24 Weak Mutation 1043: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:698 - InsertUnaryOp Negation
   * 25 Weak Mutation 1045: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:698 - InsertUnaryOp -1
   * 26 Weak Mutation 1044: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:698 - InsertUnaryOp +1
   * 27 Weak Mutation 1058: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:700 - DeleteField: no_entry_valueF
   * 28 Weak Mutation 1059: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:702 - ReplaceConstant - 0 -> 1
   * 29 Weak Mutation 1056: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:700 - InsertUnaryOp IINC -1 len
   * 30 Weak Mutation 1057: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:700 - InsertUnaryOp Negation
   * 31 Weak Mutation 1060: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:702 - InsertUnaryOp Negation of len
   * 32 Weak Mutation 1061: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:702 - DeleteStatement: toArray([FII)[F
   */

//   @Test
//   public void test66()  throws Throwable  {
//       float[] floatArray0 = new float[6];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, (-1.0F));
//       assertNotNull(tFloatArrayList0);
//       
//       tFloatArrayList0.clear(1442);
//       TFloatHashSet tFloatHashSet0 = new TFloatHashSet(10, 10, 10);
//       tFloatArrayList0.toArray(tFloatHashSet0._set);
//       assertEquals("{}", tFloatArrayList0.toString());
//       assertEquals((-1.0F), tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 67
  /*
   * 5 covered goals:
   * 1 Weak Mutation 1048: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:698 - ReplaceComparisonOperator <= -> <
   * 2 Weak Mutation 1046: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:698 - DeleteField: _posI
   * 3 gnu.trove.list.array.TFloatArrayList.toArray([F)[F: I11 Branch 59 IF_ICMPLE L698 - true
   * 4 Weak Mutation 1048: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:698 - ReplaceComparisonOperator <= -> <
   * 5 Weak Mutation 1046: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:698 - DeleteField: _posI
   */

//   @Test
//   public void test67()  throws Throwable  {
//       float[] floatArray0 = new float[1];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, (-203.43948F));
//       assertNotNull(tFloatArrayList0);
//       
//       float[] floatArray1 = tFloatArrayList0.toArray(floatArray0);
//       assertNotNull(floatArray1);
//       assertEquals((-203.43948F), tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 68
  /*
   * 20 covered goals:
   * 1 Weak Mutation 1047: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:698 - ReplaceComparisonOperator <= -> ==
   * 2 Weak Mutation 1096: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 1097: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - ReplaceVariable len -> offset
   * 4 Weak Mutation 1098: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - InsertUnaryOp Negation of len
   * 5 Weak Mutation 1099: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 6 Weak Mutation 1092: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - ReplaceVariable offset -> len
   * 7 Weak Mutation 1093: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - InsertUnaryOp Negation of offset
   * 8 Weak Mutation 1094: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - InsertUnaryOp IINC 1 offset
   * 9 Weak Mutation 1095: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - InsertUnaryOp IINC -1 offset
   * 10 Weak Mutation 1091: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:715 - DeleteField: _data[F
   * 11 Weak Mutation 1043: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:698 - InsertUnaryOp Negation
   * 12 Weak Mutation 1045: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:698 - InsertUnaryOp -1
   * 13 Weak Mutation 1044: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:698 - InsertUnaryOp +1
   * 14 Weak Mutation 1046: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:698 - DeleteField: _posI
   * 15 Weak Mutation 1059: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:702 - ReplaceConstant - 0 -> 1
   * 16 Weak Mutation 1060: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:702 - InsertUnaryOp Negation of len
   * 17 Weak Mutation 1061: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:702 - DeleteStatement: toArray([FII)[F
   * 18 Weak Mutation 1083: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - DeleteField: _posI
   * 19 Weak Mutation 1085: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - ReplaceComparisonOperator < -> -2
   * 20 Weak Mutation 1047: gnu.trove.list.array.TFloatArrayList.toArray([F)[F:698 - ReplaceComparisonOperator <= -> ==
   */

//   @Test
//   public void test68()  throws Throwable  {
//       float[] floatArray0 = new float[12];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
//       assertNotNull(tFloatArrayList0);
//       
//       float[] floatArray1 = new float[4];
//       float[] floatArray2 = tFloatArrayList0.toArray(floatArray1);
//       assertNotNull(floatArray2);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 69
  /*
   * 14 covered goals:
   * 1 Weak Mutation 1067: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:709 - ReplaceComparisonOperator != -> >
   * 2 Weak Mutation 1086: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - ReplaceComparisonOperator < -> <=
   * 3 Weak Mutation 1088: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:713 - InsertUnaryOp Negation of offset
   * 4 Weak Mutation 1089: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:713 - InsertUnaryOp IINC 1 offset
   * 5 Weak Mutation 1090: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:713 - InsertUnaryOp IINC -1 offset
   * 6 Weak Mutation 1087: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:713 - ReplaceVariable offset -> len
   * 7 gnu.trove.list.array.TFloatArrayList.toArray([FII)[F: I15 Branch 62 IF_ICMPLT L712 - false
   * 8 Weak Mutation 1074: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - ReplaceComparisonOperator < -> <=
   * 9 Weak Mutation 1088: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:713 - InsertUnaryOp Negation of offset
   * 10 Weak Mutation 1089: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:713 - InsertUnaryOp IINC 1 offset
   * 11 Weak Mutation 1090: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:713 - InsertUnaryOp IINC -1 offset
   * 12 Weak Mutation 1067: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:709 - ReplaceComparisonOperator != -> >
   * 13 Weak Mutation 1087: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:713 - ReplaceVariable offset -> len
   * 14 Weak Mutation 1086: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - ReplaceComparisonOperator < -> <=
   */

  @Test
  public void test69()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      float[] floatArray0 = new float[9];
      // Undeclared exception!
      try {
        tFloatArrayList0.toArray(floatArray0, 0, (-691));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
      }
  }

  //Test case number: 70
  /*
   * 11 covered goals:
   * 1 Weak Mutation 1084: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - ReplaceComparisonOperator < -> !=
   * 2 Weak Mutation 1073: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - ReplaceComparisonOperator < -> !=
   * 3 Weak Mutation 1082: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp -1
   * 4 Weak Mutation 1081: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp +1
   * 5 Weak Mutation 1080: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp Negation
   * 6 Weak Mutation 1079: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp IINC -1 offset
   * 7 Weak Mutation 1078: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp IINC 1 offset
   * 8 Weak Mutation 1077: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp Negation of offset
   * 9 Weak Mutation 1076: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - ReplaceVariable offset -> len
   * 10 Weak Mutation 1084: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - ReplaceComparisonOperator < -> !=
   * 11 Weak Mutation 1073: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - ReplaceComparisonOperator < -> !=
   */

  @Test
  public void test70()  throws Throwable  {
      float[] floatArray0 = new float[1];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(1565, (-562.0F));
      // Undeclared exception!
      try {
        tFloatArrayList0.toArray(floatArray0, 317534141, 1029);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 317534141
         //
      }
  }

  //Test case number: 71
  /*
   * 29 covered goals:
   * 1 Weak Mutation 1075: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - ReplaceComparisonOperator < -> -2
   * 2 gnu.trove.list.array.TFloatArrayList.toArray([FII)[F: I11 Branch 61 IFLT L712 - true
   * 3 Weak Mutation 1088: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:713 - InsertUnaryOp Negation of offset
   * 4 Weak Mutation 1089: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:713 - InsertUnaryOp IINC 1 offset
   * 5 Weak Mutation 1090: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:713 - InsertUnaryOp IINC -1 offset
   * 6 Weak Mutation 1032: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:689 - InsertUnaryOp IINC 1 len
   * 7 Weak Mutation 1033: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:689 - InsertUnaryOp IINC -1 len
   * 8 Weak Mutation 1034: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - ReplaceVariable offset -> len
   * 9 Weak Mutation 1035: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - InsertUnaryOp Negation of offset
   * 10 Weak Mutation 1036: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - InsertUnaryOp IINC 1 offset
   * 11 Weak Mutation 1037: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - InsertUnaryOp IINC -1 offset
   * 12 Weak Mutation 1038: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - ReplaceVariable len -> offset
   * 13 Weak Mutation 1039: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - InsertUnaryOp Negation of len
   * 14 Weak Mutation 1030: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:689 - ReplaceVariable len -> offset
   * 15 Weak Mutation 1031: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:689 - InsertUnaryOp Negation of len
   * 16 Weak Mutation 1041: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - InsertUnaryOp IINC -1 len
   * 17 Weak Mutation 1040: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - InsertUnaryOp IINC 1 len
   * 18 Weak Mutation 1042: gnu.trove.list.array.TFloatArrayList.toArray(II)[F:690 - DeleteStatement: toArray([FII)[F
   * 19 Weak Mutation 1066: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:709 - ReplaceComparisonOperator != -> <
   * 20 Weak Mutation 1064: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:709 - InsertUnaryOp IINC 1 len
   * 21 Weak Mutation 1065: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:709 - InsertUnaryOp IINC -1 len
   * 22 Weak Mutation 1070: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp Negation of offset
   * 23 Weak Mutation 1071: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp IINC 1 offset
   * 24 Weak Mutation 1069: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - ReplaceVariable offset -> len
   * 25 Weak Mutation 1062: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:709 - ReplaceVariable len -> offset
   * 26 Weak Mutation 1063: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:709 - InsertUnaryOp Negation of len
   * 27 Weak Mutation 1087: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:713 - ReplaceVariable offset -> len
   * 28 Weak Mutation 1072: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - InsertUnaryOp IINC -1 offset
   * 29 Weak Mutation 1075: gnu.trove.list.array.TFloatArrayList.toArray([FII)[F:712 - ReplaceComparisonOperator < -> -2
   */

  @Test
  public void test71()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      // Undeclared exception!
      try {
        tFloatArrayList0.toArray((-1531), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -1531
         //
      }
  }

  //Test case number: 72
  /*
   * 11 covered goals:
   * 1 Weak Mutation 1100: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:722 - ReplaceVariable len -> dest_pos
   * 2 Weak Mutation 1102: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:722 - InsertUnaryOp Negation of len
   * 3 Weak Mutation 1103: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:722 - InsertUnaryOp IINC 1 len
   * 4 Weak Mutation 1104: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:722 - InsertUnaryOp IINC -1 len
   * 5 Weak Mutation 1107: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:722 - ReplaceComparisonOperator != -> -1
   * 6 gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F: I3 Branch 63 IFNE L722 - false
   * 7 Weak Mutation 1100: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:722 - ReplaceVariable len -> dest_pos
   * 8 Weak Mutation 1102: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:722 - InsertUnaryOp Negation of len
   * 9 Weak Mutation 1103: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:722 - InsertUnaryOp IINC 1 len
   * 10 Weak Mutation 1104: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:722 - InsertUnaryOp IINC -1 len
   * 11 Weak Mutation 1107: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:722 - ReplaceComparisonOperator != -> -1
   */

//   @Test
//   public void test72()  throws Throwable  {
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(0, (-1370.8738F));
//       float[] floatArray0 = new float[8];
//       float[] floatArray1 = tFloatArrayList0.toArray(floatArray0, 0, 43, 0);
//       assertEquals((-1370.8738F), tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(true, tFloatArrayList0.isEmpty());
//       assertNotNull(floatArray1);
//       assertEquals(0, tFloatArrayList0.size());
//   }

  //Test case number: 73
  /*
   * 49 covered goals:
   * 1 Weak Mutation 1101: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:722 - ReplaceVariable len -> source_pos
   * 2 Weak Mutation 1106: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:722 - ReplaceComparisonOperator != -> >
   * 3 Weak Mutation 1117: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceVariable source_pos -> len
   * 4 Weak Mutation 1116: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceVariable source_pos -> dest_pos
   * 5 Weak Mutation 1119: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp IINC 1 source_pos
   * 6 Weak Mutation 1118: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp Negation of source_pos
   * 7 Weak Mutation 1113: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceComparisonOperator < -> !=
   * 8 Weak Mutation 1112: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp IINC -1 source_pos
   * 9 Weak Mutation 1109: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceVariable source_pos -> len
   * 10 Weak Mutation 1108: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceVariable source_pos -> dest_pos
   * 11 Weak Mutation 1111: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp IINC 1 source_pos
   * 12 Weak Mutation 1110: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp Negation of source_pos
   * 13 Weak Mutation 1124: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - DeleteField: _posI
   * 14 Weak Mutation 1125: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceComparisonOperator < -> !=
   * 15 Weak Mutation 1122: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp +1
   * 16 Weak Mutation 1123: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp -1
   * 17 Weak Mutation 1120: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp IINC -1 source_pos
   * 18 Weak Mutation 1121: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp Negation
   * 19 Weak Mutation 1132: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:726 - InsertUnaryOp IINC -1 source_pos
   * 20 Weak Mutation 1130: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:726 - InsertUnaryOp Negation of source_pos
   * 21 Weak Mutation 1131: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:726 - InsertUnaryOp IINC 1 source_pos
   * 22 Weak Mutation 1128: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:726 - ReplaceVariable source_pos -> dest_pos
   * 23 Weak Mutation 1129: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:726 - ReplaceVariable source_pos -> len
   * 24 gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F: I3 Branch 63 IFNE L722 - true
   * 25 gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F: I11 Branch 64 IFLT L725 - false
   * 26 gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F: I15 Branch 65 IF_ICMPLT L725 - false
   * 27 Weak Mutation 1101: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:722 - ReplaceVariable len -> source_pos
   * 28 Weak Mutation 1117: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceVariable source_pos -> len
   * 29 Weak Mutation 1116: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceVariable source_pos -> dest_pos
   * 30 Weak Mutation 1119: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp IINC 1 source_pos
   * 31 Weak Mutation 1118: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp Negation of source_pos
   * 32 Weak Mutation 1113: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceComparisonOperator < -> !=
   * 33 Weak Mutation 1112: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp IINC -1 source_pos
   * 34 Weak Mutation 1109: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceVariable source_pos -> len
   * 35 Weak Mutation 1108: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceVariable source_pos -> dest_pos
   * 36 Weak Mutation 1111: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp IINC 1 source_pos
   * 37 Weak Mutation 1110: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp Negation of source_pos
   * 38 Weak Mutation 1106: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:722 - ReplaceComparisonOperator != -> >
   * 39 Weak Mutation 1132: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:726 - InsertUnaryOp IINC -1 source_pos
   * 40 Weak Mutation 1130: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:726 - InsertUnaryOp Negation of source_pos
   * 41 Weak Mutation 1131: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:726 - InsertUnaryOp IINC 1 source_pos
   * 42 Weak Mutation 1128: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:726 - ReplaceVariable source_pos -> dest_pos
   * 43 Weak Mutation 1129: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:726 - ReplaceVariable source_pos -> len
   * 44 Weak Mutation 1124: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - DeleteField: _posI
   * 45 Weak Mutation 1125: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceComparisonOperator < -> !=
   * 46 Weak Mutation 1122: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp +1
   * 47 Weak Mutation 1123: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp -1
   * 48 Weak Mutation 1120: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp IINC -1 source_pos
   * 49 Weak Mutation 1121: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp Negation
   */

  @Test
  public void test73()  throws Throwable  {
      float[] floatArray0 = new float[8];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, 0.0F);
      assertNotNull(tFloatArrayList0);
      
      // Undeclared exception!
      try {
        tFloatArrayList0.toArray(floatArray0, 674, 10, (-1376));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 674
         //
      }
  }

  //Test case number: 74
  /*
   * 6 covered goals:
   * 1 Weak Mutation 1105: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:722 - ReplaceComparisonOperator != -> <
   * 2 Weak Mutation 1115: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceComparisonOperator < -> -2
   * 3 gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F: I11 Branch 64 IFLT L725 - true
   * 4 Weak Mutation 1128: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:726 - ReplaceVariable source_pos -> dest_pos
   * 5 Weak Mutation 1115: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceComparisonOperator < -> -2
   * 6 Weak Mutation 1105: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:722 - ReplaceComparisonOperator != -> <
   */

  @Test
  public void test74()  throws Throwable  {
      float[] floatArray0 = new float[1];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, 0.0F);
      assertNotNull(tFloatArrayList0);
      
      // Undeclared exception!
      try {
        tFloatArrayList0.toArray(floatArray0, (-976), (-7), 221);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -976
         //
      }
  }

  //Test case number: 75
  /*
   * 38 covered goals:
   * 1 Weak Mutation 1114: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceComparisonOperator < -> <=
   * 2 Weak Mutation 1126: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceComparisonOperator < -> -2
   * 3 Weak Mutation 1134: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - ReplaceVariable source_pos -> dest_pos
   * 4 Weak Mutation 1135: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - ReplaceVariable source_pos -> len
   * 5 Weak Mutation 1133: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - DeleteField: _data[F
   * 6 Weak Mutation 1149: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 7 Weak Mutation 1148: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - InsertUnaryOp IINC -1 len
   * 8 Weak Mutation 1147: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - InsertUnaryOp IINC 1 len
   * 9 Weak Mutation 1146: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - InsertUnaryOp Negation of len
   * 10 Weak Mutation 1145: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - ReplaceVariable len -> source_pos
   * 11 Weak Mutation 1143: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - InsertUnaryOp IINC -1 dest_pos
   * 12 Weak Mutation 1142: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - InsertUnaryOp IINC 1 dest_pos
   * 13 Weak Mutation 1141: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - InsertUnaryOp Negation of dest_pos
   * 14 Weak Mutation 1140: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - ReplaceVariable dest_pos -> source_pos
   * 15 Weak Mutation 1138: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - InsertUnaryOp IINC -1 source_pos
   * 16 Weak Mutation 1137: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - InsertUnaryOp IINC 1 source_pos
   * 17 Weak Mutation 1136: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - InsertUnaryOp Negation of source_pos
   * 18 gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F: I15 Branch 65 IF_ICMPLT L725 - true
   * 19 Weak Mutation 1116: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceVariable source_pos -> dest_pos
   * 20 Weak Mutation 1108: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceVariable source_pos -> dest_pos
   * 21 Weak Mutation 1124: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - DeleteField: _posI
   * 22 Weak Mutation 1114: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceComparisonOperator < -> <=
   * 23 Weak Mutation 1134: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - ReplaceVariable source_pos -> dest_pos
   * 24 Weak Mutation 1135: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - ReplaceVariable source_pos -> len
   * 25 Weak Mutation 1133: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - DeleteField: _data[F
   * 26 Weak Mutation 1126: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceComparisonOperator < -> -2
   * 27 Weak Mutation 1149: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 28 Weak Mutation 1148: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - InsertUnaryOp IINC -1 len
   * 29 Weak Mutation 1147: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - InsertUnaryOp IINC 1 len
   * 30 Weak Mutation 1146: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - InsertUnaryOp Negation of len
   * 31 Weak Mutation 1145: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - ReplaceVariable len -> source_pos
   * 32 Weak Mutation 1143: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - InsertUnaryOp IINC -1 dest_pos
   * 33 Weak Mutation 1142: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - InsertUnaryOp IINC 1 dest_pos
   * 34 Weak Mutation 1141: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - InsertUnaryOp Negation of dest_pos
   * 35 Weak Mutation 1140: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - ReplaceVariable dest_pos -> source_pos
   * 36 Weak Mutation 1138: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - InsertUnaryOp IINC -1 source_pos
   * 37 Weak Mutation 1137: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - InsertUnaryOp IINC 1 source_pos
   * 38 Weak Mutation 1136: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:728 - InsertUnaryOp Negation of source_pos
   */

  @Test
  public void test75()  throws Throwable  {
      float[] floatArray0 = new float[6];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      // Undeclared exception!
      try {
        tFloatArrayList0.toArray(floatArray0, 0, 1738, 1738);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 76
  /*
   * 24 covered goals:
   * 1 Weak Mutation 1127: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceComparisonOperator < -> <=
   * 2 Weak Mutation 1100: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:722 - ReplaceVariable len -> dest_pos
   * 3 Weak Mutation 1101: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:722 - ReplaceVariable len -> source_pos
   * 4 Weak Mutation 1102: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:722 - InsertUnaryOp Negation of len
   * 5 Weak Mutation 1103: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:722 - InsertUnaryOp IINC 1 len
   * 6 Weak Mutation 1117: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceVariable source_pos -> len
   * 7 Weak Mutation 1119: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp IINC 1 source_pos
   * 8 Weak Mutation 1118: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp Negation of source_pos
   * 9 Weak Mutation 1112: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp IINC -1 source_pos
   * 10 Weak Mutation 1114: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceComparisonOperator < -> <=
   * 11 Weak Mutation 1109: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceVariable source_pos -> len
   * 12 Weak Mutation 1111: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp IINC 1 source_pos
   * 13 Weak Mutation 1110: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp Negation of source_pos
   * 14 Weak Mutation 1105: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:722 - ReplaceComparisonOperator != -> <
   * 15 Weak Mutation 1104: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:722 - InsertUnaryOp IINC -1 len
   * 16 Weak Mutation 1132: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:726 - InsertUnaryOp IINC -1 source_pos
   * 17 Weak Mutation 1130: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:726 - InsertUnaryOp Negation of source_pos
   * 18 Weak Mutation 1131: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:726 - InsertUnaryOp IINC 1 source_pos
   * 19 Weak Mutation 1129: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:726 - ReplaceVariable source_pos -> len
   * 20 Weak Mutation 1122: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp +1
   * 21 Weak Mutation 1123: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp -1
   * 22 Weak Mutation 1120: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp IINC -1 source_pos
   * 23 Weak Mutation 1121: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - InsertUnaryOp Negation
   * 24 Weak Mutation 1127: gnu.trove.list.array.TFloatArrayList.toArray([FIII)[F:725 - ReplaceComparisonOperator < -> <=
   */

  @Test
  public void test76()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(0, 0.0F);
      float[] floatArray0 = new float[6];
      // Undeclared exception!
      try {
        tFloatArrayList0.toArray(floatArray0, 0, 0, 911);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
      }
  }

  //Test case number: 77
  /*
   * 5 covered goals:
   * 1 Weak Mutation 1150: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:738 - ReplaceComparisonOperator != -> ==
   * 2 Weak Mutation 1151: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:739 - ReplaceConstant - 1 -> 0
   * 3 gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z: I4 Branch 66 IF_ACMPNE L738 - false
   * 4 Weak Mutation 1151: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:739 - ReplaceConstant - 1 -> 0
   * 5 Weak Mutation 1150: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:738 - ReplaceComparisonOperator != -> ==
   */

//   @Test
//   public void test77()  throws Throwable  {
//       float[] floatArray0 = new float[20];
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
//       boolean boolean0 = tFloatArrayList0.equals((Object) tFloatArrayList0);
//       assertEquals(true, boolean0);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(20, tFloatArrayList0.size());
//   }

  //Test case number: 78
  /*
   * 57 covered goals:
   * 1 Weak Mutation 1152: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:741 - ReplaceComparisonOperator == -> !=
   * 2 Weak Mutation 1153: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:743 - ReplaceVariable that -> this
   * 3 Weak Mutation 1155: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:743 - DeleteStatement: size()I
   * 4 Weak Mutation 1154: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:743 - DeleteStatement: size()I
   * 5 Weak Mutation 1157: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:743 - ReplaceComparisonOperator == -> -2
   * 6 Weak Mutation 1161: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:745 - InsertUnaryOp +1
   * 7 Weak Mutation 1160: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:745 - InsertUnaryOp Negation
   * 8 Weak Mutation 1163: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:745 - DeleteField: _posI
   * 9 Weak Mutation 1162: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:745 - InsertUnaryOp -1
   * 10 Weak Mutation 1165: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:745 - InsertUnaryOp IINC 1 i
   * 11 Weak Mutation 1164: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:745 - InsertUnaryOp Negation of i
   * 12 Weak Mutation 1166: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:745 - InsertUnaryOp IINC -1 i
   * 13 Weak Mutation 1168: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:745 - ReplaceComparisonOperator <= -> <
   * 14 Weak Mutation 1169: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:745 - ReplaceComparisonOperator <= -> -1
   * 15 Weak Mutation 1170: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:746 - DeleteField: _data[F
   * 16 Weak Mutation 1171: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:746 - InsertUnaryOp Negation of i
   * 17 Weak Mutation 1172: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:746 - InsertUnaryOp IINC 1 i
   * 18 Weak Mutation 1173: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:746 - InsertUnaryOp IINC -1 i
   * 19 Weak Mutation 1174: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:746 - ReplaceVariable that -> this
   * 20 Weak Mutation 1175: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:746 - DeleteField: _data[F
   * 21 Weak Mutation 1176: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:746 - InsertUnaryOp Negation of i
   * 22 Weak Mutation 1177: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:746 - InsertUnaryOp IINC 1 i
   * 23 Weak Mutation 1178: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:746 - InsertUnaryOp IINC -1 i
   * 24 Weak Mutation 1179: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:746 - DeleteStatement: floatSub(FF)I
   * 25 Weak Mutation 1182: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:746 - ReplaceComparisonOperator == -> -2
   * 26 Weak Mutation 1184: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:750 - ReplaceConstant - 1 -> 0
   * 27 gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z: I13 Branch 67 IFEQ L741 - false
   * 28 gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z: I25 Branch 68 IF_ICMPEQ L743 - true
   * 29 gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z: I36 Branch 69 IFLE L745 - true
   * 30 gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z: I36 Branch 69 IFLE L745 - false
   * 31 gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z: I48 Branch 70 IFEQ L746 - true
   * 32 Weak Mutation 1153: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:743 - ReplaceVariable that -> this
   * 33 Weak Mutation 1152: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:741 - ReplaceComparisonOperator == -> !=
   * 34 Weak Mutation 1155: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:743 - DeleteStatement: size()I
   * 35 Weak Mutation 1154: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:743 - DeleteStatement: size()I
   * 36 Weak Mutation 1157: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:743 - ReplaceComparisonOperator == -> -2
   * 37 Weak Mutation 1161: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:745 - InsertUnaryOp +1
   * 38 Weak Mutation 1160: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:745 - InsertUnaryOp Negation
   * 39 Weak Mutation 1163: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:745 - DeleteField: _posI
   * 40 Weak Mutation 1162: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:745 - InsertUnaryOp -1
   * 41 Weak Mutation 1165: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:745 - InsertUnaryOp IINC 1 i
   * 42 Weak Mutation 1164: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:745 - InsertUnaryOp Negation of i
   * 43 Weak Mutation 1166: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:745 - InsertUnaryOp IINC -1 i
   * 44 Weak Mutation 1168: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:745 - ReplaceComparisonOperator <= -> <
   * 45 Weak Mutation 1169: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:745 - ReplaceComparisonOperator <= -> -1
   * 46 Weak Mutation 1170: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:746 - DeleteField: _data[F
   * 47 Weak Mutation 1171: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:746 - InsertUnaryOp Negation of i
   * 48 Weak Mutation 1172: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:746 - InsertUnaryOp IINC 1 i
   * 49 Weak Mutation 1173: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:746 - InsertUnaryOp IINC -1 i
   * 50 Weak Mutation 1174: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:746 - ReplaceVariable that -> this
   * 51 Weak Mutation 1175: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:746 - DeleteField: _data[F
   * 52 Weak Mutation 1176: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:746 - InsertUnaryOp Negation of i
   * 53 Weak Mutation 1177: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:746 - InsertUnaryOp IINC 1 i
   * 54 Weak Mutation 1178: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:746 - InsertUnaryOp IINC -1 i
   * 55 Weak Mutation 1179: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:746 - DeleteStatement: floatSub(FF)I
   * 56 Weak Mutation 1182: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:746 - ReplaceComparisonOperator == -> -2
   * 57 Weak Mutation 1184: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:750 - ReplaceConstant - 1 -> 0
   */

//   @Test
//   public void test78()  throws Throwable  {
//       float[] floatArray0 = new float[20];
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
//       TFloatArrayList tFloatArrayList1 = new TFloatArrayList(floatArray0);
//       boolean boolean0 = tFloatArrayList0.equals((Object) tFloatArrayList1);
//       assertEquals(20, tFloatArrayList0.size());
//       assertEquals(true, boolean0);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 79
  /*
   * 9 covered goals:
   * 1 Weak Mutation 1159: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:743 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 1158: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:743 - ReplaceComparisonOperator == -> <=
   * 3 gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z: I4 Branch 66 IF_ACMPNE L738 - true
   * 4 gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z: I25 Branch 68 IF_ICMPEQ L743 - false
   * 5 Weak Mutation 1153: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:743 - ReplaceVariable that -> this
   * 6 Weak Mutation 1155: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:743 - DeleteStatement: size()I
   * 7 Weak Mutation 1154: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:743 - DeleteStatement: size()I
   * 8 Weak Mutation 1159: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:743 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 1158: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:743 - ReplaceComparisonOperator == -> <=
   */

//   @Test
//   public void test79()  throws Throwable  {
//       float[] floatArray0 = new float[7];
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
//       TFloatArrayList tFloatArrayList1 = new TFloatArrayList(10);
//       boolean boolean0 = tFloatArrayList0.equals((Object) tFloatArrayList1);
//       assertEquals(false, boolean0);
//       assertFalse(tFloatArrayList1.equals(tFloatArrayList0));
//       assertEquals(7, tFloatArrayList0.size());
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 80
  /*
   * 5 covered goals:
   * 1 Weak Mutation 1185: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:753 - ReplaceConstant - 0 -> 1
   * 2 gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z: I13 Branch 67 IFEQ L741 - true
   * 3 Weak Mutation 1150: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:738 - ReplaceComparisonOperator != -> ==
   * 4 Weak Mutation 1152: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:741 - ReplaceComparisonOperator == -> !=
   * 5 Weak Mutation 1185: gnu.trove.list.array.TFloatArrayList.equals(Ljava/lang/Object;)Z:753 - ReplaceConstant - 0 -> 1
   */

//   @Test
//   public void test80()  throws Throwable  {
//       float[] floatArray0 = new float[7];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
//       assertNotNull(tFloatArrayList0);
//       
//       boolean boolean0 = tFloatArrayList0.equals((Object) "it-IT");
//       assertEquals(false, boolean0);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 81
  /*
   * 59 covered goals:
   * 1 Weak Mutation 1191: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - ReplaceVariable i -> h
   * 2 Weak Mutation 1190: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - DeleteField: _posI
   * 3 Weak Mutation 1198: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - ReplaceComparisonOperator <= -> -1
   * 4 Weak Mutation 1202: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - InsertUnaryOp IINC -1 h
   * 5 Weak Mutation 1203: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - DeleteField: _data[F
   * 6 Weak Mutation 1200: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - InsertUnaryOp Negation of h
   * 7 Weak Mutation 1201: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - InsertUnaryOp IINC 1 h
   * 8 Weak Mutation 1206: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - InsertUnaryOp IINC 1 i
   * 9 Weak Mutation 1207: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - InsertUnaryOp IINC -1 i
   * 10 Weak Mutation 1205: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - InsertUnaryOp Negation of i
   * 11 Weak Mutation 1210: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - ReplaceArithmeticOperator + -> %
   * 12 Weak Mutation 1211: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - ReplaceArithmeticOperator + -> /
   * 13 Weak Mutation 1208: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - DeleteStatement: hash(F)I
   * 14 Weak Mutation 1209: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - ReplaceArithmeticOperator + -> -
   * 15 Weak Mutation 1212: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - ReplaceArithmeticOperator + -> *
   * 16 gnu.trove.list.array.TFloatArrayList.hashCode()I: I12 Branch 71 IFLE L761 - false
   * 17 Weak Mutation 34: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:184 - ReplaceComparisonOperator <= -> -1
   * 18 Weak Mutation 35: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:185 - DeleteField: _data[F
   * 19 Weak Mutation 39: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:185 - InsertUnaryOp Negation of capacity
   * 20 Weak Mutation 36: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:185 - ReplaceConstant - 1 -> 0
   * 21 Weak Mutation 42: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:185 - DeleteStatement: max(II)I
   * 22 Weak Mutation 40: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:185 - InsertUnaryOp IINC 1 capacity
   * 23 Weak Mutation 41: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:185 - InsertUnaryOp IINC -1 capacity
   * 24 Weak Mutation 46: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:186 - InsertUnaryOp IINC -1 newCap
   * 25 Weak Mutation 47: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:187 - DeleteField: _data[F
   * 26 Weak Mutation 44: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:186 - InsertUnaryOp Negation of newCap
   * 27 Weak Mutation 45: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:186 - InsertUnaryOp IINC 1 newCap
   * 28 Weak Mutation 51: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:187 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 29 Weak Mutation 50: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:187 - DeleteField: _data[F
   * 30 Weak Mutation 49: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:187 - ReplaceConstant - 0 -> 1
   * 31 Weak Mutation 48: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:187 - ReplaceConstant - 0 -> 1
   * 32 Weak Mutation 1187: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - InsertUnaryOp Negation
   * 33 Weak Mutation 1186: gnu.trove.list.array.TFloatArrayList.hashCode()I:760 - ReplaceConstant - 0 -> 1
   * 34 Weak Mutation 1191: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - ReplaceVariable i -> h
   * 35 Weak Mutation 1190: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - DeleteField: _posI
   * 36 Weak Mutation 1189: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - InsertUnaryOp -1
   * 37 Weak Mutation 1188: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - InsertUnaryOp +1
   * 38 Weak Mutation 1195: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - ReplaceVariable i -> h
   * 39 Weak Mutation 1194: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - InsertUnaryOp IINC -1 i
   * 40 Weak Mutation 1193: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - InsertUnaryOp IINC 1 i
   * 41 Weak Mutation 1192: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - InsertUnaryOp Negation of i
   * 42 Weak Mutation 1198: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - ReplaceComparisonOperator <= -> -1
   * 43 Weak Mutation 1197: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - ReplaceComparisonOperator <= -> <
   * 44 Weak Mutation 1202: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - InsertUnaryOp IINC -1 h
   * 45 Weak Mutation 1203: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - DeleteField: _data[F
   * 46 Weak Mutation 1200: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - InsertUnaryOp Negation of h
   * 47 Weak Mutation 1201: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - InsertUnaryOp IINC 1 h
   * 48 Weak Mutation 1206: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - InsertUnaryOp IINC 1 i
   * 49 Weak Mutation 1207: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - InsertUnaryOp IINC -1 i
   * 50 Weak Mutation 1205: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - InsertUnaryOp Negation of i
   * 51 Weak Mutation 1210: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - ReplaceArithmeticOperator + -> %
   * 52 Weak Mutation 1211: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - ReplaceArithmeticOperator + -> /
   * 53 Weak Mutation 1208: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - DeleteStatement: hash(F)I
   * 54 Weak Mutation 1209: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - ReplaceArithmeticOperator + -> -
   * 55 Weak Mutation 1214: gnu.trove.list.array.TFloatArrayList.hashCode()I:764 - InsertUnaryOp IINC 1 h
   * 56 Weak Mutation 1215: gnu.trove.list.array.TFloatArrayList.hashCode()I:764 - InsertUnaryOp IINC -1 h
   * 57 Weak Mutation 1212: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - ReplaceArithmeticOperator + -> *
   * 58 Weak Mutation 1213: gnu.trove.list.array.TFloatArrayList.hashCode()I:764 - InsertUnaryOp Negation of h
   * 59 gnu.trove.list.array.TFloatArrayList.hashCode()I: I12 Branch 71 IFLE L761 - true
   */

  @Test
  public void test81()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(0, (-1365));
      tFloatArrayList0.add((float) (-1365));
      int int0 = tFloatArrayList0.hashCode();
      assertEquals("{-1365.0}", tFloatArrayList0.toString());
      assertEquals((-749541517), int0);
  }

  //Test case number: 82
  /*
   * 29 covered goals:
   * 1 Weak Mutation 1199: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - ReplaceVariable h -> i
   * 2 Weak Mutation 1204: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - ReplaceVariable i -> h
   * 3 Weak Mutation 1187: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - InsertUnaryOp Negation
   * 4 Weak Mutation 1186: gnu.trove.list.array.TFloatArrayList.hashCode()I:760 - ReplaceConstant - 0 -> 1
   * 5 Weak Mutation 1191: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - ReplaceVariable i -> h
   * 6 Weak Mutation 1190: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - DeleteField: _posI
   * 7 Weak Mutation 1189: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - InsertUnaryOp -1
   * 8 Weak Mutation 1188: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - InsertUnaryOp +1
   * 9 Weak Mutation 1195: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - ReplaceVariable i -> h
   * 10 Weak Mutation 1194: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - InsertUnaryOp IINC -1 i
   * 11 Weak Mutation 1193: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - InsertUnaryOp IINC 1 i
   * 12 Weak Mutation 1192: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - InsertUnaryOp Negation of i
   * 13 Weak Mutation 1198: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - ReplaceComparisonOperator <= -> -1
   * 14 Weak Mutation 1197: gnu.trove.list.array.TFloatArrayList.hashCode()I:761 - ReplaceComparisonOperator <= -> <
   * 15 Weak Mutation 1202: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - InsertUnaryOp IINC -1 h
   * 16 Weak Mutation 1203: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - DeleteField: _data[F
   * 17 Weak Mutation 1200: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - InsertUnaryOp Negation of h
   * 18 Weak Mutation 1201: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - InsertUnaryOp IINC 1 h
   * 19 Weak Mutation 1206: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - InsertUnaryOp IINC 1 i
   * 20 Weak Mutation 1207: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - InsertUnaryOp IINC -1 i
   * 21 Weak Mutation 1205: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - InsertUnaryOp Negation of i
   * 22 Weak Mutation 1210: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - ReplaceArithmeticOperator + -> %
   * 23 Weak Mutation 1211: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - ReplaceArithmeticOperator + -> /
   * 24 Weak Mutation 1208: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - DeleteStatement: hash(F)I
   * 25 Weak Mutation 1214: gnu.trove.list.array.TFloatArrayList.hashCode()I:764 - InsertUnaryOp IINC 1 h
   * 26 Weak Mutation 1215: gnu.trove.list.array.TFloatArrayList.hashCode()I:764 - InsertUnaryOp IINC -1 h
   * 27 Weak Mutation 1213: gnu.trove.list.array.TFloatArrayList.hashCode()I:764 - InsertUnaryOp Negation of h
   * 28 Weak Mutation 1199: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - ReplaceVariable h -> i
   * 29 Weak Mutation 1204: gnu.trove.list.array.TFloatArrayList.hashCode()I:762 - ReplaceVariable i -> h
   */

//   @Test
//   public void test82()  throws Throwable  {
//       float[] floatArray0 = new float[20];
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
//       int int0 = tFloatArrayList0.hashCode();
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(20, tFloatArrayList0.size());
//       assertEquals(0, int0);
//   }

  //Test case number: 83
  /*
   * 29 covered goals:
   * 1 Weak Mutation 1221: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - InsertUnaryOp +1
   * 2 Weak Mutation 1220: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - InsertUnaryOp Negation
   * 3 Weak Mutation 1223: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - DeleteField: _posI
   * 4 Weak Mutation 1222: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - InsertUnaryOp -1
   * 5 Weak Mutation 1217: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - InsertUnaryOp Negation of i
   * 6 Weak Mutation 1216: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 1219: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - InsertUnaryOp IINC -1 i
   * 8 Weak Mutation 1218: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - InsertUnaryOp IINC 1 i
   * 9 Weak Mutation 1226: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - ReplaceComparisonOperator >= -> -1
   * 10 Weak Mutation 1229: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:773 - InsertUnaryOp IINC 1 i
   * 11 Weak Mutation 1228: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:773 - InsertUnaryOp Negation of i
   * 12 Weak Mutation 1231: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:773 - DeleteStatement: execute(F)Z
   * 13 Weak Mutation 1230: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:773 - InsertUnaryOp IINC -1 i
   * 14 Weak Mutation 1227: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:773 - DeleteField: _data[F
   * 15 gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z: I8 Branch 72 IF_ICMPGE L772 - false
   * 16 Weak Mutation 1221: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - InsertUnaryOp +1
   * 17 Weak Mutation 1220: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - InsertUnaryOp Negation
   * 18 Weak Mutation 1223: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - DeleteField: _posI
   * 19 Weak Mutation 1222: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - InsertUnaryOp -1
   * 20 Weak Mutation 1217: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - InsertUnaryOp Negation of i
   * 21 Weak Mutation 1216: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - ReplaceConstant - 0 -> 1
   * 22 Weak Mutation 1219: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - InsertUnaryOp IINC -1 i
   * 23 Weak Mutation 1218: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - InsertUnaryOp IINC 1 i
   * 24 Weak Mutation 1229: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:773 - InsertUnaryOp IINC 1 i
   * 25 Weak Mutation 1228: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:773 - InsertUnaryOp Negation of i
   * 26 Weak Mutation 1231: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:773 - DeleteStatement: execute(F)Z
   * 27 Weak Mutation 1230: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:773 - InsertUnaryOp IINC -1 i
   * 28 Weak Mutation 1227: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:773 - DeleteField: _data[F
   * 29 Weak Mutation 1226: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - ReplaceComparisonOperator >= -> -1
   */

  @Test
  public void test83()  throws Throwable  {
      float[] floatArray0 = new float[6];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, (float) 115);
      assertNotNull(tFloatArrayList0);
      
      // Undeclared exception!
      try {
        tFloatArrayList0.forEach((TFloatProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 84
  /*
   * 12 covered goals:
   * 1 Weak Mutation 1225: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - ReplaceComparisonOperator >= -> >
   * 2 Weak Mutation 1234: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:777 - ReplaceConstant - 1 -> 0
   * 3 gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z: I8 Branch 72 IF_ICMPGE L772 - true
   * 4 Weak Mutation 1221: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - InsertUnaryOp +1
   * 5 Weak Mutation 1220: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - InsertUnaryOp Negation
   * 6 Weak Mutation 1222: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - InsertUnaryOp -1
   * 7 Weak Mutation 1217: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - InsertUnaryOp Negation of i
   * 8 Weak Mutation 1216: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 1219: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - InsertUnaryOp IINC -1 i
   * 10 Weak Mutation 1218: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - InsertUnaryOp IINC 1 i
   * 11 Weak Mutation 1225: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:772 - ReplaceComparisonOperator >= -> >
   * 12 Weak Mutation 1234: gnu.trove.list.array.TFloatArrayList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:777 - ReplaceConstant - 1 -> 0
   */

//   @Test
//   public void test84()  throws Throwable  {
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
//       boolean boolean0 = tFloatArrayList0.forEach((TFloatProcedure) null);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(true, boolean0);
//       assertEquals("{}", tFloatArrayList0.toString());
//   }

  //Test case number: 85
  /*
   * 17 covered goals:
   * 1 Weak Mutation 1236: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - InsertUnaryOp +1
   * 2 Weak Mutation 1237: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - InsertUnaryOp -1
   * 3 Weak Mutation 1239: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - InsertUnaryOp Negation of i
   * 4 Weak Mutation 1235: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - InsertUnaryOp Negation
   * 5 Weak Mutation 1240: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - InsertUnaryOp IINC 1 i
   * 6 Weak Mutation 1241: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - InsertUnaryOp IINC -1 i
   * 7 Weak Mutation 1243: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - ReplaceComparisonOperator <= -> <
   * 8 Weak Mutation 1252: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:788 - ReplaceConstant - 1 -> 0
   * 9 gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z: I8 Branch 74 IFLE L783 - true
   * 10 Weak Mutation 1236: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - InsertUnaryOp +1
   * 11 Weak Mutation 1237: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - InsertUnaryOp -1
   * 12 Weak Mutation 1239: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - InsertUnaryOp Negation of i
   * 13 Weak Mutation 1235: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - InsertUnaryOp Negation
   * 14 Weak Mutation 1240: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - InsertUnaryOp IINC 1 i
   * 15 Weak Mutation 1241: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - InsertUnaryOp IINC -1 i
   * 16 Weak Mutation 1243: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - ReplaceComparisonOperator <= -> <
   * 17 Weak Mutation 1252: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:788 - ReplaceConstant - 1 -> 0
   */

//   @Test
//   public void test85()  throws Throwable  {
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(0);
//       boolean boolean0 = tFloatArrayList0.forEachDescending((TFloatProcedure) null);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(true, boolean0);
//       assertEquals(true, tFloatArrayList0.isEmpty());
//   }

  //Test case number: 86
  /*
   * 21 covered goals:
   * 1 Weak Mutation 1238: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - DeleteField: _posI
   * 2 Weak Mutation 1244: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - ReplaceComparisonOperator <= -> -1
   * 3 Weak Mutation 1245: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:784 - DeleteField: _data[F
   * 4 Weak Mutation 1246: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:784 - InsertUnaryOp Negation of i
   * 5 Weak Mutation 1247: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:784 - InsertUnaryOp IINC 1 i
   * 6 Weak Mutation 1249: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:784 - DeleteStatement: execute(F)Z
   * 7 Weak Mutation 1248: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:784 - InsertUnaryOp IINC -1 i
   * 8 gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z: I8 Branch 74 IFLE L783 - false
   * 9 Weak Mutation 1236: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - InsertUnaryOp +1
   * 10 Weak Mutation 1237: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - InsertUnaryOp -1
   * 11 Weak Mutation 1239: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - InsertUnaryOp Negation of i
   * 12 Weak Mutation 1235: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - InsertUnaryOp Negation
   * 13 Weak Mutation 1240: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - InsertUnaryOp IINC 1 i
   * 14 Weak Mutation 1241: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - InsertUnaryOp IINC -1 i
   * 15 Weak Mutation 1238: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - DeleteField: _posI
   * 16 Weak Mutation 1244: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:783 - ReplaceComparisonOperator <= -> -1
   * 17 Weak Mutation 1245: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:784 - DeleteField: _data[F
   * 18 Weak Mutation 1246: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:784 - InsertUnaryOp Negation of i
   * 19 Weak Mutation 1247: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:784 - InsertUnaryOp IINC 1 i
   * 20 Weak Mutation 1249: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:784 - DeleteStatement: execute(F)Z
   * 21 Weak Mutation 1248: gnu.trove.list.array.TFloatArrayList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z:784 - InsertUnaryOp IINC -1 i
   */

  @Test
  public void test86()  throws Throwable  {
      float[] floatArray0 = new float[10];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
      assertNotNull(tFloatArrayList0);
      
      // Undeclared exception!
      try {
        tFloatArrayList0.forEachDescending((TFloatProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 87
  /*
   * 44 covered goals:
   * 1 Weak Mutation 1258: gnu.trove.list.array.TFloatArrayList.sort()V:796 - DeleteField: _posI
   * 2 Weak Mutation 77: gnu.trove.list.array.TFloatArrayList.add(F)Z:221 - ReplaceConstant - 1 -> 0
   * 3 Weak Mutation 78: gnu.trove.list.array.TFloatArrayList.add(F)Z:221 - ReplaceArithmeticOperator + -> -
   * 4 Weak Mutation 79: gnu.trove.list.array.TFloatArrayList.add(F)Z:221 - ReplaceArithmeticOperator + -> %
   * 5 Weak Mutation 73: gnu.trove.list.array.TFloatArrayList.add(F)Z:221 - InsertUnaryOp Negation
   * 6 Weak Mutation 74: gnu.trove.list.array.TFloatArrayList.add(F)Z:221 - InsertUnaryOp +1
   * 7 Weak Mutation 75: gnu.trove.list.array.TFloatArrayList.add(F)Z:221 - InsertUnaryOp -1
   * 8 Weak Mutation 85: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - InsertUnaryOp +1
   * 9 Weak Mutation 84: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - InsertUnaryOp Negation
   * 10 Weak Mutation 86: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - InsertUnaryOp -1
   * 11 Weak Mutation 81: gnu.trove.list.array.TFloatArrayList.add(F)Z:221 - ReplaceArithmeticOperator + -> *
   * 12 Weak Mutation 80: gnu.trove.list.array.TFloatArrayList.add(F)Z:221 - ReplaceArithmeticOperator + -> /
   * 13 Weak Mutation 83: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - DeleteField: _data[F
   * 14 Weak Mutation 82: gnu.trove.list.array.TFloatArrayList.add(F)Z:221 - DeleteStatement: ensureCapacity(I)V
   * 15 Weak Mutation 93: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - InsertUnaryOp Negation of val
   * 16 Weak Mutation 92: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - ReplaceArithmeticOperator + -> *
   * 17 Weak Mutation 94: gnu.trove.list.array.TFloatArrayList.add(F)Z:223 - ReplaceConstant - 1 -> 0
   * 18 Weak Mutation 89: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - ReplaceArithmeticOperator + -> -
   * 19 Weak Mutation 88: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - ReplaceConstant - 1 -> 0
   * 20 Weak Mutation 91: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - ReplaceArithmeticOperator + -> /
   * 21 Weak Mutation 90: gnu.trove.list.array.TFloatArrayList.add(F)Z:222 - ReplaceArithmeticOperator + -> %
   * 22 Weak Mutation 137: gnu.trove.list.array.TFloatArrayList.insert(IF)V:243 - InsertUnaryOp IINC 1 offset
   * 23 Weak Mutation 136: gnu.trove.list.array.TFloatArrayList.insert(IF)V:243 - InsertUnaryOp Negation of offset
   * 24 Weak Mutation 139: gnu.trove.list.array.TFloatArrayList.insert(IF)V:243 - InsertUnaryOp Negation
   * 25 Weak Mutation 138: gnu.trove.list.array.TFloatArrayList.insert(IF)V:243 - InsertUnaryOp IINC -1 offset
   * 26 Weak Mutation 141: gnu.trove.list.array.TFloatArrayList.insert(IF)V:243 - InsertUnaryOp -1
   * 27 Weak Mutation 140: gnu.trove.list.array.TFloatArrayList.insert(IF)V:243 - InsertUnaryOp +1
   * 28 Weak Mutation 145: gnu.trove.list.array.TFloatArrayList.insert(IF)V:243 - ReplaceComparisonOperator != -> -1
   * 29 Weak Mutation 146: gnu.trove.list.array.TFloatArrayList.insert(IF)V:244 - InsertUnaryOp Negation of value
   * 30 Weak Mutation 147: gnu.trove.list.array.TFloatArrayList.insert(IF)V:244 - DeleteStatement: add(F)Z
   * 31 Weak Mutation 1255: gnu.trove.list.array.TFloatArrayList.sort()V:796 - InsertUnaryOp Negation
   * 32 Weak Mutation 1254: gnu.trove.list.array.TFloatArrayList.sort()V:796 - ReplaceConstant - 0 -> 1
   * 33 Weak Mutation 1253: gnu.trove.list.array.TFloatArrayList.sort()V:796 - DeleteField: _data[F
   * 34 Weak Mutation 1259: gnu.trove.list.array.TFloatArrayList.sort()V:796 - DeleteStatement: sort([FII)V
   * 35 Weak Mutation 1257: gnu.trove.list.array.TFloatArrayList.sort()V:796 - InsertUnaryOp -1
   * 36 Weak Mutation 1256: gnu.trove.list.array.TFloatArrayList.sort()V:796 - InsertUnaryOp +1
   * 37 Weak Mutation 1255: gnu.trove.list.array.TFloatArrayList.sort()V:796 - InsertUnaryOp Negation
   * 38 Weak Mutation 1254: gnu.trove.list.array.TFloatArrayList.sort()V:796 - ReplaceConstant - 0 -> 1
   * 39 Weak Mutation 1253: gnu.trove.list.array.TFloatArrayList.sort()V:796 - DeleteField: _data[F
   * 40 Weak Mutation 1259: gnu.trove.list.array.TFloatArrayList.sort()V:796 - DeleteStatement: sort([FII)V
   * 41 Weak Mutation 1258: gnu.trove.list.array.TFloatArrayList.sort()V:796 - DeleteField: _posI
   * 42 Weak Mutation 1257: gnu.trove.list.array.TFloatArrayList.sort()V:796 - InsertUnaryOp -1
   * 43 Weak Mutation 1256: gnu.trove.list.array.TFloatArrayList.sort()V:796 - InsertUnaryOp +1
   * 44 gnu.trove.list.array.TFloatArrayList.sort()V: root-Branch
   */

  @Test
  public void test87()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      tFloatArrayList0.insert(0, 1391);
      tFloatArrayList0.sort();
      assertEquals("{1391.0}", tFloatArrayList0.toString());
      assertEquals(1, tFloatArrayList0.size());
  }

  //Test case number: 88
  /*
   * 21 covered goals:
   * 1 Weak Mutation 1263: gnu.trove.list.array.TFloatArrayList.sort(II)V:802 - InsertUnaryOp IINC 1 fromIndex
   * 2 Weak Mutation 1262: gnu.trove.list.array.TFloatArrayList.sort(II)V:802 - InsertUnaryOp Negation of fromIndex
   * 3 Weak Mutation 1261: gnu.trove.list.array.TFloatArrayList.sort(II)V:802 - ReplaceVariable fromIndex -> toIndex
   * 4 Weak Mutation 1260: gnu.trove.list.array.TFloatArrayList.sort(II)V:802 - DeleteField: _data[F
   * 5 Weak Mutation 1268: gnu.trove.list.array.TFloatArrayList.sort(II)V:802 - InsertUnaryOp IINC -1 toIndex
   * 6 Weak Mutation 1269: gnu.trove.list.array.TFloatArrayList.sort(II)V:802 - DeleteStatement: sort([FII)V
   * 7 Weak Mutation 1266: gnu.trove.list.array.TFloatArrayList.sort(II)V:802 - InsertUnaryOp Negation of toIndex
   * 8 Weak Mutation 1267: gnu.trove.list.array.TFloatArrayList.sort(II)V:802 - InsertUnaryOp IINC 1 toIndex
   * 9 Weak Mutation 1264: gnu.trove.list.array.TFloatArrayList.sort(II)V:802 - InsertUnaryOp IINC -1 fromIndex
   * 10 Weak Mutation 1265: gnu.trove.list.array.TFloatArrayList.sort(II)V:802 - ReplaceVariable toIndex -> fromIndex
   * 11 gnu.trove.list.array.TFloatArrayList.sort(II)V: root-Branch
   * 12 Weak Mutation 1263: gnu.trove.list.array.TFloatArrayList.sort(II)V:802 - InsertUnaryOp IINC 1 fromIndex
   * 13 Weak Mutation 1262: gnu.trove.list.array.TFloatArrayList.sort(II)V:802 - InsertUnaryOp Negation of fromIndex
   * 14 Weak Mutation 1261: gnu.trove.list.array.TFloatArrayList.sort(II)V:802 - ReplaceVariable fromIndex -> toIndex
   * 15 Weak Mutation 1260: gnu.trove.list.array.TFloatArrayList.sort(II)V:802 - DeleteField: _data[F
   * 16 Weak Mutation 1268: gnu.trove.list.array.TFloatArrayList.sort(II)V:802 - InsertUnaryOp IINC -1 toIndex
   * 17 Weak Mutation 1269: gnu.trove.list.array.TFloatArrayList.sort(II)V:802 - DeleteStatement: sort([FII)V
   * 18 Weak Mutation 1266: gnu.trove.list.array.TFloatArrayList.sort(II)V:802 - InsertUnaryOp Negation of toIndex
   * 19 Weak Mutation 1267: gnu.trove.list.array.TFloatArrayList.sort(II)V:802 - InsertUnaryOp IINC 1 toIndex
   * 20 Weak Mutation 1264: gnu.trove.list.array.TFloatArrayList.sort(II)V:802 - InsertUnaryOp IINC -1 fromIndex
   * 21 Weak Mutation 1265: gnu.trove.list.array.TFloatArrayList.sort(II)V:802 - ReplaceVariable toIndex -> fromIndex
   */

//   @Test
//   public void test88()  throws Throwable  {
//       float[] floatArray0 = new float[5];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, 0.0F);
//       assertNotNull(tFloatArrayList0);
//       
//       tFloatArrayList0.sort(0, 5);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 89
  /*
   * 5 covered goals:
   * 1 Weak Mutation 1286: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - ReplaceComparisonOperator <= -> ==
   * 2 Weak Mutation 1285: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - DeleteField: _posI
   * 3 gnu.trove.list.array.TFloatArrayList.fill(IIF)V: I5 Branch 76 IF_ICMPLE L816 - true
   * 4 Weak Mutation 1286: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - ReplaceComparisonOperator <= -> ==
   * 5 Weak Mutation 1285: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - DeleteField: _posI
   */

  @Test
  public void test89()  throws Throwable  {
      float[] floatArray0 = new float[6];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      // Undeclared exception!
      try {
        tFloatArrayList0.fill((-1904), 0, 0.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -1904
         //
      }
  }

  //Test case number: 90
  /*
   * 21 covered goals:
   * 1 Weak Mutation 1287: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - ReplaceComparisonOperator <= -> <
   * 2 Weak Mutation 1278: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - ReplaceVariable toIndex -> fromIndex
   * 3 Weak Mutation 1279: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - InsertUnaryOp Negation of toIndex
   * 4 Weak Mutation 1307: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - InsertUnaryOp Negation of val
   * 5 Weak Mutation 1306: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - InsertUnaryOp IINC -1 toIndex
   * 6 Weak Mutation 1305: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - InsertUnaryOp IINC 1 toIndex
   * 7 Weak Mutation 1304: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - InsertUnaryOp Negation of toIndex
   * 8 Weak Mutation 1308: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - DeleteStatement: fill([FIIF)V
   * 9 Weak Mutation 1299: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - ReplaceVariable fromIndex -> toIndex
   * 10 Weak Mutation 1298: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - DeleteField: _data[F
   * 11 Weak Mutation 1303: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - ReplaceVariable toIndex -> fromIndex
   * 12 Weak Mutation 1302: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - InsertUnaryOp IINC -1 fromIndex
   * 13 Weak Mutation 1301: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - InsertUnaryOp IINC 1 fromIndex
   * 14 Weak Mutation 1300: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:820 - InsertUnaryOp Negation of fromIndex
   * 15 Weak Mutation 1282: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - InsertUnaryOp Negation
   * 16 Weak Mutation 1283: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - InsertUnaryOp +1
   * 17 Weak Mutation 1280: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - InsertUnaryOp IINC 1 toIndex
   * 18 Weak Mutation 1281: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - InsertUnaryOp IINC -1 toIndex
   * 19 Weak Mutation 1284: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - InsertUnaryOp -1
   * 20 Weak Mutation 1285: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - DeleteField: _posI
   * 21 Weak Mutation 1287: gnu.trove.list.array.TFloatArrayList.fill(IIF)V:816 - ReplaceComparisonOperator <= -> <
   */

  @Test
  public void test90()  throws Throwable  {
      float[] floatArray0 = new float[5];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, 0.0F);
      assertNotNull(tFloatArrayList0);
      
      // Undeclared exception!
      try {
        tFloatArrayList0.fill(1875, 5, 0.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1875) > toIndex(5)
         //
      }
  }

  //Test case number: 91
  /*
   * 15 covered goals:
   * 1 Weak Mutation 1322: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:834 - ReplaceComparisonOperator >= -> -1
   * 2 Weak Mutation 1323: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:835 - ReplaceVariable fromIndex -> toIndex
   * 3 Weak Mutation 1324: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:835 - InsertUnaryOp Negation of fromIndex
   * 4 Weak Mutation 1325: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:835 - InsertUnaryOp IINC 1 fromIndex
   * 5 Weak Mutation 1326: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:835 - InsertUnaryOp IINC -1 fromIndex
   * 6 gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I: I3 Branch 77 IFGE L834 - false
   * 7 Weak Mutation 1322: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:834 - ReplaceComparisonOperator >= -> -1
   * 8 Weak Mutation 1323: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:835 - ReplaceVariable fromIndex -> toIndex
   * 9 Weak Mutation 1324: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:835 - InsertUnaryOp Negation of fromIndex
   * 10 Weak Mutation 1325: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:835 - InsertUnaryOp IINC 1 fromIndex
   * 11 Weak Mutation 1326: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:835 - InsertUnaryOp IINC -1 fromIndex
   * 12 Weak Mutation 1316: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:834 - ReplaceVariable fromIndex -> toIndex
   * 13 Weak Mutation 1317: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:834 - InsertUnaryOp Negation of fromIndex
   * 14 Weak Mutation 1318: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:834 - InsertUnaryOp IINC 1 fromIndex
   * 15 Weak Mutation 1319: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:834 - InsertUnaryOp IINC -1 fromIndex
   */

  @Test
  public void test91()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(0, 0.0F);
      // Undeclared exception!
      try {
        tFloatArrayList0.binarySearch((-1375.1525F), (-1), 311);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -1
         //
      }
  }

  //Test case number: 92
  /*
   * 37 covered goals:
   * 1 Weak Mutation 1335: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:837 - ReplaceComparisonOperator <= -> ==
   * 2 Weak Mutation 1370: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - ReplaceComparisonOperator > -> -2
   * 3 gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I: I38 Branch 79 IF_ICMPGT L844 - true
   * 4 Weak Mutation 32: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:184 - ReplaceComparisonOperator <= -> ==
   * 5 Weak Mutation 1370: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - ReplaceComparisonOperator > -> -2
   * 6 Weak Mutation 1367: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - InsertUnaryOp IINC -1 high
   * 7 Weak Mutation 1366: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - InsertUnaryOp IINC 1 high
   * 8 Weak Mutation 1365: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - InsertUnaryOp Negation of high
   * 9 Weak Mutation 1364: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - ReplaceVariable high -> low
   * 10 Weak Mutation 1363: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - ReplaceVariable high -> toIndex
   * 11 Weak Mutation 1362: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - ReplaceVariable high -> fromIndex
   * 12 Weak Mutation 1361: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - InsertUnaryOp IINC -1 low
   * 13 Weak Mutation 1360: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - InsertUnaryOp IINC 1 low
   * 14 Weak Mutation 1359: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - InsertUnaryOp Negation of low
   * 15 Weak Mutation 1357: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - ReplaceVariable low -> high
   * 16 Weak Mutation 1354: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:842 - ReplaceArithmeticOperator - -> /
   * 17 Weak Mutation 1355: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:842 - ReplaceArithmeticOperator - -> *
   * 18 Weak Mutation 1352: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:842 - ReplaceArithmeticOperator - -> +
   * 19 Weak Mutation 1353: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:842 - ReplaceArithmeticOperator - -> %
   * 20 Weak Mutation 1350: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:842 - InsertUnaryOp IINC -1 toIndex
   * 21 Weak Mutation 1351: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:842 - ReplaceConstant - 1 -> 0
   * 22 Weak Mutation 1348: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:842 - InsertUnaryOp Negation of toIndex
   * 23 Weak Mutation 1349: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:842 - InsertUnaryOp IINC 1 toIndex
   * 24 Weak Mutation 1344: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:841 - InsertUnaryOp IINC 1 fromIndex
   * 25 Weak Mutation 1345: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:841 - InsertUnaryOp IINC -1 fromIndex
   * 26 Weak Mutation 1343: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:841 - InsertUnaryOp Negation of fromIndex
   * 27 Weak Mutation 1329: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:837 - InsertUnaryOp IINC 1 toIndex
   * 28 Weak Mutation 1328: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:837 - InsertUnaryOp Negation of toIndex
   * 29 Weak Mutation 1331: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:837 - InsertUnaryOp Negation
   * 30 Weak Mutation 1330: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:837 - InsertUnaryOp IINC -1 toIndex
   * 31 Weak Mutation 1333: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:837 - InsertUnaryOp -1
   * 32 Weak Mutation 1332: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:837 - InsertUnaryOp +1
   * 33 Weak Mutation 1335: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:837 - ReplaceComparisonOperator <= -> ==
   * 34 Weak Mutation 1334: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:837 - DeleteField: _posI
   * 35 Weak Mutation 1320: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:834 - ReplaceComparisonOperator >= -> ==
   * 36 gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I: I3 Branch 77 IFGE L834 - true
   * 37 gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I: I16 Branch 78 IF_ICMPLE L837 - true
   */

  @Test
  public void test92()  throws Throwable  {
      float[] floatArray0 = new float[4];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      tFloatArrayList0.add(floatArray0);
      int int0 = tFloatArrayList0.binarySearch((-37.923042F), 2, 2);
      assertEquals(4, tFloatArrayList0.size());
      assertEquals((-3), int0);
  }

  //Test case number: 93
  /*
   * 13 covered goals:
   * 1 Weak Mutation 1338: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:838 - ReplaceVariable toIndex -> fromIndex
   * 2 Weak Mutation 1337: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:837 - ReplaceComparisonOperator <= -> -1
   * 3 Weak Mutation 1339: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:838 - InsertUnaryOp Negation of toIndex
   * 4 Weak Mutation 1341: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:838 - InsertUnaryOp IINC -1 toIndex
   * 5 Weak Mutation 1340: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:838 - InsertUnaryOp IINC 1 toIndex
   * 6 Weak Mutation 1320: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:834 - ReplaceComparisonOperator >= -> ==
   * 7 Weak Mutation 1337: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:837 - ReplaceComparisonOperator <= -> -1
   * 8 Weak Mutation 1339: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:838 - InsertUnaryOp Negation of toIndex
   * 9 Weak Mutation 1338: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:838 - ReplaceVariable toIndex -> fromIndex
   * 10 Weak Mutation 1341: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:838 - InsertUnaryOp IINC -1 toIndex
   * 11 Weak Mutation 1340: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:838 - InsertUnaryOp IINC 1 toIndex
   * 12 Weak Mutation 1327: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:837 - ReplaceVariable toIndex -> fromIndex
   * 13 gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I: I16 Branch 78 IF_ICMPLE L837 - false
   */

  @Test
  public void test93()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(0);
      // Undeclared exception!
      try {
        tFloatArrayList0.binarySearch(0.0F, 42, 1746);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1746
         //
      }
  }

  //Test case number: 94
  /*
   * 80 covered goals:
   * 1 Weak Mutation 1371: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceVariable low -> fromIndex
   * 2 Weak Mutation 1407: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - ReplaceVariable mid -> high
   * 3 Weak Mutation 1406: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - ReplaceVariable mid -> fromIndex
   * 4 Weak Mutation 1409: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - ReplaceVariable mid -> low
   * 5 Weak Mutation 1370: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - ReplaceComparisonOperator > -> -2
   * 6 Weak Mutation 1368: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - ReplaceComparisonOperator > -> >=
   * 7 Weak Mutation 1356: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - ReplaceVariable low -> fromIndex
   * 8 Weak Mutation 1405: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:848 - ReplaceComparisonOperator >= -> -1
   * 9 Weak Mutation 1411: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - InsertUnaryOp IINC 1 mid
   * 10 Weak Mutation 1410: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - InsertUnaryOp Negation of mid
   * 11 Weak Mutation 1408: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - ReplaceVariable mid -> toIndex
   * 12 Weak Mutation 1415: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - ReplaceArithmeticOperator + -> %
   * 13 Weak Mutation 1414: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - ReplaceArithmeticOperator + -> -
   * 14 Weak Mutation 1413: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - ReplaceConstant - 1 -> 0
   * 15 Weak Mutation 1412: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - InsertUnaryOp IINC -1 mid
   * 16 Weak Mutation 1417: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - ReplaceArithmeticOperator + -> *
   * 17 Weak Mutation 1416: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - ReplaceArithmeticOperator + -> /
   * 18 Weak Mutation 1375: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - InsertUnaryOp IINC 1 low
   * 19 Weak Mutation 1374: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - InsertUnaryOp Negation of low
   * 20 Weak Mutation 1373: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceVariable low -> toIndex
   * 21 Weak Mutation 1372: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceVariable low -> high
   * 22 Weak Mutation 1371: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceVariable low -> fromIndex
   * 23 Weak Mutation 1369: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - ReplaceComparisonOperator > -> !=
   * 24 Weak Mutation 1368: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - ReplaceComparisonOperator > -> >=
   * 25 Weak Mutation 1358: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - ReplaceVariable low -> toIndex
   * 26 Weak Mutation 1356: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - ReplaceVariable low -> fromIndex
   * 27 Weak Mutation 1346: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:842 - ReplaceVariable toIndex -> fromIndex
   * 28 Weak Mutation 1347: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:842 - ReplaceVariable toIndex -> low
   * 29 Weak Mutation 1405: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:848 - ReplaceComparisonOperator >= -> -1
   * 30 Weak Mutation 1407: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - ReplaceVariable mid -> high
   * 31 Weak Mutation 1406: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - ReplaceVariable mid -> fromIndex
   * 32 Weak Mutation 1401: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:848 - InsertUnaryOp Negation of value
   * 33 Weak Mutation 1400: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:848 - ReplaceVariable value -> midVal
   * 34 Weak Mutation 1402: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:848 - DeleteStatement: floatSub(FF)I
   * 35 Weak Mutation 1397: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:846 - InsertUnaryOp IINC -1 mid
   * 36 Weak Mutation 1396: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:846 - InsertUnaryOp IINC 1 mid
   * 37 Weak Mutation 1399: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:848 - InsertUnaryOp Negation of midVal
   * 38 Weak Mutation 1398: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:848 - ReplaceVariable midVal -> value
   * 39 Weak Mutation 1393: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:846 - ReplaceVariable mid -> toIndex
   * 40 Weak Mutation 1392: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:846 - ReplaceVariable mid -> high
   * 41 Weak Mutation 1395: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:846 - InsertUnaryOp Negation of mid
   * 42 Weak Mutation 1394: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:846 - ReplaceVariable mid -> low
   * 43 Weak Mutation 1389: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceBitwiseOperator >>> -> <<
   * 44 Weak Mutation 1390: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:846 - DeleteField: _data[F
   * 45 Weak Mutation 1391: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:846 - ReplaceVariable mid -> fromIndex
   * 46 Weak Mutation 1384: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceArithmeticOperator + -> %
   * 47 Weak Mutation 1385: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceArithmeticOperator + -> /
   * 48 Weak Mutation 1386: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceArithmeticOperator + -> *
   * 49 Weak Mutation 1387: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceConstant - 1 -> 0
   * 50 Weak Mutation 1380: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - InsertUnaryOp Negation of high
   * 51 Weak Mutation 1381: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - InsertUnaryOp IINC 1 high
   * 52 Weak Mutation 1382: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - InsertUnaryOp IINC -1 high
   * 53 Weak Mutation 1383: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceArithmeticOperator + -> -
   * 54 Weak Mutation 1376: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - InsertUnaryOp IINC -1 low
   * 55 Weak Mutation 1377: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceVariable high -> fromIndex
   * 56 Weak Mutation 1378: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceVariable high -> toIndex
   * 57 Weak Mutation 1379: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceVariable high -> low
   * 58 Weak Mutation 1311: gnu.trove.list.array.TFloatArrayList.binarySearch(F)I:828 - InsertUnaryOp Negation
   * 59 Weak Mutation 1310: gnu.trove.list.array.TFloatArrayList.binarySearch(F)I:828 - ReplaceConstant - 0 -> 1
   * 60 Weak Mutation 1309: gnu.trove.list.array.TFloatArrayList.binarySearch(F)I:828 - InsertUnaryOp Negation of value
   * 61 Weak Mutation 1336: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:837 - ReplaceComparisonOperator <= -> <
   * 62 Weak Mutation 1342: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:841 - ReplaceVariable fromIndex -> toIndex
   * 63 Weak Mutation 1321: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:834 - ReplaceComparisonOperator >= -> >
   * 64 Weak Mutation 1312: gnu.trove.list.array.TFloatArrayList.binarySearch(F)I:828 - InsertUnaryOp +1
   * 65 Weak Mutation 1313: gnu.trove.list.array.TFloatArrayList.binarySearch(F)I:828 - InsertUnaryOp -1
   * 66 Weak Mutation 1314: gnu.trove.list.array.TFloatArrayList.binarySearch(F)I:828 - DeleteField: _posI
   * 67 Weak Mutation 1315: gnu.trove.list.array.TFloatArrayList.binarySearch(F)I:828 - DeleteStatement: binarySearch(FII)I
   * 68 Weak Mutation 1411: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - InsertUnaryOp IINC 1 mid
   * 69 Weak Mutation 1410: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - InsertUnaryOp Negation of mid
   * 70 Weak Mutation 1409: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - ReplaceVariable mid -> low
   * 71 Weak Mutation 1408: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - ReplaceVariable mid -> toIndex
   * 72 Weak Mutation 1415: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - ReplaceArithmeticOperator + -> %
   * 73 Weak Mutation 1414: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - ReplaceArithmeticOperator + -> -
   * 74 Weak Mutation 1413: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - ReplaceConstant - 1 -> 0
   * 75 Weak Mutation 1412: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - InsertUnaryOp IINC -1 mid
   * 76 Weak Mutation 1417: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - ReplaceArithmeticOperator + -> *
   * 77 Weak Mutation 1416: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:849 - ReplaceArithmeticOperator + -> /
   * 78 gnu.trove.list.array.TFloatArrayList.binarySearch(F)I: root-Branch
   * 79 gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I: I38 Branch 79 IF_ICMPGT L844 - false
   * 80 gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I: I59 Branch 80 IFGE L848 - false
   */

//   @Test
//   public void test94()  throws Throwable  {
//       float[] floatArray0 = new float[4];
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
//       int int0 = tFloatArrayList0.binarySearch(6.6360896E8F);
//       assertEquals((-5), int0);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 95
  /*
   * 136 covered goals:
   * 1 Weak Mutation 1403: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:848 - ReplaceComparisonOperator >= -> ==
   * 2 Weak Mutation 1425: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:851 - ReplaceComparisonOperator <= -> -1
   * 3 Weak Mutation 1418: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:851 - ReplaceVariable midVal -> value
   * 4 Weak Mutation 1420: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:851 - ReplaceVariable value -> midVal
   * 5 Weak Mutation 1426: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - ReplaceVariable mid -> fromIndex
   * 6 Weak Mutation 1427: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - ReplaceVariable mid -> high
   * 7 Weak Mutation 1430: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - InsertUnaryOp Negation of mid
   * 8 Weak Mutation 1431: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - InsertUnaryOp IINC 1 mid
   * 9 Weak Mutation 1428: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - ReplaceVariable mid -> toIndex
   * 10 Weak Mutation 1429: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - ReplaceVariable mid -> low
   * 11 Weak Mutation 1434: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - ReplaceArithmeticOperator - -> +
   * 12 Weak Mutation 1435: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - ReplaceArithmeticOperator - -> %
   * 13 Weak Mutation 1432: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - InsertUnaryOp IINC -1 mid
   * 14 Weak Mutation 1433: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - ReplaceConstant - 1 -> 0
   * 15 Weak Mutation 1436: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - ReplaceArithmeticOperator - -> /
   * 16 Weak Mutation 1437: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - ReplaceArithmeticOperator - -> *
   * 17 gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I: I72 Branch 81 IFLE L851 - false
   * 18 Weak Mutation 1375: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - InsertUnaryOp IINC 1 low
   * 19 Weak Mutation 1374: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - InsertUnaryOp Negation of low
   * 20 Weak Mutation 1373: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceVariable low -> toIndex
   * 21 Weak Mutation 1372: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceVariable low -> high
   * 22 Weak Mutation 1369: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - ReplaceComparisonOperator > -> !=
   * 23 Weak Mutation 1367: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - InsertUnaryOp IINC -1 high
   * 24 Weak Mutation 1366: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - InsertUnaryOp IINC 1 high
   * 25 Weak Mutation 1365: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - InsertUnaryOp Negation of high
   * 26 Weak Mutation 1364: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - ReplaceVariable high -> low
   * 27 Weak Mutation 1363: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - ReplaceVariable high -> toIndex
   * 28 Weak Mutation 1362: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - ReplaceVariable high -> fromIndex
   * 29 Weak Mutation 1361: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - InsertUnaryOp IINC -1 low
   * 30 Weak Mutation 1360: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - InsertUnaryOp IINC 1 low
   * 31 Weak Mutation 1358: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - ReplaceVariable low -> toIndex
   * 32 Weak Mutation 1359: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - InsertUnaryOp Negation of low
   * 33 Weak Mutation 1357: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:844 - ReplaceVariable low -> high
   * 34 Weak Mutation 1354: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:842 - ReplaceArithmeticOperator - -> /
   * 35 Weak Mutation 1355: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:842 - ReplaceArithmeticOperator - -> *
   * 36 Weak Mutation 1352: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:842 - ReplaceArithmeticOperator - -> +
   * 37 Weak Mutation 1353: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:842 - ReplaceArithmeticOperator - -> %
   * 38 Weak Mutation 1350: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:842 - InsertUnaryOp IINC -1 toIndex
   * 39 Weak Mutation 1351: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:842 - ReplaceConstant - 1 -> 0
   * 40 Weak Mutation 1348: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:842 - InsertUnaryOp Negation of toIndex
   * 41 Weak Mutation 1349: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:842 - InsertUnaryOp IINC 1 toIndex
   * 42 Weak Mutation 1346: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:842 - ReplaceVariable toIndex -> fromIndex
   * 43 Weak Mutation 1347: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:842 - ReplaceVariable toIndex -> low
   * 44 Weak Mutation 1344: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:841 - InsertUnaryOp IINC 1 fromIndex
   * 45 Weak Mutation 1345: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:841 - InsertUnaryOp IINC -1 fromIndex
   * 46 Weak Mutation 1404: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:848 - ReplaceComparisonOperator >= -> >
   * 47 Weak Mutation 1401: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:848 - InsertUnaryOp Negation of value
   * 48 Weak Mutation 1400: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:848 - ReplaceVariable value -> midVal
   * 49 Weak Mutation 1402: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:848 - DeleteStatement: floatSub(FF)I
   * 50 Weak Mutation 1397: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:846 - InsertUnaryOp IINC -1 mid
   * 51 Weak Mutation 1396: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:846 - InsertUnaryOp IINC 1 mid
   * 52 Weak Mutation 1399: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:848 - InsertUnaryOp Negation of midVal
   * 53 Weak Mutation 1398: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:848 - ReplaceVariable midVal -> value
   * 54 Weak Mutation 1393: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:846 - ReplaceVariable mid -> toIndex
   * 55 Weak Mutation 1392: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:846 - ReplaceVariable mid -> high
   * 56 Weak Mutation 1395: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:846 - InsertUnaryOp Negation of mid
   * 57 Weak Mutation 1394: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:846 - ReplaceVariable mid -> low
   * 58 Weak Mutation 1389: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceBitwiseOperator >>> -> <<
   * 59 Weak Mutation 1390: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:846 - DeleteField: _data[F
   * 60 Weak Mutation 1391: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:846 - ReplaceVariable mid -> fromIndex
   * 61 Weak Mutation 1384: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceArithmeticOperator + -> %
   * 62 Weak Mutation 1385: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceArithmeticOperator + -> /
   * 63 Weak Mutation 1386: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceArithmeticOperator + -> *
   * 64 Weak Mutation 1387: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceConstant - 1 -> 0
   * 65 Weak Mutation 1380: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - InsertUnaryOp Negation of high
   * 66 Weak Mutation 1381: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - InsertUnaryOp IINC 1 high
   * 67 Weak Mutation 1382: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - InsertUnaryOp IINC -1 high
   * 68 Weak Mutation 1383: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceArithmeticOperator + -> -
   * 69 Weak Mutation 1376: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - InsertUnaryOp IINC -1 low
   * 70 Weak Mutation 1377: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceVariable high -> fromIndex
   * 71 Weak Mutation 1378: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceVariable high -> toIndex
   * 72 Weak Mutation 1379: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:845 - ReplaceVariable high -> low
   * 73 Weak Mutation 1311: gnu.trove.list.array.TFloatArrayList.binarySearch(F)I:828 - InsertUnaryOp Negation
   * 74 Weak Mutation 1310: gnu.trove.list.array.TFloatArrayList.binarySearch(F)I:828 - ReplaceConstant - 0 -> 1
   * 75 Weak Mutation 1309: gnu.trove.list.array.TFloatArrayList.binarySearch(F)I:828 - InsertUnaryOp Negation of value
   * 76 Weak Mutation 1336: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:837 - ReplaceComparisonOperator <= -> <
   * 77 Weak Mutation 1343: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:841 - InsertUnaryOp Negation of fromIndex
   * 78 Weak Mutation 1342: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:841 - ReplaceVariable fromIndex -> toIndex
   * 79 Weak Mutation 1329: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:837 - InsertUnaryOp IINC 1 toIndex
   * 80 Weak Mutation 1328: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:837 - InsertUnaryOp Negation of toIndex
   * 81 Weak Mutation 1331: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:837 - InsertUnaryOp Negation
   * 82 Weak Mutation 1330: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:837 - InsertUnaryOp IINC -1 toIndex
   * 83 Weak Mutation 1333: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:837 - InsertUnaryOp -1
   * 84 Weak Mutation 1332: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:837 - InsertUnaryOp +1
   * 85 Weak Mutation 1334: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:837 - DeleteField: _posI
   * 86 Weak Mutation 1321: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:834 - ReplaceComparisonOperator >= -> >
   * 87 Weak Mutation 1327: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:837 - ReplaceVariable toIndex -> fromIndex
   * 88 Weak Mutation 1312: gnu.trove.list.array.TFloatArrayList.binarySearch(F)I:828 - InsertUnaryOp +1
   * 89 Weak Mutation 1313: gnu.trove.list.array.TFloatArrayList.binarySearch(F)I:828 - InsertUnaryOp -1
   * 90 Weak Mutation 1314: gnu.trove.list.array.TFloatArrayList.binarySearch(F)I:828 - DeleteField: _posI
   * 91 Weak Mutation 1315: gnu.trove.list.array.TFloatArrayList.binarySearch(F)I:828 - DeleteStatement: binarySearch(FII)I
   * 92 Weak Mutation 1316: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:834 - ReplaceVariable fromIndex -> toIndex
   * 93 Weak Mutation 1317: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:834 - InsertUnaryOp Negation of fromIndex
   * 94 Weak Mutation 1318: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:834 - InsertUnaryOp IINC 1 fromIndex
   * 95 Weak Mutation 1319: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:834 - InsertUnaryOp IINC -1 fromIndex
   * 96 Weak Mutation 1424: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:851 - ReplaceComparisonOperator <= -> <
   * 97 Weak Mutation 1438: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:855 - ReplaceVariable mid -> fromIndex
   * 98 Weak Mutation 1439: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:855 - ReplaceVariable mid -> high
   * 99 Weak Mutation 1419: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:851 - InsertUnaryOp Negation of midVal
   * 100 Weak Mutation 1422: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:851 - DeleteStatement: floatSub(FF)I
   * 101 Weak Mutation 1421: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:851 - InsertUnaryOp Negation of value
   * 102 Weak Mutation 1441: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:855 - ReplaceVariable mid -> low
   * 103 Weak Mutation 1440: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:855 - ReplaceVariable mid -> toIndex
   * 104 Weak Mutation 1443: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:855 - InsertUnaryOp IINC 1 mid
   * 105 Weak Mutation 1442: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:855 - InsertUnaryOp Negation of mid
   * 106 Weak Mutation 1444: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:855 - InsertUnaryOp IINC -1 mid
   * 107 Weak Mutation 1404: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:848 - ReplaceComparisonOperator >= -> >
   * 108 Weak Mutation 1403: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:848 - ReplaceComparisonOperator >= -> ==
   * 109 Weak Mutation 1426: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - ReplaceVariable mid -> fromIndex
   * 110 Weak Mutation 1427: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - ReplaceVariable mid -> high
   * 111 Weak Mutation 1424: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:851 - ReplaceComparisonOperator <= -> <
   * 112 Weak Mutation 1425: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:851 - ReplaceComparisonOperator <= -> -1
   * 113 Weak Mutation 1430: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - InsertUnaryOp Negation of mid
   * 114 Weak Mutation 1431: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - InsertUnaryOp IINC 1 mid
   * 115 Weak Mutation 1428: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - ReplaceVariable mid -> toIndex
   * 116 Weak Mutation 1429: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - ReplaceVariable mid -> low
   * 117 Weak Mutation 1434: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - ReplaceArithmeticOperator - -> +
   * 118 Weak Mutation 1435: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - ReplaceArithmeticOperator - -> %
   * 119 Weak Mutation 1432: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - InsertUnaryOp IINC -1 mid
   * 120 Weak Mutation 1433: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - ReplaceConstant - 1 -> 0
   * 121 Weak Mutation 1438: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:855 - ReplaceVariable mid -> fromIndex
   * 122 Weak Mutation 1439: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:855 - ReplaceVariable mid -> high
   * 123 Weak Mutation 1436: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - ReplaceArithmeticOperator - -> /
   * 124 Weak Mutation 1437: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:852 - ReplaceArithmeticOperator - -> *
   * 125 Weak Mutation 1419: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:851 - InsertUnaryOp Negation of midVal
   * 126 Weak Mutation 1418: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:851 - ReplaceVariable midVal -> value
   * 127 Weak Mutation 1422: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:851 - DeleteStatement: floatSub(FF)I
   * 128 Weak Mutation 1421: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:851 - InsertUnaryOp Negation of value
   * 129 Weak Mutation 1420: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:851 - ReplaceVariable value -> midVal
   * 130 Weak Mutation 1441: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:855 - ReplaceVariable mid -> low
   * 131 Weak Mutation 1440: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:855 - ReplaceVariable mid -> toIndex
   * 132 Weak Mutation 1443: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:855 - InsertUnaryOp IINC 1 mid
   * 133 Weak Mutation 1442: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:855 - InsertUnaryOp Negation of mid
   * 134 Weak Mutation 1444: gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I:855 - InsertUnaryOp IINC -1 mid
   * 135 gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I: I59 Branch 80 IFGE L848 - true
   * 136 gnu.trove.list.array.TFloatArrayList.binarySearch(FII)I: I72 Branch 81 IFLE L851 - true
   */

//   @Test
//   public void test95()  throws Throwable  {
//       float[] floatArray0 = new float[8];
//       floatArray0[3] = 535.1482F;
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
//       assertNotNull(tFloatArrayList0);
//       
//       int int0 = tFloatArrayList0.binarySearch(0.0F);
//       assertEquals(1, int0);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 96
  /*
   * 60 covered goals:
   * 1 Weak Mutation 1445: gnu.trove.list.array.TFloatArrayList.indexOf(F)I:864 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 1447: gnu.trove.list.array.TFloatArrayList.indexOf(F)I:864 - DeleteStatement: indexOf(IF)I
   * 3 Weak Mutation 1446: gnu.trove.list.array.TFloatArrayList.indexOf(F)I:864 - InsertUnaryOp Negation of value
   * 4 Weak Mutation 1476: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - ReplaceVariable i -> offset
   * 5 Weak Mutation 1456: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp +1
   * 6 Weak Mutation 1457: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp -1
   * 7 Weak Mutation 1458: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - DeleteField: _posI
   * 8 Weak Mutation 1460: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - ReplaceComparisonOperator >= -> >
   * 9 Weak Mutation 1461: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - ReplaceComparisonOperator >= -> -1
   * 10 Weak Mutation 1449: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp IINC 1 offset
   * 11 Weak Mutation 1448: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp Negation of offset
   * 12 Weak Mutation 1451: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - ReplaceVariable i -> offset
   * 13 Weak Mutation 1450: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp IINC -1 offset
   * 14 Weak Mutation 1453: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp IINC 1 i
   * 15 Weak Mutation 1452: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp Negation of i
   * 16 Weak Mutation 1455: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp Negation
   * 17 Weak Mutation 1454: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp IINC -1 i
   * 18 Weak Mutation 1462: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - DeleteField: _data[F
   * 19 Weak Mutation 1463: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - ReplaceVariable i -> offset
   * 20 Weak Mutation 1464: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - InsertUnaryOp Negation of i
   * 21 Weak Mutation 1465: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - InsertUnaryOp IINC 1 i
   * 22 Weak Mutation 1466: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - InsertUnaryOp IINC -1 i
   * 23 Weak Mutation 1467: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - InsertUnaryOp Negation of value
   * 24 Weak Mutation 1468: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - DeleteStatement: floatSub(FF)I
   * 25 Weak Mutation 1470: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - ReplaceComparisonOperator != -> >
   * 26 Weak Mutation 1479: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:875 - ReplaceConstant - -1 -> -2
   * 27 Weak Mutation 1478: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:875 - ReplaceConstant - -1 -> 1
   * 28 Weak Mutation 1477: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:875 - ReplaceConstant - -1 -> 0
   * 29 gnu.trove.list.array.TFloatArrayList.indexOf(F)I: root-Branch
   * 30 gnu.trove.list.array.TFloatArrayList.indexOf(IF)I: I8 Branch 82 IF_ICMPGE L870 - true
   * 31 gnu.trove.list.array.TFloatArrayList.indexOf(IF)I: I8 Branch 82 IF_ICMPGE L870 - false
   * 32 gnu.trove.list.array.TFloatArrayList.indexOf(IF)I: I17 Branch 83 IFNE L871 - true
   * 33 Weak Mutation 1479: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:875 - ReplaceConstant - -1 -> -2
   * 34 Weak Mutation 1478: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:875 - ReplaceConstant - -1 -> 1
   * 35 Weak Mutation 1477: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:875 - ReplaceConstant - -1 -> 0
   * 36 Weak Mutation 1476: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - ReplaceVariable i -> offset
   * 37 Weak Mutation 1456: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp +1
   * 38 Weak Mutation 1457: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp -1
   * 39 Weak Mutation 1458: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - DeleteField: _posI
   * 40 Weak Mutation 1460: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - ReplaceComparisonOperator >= -> >
   * 41 Weak Mutation 1461: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - ReplaceComparisonOperator >= -> -1
   * 42 Weak Mutation 1462: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - DeleteField: _data[F
   * 43 Weak Mutation 1463: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - ReplaceVariable i -> offset
   * 44 Weak Mutation 1464: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - InsertUnaryOp Negation of i
   * 45 Weak Mutation 1465: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - InsertUnaryOp IINC 1 i
   * 46 Weak Mutation 1466: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - InsertUnaryOp IINC -1 i
   * 47 Weak Mutation 1467: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - InsertUnaryOp Negation of value
   * 48 Weak Mutation 1468: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - DeleteStatement: floatSub(FF)I
   * 49 Weak Mutation 1470: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - ReplaceComparisonOperator != -> >
   * 50 Weak Mutation 1445: gnu.trove.list.array.TFloatArrayList.indexOf(F)I:864 - ReplaceConstant - 0 -> 1
   * 51 Weak Mutation 1447: gnu.trove.list.array.TFloatArrayList.indexOf(F)I:864 - DeleteStatement: indexOf(IF)I
   * 52 Weak Mutation 1446: gnu.trove.list.array.TFloatArrayList.indexOf(F)I:864 - InsertUnaryOp Negation of value
   * 53 Weak Mutation 1449: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp IINC 1 offset
   * 54 Weak Mutation 1448: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp Negation of offset
   * 55 Weak Mutation 1451: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - ReplaceVariable i -> offset
   * 56 Weak Mutation 1450: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp IINC -1 offset
   * 57 Weak Mutation 1453: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp IINC 1 i
   * 58 Weak Mutation 1452: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp Negation of i
   * 59 Weak Mutation 1455: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp Negation
   * 60 Weak Mutation 1454: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp IINC -1 i
   */

//   @Test
//   public void test96()  throws Throwable  {
//       float[] floatArray0 = new float[6];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, (float) 115);
//       assertNotNull(tFloatArrayList0);
//       
//       int int0 = tFloatArrayList0.indexOf((float) 115);
//       assertEquals((-1), int0);
//       assertEquals(115.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 97
  /*
   * 2 covered goals:
   * 1 Weak Mutation 1459: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - ReplaceComparisonOperator >= -> ==
   * 2 Weak Mutation 1459: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - ReplaceComparisonOperator >= -> ==
   */

//   @Test
//   public void test97()  throws Throwable  {
//       float[] floatArray0 = new float[7];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
//       assertNotNull(tFloatArrayList0);
//       
//       int int0 = tFloatArrayList0.indexOf(683, (-37.930794F));
//       assertEquals((-1), int0);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 98
  /*
   * 6 covered goals:
   * 1 Weak Mutation 1469: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - ReplaceComparisonOperator != -> <
   * 2 Weak Mutation 1479: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:875 - ReplaceConstant - -1 -> -2
   * 3 Weak Mutation 1478: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:875 - ReplaceConstant - -1 -> 1
   * 4 Weak Mutation 1477: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:875 - ReplaceConstant - -1 -> 0
   * 5 Weak Mutation 1460: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - ReplaceComparisonOperator >= -> >
   * 6 Weak Mutation 1469: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - ReplaceComparisonOperator != -> <
   */

//   @Test
//   public void test98()  throws Throwable  {
//       float[] floatArray0 = new float[17];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, Float.NEGATIVE_INFINITY);
//       assertNotNull(tFloatArrayList0);
//       
//       int int0 = tFloatArrayList0.indexOf((-182.60248F));
//       assertEquals(Float.NEGATIVE_INFINITY, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals((-1), int0);
//   }

  //Test case number: 99
  /*
   * 35 covered goals:
   * 1 Weak Mutation 1471: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - ReplaceComparisonOperator != -> -1
   * 2 Weak Mutation 1475: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:872 - InsertUnaryOp IINC -1 i
   * 3 Weak Mutation 1474: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:872 - InsertUnaryOp IINC 1 i
   * 4 Weak Mutation 1473: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:872 - InsertUnaryOp Negation of i
   * 5 Weak Mutation 1472: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:872 - ReplaceVariable i -> offset
   * 6 gnu.trove.list.array.TFloatArrayList.indexOf(IF)I: I17 Branch 83 IFNE L871 - false
   * 7 Weak Mutation 1476: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - ReplaceVariable i -> offset
   * 8 Weak Mutation 1456: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp +1
   * 9 Weak Mutation 1457: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp -1
   * 10 Weak Mutation 1458: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - DeleteField: _posI
   * 11 Weak Mutation 1461: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - ReplaceComparisonOperator >= -> -1
   * 12 Weak Mutation 1462: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - DeleteField: _data[F
   * 13 Weak Mutation 1463: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - ReplaceVariable i -> offset
   * 14 Weak Mutation 1464: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - InsertUnaryOp Negation of i
   * 15 Weak Mutation 1465: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - InsertUnaryOp IINC 1 i
   * 16 Weak Mutation 1466: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - InsertUnaryOp IINC -1 i
   * 17 Weak Mutation 1467: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - InsertUnaryOp Negation of value
   * 18 Weak Mutation 1468: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - DeleteStatement: floatSub(FF)I
   * 19 Weak Mutation 1469: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - ReplaceComparisonOperator != -> <
   * 20 Weak Mutation 1445: gnu.trove.list.array.TFloatArrayList.indexOf(F)I:864 - ReplaceConstant - 0 -> 1
   * 21 Weak Mutation 1447: gnu.trove.list.array.TFloatArrayList.indexOf(F)I:864 - DeleteStatement: indexOf(IF)I
   * 22 Weak Mutation 1446: gnu.trove.list.array.TFloatArrayList.indexOf(F)I:864 - InsertUnaryOp Negation of value
   * 23 Weak Mutation 1449: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp IINC 1 offset
   * 24 Weak Mutation 1448: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp Negation of offset
   * 25 Weak Mutation 1451: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - ReplaceVariable i -> offset
   * 26 Weak Mutation 1450: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp IINC -1 offset
   * 27 Weak Mutation 1453: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp IINC 1 i
   * 28 Weak Mutation 1452: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp Negation of i
   * 29 Weak Mutation 1455: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp Negation
   * 30 Weak Mutation 1454: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:870 - InsertUnaryOp IINC -1 i
   * 31 Weak Mutation 1475: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:872 - InsertUnaryOp IINC -1 i
   * 32 Weak Mutation 1474: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:872 - InsertUnaryOp IINC 1 i
   * 33 Weak Mutation 1473: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:872 - InsertUnaryOp Negation of i
   * 34 Weak Mutation 1472: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:872 - ReplaceVariable i -> offset
   * 35 Weak Mutation 1471: gnu.trove.list.array.TFloatArrayList.indexOf(IF)I:871 - ReplaceComparisonOperator != -> -1
   */

//   @Test
//   public void test99()  throws Throwable  {
//       float[] floatArray0 = new float[17];
//       floatArray0[4] = (-182.60248F);
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, Float.NEGATIVE_INFINITY);
//       assertNotNull(tFloatArrayList0);
//       
//       int int0 = tFloatArrayList0.indexOf((-182.60248F));
//       assertEquals(4, int0);
//       assertEquals(Float.NEGATIVE_INFINITY, tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 100
  /*
   * 2 covered goals:
   * 1 Weak Mutation 1494: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - ReplaceComparisonOperator <= -> ==
   * 2 Weak Mutation 1494: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - ReplaceComparisonOperator <= -> ==
   */

//   @Test
//   public void test100()  throws Throwable  {
//       float[] floatArray0 = new float[20];
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
//       int int0 = tFloatArrayList0.lastIndexOf((-1989), 0.0F);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(20, tFloatArrayList0.size());
//       assertEquals((-1), int0);
//   }

  //Test case number: 101
  /*
   * 2 covered goals:
   * 1 Weak Mutation 1504: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - ReplaceComparisonOperator != -> <
   * 2 Weak Mutation 1504: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - ReplaceComparisonOperator != -> <
   */

//   @Test
//   public void test101()  throws Throwable  {
//       float[] floatArray0 = new float[6];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, (-1.0F));
//       assertNotNull(tFloatArrayList0);
//       
//       boolean boolean0 = tFloatArrayList0.contains((-1.0F));
//       assertEquals(false, boolean0);
//       assertEquals((-1.0F), tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 102
  /*
   * 19 covered goals:
   * 1 Weak Mutation 1524: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - InsertUnaryOp IINC -1 i
   * 2 Weak Mutation 1525: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - InsertUnaryOp Negation
   * 3 Weak Mutation 1526: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - InsertUnaryOp +1
   * 4 Weak Mutation 1527: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - InsertUnaryOp -1
   * 5 Weak Mutation 1521: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 1522: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - InsertUnaryOp Negation of i
   * 7 Weak Mutation 1523: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - InsertUnaryOp IINC 1 i
   * 8 Weak Mutation 1530: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - ReplaceComparisonOperator >= -> >
   * 9 Weak Mutation 1544: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:910 - ReplaceVariable list -> this
   * 10 gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;: I14 Branch 87 IF_ICMPGE L905 - true
   * 11 Weak Mutation 1524: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - InsertUnaryOp IINC -1 i
   * 12 Weak Mutation 1525: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - InsertUnaryOp Negation
   * 13 Weak Mutation 1526: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - InsertUnaryOp +1
   * 14 Weak Mutation 1527: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - InsertUnaryOp -1
   * 15 Weak Mutation 1521: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - ReplaceConstant - 0 -> 1
   * 16 Weak Mutation 1522: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - InsertUnaryOp Negation of i
   * 17 Weak Mutation 1523: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - InsertUnaryOp IINC 1 i
   * 18 Weak Mutation 1530: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - ReplaceComparisonOperator >= -> >
   * 19 Weak Mutation 1544: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:910 - ReplaceVariable list -> this
   */

//   @Test
//   public void test102()  throws Throwable  {
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
//       TFloatArrayList tFloatArrayList1 = (TFloatArrayList)tFloatArrayList0.grep((TFloatProcedure) null);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertNotNull(tFloatArrayList1);
//       assertNotSame(tFloatArrayList0, tFloatArrayList1);
//   }

  //Test case number: 103
  /*
   * 22 covered goals:
   * 1 Weak Mutation 1528: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - DeleteField: _posI
   * 2 Weak Mutation 1531: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - ReplaceComparisonOperator >= -> -1
   * 3 Weak Mutation 1532: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:906 - DeleteField: _data[F
   * 4 Weak Mutation 1533: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:906 - InsertUnaryOp Negation of i
   * 5 Weak Mutation 1534: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:906 - InsertUnaryOp IINC 1 i
   * 6 Weak Mutation 1535: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:906 - InsertUnaryOp IINC -1 i
   * 7 Weak Mutation 1536: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:906 - DeleteStatement: execute(F)Z
   * 8 gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;: I14 Branch 87 IF_ICMPGE L905 - false
   * 9 Weak Mutation 1524: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - InsertUnaryOp IINC -1 i
   * 10 Weak Mutation 1525: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - InsertUnaryOp Negation
   * 11 Weak Mutation 1526: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - InsertUnaryOp +1
   * 12 Weak Mutation 1527: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - InsertUnaryOp -1
   * 13 Weak Mutation 1521: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - ReplaceConstant - 0 -> 1
   * 14 Weak Mutation 1522: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - InsertUnaryOp Negation of i
   * 15 Weak Mutation 1523: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - InsertUnaryOp IINC 1 i
   * 16 Weak Mutation 1532: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:906 - DeleteField: _data[F
   * 17 Weak Mutation 1533: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:906 - InsertUnaryOp Negation of i
   * 18 Weak Mutation 1534: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:906 - InsertUnaryOp IINC 1 i
   * 19 Weak Mutation 1535: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:906 - InsertUnaryOp IINC -1 i
   * 20 Weak Mutation 1528: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - DeleteField: _posI
   * 21 Weak Mutation 1531: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:905 - ReplaceComparisonOperator >= -> -1
   * 22 Weak Mutation 1536: gnu.trove.list.array.TFloatArrayList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:906 - DeleteStatement: execute(F)Z
   */

  @Test
  public void test103()  throws Throwable  {
      float[] floatArray0 = new float[2];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, 1692.0F);
      assertNotNull(tFloatArrayList0);
      
      TSynchronizedFloatList tSynchronizedFloatList0 = new TSynchronizedFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tSynchronizedFloatList0.grep((TFloatProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 104
  /*
   * 29 covered goals:
   * 1 Weak Mutation 1548: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - InsertUnaryOp IINC -1 i
   * 2 Weak Mutation 1549: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - InsertUnaryOp Negation
   * 3 Weak Mutation 1550: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - InsertUnaryOp +1
   * 4 Weak Mutation 1551: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - InsertUnaryOp -1
   * 5 Weak Mutation 1545: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 1546: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - InsertUnaryOp Negation of i
   * 7 Weak Mutation 1547: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - InsertUnaryOp IINC 1 i
   * 8 Weak Mutation 1552: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - DeleteField: _posI
   * 9 Weak Mutation 1555: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - ReplaceComparisonOperator >= -> -1
   * 10 Weak Mutation 1560: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:918 - DeleteStatement: execute(F)Z
   * 11 Weak Mutation 1557: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:918 - InsertUnaryOp Negation of i
   * 12 Weak Mutation 1556: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:918 - DeleteField: _data[F
   * 13 Weak Mutation 1559: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:918 - InsertUnaryOp IINC -1 i
   * 14 Weak Mutation 1558: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:918 - InsertUnaryOp IINC 1 i
   * 15 gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;: I14 Branch 89 IF_ICMPGE L917 - false
   * 16 Weak Mutation 1548: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - InsertUnaryOp IINC -1 i
   * 17 Weak Mutation 1549: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - InsertUnaryOp Negation
   * 18 Weak Mutation 1550: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - InsertUnaryOp +1
   * 19 Weak Mutation 1551: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - InsertUnaryOp -1
   * 20 Weak Mutation 1545: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - ReplaceConstant - 0 -> 1
   * 21 Weak Mutation 1546: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - InsertUnaryOp Negation of i
   * 22 Weak Mutation 1547: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - InsertUnaryOp IINC 1 i
   * 23 Weak Mutation 1560: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:918 - DeleteStatement: execute(F)Z
   * 24 Weak Mutation 1557: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:918 - InsertUnaryOp Negation of i
   * 25 Weak Mutation 1556: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:918 - DeleteField: _data[F
   * 26 Weak Mutation 1559: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:918 - InsertUnaryOp IINC -1 i
   * 27 Weak Mutation 1558: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:918 - InsertUnaryOp IINC 1 i
   * 28 Weak Mutation 1552: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - DeleteField: _posI
   * 29 Weak Mutation 1555: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - ReplaceComparisonOperator >= -> -1
   */

  @Test
  public void test104()  throws Throwable  {
      float[] floatArray0 = new float[4];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      // Undeclared exception!
      try {
        tFloatArrayList0.inverseGrep((TFloatProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 105
  /*
   * 12 covered goals:
   * 1 Weak Mutation 1554: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - ReplaceComparisonOperator >= -> >
   * 2 Weak Mutation 1568: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:922 - ReplaceVariable list -> this
   * 3 gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;: I14 Branch 89 IF_ICMPGE L917 - true
   * 4 Weak Mutation 1548: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - InsertUnaryOp IINC -1 i
   * 5 Weak Mutation 1549: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - InsertUnaryOp Negation
   * 6 Weak Mutation 1550: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - InsertUnaryOp +1
   * 7 Weak Mutation 1551: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - InsertUnaryOp -1
   * 8 Weak Mutation 1545: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 1546: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - InsertUnaryOp Negation of i
   * 10 Weak Mutation 1547: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - InsertUnaryOp IINC 1 i
   * 11 Weak Mutation 1568: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:922 - ReplaceVariable list -> this
   * 12 Weak Mutation 1554: gnu.trove.list.array.TFloatArrayList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;:917 - ReplaceComparisonOperator >= -> >
   */

//   @Test
//   public void test105()  throws Throwable  {
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(1565, (-562.0F));
//       TFloatArrayList tFloatArrayList1 = (TFloatArrayList)tFloatArrayList0.inverseGrep((TFloatProcedure) null);
//       assertNotNull(tFloatArrayList1);
//       assertEquals(0.0F, tFloatArrayList1.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 106
  /*
   * 7 covered goals:
   * 1 Weak Mutation 1572: gnu.trove.list.array.TFloatArrayList.max()F:928 - ReplaceComparisonOperator != -> -1
   * 2 Weak Mutation 1569: gnu.trove.list.array.TFloatArrayList.max()F:928 - DeleteStatement: size()I
   * 3 Weak Mutation 1573: gnu.trove.list.array.TFloatArrayList.max()F:929 - ReplaceConstant - cannot find maximum of an empty list -> 
   * 4 gnu.trove.list.array.TFloatArrayList.max()F: I4 Branch 91 IFNE L928 - false
   * 5 Weak Mutation 1572: gnu.trove.list.array.TFloatArrayList.max()F:928 - ReplaceComparisonOperator != -> -1
   * 6 Weak Mutation 1573: gnu.trove.list.array.TFloatArrayList.max()F:929 - ReplaceConstant - cannot find maximum of an empty list -> 
   * 7 Weak Mutation 1569: gnu.trove.list.array.TFloatArrayList.max()F:928 - DeleteStatement: size()I
   */

  @Test
  public void test106()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(19373, (-358.5751F));
      // Undeclared exception!
      try {
        tFloatArrayList0.max();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // cannot find maximum of an empty list
         //
      }
  }

  //Test case number: 107
  /*
   * 51 covered goals:
   * 1 Weak Mutation 1570: gnu.trove.list.array.TFloatArrayList.max()F:928 - ReplaceComparisonOperator != -> <
   * 2 Weak Mutation 1576: gnu.trove.list.array.TFloatArrayList.max()F:931 - ReplaceConstant - -Infinity -> -1.0
   * 3 Weak Mutation 1577: gnu.trove.list.array.TFloatArrayList.max()F:931 - ReplaceConstant - -Infinity -> -Infinity
   * 4 Weak Mutation 1574: gnu.trove.list.array.TFloatArrayList.max()F:931 - ReplaceConstant - -Infinity -> 0.0
   * 5 Weak Mutation 1575: gnu.trove.list.array.TFloatArrayList.max()F:931 - ReplaceConstant - -Infinity -> 1.0
   * 6 Weak Mutation 1582: gnu.trove.list.array.TFloatArrayList.max()F:932 - InsertUnaryOp Negation
   * 7 Weak Mutation 1583: gnu.trove.list.array.TFloatArrayList.max()F:932 - InsertUnaryOp +1
   * 8 Weak Mutation 1580: gnu.trove.list.array.TFloatArrayList.max()F:932 - InsertUnaryOp IINC 1 i
   * 9 Weak Mutation 1581: gnu.trove.list.array.TFloatArrayList.max()F:932 - InsertUnaryOp IINC -1 i
   * 10 Weak Mutation 1578: gnu.trove.list.array.TFloatArrayList.max()F:932 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 1579: gnu.trove.list.array.TFloatArrayList.max()F:932 - InsertUnaryOp Negation of i
   * 12 Weak Mutation 1588: gnu.trove.list.array.TFloatArrayList.max()F:932 - ReplaceComparisonOperator >= -> -1
   * 13 Weak Mutation 1587: gnu.trove.list.array.TFloatArrayList.max()F:932 - ReplaceComparisonOperator >= -> >
   * 14 Weak Mutation 1585: gnu.trove.list.array.TFloatArrayList.max()F:932 - DeleteField: _posI
   * 15 Weak Mutation 1584: gnu.trove.list.array.TFloatArrayList.max()F:932 - InsertUnaryOp -1
   * 16 Weak Mutation 1596: gnu.trove.list.array.TFloatArrayList.max()F:933 - ReplaceComparisonOperator <= -> <
   * 17 Weak Mutation 1594: gnu.trove.list.array.TFloatArrayList.max()F:933 - DeleteStatement: floatSub(FF)I
   * 18 Weak Mutation 1593: gnu.trove.list.array.TFloatArrayList.max()F:933 - InsertUnaryOp Negation of max
   * 19 Weak Mutation 1592: gnu.trove.list.array.TFloatArrayList.max()F:933 - InsertUnaryOp IINC -1 i
   * 20 Weak Mutation 1591: gnu.trove.list.array.TFloatArrayList.max()F:933 - InsertUnaryOp IINC 1 i
   * 21 Weak Mutation 1590: gnu.trove.list.array.TFloatArrayList.max()F:933 - InsertUnaryOp Negation of i
   * 22 Weak Mutation 1589: gnu.trove.list.array.TFloatArrayList.max()F:933 - DeleteField: _data[F
   * 23 Weak Mutation 1602: gnu.trove.list.array.TFloatArrayList.max()F:937 - InsertUnaryOp Negation of max
   * 24 gnu.trove.list.array.TFloatArrayList.max()F: I4 Branch 91 IFNE L928 - true
   * 25 gnu.trove.list.array.TFloatArrayList.max()F: I24 Branch 92 IF_ICMPGE L932 - true
   * 26 gnu.trove.list.array.TFloatArrayList.max()F: I24 Branch 92 IF_ICMPGE L932 - false
   * 27 gnu.trove.list.array.TFloatArrayList.max()F: I33 Branch 93 IFLE L933 - true
   * 28 Weak Mutation 1569: gnu.trove.list.array.TFloatArrayList.max()F:928 - DeleteStatement: size()I
   * 29 Weak Mutation 1602: gnu.trove.list.array.TFloatArrayList.max()F:937 - InsertUnaryOp Negation of max
   * 30 Weak Mutation 1582: gnu.trove.list.array.TFloatArrayList.max()F:932 - InsertUnaryOp Negation
   * 31 Weak Mutation 1583: gnu.trove.list.array.TFloatArrayList.max()F:932 - InsertUnaryOp +1
   * 32 Weak Mutation 1580: gnu.trove.list.array.TFloatArrayList.max()F:932 - InsertUnaryOp IINC 1 i
   * 33 Weak Mutation 1581: gnu.trove.list.array.TFloatArrayList.max()F:932 - InsertUnaryOp IINC -1 i
   * 34 Weak Mutation 1578: gnu.trove.list.array.TFloatArrayList.max()F:932 - ReplaceConstant - 0 -> 1
   * 35 Weak Mutation 1579: gnu.trove.list.array.TFloatArrayList.max()F:932 - InsertUnaryOp Negation of i
   * 36 Weak Mutation 1576: gnu.trove.list.array.TFloatArrayList.max()F:931 - ReplaceConstant - -Infinity -> -1.0
   * 37 Weak Mutation 1577: gnu.trove.list.array.TFloatArrayList.max()F:931 - ReplaceConstant - -Infinity -> -Infinity
   * 38 Weak Mutation 1574: gnu.trove.list.array.TFloatArrayList.max()F:931 - ReplaceConstant - -Infinity -> 0.0
   * 39 Weak Mutation 1575: gnu.trove.list.array.TFloatArrayList.max()F:931 - ReplaceConstant - -Infinity -> 1.0
   * 40 Weak Mutation 1570: gnu.trove.list.array.TFloatArrayList.max()F:928 - ReplaceComparisonOperator != -> <
   * 41 Weak Mutation 1596: gnu.trove.list.array.TFloatArrayList.max()F:933 - ReplaceComparisonOperator <= -> <
   * 42 Weak Mutation 1594: gnu.trove.list.array.TFloatArrayList.max()F:933 - DeleteStatement: floatSub(FF)I
   * 43 Weak Mutation 1593: gnu.trove.list.array.TFloatArrayList.max()F:933 - InsertUnaryOp Negation of max
   * 44 Weak Mutation 1592: gnu.trove.list.array.TFloatArrayList.max()F:933 - InsertUnaryOp IINC -1 i
   * 45 Weak Mutation 1591: gnu.trove.list.array.TFloatArrayList.max()F:933 - InsertUnaryOp IINC 1 i
   * 46 Weak Mutation 1590: gnu.trove.list.array.TFloatArrayList.max()F:933 - InsertUnaryOp Negation of i
   * 47 Weak Mutation 1589: gnu.trove.list.array.TFloatArrayList.max()F:933 - DeleteField: _data[F
   * 48 Weak Mutation 1588: gnu.trove.list.array.TFloatArrayList.max()F:932 - ReplaceComparisonOperator >= -> -1
   * 49 Weak Mutation 1587: gnu.trove.list.array.TFloatArrayList.max()F:932 - ReplaceComparisonOperator >= -> >
   * 50 Weak Mutation 1585: gnu.trove.list.array.TFloatArrayList.max()F:932 - DeleteField: _posI
   * 51 Weak Mutation 1584: gnu.trove.list.array.TFloatArrayList.max()F:932 - InsertUnaryOp -1
   */

//   @Test
//   public void test107()  throws Throwable  {
//       float[] floatArray0 = new float[1];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, (-203.43948F));
//       assertNotNull(tFloatArrayList0);
//       
//       float float0 = tFloatArrayList0.max();
//       assertEquals(Float.NEGATIVE_INFINITY, float0, 0.01F);
//       assertEquals((-203.43948F), tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(1, tFloatArrayList0.size());
//   }

  //Test case number: 108
  /*
   * 7 covered goals:
   * 1 Weak Mutation 1603: gnu.trove.list.array.TFloatArrayList.min()F:943 - DeleteStatement: size()I
   * 2 Weak Mutation 1606: gnu.trove.list.array.TFloatArrayList.min()F:943 - ReplaceComparisonOperator != -> -1
   * 3 Weak Mutation 1607: gnu.trove.list.array.TFloatArrayList.min()F:944 - ReplaceConstant - cannot find minimum of an empty list -> 
   * 4 gnu.trove.list.array.TFloatArrayList.min()F: I4 Branch 94 IFNE L943 - false
   * 5 Weak Mutation 1603: gnu.trove.list.array.TFloatArrayList.min()F:943 - DeleteStatement: size()I
   * 6 Weak Mutation 1606: gnu.trove.list.array.TFloatArrayList.min()F:943 - ReplaceComparisonOperator != -> -1
   * 7 Weak Mutation 1607: gnu.trove.list.array.TFloatArrayList.min()F:944 - ReplaceConstant - cannot find minimum of an empty list -> 
   */

  @Test
  public void test108()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(0);
      // Undeclared exception!
      try {
        tFloatArrayList0.min();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // cannot find minimum of an empty list
         //
      }
  }

  //Test case number: 109
  /*
   * 51 covered goals:
   * 1 Weak Mutation 1604: gnu.trove.list.array.TFloatArrayList.min()F:943 - ReplaceComparisonOperator != -> <
   * 2 Weak Mutation 1608: gnu.trove.list.array.TFloatArrayList.min()F:946 - ReplaceConstant - Infinity -> 0.0
   * 3 Weak Mutation 1609: gnu.trove.list.array.TFloatArrayList.min()F:946 - ReplaceConstant - Infinity -> 1.0
   * 4 Weak Mutation 1610: gnu.trove.list.array.TFloatArrayList.min()F:946 - ReplaceConstant - Infinity -> -1.0
   * 5 Weak Mutation 1611: gnu.trove.list.array.TFloatArrayList.min()F:946 - ReplaceConstant - Infinity -> Infinity
   * 6 Weak Mutation 1612: gnu.trove.list.array.TFloatArrayList.min()F:947 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 1613: gnu.trove.list.array.TFloatArrayList.min()F:947 - InsertUnaryOp Negation of i
   * 8 Weak Mutation 1614: gnu.trove.list.array.TFloatArrayList.min()F:947 - InsertUnaryOp IINC 1 i
   * 9 Weak Mutation 1615: gnu.trove.list.array.TFloatArrayList.min()F:947 - InsertUnaryOp IINC -1 i
   * 10 Weak Mutation 1617: gnu.trove.list.array.TFloatArrayList.min()F:947 - InsertUnaryOp +1
   * 11 Weak Mutation 1616: gnu.trove.list.array.TFloatArrayList.min()F:947 - InsertUnaryOp Negation
   * 12 Weak Mutation 1619: gnu.trove.list.array.TFloatArrayList.min()F:947 - DeleteField: _posI
   * 13 Weak Mutation 1618: gnu.trove.list.array.TFloatArrayList.min()F:947 - InsertUnaryOp -1
   * 14 Weak Mutation 1621: gnu.trove.list.array.TFloatArrayList.min()F:947 - ReplaceComparisonOperator >= -> >
   * 15 Weak Mutation 1622: gnu.trove.list.array.TFloatArrayList.min()F:947 - ReplaceComparisonOperator >= -> -1
   * 16 Weak Mutation 1625: gnu.trove.list.array.TFloatArrayList.min()F:948 - InsertUnaryOp IINC 1 i
   * 17 Weak Mutation 1624: gnu.trove.list.array.TFloatArrayList.min()F:948 - InsertUnaryOp Negation of i
   * 18 Weak Mutation 1627: gnu.trove.list.array.TFloatArrayList.min()F:948 - InsertUnaryOp Negation of min
   * 19 Weak Mutation 1626: gnu.trove.list.array.TFloatArrayList.min()F:948 - InsertUnaryOp IINC -1 i
   * 20 Weak Mutation 1628: gnu.trove.list.array.TFloatArrayList.min()F:948 - DeleteStatement: floatSub(FF)I
   * 21 Weak Mutation 1630: gnu.trove.list.array.TFloatArrayList.min()F:948 - ReplaceComparisonOperator >= -> >
   * 22 Weak Mutation 1623: gnu.trove.list.array.TFloatArrayList.min()F:948 - DeleteField: _data[F
   * 23 Weak Mutation 1636: gnu.trove.list.array.TFloatArrayList.min()F:952 - InsertUnaryOp Negation of min
   * 24 gnu.trove.list.array.TFloatArrayList.min()F: I4 Branch 94 IFNE L943 - true
   * 25 gnu.trove.list.array.TFloatArrayList.min()F: I24 Branch 95 IF_ICMPGE L947 - true
   * 26 gnu.trove.list.array.TFloatArrayList.min()F: I24 Branch 95 IF_ICMPGE L947 - false
   * 27 gnu.trove.list.array.TFloatArrayList.min()F: I33 Branch 96 IFGE L948 - true
   * 28 Weak Mutation 1603: gnu.trove.list.array.TFloatArrayList.min()F:943 - DeleteStatement: size()I
   * 29 Weak Mutation 1636: gnu.trove.list.array.TFloatArrayList.min()F:952 - InsertUnaryOp Negation of min
   * 30 Weak Mutation 1608: gnu.trove.list.array.TFloatArrayList.min()F:946 - ReplaceConstant - Infinity -> 0.0
   * 31 Weak Mutation 1609: gnu.trove.list.array.TFloatArrayList.min()F:946 - ReplaceConstant - Infinity -> 1.0
   * 32 Weak Mutation 1610: gnu.trove.list.array.TFloatArrayList.min()F:946 - ReplaceConstant - Infinity -> -1.0
   * 33 Weak Mutation 1611: gnu.trove.list.array.TFloatArrayList.min()F:946 - ReplaceConstant - Infinity -> Infinity
   * 34 Weak Mutation 1612: gnu.trove.list.array.TFloatArrayList.min()F:947 - ReplaceConstant - 0 -> 1
   * 35 Weak Mutation 1613: gnu.trove.list.array.TFloatArrayList.min()F:947 - InsertUnaryOp Negation of i
   * 36 Weak Mutation 1614: gnu.trove.list.array.TFloatArrayList.min()F:947 - InsertUnaryOp IINC 1 i
   * 37 Weak Mutation 1615: gnu.trove.list.array.TFloatArrayList.min()F:947 - InsertUnaryOp IINC -1 i
   * 38 Weak Mutation 1604: gnu.trove.list.array.TFloatArrayList.min()F:943 - ReplaceComparisonOperator != -> <
   * 39 Weak Mutation 1625: gnu.trove.list.array.TFloatArrayList.min()F:948 - InsertUnaryOp IINC 1 i
   * 40 Weak Mutation 1624: gnu.trove.list.array.TFloatArrayList.min()F:948 - InsertUnaryOp Negation of i
   * 41 Weak Mutation 1627: gnu.trove.list.array.TFloatArrayList.min()F:948 - InsertUnaryOp Negation of min
   * 42 Weak Mutation 1626: gnu.trove.list.array.TFloatArrayList.min()F:948 - InsertUnaryOp IINC -1 i
   * 43 Weak Mutation 1628: gnu.trove.list.array.TFloatArrayList.min()F:948 - DeleteStatement: floatSub(FF)I
   * 44 Weak Mutation 1630: gnu.trove.list.array.TFloatArrayList.min()F:948 - ReplaceComparisonOperator >= -> >
   * 45 Weak Mutation 1617: gnu.trove.list.array.TFloatArrayList.min()F:947 - InsertUnaryOp +1
   * 46 Weak Mutation 1616: gnu.trove.list.array.TFloatArrayList.min()F:947 - InsertUnaryOp Negation
   * 47 Weak Mutation 1619: gnu.trove.list.array.TFloatArrayList.min()F:947 - DeleteField: _posI
   * 48 Weak Mutation 1618: gnu.trove.list.array.TFloatArrayList.min()F:947 - InsertUnaryOp -1
   * 49 Weak Mutation 1621: gnu.trove.list.array.TFloatArrayList.min()F:947 - ReplaceComparisonOperator >= -> >
   * 50 Weak Mutation 1623: gnu.trove.list.array.TFloatArrayList.min()F:948 - DeleteField: _data[F
   * 51 Weak Mutation 1622: gnu.trove.list.array.TFloatArrayList.min()F:947 - ReplaceComparisonOperator >= -> -1
   */

//   @Test
//   public void test109()  throws Throwable  {
//       float[] floatArray0 = new float[12];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
//       assertNotNull(tFloatArrayList0);
//       
//       float float0 = tFloatArrayList0.min();
//       assertEquals(Float.POSITIVE_INFINITY, float0, 0.01F);
//       assertEquals(12, tFloatArrayList0.size());
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 110
  /*
   * 46 covered goals:
   * 1 Weak Mutation 1658: gnu.trove.list.array.TFloatArrayList.sum()F:960 - ReplaceArithmeticOperator + -> *
   * 2 Weak Mutation 1655: gnu.trove.list.array.TFloatArrayList.sum()F:960 - ReplaceArithmeticOperator + -> -
   * 3 Weak Mutation 1642: gnu.trove.list.array.TFloatArrayList.sum()F:959 - InsertUnaryOp IINC -1 i
   * 4 Weak Mutation 1643: gnu.trove.list.array.TFloatArrayList.sum()F:959 - InsertUnaryOp Negation
   * 5 Weak Mutation 1640: gnu.trove.list.array.TFloatArrayList.sum()F:959 - InsertUnaryOp Negation of i
   * 6 Weak Mutation 1641: gnu.trove.list.array.TFloatArrayList.sum()F:959 - InsertUnaryOp IINC 1 i
   * 7 Weak Mutation 1646: gnu.trove.list.array.TFloatArrayList.sum()F:959 - DeleteField: _posI
   * 8 Weak Mutation 1644: gnu.trove.list.array.TFloatArrayList.sum()F:959 - InsertUnaryOp +1
   * 9 Weak Mutation 1645: gnu.trove.list.array.TFloatArrayList.sum()F:959 - InsertUnaryOp -1
   * 10 Weak Mutation 1638: gnu.trove.list.array.TFloatArrayList.sum()F:958 - ReplaceConstant - 0.0 -> -1.0
   * 11 Weak Mutation 1639: gnu.trove.list.array.TFloatArrayList.sum()F:959 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 1637: gnu.trove.list.array.TFloatArrayList.sum()F:958 - ReplaceConstant - 0.0 -> 1.0
   * 13 Weak Mutation 1659: gnu.trove.list.array.TFloatArrayList.sum()F:962 - InsertUnaryOp Negation of sum
   * 14 Weak Mutation 1657: gnu.trove.list.array.TFloatArrayList.sum()F:960 - ReplaceArithmeticOperator + -> /
   * 15 Weak Mutation 1656: gnu.trove.list.array.TFloatArrayList.sum()F:960 - ReplaceArithmeticOperator + -> %
   * 16 Weak Mutation 1651: gnu.trove.list.array.TFloatArrayList.sum()F:960 - DeleteField: _data[F
   * 17 Weak Mutation 1650: gnu.trove.list.array.TFloatArrayList.sum()F:960 - InsertUnaryOp Negation of sum
   * 18 Weak Mutation 1649: gnu.trove.list.array.TFloatArrayList.sum()F:959 - ReplaceComparisonOperator >= -> -1
   * 19 Weak Mutation 1648: gnu.trove.list.array.TFloatArrayList.sum()F:959 - ReplaceComparisonOperator >= -> >
   * 20 Weak Mutation 1654: gnu.trove.list.array.TFloatArrayList.sum()F:960 - InsertUnaryOp IINC -1 i
   * 21 Weak Mutation 1653: gnu.trove.list.array.TFloatArrayList.sum()F:960 - InsertUnaryOp IINC 1 i
   * 22 Weak Mutation 1652: gnu.trove.list.array.TFloatArrayList.sum()F:960 - InsertUnaryOp Negation of i
   * 23 Weak Mutation 1642: gnu.trove.list.array.TFloatArrayList.sum()F:959 - InsertUnaryOp IINC -1 i
   * 24 Weak Mutation 1643: gnu.trove.list.array.TFloatArrayList.sum()F:959 - InsertUnaryOp Negation
   * 25 Weak Mutation 1640: gnu.trove.list.array.TFloatArrayList.sum()F:959 - InsertUnaryOp Negation of i
   * 26 Weak Mutation 1641: gnu.trove.list.array.TFloatArrayList.sum()F:959 - InsertUnaryOp IINC 1 i
   * 27 Weak Mutation 1646: gnu.trove.list.array.TFloatArrayList.sum()F:959 - DeleteField: _posI
   * 28 Weak Mutation 1644: gnu.trove.list.array.TFloatArrayList.sum()F:959 - InsertUnaryOp +1
   * 29 Weak Mutation 1645: gnu.trove.list.array.TFloatArrayList.sum()F:959 - InsertUnaryOp -1
   * 30 Weak Mutation 1638: gnu.trove.list.array.TFloatArrayList.sum()F:958 - ReplaceConstant - 0.0 -> -1.0
   * 31 Weak Mutation 1639: gnu.trove.list.array.TFloatArrayList.sum()F:959 - ReplaceConstant - 0 -> 1
   * 32 Weak Mutation 1637: gnu.trove.list.array.TFloatArrayList.sum()F:958 - ReplaceConstant - 0.0 -> 1.0
   * 33 Weak Mutation 1659: gnu.trove.list.array.TFloatArrayList.sum()F:962 - InsertUnaryOp Negation of sum
   * 34 Weak Mutation 1658: gnu.trove.list.array.TFloatArrayList.sum()F:960 - ReplaceArithmeticOperator + -> *
   * 35 Weak Mutation 1657: gnu.trove.list.array.TFloatArrayList.sum()F:960 - ReplaceArithmeticOperator + -> /
   * 36 Weak Mutation 1656: gnu.trove.list.array.TFloatArrayList.sum()F:960 - ReplaceArithmeticOperator + -> %
   * 37 Weak Mutation 1651: gnu.trove.list.array.TFloatArrayList.sum()F:960 - DeleteField: _data[F
   * 38 Weak Mutation 1650: gnu.trove.list.array.TFloatArrayList.sum()F:960 - InsertUnaryOp Negation of sum
   * 39 Weak Mutation 1649: gnu.trove.list.array.TFloatArrayList.sum()F:959 - ReplaceComparisonOperator >= -> -1
   * 40 Weak Mutation 1648: gnu.trove.list.array.TFloatArrayList.sum()F:959 - ReplaceComparisonOperator >= -> >
   * 41 Weak Mutation 1655: gnu.trove.list.array.TFloatArrayList.sum()F:960 - ReplaceArithmeticOperator + -> -
   * 42 Weak Mutation 1654: gnu.trove.list.array.TFloatArrayList.sum()F:960 - InsertUnaryOp IINC -1 i
   * 43 Weak Mutation 1653: gnu.trove.list.array.TFloatArrayList.sum()F:960 - InsertUnaryOp IINC 1 i
   * 44 Weak Mutation 1652: gnu.trove.list.array.TFloatArrayList.sum()F:960 - InsertUnaryOp Negation of i
   * 45 gnu.trove.list.array.TFloatArrayList.sum()F: I12 Branch 97 IF_ICMPGE L959 - true
   * 46 gnu.trove.list.array.TFloatArrayList.sum()F: I12 Branch 97 IF_ICMPGE L959 - false
   */

//   @Test
//   public void test110()  throws Throwable  {
//       float[] floatArray0 = new float[17];
//       floatArray0[0] = 10.0F;
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, Float.NEGATIVE_INFINITY);
//       assertNotNull(tFloatArrayList0);
//       
//       float float0 = tFloatArrayList0.sum();
//       assertEquals(Float.NEGATIVE_INFINITY, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(10.0F, float0, 0.01F);
//   }

  //Test case number: 111
  /*
   * 95 covered goals:
   * 1 Weak Mutation 1660: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:971 - ReplaceConstant - { -> 
   * 2 Weak Mutation 1663: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp +1
   * 3 Weak Mutation 1662: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp Negation
   * 4 Weak Mutation 1661: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceConstant - 0 -> 1
   * 5 Weak Mutation 1669: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceArithmeticOperator - -> /
   * 6 Weak Mutation 1668: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceArithmeticOperator - -> %
   * 7 Weak Mutation 1671: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceVariable i -> end
   * 8 Weak Mutation 1670: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceArithmeticOperator - -> *
   * 9 Weak Mutation 1665: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - DeleteField: _posI
   * 10 Weak Mutation 1664: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp -1
   * 11 Weak Mutation 1667: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceArithmeticOperator - -> +
   * 12 Weak Mutation 1666: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceConstant - 1 -> 0
   * 13 Weak Mutation 1677: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp IINC 1 end
   * 14 Weak Mutation 1676: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp Negation of end
   * 15 Weak Mutation 1678: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp IINC -1 end
   * 16 Weak Mutation 1673: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp IINC 1 i
   * 17 Weak Mutation 1672: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp Negation of i
   * 18 Weak Mutation 1675: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceVariable end -> i
   * 19 Weak Mutation 1674: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp IINC -1 i
   * 20 Weak Mutation 1680: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceComparisonOperator >= -> >
   * 21 Weak Mutation 1681: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceComparisonOperator >= -> -1
   * 22 Weak Mutation 1690: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceVariable i -> end
   * 23 Weak Mutation 1684: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:973 - InsertUnaryOp Negation of i
   * 24 Weak Mutation 1685: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:973 - InsertUnaryOp IINC 1 i
   * 25 Weak Mutation 1686: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:973 - InsertUnaryOp IINC -1 i
   * 26 Weak Mutation 1687: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:973 - DeleteStatement: append(F)Ljava/lang/StringBuilder;
   * 27 Weak Mutation 1682: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:973 - DeleteField: _data[F
   * 28 Weak Mutation 1683: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:973 - ReplaceVariable i -> end
   * 29 Weak Mutation 1688: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:974 - ReplaceConstant - ,  -> 
   * 30 Weak Mutation 1689: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:974 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 31 Weak Mutation 1694: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:976 - ReplaceComparisonOperator <= -> -1
   * 32 Weak Mutation 1691: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:976 - DeleteStatement: size()I
   * 33 Weak Mutation 1703: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:977 - ReplaceArithmeticOperator - -> /
   * 34 Weak Mutation 1702: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:977 - ReplaceArithmeticOperator - -> %
   * 35 Weak Mutation 1701: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:977 - ReplaceArithmeticOperator - -> +
   * 36 Weak Mutation 1700: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:977 - ReplaceConstant - 1 -> 0
   * 37 Weak Mutation 1699: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:977 - DeleteField: _posI
   * 38 Weak Mutation 1698: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:977 - InsertUnaryOp -1
   * 39 Weak Mutation 1697: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:977 - InsertUnaryOp +1
   * 40 Weak Mutation 1696: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:977 - InsertUnaryOp Negation
   * 41 Weak Mutation 1705: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:977 - DeleteStatement: append(F)Ljava/lang/StringBuilder;
   * 42 Weak Mutation 1704: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:977 - ReplaceArithmeticOperator - -> *
   * 43 Weak Mutation 1695: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:977 - DeleteField: _data[F
   * 44 Weak Mutation 1707: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:979 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 45 Weak Mutation 1706: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:979 - ReplaceConstant - } -> 
   * 46 Weak Mutation 1708: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:980 - DeleteStatement: toString()Ljava/lang/String;
   * 47 gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;: I20 Branch 98 IF_ICMPGE L972 - true
   * 48 gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;: I20 Branch 98 IF_ICMPGE L972 - false
   * 49 gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;: I44 Branch 99 IFLE L976 - false
   * 50 Weak Mutation 1663: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp +1
   * 51 Weak Mutation 1662: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp Negation
   * 52 Weak Mutation 1661: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceConstant - 0 -> 1
   * 53 Weak Mutation 1660: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:971 - ReplaceConstant - { -> 
   * 54 Weak Mutation 1703: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:977 - ReplaceArithmeticOperator - -> /
   * 55 Weak Mutation 1702: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:977 - ReplaceArithmeticOperator - -> %
   * 56 Weak Mutation 1701: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:977 - ReplaceArithmeticOperator - -> +
   * 57 Weak Mutation 1700: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:977 - ReplaceConstant - 1 -> 0
   * 58 Weak Mutation 1699: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:977 - DeleteField: _posI
   * 59 Weak Mutation 1698: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:977 - InsertUnaryOp -1
   * 60 Weak Mutation 1697: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:977 - InsertUnaryOp +1
   * 61 Weak Mutation 1696: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:977 - InsertUnaryOp Negation
   * 62 Weak Mutation 1708: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:980 - DeleteStatement: toString()Ljava/lang/String;
   * 63 Weak Mutation 1707: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:979 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 64 Weak Mutation 1706: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:979 - ReplaceConstant - } -> 
   * 65 Weak Mutation 1705: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:977 - DeleteStatement: append(F)Ljava/lang/StringBuilder;
   * 66 Weak Mutation 1704: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:977 - ReplaceArithmeticOperator - -> *
   * 67 Weak Mutation 1669: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceArithmeticOperator - -> /
   * 68 Weak Mutation 1668: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceArithmeticOperator - -> %
   * 69 Weak Mutation 1671: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceVariable i -> end
   * 70 Weak Mutation 1670: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceArithmeticOperator - -> *
   * 71 Weak Mutation 1665: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - DeleteField: _posI
   * 72 Weak Mutation 1664: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp -1
   * 73 Weak Mutation 1667: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceArithmeticOperator - -> +
   * 74 Weak Mutation 1666: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceConstant - 1 -> 0
   * 75 Weak Mutation 1677: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp IINC 1 end
   * 76 Weak Mutation 1676: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp Negation of end
   * 77 Weak Mutation 1678: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp IINC -1 end
   * 78 Weak Mutation 1673: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp IINC 1 i
   * 79 Weak Mutation 1672: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp Negation of i
   * 80 Weak Mutation 1675: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceVariable end -> i
   * 81 Weak Mutation 1674: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp IINC -1 i
   * 82 Weak Mutation 1684: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:973 - InsertUnaryOp Negation of i
   * 83 Weak Mutation 1685: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:973 - InsertUnaryOp IINC 1 i
   * 84 Weak Mutation 1686: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:973 - InsertUnaryOp IINC -1 i
   * 85 Weak Mutation 1687: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:973 - DeleteStatement: append(F)Ljava/lang/StringBuilder;
   * 86 Weak Mutation 1680: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceComparisonOperator >= -> >
   * 87 Weak Mutation 1681: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceComparisonOperator >= -> -1
   * 88 Weak Mutation 1682: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:973 - DeleteField: _data[F
   * 89 Weak Mutation 1683: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:973 - ReplaceVariable i -> end
   * 90 Weak Mutation 1694: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:976 - ReplaceComparisonOperator <= -> -1
   * 91 Weak Mutation 1695: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:977 - DeleteField: _data[F
   * 92 Weak Mutation 1688: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:974 - ReplaceConstant - ,  -> 
   * 93 Weak Mutation 1689: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:974 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 94 Weak Mutation 1690: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceVariable i -> end
   * 95 Weak Mutation 1691: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:976 - DeleteStatement: size()I
   */

//   @Test
//   public void test111()  throws Throwable  {
//       float[] floatArray0 = new float[6];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, (-1.0F));
//       assertNotNull(tFloatArrayList0);
//       
//       String string0 = tFloatArrayList0.toString();
//       assertEquals((-1.0F), tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(6, tFloatArrayList0.size());
//       assertNotNull(string0);
//       assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}", string0);
//   }

  //Test case number: 112
  /*
   * 31 covered goals:
   * 1 Weak Mutation 1679: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceComparisonOperator >= -> ==
   * 2 Weak Mutation 1693: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:976 - ReplaceComparisonOperator <= -> <
   * 3 gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;: I44 Branch 99 IFLE L976 - true
   * 4 Weak Mutation 442: gnu.trove.list.array.TFloatArrayList.clear(I)V:352 - InsertUnaryOp Negation of capacity
   * 5 Weak Mutation 443: gnu.trove.list.array.TFloatArrayList.clear(I)V:352 - InsertUnaryOp IINC 1 capacity
   * 6 Weak Mutation 444: gnu.trove.list.array.TFloatArrayList.clear(I)V:352 - InsertUnaryOp IINC -1 capacity
   * 7 Weak Mutation 445: gnu.trove.list.array.TFloatArrayList.clear(I)V:353 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 1663: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp +1
   * 9 Weak Mutation 1662: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp Negation
   * 10 Weak Mutation 1661: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 1660: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:971 - ReplaceConstant - { -> 
   * 12 Weak Mutation 1708: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:980 - DeleteStatement: toString()Ljava/lang/String;
   * 13 Weak Mutation 1707: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:979 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 14 Weak Mutation 1706: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:979 - ReplaceConstant - } -> 
   * 15 Weak Mutation 1669: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceArithmeticOperator - -> /
   * 16 Weak Mutation 1668: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceArithmeticOperator - -> %
   * 17 Weak Mutation 1671: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceVariable i -> end
   * 18 Weak Mutation 1670: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceArithmeticOperator - -> *
   * 19 Weak Mutation 1664: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp -1
   * 20 Weak Mutation 1667: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceArithmeticOperator - -> +
   * 21 Weak Mutation 1666: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceConstant - 1 -> 0
   * 22 Weak Mutation 1677: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp IINC 1 end
   * 23 Weak Mutation 1676: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp Negation of end
   * 24 Weak Mutation 1678: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp IINC -1 end
   * 25 Weak Mutation 1673: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp IINC 1 i
   * 26 Weak Mutation 1672: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp Negation of i
   * 27 Weak Mutation 1675: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceVariable end -> i
   * 28 Weak Mutation 1674: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - InsertUnaryOp IINC -1 i
   * 29 Weak Mutation 1691: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:976 - DeleteStatement: size()I
   * 30 Weak Mutation 1679: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:972 - ReplaceComparisonOperator >= -> ==
   * 31 Weak Mutation 1693: gnu.trove.list.array.TFloatArrayList.toString()Ljava/lang/String;:976 - ReplaceComparisonOperator <= -> <
   */

  @Test
  public void test112()  throws Throwable  {
      float[] floatArray0 = new float[6];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, (-1.0F));
      assertNotNull(tFloatArrayList0);
      
      tFloatArrayList0.clear(1442);
      String string0 = tFloatArrayList0.toString();
      assertEquals(true, tFloatArrayList0.isEmpty());
      assertEquals("{}", string0);
  }

  //Test case number: 113
  /*
   * 308 covered goals:
   * 1 Weak Mutation 1810: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - DeleteField: lastRetI
   * 2 Weak Mutation 1821: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1027 - DeleteField: lastRetI
   * 3 Weak Mutation 1827: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - DeleteField: lastRetI
   * 4 Weak Mutation 1843: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - ReplaceArithmeticOperator - -> %
   * 5 Weak Mutation 55: gnu.trove.list.array.TFloatArrayList.size()I:195 - DeleteField: _posI
   * 6 Weak Mutation 54: gnu.trove.list.array.TFloatArrayList.size()I:195 - InsertUnaryOp -1
   * 7 Weak Mutation 53: gnu.trove.list.array.TFloatArrayList.size()I:195 - InsertUnaryOp +1
   * 8 Weak Mutation 52: gnu.trove.list.array.TFloatArrayList.size()I:195 - InsertUnaryOp Negation
   * 9 Weak Mutation 305: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - InsertUnaryOp IINC 1 offset
   * 10 Weak Mutation 304: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - InsertUnaryOp Negation of offset
   * 11 Weak Mutation 307: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - InsertUnaryOp Negation
   * 12 Weak Mutation 306: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - InsertUnaryOp IINC -1 offset
   * 13 Weak Mutation 309: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - InsertUnaryOp -1
   * 14 Weak Mutation 308: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - InsertUnaryOp +1
   * 15 Weak Mutation 310: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - DeleteField: _posI
   * 16 Weak Mutation 312: gnu.trove.list.array.TFloatArrayList.get(I)F:280 - ReplaceComparisonOperator < -> -2
   * 17 Weak Mutation 317: gnu.trove.list.array.TFloatArrayList.get(I)F:283 - DeleteField: _data[F
   * 18 Weak Mutation 319: gnu.trove.list.array.TFloatArrayList.get(I)F:283 - InsertUnaryOp IINC 1 offset
   * 19 Weak Mutation 318: gnu.trove.list.array.TFloatArrayList.get(I)F:283 - InsertUnaryOp Negation of offset
   * 20 Weak Mutation 320: gnu.trove.list.array.TFloatArrayList.get(I)F:283 - InsertUnaryOp IINC -1 offset
   * 21 Weak Mutation 478: gnu.trove.list.array.TFloatArrayList.remove(F)Z:389 - ReplaceConstant - 0 -> 1
   * 22 Weak Mutation 476: gnu.trove.list.array.TFloatArrayList.remove(F)Z:385 - DeleteStatement: remove(II)V
   * 23 Weak Mutation 477: gnu.trove.list.array.TFloatArrayList.remove(F)Z:386 - ReplaceConstant - 1 -> 0
   * 24 Weak Mutation 474: gnu.trove.list.array.TFloatArrayList.remove(F)Z:385 - InsertUnaryOp IINC -1 index
   * 25 Weak Mutation 475: gnu.trove.list.array.TFloatArrayList.remove(F)Z:385 - ReplaceConstant - 1 -> 0
   * 26 Weak Mutation 472: gnu.trove.list.array.TFloatArrayList.remove(F)Z:385 - InsertUnaryOp Negation of index
   * 27 Weak Mutation 473: gnu.trove.list.array.TFloatArrayList.remove(F)Z:385 - InsertUnaryOp IINC 1 index
   * 28 Weak Mutation 471: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - ReplaceComparisonOperator != -> -1
   * 29 Weak Mutation 468: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - DeleteStatement: floatSub(FF)I
   * 30 Weak Mutation 469: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - ReplaceComparisonOperator != -> <
   * 31 Weak Mutation 466: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - InsertUnaryOp IINC 1 index
   * 32 Weak Mutation 467: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - InsertUnaryOp IINC -1 index
   * 33 Weak Mutation 464: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - DeleteField: _data[F
   * 34 Weak Mutation 465: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - InsertUnaryOp Negation of index
   * 35 Weak Mutation 463: gnu.trove.list.array.TFloatArrayList.remove(F)Z:384 - InsertUnaryOp Negation of value
   * 36 Weak Mutation 462: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - ReplaceComparisonOperator >= -> -1
   * 37 Weak Mutation 461: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - ReplaceComparisonOperator >= -> >
   * 38 Weak Mutation 459: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - DeleteField: _posI
   * 39 Weak Mutation 458: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - InsertUnaryOp -1
   * 40 Weak Mutation 457: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - InsertUnaryOp +1
   * 41 Weak Mutation 456: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - InsertUnaryOp Negation
   * 42 Weak Mutation 455: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - InsertUnaryOp IINC -1 index
   * 43 Weak Mutation 454: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - InsertUnaryOp IINC 1 index
   * 44 Weak Mutation 453: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - InsertUnaryOp Negation of index
   * 45 Weak Mutation 452: gnu.trove.list.array.TFloatArrayList.remove(F)Z:383 - ReplaceConstant - 0 -> 1
   * 46 Weak Mutation 508: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp +1
   * 47 Weak Mutation 509: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp -1
   * 48 Weak Mutation 510: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - DeleteField: _posI
   * 49 Weak Mutation 504: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp Negation of offset
   * 50 Weak Mutation 505: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp IINC 1 offset
   * 51 Weak Mutation 506: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp IINC -1 offset
   * 52 Weak Mutation 507: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp Negation
   * 53 Weak Mutation 500: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - ReplaceComparisonOperator < -> !=
   * 54 Weak Mutation 501: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - ReplaceComparisonOperator < -> <=
   * 55 Weak Mutation 503: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - ReplaceVariable offset -> length
   * 56 Weak Mutation 496: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - ReplaceVariable offset -> length
   * 57 Weak Mutation 497: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp Negation of offset
   * 58 Weak Mutation 498: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp IINC 1 offset
   * 59 Weak Mutation 499: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - InsertUnaryOp IINC -1 offset
   * 60 Weak Mutation 493: gnu.trove.list.array.TFloatArrayList.remove(II)V:403 - ReplaceComparisonOperator != -> <
   * 61 Weak Mutation 492: gnu.trove.list.array.TFloatArrayList.remove(II)V:403 - InsertUnaryOp IINC -1 length
   * 62 Weak Mutation 489: gnu.trove.list.array.TFloatArrayList.remove(II)V:403 - ReplaceVariable length -> offset
   * 63 Weak Mutation 491: gnu.trove.list.array.TFloatArrayList.remove(II)V:403 - InsertUnaryOp IINC 1 length
   * 64 Weak Mutation 490: gnu.trove.list.array.TFloatArrayList.remove(II)V:403 - InsertUnaryOp Negation of length
   * 65 Weak Mutation 550: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp Negation of length
   * 66 Weak Mutation 551: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp IINC 1 length
   * 67 Weak Mutation 548: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - DeleteField: _posI
   * 68 Weak Mutation 546: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp +1
   * 69 Weak Mutation 547: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp -1
   * 70 Weak Mutation 544: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 71 Weak Mutation 545: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp Negation
   * 72 Weak Mutation 558: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp Negation of offset
   * 73 Weak Mutation 559: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp IINC 1 offset
   * 74 Weak Mutation 556: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - ReplaceArithmeticOperator - -> *
   * 75 Weak Mutation 554: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - ReplaceArithmeticOperator - -> %
   * 76 Weak Mutation 555: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - ReplaceArithmeticOperator - -> /
   * 77 Weak Mutation 552: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp IINC -1 length
   * 78 Weak Mutation 553: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - ReplaceArithmeticOperator - -> +
   * 79 Weak Mutation 567: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC 1 offset
   * 80 Weak Mutation 566: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp Negation of offset
   * 81 Weak Mutation 564: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - DeleteField: _data[F
   * 82 Weak Mutation 563: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - ReplaceComparisonOperator != -> -1
   * 83 Weak Mutation 562: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - ReplaceComparisonOperator != -> <
   * 84 Weak Mutation 560: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - InsertUnaryOp IINC -1 offset
   * 85 Weak Mutation 575: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> /
   * 86 Weak Mutation 574: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> %
   * 87 Weak Mutation 573: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> -
   * 88 Weak Mutation 572: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC -1 length
   * 89 Weak Mutation 571: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC 1 length
   * 90 Weak Mutation 570: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp Negation of length
   * 91 Weak Mutation 568: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC -1 offset
   * 92 Weak Mutation 518: gnu.trove.list.array.TFloatArrayList.remove(II)V:408 - ReplaceVariable offset -> length
   * 93 Weak Mutation 519: gnu.trove.list.array.TFloatArrayList.remove(II)V:408 - InsertUnaryOp Negation of offset
   * 94 Weak Mutation 512: gnu.trove.list.array.TFloatArrayList.remove(II)V:404 - ReplaceComparisonOperator < -> -2
   * 95 Weak Mutation 524: gnu.trove.list.array.TFloatArrayList.remove(II)V:408 - ReplaceComparisonOperator != -> -1
   * 96 Weak Mutation 525: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - DeleteField: _data[F
   * 97 Weak Mutation 526: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - ReplaceVariable length -> offset
   * 98 Weak Mutation 527: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp Negation of length
   * 99 Weak Mutation 520: gnu.trove.list.array.TFloatArrayList.remove(II)V:408 - InsertUnaryOp IINC 1 offset
   * 100 Weak Mutation 521: gnu.trove.list.array.TFloatArrayList.remove(II)V:408 - InsertUnaryOp IINC -1 offset
   * 101 Weak Mutation 522: gnu.trove.list.array.TFloatArrayList.remove(II)V:408 - ReplaceComparisonOperator != -> <
   * 102 Weak Mutation 533: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp +1
   * 103 Weak Mutation 532: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp Negation
   * 104 Weak Mutation 535: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - DeleteField: _posI
   * 105 Weak Mutation 534: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp -1
   * 106 Weak Mutation 529: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp IINC -1 length
   * 107 Weak Mutation 528: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp IINC 1 length
   * 108 Weak Mutation 531: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - ReplaceConstant - 0 -> 1
   * 109 Weak Mutation 530: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - DeleteField: _data[F
   * 110 Weak Mutation 541: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - ReplaceArithmeticOperator - -> %
   * 111 Weak Mutation 540: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - ReplaceArithmeticOperator - -> +
   * 112 Weak Mutation 543: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - ReplaceArithmeticOperator - -> *
   * 113 Weak Mutation 542: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - ReplaceArithmeticOperator - -> /
   * 114 Weak Mutation 537: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp Negation of length
   * 115 Weak Mutation 536: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - ReplaceVariable length -> offset
   * 116 Weak Mutation 539: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp IINC -1 length
   * 117 Weak Mutation 538: gnu.trove.list.array.TFloatArrayList.remove(II)V:410 - InsertUnaryOp IINC 1 length
   * 118 Weak Mutation 610: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - InsertUnaryOp IINC -1 length
   * 119 Weak Mutation 611: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - ReplaceArithmeticOperator - -> +
   * 120 Weak Mutation 608: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - InsertUnaryOp Negation of length
   * 121 Weak Mutation 609: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - InsertUnaryOp IINC 1 length
   * 122 Weak Mutation 614: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - ReplaceArithmeticOperator - -> *
   * 123 Weak Mutation 615: gnu.trove.list.array.TFloatArrayList.iterator()Lgnu/trove/iterator/TFloatIterator;:430 - ReplaceConstant - 0 -> 1
   * 124 Weak Mutation 612: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - ReplaceArithmeticOperator - -> %
   * 125 Weak Mutation 613: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - ReplaceArithmeticOperator - -> /
   * 126 Weak Mutation 576: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> *
   * 127 Weak Mutation 577: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - DeleteField: _data[F
   * 128 Weak Mutation 579: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp Negation of offset
   * 129 Weak Mutation 580: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC 1 offset
   * 130 Weak Mutation 581: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC -1 offset
   * 131 Weak Mutation 582: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp Negation
   * 132 Weak Mutation 583: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp +1
   * 133 Weak Mutation 584: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp -1
   * 134 Weak Mutation 585: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - DeleteField: _posI
   * 135 Weak Mutation 587: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp Negation of offset
   * 136 Weak Mutation 588: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC 1 offset
   * 137 Weak Mutation 589: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC -1 offset
   * 138 Weak Mutation 591: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp Negation of length
   * 139 Weak Mutation 593: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC -1 length
   * 140 Weak Mutation 592: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - InsertUnaryOp IINC 1 length
   * 141 Weak Mutation 595: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> %
   * 142 Weak Mutation 594: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> -
   * 143 Weak Mutation 597: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> *
   * 144 Weak Mutation 596: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator + -> /
   * 145 Weak Mutation 599: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator - -> %
   * 146 Weak Mutation 598: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator - -> +
   * 147 Weak Mutation 601: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator - -> *
   * 148 Weak Mutation 600: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - ReplaceArithmeticOperator - -> /
   * 149 Weak Mutation 603: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - InsertUnaryOp Negation
   * 150 Weak Mutation 602: gnu.trove.list.array.TFloatArrayList.remove(II)V:418 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 151 Weak Mutation 605: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - InsertUnaryOp -1
   * 152 Weak Mutation 604: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - InsertUnaryOp +1
   * 153 Weak Mutation 607: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - ReplaceVariable length -> offset
   * 154 Weak Mutation 606: gnu.trove.list.array.TFloatArrayList.remove(II)V:421 - DeleteField: _posI
   * 155 Weak Mutation 719: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:534 - ReplaceComparisonOperator != -> ==
   * 156 Weak Mutation 728: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:541 - DeleteStatement: remove()V
   * 157 Weak Mutation 729: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:542 - ReplaceConstant - 1 -> 0
   * 158 Weak Mutation 730: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:545 - InsertUnaryOp Negation of modified
   * 159 Weak Mutation 731: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:545 - InsertUnaryOp IINC 1 modified
   * 160 Weak Mutation 732: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:545 - InsertUnaryOp IINC -1 modified
   * 161 Weak Mutation 721: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:537 - ReplaceConstant - 0 -> 1
   * 162 Weak Mutation 722: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:538 - DeleteStatement: iterator()Lgnu/trove/iterator/TFloatIterator;
   * 163 Weak Mutation 723: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:539 - DeleteStatement: hasNext()Z
   * 164 Weak Mutation 724: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:539 - ReplaceComparisonOperator == -> !=
   * 165 Weak Mutation 725: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:540 - DeleteStatement: next()F
   * 166 Weak Mutation 726: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:540 - DeleteStatement: contains(F)Z
   * 167 Weak Mutation 727: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:540 - ReplaceComparisonOperator != -> ==
   * 168 Weak Mutation 786: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:591 - ReplaceConstant - 1 -> 0
   * 169 Weak Mutation 785: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:590 - ReplaceComparisonOperator == -> !=
   * 170 Weak Mutation 784: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:590 - DeleteStatement: remove(F)Z
   * 171 Weak Mutation 782: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:589 - DeleteStatement: next()F
   * 172 Weak Mutation 783: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:590 - InsertUnaryOp Negation of element
   * 173 Weak Mutation 1270: gnu.trove.list.array.TFloatArrayList.fill(F)V:810 - DeleteField: _data[F
   * 174 Weak Mutation 1271: gnu.trove.list.array.TFloatArrayList.fill(F)V:810 - ReplaceConstant - 0 -> 1
   * 175 Weak Mutation 1276: gnu.trove.list.array.TFloatArrayList.fill(F)V:810 - InsertUnaryOp Negation of val
   * 176 Weak Mutation 1277: gnu.trove.list.array.TFloatArrayList.fill(F)V:810 - DeleteStatement: fill([FIIF)V
   * 177 Weak Mutation 1274: gnu.trove.list.array.TFloatArrayList.fill(F)V:810 - InsertUnaryOp -1
   * 178 Weak Mutation 1275: gnu.trove.list.array.TFloatArrayList.fill(F)V:810 - DeleteField: _posI
   * 179 Weak Mutation 1272: gnu.trove.list.array.TFloatArrayList.fill(F)V:810 - InsertUnaryOp Negation
   * 180 Weak Mutation 1273: gnu.trove.list.array.TFloatArrayList.fill(F)V:810 - InsertUnaryOp +1
   * 181 Weak Mutation 1495: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - ReplaceComparisonOperator <= -> <
   * 182 Weak Mutation 1492: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - InsertUnaryOp IINC -1 i
   * 183 Weak Mutation 1493: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - ReplaceVariable i -> offset
   * 184 Weak Mutation 1490: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - InsertUnaryOp Negation of i
   * 185 Weak Mutation 1491: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - InsertUnaryOp IINC 1 i
   * 186 Weak Mutation 1488: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - InsertUnaryOp IINC -1 offset
   * 187 Weak Mutation 1489: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - ReplaceVariable i -> offset
   * 188 Weak Mutation 1502: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - InsertUnaryOp Negation of value
   * 189 Weak Mutation 1503: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - DeleteStatement: floatSub(FF)I
   * 190 Weak Mutation 1500: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - InsertUnaryOp IINC 1 i
   * 191 Weak Mutation 1501: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - InsertUnaryOp IINC -1 i
   * 192 Weak Mutation 1498: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - ReplaceVariable i -> offset
   * 193 Weak Mutation 1499: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - InsertUnaryOp Negation of i
   * 194 Weak Mutation 1496: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - ReplaceComparisonOperator <= -> -1
   * 195 Weak Mutation 1497: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - DeleteField: _data[F
   * 196 Weak Mutation 1487: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - InsertUnaryOp IINC 1 offset
   * 197 Weak Mutation 1486: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:887 - InsertUnaryOp Negation of offset
   * 198 Weak Mutation 1485: gnu.trove.list.array.TFloatArrayList.lastIndexOf(F)I:881 - DeleteStatement: lastIndexOf(IF)I
   * 199 Weak Mutation 1484: gnu.trove.list.array.TFloatArrayList.lastIndexOf(F)I:881 - InsertUnaryOp Negation of value
   * 200 Weak Mutation 1483: gnu.trove.list.array.TFloatArrayList.lastIndexOf(F)I:881 - DeleteField: _posI
   * 201 Weak Mutation 1482: gnu.trove.list.array.TFloatArrayList.lastIndexOf(F)I:881 - InsertUnaryOp -1
   * 202 Weak Mutation 1481: gnu.trove.list.array.TFloatArrayList.lastIndexOf(F)I:881 - InsertUnaryOp +1
   * 203 Weak Mutation 1480: gnu.trove.list.array.TFloatArrayList.lastIndexOf(F)I:881 - InsertUnaryOp Negation
   * 204 Weak Mutation 1520: gnu.trove.list.array.TFloatArrayList.contains(F)Z:898 - ReplaceConstant - 0 -> 1
   * 205 Weak Mutation 1509: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:889 - InsertUnaryOp IINC 1 i
   * 206 Weak Mutation 1508: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:889 - InsertUnaryOp Negation of i
   * 207 Weak Mutation 1511: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:892 - ReplaceConstant - -1 -> 0
   * 208 Weak Mutation 1510: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:889 - InsertUnaryOp IINC -1 i
   * 209 Weak Mutation 1505: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - ReplaceComparisonOperator != -> >
   * 210 Weak Mutation 1507: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:889 - ReplaceVariable i -> offset
   * 211 Weak Mutation 1506: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:888 - ReplaceComparisonOperator != -> -1
   * 212 Weak Mutation 1517: gnu.trove.list.array.TFloatArrayList.contains(F)Z:898 - ReplaceComparisonOperator < -> <=
   * 213 Weak Mutation 1519: gnu.trove.list.array.TFloatArrayList.contains(F)Z:898 - ReplaceConstant - 1 -> 0
   * 214 Weak Mutation 1518: gnu.trove.list.array.TFloatArrayList.contains(F)Z:898 - ReplaceComparisonOperator < -> -2
   * 215 Weak Mutation 1513: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:892 - ReplaceConstant - -1 -> -2
   * 216 Weak Mutation 1512: gnu.trove.list.array.TFloatArrayList.lastIndexOf(IF)I:892 - ReplaceConstant - -1 -> 1
   * 217 Weak Mutation 1515: gnu.trove.list.array.TFloatArrayList.contains(F)Z:898 - DeleteStatement: lastIndexOf(F)I
   * 218 Weak Mutation 1514: gnu.trove.list.array.TFloatArrayList.contains(F)Z:898 - InsertUnaryOp Negation of value
   * 219 Weak Mutation 1771: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:995 - ReplaceConstant - -1 -> 1
   * 220 Weak Mutation 1770: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:995 - ReplaceConstant - -1 -> 0
   * 221 Weak Mutation 1769: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:988 - ReplaceConstant - 0 -> 1
   * 222 Weak Mutation 1775: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:999 - InsertUnaryOp IINC 1 index
   * 223 Weak Mutation 1774: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:999 - InsertUnaryOp Negation of index
   * 224 Weak Mutation 1773: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:999 - ReplaceVariable index -> lastRet
   * 225 Weak Mutation 1772: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:995 - ReplaceConstant - -1 -> -2
   * 226 Weak Mutation 1778: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - InsertUnaryOp Negation
   * 227 Weak Mutation 1779: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - InsertUnaryOp +1
   * 228 Weak Mutation 1776: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.<init>(Lgnu/trove/list/array/TFloatArrayList;I)V:999 - InsertUnaryOp IINC -1 index
   * 229 Weak Mutation 1777: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - ReplaceVariable cursor -> lastRet
   * 230 Weak Mutation 1782: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - DeleteField: this$0Lgnu/trove/list/array/TFloatArrayList;
   * 231 Weak Mutation 1783: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - DeleteStatement: size()I
   * 232 Weak Mutation 1780: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - InsertUnaryOp -1
   * 233 Weak Mutation 1781: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - DeleteField: cursorI
   * 234 Weak Mutation 1786: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - ReplaceComparisonOperator >= -> -1
   * 235 Weak Mutation 1787: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - ReplaceConstant - 1 -> 0
   * 236 Weak Mutation 1785: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - ReplaceComparisonOperator >= -> >
   * 237 Weak Mutation 1790: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1012 - ReplaceVariable cursor -> lastRet
   * 238 Weak Mutation 1791: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1012 - InsertUnaryOp Negation
   * 239 Weak Mutation 1788: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.hasNext()Z:1005 - ReplaceConstant - 0 -> 1
   * 240 Weak Mutation 1789: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1012 - DeleteField: this$0Lgnu/trove/list/array/TFloatArrayList;
   * 241 Weak Mutation 1848: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1030 - ReplaceConstant - -1 -> -2
   * 242 Weak Mutation 1845: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - ReplaceArithmeticOperator - -> *
   * 243 Weak Mutation 1844: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - ReplaceArithmeticOperator - -> /
   * 244 Weak Mutation 1847: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1030 - ReplaceConstant - -1 -> 1
   * 245 Weak Mutation 1846: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1030 - ReplaceConstant - -1 -> 0
   * 246 Weak Mutation 1841: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - ReplaceConstant - 1 -> 0
   * 247 Weak Mutation 1840: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - DeleteField: cursorI
   * 248 Weak Mutation 1842: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - ReplaceArithmeticOperator - -> +
   * 249 Weak Mutation 1836: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - ReplaceVariable cursor -> lastRet
   * 250 Weak Mutation 1837: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - InsertUnaryOp Negation
   * 251 Weak Mutation 1838: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - InsertUnaryOp +1
   * 252 Weak Mutation 1839: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - InsertUnaryOp -1
   * 253 Weak Mutation 1832: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - DeleteField: cursorI
   * 254 Weak Mutation 1835: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - ReplaceComparisonOperator >= -> -1
   * 255 Weak Mutation 1828: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - ReplaceVariable cursor -> lastRet
   * 256 Weak Mutation 1829: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - InsertUnaryOp Negation
   * 257 Weak Mutation 1830: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - InsertUnaryOp +1
   * 258 Weak Mutation 1831: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - InsertUnaryOp -1
   * 259 Weak Mutation 1824: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - InsertUnaryOp Negation
   * 260 Weak Mutation 1825: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - InsertUnaryOp +1
   * 261 Weak Mutation 1826: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - InsertUnaryOp -1
   * 262 Weak Mutation 1823: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1027 - DeleteStatement: remove(II)V
   * 263 Weak Mutation 1822: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1027 - ReplaceConstant - 1 -> 0
   * 264 Weak Mutation 1820: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1027 - InsertUnaryOp -1
   * 265 Weak Mutation 1819: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1027 - InsertUnaryOp +1
   * 266 Weak Mutation 1818: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1027 - InsertUnaryOp Negation
   * 267 Weak Mutation 1817: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1027 - DeleteField: this$0Lgnu/trove/list/array/TFloatArrayList;
   * 268 Weak Mutation 1815: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - ReplaceComparisonOperator != -> <
   * 269 Weak Mutation 1813: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - ReplaceConstant - -1 -> -2
   * 270 Weak Mutation 1812: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - ReplaceConstant - -1 -> 1
   * 271 Weak Mutation 1811: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - ReplaceConstant - -1 -> 0
   * 272 Weak Mutation 1809: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - InsertUnaryOp -1
   * 273 Weak Mutation 1808: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - InsertUnaryOp +1
   * 274 Weak Mutation 1806: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1014 - InsertUnaryOp Negation of next
   * 275 Weak Mutation 1807: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - InsertUnaryOp Negation
   * 276 Weak Mutation 1804: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - ReplaceArithmeticOperator + -> /
   * 277 Weak Mutation 1805: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - ReplaceArithmeticOperator + -> *
   * 278 Weak Mutation 1802: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - ReplaceArithmeticOperator + -> -
   * 279 Weak Mutation 1803: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - ReplaceArithmeticOperator + -> %
   * 280 Weak Mutation 1800: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - DeleteField: cursorI
   * 281 Weak Mutation 1801: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - ReplaceConstant - 1 -> 0
   * 282 Weak Mutation 1798: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - InsertUnaryOp +1
   * 283 Weak Mutation 1799: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - InsertUnaryOp -1
   * 284 Weak Mutation 1796: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - ReplaceVariable cursor -> lastRet
   * 285 Weak Mutation 1797: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1013 - InsertUnaryOp Negation
   * 286 Weak Mutation 1794: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1012 - DeleteField: cursorI
   * 287 Weak Mutation 1795: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1012 - DeleteStatement: get(I)F
   * 288 Weak Mutation 1792: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1012 - InsertUnaryOp +1
   * 289 Weak Mutation 1793: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.next()F:1012 - InsertUnaryOp -1
   * 290 Weak Mutation 563: gnu.trove.list.array.TFloatArrayList.remove(II)V:412 - ReplaceComparisonOperator != -> -1
   * 291 Weak Mutation 728: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:541 - DeleteStatement: remove()V
   * 292 Weak Mutation 729: gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z:542 - ReplaceConstant - 1 -> 0
   * 293 Weak Mutation 1270: gnu.trove.list.array.TFloatArrayList.fill(F)V:810 - DeleteField: _data[F
   * 294 Weak Mutation 1271: gnu.trove.list.array.TFloatArrayList.fill(F)V:810 - ReplaceConstant - 0 -> 1
   * 295 Weak Mutation 1276: gnu.trove.list.array.TFloatArrayList.fill(F)V:810 - InsertUnaryOp Negation of val
   * 296 Weak Mutation 1277: gnu.trove.list.array.TFloatArrayList.fill(F)V:810 - DeleteStatement: fill([FIIF)V
   * 297 Weak Mutation 1274: gnu.trove.list.array.TFloatArrayList.fill(F)V:810 - InsertUnaryOp -1
   * 298 Weak Mutation 1275: gnu.trove.list.array.TFloatArrayList.fill(F)V:810 - DeleteField: _posI
   * 299 Weak Mutation 1272: gnu.trove.list.array.TFloatArrayList.fill(F)V:810 - InsertUnaryOp Negation
   * 300 Weak Mutation 1273: gnu.trove.list.array.TFloatArrayList.fill(F)V:810 - InsertUnaryOp +1
   * 301 Weak Mutation 1843: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1029 - ReplaceArithmeticOperator - -> %
   * 302 Weak Mutation 1827: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1028 - DeleteField: lastRetI
   * 303 Weak Mutation 1821: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1027 - DeleteField: lastRetI
   * 304 Weak Mutation 1810: gnu.trove.list.array.TFloatArrayList$TFloatArrayIterator.remove()V:1023 - DeleteField: lastRetI
   * 305 gnu.trove.list.array.TFloatArrayList.fill(F)V: root-Branch
   * 306 gnu.trove.list.array.TFloatArrayList.remove(II)V: I45 Branch 20 IF_ICMPNE L412 - false
   * 307 gnu.trove.list.array.TFloatArrayList.retainAll(Lgnu/trove/TFloatCollection;)Z: I29 Branch 39 IFNE L540 - false
   * 308 gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z: I37 Branch 47 IFEQ L590 - true
   */

  @Test
  public void test113()  throws Throwable  {
      float[] floatArray0 = new float[12];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
      assertNotNull(tFloatArrayList0);
      
      TFloatArrayList tFloatArrayList1 = TFloatArrayList.wrap(floatArray0, 0.0F);
      tFloatArrayList1.fill(597.4638F);
      floatArray0[3] = 0.0F;
      tFloatArrayList1.removeAll((TFloatCollection) tFloatArrayList0);
      boolean boolean0 = tFloatArrayList0.retainAll((TFloatCollection) tFloatArrayList1);
      assertEquals(1, tFloatArrayList1.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 114
  /*
   * 115 covered goals:
   * 1 Weak Mutation 1714: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1043 - DeleteField: _posI
   * 2 Weak Mutation 8: gnu.trove.list.array.TFloatArrayList.<init>(IF)V:91 - InsertUnaryOp Negation of capacity
   * 3 Weak Mutation 9: gnu.trove.list.array.TFloatArrayList.<init>(IF)V:91 - InsertUnaryOp IINC 1 capacity
   * 4 Weak Mutation 10: gnu.trove.list.array.TFloatArrayList.<init>(IF)V:91 - InsertUnaryOp IINC -1 capacity
   * 5 Weak Mutation 11: gnu.trove.list.array.TFloatArrayList.<init>(IF)V:92 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 12: gnu.trove.list.array.TFloatArrayList.<init>(IF)V:93 - InsertUnaryOp Negation of no_entry_value
   * 7 Weak Mutation 14: gnu.trove.list.array.TFloatArrayList.<init>([F)V:119 - DeleteStatement: add([F)V
   * 8 Weak Mutation 29: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:184 - InsertUnaryOp IINC 1 capacity
   * 9 Weak Mutation 28: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:184 - InsertUnaryOp Negation of capacity
   * 10 Weak Mutation 31: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:184 - DeleteField: _data[F
   * 11 Weak Mutation 30: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:184 - InsertUnaryOp IINC -1 capacity
   * 12 Weak Mutation 33: gnu.trove.list.array.TFloatArrayList.ensureCapacity(I)V:184 - ReplaceComparisonOperator <= -> <
   * 13 Weak Mutation 95: gnu.trove.list.array.TFloatArrayList.add([F)V:229 - ReplaceConstant - 0 -> 1
   * 14 Weak Mutation 102: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - InsertUnaryOp Negation of length
   * 15 Weak Mutation 103: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - InsertUnaryOp IINC 1 length
   * 16 Weak Mutation 101: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - ReplaceVariable length -> offset
   * 17 Weak Mutation 98: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - InsertUnaryOp +1
   * 18 Weak Mutation 99: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - InsertUnaryOp -1
   * 19 Weak Mutation 96: gnu.trove.list.array.TFloatArrayList.add([F)V:229 - DeleteStatement: add([FII)V
   * 20 Weak Mutation 97: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - InsertUnaryOp Negation
   * 21 Weak Mutation 110: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - ReplaceVariable offset -> length
   * 22 Weak Mutation 111: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - InsertUnaryOp Negation of offset
   * 23 Weak Mutation 108: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - ReplaceArithmeticOperator + -> *
   * 24 Weak Mutation 109: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - DeleteStatement: ensureCapacity(I)V
   * 25 Weak Mutation 106: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - ReplaceArithmeticOperator + -> %
   * 26 Weak Mutation 107: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - ReplaceArithmeticOperator + -> /
   * 27 Weak Mutation 104: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - InsertUnaryOp IINC -1 length
   * 28 Weak Mutation 105: gnu.trove.list.array.TFloatArrayList.add([FII)V:235 - ReplaceArithmeticOperator + -> -
   * 29 Weak Mutation 119: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - ReplaceVariable length -> offset
   * 30 Weak Mutation 117: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - InsertUnaryOp -1
   * 31 Weak Mutation 116: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - InsertUnaryOp +1
   * 32 Weak Mutation 115: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - InsertUnaryOp Negation
   * 33 Weak Mutation 114: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - DeleteField: _data[F
   * 34 Weak Mutation 113: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - InsertUnaryOp IINC -1 offset
   * 35 Weak Mutation 112: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - InsertUnaryOp IINC 1 offset
   * 36 Weak Mutation 126: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - InsertUnaryOp -1
   * 37 Weak Mutation 125: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - InsertUnaryOp +1
   * 38 Weak Mutation 124: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - InsertUnaryOp Negation
   * 39 Weak Mutation 123: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 40 Weak Mutation 122: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - InsertUnaryOp IINC -1 length
   * 41 Weak Mutation 121: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - InsertUnaryOp IINC 1 length
   * 42 Weak Mutation 120: gnu.trove.list.array.TFloatArrayList.add([FII)V:236 - InsertUnaryOp Negation of length
   * 43 Weak Mutation 129: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - InsertUnaryOp Negation of length
   * 44 Weak Mutation 128: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - ReplaceVariable length -> offset
   * 45 Weak Mutation 131: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - InsertUnaryOp IINC -1 length
   * 46 Weak Mutation 130: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - InsertUnaryOp IINC 1 length
   * 47 Weak Mutation 133: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - ReplaceArithmeticOperator + -> %
   * 48 Weak Mutation 132: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - ReplaceArithmeticOperator + -> -
   * 49 Weak Mutation 135: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - ReplaceArithmeticOperator + -> *
   * 50 Weak Mutation 134: gnu.trove.list.array.TFloatArrayList.add([FII)V:237 - ReplaceArithmeticOperator + -> /
   * 51 Weak Mutation 1729: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - ReplaceVariable len -> i
   * 52 Weak Mutation 1728: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - InsertUnaryOp IINC -1 i
   * 53 Weak Mutation 1731: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - InsertUnaryOp IINC 1 len
   * 54 Weak Mutation 1730: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - InsertUnaryOp Negation of len
   * 55 Weak Mutation 1732: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - InsertUnaryOp IINC -1 len
   * 56 Weak Mutation 1735: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - ReplaceComparisonOperator >= -> -1
   * 57 Weak Mutation 1734: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - ReplaceComparisonOperator >= -> >
   * 58 Weak Mutation 1737: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1052 - ReplaceVariable i -> len
   * 59 Weak Mutation 1736: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1052 - DeleteField: _data[F
   * 60 Weak Mutation 1739: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1052 - InsertUnaryOp IINC 1 i
   * 61 Weak Mutation 1738: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1052 - InsertUnaryOp Negation of i
   * 62 Weak Mutation 1741: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1052 - DeleteStatement: writeFloat(F)V
   * 63 Weak Mutation 1740: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1052 - InsertUnaryOp IINC -1 i
   * 64 Weak Mutation 1742: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - ReplaceVariable i -> len
   * 65 Weak Mutation 1711: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1043 - InsertUnaryOp Negation
   * 66 Weak Mutation 1710: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1040 - DeleteStatement: writeByte(I)V
   * 67 Weak Mutation 1709: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1040 - ReplaceConstant - 0 -> 1
   * 68 Weak Mutation 1718: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1046 - DeleteStatement: writeFloat(F)V
   * 69 Weak Mutation 1719: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1049 - DeleteField: _data[F
   * 70 Weak Mutation 1716: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1046 - InsertUnaryOp Negation
   * 71 Weak Mutation 1715: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1043 - DeleteStatement: writeInt(I)V
   * 72 Weak Mutation 1712: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1043 - InsertUnaryOp +1
   * 73 Weak Mutation 1713: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1043 - InsertUnaryOp -1
   * 74 Weak Mutation 1726: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - InsertUnaryOp Negation of i
   * 75 Weak Mutation 1727: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - InsertUnaryOp IINC 1 i
   * 76 Weak Mutation 1724: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - ReplaceConstant - 0 -> 1
   * 77 Weak Mutation 1725: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - ReplaceVariable i -> len
   * 78 Weak Mutation 1722: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1050 - InsertUnaryOp IINC -1 len
   * 79 Weak Mutation 1723: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1050 - DeleteStatement: writeInt(I)V
   * 80 Weak Mutation 1720: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1050 - InsertUnaryOp Negation of len
   * 81 Weak Mutation 1721: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1050 - InsertUnaryOp IINC 1 len
   * 82 Weak Mutation 1729: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - ReplaceVariable len -> i
   * 83 Weak Mutation 1728: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - InsertUnaryOp IINC -1 i
   * 84 Weak Mutation 1731: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - InsertUnaryOp IINC 1 len
   * 85 Weak Mutation 1730: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - InsertUnaryOp Negation of len
   * 86 Weak Mutation 1732: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - InsertUnaryOp IINC -1 len
   * 87 Weak Mutation 1735: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - ReplaceComparisonOperator >= -> -1
   * 88 Weak Mutation 1734: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - ReplaceComparisonOperator >= -> >
   * 89 Weak Mutation 1737: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1052 - ReplaceVariable i -> len
   * 90 Weak Mutation 1736: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1052 - DeleteField: _data[F
   * 91 Weak Mutation 1739: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1052 - InsertUnaryOp IINC 1 i
   * 92 Weak Mutation 1738: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1052 - InsertUnaryOp Negation of i
   * 93 Weak Mutation 1741: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1052 - DeleteStatement: writeFloat(F)V
   * 94 Weak Mutation 1740: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1052 - InsertUnaryOp IINC -1 i
   * 95 Weak Mutation 1742: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - ReplaceVariable i -> len
   * 96 Weak Mutation 1711: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1043 - InsertUnaryOp Negation
   * 97 Weak Mutation 1710: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1040 - DeleteStatement: writeByte(I)V
   * 98 Weak Mutation 1709: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1040 - ReplaceConstant - 0 -> 1
   * 99 Weak Mutation 1718: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1046 - DeleteStatement: writeFloat(F)V
   * 100 Weak Mutation 1719: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1049 - DeleteField: _data[F
   * 101 Weak Mutation 1716: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1046 - InsertUnaryOp Negation
   * 102 Weak Mutation 1714: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1043 - DeleteField: _posI
   * 103 Weak Mutation 1715: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1043 - DeleteStatement: writeInt(I)V
   * 104 Weak Mutation 1712: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1043 - InsertUnaryOp +1
   * 105 Weak Mutation 1713: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1043 - InsertUnaryOp -1
   * 106 Weak Mutation 1726: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - InsertUnaryOp Negation of i
   * 107 Weak Mutation 1727: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - InsertUnaryOp IINC 1 i
   * 108 Weak Mutation 1724: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - ReplaceConstant - 0 -> 1
   * 109 Weak Mutation 1725: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1051 - ReplaceVariable i -> len
   * 110 Weak Mutation 1722: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1050 - InsertUnaryOp IINC -1 len
   * 111 Weak Mutation 1723: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1050 - DeleteStatement: writeInt(I)V
   * 112 Weak Mutation 1720: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1050 - InsertUnaryOp Negation of len
   * 113 Weak Mutation 1721: gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V:1050 - InsertUnaryOp IINC 1 len
   * 114 gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V: I35 Branch 100 IF_ICMPGE L1051 - true
   * 115 gnu.trove.list.array.TFloatArrayList.writeExternal(Ljava/io/ObjectOutput;)V: I35 Branch 100 IF_ICMPGE L1051 - false
   */

//   @Test
//   public void test114()  throws Throwable  {
//       float[] floatArray0 = new float[7];
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
//       ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(809);
//       DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) byteArrayOutputStream0);
//       ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) dataOutputStream0);
//       tFloatArrayList0.writeExternal((ObjectOutput) objectOutputStream0);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(7, tFloatArrayList0.size());
//   }

  //Test case number: 115
  /*
   * 18 covered goals:
   * 1 gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z: I4 Branch 45 IF_ACMPNE L582 - true
   * 2 Weak Mutation 15: gnu.trove.list.array.TFloatArrayList.<init>([FFZ)V:123 - InsertUnaryOp Negation of wrap
   * 3 Weak Mutation 16: gnu.trove.list.array.TFloatArrayList.<init>([FFZ)V:123 - ReplaceComparisonOperator != -> ==
   * 4 Weak Mutation 18: gnu.trove.list.array.TFloatArrayList.<init>([FFZ)V:126 - ReplaceComparisonOperator != null -> = null
   * 5 Weak Mutation 21: gnu.trove.list.array.TFloatArrayList.wrap([F)Lgnu/trove/list/array/TFloatArrayList;:144 - ReplaceConstant - 0.0 -> 1.0
   * 6 Weak Mutation 20: gnu.trove.list.array.TFloatArrayList.<init>([FFZ)V:131 - InsertUnaryOp Negation of no_entry_value
   * 7 Weak Mutation 23: gnu.trove.list.array.TFloatArrayList.wrap([F)Lgnu/trove/list/array/TFloatArrayList;:144 - DeleteStatement: wrap([FF)Lgnu/trove/list/array/TFloatArrayList;
   * 8 Weak Mutation 22: gnu.trove.list.array.TFloatArrayList.wrap([F)Lgnu/trove/list/array/TFloatArrayList;:144 - ReplaceConstant - 0.0 -> -1.0
   * 9 Weak Mutation 25: gnu.trove.list.array.TFloatArrayList.wrap([FF)Lgnu/trove/list/array/TFloatArrayList;:158 - ReplaceConstant - 1 -> 0
   * 10 Weak Mutation 24: gnu.trove.list.array.TFloatArrayList.wrap([FF)Lgnu/trove/list/array/TFloatArrayList;:158 - InsertUnaryOp Negation of no_entry_value
   * 11 Weak Mutation 789: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:594 - InsertUnaryOp IINC -1 changed
   * 12 Weak Mutation 788: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:594 - InsertUnaryOp IINC 1 changed
   * 13 Weak Mutation 787: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:594 - InsertUnaryOp Negation of changed
   * 14 Weak Mutation 775: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:582 - ReplaceComparisonOperator != -> ==
   * 15 Weak Mutation 780: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:588 - DeleteStatement: hasNext()Z
   * 16 Weak Mutation 781: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:588 - ReplaceComparisonOperator == -> !=
   * 17 Weak Mutation 778: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:586 - ReplaceConstant - 0 -> 1
   * 18 Weak Mutation 779: gnu.trove.list.array.TFloatArrayList.removeAll(Lgnu/trove/TFloatCollection;)Z:587 - DeleteStatement: iterator()Lgnu/trove/iterator/TFloatIterator;
   */

//   @Test
//   public void test115()  throws Throwable  {
//       float[] floatArray0 = new float[8];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
//       assertNotNull(tFloatArrayList0);
//       
//       TFloatHashSet tFloatHashSet0 = new TFloatHashSet(226);
//       TSynchronizedFloatSet tSynchronizedFloatSet0 = new TSynchronizedFloatSet((TFloatSet) tFloatHashSet0);
//       boolean boolean0 = tFloatArrayList0.removeAll((TFloatCollection) tSynchronizedFloatSet0);
//       assertEquals(0.0F, tFloatArrayList0.getNoEntryValue(), 0.01F);
//       assertEquals(false, boolean0);
//   }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TLongFunction;
import gnu.trove.impl.sync.TSynchronizedFloatLongMap;
import gnu.trove.impl.sync.TSynchronizedFloatSet;
import gnu.trove.impl.sync.TSynchronizedLongCollection;
import gnu.trove.map.TFloatLongMap;
import gnu.trove.map.hash.TFloatLongHashMap;
import gnu.trove.procedure.TFloatLongProcedure;
import gnu.trove.procedure.TFloatProcedure;
import gnu.trove.procedure.TLongProcedure;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedFloatLongMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.containsKey(F)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedFloatLongMap.<init>(Lgnu/trove/map/TFloatLongMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      float[] floatArray0 = new float[9];
      long[] longArray0 = new long[4];
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(floatArray0, longArray0);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0, (Object) "");
      boolean boolean0 = tSynchronizedFloatLongMap0.containsKey((float) 0);
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.values([J)[J: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedFloatLongMap.values()[J: root-Branch
   * 3 gnu.trove.impl.sync.TSynchronizedFloatLongMap.<init>(Lgnu/trove/map/TFloatLongMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test1()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      long[] longArray0 = tSynchronizedFloatLongMap0.values();
      long[] longArray1 = tSynchronizedFloatLongMap0.values(longArray0);
      assertSame(longArray1, longArray0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.putIfAbsent(FJ)J: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(1233, 1233);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      tSynchronizedFloatLongMap0.putIfAbsent((float) 1233, (long) 1233);
      assertEquals(false, tFloatLongHashMap0.isEmpty());
      assertEquals("{1233.0=1233}", tFloatLongHashMap0.toString());
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.increment(F)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      boolean boolean0 = tSynchronizedFloatLongMap0.increment((-1218.4153F));
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.retainEntries(Lgnu/trove/procedure/TFloatLongProcedure;)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(20);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      boolean boolean0 = tSynchronizedFloatLongMap0.retainEntries((TFloatLongProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.putAll(Lgnu/trove/map/TFloatLongMap;)V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      tSynchronizedFloatLongMap0.putAll((TFloatLongMap) tFloatLongHashMap0);
      assertEquals(23, tFloatLongHashMap0.capacity());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(20);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      boolean boolean0 = tSynchronizedFloatLongMap0.forEachValue((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.clear()V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      tSynchronizedFloatLongMap0.clear();
      assertEquals(0, tSynchronizedFloatLongMap0.size());
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.size()I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedFloatLongMap.iterator()Lgnu/trove/iterator/TFloatLongIterator;: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(105, 105);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      TFloatLongHashMap tFloatLongHashMap1 = new TFloatLongHashMap((TFloatLongMap) tSynchronizedFloatLongMap0);
      assertEquals(true, tFloatLongHashMap1.isEmpty());
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.keys([F)[F: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(1233, 1233);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      float[] floatArray0 = tSynchronizedFloatLongMap0.keys(tFloatLongHashMap0._set);
      assertNotNull(floatArray0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.transformValues(Lgnu/trove/function/TLongFunction;)V: root-Branch
   */

//   @Test
//   public void test10()  throws Throwable  {
//       TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(0, 0, 0, 0);
//       TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
//       tSynchronizedFloatLongMap0.transformValues((TLongFunction) null);
//       assertEquals(0.0F, tSynchronizedFloatLongMap0.getNoEntryKey(), 0.01F);
//   }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.adjustOrPutValue(FJJ)J: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      long long0 = tSynchronizedFloatLongMap0.adjustOrPutValue((-1218.4153F), 8L, 8L);
      assertEquals(false, tFloatLongHashMap0.isEmpty());
      assertEquals(8L, long0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.containsValue(J)Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(1233, 1233);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      boolean boolean0 = tSynchronizedFloatLongMap0.containsValue((long) 1233);
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.getNoEntryKey()F: root-Branch
   */

//   @Test
//   public void test13()  throws Throwable  {
//       TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
//       TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
//       float float0 = tSynchronizedFloatLongMap0.getNoEntryKey();
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.remove(F)J: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(20);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      long long0 = tSynchronizedFloatLongMap0.remove((float) 20);
      assertEquals(0L, long0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      float[] floatArray0 = new float[9];
      long[] longArray0 = new long[4];
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(floatArray0, longArray0);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0, (Object) "");
      // Undeclared exception!
      try {
        tSynchronizedFloatLongMap0.putAll((Map<? extends Float, ? extends Long>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      float[] floatArray0 = new float[9];
      long[] longArray0 = new long[4];
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(floatArray0, longArray0);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0, (Object) "");
      boolean boolean0 = tSynchronizedFloatLongMap0.isEmpty();
      assertEquals(false, boolean0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      float[] floatArray0 = new float[9];
      long[] longArray0 = new long[4];
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(floatArray0, longArray0);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0, (Object) "");
      boolean boolean0 = tSynchronizedFloatLongMap0.equals((Object) 0);
      assertEquals(false, boolean0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(105, 105);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      boolean boolean0 = tSynchronizedFloatLongMap0.forEachKey((TFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.adjustValue(FJ)Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      boolean boolean0 = tSynchronizedFloatLongMap0.adjustValue((-1218.4153F), 8L);
      assertEquals(false, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.hashCode()I: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      int int0 = tSynchronizedFloatLongMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 21
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.keys()[F: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedFloatLongMap.<init>(Lgnu/trove/map/TFloatLongMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      float[] floatArray0 = new float[9];
      long[] longArray0 = new long[4];
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(floatArray0, longArray0);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0, (Object) "");
      float[] floatArray1 = tSynchronizedFloatLongMap0.keys();
      assertNotSame(floatArray0, floatArray1);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.forEachEntry(Lgnu/trove/procedure/TFloatLongProcedure;)Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      boolean boolean0 = tSynchronizedFloatLongMap0.forEachEntry((TFloatLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      String string0 = tSynchronizedFloatLongMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.get(F)J: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      long long0 = tSynchronizedFloatLongMap0.get((float) 0L);
      assertEquals(0L, long0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.put(FJ)J: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      tSynchronizedFloatLongMap0.put((float) 0L, 0L);
      assertEquals(false, tFloatLongHashMap0.isEmpty());
      assertEquals("{0.0=0}", tFloatLongHashMap0.toString());
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.getNoEntryValue()J: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(20);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      long long0 = tSynchronizedFloatLongMap0.getNoEntryValue();
      assertEquals(0L, long0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.<init>(Lgnu/trove/map/TFloatLongMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = null;
      try {
        tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.keySet()Lgnu/trove/set/TFloatSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedFloatLongMap.keySet()Lgnu/trove/set/TFloatSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(0, 0);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      TSynchronizedFloatSet tSynchronizedFloatSet0 = (TSynchronizedFloatSet)tSynchronizedFloatLongMap0.keySet();
      assertNotNull(tSynchronizedFloatSet0);
      
      TSynchronizedFloatSet tSynchronizedFloatSet1 = (TSynchronizedFloatSet)tSynchronizedFloatLongMap0.keySet();
      assertSame(tSynchronizedFloatSet1, tSynchronizedFloatSet0);
  }

  //Test case number: 29
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatLongMap.valueCollection()Lgnu/trove/TLongCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 gnu.trove.impl.sync.TSynchronizedFloatLongMap.valueCollection()Lgnu/trove/TLongCollection;: I11 Branch 3 IFNONNULL L121 - false
   * 3 gnu.trove.impl.sync.TSynchronizedFloatLongMap.<init>(Lgnu/trove/map/TFloatLongMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test29()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      TSynchronizedLongCollection tSynchronizedLongCollection0 = (TSynchronizedLongCollection)tSynchronizedFloatLongMap0.valueCollection();
      assertNotNull(tSynchronizedLongCollection0);
      
      TSynchronizedLongCollection tSynchronizedLongCollection1 = (TSynchronizedLongCollection)tSynchronizedFloatLongMap0.valueCollection();
      assertSame(tSynchronizedLongCollection1, tSynchronizedLongCollection0);
  }
}

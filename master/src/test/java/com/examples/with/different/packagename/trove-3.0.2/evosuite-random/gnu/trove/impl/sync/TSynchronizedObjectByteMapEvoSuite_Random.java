/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedObjectByteMap;
import gnu.trove.map.TObjectByteMap;
import gnu.trove.map.custom_hash.TObjectByteCustomHashMap;
import gnu.trove.map.hash.TObjectByteHashMap;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.ByteArrayOutputStream;
import java.io.DataInput;
import java.io.DataInputStream;
import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.NoSuchElementException;
import java.util.StringTokenizer;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedObjectByteMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>();
      TSynchronizedObjectByteMap<Integer> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Integer>((TObjectByteMap<Integer>) tObjectByteCustomHashMap0);
      tSynchronizedObjectByteMap0.values();
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      DataInput dataInput0 = null;
      // Undeclared exception!
      try {
        DataInputStream.readUTF(dataInput0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = 486;
      float float0 = 984.85376F;
      byte byte0 = (byte)99;
      TObjectByteMap<Integer> tObjectByteMap0 = null;
      TSynchronizedObjectByteMap<Integer> tSynchronizedObjectByteMap0 = null;
      try {
        tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Integer>(tObjectByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TObjectByteMap<Object> tObjectByteMap0 = null;
      byte byte0 = (byte)0;
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int0 = 0;
      float float0 = 183.35965F;
      String string0 = "";
      String string1 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string1, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://?#
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = (-917);
      TObjectByteHashMap<Byte> tObjectByteHashMap0 = new TObjectByteHashMap<Byte>(int0, int0);
      String string0 = "begin index can not be < 0";
      TObjectByteMap<Object> tObjectByteMap0 = null;
      TSynchronizedObjectByteMap<Object> tSynchronizedObjectByteMap0 = null;
      try {
        tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Object>(tObjectByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectByteMap<Integer> tObjectByteMap0 = null;
      String string0 = ". This can manifest itself as an apparent duplicate key.";
      TObjectByteHashMap<Object> tObjectByteHashMap0 = null;
      try {
        tObjectByteHashMap0 = new TObjectByteHashMap<Object>(tObjectByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      String string0 = "";
      String string1 = "\nequals() of a or b object are asymmetric";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string1, string1, string1);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: ://
         // equals() of a or b object are asymmetric%0Aequals()%20of%20a%20or%20b%20object%20are%20asymmetric#%0Aequals()%20of%20a%20or%20b%20object%20are%20asymmetric
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int0 = 1;
      TObjectByteCustomHashMap<String> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, int0);
      TSynchronizedObjectByteMap<String> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<String>((TObjectByteMap<String>) tObjectByteCustomHashMap0);
      assertEquals("{}", tSynchronizedObjectByteMap0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      TObjectByteMap<Object> tObjectByteMap0 = null;
      String string0 = "A/eeOQ2[PuB/J|u*u|";
      StringTokenizer stringTokenizer0 = new StringTokenizer(string0, string0);
      // Undeclared exception!
      try {
        stringTokenizer0.nextToken();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TObjectByteHashMap<String> tObjectByteHashMap0 = new TObjectByteHashMap<String>();
      TSynchronizedObjectByteMap<String> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<String>((TObjectByteMap<String>) tObjectByteHashMap0);
      tObjectByteHashMap0.size();
      TSynchronizedObjectByteMap<String> tSynchronizedObjectByteMap1 = new TSynchronizedObjectByteMap<String>((TObjectByteMap<String>) tSynchronizedObjectByteMap0);
      String string0 = "Qgb=#f\" FI(/@>w";
      byte byte0 = (byte)65;
      tSynchronizedObjectByteMap0.putIfAbsent(string0, byte0);
      tSynchronizedObjectByteMap1.keys();
      String string1 = "";
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>();
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in fragment at index 6: Qgb=#f\" FI(/@>w:Qgb=%23f%22%20F%7FI(/@%3Ew#Qgb=%23f%22%20F%7FI(/@%3Ew
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 0;
      float float0 = 0.0F;
      byte byte0 = (byte)0;
      TObjectByteHashMap<Integer> tObjectByteHashMap0 = new TObjectByteHashMap<Integer>(int0, float0);
      TSynchronizedObjectByteMap<Integer> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Integer>((TObjectByteMap<Integer>) tObjectByteHashMap0);
      TObjectByteHashMap<String> tObjectByteHashMap1 = new TObjectByteHashMap<String>(int0, float0, byte0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      String string0 = " exceeds size ";
      tObjectByteHashMap1.adjustOrPutValue(string0, byte0, byte0);
      String string1 = "Upo\\TT>cqX]aCes";
      try {
        byteArrayOutputStream0.toString(string1);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
         //
         // Upo\\TT>cqX]aCes
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int0 = 114;
      TObjectByteCustomHashMap<String> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, int0);
      TSynchronizedObjectByteMap<String> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<String>((TObjectByteMap<String>) tObjectByteCustomHashMap0);
      String[] stringArray0 = new String[10];
      String string0 = "gnu.trove.no_entry.char";
      stringArray0[0] = string0;
      String string1 = "&x(i";
      stringArray0[1] = string1;
      String string2 = "";
      stringArray0[2] = string2;
      String string3 = "";
      stringArray0[3] = string3;
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap1 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, int0, (float) int0);
      TSynchronizedObjectByteMap<Integer> tSynchronizedObjectByteMap1 = new TSynchronizedObjectByteMap<Integer>((TObjectByteMap<Integer>) tObjectByteCustomHashMap1);
      String string4 = File.pathSeparator;
      TSynchronizedObjectByteMap<Integer> tSynchronizedObjectByteMap2 = new TSynchronizedObjectByteMap<Integer>((TObjectByteMap<Integer>) tSynchronizedObjectByteMap1, (Object) string4);
      TSynchronizedObjectByteMap<Integer> tSynchronizedObjectByteMap3 = new TSynchronizedObjectByteMap<Integer>((TObjectByteMap<Integer>) tSynchronizedObjectByteMap2);
      Locale locale0 = Locale.PRC;
      String string5 = locale0.toLanguageTag();
      tSynchronizedObjectByteMap3.containsKey((Object) string5);
      String string6 = "Hcp26z|Y7tz";
      stringArray0[4] = string6;
      String string7 = "Qw@iK2;0G";
      stringArray0[5] = string7;
      String string8 = "Z";
      stringArray0[0] = string6;
      stringArray0[1] = string8;
      stringArray0[2] = string2;
      stringArray0[3] = string7;
      stringArray0[4] = string3;
      String string9 = "dH5C)9~#VD";
      stringArray0[5] = string9;
      stringArray0[6] = string6;
      String string10 = "";
      stringArray0[7] = string10;
      stringArray0[8] = string10;
      stringArray0[9] = string5;
      stringArray0[6] = string8;
      String string11 = "+";
      stringArray0[7] = string11;
      String string12 = "(<i -:0]>/F@";
      stringArray0[8] = string12;
      String string13 = "@-UM";
      stringArray0[9] = string13;
      String[] stringArray1 = tSynchronizedObjectByteMap0.keys(stringArray0);
      assertSame(stringArray0, stringArray1);
  }

  @Test
  public void test11()  throws Throwable  {
      TObjectByteCustomHashMap<String> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<String>();
      Object object0 = null;
      tObjectByteCustomHashMap0.containsKey(object0);
      TSynchronizedObjectByteMap<String> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<String>((TObjectByteMap<String>) tObjectByteCustomHashMap0, object0);
      tSynchronizedObjectByteMap0.getNoEntryValue();
      TObjectByteMap<Object> tObjectByteMap0 = null;
      TSynchronizedObjectByteMap<Object> tSynchronizedObjectByteMap1 = new TSynchronizedObjectByteMap<Object>(tObjectByteMap0, object0);
      Locale locale0 = Locale.US;
      String string0 = locale0.getISO3Country();
      byte byte0 = (byte)1;
      // Undeclared exception!
      try {
        tSynchronizedObjectByteMap1.putIfAbsent((Object) string0, byte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TObjectByteHashMap<String> tObjectByteHashMap0 = new TObjectByteHashMap<String>();
      TSynchronizedObjectByteMap<String> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<String>((TObjectByteMap<String>) tObjectByteHashMap0);
      TSynchronizedObjectByteMap<String> tSynchronizedObjectByteMap1 = new TSynchronizedObjectByteMap<String>((TObjectByteMap<String>) tSynchronizedObjectByteMap0);
      byte byte0 = (byte)106;
      tSynchronizedObjectByteMap1.containsValue(byte0);
      TObjectByteMap<Object> tObjectByteMap0 = null;
      TSynchronizedObjectByteMap<Object> tSynchronizedObjectByteMap2 = null;
      try {
        tSynchronizedObjectByteMap2 = new TSynchronizedObjectByteMap<Object>(tObjectByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

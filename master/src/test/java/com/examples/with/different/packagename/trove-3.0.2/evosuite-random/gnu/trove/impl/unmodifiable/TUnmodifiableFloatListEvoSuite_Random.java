/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TFloatCollection;
import gnu.trove.impl.sync.TSynchronizedFloatList;
import gnu.trove.impl.sync.TSynchronizedRandomAccessFloatList;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessFloatList;
import gnu.trove.list.TFloatList;
import gnu.trove.list.array.TFloatArrayList;
import gnu.trove.list.linked.TFloatLinkedList;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Stack;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableFloatListEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      float float0 = 1602.2017F;
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(float0);
      int int0 = (-827);
      float float1 = (-1.0F);
      // Undeclared exception!
      try {
        tFloatLinkedList0.insert(int0, float1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = 64;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(int0);
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList0);
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) int0;
      int int1 = 958;
      int int2 = 0;
      tUnmodifiableFloatList0.toArray(floatArray0, int1, int2);
      int int3 = 0;
      int int4 = 759;
      // Undeclared exception!
      try {
        tUnmodifiableFloatList0.subList(int3, int4);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index < 64
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      float[] floatArray0 = new float[9];
      float float0 = 1916.3817F;
      floatArray0[0] = float0;
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(floatArray0[0]);
      TSynchronizedFloatList tSynchronizedFloatList0 = new TSynchronizedFloatList((TFloatList) tFloatLinkedList0);
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tSynchronizedFloatList0);
      int int0 = (-1961);
      int int1 = (-1017);
      // Undeclared exception!
      try {
        tUnmodifiableFloatList0.set(int0, floatArray0, int0, int1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      float float0 = 0.0F;
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(float0);
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatLinkedList0);
      int int0 = 0;
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) int0;
      floatArray0[1] = float0;
      floatArray0[2] = float0;
      floatArray0[3] = (float) int0;
      floatArray0[4] = float0;
      floatArray0[5] = float0;
      floatArray0[6] = float0;
      int int1 = 1907;
      // Undeclared exception!
      try {
        tUnmodifiableFloatList0.set(int0, floatArray0, int0, int1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 0;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(int0);
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList0);
      TUnmodifiableFloatList tUnmodifiableFloatList1 = new TUnmodifiableFloatList((TFloatList) tUnmodifiableFloatList0);
      float[] floatArray0 = tUnmodifiableFloatList1.toArray();
      assertNotNull(floatArray0);
  }

  @Test
  public void test5()  throws Throwable  {
      TFloatList tFloatList0 = null;
      TUnmodifiableFloatList tUnmodifiableFloatList0 = null;
      try {
        tUnmodifiableFloatList0 = new TUnmodifiableFloatList(tFloatList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = 1166;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(int0, int0);
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList0);
      Collection<Integer> collection0 = null;
      // Undeclared exception!
      try {
        tUnmodifiableFloatList0.retainAll(collection0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = 444;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(int0, int0);
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList0);
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) int0;
      floatArray0[1] = (float) int0;
      floatArray0[2] = (float) int0;
      floatArray0[3] = (float) int0;
      floatArray0[4] = (float) int0;
      floatArray0[5] = (float) int0;
      float float0 = 0.0F;
      floatArray0[6] = float0;
      floatArray0[7] = (float) int0;
      floatArray0[8] = (float) int0;
      // Undeclared exception!
      try {
        tUnmodifiableFloatList0.addAll(floatArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      float[] floatArray0 = new float[4];
      float float0 = 0.0F;
      floatArray0[0] = float0;
      float float1 = 855.70807F;
      floatArray0[1] = float1;
      float float2 = 5.8700857F;
      floatArray0[2] = float2;
      float float3 = 1944.5414F;
      floatArray0[3] = float3;
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, float2);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tSynchronizedRandomAccessFloatList0);
      float float4 = tUnmodifiableRandomAccessFloatList0.getNoEntryValue();
      assertFalse(float4 == float0);
  }

  @Test
  public void test9()  throws Throwable  {
      TFloatList tFloatList0 = null;
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = null;
      try {
        tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList(tFloatList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = 1891;
      float float0 = (-967.73254F);
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(int0, float0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      float float1 = 0.0F;
      int int1 = 2034;
      int int2 = 0;
      tUnmodifiableRandomAccessFloatList0.binarySearch(float1, int1, int2);
      int int3 = 0;
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.removeAt(int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 1586;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(int0);
      int int1 = 2081;
      tFloatArrayList0.ensureCapacity(int1);
      int int2 = 0;
      TFloatArrayList tFloatArrayList1 = (TFloatArrayList)tFloatArrayList0.subList(int2, int0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList1);
      float float0 = tFloatArrayList0.sum();
      float float1 = 0.0F;
      float[] floatArray0 = new float[3];
      floatArray0[0] = float0;
      float float2 = (-2030.9204F);
      floatArray0[1] = float2;
      floatArray0[2] = float0;
      int int3 = 0;
      tFloatArrayList0.toArray(floatArray0, int2, int3, int2);
      int int4 = (-1134);
      tUnmodifiableRandomAccessFloatList0.binarySearch(float1, int2, int4);
      TFloatArrayList tFloatArrayList2 = new TFloatArrayList();
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList1 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList2);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList1.addAll((TFloatCollection) tFloatArrayList2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      float[] floatArray0 = new float[9];
      float float0 = 1168.6887F;
      floatArray0[0] = float0;
      float float1 = (-746.9251F);
      floatArray0[1] = float1;
      float float2 = 569.3976F;
      floatArray0[2] = float2;
      float float3 = 1591.6476F;
      floatArray0[3] = float3;
      float float4 = 0.0F;
      floatArray0[4] = float4;
      float float5 = (-1.0F);
      floatArray0[5] = float5;
      float float6 = (-1207.6105F);
      floatArray0[6] = float6;
      float float7 = 0.0F;
      floatArray0[7] = float7;
      float float8 = 1.0F;
      floatArray0[8] = float8;
      float float9 = 0.0F;
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, float9);
      Stack<String> stack0 = new Stack<String>();
      String string0 = stack0.toString();
      TSynchronizedFloatList tSynchronizedFloatList0 = new TSynchronizedFloatList((TFloatList) tFloatArrayList0, (Object) string0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tSynchronizedFloatList0);
      int int0 = 0;
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.reverse(int0, int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = 0;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(int0, int0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      float[] floatArray0 = new float[10];
      float float0 = 1.0F;
      floatArray0[0] = float0;
      floatArray0[1] = (float) int0;
      floatArray0[2] = (float) int0;
      float float1 = 1.0F;
      floatArray0[3] = float1;
      floatArray0[4] = (float) int0;
      float float2 = 0.5F;
      floatArray0[5] = float2;
      floatArray0[6] = (float) int0;
      floatArray0[7] = (float) int0;
      floatArray0[8] = (float) int0;
      floatArray0[9] = (float) int0;
      tUnmodifiableRandomAccessFloatList0.toArray(floatArray0);
      tUnmodifiableRandomAccessFloatList0.containsAll((TFloatCollection) tFloatArrayList0);
      TFloatArrayList tFloatArrayList1 = new TFloatArrayList((TFloatCollection) tFloatArrayList0);
      tFloatArrayList1.clear();
      float float3 = (-284.82455F);
      tFloatArrayList0.remove(float3);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList1 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList1);
      int int1 = 0;
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList1.get(int1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      float[] floatArray0 = new float[7];
      float float0 = Float.NEGATIVE_INFINITY;
      floatArray0[0] = float0;
      float float1 = 0.0F;
      floatArray0[1] = float1;
      float float2 = 1134.0077F;
      floatArray0[2] = float2;
      float float3 = 764.38214F;
      floatArray0[3] = float3;
      float float4 = (-978.2275F);
      floatArray0[4] = float4;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      TSynchronizedFloatList tSynchronizedFloatList0 = new TSynchronizedFloatList((TFloatList) tFloatArrayList0);
      int int0 = 0;
      TSynchronizedFloatList tSynchronizedFloatList1 = (TSynchronizedFloatList)tSynchronizedFloatList0.subList(int0, int0);
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList((TFloatList) tSynchronizedFloatList1);
      int int1 = 0;
      TFloatLinkedList tFloatLinkedList1 = (TFloatLinkedList)tFloatLinkedList0.subList(int0, int1);
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatLinkedList1);
      tUnmodifiableFloatList0.toArray();
      float float5 = (-1987.7465F);
      floatArray0[5] = float5;
      float float6 = 1145.751F;
      floatArray0[6] = float6;
      TFloatArrayList tFloatArrayList1 = new TFloatArrayList(floatArray0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList1);
      int int2 = 0;
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.insert(int2, floatArray0, int2, int2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = 905551;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(int0, int0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      tUnmodifiableRandomAccessFloatList0.isEmpty();
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.min();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // cannot find minimum of an empty list
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList0);
      Collection<ArrayList<Object>> collection0 = null;
      // Undeclared exception!
      try {
        tUnmodifiableFloatList0.retainAll(collection0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      float[] floatArray0 = new float[8];
      float float0 = 0.0F;
      floatArray0[0] = float0;
      float float1 = (-341.15137F);
      floatArray0[1] = float1;
      float float2 = 1082.1592F;
      floatArray0[2] = float2;
      float float3 = 6.6360896E8F;
      floatArray0[3] = float3;
      float float4 = 0.0F;
      floatArray0[4] = float4;
      float float5 = 1644.1942F;
      floatArray0[5] = float5;
      float float6 = 6.6360896E8F;
      floatArray0[6] = float6;
      float float7 = 385.44394F;
      floatArray0[7] = float7;
      float float8 = 1183.694F;
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, float8);
      TSynchronizedFloatList tSynchronizedFloatList0 = new TSynchronizedFloatList((TFloatList) tFloatArrayList0);
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tSynchronizedFloatList0);
      float float9 = (-1350.6691F);
      tUnmodifiableFloatList0.contains(float9);
      float[] floatArray1 = new float[2];
      float float10 = 0.0F;
      floatArray1[0] = float10;
      floatArray1[1] = float10;
      float float11 = (-1.0F);
      floatArray1[0] = float11;
      floatArray1[1] = float11;
      float float12 = (-1392.8483F);
      floatArray1[0] = float12;
      float float13 = (-1153.6547F);
      floatArray1[1] = float13;
      TFloatArrayList tFloatArrayList1 = new TFloatArrayList(floatArray1);
      tFloatArrayList1.addAll(floatArray1);
      tFloatArrayList1.removeAll(floatArray1);
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = new TUnmodifiableFloatCollection((TFloatCollection) tFloatArrayList1);
      String string0 = tUnmodifiableFloatCollection0.toString();
      TSynchronizedFloatList tSynchronizedFloatList1 = new TSynchronizedFloatList((TFloatList) tFloatArrayList1, (Object) string0);
      int int0 = 687;
      // Undeclared exception!
      try {
        tSynchronizedFloatList1.subList(int0, int0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index < 4
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.hash.TObjectHash;
import gnu.trove.impl.unmodifiable.TUnmodifiableObjectByteMap;
import gnu.trove.map.TObjectByteMap;
import gnu.trove.map.custom_hash.TObjectByteCustomHashMap;
import gnu.trove.map.hash.TObjectByteHashMap;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.ByteArrayOutputStream;
import java.io.DataInput;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.Locale;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableObjectByteMapEvoSuite_Random {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      Object object0 = TObjectHash.REMOVED;
      identityHashingStrategy0.equals(object0, object0);
      int int0 = 0;
      TObjectByteCustomHashMap<String> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<String>();
      TObjectByteHashMap<String> tObjectByteHashMap0 = new TObjectByteHashMap<String>((TObjectByteMap<? extends String>) tObjectByteCustomHashMap0);
      tObjectByteHashMap0.iterator();
      TUnmodifiableObjectByteMap<String> tUnmodifiableObjectByteMap0 = new TUnmodifiableObjectByteMap<String>((TObjectByteMap<String>) tObjectByteHashMap0);
      Object object1 = null;
      // Undeclared exception!
      try {
        tUnmodifiableObjectByteMap0.remove(object1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = (-168);
      float float0 = 1.0F;
      byte byte0 = (byte) (-12);
      TObjectByteMap<String> tObjectByteMap0 = null;
      TUnmodifiableObjectByteMap<String> tUnmodifiableObjectByteMap0 = null;
      try {
        tUnmodifiableObjectByteMap0 = new TUnmodifiableObjectByteMap<String>(tObjectByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>();
      TObjectByteMap<String> tObjectByteMap0 = null;
      TUnmodifiableObjectByteMap<String> tUnmodifiableObjectByteMap0 = null;
      try {
        tUnmodifiableObjectByteMap0 = new TUnmodifiableObjectByteMap<String>(tObjectByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int0 = 0;
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, int0);
      TUnmodifiableObjectByteMap<Integer> tUnmodifiableObjectByteMap0 = new TUnmodifiableObjectByteMap<Integer>((TObjectByteMap<Integer>) tObjectByteCustomHashMap0);
      int int1 = 0;
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap1 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, int1, (float) int1);
      TUnmodifiableObjectByteMap<Object> tUnmodifiableObjectByteMap1 = new TUnmodifiableObjectByteMap<Object>((TObjectByteMap<Object>) tObjectByteCustomHashMap1);
      tUnmodifiableObjectByteMap1.hashCode();
      TUnmodifiableObjectByteMap<Object> tUnmodifiableObjectByteMap2 = new TUnmodifiableObjectByteMap<Object>((TObjectByteMap<Object>) tObjectByteCustomHashMap1);
      tUnmodifiableObjectByteMap2.keys(tObjectByteCustomHashMap1._set);
      byte byte0 = (byte)0;
      TObjectByteHashMap<Integer> tObjectByteHashMap0 = new TObjectByteHashMap<Integer>(int1, (float) int1, byte0);
      TUnmodifiableObjectByteMap<Integer> tUnmodifiableObjectByteMap3 = new TUnmodifiableObjectByteMap<Integer>((TObjectByteMap<Integer>) tObjectByteHashMap0);
      tUnmodifiableObjectByteMap3.iterator();
      Locale locale0 = Locale.UK;
      int int2 = 0;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(int2);
      String string0 = "|)a^FLWVspIE$V,^";
      try {
        byteArrayOutputStream0.toString(string0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
         //
         // |)a^FLWVspIE$V,^
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int0 = 1403641;
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, int0, (float) int0);
      TUnmodifiableObjectByteMap<Object> tUnmodifiableObjectByteMap0 = new TUnmodifiableObjectByteMap<Object>((TObjectByteMap<Object>) tObjectByteCustomHashMap0);
      DataInput dataInput0 = null;
      // Undeclared exception!
      try {
        DataInputStream.readUTF(dataInput0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int0 = 1712;
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, int0);
      TUnmodifiableObjectByteMap<Integer> tUnmodifiableObjectByteMap0 = new TUnmodifiableObjectByteMap<Integer>((TObjectByteMap<Integer>) tObjectByteCustomHashMap0);
      assertEquals("{}", tUnmodifiableObjectByteMap0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int0 = 1776;
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, int0);
      TUnmodifiableObjectByteMap<Object> tUnmodifiableObjectByteMap0 = new TUnmodifiableObjectByteMap<Object>((TObjectByteMap<Object>) tObjectByteCustomHashMap0);
      int int1 = tUnmodifiableObjectByteMap0.hashCode();
      assertFalse(int1 == int0);
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = (-1670);
      float float0 = (-96.10537F);
      byte byte0 = (byte) (-117);
      TObjectByteHashMap<Object> tObjectByteHashMap0 = new TObjectByteHashMap<Object>(int0, float0, byte0);
      TUnmodifiableObjectByteMap<Object> tUnmodifiableObjectByteMap0 = new TUnmodifiableObjectByteMap<Object>((TObjectByteMap<Object>) tObjectByteHashMap0);
      Locale locale0 = Locale.ROOT;
      Locale locale1 = Locale.TAIWAN;
      String string0 = locale0.getDisplayScript(locale1);
      // Undeclared exception!
      try {
        tUnmodifiableObjectByteMap0.adjustValue((Object) string0, byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TObjectByteMap<Object> tObjectByteMap0 = null;
      TUnmodifiableObjectByteMap<Object> tUnmodifiableObjectByteMap0 = null;
      try {
        tUnmodifiableObjectByteMap0 = new TUnmodifiableObjectByteMap<Object>(tObjectByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 1850;
      float float0 = 1288.5708F;
      byte byte0 = (byte) (-29);
      TObjectByteHashMap<Integer> tObjectByteHashMap0 = new TObjectByteHashMap<Integer>(int0, float0, byte0);
      TUnmodifiableObjectByteMap<Integer> tUnmodifiableObjectByteMap0 = new TUnmodifiableObjectByteMap<Integer>((TObjectByteMap<Integer>) tObjectByteHashMap0);
      byte byte1 = tUnmodifiableObjectByteMap0.getNoEntryValue();
      assertEquals((byte) (-29), byte1);
  }

  @Test
  public void test10()  throws Throwable  {
      TObjectByteCustomHashMap<String> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<String>();
      TUnmodifiableObjectByteMap<String> tUnmodifiableObjectByteMap0 = new TUnmodifiableObjectByteMap<String>((TObjectByteMap<String>) tObjectByteCustomHashMap0);
      String string0 = "";
      byte byte0 = (byte) (-128);
      // Undeclared exception!
      try {
        tObjectByteCustomHashMap0.put(string0, byte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          int int0 = 1841;
          byte byte0 = (byte)1;
          TObjectByteHashMap<Integer> tObjectByteHashMap0 = new TObjectByteHashMap<Integer>(int0, (float) int0, byte0);
          TUnmodifiableObjectByteMap<Integer> tUnmodifiableObjectByteMap0 = new TUnmodifiableObjectByteMap<Integer>((TObjectByteMap<Integer>) tObjectByteHashMap0);
          IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
          TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
          String string0 = "PT!";
          FileOutputStream fileOutputStream0 = null;
          try {
            fileOutputStream0 = new FileOutputStream(string0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.io.FilePermission\" \"PT!\" \"write\")
             // java.lang.Thread.getStackTrace(Thread.java:1567)
             // org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
             // java.io.FileOutputStream.<init>(FileOutputStream.java:203)
             // java.io.FileOutputStream.<init>(FileOutputStream.java:104)
             // sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
             // sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
             // sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
             // java.lang.reflect.Constructor.newInstance(Constructor.java:525)
             // org.evosuite.testcase.ConstructorStatement$1.execute(ConstructorStatement.java:226)
             // org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:144)
             // org.evosuite.testcase.ConstructorStatement.execute(ConstructorStatement.java:188)
             // org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             // org.evosuite.testcase.TestRunnable.call(TestRunnable.java:1)
             // java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
             // java.util.concurrent.FutureTask.run(FutureTask.java:166)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
             // java.lang.Thread.run(Thread.java:722)
             //
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test12()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>();
      TObjectByteHashMap<Object> tObjectByteHashMap0 = new TObjectByteHashMap<Object>((TObjectByteMap<?>) tObjectByteCustomHashMap0);
      TUnmodifiableObjectByteMap<Object> tUnmodifiableObjectByteMap0 = new TUnmodifiableObjectByteMap<Object>((TObjectByteMap<Object>) tObjectByteHashMap0);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      String string0 = locale0.getScript();
      byte byte0 = (byte) (-56);
      byte byte1 = (byte) (-1);
      // Undeclared exception!
      try {
        tUnmodifiableObjectByteMap0.adjustOrPutValue((Object) string0, byte0, byte1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = 211;
      byte byte0 = (byte)81;
      TObjectByteHashMap<String> tObjectByteHashMap0 = new TObjectByteHashMap<String>(int0, (float) int0, byte0);
      String string0 = tObjectByteHashMap0.toString();
      TObjectByteHashMap<Object> tObjectByteHashMap1 = new TObjectByteHashMap<Object>();
      TUnmodifiableObjectByteMap<Object> tUnmodifiableObjectByteMap0 = new TUnmodifiableObjectByteMap<Object>((TObjectByteMap<Object>) tObjectByteHashMap1);
      // Undeclared exception!
      try {
        File.createTempFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TByteFloatMapDecorator;
import gnu.trove.map.TByteFloatMap;
import gnu.trove.map.hash.TByteFloatHashMap;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.StreamCorruptedException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.AbstractMap;
import java.util.Locale;
import javax.swing.text.Segment;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TByteFloatMapDecoratorEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte) (-6);
      byteArray0[0] = byte0;
      byte byte1 = (byte)9;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-63);
      byteArray0[3] = byte3;
      byte byte4 = (byte)1;
      byteArray0[4] = byte4;
      float[] floatArray0 = new float[10];
      floatArray0[0] = (float) byteArray0[3];
      floatArray0[1] = (float) byteArray0[1];
      floatArray0[2] = (float) byteArray0[2];
      floatArray0[3] = (float) byte2;
      floatArray0[4] = (float) byte1;
      floatArray0[5] = (float) byte0;
      floatArray0[6] = (float) byte3;
      floatArray0[7] = (float) byteArray0[4];
      floatArray0[8] = (float) byteArray0[1];
      floatArray0[9] = (float) byte4;
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(byteArray0, floatArray0);
      TByteFloatMapDecorator tByteFloatMapDecorator0 = new TByteFloatMapDecorator((TByteFloatMap) tByteFloatHashMap0);
      tByteFloatMapDecorator0.toString();
      TByteFloatMapDecorator tByteFloatMapDecorator1 = new TByteFloatMapDecorator();
      float float0 = 1049.777F;
      Float.toString(float0);
      // Undeclared exception!
      try {
        tByteFloatMapDecorator1.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TByteFloatMapDecorator tByteFloatMapDecorator0 = new TByteFloatMapDecorator();
      // Undeclared exception!
      try {
        tByteFloatMapDecorator0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TByteFloatMapDecorator tByteFloatMapDecorator0 = new TByteFloatMapDecorator();
      tByteFloatMapDecorator0.getMap();
      TByteFloatMap tByteFloatMap0 = null;
      TByteFloatMapDecorator tByteFloatMapDecorator1 = new TByteFloatMapDecorator(tByteFloatMap0);
      tByteFloatMapDecorator1.values();
      TByteFloatMap tByteFloatMap1 = tByteFloatMapDecorator1.getMap();
      TByteFloatMapDecorator tByteFloatMapDecorator2 = new TByteFloatMapDecorator(tByteFloatMap1);
      TByteFloatMapDecorator tByteFloatMapDecorator3 = new TByteFloatMapDecorator();
      byte byte0 = (byte) (-1);
      Byte byte1 = new Byte(byte0);
      double double0 = 0.0;
      Float float0 = new Float(double0);
      // Undeclared exception!
      try {
        tByteFloatMapDecorator2.put(byte1, float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TByteFloatMapDecorator tByteFloatMapDecorator0 = new TByteFloatMapDecorator();
      TByteFloatMap tByteFloatMap0 = tByteFloatMapDecorator0.getMap();
      TByteFloatMapDecorator tByteFloatMapDecorator1 = new TByteFloatMapDecorator(tByteFloatMap0);
      // Undeclared exception!
      try {
        tByteFloatMapDecorator1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

//   @Test
//   public void test4()  throws Throwable  {
//       int int0 = 0;
//       float float0 = Float.POSITIVE_INFINITY;
//       TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(int0, float0);
//       TByteFloatMapDecorator tByteFloatMapDecorator0 = new TByteFloatMapDecorator((TByteFloatMap) tByteFloatHashMap0);
//       Locale locale0 = Locale.JAPAN;
//       String string0 = locale0.getDisplayLanguage();
//       Float float1 = tByteFloatMapDecorator0.get((Object) string0);
//       TByteFloatHashMap tByteFloatHashMap1 = new TByteFloatHashMap(int0);
//       float float2 = 0.0F;
//       Float.isNaN(float2);
//       int int1 = 0;
//       // Undeclared exception!
//       try {
//         tByteFloatHashMap0.setAutoCompactionFactor((float) float1);
//         fail("Expecting exception: IllegalArgumentException");
//       
//       } catch(IllegalArgumentException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//       }
//   }

  @Test
  public void test5()  throws Throwable  {
      TByteFloatMap tByteFloatMap0 = null;
      TByteFloatMapDecorator tByteFloatMapDecorator0 = new TByteFloatMapDecorator(tByteFloatMap0);
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-1);
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-1);
      byteArray0[4] = byte4;
      byte byte5 = (byte)0;
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-5);
      byteArray0[6] = byte6;
      byte byte7 = (byte)0;
      byteArray0[7] = byte7;
      byte byte8 = (byte) (-36);
      byteArray0[8] = byte8;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) byteArrayInputStream0);
        fail("Expecting exception: StreamCorruptedException");
      
      } catch(StreamCorruptedException e) {
         //
         // invalid stream header: 0000FF00
         //
      }
  }

//   @Test
//   public void test6()  throws Throwable  {
//       TByteFloatMapDecorator tByteFloatMapDecorator0 = new TByteFloatMapDecorator();
//       Byte byte0 = null;
//       Float float0 = null;
//       try {
//         float0 = new Float((double) byte0);
//         fail("Expecting exception: IllegalArgumentException");
//       
//       } catch(IllegalArgumentException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//       }
//   }

  @Test
  public void test7()  throws Throwable  {
      TByteFloatMapDecorator tByteFloatMapDecorator0 = new TByteFloatMapDecorator();
      String string0 = "!*l*9!yack";
      URI uRI0 = new URI(string0);
      uRI0.getQuery();
      char[] charArray0 = new char[2];
      char char0 = '5';
      charArray0[0] = char0;
      char char1 = 'Z';
      charArray0[1] = char1;
      int int0 = 0;
      Segment segment0 = new Segment(charArray0, int0, (int) char1);
      // Undeclared exception!
      try {
        segment0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 90
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)69;
      byteArray0[0] = byte0;
      byte byte1 = (byte)1;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-88);
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-73);
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-15);
      byteArray0[5] = byte5;
      float[] floatArray0 = new float[10];
      floatArray0[0] = (float) byte3;
      floatArray0[1] = (float) byte5;
      floatArray0[2] = (float) byteArray0[2];
      float float0 = 0.0F;
      floatArray0[3] = float0;
      floatArray0[4] = (float) byteArray0[2];
      floatArray0[5] = (float) byte0;
      floatArray0[6] = (float) byte5;
      floatArray0[7] = (float) byteArray0[4];
      floatArray0[8] = (float) byte0;
      floatArray0[9] = (float) byte2;
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(byteArray0, floatArray0);
      TByteFloatMapDecorator tByteFloatMapDecorator0 = new TByteFloatMapDecorator((TByteFloatMap) tByteFloatHashMap0);
      Locale locale0 = Locale.FRENCH;
      String string0 = locale0.getDisplayVariant();
      boolean boolean0 = tByteFloatMapDecorator0.containsKey((Object) string0);
      assertEquals(false, boolean0);
  }

//   @Test
//   public void test9()  throws Throwable  {
//       TByteFloatMapDecorator tByteFloatMapDecorator0 = new TByteFloatMapDecorator();
//       Locale locale0 = Locale.CHINA;
//       String string0 = locale0.getDisplayScript();
//       Float float0 = tByteFloatMapDecorator0.get((Object) string0);
//       Float float1 = null;
//       try {
//         float1 = new Float((double) float0);
//         fail("Expecting exception: IllegalArgumentException");
//       
//       } catch(IllegalArgumentException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//       }
//   }

  @Test
  public void test10()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap();
      TByteFloatHashMap tByteFloatHashMap1 = new TByteFloatHashMap((TByteFloatMap) tByteFloatHashMap0);
      TByteFloatMapDecorator tByteFloatMapDecorator0 = new TByteFloatMapDecorator();
      byte byte0 = (byte) (-93);
      Byte byte1 = new Byte(byte0);
      double double0 = (-1779.2318388209744);
      Float float0 = new Float(double0);
      // Undeclared exception!
      try {
        tByteFloatMapDecorator0.put(byte1, float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TByteFloatMapDecorator tByteFloatMapDecorator0 = new TByteFloatMapDecorator();
      // Undeclared exception!
      try {
        tByteFloatMapDecorator0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TByteFloatMapDecorator tByteFloatMapDecorator0 = new TByteFloatMapDecorator();
      // Undeclared exception!
      try {
        tByteFloatMapDecorator0.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      Locale locale0 = Locale.US;
      String string0 = locale0.toLanguageTag();
      byte byte0 = (byte)22;
      Byte byte1 = new Byte(byte0);
      AbstractMap.SimpleImmutableEntry<Object, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, Object>((Object) string0, (Object) byte1);
      abstractMap_SimpleImmutableEntry0.hashCode();
      TByteFloatMapDecorator tByteFloatMapDecorator0 = new TByteFloatMapDecorator();
      // Undeclared exception!
      try {
        tByteFloatMapDecorator0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TByteFloatMapDecorator tByteFloatMapDecorator0 = new TByteFloatMapDecorator();
      byte byte0 = (byte) (-95);
      double double0 = 547.3538382473613;
      Float float0 = new Float(double0);
      String string0 = "";
      // Undeclared exception!
      try {
        File.createTempFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = 1974;
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(int0);
      TByteFloatHashMap tByteFloatHashMap1 = new TByteFloatHashMap((TByteFloatMap) tByteFloatHashMap0);
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)119;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-3);
      byteArray0[1] = byte1;
      byte byte2 = (byte)37;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-46);
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-104);
      byteArray0[4] = byte4;
      byte byte5 = (byte)0;
      byteArray0[5] = byte5;
      byte byte6 = (byte)3;
      byteArray0[6] = byte6;
      byte byte7 = (byte)0;
      byteArray0[7] = byte7;
      tByteFloatHashMap1._set = byteArray0;
      TByteFloatMapDecorator tByteFloatMapDecorator0 = new TByteFloatMapDecorator((TByteFloatMap) tByteFloatHashMap1);
      int int1 = 0;
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      TByteFloatMap tByteFloatMap0 = null;
      TByteFloatMapDecorator tByteFloatMapDecorator0 = new TByteFloatMapDecorator(tByteFloatMap0);
      tByteFloatMapDecorator0.getMap();
      TByteFloatMapDecorator tByteFloatMapDecorator1 = new TByteFloatMapDecorator(tByteFloatMap0);
      // Undeclared exception!
      try {
        tByteFloatMapDecorator1.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

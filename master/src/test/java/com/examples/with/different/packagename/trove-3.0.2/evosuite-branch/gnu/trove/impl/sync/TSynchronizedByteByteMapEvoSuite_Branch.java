/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TByteFunction;
import gnu.trove.impl.sync.TSynchronizedByteByteMap;
import gnu.trove.impl.sync.TSynchronizedByteCollection;
import gnu.trove.impl.sync.TSynchronizedByteSet;
import gnu.trove.map.TByteByteMap;
import gnu.trove.map.hash.TByteByteHashMap;
import gnu.trove.procedure.TByteByteProcedure;
import gnu.trove.procedure.TByteProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedByteByteMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.forEachEntry(Lgnu/trove/procedure/TByteByteProcedure;)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedByteByteMap.<init>(Lgnu/trove/map/TByteByteMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((int) (byte)23, (float) (byte)23);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      boolean boolean0 = tSynchronizedByteByteMap0.forEachEntry((TByteByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.clear()V: root-Branch
   */

//   @Test
//   public void test1()  throws Throwable  {
//       TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
//       TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
//       tSynchronizedByteByteMap0.clear();
//       assertEquals(0, tSynchronizedByteByteMap0.getNoEntryKey());
//   }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.iterator()Lgnu/trove/iterator/TByteByteIterator;: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedByteByteMap.size()I: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(1090, 1090);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      TByteByteHashMap tByteByteHashMap1 = new TByteByteHashMap((TByteByteMap) tSynchronizedByteByteMap0);
      assertTrue(tByteByteHashMap0.equals(tByteByteHashMap1));
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(1090, 1090);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      boolean boolean0 = tSynchronizedByteByteMap0.forEachKey((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.get(B)B: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte byte0 = tSynchronizedByteByteMap0.get((byte)0);
      assertEquals((byte)0, byte0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.remove(B)B: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte byte0 = tSynchronizedByteByteMap0.remove((byte)0);
      assertEquals((byte)0, byte0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.getNoEntryValue()B: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte byte0 = tSynchronizedByteByteMap0.getNoEntryValue();
      assertEquals((byte)0, byte0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.put(BB)B: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      tSynchronizedByteByteMap0.put((byte)0, (byte)0);
      assertEquals(1, tByteByteHashMap0.size());
      assertEquals("{0=0}", tByteByteHashMap0.toString());
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.transformValues(Lgnu/trove/function/TByteFunction;)V: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedByteByteMap.<init>(Lgnu/trove/map/TByteByteMap;Ljava/lang/Object;)V: root-Branch
   */

//   @Test
//   public void test8()  throws Throwable  {
//       TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
//       TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0, (Object) tByteByteHashMap0);
//       tSynchronizedByteByteMap0.transformValues((TByteFunction) null);
//       assertEquals(0, tSynchronizedByteByteMap0.getNoEntryValue());
//   }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      boolean boolean0 = tSynchronizedByteByteMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.keys()[B: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte[] byteArray0 = tSynchronizedByteByteMap0.keys();
      assertNotNull(byteArray0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.adjustValue(BB)Z: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      boolean boolean0 = tSynchronizedByteByteMap0.adjustValue((byte)0, (byte)0);
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.getNoEntryKey()B: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(1090, 1090);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte byte0 = tSynchronizedByteByteMap0.getNoEntryKey();
      assertEquals((byte)0, byte0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((int) (byte)23, (float) (byte)23);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      String string0 = tSynchronizedByteByteMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((int) (byte)23, (float) (byte)23);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      HashMap<Byte, Byte> hashMap0 = new HashMap<Byte, Byte>();
      tSynchronizedByteByteMap0.putAll((Map<? extends Byte, ? extends Byte>) hashMap0);
      assertEquals("{}", tSynchronizedByteByteMap0.toString());
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(1090, 1090);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      boolean boolean0 = tSynchronizedByteByteMap0.forEachValue((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.retainEntries(Lgnu/trove/procedure/TByteByteProcedure;)Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((int) (byte)23, (float) (byte)23);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      boolean boolean0 = tSynchronizedByteByteMap0.retainEntries((TByteByteProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.hashCode()I: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(1090, 1090);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      int int0 = tSynchronizedByteByteMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.adjustOrPutValue(BBB)B: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((-1814));
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0, (Object) "-103");
      byte byte0 = tSynchronizedByteByteMap0.adjustOrPutValue((byte)0, (byte)0, (byte) (-103));
      assertEquals("{0=-103}", tByteByteHashMap0.toString());
      assertEquals((byte) (-103), byte0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.containsKey(B)Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((int) (byte)23, (float) (byte)23);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      boolean boolean0 = tSynchronizedByteByteMap0.containsKey((byte)23);
      assertEquals(false, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.putAll(Lgnu/trove/map/TByteByteMap;)V: root-Branch
   */

//   @Test
//   public void test20()  throws Throwable  {
//       TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
//       TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
//       tSynchronizedByteByteMap0.putAll((TByteByteMap) tByteByteHashMap0);
//       assertEquals(0, tByteByteHashMap0.getNoEntryValue());
//   }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.increment(B)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((int) (byte)23, (float) (byte)23);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      boolean boolean0 = tSynchronizedByteByteMap0.increment((byte)23);
      assertEquals(false, boolean0);
  }

  //Test case number: 22
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.putIfAbsent(BB)B: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedByteByteMap.<init>(Lgnu/trove/map/TByteByteMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((-1814));
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0, (Object) "-103");
      tSynchronizedByteByteMap0.putIfAbsent((byte) (-103), (byte) (-103));
      assertEquals("{-103=-103}", tByteByteHashMap0.toString());
      assertEquals(false, tSynchronizedByteByteMap0.isEmpty());
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((int) (byte)23, (float) (byte)23);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      boolean boolean0 = tSynchronizedByteByteMap0.equals((Object) "{}");
      assertEquals(false, boolean0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.keys([B)[B: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(1090, 1090);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte[] byteArray0 = tSynchronizedByteByteMap0.keys(tByteByteHashMap0._set);
      assertNotNull(byteArray0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.values()[B: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((int) (byte)23, (float) (byte)23);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte[] byteArray0 = tSynchronizedByteByteMap0.values();
      assertNotNull(byteArray0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.values([B)[B: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((int) (byte)23, (float) (byte)23);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte[] byteArray0 = tSynchronizedByteByteMap0.values(tByteByteHashMap0._states);
      assertNotNull(byteArray0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.containsValue(B)Z: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      boolean boolean0 = tSynchronizedByteByteMap0.containsValue((byte)0);
      assertEquals(false, boolean0);
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.<init>(Lgnu/trove/map/TByteByteMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = null;
      try {
        tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.keySet()Lgnu/trove/set/TByteSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedByteByteMap.keySet()Lgnu/trove/set/TByteSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      TSynchronizedByteSet tSynchronizedByteSet0 = (TSynchronizedByteSet)tSynchronizedByteByteMap0.keySet();
      assertNotNull(tSynchronizedByteSet0);
      
      TSynchronizedByteSet tSynchronizedByteSet1 = (TSynchronizedByteSet)tSynchronizedByteByteMap0.keySet();
      assertSame(tSynchronizedByteSet1, tSynchronizedByteSet0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteByteMap.valueCollection()Lgnu/trove/TByteCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 gnu.trove.impl.sync.TSynchronizedByteByteMap.valueCollection()Lgnu/trove/TByteCollection;: I11 Branch 3 IFNONNULL L121 - false
   * 3 gnu.trove.impl.sync.TSynchronizedByteByteMap.<init>(Lgnu/trove/map/TByteByteMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      TSynchronizedByteCollection tSynchronizedByteCollection0 = (TSynchronizedByteCollection)tSynchronizedByteByteMap0.valueCollection();
      assertNotNull(tSynchronizedByteCollection0);
      
      TSynchronizedByteCollection tSynchronizedByteCollection1 = (TSynchronizedByteCollection)tSynchronizedByteByteMap0.valueCollection();
      assertSame(tSynchronizedByteCollection1, tSynchronizedByteCollection0);
  }
}

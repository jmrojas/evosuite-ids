/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TShortIntMapDecorator;
import gnu.trove.map.TShortIntMap;
import gnu.trove.map.hash.TShortIntHashMap;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInput;
import java.io.ObjectInputStream;
import java.io.RandomAccessFile;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.AbstractMap;
import java.util.Locale;
import javax.swing.text.Segment;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TShortIntMapDecoratorEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
      TShortIntMapDecorator tShortIntMapDecorator0 = new TShortIntMapDecorator((TShortIntMap) tShortIntHashMap0);
      tShortIntMapDecorator0.entrySet();
      tShortIntMapDecorator0.keySet();
      TShortIntMapDecorator tShortIntMapDecorator1 = new TShortIntMapDecorator((TShortIntMap) tShortIntHashMap0);
      TShortIntMapDecorator tShortIntMapDecorator2 = new TShortIntMapDecorator((TShortIntMap) tShortIntHashMap0);
      String string0 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://#
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TShortIntMapDecorator tShortIntMapDecorator0 = new TShortIntMapDecorator();
      tShortIntMapDecorator0.keySet();
      // Undeclared exception!
      try {
        tShortIntMapDecorator0.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TShortIntMapDecorator tShortIntMapDecorator0 = new TShortIntMapDecorator();
      short short0 = (short) (-1498);
      Short short1 = new Short(short0);
      String string0 = ":y";
      try {
        Integer.valueOf(string0, (int) short0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // radix -1498 less than Character.MIN_RADIX
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = 0;
      float float0 = 0.0F;
      short short0 = (short) (-1159);
      int int1 = 1703;
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(int0, float0, short0, int1);
      TShortIntMapDecorator tShortIntMapDecorator0 = new TShortIntMapDecorator((TShortIntMap) tShortIntHashMap0);
      short short1 = (short)1526;
      TShortIntMapDecorator tShortIntMapDecorator1 = new TShortIntMapDecorator();
      // Undeclared exception!
      try {
        tShortIntMapDecorator1.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = (-89);
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(int0);
      AbstractMap.SimpleImmutableEntry<TShortIntHashMap, TShortIntHashMap> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<TShortIntHashMap, TShortIntHashMap>(tShortIntHashMap0, tShortIntHashMap0);
      TShortIntMapDecorator tShortIntMapDecorator0 = new TShortIntMapDecorator();
      InputStream inputStream0 = null;
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(inputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

//   @Test
//   public void test5()  throws Throwable  {
//       int int0 = 0;
//       int int1 = (-1371);
//       float float0 = 1365.7317F;
//       TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(int1, float0);
//       TShortIntMapDecorator tShortIntMapDecorator0 = new TShortIntMapDecorator((TShortIntMap) tShortIntHashMap0);
//       Short short0 = null;
//       String string0 = "2";
//       Short short1 = null;
//       try {
//         short1 = new Short((short) short0);
//         fail("Expecting exception: IllegalArgumentException");
//       
//       } catch(IllegalArgumentException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//       }
//   }

  @Test
  public void test6()  throws Throwable  {
      TShortIntMapDecorator tShortIntMapDecorator0 = new TShortIntMapDecorator();
      TShortIntMap tShortIntMap0 = tShortIntMapDecorator0.getMap();
      TShortIntMapDecorator tShortIntMapDecorator1 = new TShortIntMapDecorator();
      TShortIntMapDecorator tShortIntMapDecorator2 = new TShortIntMapDecorator(tShortIntMap0);
      short short0 = (short)794;
      Short short1 = new Short(short0);
      Integer integer0 = new Integer((int) short1);
      // Undeclared exception!
      try {
        tShortIntMapDecorator2.put(short1, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TShortIntMapDecorator tShortIntMapDecorator0 = new TShortIntMapDecorator();
      short short0 = (short) (-1031);
      Short short1 = new Short(short0);
      String string0 = "\nKey types: ";
      int int0 = (-1083);
      try {
        Integer.valueOf(string0, int0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // radix -1083 less than Character.MIN_RADIX
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TShortIntMapDecorator tShortIntMapDecorator0 = new TShortIntMapDecorator();
      short short0 = (short)0;
      Short short1 = new Short(short0);
      Integer integer0 = new Integer((int) short1);
      // Undeclared exception!
      try {
        tShortIntMapDecorator0.put(short1, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TShortIntMapDecorator tShortIntMapDecorator0 = new TShortIntMapDecorator();
      Locale locale0 = Locale.PRC;
      Locale locale1 = Locale.CANADA_FRENCH;
      // Undeclared exception!
      try {
        tShortIntMapDecorator0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = 0;
      short short0 = (short)1067;
      int int1 = 49;
      short[] shortArray0 = new short[5];
      shortArray0[0] = short0;
      shortArray0[1] = short0;
      shortArray0[2] = short0;
      shortArray0[3] = short0;
      shortArray0[4] = short0;
      int[] intArray0 = new int[8];
      intArray0[0] = (int) short0;
      int int2 = 925;
      intArray0[1] = int2;
      intArray0[2] = (int) shortArray0[3];
      intArray0[3] = int0;
      intArray0[4] = int1;
      intArray0[5] = int0;
      intArray0[6] = int1;
      intArray0[7] = (int) shortArray0[0];
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(shortArray0, intArray0);
      TShortIntMapDecorator tShortIntMapDecorator0 = new TShortIntMapDecorator((TShortIntMap) tShortIntHashMap0);
      tShortIntMapDecorator0.getMap();
      TShortIntHashMap tShortIntHashMap1 = new TShortIntHashMap(int0, (float) int0, short0, int1);
      TShortIntMapDecorator tShortIntMapDecorator1 = new TShortIntMapDecorator((TShortIntMap) tShortIntHashMap1);
      TShortIntMapDecorator tShortIntMapDecorator2 = new TShortIntMapDecorator();
      Integer integer0 = new Integer(int1);
      tShortIntHashMap1.clear();
      // Undeclared exception!
      try {
        tShortIntMapDecorator2.put((Short) short0, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TShortIntMapDecorator tShortIntMapDecorator0 = new TShortIntMapDecorator();
      short short0 = (short) (-1501);
      Integer integer0 = new Integer((int) short0);
      // Undeclared exception!
      try {
        tShortIntMapDecorator0.put((Short) short0, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
      TShortIntMapDecorator tShortIntMapDecorator0 = new TShortIntMapDecorator((TShortIntMap) tShortIntHashMap0);
      tShortIntMapDecorator0.values();
      TShortIntMap tShortIntMap0 = null;
      TShortIntMapDecorator tShortIntMapDecorator1 = new TShortIntMapDecorator(tShortIntMap0);
      Segment segment0 = new Segment();
      String string0 = segment0.toString();
      tShortIntMapDecorator1.get((Object) string0);
      // Undeclared exception!
      try {
        tShortIntMapDecorator1.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = (-1804);
      TShortIntMapDecorator tShortIntMapDecorator0 = new TShortIntMapDecorator();
      short[] shortArray0 = new short[2];
      short short0 = (short)35;
      shortArray0[0] = short0;
      short short1 = (short)1470;
      shortArray0[1] = short1;
      int[] intArray0 = new int[9];
      intArray0[0] = (int) shortArray0[1];
      int int1 = 71;
      intArray0[1] = int1;
      intArray0[2] = (int) short1;
      intArray0[3] = (int) short1;
      intArray0[4] = (int) short0;
      intArray0[5] = (int) short0;
      intArray0[6] = int0;
      intArray0[7] = (int) shortArray0[0];
      intArray0[8] = (int) short1;
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(shortArray0, intArray0);
      tShortIntMapDecorator0.equals((Object) tShortIntHashMap0);
      float float0 = 1471.9564F;
      short short2 = (short)801;
      int int2 = (-1);
      TShortIntHashMap tShortIntHashMap1 = new TShortIntHashMap(int0, float0, short2, int2);
      TShortIntMapDecorator tShortIntMapDecorator1 = new TShortIntMapDecorator((TShortIntMap) tShortIntHashMap1);
      tShortIntMapDecorator1.toString();
      tShortIntMapDecorator1.put((Short) short2, (Integer) int0);
      short short3 = (short)1686;
      Short short4 = new Short(short3);
      String string0 = "7i=uJ p";
      tShortIntMapDecorator1.keySet();
      tShortIntMapDecorator1.keySet();
      AbstractMap.SimpleImmutableEntry<Short, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Short, String>(short4, string0);
      tShortIntMapDecorator1.getMap();
      AbstractMap.SimpleImmutableEntry<Object, TShortIntHashMap> abstractMap_SimpleImmutableEntry1 = null;
      String string1 = "";
      File file0 = new File(string1);
      Short short5 = new Short(short2);
      RandomAccessFile randomAccessFile0 = null;
      try {
        randomAccessFile0 = new RandomAccessFile(file0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"7i=uJ p\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      Object object0 = null;
      AbstractMap.SimpleImmutableEntry<Object, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, Object>(object0, object0);
      abstractMap_SimpleImmutableEntry0.equals(object0);
      short[] shortArray0 = new short[2];
      short short0 = (short)1;
      shortArray0[0] = short0;
      short short1 = (short)0;
      shortArray0[1] = short1;
      int[] intArray0 = new int[6];
      intArray0[0] = (int) short1;
      intArray0[1] = (int) short0;
      intArray0[2] = (int) short0;
      intArray0[3] = (int) shortArray0[0];
      intArray0[4] = (int) short0;
      intArray0[5] = (int) shortArray0[0];
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(shortArray0, intArray0);
      TShortIntMapDecorator tShortIntMapDecorator0 = new TShortIntMapDecorator((TShortIntMap) tShortIntHashMap0);
      ObjectInput objectInput0 = null;
      // Undeclared exception!
      try {
        tShortIntMapDecorator0.readExternal(objectInput0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

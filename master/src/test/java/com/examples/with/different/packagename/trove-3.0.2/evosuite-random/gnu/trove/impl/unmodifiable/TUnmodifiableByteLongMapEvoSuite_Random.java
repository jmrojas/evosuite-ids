/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteLongMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongCollection;
import gnu.trove.map.TByteLongMap;
import gnu.trove.map.hash.TByteLongHashMap;
import gnu.trove.procedure.TByteLongProcedure;
import java.io.IOException;
import java.io.ObjectInput;
import java.net.URI;
import java.net.URISyntaxException;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableByteLongMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byte byte0 = (byte) (-82);
      byteArray0[0] = byte0;
      byte byte1 = (byte)18;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      byte byte4 = (byte)0;
      byteArray0[4] = byte4;
      byte byte5 = (byte)8;
      byteArray0[5] = byte5;
      byte byte6 = (byte)12;
      byteArray0[6] = byte6;
      byte byte7 = (byte) (-60);
      byteArray0[7] = byte7;
      byte byte8 = (byte)87;
      byteArray0[8] = byte8;
      byte byte9 = (byte)35;
      byteArray0[9] = byte9;
      long[] longArray0 = new long[9];
      longArray0[0] = (long) byteArray0[4];
      longArray0[1] = (long) byteArray0[7];
      longArray0[2] = (long) byte7;
      long long0 = (-252L);
      longArray0[3] = long0;
      longArray0[4] = (long) byteArray0[0];
      longArray0[5] = (long) byteArray0[5];
      longArray0[6] = (long) byte2;
      longArray0[7] = (long) byte9;
      longArray0[8] = (long) byteArray0[0];
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(byteArray0, longArray0);
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap0 = new TUnmodifiableByteLongMap((TByteLongMap) tByteLongHashMap0);
      int int0 = tUnmodifiableByteLongMap0.hashCode();
      assertEquals(33, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      TByteLongMap tByteLongMap0 = null;
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap0 = null;
      try {
        tUnmodifiableByteLongMap0 = new TUnmodifiableByteLongMap(tByteLongMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = (-834);
      byte byte0 = (byte)23;
      long long0 = 0L;
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(int0, (float) int0, byte0, long0);
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap0 = new TUnmodifiableByteLongMap((TByteLongMap) tByteLongHashMap0);
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap1 = new TUnmodifiableByteLongMap((TByteLongMap) tUnmodifiableByteLongMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteLongMap1.putIfAbsent(byte0, (long) int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = 177;
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(int0, int0);
      ObjectInput objectInput0 = null;
      // Undeclared exception!
      try {
        tByteLongHashMap0.readExternal(objectInput0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-1);
      byteArray0[1] = byte1;
      long[] longArray0 = new long[1];
      longArray0[0] = (long) byteArray0[0];
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(byteArray0, longArray0);
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap0 = new TUnmodifiableByteLongMap((TByteLongMap) tByteLongHashMap0);
      byte byte2 = (byte) (-40);
      // Undeclared exception!
      try {
        tUnmodifiableByteLongMap0.remove(byte2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = (-1775);
      int int1 = 1538;
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(int1, int0);
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap0 = new TUnmodifiableByteLongMap((TByteLongMap) tByteLongHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteLongMap0.putAll((TByteLongMap) tByteLongHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = 0;
      float float0 = 6.6360896E8F;
      byte byte0 = (byte)0;
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(int0, float0, byte0, (long) byte0);
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap0 = new TUnmodifiableByteLongMap((TByteLongMap) tByteLongHashMap0);
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap1 = new TUnmodifiableByteLongMap((TByteLongMap) tUnmodifiableByteLongMap0);
      tUnmodifiableByteLongMap1.iterator();
      float float1 = 0.0F;
      TByteLongHashMap tByteLongHashMap1 = new TByteLongHashMap(int0, float1);
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap2 = new TUnmodifiableByteLongMap((TByteLongMap) tByteLongHashMap1);
      tUnmodifiableByteLongMap2.keys();
      byte byte1 = (byte) (-33);
      long long0 = tUnmodifiableByteLongMap2.get(byte1);
      assertEquals(0L, long0);
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = 243;
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(int0);
      TByteLongHashMap tByteLongHashMap1 = new TByteLongHashMap((TByteLongMap) tByteLongHashMap0);
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap0 = new TUnmodifiableByteLongMap((TByteLongMap) tByteLongHashMap1);
      String string0 = ", ";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: , ://, ,%20#,%20
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      long[] longArray0 = new long[7];
      long long0 = 9223372036854775807L;
      longArray0[0] = long0;
      long long1 = 1350L;
      longArray0[1] = long1;
      long long2 = (-437L);
      longArray0[2] = long2;
      long long3 = 2046L;
      longArray0[3] = long3;
      long long4 = 559L;
      longArray0[4] = long4;
      long long5 = 0L;
      longArray0[5] = long5;
      long long6 = 1595L;
      longArray0[6] = long6;
      tByteLongHashMap0.values(longArray0);
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap0 = new TUnmodifiableByteLongMap((TByteLongMap) tByteLongHashMap0);
      String string0 = "";
      String string1 = "No free or removed slots available. Key set full?!!";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string1, string1);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://?No%20free%20or%20removed%20slots%20available.%20Key%20set%20full?!!#No%20free%20or%20removed%20slots%20available.%20Key%20set%20full?!!
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 2004663929;
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap0 = new TUnmodifiableByteLongMap((TByteLongMap) tByteLongHashMap0);
      long[] longArray0 = new long[10];
      longArray0[0] = (long) int0;
      longArray0[1] = (long) int0;
      longArray0[2] = (long) int0;
      longArray0[3] = (long) int0;
      longArray0[4] = (long) int0;
      long long0 = (-1L);
      longArray0[5] = long0;
      longArray0[6] = (long) int0;
      longArray0[7] = (long) int0;
      long long1 = 1L;
      longArray0[8] = long1;
      longArray0[9] = (long) int0;
      long[] longArray1 = tUnmodifiableByteLongMap0.values(longArray0);
      assertNotNull(longArray1);
      
      TByteLongProcedure tByteLongProcedure0 = null;
      long[] longArray2 = tUnmodifiableByteLongMap0.values();
      assertNotNull(longArray2);
      
      boolean boolean0 = tUnmodifiableByteLongMap0.forEachEntry(tByteLongProcedure0);
      TByteLongHashMap tByteLongHashMap1 = new TByteLongHashMap(int0);
      boolean boolean1 = tUnmodifiableByteLongMap0.isEmpty();
      assertTrue(boolean1 == boolean0);
      
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap1 = new TUnmodifiableByteLongMap((TByteLongMap) tByteLongHashMap1);
      tUnmodifiableByteLongMap1.size();
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap2 = new TUnmodifiableByteLongMap((TByteLongMap) tByteLongHashMap1);
      tByteLongHashMap1.retainEntries(tByteLongProcedure0);
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap3 = new TUnmodifiableByteLongMap((TByteLongMap) tUnmodifiableByteLongMap2);
      byte[] byteArray0 = tUnmodifiableByteLongMap3.keys(tByteLongHashMap1._states);
      assertNotNull(byteArray0);
      
      tUnmodifiableByteLongMap3.hashCode();
      tUnmodifiableByteLongMap2.getNoEntryValue();
      assertEquals(true, tUnmodifiableByteLongMap2.isEmpty());
  }

  @Test
  public void test10()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap0 = new TUnmodifiableByteLongMap((TByteLongMap) tByteLongHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteLongMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 0;
      float float0 = 1142.2137F;
      byte byte0 = (byte)67;
      long long0 = (-854L);
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(int0, float0, byte0, long0);
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap0 = new TUnmodifiableByteLongMap((TByteLongMap) tByteLongHashMap0);
      long[] longArray0 = new long[3];
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = byte0;
      byteArray0[1] = byte0;
      byteArray0[2] = byte0;
      byteArray0[3] = byte0;
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap1 = new TUnmodifiableByteLongMap((TByteLongMap) tUnmodifiableByteLongMap0);
      byteArray0[4] = byte0;
      byteArray0[5] = byte0;
      byteArray0[6] = byte0;
      byteArray0[7] = byte0;
      byteArray0[8] = byte0;
      tUnmodifiableByteLongMap1.values();
      byteArray0[9] = byte0;
      tByteLongHashMap0._states = byteArray0;
      longArray0[0] = long0;
      tByteLongHashMap0.trimToSize();
      longArray0[1] = long0;
      longArray0[2] = (long) byte0;
      tUnmodifiableByteLongMap0.values(longArray0);
      int int1 = 1;
      float float1 = 10.0F;
      tUnmodifiableByteLongMap0.toString();
      byte byte1 = (byte)0;
      TByteLongHashMap tByteLongHashMap1 = new TByteLongHashMap(int1, float1, byte1, (long) byte1);
      byte byte2 = (byte) (-91);
      byteArray0[0] = byte2;
      byteArray0[1] = byte2;
      byteArray0[2] = byte2;
      byteArray0[3] = byte0;
      byteArray0[4] = byte2;
      byteArray0[5] = byte1;
      byteArray0[6] = byte0;
      byte byte3 = (byte)0;
      byteArray0[7] = byte3;
      byte byte4 = (byte)0;
      byteArray0[8] = byte4;
      byteArray0[9] = byte0;
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap2 = new TUnmodifiableByteLongMap((TByteLongMap) tByteLongHashMap1);
      // Undeclared exception!
      try {
        tUnmodifiableByteLongMap2.putAll((TByteLongMap) tByteLongHashMap1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap0 = new TUnmodifiableByteLongMap((TByteLongMap) tByteLongHashMap0);
      TUnmodifiableLongCollection tUnmodifiableLongCollection0 = (TUnmodifiableLongCollection)tUnmodifiableByteLongMap0.valueCollection();
      assertEquals(0, tUnmodifiableLongCollection0.size());
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = 0;
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap0 = new TUnmodifiableByteLongMap((TByteLongMap) tByteLongHashMap0);
      byte byte0 = (byte)60;
      tUnmodifiableByteLongMap0.containsKey(byte0);
      byte byte1 = (byte)1;
      // Undeclared exception!
      try {
        tUnmodifiableByteLongMap0.remove(byte1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TByteLongMap tByteLongMap0 = null;
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap0 = null;
      try {
        tUnmodifiableByteLongMap0 = new TUnmodifiableByteLongMap(tByteLongMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = 0;
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)86;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-16);
      byteArray0[2] = byte2;
      byte byte3 = (byte)2;
      byteArray0[3] = byte3;
      byte byte4 = (byte)78;
      byteArray0[4] = byte4;
      byte byte5 = (byte)1;
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-37);
      byteArray0[6] = byte6;
      byte byte7 = (byte)0;
      byteArray0[7] = byte7;
      long[] longArray0 = new long[3];
      longArray0[0] = (long) byteArray0[1];
      long long0 = 0L;
      longArray0[1] = long0;
      longArray0[2] = (long) byteArray0[0];
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(byteArray0, longArray0);
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap0 = new TUnmodifiableByteLongMap((TByteLongMap) tByteLongHashMap0);
      tUnmodifiableByteLongMap0.keys(byteArray0);
      float float0 = 0.0F;
      byte byte8 = (byte)0;
      TByteLongHashMap tByteLongHashMap1 = new TByteLongHashMap(int0, float0, byte8, (long) byte8);
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = byte8;
      byteArray1[0] = byte8;
      byteArray1[1] = byte8;
      byteArray1[2] = byte8;
      byteArray1[3] = byte8;
      byteArray1[4] = byte8;
      byteArray1[5] = byte8;
      byteArray1[1] = byte8;
      byteArray1[2] = byte8;
      byteArray1[3] = byte8;
      TByteLongMap tByteLongMap0 = null;
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap1 = null;
      try {
        tUnmodifiableByteLongMap1 = new TUnmodifiableByteLongMap(tByteLongMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = 0;
      byte byte0 = (byte) (-122);
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(int0, (float) int0, byte0, (long) byte0);
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap0 = new TUnmodifiableByteLongMap((TByteLongMap) tByteLongHashMap0);
      tUnmodifiableByteLongMap0.toString();
      int int1 = 204;
      TByteLongHashMap tByteLongHashMap1 = new TByteLongHashMap(int1, int1);
      float float0 = (-1623.003F);
      // Undeclared exception!
      try {
        tByteLongHashMap1.setAutoCompactionFactor(float0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Factor must be >= 0: -1623.003
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      int int0 = 2045;
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)104;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte)70;
      byteArray0[2] = byte2;
      byte byte3 = (byte)58;
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-107);
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-1);
      byteArray0[5] = byte5;
      byte byte6 = (byte)21;
      byteArray0[6] = byte6;
      byte byte7 = (byte) (-49);
      byteArray0[7] = byte7;
      byte byte8 = (byte) (-29);
      byteArray0[8] = byte8;
      long[] longArray0 = new long[2];
      longArray0[0] = (long) byte3;
      longArray0[1] = (long) byte7;
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(byteArray0, longArray0);
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap0 = new TUnmodifiableByteLongMap((TByteLongMap) tByteLongHashMap0);
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap1 = new TUnmodifiableByteLongMap((TByteLongMap) tUnmodifiableByteLongMap0);
      byte byte9 = (byte) (-125);
      tUnmodifiableByteLongMap1.get(byte9);
      TByteLongHashMap tByteLongHashMap1 = new TByteLongHashMap(int0);
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap2 = new TUnmodifiableByteLongMap((TByteLongMap) tByteLongHashMap1);
      tUnmodifiableByteLongMap2.hashCode();
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap3 = new TUnmodifiableByteLongMap((TByteLongMap) tUnmodifiableByteLongMap2);
      String string0 = tUnmodifiableByteLongMap3.toString();
      assertEquals("{}", string0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TByteFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortSet;
import gnu.trove.map.TShortByteMap;
import gnu.trove.map.hash.TShortByteHashMap;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TShortByteProcedure;
import gnu.trove.procedure.TShortProcedure;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableShortByteMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.advance()V: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.key()S: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.value()B: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableShortByteMap;)V: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.hasNext()Z: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.iterator()Lgnu/trove/iterator/TShortByteIterator;: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.size()I: root-Branch
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.<init>(Lgnu/trove/map/TShortByteMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      short[] shortArray0 = new short[12];
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap((int) (short)0, (float) (short)0, (short) (-201), (byte)112);
      TShortByteHashMap tShortByteHashMap1 = new TShortByteHashMap(shortArray0, tShortByteHashMap0._states);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap1);
      TShortByteHashMap tShortByteHashMap2 = new TShortByteHashMap((TShortByteMap) tUnmodifiableShortByteMap0);
      assertEquals(1, tUnmodifiableShortByteMap0.size());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.getNoEntryKey()S: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(0, 0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      short short0 = tUnmodifiableShortByteMap0.getNoEntryKey();
      assertEquals((short)0, short0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      boolean boolean0 = tUnmodifiableShortByteMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      short[] shortArray0 = new short[4];
      byte[] byteArray0 = new byte[1];
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(shortArray0, byteArray0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      String string0 = tUnmodifiableShortByteMap0.toString();
      assertEquals("{0=0}", string0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.values()[B: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      byte[] byteArray0 = tUnmodifiableShortByteMap0.values();
      assertNotNull(byteArray0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.adjustValue(SB)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(101);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortByteMap0.adjustValue((short)1673, (byte)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keys([S)[S: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(101);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      short[] shortArray0 = tUnmodifiableShortByteMap0.keys(tShortByteHashMap0._set);
      assertNotNull(shortArray0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keys()[S: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap((int) (short)0, (float) (short)0, (short) (-201), (byte)112);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      short[] shortArray0 = tUnmodifiableShortByteMap0.keys();
      assertNotNull(shortArray0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.get(S)B: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(0, 0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      byte byte0 = tUnmodifiableShortByteMap0.get((short)1517);
      assertEquals((byte)0, byte0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.putAll(Lgnu/trove/map/TShortByteMap;)V: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortByteMap0.putAll((TShortByteMap) tShortByteHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.remove(S)B: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortByteMap0.remove((short)25);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsValue(B)Z: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      short[] shortArray0 = new short[8];
      byte[] byteArray0 = new byte[5];
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(shortArray0, byteArray0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      boolean boolean0 = tUnmodifiableShortByteMap0.containsValue((byte) (-51));
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.forEachEntry(Lgnu/trove/procedure/TShortByteProcedure;)Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap((-1234));
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      boolean boolean0 = tUnmodifiableShortByteMap0.forEachEntry((TShortByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      boolean boolean0 = tUnmodifiableShortByteMap0.forEachKey((TShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.putIfAbsent(SB)B: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(0, 0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortByteMap0.putIfAbsent((short) (byte)0, (byte)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.put(SB)B: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap((int) (byte)0, (float) 41, (short)0, (byte)0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortByteMap0.put((short) (byte)0, (byte)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(101);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      boolean boolean0 = tUnmodifiableShortByteMap0.forEachValue((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.increment(S)Z: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      short[] shortArray0 = new short[4];
      byte[] byteArray0 = new byte[1];
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(shortArray0, byteArray0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortByteMap0.increment((short)31);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.retainEntries(Lgnu/trove/procedure/TShortByteProcedure;)Z: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap((-1234));
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortByteMap0.retainEntries((TShortByteProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.values([B)[B: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      short[] shortArray0 = new short[4];
      byte[] byteArray0 = new byte[1];
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(shortArray0, byteArray0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      tUnmodifiableShortByteMap0.values(tShortByteHashMap0._states);
      assertEquals("{}", tShortByteHashMap0.toString());
      assertEquals("{}", tUnmodifiableShortByteMap0.toString());
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.adjustOrPutValue(SBB)B: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap((int) (short)0, (float) (short)0, (short) (-201), (byte)112);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortByteMap0.adjustOrPutValue((short) (byte)112, (byte)112, (byte)112);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsKey(S)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(101);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      boolean boolean0 = tUnmodifiableShortByteMap0.containsKey((short)1673);
      assertEquals(false, boolean0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortByteMap0.putAll((Map<? extends Short, ? extends Byte>) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.hashCode()I: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap((-1234));
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      int int0 = tUnmodifiableShortByteMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.transformValues(Lgnu/trove/function/TByteFunction;)V: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortByteMap0.transformValues((TByteFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.getNoEntryValue()B: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(101);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      byte byte0 = tUnmodifiableShortByteMap0.getNoEntryValue();
      assertEquals((byte)0, byte0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.clear()V: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortByteMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.<init>(Lgnu/trove/map/TShortByteMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = null;
      try {
        tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keySet()Lgnu/trove/set/TShortSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keySet()Lgnu/trove/set/TShortSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(1600);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      TUnmodifiableShortSet tUnmodifiableShortSet0 = (TUnmodifiableShortSet)tUnmodifiableShortByteMap0.keySet();
      assertNotNull(tUnmodifiableShortSet0);
      
      TUnmodifiableShortSet tUnmodifiableShortSet1 = (TUnmodifiableShortSet)tUnmodifiableShortByteMap0.keySet();
      assertSame(tUnmodifiableShortSet1, tUnmodifiableShortSet0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.valueCollection()Lgnu/trove/TByteCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.valueCollection()Lgnu/trove/TByteCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      TUnmodifiableByteCollection tUnmodifiableByteCollection0 = (TUnmodifiableByteCollection)tUnmodifiableShortByteMap0.valueCollection();
      assertNotNull(tUnmodifiableByteCollection0);
      
      TUnmodifiableByteCollection tUnmodifiableByteCollection1 = (TUnmodifiableByteCollection)tUnmodifiableShortByteMap0.valueCollection();
      assertSame(tUnmodifiableByteCollection1, tUnmodifiableByteCollection0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.<init>(Lgnu/trove/map/TShortByteMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      boolean boolean0 = tUnmodifiableShortByteMap0.equals((Object) "ITA");
      assertEquals(false, boolean0);
  }
}

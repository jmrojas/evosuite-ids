/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TDoubleFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCollection;
import gnu.trove.map.TByteDoubleMap;
import gnu.trove.map.hash.TByteDoubleHashMap;
import gnu.trove.procedure.TByteDoubleProcedure;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TDoubleProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableByteDoubleMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap$1.hasNext()Z: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap$1.key()B: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableByteDoubleMap;)V: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap$1.advance()V: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap$1.value()D: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.iterator()Lgnu/trove/iterator/TByteDoubleIterator;: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.size()I: root-Branch
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.<init>(Lgnu/trove/map/TByteDoubleMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      double[] doubleArray0 = new double[4];
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap(byteArray0, doubleArray0);
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      TByteDoubleHashMap tByteDoubleHashMap1 = new TByteDoubleHashMap((TByteDoubleMap) tUnmodifiableByteDoubleMap0);
      assertEquals(1, tUnmodifiableByteDoubleMap0.size());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap();
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      boolean boolean0 = tUnmodifiableByteDoubleMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.values()[D: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap();
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      double[] doubleArray0 = tUnmodifiableByteDoubleMap0.values();
      assertNotNull(doubleArray0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.adjustValue(BD)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap(1995, 1995);
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteDoubleMap0.adjustValue((byte)24, (byte)24);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.keys([B)[B: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      double[] doubleArray0 = new double[4];
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap(byteArray0, doubleArray0);
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      byte[] byteArray1 = tUnmodifiableByteDoubleMap0.keys(tByteDoubleHashMap0._set);
      assertFalse(byteArray0.equals(byteArray1));
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap();
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      String string0 = tUnmodifiableByteDoubleMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.getNoEntryKey()B: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap();
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      byte byte0 = tUnmodifiableByteDoubleMap0.getNoEntryKey();
      assertEquals((byte)0, byte0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.forEachEntry(Lgnu/trove/procedure/TByteDoubleProcedure;)Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap((int) (byte)0);
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      boolean boolean0 = tUnmodifiableByteDoubleMap0.forEachEntry((TByteDoubleProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.put(BD)D: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap((int) (byte)0);
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteDoubleMap0.put((byte)0, 0.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      double[] doubleArray0 = new double[6];
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap(byteArray0, doubleArray0);
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteDoubleMap0.forEachValue((TDoubleProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.retainEntries(Lgnu/trove/procedure/TByteDoubleProcedure;)Z: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap((-34), (float) (-34), (byte) (-10), (double) (-34));
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteDoubleMap0.retainEntries((TByteDoubleProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.putIfAbsent(BD)D: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap();
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteDoubleMap0.putIfAbsent((byte)0, (byte)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.keys()[B: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap(1995, 1995);
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      byte[] byteArray0 = tUnmodifiableByteDoubleMap0.keys();
      assertNotNull(byteArray0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.get(B)D: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap();
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      double double0 = tUnmodifiableByteDoubleMap0.get((byte)0);
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.getNoEntryValue()D: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap();
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      double double0 = tUnmodifiableByteDoubleMap0.getNoEntryValue();
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.clear()V: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap();
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteDoubleMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.increment(B)Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap();
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteDoubleMap0.increment((byte)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.hashCode()I: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap();
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      int int0 = tUnmodifiableByteDoubleMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.remove(B)D: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      double[] doubleArray0 = new double[7];
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap(byteArray0, doubleArray0);
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteDoubleMap0.remove((byte)2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.values([D)[D: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      double[] doubleArray0 = new double[4];
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap(byteArray0, doubleArray0);
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      double[] doubleArray1 = new double[1];
      double[] doubleArray2 = tUnmodifiableByteDoubleMap0.values(doubleArray1);
      assertSame(doubleArray2, doubleArray1);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.adjustOrPutValue(BDD)D: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap((int) (byte)0, (float) (byte)0, (byte)0, (double) (byte)0);
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteDoubleMap0.adjustOrPutValue((byte)0, (byte)0, (byte)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.containsValue(D)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap();
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      boolean boolean0 = tUnmodifiableByteDoubleMap0.containsValue(0.0);
      assertEquals(false, boolean0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.containsKey(B)Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      double[] doubleArray0 = new double[6];
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap(byteArray0, doubleArray0);
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      boolean boolean0 = tUnmodifiableByteDoubleMap0.containsKey((byte)18);
      assertEquals(false, boolean0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap();
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      boolean boolean0 = tUnmodifiableByteDoubleMap0.forEachKey((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.putAll(Lgnu/trove/map/TByteDoubleMap;)V: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap();
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteDoubleMap0.putAll((TByteDoubleMap) tByteDoubleHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap((-1521), (-1521));
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      HashMap<Byte, Double> hashMap0 = new HashMap<Byte, Double>();
      // Undeclared exception!
      try {
        tUnmodifiableByteDoubleMap0.putAll((Map<? extends Byte, ? extends Double>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap((-18));
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteDoubleMap0.transformValues((TDoubleFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.<init>(Lgnu/trove/map/TByteDoubleMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = null;
      try {
        tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.keySet()Lgnu/trove/set/TByteSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.keySet()Lgnu/trove/set/TByteSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      double[] doubleArray0 = new double[4];
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap(byteArray0, doubleArray0);
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      TUnmodifiableByteSet tUnmodifiableByteSet0 = (TUnmodifiableByteSet)tUnmodifiableByteDoubleMap0.keySet();
      assertNotNull(tUnmodifiableByteSet0);
      
      TUnmodifiableByteSet tUnmodifiableByteSet1 = (TUnmodifiableByteSet)tUnmodifiableByteDoubleMap0.keySet();
      assertSame(tUnmodifiableByteSet1, tUnmodifiableByteSet0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap();
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      TUnmodifiableDoubleCollection tUnmodifiableDoubleCollection0 = (TUnmodifiableDoubleCollection)tUnmodifiableByteDoubleMap0.valueCollection();
      assertNotNull(tUnmodifiableDoubleCollection0);
      
      TUnmodifiableDoubleCollection tUnmodifiableDoubleCollection1 = (TUnmodifiableDoubleCollection)tUnmodifiableByteDoubleMap0.valueCollection();
      assertSame(tUnmodifiableDoubleCollection1, tUnmodifiableDoubleCollection0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableByteDoubleMap.<init>(Lgnu/trove/map/TByteDoubleMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap();
      TUnmodifiableByteDoubleMap tUnmodifiableByteDoubleMap0 = new TUnmodifiableByteDoubleMap((TByteDoubleMap) tByteDoubleHashMap0);
      boolean boolean0 = tUnmodifiableByteDoubleMap0.equals((Object) "{}");
      assertEquals(false, boolean0);
  }
}

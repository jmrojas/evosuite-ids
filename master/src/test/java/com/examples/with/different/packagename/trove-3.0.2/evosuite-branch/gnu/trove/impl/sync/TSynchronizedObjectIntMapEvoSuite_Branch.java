/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TIntFunction;
import gnu.trove.impl.sync.TSynchronizedIntCollection;
import gnu.trove.impl.sync.TSynchronizedObjectIntMap;
import gnu.trove.iterator.TObjectIntIterator;
import gnu.trove.map.TObjectIntMap;
import gnu.trove.map.custom_hash.TObjectIntCustomHashMap;
import gnu.trove.map.hash.TObjectIntHashMap;
import gnu.trove.procedure.TIntProcedure;
import gnu.trove.procedure.TObjectIntProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedObjectIntMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.containsKey(Ljava/lang/Object;)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedObjectIntMap.<init>(Lgnu/trove/map/TObjectIntMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>(3, 3, 3);
      Locale locale0 = Locale.ENGLISH;
      TSynchronizedObjectIntMap<Object> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0, (Object) "");
      boolean boolean0 = tSynchronizedObjectIntMap0.containsKey((Object) locale0);
      assertEquals(false, boolean0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.putAll(Ljava/util/Map;)V: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedObjectIntMap.<init>(Lgnu/trove/map/TObjectIntMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test1()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Object> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      TSynchronizedObjectIntMap<Object> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntCustomHashMap0);
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      tSynchronizedObjectIntMap0.putAll((Map<?, ? extends Integer>) hashMap0);
      assertEquals("{}", tSynchronizedObjectIntMap0.toString());
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.size()I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedObjectIntMap.getNoEntryValue()I: root-Branch
   * 3 gnu.trove.impl.sync.TSynchronizedObjectIntMap.forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>(3, 3, 3);
      TSynchronizedObjectIntMap<Object> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0, (Object) "");
      TObjectIntCustomHashMap<Object> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectIntMap<?>) tSynchronizedObjectIntMap0);
      assertEquals(3, tObjectIntCustomHashMap0.getNoEntryValue());
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>((-1178));
      TSynchronizedObjectIntMap<Integer> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Integer>((TObjectIntMap<Integer>) tObjectIntHashMap0, (Object) "Deutsch");
      Integer[] integerArray0 = new Integer[15];
      ToObjectArrayProceedure<Integer> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Integer>(integerArray0);
      boolean boolean0 = tSynchronizedObjectIntMap0.forEachKey((TObjectProcedure<? super Integer>) toObjectArrayProceedure0);
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.transformValues(Lgnu/trove/function/TIntFunction;)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>();
      TSynchronizedObjectIntMap<String> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<String>((TObjectIntMap<String>) tObjectIntCustomHashMap0);
      // Undeclared exception!
      try {
        tSynchronizedObjectIntMap0.transformValues((TIntFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.keys()[Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>();
      TSynchronizedObjectIntMap<String> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<String>((TObjectIntMap<String>) tObjectIntCustomHashMap0);
      Object[] objectArray0 = tSynchronizedObjectIntMap0.keys();
      assertNotNull(objectArray0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.remove(Ljava/lang/Object;)I: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>(16, 16);
      TSynchronizedObjectIntMap<Integer> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Integer>((TObjectIntMap<Integer>) tObjectIntHashMap0);
      int int0 = tSynchronizedObjectIntMap0.remove((Object) "");
      assertEquals(0, int0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.containsValue(I)Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>(16, 16);
      TSynchronizedObjectIntMap<Integer> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Integer>((TObjectIntMap<Integer>) tObjectIntHashMap0);
      boolean boolean0 = tSynchronizedObjectIntMap0.containsValue(16);
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.adjustValue(Ljava/lang/Object;I)Z: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>(0, 0, 0);
      TSynchronizedObjectIntMap<Integer> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Integer>((TObjectIntMap<Integer>) tObjectIntHashMap0);
      boolean boolean0 = tSynchronizedObjectIntMap0.adjustValue((Integer) 0, 0);
      assertEquals(false, boolean0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.retainEntries(Lgnu/trove/procedure/TObjectIntProcedure;)Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>(0);
      TSynchronizedObjectIntMap<Object> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      boolean boolean0 = tSynchronizedObjectIntMap0.retainEntries((TObjectIntProcedure<? super Object>) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.hashCode()I: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>();
      TSynchronizedObjectIntMap<String> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<String>((TObjectIntMap<String>) tObjectIntCustomHashMap0);
      int int0 = tSynchronizedObjectIntMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.get(Ljava/lang/Object;)I: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>();
      TSynchronizedObjectIntMap<Object> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0, (Object) "Deutsch");
      int int0 = tSynchronizedObjectIntMap0.get((Object) true);
      assertEquals(0, int0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-16));
      TSynchronizedObjectIntMap<Integer> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Integer>((TObjectIntMap<Integer>) tObjectIntCustomHashMap0);
      boolean boolean0 = tSynchronizedObjectIntMap0.forEachValue((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.put(Ljava/lang/Object;I)I: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>();
      TSynchronizedObjectIntMap<String> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<String>((TObjectIntMap<String>) tObjectIntCustomHashMap0);
      // Undeclared exception!
      try {
        tSynchronizedObjectIntMap0.put("", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.clear()V: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-16));
      TSynchronizedObjectIntMap<Integer> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Integer>((TObjectIntMap<Integer>) tObjectIntCustomHashMap0);
      tSynchronizedObjectIntMap0.clear();
      assertEquals(0, tSynchronizedObjectIntMap0.getNoEntryValue());
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.putAll(Lgnu/trove/map/TObjectIntMap;)V: root-Branch
   */

//   @Test
//   public void test15()  throws Throwable  {
//       TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>(3, 3, 3);
//       TSynchronizedObjectIntMap<Object> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0, (Object) "");
//       tSynchronizedObjectIntMap0.putAll((TObjectIntMap<?>) tObjectIntHashMap0);
//       assertEquals(3.0F, tObjectIntHashMap0.getAutoCompactionFactor(), 0.01F);
//   }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>(3, 3, 3);
      TSynchronizedObjectIntMap<Object> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0, (Object) "");
      Object[] objectArray0 = tSynchronizedObjectIntMap0.keys(tObjectIntHashMap0._set);
      assertNotNull(objectArray0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>();
      TSynchronizedObjectIntMap<String> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<String>((TObjectIntMap<String>) tObjectIntCustomHashMap0);
      String string0 = tSynchronizedObjectIntMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.adjustOrPutValue(Ljava/lang/Object;II)I: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>(0);
      TSynchronizedObjectIntMap<Object> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      TObjectIntHashMap<String> tObjectIntHashMap1 = new TObjectIntHashMap<String>(0, 0, 0);
      int int0 = tSynchronizedObjectIntMap0.adjustOrPutValue((Object) tObjectIntHashMap1, 0, 0);
      assertEquals("{{}=0}", tObjectIntHashMap0.toString());
      assertEquals(0, int0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-16));
      TSynchronizedObjectIntMap<Integer> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Integer>((TObjectIntMap<Integer>) tObjectIntCustomHashMap0);
      boolean boolean0 = tSynchronizedObjectIntMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.iterator()Lgnu/trove/iterator/TObjectIntIterator;: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>((-1178));
      TSynchronizedObjectIntMap<Integer> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Integer>((TObjectIntMap<Integer>) tObjectIntHashMap0, (Object) "Deutsch");
      TObjectIntIterator<Integer> tObjectIntIterator0 = tSynchronizedObjectIntMap0.iterator();
      assertEquals(false, tObjectIntIterator0.hasNext());
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>();
      TSynchronizedObjectIntMap<Object> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0, (Object) "Deutsch");
      boolean boolean0 = tSynchronizedObjectIntMap0.equals((Object) "Deutsch");
      assertEquals(false, boolean0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.increment(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>();
      TSynchronizedObjectIntMap<Object> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0, (Object) "Deutsch");
      boolean boolean0 = tSynchronizedObjectIntMap0.increment((Object) "Deutsch");
      assertEquals(false, boolean0);
  }

  //Test case number: 23
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.values()[I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedObjectIntMap.<init>(Lgnu/trove/map/TObjectIntMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test23()  throws Throwable  {
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>(0, 0, 0);
      TSynchronizedObjectIntMap<Integer> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Integer>((TObjectIntMap<Integer>) tObjectIntHashMap0);
      int[] intArray0 = tSynchronizedObjectIntMap0.values();
      assertNotNull(intArray0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.putIfAbsent(Ljava/lang/Object;I)I: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 3);
      TSynchronizedObjectIntMap<String> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<String>((TObjectIntMap<String>) tObjectIntCustomHashMap0, (Object) "");
      tSynchronizedObjectIntMap0.putIfAbsent("", 3);
      assertEquals(false, tObjectIntCustomHashMap0.isEmpty());
      assertEquals("{=3}", tSynchronizedObjectIntMap0.toString());
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.values([I)[I: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>((-1178));
      TSynchronizedObjectIntMap<Integer> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Integer>((TObjectIntMap<Integer>) tObjectIntHashMap0, (Object) "Deutsch");
      int[] intArray0 = new int[1];
      int[] intArray1 = tSynchronizedObjectIntMap0.values(intArray0);
      assertSame(intArray1, intArray0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.<init>(Lgnu/trove/map/TObjectIntMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test26()  throws Throwable  {
      TSynchronizedObjectIntMap<Object> tSynchronizedObjectIntMap0 = null;
      try {
        tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Object>((TObjectIntMap<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.keySet()Ljava/util/Set;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedObjectIntMap.keySet()Ljava/util/Set;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>();
      TSynchronizedObjectIntMap<Object> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0, (Object) "Deutsch");
      Set<Object> set0 = tSynchronizedObjectIntMap0.keySet();
      assertNotNull(set0);
      
      Set<Object> set1 = tSynchronizedObjectIntMap0.keySet();
      assertSame(set1, set0);
  }

  //Test case number: 28
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectIntMap.valueCollection()Lgnu/trove/TIntCollection;: I11 Branch 3 IFNONNULL L122 - true
   * 2 gnu.trove.impl.sync.TSynchronizedObjectIntMap.valueCollection()Lgnu/trove/TIntCollection;: I11 Branch 3 IFNONNULL L122 - false
   * 3 gnu.trove.impl.sync.TSynchronizedObjectIntMap.<init>(Lgnu/trove/map/TObjectIntMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test28()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>();
      TSynchronizedObjectIntMap<Object> tSynchronizedObjectIntMap0 = new TSynchronizedObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0, (Object) "Deutsch");
      TSynchronizedIntCollection tSynchronizedIntCollection0 = (TSynchronizedIntCollection)tSynchronizedObjectIntMap0.valueCollection();
      assertNotNull(tSynchronizedIntCollection0);
      
      TSynchronizedIntCollection tSynchronizedIntCollection1 = (TSynchronizedIntCollection)tSynchronizedObjectIntMap0.valueCollection();
      assertSame(tSynchronizedIntCollection1, tSynchronizedIntCollection0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TFloatCollection;
import gnu.trove.impl.sync.TSynchronizedFloatList;
import gnu.trove.impl.sync.TSynchronizedFloatSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatList;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessFloatList;
import gnu.trove.list.TFloatList;
import gnu.trove.list.array.TFloatArrayList;
import gnu.trove.list.linked.TFloatLinkedList;
import gnu.trove.procedure.TFloatProcedure;
import gnu.trove.set.TFloatSet;
import gnu.trove.set.hash.TFloatHashSet;
import java.util.Collection;
import java.util.LinkedList;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableFloatCollectionEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.clear()V: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.<init>(Lgnu/trove/TFloatCollection;)V: I7 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = new TUnmodifiableFloatCollection((TFloatCollection) tFloatLinkedList0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatCollection0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.retainAll(Ljava/util/Collection;)Z: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet((-1531), (-1531));
      TUnmodifiableFloatSet tUnmodifiableFloatSet0 = new TUnmodifiableFloatSet((TFloatSet) tFloatHashSet0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      try {
        tUnmodifiableFloatSet0.retainAll((Collection<?>) linkedList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.removeAll(Lgnu/trove/TFloatCollection;)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(1509);
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatList0.removeAll((TFloatCollection) tFloatArrayList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.containsAll(Ljava/util/Collection;)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatLinkedList0);
      boolean boolean0 = tUnmodifiableFloatList0.containsAll((Collection<?>) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 5 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.containsAll(Lgnu/trove/TFloatCollection;)Z: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.iterator()Lgnu/trove/iterator/TFloatIterator;: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection$1.hasNext()Z: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection$1.next()F: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableFloatCollection;)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      float[] floatArray0 = new float[6];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      boolean boolean0 = tUnmodifiableRandomAccessFloatList0.containsAll((TFloatCollection) tUnmodifiableRandomAccessFloatList0);
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.containsAll([F)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatLinkedList0);
      float[] floatArray0 = new float[8];
      boolean boolean0 = tUnmodifiableFloatList0.containsAll(floatArray0);
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.remove(F)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(1304);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.remove(0.0F);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.addAll([F)Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet((-10));
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = new TUnmodifiableFloatCollection((TFloatCollection) tFloatHashSet0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatCollection0.addAll(tFloatHashSet0._set);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.isEmpty()Z: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(1304);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      boolean boolean0 = tUnmodifiableRandomAccessFloatList0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.toArray([F)[F: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatLinkedList0);
      float[] floatArray0 = new float[8];
      float[] floatArray1 = tUnmodifiableFloatList0.toArray(floatArray0);
      assertSame(floatArray0, floatArray1);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.removeAll([F)Z: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      float[] floatArray0 = new float[6];
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet(floatArray0);
      TSynchronizedFloatSet tSynchronizedFloatSet0 = new TSynchronizedFloatSet((TFloatSet) tFloatHashSet0);
      TUnmodifiableFloatSet tUnmodifiableFloatSet0 = new TUnmodifiableFloatSet((TFloatSet) tSynchronizedFloatSet0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatSet0.removeAll(floatArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.addAll(Ljava/util/Collection;)Z: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      float[] floatArray0 = new float[5];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, 0.0F);
      TSynchronizedFloatList tSynchronizedFloatList0 = new TSynchronizedFloatList((TFloatList) tFloatArrayList0, (Object) "");
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tSynchronizedFloatList0);
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      // Undeclared exception!
      try {
        tUnmodifiableFloatList0.addAll((Collection<? extends Float>) linkedList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.contains(F)Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(564.1366F);
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = new TUnmodifiableFloatCollection((TFloatCollection) tFloatLinkedList0);
      boolean boolean0 = tUnmodifiableFloatCollection0.contains(0.0F);
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.toArray()[F: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = new TUnmodifiableFloatCollection((TFloatCollection) tFloatLinkedList0);
      float[] floatArray0 = tUnmodifiableFloatCollection0.toArray();
      assertNotNull(floatArray0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.getNoEntryValue()F: root-Branch
   */

//   @Test
//   public void test14()  throws Throwable  {
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(1304);
//       TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
//       float float0 = tUnmodifiableRandomAccessFloatList0.getNoEntryValue();
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.removeAll(Ljava/util/Collection;)Z: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = new TUnmodifiableFloatCollection((TFloatCollection) tFloatLinkedList0);
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      // Undeclared exception!
      try {
        tUnmodifiableFloatCollection0.removeAll((Collection<?>) linkedList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.add(F)Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      float[] floatArray0 = new float[6];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, Float.NEGATIVE_INFINITY);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.add(Float.NEGATIVE_INFINITY);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.retainAll([F)Z: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      float[] floatArray0 = new float[24];
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(564.1366F);
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = new TUnmodifiableFloatCollection((TFloatCollection) tFloatLinkedList0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatCollection0.retainAll(floatArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.addAll(Lgnu/trove/TFloatCollection;)Z: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = new TUnmodifiableFloatCollection((TFloatCollection) tFloatLinkedList0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatCollection0.addAll((TFloatCollection) tFloatLinkedList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.size()I: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet((-10));
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = new TUnmodifiableFloatCollection((TFloatCollection) tFloatHashSet0);
      int int0 = tUnmodifiableFloatCollection0.size();
      assertEquals(0, int0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatLinkedList0);
      boolean boolean0 = tUnmodifiableFloatList0.forEach((TFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.retainAll(Lgnu/trove/TFloatCollection;)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatLinkedList0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatList0.retainAll((TFloatCollection) tFloatLinkedList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.toString()Ljava/lang/String;: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.<init>(Lgnu/trove/TFloatCollection;)V: I7 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test22()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatLinkedList0);
      String string0 = tUnmodifiableFloatList0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.<init>(Lgnu/trove/TFloatCollection;)V: I7 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test23()  throws Throwable  {
      TUnmodifiableFloatSet tUnmodifiableFloatSet0 = null;
      try {
        tUnmodifiableFloatSet0 = new TUnmodifiableFloatSet((TFloatSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TFloatCollection;
import gnu.trove.impl.sync.TSynchronizedFloatList;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessFloatList;
import gnu.trove.list.TFloatList;
import gnu.trove.list.array.TFloatArrayList;
import gnu.trove.list.linked.TFloatLinkedList;
import gnu.trove.procedure.TFloatProcedure;
import gnu.trove.set.hash.TFloatHashSet;
import java.util.Collection;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableFloatCollectionEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 9 covered goals:
   * 1 Weak Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.size()I:63 - DeleteField: cLgnu/trove/TFloatCollection;
   * 2 Weak Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.size()I:63 - DeleteStatement: size()I
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.size()I: root-Branch
   * 4 Weak Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.<init>(Lgnu/trove/TFloatCollection;)V:58 - ReplaceVariable c -> c
   * 5 Weak Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.<init>(Lgnu/trove/TFloatCollection;)V:58 - ReplaceComparisonOperator != null -> = null
   * 6 Weak Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.<init>(Lgnu/trove/TFloatCollection;)V:60 - ReplaceVariable c -> c
   * 7 Weak Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.size()I:63 - DeleteField: cLgnu/trove/TFloatCollection;
   * 8 Weak Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.size()I:63 - DeleteStatement: size()I
   * 9 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.<init>(Lgnu/trove/TFloatCollection;)V: I7 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      int int0 = tUnmodifiableRandomAccessFloatList0.size();
      assertEquals(0, int0);
  }

  //Test case number: 1
  /*
   * 5 covered goals:
   * 1 Weak Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.isEmpty()Z:64 - DeleteField: cLgnu/trove/TFloatCollection;
   * 2 Weak Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.isEmpty()Z: root-Branch
   * 4 Weak Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.isEmpty()Z:64 - DeleteField: cLgnu/trove/TFloatCollection;
   * 5 Weak Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   */

  @Test
  public void test1()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(4.6843777F);
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatLinkedList0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tUnmodifiableFloatList0);
      boolean boolean0 = tUnmodifiableRandomAccessFloatList0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 7 covered goals:
   * 1 Weak Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.contains(F)Z:65 - DeleteField: cLgnu/trove/TFloatCollection;
   * 2 Weak Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.contains(F)Z:65 - InsertUnaryOp Negation of o
   * 3 Weak Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.contains(F)Z:65 - DeleteStatement: contains(F)Z
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.contains(F)Z: root-Branch
   * 5 Weak Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.contains(F)Z:65 - DeleteField: cLgnu/trove/TFloatCollection;
   * 6 Weak Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.contains(F)Z:65 - InsertUnaryOp Negation of o
   * 7 Weak Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.contains(F)Z:65 - DeleteStatement: contains(F)Z
   */

  @Test
  public void test2()  throws Throwable  {
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet(0, 0);
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(tFloatHashSet0._set);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      boolean boolean0 = tUnmodifiableRandomAccessFloatList0.contains((float) 0);
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * 1 Weak Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.toArray()[F:66 - DeleteField: cLgnu/trove/TFloatCollection;
   * 2 Weak Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.toArray()[F:66 - DeleteStatement: toArray()[F
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.toArray()[F: root-Branch
   * 4 Weak Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.toArray()[F:66 - DeleteField: cLgnu/trove/TFloatCollection;
   * 5 Weak Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.toArray()[F:66 - DeleteStatement: toArray()[F
   */

  @Test
  public void test3()  throws Throwable  {
      float[] floatArray0 = new float[10];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = new TUnmodifiableFloatCollection((TFloatCollection) tFloatArrayList0);
      float[] floatArray1 = tUnmodifiableFloatCollection0.toArray();
      assertFalse(floatArray0.equals(floatArray1));
  }

  //Test case number: 4
  /*
   * 5 covered goals:
   * 1 Weak Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.toArray([F)[F:67 - DeleteStatement: toArray([F)[F
   * 2 Weak Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.toArray([F)[F:67 - DeleteField: cLgnu/trove/TFloatCollection;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.toArray([F)[F: root-Branch
   * 4 Weak Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.toArray([F)[F:67 - DeleteStatement: toArray([F)[F
   * 5 Weak Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.toArray([F)[F:67 - DeleteField: cLgnu/trove/TFloatCollection;
   */

  @Test
  public void test4()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatLinkedList0);
      float[] floatArray0 = new float[2];
      float[] floatArray1 = tUnmodifiableFloatList0.toArray(floatArray0);
      assertSame(floatArray1, floatArray0);
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 Weak Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.toString()Ljava/lang/String;:68 - DeleteStatement: toString()Ljava/lang/String;
   * 2 Weak Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.toString()Ljava/lang/String;:68 - DeleteField: cLgnu/trove/TFloatCollection;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.toString()Ljava/lang/String;: root-Branch
   * 4 Weak Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.toString()Ljava/lang/String;:68 - DeleteStatement: toString()Ljava/lang/String;
   * 5 Weak Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.toString()Ljava/lang/String;:68 - DeleteField: cLgnu/trove/TFloatCollection;
   */

  @Test
  public void test5()  throws Throwable  {
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet(0, 0);
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(tFloatHashSet0._set);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      String string0 = tUnmodifiableRandomAccessFloatList0.toString();
      assertEquals("{0.0, 0.0, 0.0}", string0);
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 Weak Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.getNoEntryValue()F:69 - DeleteStatement: getNoEntryValue()F
   * 2 Weak Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.getNoEntryValue()F:69 - DeleteField: cLgnu/trove/TFloatCollection;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.getNoEntryValue()F: root-Branch
   * 4 Weak Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.getNoEntryValue()F:69 - DeleteStatement: getNoEntryValue()F
   * 5 Weak Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.getNoEntryValue()F:69 - DeleteField: cLgnu/trove/TFloatCollection;
   */

//   @Test
//   public void test6()  throws Throwable  {
//       float[] floatArray0 = new float[10];
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
//       TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = new TUnmodifiableFloatCollection((TFloatCollection) tFloatArrayList0);
//       float float0 = tUnmodifiableFloatCollection0.getNoEntryValue();
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 7
  /*
   * 5 covered goals:
   * 1 Weak Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:70 - DeleteStatement: forEach(Lgnu/trove/procedure/TFloatProcedure;)Z
   * 2 Weak Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:70 - DeleteField: cLgnu/trove/TFloatCollection;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   * 4 Weak Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:70 - DeleteStatement: forEach(Lgnu/trove/procedure/TFloatProcedure;)Z
   * 5 Weak Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z:70 - DeleteField: cLgnu/trove/TFloatCollection;
   */

  @Test
  public void test7()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatLinkedList0);
      boolean boolean0 = tUnmodifiableFloatList0.forEach((TFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 8
  /*
   * 19 covered goals:
   * 1 Weak Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection$1.hasNext()Z:76 - DeleteField: iLgnu/trove/iterator/TFloatIterator;
   * 2 Weak Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection$1.hasNext()Z:76 - DeleteStatement: hasNext()Z
   * 3 Weak Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection$1.next()F:77 - DeleteField: iLgnu/trove/iterator/TFloatIterator;
   * 4 Weak Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection$1.next()F:77 - DeleteStatement: next()F
   * 5 Weak Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.containsAll(Lgnu/trove/TFloatCollection;)Z:86 - ReplaceVariable coll -> c
   * 6 Weak Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.containsAll(Lgnu/trove/TFloatCollection;)Z:86 - DeleteField: cLgnu/trove/TFloatCollection;
   * 7 Weak Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.containsAll(Lgnu/trove/TFloatCollection;)Z:86 - DeleteStatement: containsAll(Lgnu/trove/TFloatCollection;)Z
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.containsAll(Lgnu/trove/TFloatCollection;)Z: root-Branch
   * 9 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.iterator()Lgnu/trove/iterator/TFloatIterator;: root-Branch
   * 10 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection$1.hasNext()Z: root-Branch
   * 11 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection$1.next()F: root-Branch
   * 12 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableFloatCollection;)V: root-Branch
   * 13 Weak Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection$1.hasNext()Z:76 - DeleteField: iLgnu/trove/iterator/TFloatIterator;
   * 14 Weak Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection$1.hasNext()Z:76 - DeleteStatement: hasNext()Z
   * 15 Weak Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection$1.next()F:77 - DeleteField: iLgnu/trove/iterator/TFloatIterator;
   * 16 Weak Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection$1.next()F:77 - DeleteStatement: next()F
   * 17 Weak Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.containsAll(Lgnu/trove/TFloatCollection;)Z:86 - ReplaceVariable coll -> c
   * 18 Weak Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.containsAll(Lgnu/trove/TFloatCollection;)Z:86 - DeleteField: cLgnu/trove/TFloatCollection;
   * 19 Weak Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.containsAll(Lgnu/trove/TFloatCollection;)Z:86 - DeleteStatement: containsAll(Lgnu/trove/TFloatCollection;)Z
   */

  @Test
  public void test8()  throws Throwable  {
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet(0, 0);
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(tFloatHashSet0._set);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      Float float0 = new Float((double) 0);
      TSynchronizedFloatList tSynchronizedFloatList0 = new TSynchronizedFloatList((TFloatList) tUnmodifiableRandomAccessFloatList0, (Object) float0);
      boolean boolean0 = tUnmodifiableRandomAccessFloatList0.containsAll((TFloatCollection) tSynchronizedFloatList0);
      assertEquals(true, boolean0);
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 Weak Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.containsAll(Ljava/util/Collection;)Z:85 - DeleteStatement: containsAll(Ljava/util/Collection;)Z
   * 2 Weak Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.containsAll(Ljava/util/Collection;)Z:85 - DeleteField: cLgnu/trove/TFloatCollection;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.containsAll(Ljava/util/Collection;)Z: root-Branch
   * 4 Weak Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.containsAll(Ljava/util/Collection;)Z:85 - DeleteStatement: containsAll(Ljava/util/Collection;)Z
   * 5 Weak Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.containsAll(Ljava/util/Collection;)Z:85 - DeleteField: cLgnu/trove/TFloatCollection;
   */

  @Test
  public void test9()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatLinkedList0);
      boolean boolean0 = tUnmodifiableFloatList0.containsAll((Collection<?>) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 Weak Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.containsAll([F)Z:87 - DeleteField: cLgnu/trove/TFloatCollection;
   * 2 Weak Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.containsAll([F)Z:87 - DeleteStatement: containsAll([F)Z
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.containsAll([F)Z: root-Branch
   * 4 Weak Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.containsAll([F)Z:87 - DeleteField: cLgnu/trove/TFloatCollection;
   * 5 Weak Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.containsAll([F)Z:87 - DeleteStatement: containsAll([F)Z
   */

  @Test
  public void test10()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatLinkedList0);
      float[] floatArray0 = new float[2];
      boolean boolean0 = tUnmodifiableFloatList0.containsAll(floatArray0);
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.retainAll(Lgnu/trove/TFloatCollection;)Z: root-Branch
   * 2 Weak Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.<init>(Lgnu/trove/TFloatCollection;)V:58 - ReplaceVariable c -> c
   * 3 Weak Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.<init>(Lgnu/trove/TFloatCollection;)V:60 - ReplaceVariable c -> c
   */

  @Test
  public void test11()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.retainAll((TFloatCollection) tFloatArrayList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.<init>(Lgnu/trove/TFloatCollection;)V: I7 Branch 1 IFNONNULL L58 - false
   * 2 Weak Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection.<init>(Lgnu/trove/TFloatCollection;)V:58 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test12()  throws Throwable  {
      TUnmodifiableFloatList tUnmodifiableFloatList0 = null;
      try {
        tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TByteFunction;
import gnu.trove.impl.sync.TSynchronizedByteCollection;
import gnu.trove.impl.sync.TSynchronizedObjectByteMap;
import gnu.trove.iterator.TObjectByteIterator;
import gnu.trove.map.TObjectByteMap;
import gnu.trove.map.custom_hash.TObjectByteCustomHashMap;
import gnu.trove.map.hash.TObjectByteHashMap;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TObjectByteProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedObjectByteMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.remove(Ljava/lang/Object;)B: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedObjectByteMap.<init>(Lgnu/trove/map/TObjectByteMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<String> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (int) (byte)0);
      TSynchronizedObjectByteMap<String> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<String>((TObjectByteMap<String>) tObjectByteCustomHashMap0);
      byte byte0 = tSynchronizedObjectByteMap0.remove((Object) false);
      assertEquals((byte)0, byte0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.clear()V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>();
      TSynchronizedObjectByteMap<Integer> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Integer>((TObjectByteMap<Integer>) tObjectByteCustomHashMap0);
      tSynchronizedObjectByteMap0.clear();
      assertEquals(0, tSynchronizedObjectByteMap0.size());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (int) (byte)0);
      TSynchronizedObjectByteMap<Object> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Object>((TObjectByteMap<Object>) tObjectByteCustomHashMap0);
      HashMap<String, Byte> hashMap0 = new HashMap<String, Byte>();
      tSynchronizedObjectByteMap0.putAll((Map<?, ? extends Byte>) hashMap0);
      assertEquals(0, tSynchronizedObjectByteMap0.size());
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.get(Ljava/lang/Object;)B: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedObjectByteMap.size()I: root-Branch
   * 3 gnu.trove.impl.sync.TSynchronizedObjectByteMap.<init>(Lgnu/trove/map/TObjectByteMap;Ljava/lang/Object;)V: root-Branch
   * 4 gnu.trove.impl.sync.TSynchronizedObjectByteMap.getNoEntryValue()B: root-Branch
   * 5 gnu.trove.impl.sync.TSynchronizedObjectByteMap.forEachEntry(Lgnu/trove/procedure/TObjectByteProcedure;)Z: root-Branch
   */

//   @Test
//   public void test3()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       TObjectByteCustomHashMap<String> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1);
//       TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap1 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1, (float) 1, (byte)66);
//       TSynchronizedObjectByteMap<Integer> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Integer>((TObjectByteMap<Integer>) tObjectByteCustomHashMap1);
//       TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap2 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectByteMap<?>) tSynchronizedObjectByteMap0);
//       TSynchronizedObjectByteMap<String> tSynchronizedObjectByteMap1 = new TSynchronizedObjectByteMap<String>((TObjectByteMap<String>) tObjectByteCustomHashMap0, (Object) "");
//       tSynchronizedObjectByteMap1.get((Object) tObjectByteCustomHashMap2);
//       assertEquals(66, tObjectByteCustomHashMap2.getNoEntryValue());
//       assertEquals(66, tSynchronizedObjectByteMap0.getNoEntryValue());
//   }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>();
      TSynchronizedObjectByteMap<Integer> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Integer>((TObjectByteMap<Integer>) tObjectByteCustomHashMap0);
      boolean boolean0 = tSynchronizedObjectByteMap0.equals((Object) "fran\u00E7ais");
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.keys()[Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TObjectByteHashMap<Object> tObjectByteHashMap0 = new TObjectByteHashMap<Object>((int) (byte)1, (float) 0);
      TSynchronizedObjectByteMap<Object> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Object>((TObjectByteMap<Object>) tObjectByteHashMap0);
      Object[] objectArray0 = tSynchronizedObjectByteMap0.keys();
      assertNotNull(objectArray0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.containsKey(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TObjectByteHashMap<String> tObjectByteHashMap0 = new TObjectByteHashMap<String>((int) (byte)127);
      TSynchronizedObjectByteMap<String> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<String>((TObjectByteMap<String>) tObjectByteHashMap0);
      boolean boolean0 = tSynchronizedObjectByteMap0.containsKey((Object) tObjectByteHashMap0);
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.putAll(Lgnu/trove/map/TObjectByteMap;)V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) null, 4, (float) 4);
      TSynchronizedObjectByteMap<Integer> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Integer>((TObjectByteMap<Integer>) tObjectByteCustomHashMap0, (Object) "");
      tSynchronizedObjectByteMap0.putAll((TObjectByteMap<? extends Integer>) tObjectByteCustomHashMap0);
      assertEquals(true, tSynchronizedObjectByteMap0.isEmpty());
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.putIfAbsent(Ljava/lang/Object;B)B: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1, (float) 1, (byte)66);
      TSynchronizedObjectByteMap<Integer> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Integer>((TObjectByteMap<Integer>) tObjectByteCustomHashMap0);
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap1 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectByteMap<?>) tSynchronizedObjectByteMap0);
      TSynchronizedObjectByteMap<Object> tSynchronizedObjectByteMap1 = new TSynchronizedObjectByteMap<Object>((TObjectByteMap<Object>) tObjectByteCustomHashMap1);
      byte byte0 = tSynchronizedObjectByteMap1.putIfAbsent((Object) "", (byte)66);
      assertEquals("{=66}", tObjectByteCustomHashMap1.toString());
      assertEquals((byte)66, byte0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.retainEntries(Lgnu/trove/procedure/TObjectByteProcedure;)Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TSynchronizedObjectByteMap<Byte> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Byte>((TObjectByteMap<Byte>) null, (Object) "{}");
      // Undeclared exception!
      try {
        tSynchronizedObjectByteMap0.retainEntries((TObjectByteProcedure<? super Byte>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.hashCode()I: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TObjectByteHashMap<Integer> tObjectByteHashMap0 = new TObjectByteHashMap<Integer>((-13), (float) (byte)0);
      TSynchronizedObjectByteMap<Integer> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Integer>((TObjectByteMap<Integer>) tObjectByteHashMap0, (Object) "/");
      int int0 = tSynchronizedObjectByteMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TObjectByteHashMap<Byte> tObjectByteHashMap0 = new TObjectByteHashMap<Byte>();
      TSynchronizedObjectByteMap<Byte> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Byte>((TObjectByteMap<Byte>) tObjectByteHashMap0);
      boolean boolean0 = tSynchronizedObjectByteMap0.forEachValue((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.values()[B: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TObjectByteCustomHashMap<String> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<String>((HashingStrategy<? super String>) null);
      TSynchronizedObjectByteMap<String> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<String>((TObjectByteMap<String>) tObjectByteCustomHashMap0);
      byte[] byteArray0 = tSynchronizedObjectByteMap0.values();
      assertNotNull(byteArray0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TObjectByteHashMap<Byte> tObjectByteHashMap0 = new TObjectByteHashMap<Byte>();
      TSynchronizedObjectByteMap<Byte> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Byte>((TObjectByteMap<Byte>) tObjectByteHashMap0);
      String string0 = tSynchronizedObjectByteMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.adjustOrPutValue(Ljava/lang/Object;BB)B: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TObjectByteHashMap<Integer> tObjectByteHashMap0 = new TObjectByteHashMap<Integer>((-13), (float) (byte)0);
      TSynchronizedObjectByteMap<Integer> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Integer>((TObjectByteMap<Integer>) tObjectByteHashMap0, (Object) "/");
      byte byte0 = tSynchronizedObjectByteMap0.adjustOrPutValue((Integer) (-13), (byte)0, (byte)0);
      assertEquals(false, tObjectByteHashMap0.isEmpty());
      assertEquals((byte)0, byte0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.adjustValue(Ljava/lang/Object;B)Z: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TObjectByteHashMap<Byte> tObjectByteHashMap0 = new TObjectByteHashMap<Byte>();
      TSynchronizedObjectByteMap<Byte> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Byte>((TObjectByteMap<Byte>) tObjectByteHashMap0);
      boolean boolean0 = tSynchronizedObjectByteMap0.adjustValue((Byte) (byte) (-38), (byte) (-38));
      assertEquals(false, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.iterator()Lgnu/trove/iterator/TObjectByteIterator;: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TObjectByteCustomHashMap<Byte> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Byte>();
      TSynchronizedObjectByteMap<Byte> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Byte>((TObjectByteMap<Byte>) tObjectByteCustomHashMap0);
      TObjectByteIterator<Byte> tObjectByteIterator0 = tSynchronizedObjectByteMap0.iterator();
      assertEquals(false, tObjectByteIterator0.hasNext());
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.containsValue(B)Z: root-Branch
   */

//   @Test
//   public void test17()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1, (float) 1, (byte)66);
//       TSynchronizedObjectByteMap<Integer> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Integer>((TObjectByteMap<Integer>) tObjectByteCustomHashMap0);
//       TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap1 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectByteMap<?>) tSynchronizedObjectByteMap0);
//       TSynchronizedObjectByteMap<Object> tSynchronizedObjectByteMap1 = new TSynchronizedObjectByteMap<Object>((TObjectByteMap<Object>) tObjectByteCustomHashMap1);
//       tSynchronizedObjectByteMap1.containsValue((byte)66);
//       assertEquals(66, tSynchronizedObjectByteMap1.getNoEntryValue());
//       assertEquals(66, tObjectByteCustomHashMap1.getNoEntryValue());
//   }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.transformValues(Lgnu/trove/function/TByteFunction;)V: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TObjectByteCustomHashMap<Byte> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Byte>();
      TSynchronizedObjectByteMap<Byte> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Byte>((TObjectByteMap<Byte>) tObjectByteCustomHashMap0);
      // Undeclared exception!
      try {
        tSynchronizedObjectByteMap0.transformValues((TByteFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) null, 4, (float) 4);
      TSynchronizedObjectByteMap<Integer> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Integer>((TObjectByteMap<Integer>) tObjectByteCustomHashMap0, (Object) "");
      boolean boolean0 = tSynchronizedObjectByteMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.values([B)[B: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TObjectByteHashMap<Integer> tObjectByteHashMap0 = new TObjectByteHashMap<Integer>(0, (float) 0, (byte)1);
      TSynchronizedObjectByteMap<Integer> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Integer>((TObjectByteMap<Integer>) tObjectByteHashMap0, (Object) "");
      byte[] byteArray0 = new byte[6];
      byte[] byteArray1 = tSynchronizedObjectByteMap0.values(byteArray0);
      assertSame(byteArray1, byteArray0);
  }

  //Test case number: 21
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedObjectByteMap.<init>(Lgnu/trove/map/TObjectByteMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<String> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1);
      TSynchronizedObjectByteMap<String> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<String>((TObjectByteMap<String>) tObjectByteCustomHashMap0, (Object) "");
      String[] stringArray0 = new String[4];
      String[] stringArray1 = tSynchronizedObjectByteMap0.keys(stringArray0);
      assertSame(stringArray0, stringArray1);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1, (float) 1, (byte)66);
      TSynchronizedObjectByteMap<Integer> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Integer>((TObjectByteMap<Integer>) tObjectByteCustomHashMap0);
      Integer[] integerArray0 = new Integer[5];
      ToObjectArrayProceedure<Integer> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Integer>(integerArray0);
      boolean boolean0 = tSynchronizedObjectByteMap0.forEachKey((TObjectProcedure<? super Integer>) toObjectArrayProceedure0);
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.put(Ljava/lang/Object;B)B: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1, (float) 1, (byte)66);
      TSynchronizedObjectByteMap<Integer> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Integer>((TObjectByteMap<Integer>) tObjectByteCustomHashMap0);
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap1 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectByteMap<?>) tSynchronizedObjectByteMap0);
      TSynchronizedObjectByteMap<Object> tSynchronizedObjectByteMap1 = new TSynchronizedObjectByteMap<Object>((TObjectByteMap<Object>) tObjectByteCustomHashMap1);
      byte byte0 = tSynchronizedObjectByteMap1.put((Object) null, (byte)66);
      assertEquals(1, tSynchronizedObjectByteMap1.size());
      assertEquals((byte)66, byte0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.increment(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (int) (byte)0);
      TSynchronizedObjectByteMap<Object> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Object>((TObjectByteMap<Object>) tObjectByteCustomHashMap0);
      boolean boolean0 = tSynchronizedObjectByteMap0.increment((Object) tSynchronizedObjectByteMap0);
      assertEquals(false, boolean0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.<init>(Lgnu/trove/map/TObjectByteMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test25()  throws Throwable  {
      TSynchronizedObjectByteMap<Object> tSynchronizedObjectByteMap0 = null;
      try {
        tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Object>((TObjectByteMap<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.keySet()Ljava/util/Set;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedObjectByteMap.keySet()Ljava/util/Set;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test26()  throws Throwable  {
      TObjectByteHashMap<Byte> tObjectByteHashMap0 = new TObjectByteHashMap<Byte>();
      TSynchronizedObjectByteMap<Byte> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Byte>((TObjectByteMap<Byte>) tObjectByteHashMap0);
      Set<Byte> set0 = tSynchronizedObjectByteMap0.keySet();
      assertNotNull(set0);
      
      Set<Byte> set1 = tSynchronizedObjectByteMap0.keySet();
      assertSame(set1, set0);
  }

  //Test case number: 27
  /*
   * 6 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectByteMap.valueCollection()Lgnu/trove/TByteCollection;: I11 Branch 3 IFNONNULL L122 - true
   * 2 gnu.trove.impl.sync.TSynchronizedObjectByteMap.valueCollection()Lgnu/trove/TByteCollection;: I11 Branch 3 IFNONNULL L122 - false
   * 3 gnu.trove.impl.sync.TSynchronizedObjectByteMap.size()I: root-Branch
   * 4 gnu.trove.impl.sync.TSynchronizedObjectByteMap.getNoEntryValue()B: root-Branch
   * 5 gnu.trove.impl.sync.TSynchronizedObjectByteMap.forEachEntry(Lgnu/trove/procedure/TObjectByteProcedure;)Z: root-Branch
   * 6 gnu.trove.impl.sync.TSynchronizedObjectByteMap.<init>(Lgnu/trove/map/TObjectByteMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

//   @Test
//   public void test27()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1, (float) 1, (byte)66);
//       TSynchronizedObjectByteMap<Integer> tSynchronizedObjectByteMap0 = new TSynchronizedObjectByteMap<Integer>((TObjectByteMap<Integer>) tObjectByteCustomHashMap0);
//       TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap1 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectByteMap<?>) tSynchronizedObjectByteMap0);
//       TSynchronizedObjectByteMap<Object> tSynchronizedObjectByteMap1 = new TSynchronizedObjectByteMap<Object>((TObjectByteMap<Object>) tObjectByteCustomHashMap1);
//       TSynchronizedByteCollection tSynchronizedByteCollection0 = (TSynchronizedByteCollection)tSynchronizedObjectByteMap1.valueCollection();
//       assertNotNull(tSynchronizedByteCollection0);
//       
//       TSynchronizedByteCollection tSynchronizedByteCollection1 = (TSynchronizedByteCollection)tSynchronizedObjectByteMap1.valueCollection();
//       assertEquals(66, tSynchronizedObjectByteMap0.getNoEntryValue());
//       assertSame(tSynchronizedByteCollection1, tSynchronizedByteCollection0);
//   }
}

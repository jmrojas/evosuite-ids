/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TDoubleFunction;
import gnu.trove.map.TDoubleDoubleMap;
import gnu.trove.map.hash.TDoubleDoubleHashMap;
import gnu.trove.procedure.TDoubleDoubleProcedure;
import gnu.trove.procedure.TDoubleProcedure;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TDoubleDoubleHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 49 covered goals:
   * 1 gnu.trove.map.hash.TDoubleDoubleHashMap.toString()Ljava/lang/String;: root-Branch
   * 2 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.advance()V: root-Branch
   * 3 gnu.trove.map.hash.TDoubleDoubleHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;Lgnu/trove/map/hash/TDoubleDoubleHashMap;)V: root-Branch
   * 5 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>()V: root-Branch
   * 6 gnu.trove.map.hash.TDoubleDoubleHashMap.put(DD)D: root-Branch
   * 7 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(I)V: root-Branch
   * 8 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(IFDD)V: root-Branch
   * 9 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.value()D: root-Branch
   * 10 gnu.trove.map.hash.TDoubleDoubleHashMap.keySet()Lgnu/trove/set/TDoubleSet;: root-Branch
   * 11 gnu.trove.map.hash.TDoubleDoubleHashMap$1.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 12 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.key()D: root-Branch
   * 13 gnu.trove.map.hash.TDoubleDoubleHashMap.clear()V: root-Branch
   * 14 gnu.trove.map.hash.TDoubleDoubleHashMap$TKeyView.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;)V: root-Branch
   * 15 gnu.trove.map.hash.TDoubleDoubleHashMap.iterator()Lgnu/trove/iterator/TDoubleDoubleIterator;: root-Branch
   * 16 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 17 gnu.trove.map.hash.TDoubleDoubleHashMap.putIfAbsent(DD)D: I9 Branch 39 IFGE L205 - true
   * 18 gnu.trove.map.hash.TDoubleDoubleHashMap.putAll(Lgnu/trove/map/TDoubleDoubleMap;)V: I15 Branch 43 IFEQ L243 - true
   * 19 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I12 Branch 40 IFGE L214 - true
   * 20 gnu.trove.map.hash.TDoubleDoubleHashMap.remove(D)D: I14 Branch 46 IFLT L276 - true
   * 21 gnu.trove.map.hash.TDoubleDoubleHashMap.keys([D)[D: I44 Branch 51 IF_ICMPNE L323 - true
   * 22 gnu.trove.map.hash.TDoubleDoubleHashMap.keys([D)[D: I37 Branch 50 IFLE L322 - true
   * 23 gnu.trove.map.hash.TDoubleDoubleHashMap.keys([D)[D: I10 Branch 49 IF_ICMPGE L315 - true
   * 24 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I37 Branch 55 IFLE L362 - true
   * 25 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I10 Branch 54 IF_ICMPGE L355 - true
   * 26 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 27 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I18 Branch 57 IFLE L376 - true
   * 28 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I44 Branch 56 IF_ICMPNE L363 - true
   * 29 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 30 gnu.trove.map.hash.TDoubleDoubleHashMap.adjustValue(DD)Z: I9 Branch 71 IFGE L477 - false
   * 31 gnu.trove.map.hash.TDoubleDoubleHashMap.putAll(Lgnu/trove/map/TDoubleDoubleMap;)V: I15 Branch 43 IFEQ L243 - false
   * 32 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I41 Branch 41 IFEQ L221 - false
   * 33 gnu.trove.map.hash.TDoubleDoubleHashMap.keys([D)[D: I37 Branch 50 IFLE L322 - false
   * 34 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I37 Branch 55 IFLE L362 - false
   * 35 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I18 Branch 57 IFLE L376 - false
   * 36 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 37 gnu.trove.map.hash.TDoubleDoubleHashMap.keys()[D: I27 Branch 47 IFLE L303 - true
   * 38 gnu.trove.map.hash.TDoubleDoubleHashMap.keys()[D: I34 Branch 48 IF_ICMPNE L304 - true
   * 39 gnu.trove.map.hash.TDoubleDoubleHashMap.keys()[D: I27 Branch 47 IFLE L303 - false
   * 40 gnu.trove.map.hash.TDoubleDoubleHashMap.keys([D)[D: I44 Branch 51 IF_ICMPNE L323 - false
   * 41 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>([D[D)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 42 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 43 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 44 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I41 Branch 41 IFEQ L221 - true
   * 45 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>([D[D)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 46 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 47 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 48 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I12 Branch 40 IFGE L214 - false
   * 49 gnu.trove.map.hash.TDoubleDoubleHashMap.keys([D)[D: I10 Branch 49 IF_ICMPGE L315 - false
   */

  @Test
  public void test0()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap((-2000));
      tDoubleDoubleHashMap1.containsValue(1656.015157932119);
      tDoubleDoubleHashMap1.getNoEntryValue();
      tDoubleDoubleHashMap1.putIfAbsent((-1.0), 0.0);
      TDoubleDoubleHashMap tDoubleDoubleHashMap2 = new TDoubleDoubleHashMap(0, 10.0F, (-261.9360297828265), (double) 10.0F);
      tDoubleDoubleHashMap1.put((-261.9360297828265), (-1929.5482640659038));
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 10.0F;
      double[] doubleArray1 = tDoubleDoubleHashMap2.values(doubleArray0);
      double[] doubleArray2 = tDoubleDoubleHashMap2.keys(doubleArray1);
      tDoubleDoubleHashMap0.putAll((TDoubleDoubleMap) tDoubleDoubleHashMap1);
      TDoubleDoubleHashMap tDoubleDoubleHashMap3 = new TDoubleDoubleHashMap();
      tDoubleDoubleHashMap0.keys(doubleArray2);
      tDoubleDoubleHashMap3.toString();
      tDoubleDoubleHashMap3.putIfAbsent((-1929.5482640659038), 23.22616416200556);
      tDoubleDoubleHashMap1.clear();
      assertEquals(7, tDoubleDoubleHashMap1.capacity());
      assertFalse(tDoubleDoubleHashMap1.equals(tDoubleDoubleHashMap0));
  }

  //Test case number: 1
  /*
   * 21 covered goals:
   * 1 gnu.trove.map.hash.TDoubleDoubleHashMap.setUp(I)I: root-Branch
   * 2 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;Lgnu/trove/map/hash/TDoubleDoubleHashMap;)V: root-Branch
   * 3 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>()V: root-Branch
   * 4 gnu.trove.map.hash.TDoubleDoubleHashMap.put(DD)D: root-Branch
   * 5 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(I)V: root-Branch
   * 6 gnu.trove.map.hash.TDoubleDoubleHashMap.iterator()Lgnu/trove/iterator/TDoubleDoubleIterator;: root-Branch
   * 7 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I40 Branch 35 IFEQ L139 - true
   * 8 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>([D[D)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 9 gnu.trove.map.hash.TDoubleDoubleHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 10 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I54 Branch 36 IFEQ L143 - true
   * 11 gnu.trove.map.hash.TDoubleDoubleHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   * 12 gnu.trove.map.hash.TDoubleDoubleHashMap.putAll(Lgnu/trove/map/TDoubleDoubleMap;)V: I15 Branch 43 IFEQ L243 - true
   * 13 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I12 Branch 40 IFGE L214 - true
   * 14 gnu.trove.map.hash.TDoubleDoubleHashMap.remove(D)D: I14 Branch 46 IFLT L276 - true
   * 15 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   * 16 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I10 Branch 34 IFEQ L133 - false
   * 17 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>([D[D)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 18 gnu.trove.map.hash.TDoubleDoubleHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 19 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I41 Branch 41 IFEQ L221 - false
   * 20 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - false
   * 21 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: I18 Branch 60 IFLE L407 - false
   */

  @Test
  public void test1()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      assertNotNull(doubleArray0);
      
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap((-140));
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap();
      double[] doubleArray1 = tDoubleDoubleHashMap1._set;
      TDoubleDoubleHashMap tDoubleDoubleHashMap2 = new TDoubleDoubleHashMap((TDoubleDoubleMap) tDoubleDoubleHashMap1);
      tDoubleDoubleHashMap2.hashCode();
      TDoubleDoubleHashMap tDoubleDoubleHashMap3 = new TDoubleDoubleHashMap(doubleArray0, doubleArray0);
      String string0 = "";
      String string1 = "]3v#";
      // Undeclared exception!
      try {
        tDoubleDoubleHashMap3.forEachValue((TDoubleProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 35 covered goals:
   * 1 gnu.trove.map.hash.TDoubleDoubleHashMap.setUp(I)I: root-Branch
   * 2 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;Lgnu/trove/map/hash/TDoubleDoubleHashMap;)V: root-Branch
   * 3 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>()V: root-Branch
   * 4 gnu.trove.map.hash.TDoubleDoubleHashMap.put(DD)D: root-Branch
   * 5 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(I)V: root-Branch
   * 6 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(IFDD)V: root-Branch
   * 7 gnu.trove.map.hash.TDoubleDoubleHashMap.keySet()Lgnu/trove/set/TDoubleSet;: root-Branch
   * 8 gnu.trove.map.hash.TDoubleDoubleHashMap$TKeyView.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;)V: root-Branch
   * 9 gnu.trove.map.hash.TDoubleDoubleHashMap.iterator()Lgnu/trove/iterator/TDoubleDoubleIterator;: root-Branch
   * 10 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I40 Branch 35 IFEQ L139 - true
   * 11 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>([D[D)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 12 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I54 Branch 36 IFEQ L143 - true
   * 13 gnu.trove.map.hash.TDoubleDoubleHashMap.values()[D: I34 Branch 53 IF_ICMPNE L344 - true
   * 14 gnu.trove.map.hash.TDoubleDoubleHashMap.values()[D: I27 Branch 52 IFLE L343 - true
   * 15 gnu.trove.map.hash.TDoubleDoubleHashMap.putAll(Lgnu/trove/map/TDoubleDoubleMap;)V: I15 Branch 43 IFEQ L243 - true
   * 16 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I12 Branch 40 IFGE L214 - true
   * 17 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I41 Branch 41 IFEQ L221 - true
   * 18 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I10 Branch 34 IFEQ L133 - false
   * 19 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>([D[D)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 20 gnu.trove.map.hash.TDoubleDoubleHashMap.values()[D: I34 Branch 53 IF_ICMPNE L344 - false
   * 21 gnu.trove.map.hash.TDoubleDoubleHashMap.values()[D: I27 Branch 52 IFLE L343 - false
   * 22 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I12 Branch 40 IFGE L214 - false
   * 23 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I41 Branch 41 IFEQ L221 - false
   * 24 gnu.trove.map.hash.TDoubleDoubleHashMap.retainEntries(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I31 Branch 68 IFLE L453 - true
   * 25 gnu.trove.map.hash.TDoubleDoubleHashMap.retainEntries(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   * 26 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 27 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I18 Branch 57 IFLE L376 - true
   * 28 gnu.trove.map.hash.TDoubleDoubleHashMap.retainEntries(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 29 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I18 Branch 57 IFLE L376 - false
   * 30 gnu.trove.map.hash.TDoubleDoubleHashMap.increment(D)Z: root-Branch
   * 31 gnu.trove.map.hash.TDoubleDoubleHashMap.containsKey(D)Z: root-Branch
   * 32 gnu.trove.map.hash.TDoubleDoubleHashMap.adjustValue(DD)Z: I9 Branch 71 IFGE L477 - true
   * 33 gnu.trove.map.hash.TDoubleDoubleHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V: I18 Branch 66 IFLE L434 - true
   * 34 gnu.trove.map.hash.TDoubleDoubleHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   * 35 gnu.trove.map.hash.TDoubleDoubleHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V: I18 Branch 66 IFLE L434 - false
   */

//   @Test
//   public void test2()  throws Throwable  {
//       double[] doubleArray0 = new double[10];
//       doubleArray0[0] = (-1445.844777424832);
//       doubleArray0[0] = (-1445.844777424832);
//       doubleArray0[1] = (-1547.9765653806428);
//       doubleArray0[2] = 1440.572002980033;
//       doubleArray0[3] = 1440.572002980033;
//       doubleArray0[4] = 1440.572002980033;
//       doubleArray0[3] = (-1547.9765653806428);
//       assertEquals(908.4429167497825, doubleArray0[3], 0.01D);
//       
//       doubleArray0[6] = (-1445.844777424832);
//       doubleArray0[7] = 0.0;
//       doubleArray0[8] = (-1445.844777424832);
//       doubleArray0[9] = (-1379.497781228775);
//       doubleArray0[1] = 1440.572002980033;
//       TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
//       tDoubleDoubleHashMap0.transformValues((TDoubleFunction) null);
//       tDoubleDoubleHashMap0.containsKey((-1.0));
//       doubleArray0[2] = 0.0;
//       doubleArray0[3] = 2.0;
//       doubleArray0[4] = 0.0;
//       doubleArray0[3] = 908.4429167497825;
//       doubleArray0[6] = 0.0;
//       doubleArray0[7] = 1440.572002980033;
//       doubleArray0[8] = Double.NEGATIVE_INFINITY;
//       doubleArray0[9] = (-1.0);
//       TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap(doubleArray0, doubleArray0);
//       tDoubleDoubleHashMap1.values();
//       TDoubleDoubleHashMap tDoubleDoubleHashMap2 = new TDoubleDoubleHashMap();
//       tDoubleDoubleHashMap1.keySet();
//       tDoubleDoubleHashMap1.increment((-1.0));
//       tDoubleDoubleHashMap2.keySet();
//       TDoubleDoubleHashMap tDoubleDoubleHashMap3 = new TDoubleDoubleHashMap(0, 1134.2073F, (-666.6357306610995), 0.0);
//       tDoubleDoubleHashMap2.putAll((TDoubleDoubleMap) tDoubleDoubleHashMap3);
//       TDoubleDoubleHashMap tDoubleDoubleHashMap4 = new TDoubleDoubleHashMap();
//       TDoubleDoubleHashMap tDoubleDoubleHashMap5 = new TDoubleDoubleHashMap(0);
//       tDoubleDoubleHashMap1.adjustValue((-1.0), 0.0);
//       assertEquals("{-1.0=0.0, 908.4429167497825=908.4429167497825, -1445.844777424832=-1445.844777424832, 1440.572002980033=1440.572002980033, -Infinity=-Infinity, 0.0=0.0}", tDoubleDoubleHashMap1.toString());
//       
//       File file0 = new File("yyS/c~eV", "yyS/c~eV");
//       tDoubleDoubleHashMap5.containsValue(0.0);
//       tDoubleDoubleHashMap5.retainEntries((TDoubleDoubleProcedure) null);
//       tDoubleDoubleHashMap5.capacity();
//       TDoubleDoubleHashMap tDoubleDoubleHashMap6 = new TDoubleDoubleHashMap();
//       assertEquals(23, tDoubleDoubleHashMap6.capacity());
//   }

  //Test case number: 3
  /*
   * 12 covered goals:
   * 1 gnu.trove.map.hash.TDoubleDoubleHashMap.setUp(I)I: root-Branch
   * 2 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;Lgnu/trove/map/hash/TDoubleDoubleHashMap;)V: root-Branch
   * 3 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(I)V: root-Branch
   * 4 gnu.trove.map.hash.TDoubleDoubleHashMap.iterator()Lgnu/trove/iterator/TDoubleDoubleIterator;: root-Branch
   * 5 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I40 Branch 35 IFEQ L139 - true
   * 6 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I54 Branch 36 IFEQ L143 - true
   * 7 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 8 gnu.trove.map.hash.TDoubleDoubleHashMap.putAll(Lgnu/trove/map/TDoubleDoubleMap;)V: I15 Branch 43 IFEQ L243 - true
   * 9 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I18 Branch 57 IFLE L376 - true
   * 10 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I10 Branch 34 IFEQ L133 - false
   * 11 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I18 Branch 57 IFLE L376 - false
   * 12 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(IF)V: root-Branch
   */

//   @Test
//   public void test3()  throws Throwable  {
//       TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(8, 8);
//       assertEquals(0.5F, tDoubleDoubleHashMap0.getAutoCompactionFactor(), 0.01F);
//   }

  //Test case number: 4
  /*
   * 13 covered goals:
   * 1 gnu.trove.map.hash.TDoubleDoubleHashMap.setUp(I)I: root-Branch
   * 2 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;Lgnu/trove/map/hash/TDoubleDoubleHashMap;)V: root-Branch
   * 3 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(I)V: root-Branch
   * 4 gnu.trove.map.hash.TDoubleDoubleHashMap.iterator()Lgnu/trove/iterator/TDoubleDoubleIterator;: root-Branch
   * 5 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I40 Branch 35 IFEQ L139 - true
   * 6 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I54 Branch 36 IFEQ L143 - true
   * 7 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 8 gnu.trove.map.hash.TDoubleDoubleHashMap.putAll(Lgnu/trove/map/TDoubleDoubleMap;)V: I15 Branch 43 IFEQ L243 - true
   * 9 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I18 Branch 57 IFLE L376 - true
   * 10 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I10 Branch 34 IFEQ L133 - false
   * 11 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I18 Branch 57 IFLE L376 - false
   * 12 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(IF)V: root-Branch
   * 13 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(IFDD)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(1872, 1872, 1872, 1872);
      // Undeclared exception!
      try {
        tDoubleDoubleHashMap0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 32 covered goals:
   * 1 gnu.trove.map.hash.TDoubleDoubleHashMap.toString()Ljava/lang/String;: root-Branch
   * 2 gnu.trove.map.hash.TDoubleDoubleHashMap.setUp(I)I: root-Branch
   * 3 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;Lgnu/trove/map/hash/TDoubleDoubleHashMap;)V: root-Branch
   * 4 gnu.trove.map.hash.TDoubleDoubleHashMap$1.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 5 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(IFDD)V: root-Branch
   * 6 gnu.trove.map.hash.TDoubleDoubleHashMap.iterator()Lgnu/trove/iterator/TDoubleDoubleIterator;: root-Branch
   * 7 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 8 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 9 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 10 gnu.trove.map.hash.TDoubleDoubleHashMap.putAll(Lgnu/trove/map/TDoubleDoubleMap;)V: I15 Branch 43 IFEQ L243 - true
   * 11 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 12 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I10 Branch 34 IFEQ L133 - false
   * 13 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I40 Branch 35 IFEQ L139 - false
   * 14 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I54 Branch 36 IFEQ L143 - false
   * 15 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 16 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 17 gnu.trove.map.hash.TDoubleDoubleHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - true
   * 18 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.advance()V: root-Branch
   * 19 gnu.trove.map.hash.TDoubleDoubleHashMap.put(DD)D: root-Branch
   * 20 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.value()D: root-Branch
   * 21 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.key()D: root-Branch
   * 22 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I39 Branch 65 IFNE L422 - true
   * 23 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I12 Branch 40 IFGE L214 - true
   * 24 gnu.trove.map.hash.TDoubleDoubleHashMap.values()[D: I34 Branch 53 IF_ICMPNE L344 - true
   * 25 gnu.trove.map.hash.TDoubleDoubleHashMap.values()[D: I27 Branch 52 IFLE L343 - true
   * 26 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 27 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 28 gnu.trove.map.hash.TDoubleDoubleHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - false
   * 29 gnu.trove.map.hash.TDoubleDoubleHashMap.putAll(Lgnu/trove/map/TDoubleDoubleMap;)V: I15 Branch 43 IFEQ L243 - false
   * 30 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I41 Branch 41 IFEQ L221 - false
   * 31 gnu.trove.map.hash.TDoubleDoubleHashMap$1.execute(DD)Z: I4 Branch 115 IFEQ L1233 - false
   * 32 gnu.trove.map.hash.TDoubleDoubleHashMap.values()[D: I27 Branch 52 IFLE L343 - false
   */

  @Test
  public void test5()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(757, 757, 757, 757);
      tDoubleDoubleHashMap0.values();
      HashMap<Double, Double> hashMap0 = new HashMap<Double, Double>();
      Double double0 = new Double(2.0);
      hashMap0.put(double0, double0);
      tDoubleDoubleHashMap0.putAll((Map<? extends Double, ? extends Double>) hashMap0);
      tDoubleDoubleHashMap0.toString();
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      assertEquals(false, tDoubleDoubleHashMap0.isEmpty());
      assertEquals(1, tDoubleDoubleHashMap1.size());
  }

  //Test case number: 6
  /*
   * 37 covered goals:
   * 1 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.advance()V: root-Branch
   * 2 gnu.trove.map.hash.TDoubleDoubleHashMap.setUp(I)I: root-Branch
   * 3 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;Lgnu/trove/map/hash/TDoubleDoubleHashMap;)V: root-Branch
   * 4 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>()V: root-Branch
   * 5 gnu.trove.map.hash.TDoubleDoubleHashMap.put(DD)D: root-Branch
   * 6 gnu.trove.map.hash.TDoubleDoubleHashMap$TValueView.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;)V: root-Branch
   * 7 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(IFDD)V: root-Branch
   * 8 gnu.trove.map.hash.TDoubleDoubleHashMap.increment(D)Z: root-Branch
   * 9 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.value()D: root-Branch
   * 10 gnu.trove.map.hash.TDoubleDoubleHashMap.valueCollection()Lgnu/trove/TDoubleCollection;: root-Branch
   * 11 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.key()D: root-Branch
   * 12 gnu.trove.map.hash.TDoubleDoubleHashMap.iterator()Lgnu/trove/iterator/TDoubleDoubleIterator;: root-Branch
   * 13 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 14 gnu.trove.map.hash.TDoubleDoubleHashMap.putIfAbsent(DD)D: I9 Branch 39 IFGE L205 - true
   * 15 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 16 gnu.trove.map.hash.TDoubleDoubleHashMap.putAll(Lgnu/trove/map/TDoubleDoubleMap;)V: I15 Branch 43 IFEQ L243 - true
   * 17 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I12 Branch 40 IFGE L214 - true
   * 18 gnu.trove.map.hash.TDoubleDoubleHashMap.keys()[D: I27 Branch 47 IFLE L303 - true
   * 19 gnu.trove.map.hash.TDoubleDoubleHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - true
   * 20 gnu.trove.map.hash.TDoubleDoubleHashMap.keys()[D: I34 Branch 48 IF_ICMPNE L304 - true
   * 21 gnu.trove.map.hash.TDoubleDoubleHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 22 gnu.trove.map.hash.TDoubleDoubleHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   * 23 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I10 Branch 34 IFEQ L133 - false
   * 24 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I40 Branch 35 IFEQ L139 - false
   * 25 gnu.trove.map.hash.TDoubleDoubleHashMap.adjustValue(DD)Z: I9 Branch 71 IFGE L477 - false
   * 26 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I54 Branch 36 IFEQ L143 - false
   * 27 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 28 gnu.trove.map.hash.TDoubleDoubleHashMap.putAll(Lgnu/trove/map/TDoubleDoubleMap;)V: I15 Branch 43 IFEQ L243 - false
   * 29 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I41 Branch 41 IFEQ L221 - false
   * 30 gnu.trove.map.hash.TDoubleDoubleHashMap.keys()[D: I27 Branch 47 IFLE L303 - false
   * 31 gnu.trove.map.hash.TDoubleDoubleHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - false
   * 32 gnu.trove.map.hash.TDoubleDoubleHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 33 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I37 Branch 55 IFLE L362 - true
   * 34 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I44 Branch 56 IF_ICMPNE L363 - true
   * 35 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I37 Branch 55 IFLE L362 - false
   * 36 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I10 Branch 54 IF_ICMPGE L355 - false
   * 37 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I44 Branch 56 IF_ICMPNE L363 - false
   */

  @Test
  public void test6()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      double[] doubleArray0 = tDoubleDoubleHashMap0._set;
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap(2, 0.0F, (-223.49193105998884), (-223.49193105998884));
      tDoubleDoubleHashMap0.iterator();
      tDoubleDoubleHashMap1.getNoEntryKey();
      tDoubleDoubleHashMap1.hashCode();
      tDoubleDoubleHashMap1.ensureCapacity(2);
      assertEquals("{}", tDoubleDoubleHashMap1.toString());
      
      tDoubleDoubleHashMap1.isEmpty();
      TDoubleDoubleHashMap tDoubleDoubleHashMap2 = new TDoubleDoubleHashMap(1792, 1792, 1792, 1792);
      double[] doubleArray1 = tDoubleDoubleHashMap1.keys();
      tDoubleDoubleHashMap2.valueCollection();
      tDoubleDoubleHashMap2.compact();
      tDoubleDoubleHashMap2.putIfAbsent(650.707613929631, (-223.49193105998884));
      TDoubleDoubleHashMap tDoubleDoubleHashMap3 = new TDoubleDoubleHashMap((TDoubleDoubleMap) tDoubleDoubleHashMap2);
      tDoubleDoubleHashMap0.valueCollection();
      tDoubleDoubleHashMap3.isEmpty();
      tDoubleDoubleHashMap2.values(doubleArray1);
      tDoubleDoubleHashMap3.ensureCapacity(0);
      assertEquals("{650.707613929631=-223.49193105998884}", tDoubleDoubleHashMap2.toString());
      
      tDoubleDoubleHashMap1.reenableAutoCompaction(false);
      boolean boolean0 = tDoubleDoubleHashMap0.increment(2.0);
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 18 covered goals:
   * 1 gnu.trove.map.hash.TDoubleDoubleHashMap.setUp(I)I: root-Branch
   * 2 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(I)V: root-Branch
   * 3 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I37 Branch 55 IFLE L362 - true
   * 4 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I10 Branch 54 IF_ICMPGE L355 - true
   * 5 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I44 Branch 56 IF_ICMPNE L363 - true
   * 6 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I37 Branch 55 IFLE L362 - false
   * 7 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;Lgnu/trove/map/hash/TDoubleDoubleHashMap;)V: root-Branch
   * 8 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(IFDD)V: root-Branch
   * 9 gnu.trove.map.hash.TDoubleDoubleHashMap.iterator()Lgnu/trove/iterator/TDoubleDoubleIterator;: root-Branch
   * 10 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I40 Branch 35 IFEQ L139 - true
   * 11 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I54 Branch 36 IFEQ L143 - true
   * 12 gnu.trove.map.hash.TDoubleDoubleHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 13 gnu.trove.map.hash.TDoubleDoubleHashMap.putAll(Lgnu/trove/map/TDoubleDoubleMap;)V: I15 Branch 43 IFEQ L243 - true
   * 14 gnu.trove.map.hash.TDoubleDoubleHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 15 gnu.trove.map.hash.TDoubleDoubleHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 16 gnu.trove.map.hash.TDoubleDoubleHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 17 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I10 Branch 34 IFEQ L133 - false
   * 18 gnu.trove.map.hash.TDoubleDoubleHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   */

  @Test
  public void test7()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(1843);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (double) 1843;
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap(1843, 220.74931F, 1788.0410107331147, 1374.550908753875);
      boolean boolean0 = tDoubleDoubleHashMap1.equals((Object) tDoubleDoubleHashMap1);
      assertEquals(true, boolean0);
      
      doubleArray0[3] = (double) 1843;
      doubleArray0[4] = (double) 1843;
      doubleArray0[6] = (double) 1843;
      TDoubleDoubleHashMap tDoubleDoubleHashMap2 = new TDoubleDoubleHashMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      assertEquals(23, tDoubleDoubleHashMap2.capacity());
      assertEquals(0.0, tDoubleDoubleHashMap2.getNoEntryValue(), 0.01D);
      assertEquals(0.0, tDoubleDoubleHashMap2.getNoEntryKey(), 0.01D);
      
      double[] doubleArray1 = tDoubleDoubleHashMap0.values(doubleArray0);
      assertNotNull(doubleArray1);
      assertSame(doubleArray0, doubleArray1);
  }

  //Test case number: 8
  /*
   * 35 covered goals:
   * 1 gnu.trove.map.hash.TDoubleDoubleHashMap.toString()Ljava/lang/String;: root-Branch
   * 2 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.advance()V: root-Branch
   * 3 gnu.trove.map.hash.TDoubleDoubleHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;Lgnu/trove/map/hash/TDoubleDoubleHashMap;)V: root-Branch
   * 5 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>()V: root-Branch
   * 6 gnu.trove.map.hash.TDoubleDoubleHashMap.put(DD)D: root-Branch
   * 7 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(I)V: root-Branch
   * 8 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(IFDD)V: root-Branch
   * 9 gnu.trove.map.hash.TDoubleDoubleHashMap.containsKey(D)Z: root-Branch
   * 10 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.value()D: root-Branch
   * 11 gnu.trove.map.hash.TDoubleDoubleHashMap.keySet()Lgnu/trove/set/TDoubleSet;: root-Branch
   * 12 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.key()D: root-Branch
   * 13 gnu.trove.map.hash.TDoubleDoubleHashMap$1.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 14 gnu.trove.map.hash.TDoubleDoubleHashMap$TKeyView.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;)V: root-Branch
   * 15 gnu.trove.map.hash.TDoubleDoubleHashMap.iterator()Lgnu/trove/iterator/TDoubleDoubleIterator;: root-Branch
   * 16 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 17 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 18 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 19 gnu.trove.map.hash.TDoubleDoubleHashMap.putAll(Lgnu/trove/map/TDoubleDoubleMap;)V: I15 Branch 43 IFEQ L243 - true
   * 20 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I12 Branch 40 IFGE L214 - true
   * 21 gnu.trove.map.hash.TDoubleDoubleHashMap.adjustOrPutValue(DDD)D: I9 Branch 72 IFGE L491 - true
   * 22 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 23 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 24 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 25 gnu.trove.map.hash.TDoubleDoubleHashMap.putAll(Lgnu/trove/map/TDoubleDoubleMap;)V: I15 Branch 43 IFEQ L243 - false
   * 26 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I41 Branch 41 IFEQ L221 - false
   * 27 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 28 gnu.trove.map.hash.TDoubleDoubleHashMap.adjustOrPutValue(DDD)D: I58 Branch 73 IFEQ L502 - false
   * 29 gnu.trove.map.hash.TDoubleDoubleHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - false
   * 30 gnu.trove.map.hash.TDoubleDoubleHashMap$1.execute(DD)Z: I4 Branch 115 IFEQ L1233 - true
   * 31 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I39 Branch 65 IFNE L422 - true
   * 32 gnu.trove.map.hash.TDoubleDoubleHashMap$1.execute(DD)Z: I4 Branch 115 IFEQ L1233 - false
   * 33 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 34 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I41 Branch 41 IFEQ L221 - true
   * 35 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I12 Branch 40 IFGE L214 - false
   */

  @Test
  public void test8()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      assertEquals(23, tDoubleDoubleHashMap0.capacity());
  }

  //Test case number: 9
  /*
   * 33 covered goals:
   * 1 gnu.trove.map.hash.TDoubleDoubleHashMap.setUp(I)I: root-Branch
   * 2 gnu.trove.map.hash.TDoubleDoubleHashMap.keySet()Lgnu/trove/set/TDoubleSet;: root-Branch
   * 3 gnu.trove.map.hash.TDoubleDoubleHashMap.put(DD)D: root-Branch
   * 4 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(I)V: root-Branch
   * 5 gnu.trove.map.hash.TDoubleDoubleHashMap$TKeyView.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;)V: root-Branch
   * 6 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(IF)V: root-Branch
   * 7 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>([D[D)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 8 gnu.trove.map.hash.TDoubleDoubleHashMap.keys()[D: I34 Branch 48 IF_ICMPNE L304 - true
   * 9 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I37 Branch 55 IFLE L362 - true
   * 10 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I10 Branch 54 IF_ICMPGE L355 - true
   * 11 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I12 Branch 40 IFGE L214 - true
   * 12 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I44 Branch 56 IF_ICMPNE L363 - true
   * 13 gnu.trove.map.hash.TDoubleDoubleHashMap.keys()[D: I27 Branch 47 IFLE L303 - true
   * 14 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>([D[D)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 15 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I37 Branch 55 IFLE L362 - false
   * 16 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I44 Branch 56 IF_ICMPNE L363 - false
   * 17 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I41 Branch 41 IFEQ L221 - false
   * 18 gnu.trove.map.hash.TDoubleDoubleHashMap.keys()[D: I27 Branch 47 IFLE L303 - false
   * 19 gnu.trove.map.hash.TDoubleDoubleHashMap.adjustOrPutValue(DDD)D: I9 Branch 72 IFGE L491 - true
   * 20 gnu.trove.map.hash.TDoubleDoubleHashMap.adjustOrPutValue(DDD)D: I58 Branch 73 IFEQ L502 - false
   * 21 gnu.trove.map.hash.TDoubleDoubleHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   * 22 gnu.trove.map.hash.TDoubleDoubleHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V: I18 Branch 66 IFLE L434 - false
   * 23 gnu.trove.map.hash.TDoubleDoubleHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V: I25 Branch 67 IF_ICMPNE L435 - false
   * 24 gnu.trove.map.hash.TDoubleDoubleHashMap.toString()Ljava/lang/String;: root-Branch
   * 25 gnu.trove.map.hash.TDoubleDoubleHashMap$1.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 26 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 27 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I39 Branch 65 IFNE L422 - true
   * 28 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 29 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 30 gnu.trove.map.hash.TDoubleDoubleHashMap$1.execute(DD)Z: I4 Branch 115 IFEQ L1233 - false
   * 31 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 32 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I41 Branch 41 IFEQ L221 - true
   * 33 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I12 Branch 40 IFGE L214 - false
   */

  @Test
  public void test9()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(1, 1);
      tDoubleDoubleHashMap0.keys();
      tDoubleDoubleHashMap0.put(0.0, 1737.4836291084168);
      // Undeclared exception!
      try {
        tDoubleDoubleHashMap0.transformValues((TDoubleFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 27 covered goals:
   * 1 gnu.trove.map.hash.TDoubleDoubleHashMap.setUp(I)I: root-Branch
   * 2 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>()V: root-Branch
   * 3 gnu.trove.map.hash.TDoubleDoubleHashMap.put(DD)D: root-Branch
   * 4 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(I)V: root-Branch
   * 5 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 6 gnu.trove.map.hash.TDoubleDoubleHashMap.putIfAbsent(DD)D: I9 Branch 39 IFGE L205 - true
   * 7 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 8 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I12 Branch 40 IFGE L214 - true
   * 9 gnu.trove.map.hash.TDoubleDoubleHashMap.adjustOrPutValue(DDD)D: I9 Branch 72 IFGE L491 - true
   * 10 gnu.trove.map.hash.TDoubleDoubleHashMap.remove(D)D: I14 Branch 46 IFLT L276 - true
   * 11 gnu.trove.map.hash.TDoubleDoubleHashMap.keys()[D: I27 Branch 47 IFLE L303 - true
   * 12 gnu.trove.map.hash.TDoubleDoubleHashMap.keys()[D: I34 Branch 48 IF_ICMPNE L304 - true
   * 13 gnu.trove.map.hash.TDoubleDoubleHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 14 gnu.trove.map.hash.TDoubleDoubleHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   * 15 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I31 Branch 59 IFNE L377 - true
   * 16 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 17 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 18 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I41 Branch 41 IFEQ L221 - false
   * 19 gnu.trove.map.hash.TDoubleDoubleHashMap.keys()[D: I27 Branch 47 IFLE L303 - false
   * 20 gnu.trove.map.hash.TDoubleDoubleHashMap.adjustOrPutValue(DDD)D: I58 Branch 73 IFEQ L502 - false
   * 21 gnu.trove.map.hash.TDoubleDoubleHashMap.get(D)D: I9 Branch 44 IFGE L253 - false
   * 22 gnu.trove.map.hash.TDoubleDoubleHashMap.keys()[D: I34 Branch 48 IF_ICMPNE L304 - false
   * 23 gnu.trove.map.hash.TDoubleDoubleHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 24 gnu.trove.map.hash.TDoubleDoubleHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - false
   * 25 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I31 Branch 59 IFNE L377 - false
   * 26 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I25 Branch 58 IF_ICMPNE L377 - false
   * 27 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I18 Branch 57 IFLE L376 - false
   */

  @Test
  public void test10()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      tDoubleDoubleHashMap0.adjustOrPutValue((-1500.515238968924), 262.0668891763348, 0.0);
      assertEquals("{-1500.515238968924=0.0}", tDoubleDoubleHashMap0.toString());
      
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap();
      tDoubleDoubleHashMap1.putIfAbsent((-506.50251792683423), (-1210.655890023704));
      TDoubleDoubleHashMap tDoubleDoubleHashMap2 = new TDoubleDoubleHashMap((-1693));
      tDoubleDoubleHashMap1.hashCode();
      tDoubleDoubleHashMap1.trimToSize();
      tDoubleDoubleHashMap1.trimToSize();
      tDoubleDoubleHashMap1.hashCode();
      double[] doubleArray0 = tDoubleDoubleHashMap1._set;
      tDoubleDoubleHashMap1.remove(Double.POSITIVE_INFINITY);
      tDoubleDoubleHashMap1.put(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
      tDoubleDoubleHashMap1.capacity();
      tDoubleDoubleHashMap1.hashCode();
      tDoubleDoubleHashMap1.reenableAutoCompaction(false);
      tDoubleDoubleHashMap1.setAutoCompactionFactor(0.0F);
      tDoubleDoubleHashMap1.containsValue(0.0);
      tDoubleDoubleHashMap1.get(0.0);
      tDoubleDoubleHashMap1.trimToSize();
      tDoubleDoubleHashMap1.capacity();
      tDoubleDoubleHashMap1.keys();
      tDoubleDoubleHashMap1.remove((-1.0));
      tDoubleDoubleHashMap1.hashCode();
      TDoubleDoubleHashMap tDoubleDoubleHashMap3 = new TDoubleDoubleHashMap();
      assertEquals(23, tDoubleDoubleHashMap3.capacity());
  }

  //Test case number: 11
  /*
   * 31 covered goals:
   * 1 gnu.trove.map.hash.TDoubleDoubleHashMap.toString()Ljava/lang/String;: root-Branch
   * 2 gnu.trove.map.hash.TDoubleDoubleHashMap.setUp(I)I: root-Branch
   * 3 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>()V: root-Branch
   * 4 gnu.trove.map.hash.TDoubleDoubleHashMap.put(DD)D: root-Branch
   * 5 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(I)V: root-Branch
   * 6 gnu.trove.map.hash.TDoubleDoubleHashMap.removeAt(I)V: root-Branch
   * 7 gnu.trove.map.hash.TDoubleDoubleHashMap$1.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 8 gnu.trove.map.hash.TDoubleDoubleHashMap.clear()V: root-Branch
   * 9 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>([D[D)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 10 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 11 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I39 Branch 65 IFNE L422 - true
   * 12 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I12 Branch 40 IFGE L214 - true
   * 13 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I41 Branch 41 IFEQ L221 - true
   * 14 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 15 gnu.trove.map.hash.TDoubleDoubleHashMap.remove(D)D: I14 Branch 46 IFLT L276 - true
   * 16 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>([D[D)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 17 gnu.trove.map.hash.TDoubleDoubleHashMap$1.execute(DD)Z: I4 Branch 115 IFEQ L1233 - false
   * 18 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 19 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I12 Branch 40 IFGE L214 - false
   * 20 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I41 Branch 41 IFEQ L221 - false
   * 21 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 22 gnu.trove.map.hash.TDoubleDoubleHashMap.remove(D)D: I14 Branch 46 IFLT L276 - false
   * 23 gnu.trove.map.hash.TDoubleDoubleHashMap$TValueView.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;)V: root-Branch
   * 24 gnu.trove.map.hash.TDoubleDoubleHashMap.increment(D)Z: root-Branch
   * 25 gnu.trove.map.hash.TDoubleDoubleHashMap.valueCollection()Lgnu/trove/TDoubleCollection;: root-Branch
   * 26 gnu.trove.map.hash.TDoubleDoubleHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - true
   * 27 gnu.trove.map.hash.TDoubleDoubleHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - true
   * 28 gnu.trove.map.hash.TDoubleDoubleHashMap.adjustValue(DD)Z: I9 Branch 71 IFGE L477 - false
   * 29 gnu.trove.map.hash.TDoubleDoubleHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - false
   * 30 gnu.trove.map.hash.TDoubleDoubleHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - false
   * 31 gnu.trove.map.hash.TDoubleDoubleHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - false
   */

  @Test
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) (-1441);
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(doubleArray0, doubleArray0);
      doubleArray0[1] = (double) (-1441);
      double double0 = tDoubleDoubleHashMap0.remove((-1441.0));
      assertEquals((-1441.0), double0, 0.01D);
      
      doubleArray0[2] = (double) (-1441);
      doubleArray0[3] = (double) (-1441);
      doubleArray0[4] = (double) (-1441);
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap();
      tDoubleDoubleHashMap1.clear();
      TDoubleDoubleHashMap tDoubleDoubleHashMap2 = new TDoubleDoubleHashMap(doubleArray0, doubleArray0);
      tDoubleDoubleHashMap2.toString();
      tDoubleDoubleHashMap1.clear();
      tDoubleDoubleHashMap2.remove((-1441.0));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      tDoubleDoubleHashMap0.getNoEntryValue();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tDoubleDoubleHashMap2.writeExternal((ObjectOutput) objectOutputStream0);
      tDoubleDoubleHashMap0.valueCollection();
      tDoubleDoubleHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      tDoubleDoubleHashMap1.increment((double) (-1441));
      tDoubleDoubleHashMap2.valueCollection();
      tDoubleDoubleHashMap0.tempDisableAutoCompaction();
      assertEquals(1, tDoubleDoubleHashMap0.size());
      
      boolean boolean0 = tDoubleDoubleHashMap1.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 12
  /*
   * 27 covered goals:
   * 1 gnu.trove.map.hash.TDoubleDoubleHashMap.setUp(I)I: root-Branch
   * 2 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>()V: root-Branch
   * 3 gnu.trove.map.hash.TDoubleDoubleHashMap.put(DD)D: root-Branch
   * 4 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(IF)V: root-Branch
   * 5 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>([D[D)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 6 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I31 Branch 59 IFNE L377 - true
   * 7 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 8 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I12 Branch 40 IFGE L214 - true
   * 9 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I41 Branch 41 IFEQ L221 - true
   * 10 gnu.trove.map.hash.TDoubleDoubleHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 11 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>([D[D)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 12 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I31 Branch 59 IFNE L377 - false
   * 13 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I25 Branch 58 IF_ICMPNE L377 - false
   * 14 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I18 Branch 57 IFLE L376 - false
   * 15 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I12 Branch 40 IFGE L214 - false
   * 16 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I41 Branch 41 IFEQ L221 - false
   * 17 gnu.trove.map.hash.TDoubleDoubleHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - false
   * 18 gnu.trove.map.hash.TDoubleDoubleHashMap.putIfAbsent(DD)D: I9 Branch 39 IFGE L205 - false
   * 19 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I18 Branch 57 IFLE L376 - true
   * 20 gnu.trove.map.hash.TDoubleDoubleHashMap.putIfAbsent(DD)D: I9 Branch 39 IFGE L205 - true
   * 21 gnu.trove.map.hash.TDoubleDoubleHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 22 gnu.trove.map.hash.TDoubleDoubleHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 23 gnu.trove.map.hash.TDoubleDoubleHashMap.equals(Ljava/lang/Object;)Z: I85 Branch 78 IFEQ L1200 - true
   * 24 gnu.trove.map.hash.TDoubleDoubleHashMap.get(D)D: I9 Branch 44 IFGE L253 - true
   * 25 gnu.trove.map.hash.TDoubleDoubleHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 26 gnu.trove.map.hash.TDoubleDoubleHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 27 gnu.trove.map.hash.TDoubleDoubleHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   */

  @Test
  public void test12()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(101, 101);
      tDoubleDoubleHashMap0.getNoEntryKey();
      double[] doubleArray0 = new double[4];
      doubleArray0[1] = (double) 101;
      doubleArray0[3] = (double) 101;
      tDoubleDoubleHashMap0.putIfAbsent(0.0, 0.0);
      tDoubleDoubleHashMap0.equals((Object) tDoubleDoubleHashMap0);
      double[] doubleArray1 = new double[5];
      double double0 = tDoubleDoubleHashMap0.putIfAbsent(1188.2935332186325, 0.0);
      assertEquals(false, tDoubleDoubleHashMap0.isEmpty());
      
      doubleArray1[0] = 1188.2935332186325;
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap();
      doubleArray1[2] = 1.0;
      doubleArray1[4] = (-76.8164927439822);
      double[] doubleArray2 = new double[5];
      doubleArray2[3] = 1188.2935332186325;
      assertFalse(doubleArray2[3] == double0);
  }

  //Test case number: 13
  /*
   * 39 covered goals:
   * 1 gnu.trove.map.hash.TDoubleDoubleHashMap.toString()Ljava/lang/String;: root-Branch
   * 2 gnu.trove.map.hash.TDoubleDoubleHashMap.setUp(I)I: root-Branch
   * 3 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachKey(Lgnu/trove/procedure/TDoubleProcedure;)Z: root-Branch
   * 4 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;Lgnu/trove/map/hash/TDoubleDoubleHashMap;)V: root-Branch
   * 5 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>()V: root-Branch
   * 6 gnu.trove.map.hash.TDoubleDoubleHashMap.put(DD)D: root-Branch
   * 7 gnu.trove.map.hash.TDoubleDoubleHashMap$TValueView.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;)V: root-Branch
   * 8 gnu.trove.map.hash.TDoubleDoubleHashMap.valueCollection()Lgnu/trove/TDoubleCollection;: root-Branch
   * 9 gnu.trove.map.hash.TDoubleDoubleHashMap$1.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 10 gnu.trove.map.hash.TDoubleDoubleHashMap.iterator()Lgnu/trove/iterator/TDoubleDoubleIterator;: root-Branch
   * 11 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I40 Branch 35 IFEQ L139 - true
   * 12 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>([D[D)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 13 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 14 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 15 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I39 Branch 65 IFNE L422 - true
   * 16 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I54 Branch 36 IFEQ L143 - true
   * 17 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 18 gnu.trove.map.hash.TDoubleDoubleHashMap.putAll(Lgnu/trove/map/TDoubleDoubleMap;)V: I15 Branch 43 IFEQ L243 - true
   * 19 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I12 Branch 40 IFGE L214 - true
   * 20 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I41 Branch 41 IFEQ L221 - true
   * 21 gnu.trove.map.hash.TDoubleDoubleHashMap$1.execute(DD)Z: I4 Branch 115 IFEQ L1233 - true
   * 22 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 23 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I18 Branch 57 IFLE L376 - true
   * 24 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 25 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   * 26 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: I18 Branch 60 IFLE L407 - true
   * 27 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I10 Branch 34 IFEQ L133 - false
   * 28 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>([D[D)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 29 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 30 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 31 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 32 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I12 Branch 40 IFGE L214 - false
   * 33 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I41 Branch 41 IFEQ L221 - false
   * 34 gnu.trove.map.hash.TDoubleDoubleHashMap$1.execute(DD)Z: I4 Branch 115 IFEQ L1233 - false
   * 35 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I18 Branch 57 IFLE L376 - false
   * 36 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 37 gnu.trove.map.hash.TDoubleDoubleHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 38 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(IF)V: root-Branch
   * 39 gnu.trove.map.hash.TDoubleDoubleHashMap.get(D)D: I9 Branch 44 IFGE L253 - true
   */

  @Test
  public void test13()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      tDoubleDoubleHashMap0.ensureCapacity(0);
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap();
      tDoubleDoubleHashMap1.ensureCapacity(244);
      tDoubleDoubleHashMap1.containsValue(892.8859248083753);
      byte[] byteArray0 = tDoubleDoubleHashMap1._states;
      tDoubleDoubleHashMap0.forEachKey((TDoubleProcedure) null);
      TDoubleDoubleHashMap tDoubleDoubleHashMap2 = new TDoubleDoubleHashMap((TDoubleDoubleMap) tDoubleDoubleHashMap1);
      TDoubleDoubleHashMap tDoubleDoubleHashMap3 = new TDoubleDoubleHashMap(tDoubleDoubleHashMap0._set, tDoubleDoubleHashMap0._set);
      double[] doubleArray0 = new double[2];
      tDoubleDoubleHashMap1.iterator();
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 573.0664352061768;
      tDoubleDoubleHashMap1.tempDisableAutoCompaction();
      tDoubleDoubleHashMap2.forEachValue((TDoubleProcedure) null);
      TDoubleDoubleHashMap tDoubleDoubleHashMap4 = new TDoubleDoubleHashMap(doubleArray0, doubleArray0);
      TDoubleDoubleHashMap tDoubleDoubleHashMap5 = new TDoubleDoubleHashMap(244, (-1.0F));
      tDoubleDoubleHashMap4.toString();
      tDoubleDoubleHashMap1.valueCollection();
      assertEquals(557, tDoubleDoubleHashMap1.capacity());
      
      tDoubleDoubleHashMap4.valueCollection();
      tDoubleDoubleHashMap4.trimToSize();
      double double0 = tDoubleDoubleHashMap4.get(0.0);
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 14
  /*
   * 35 covered goals:
   * 1 gnu.trove.map.hash.TDoubleDoubleHashMap.setUp(I)I: root-Branch
   * 2 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;Lgnu/trove/map/hash/TDoubleDoubleHashMap;)V: root-Branch
   * 3 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(I)V: root-Branch
   * 4 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(IFDD)V: root-Branch
   * 5 gnu.trove.map.hash.TDoubleDoubleHashMap.keySet()Lgnu/trove/set/TDoubleSet;: root-Branch
   * 6 gnu.trove.map.hash.TDoubleDoubleHashMap$TKeyView.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;)V: root-Branch
   * 7 gnu.trove.map.hash.TDoubleDoubleHashMap.clear()V: root-Branch
   * 8 gnu.trove.map.hash.TDoubleDoubleHashMap.iterator()Lgnu/trove/iterator/TDoubleDoubleIterator;: root-Branch
   * 9 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 10 gnu.trove.map.hash.TDoubleDoubleHashMap.putIfAbsent(DD)D: I9 Branch 39 IFGE L205 - true
   * 11 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 12 gnu.trove.map.hash.TDoubleDoubleHashMap.putAll(Lgnu/trove/map/TDoubleDoubleMap;)V: I15 Branch 43 IFEQ L243 - true
   * 13 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I12 Branch 40 IFGE L214 - true
   * 14 gnu.trove.map.hash.TDoubleDoubleHashMap.adjustOrPutValue(DDD)D: I58 Branch 73 IFEQ L502 - true
   * 15 gnu.trove.map.hash.TDoubleDoubleHashMap.keys([D)[D: I44 Branch 51 IF_ICMPNE L323 - true
   * 16 gnu.trove.map.hash.TDoubleDoubleHashMap.keys([D)[D: I37 Branch 50 IFLE L322 - true
   * 17 gnu.trove.map.hash.TDoubleDoubleHashMap.keys([D)[D: I10 Branch 49 IF_ICMPGE L315 - true
   * 18 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I37 Branch 55 IFLE L362 - true
   * 19 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I10 Branch 54 IF_ICMPGE L355 - true
   * 20 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I44 Branch 56 IF_ICMPNE L363 - true
   * 21 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I10 Branch 34 IFEQ L133 - false
   * 22 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I40 Branch 35 IFEQ L139 - false
   * 23 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I54 Branch 36 IFEQ L143 - false
   * 24 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 25 gnu.trove.map.hash.TDoubleDoubleHashMap.doPut(DDI)D: I41 Branch 41 IFEQ L221 - false
   * 26 gnu.trove.map.hash.TDoubleDoubleHashMap.adjustOrPutValue(DDD)D: I9 Branch 72 IFGE L491 - false
   * 27 gnu.trove.map.hash.TDoubleDoubleHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - false
   * 28 gnu.trove.map.hash.TDoubleDoubleHashMap.get(D)D: I9 Branch 44 IFGE L253 - false
   * 29 gnu.trove.map.hash.TDoubleDoubleHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - false
   * 30 gnu.trove.map.hash.TDoubleDoubleHashMap.keys([D)[D: I37 Branch 50 IFLE L322 - false
   * 31 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I37 Branch 55 IFLE L362 - false
   * 32 gnu.trove.map.hash.TDoubleDoubleHashMap.keys()[D: I27 Branch 47 IFLE L303 - true
   * 33 gnu.trove.map.hash.TDoubleDoubleHashMap.keys()[D: I34 Branch 48 IF_ICMPNE L304 - true
   * 34 gnu.trove.map.hash.TDoubleDoubleHashMap.adjustValue(DD)Z: I9 Branch 71 IFGE L477 - false
   * 35 gnu.trove.map.hash.TDoubleDoubleHashMap.keys()[D: I27 Branch 47 IFLE L303 - false
   */

  @Test
  public void test14()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap((-459), 6.6360896E8F, 1181.8711480070965, 1181.8711480070965);
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      tDoubleDoubleHashMap1.size();
      TDoubleDoubleHashMap tDoubleDoubleHashMap2 = new TDoubleDoubleHashMap(244703);
      tDoubleDoubleHashMap2.trimToSize();
      tDoubleDoubleHashMap2.putIfAbsent(0.0, 0.0);
      tDoubleDoubleHashMap2.adjustOrPutValue(0.0, 0.0, 0.0);
      tDoubleDoubleHashMap2.clear();
      tDoubleDoubleHashMap2.get((double) 244703);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 244703;
      tDoubleDoubleHashMap2.getAutoCompactionFactor();
      doubleArray0[1] = (double) 244703;
      doubleArray0[2] = (double) 244703;
      doubleArray0[3] = (double) 244703;
      doubleArray0[4] = (double) 244703;
      doubleArray0[5] = (double) 244703;
      tDoubleDoubleHashMap2.keys(doubleArray0);
      tDoubleDoubleHashMap2.equals((Object) null);
      tDoubleDoubleHashMap2.compact();
      doubleArray0[6] = (double) 244703;
      doubleArray0[7] = (double) 244703;
      tDoubleDoubleHashMap2.isEmpty();
      tDoubleDoubleHashMap2.values(doubleArray0);
      tDoubleDoubleHashMap2.keySet();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(tDoubleDoubleHashMap2._states, 244703, 244703);
      TDoubleDoubleHashMap tDoubleDoubleHashMap3 = new TDoubleDoubleHashMap(244703, (float) 244703, 0.0, (double) 244703);
      tDoubleDoubleHashMap3.get(0.0);
      tDoubleDoubleHashMap3.adjustValue((double) 244703, (double) 244703);
      tDoubleDoubleHashMap3.contains(244703.0);
      tDoubleDoubleHashMap3.compact();
      tDoubleDoubleHashMap2.compact();
      tDoubleDoubleHashMap2.keys();
  }

  //Test case number: 15
  /*
   * 28 covered goals:
   * 1 gnu.trove.map.hash.TDoubleDoubleHashMap.setUp(I)I: root-Branch
   * 2 gnu.trove.map.hash.TDoubleDoubleHashMap$TDoubleDoubleHashIterator.<init>(Lgnu/trove/map/hash/TDoubleDoubleHashMap;Lgnu/trove/map/hash/TDoubleDoubleHashMap;)V: root-Branch
   * 3 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>()V: root-Branch
   * 4 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(IFDD)V: root-Branch
   * 5 gnu.trove.map.hash.TDoubleDoubleHashMap.increment(D)Z: root-Branch
   * 6 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(IF)V: root-Branch
   * 7 gnu.trove.map.hash.TDoubleDoubleHashMap.iterator()Lgnu/trove/iterator/TDoubleDoubleIterator;: root-Branch
   * 8 gnu.trove.map.hash.TDoubleDoubleHashMap.retainEntries(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   * 9 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I40 Branch 35 IFEQ L139 - true
   * 10 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 11 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I54 Branch 36 IFEQ L143 - true
   * 12 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 13 gnu.trove.map.hash.TDoubleDoubleHashMap.putAll(Lgnu/trove/map/TDoubleDoubleMap;)V: I15 Branch 43 IFEQ L243 - true
   * 14 gnu.trove.map.hash.TDoubleDoubleHashMap.adjustOrPutValue(DDD)D: I9 Branch 72 IFGE L491 - true
   * 15 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I37 Branch 55 IFLE L362 - true
   * 16 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I10 Branch 54 IF_ICMPGE L355 - true
   * 17 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 18 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I18 Branch 57 IFLE L376 - true
   * 19 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I44 Branch 56 IF_ICMPNE L363 - true
   * 20 gnu.trove.map.hash.TDoubleDoubleHashMap.retainEntries(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 21 gnu.trove.map.hash.TDoubleDoubleHashMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I10 Branch 34 IFEQ L133 - false
   * 22 gnu.trove.map.hash.TDoubleDoubleHashMap.retainEntries(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - false
   * 23 gnu.trove.map.hash.TDoubleDoubleHashMap.adjustValue(DD)Z: I9 Branch 71 IFGE L477 - false
   * 24 gnu.trove.map.hash.TDoubleDoubleHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 25 gnu.trove.map.hash.TDoubleDoubleHashMap.adjustOrPutValue(DDD)D: I58 Branch 73 IFEQ L502 - false
   * 26 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I37 Branch 55 IFLE L362 - false
   * 27 gnu.trove.map.hash.TDoubleDoubleHashMap.containsValue(D)Z: I18 Branch 57 IFLE L376 - false
   * 28 gnu.trove.map.hash.TDoubleDoubleHashMap.values([D)[D: I44 Branch 56 IF_ICMPNE L363 - false
   */

  @Test
  public void test15()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      tDoubleDoubleHashMap0.size();
      tDoubleDoubleHashMap0.increment(1130.9767067528421);
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      tDoubleDoubleHashMap1.adjustOrPutValue(2.0, 1130.9767067528421, 769.2365981351095);
      TDoubleDoubleHashMap tDoubleDoubleHashMap2 = new TDoubleDoubleHashMap((-165), (-165));
      tDoubleDoubleHashMap2.containsValue(1455.3268331781378);
      tDoubleDoubleHashMap1.values(tDoubleDoubleHashMap2._set);
      TDoubleDoubleHashMap tDoubleDoubleHashMap3 = new TDoubleDoubleHashMap((TDoubleDoubleMap) tDoubleDoubleHashMap2);
      tDoubleDoubleHashMap3.iterator();
      int int0 = 905551;
      double double0 = 0.0;
      tDoubleDoubleHashMap2.trimToSize();
      int int1 = 0;
      TDoubleDoubleHashMap tDoubleDoubleHashMap4 = new TDoubleDoubleHashMap(0, 905551);
      tDoubleDoubleHashMap4.increment(1609.1784837814048);
      tDoubleDoubleHashMap4.adjustOrPutValue((double) 0, 2.0, (double) (-165));
      // Undeclared exception!
      try {
        tDoubleDoubleHashMap4.retainEntries((TDoubleDoubleProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.list.array;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TCharCollection;
import gnu.trove.function.TCharFunction;
import gnu.trove.impl.sync.TSynchronizedCharList;
import gnu.trove.impl.sync.TSynchronizedRandomAccessCharList;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessCharList;
import gnu.trove.list.TCharList;
import gnu.trove.list.array.TCharArrayList;
import gnu.trove.list.linked.TCharLinkedList;
import gnu.trove.procedure.TCharProcedure;
import gnu.trove.set.hash.TCharHashSet;
import java.io.File;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.Random;
import org.evosuite.testcase.TestCaseExecutor;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TCharArrayListEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 49 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.wrap([C)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.reset()V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.remove(II)V: I3 Branch 16 IFNE L403 - true
   * 6 gnu.trove.list.array.TCharArrayList.remove(II)V: I23 Branch 19 IFNE L408 - true
   * 7 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 8 gnu.trove.list.array.TCharArrayList.remove(II)V: I12 Branch 18 IF_ICMPLT L404 - true
   * 9 gnu.trove.list.array.TCharArrayList.removeAll([C)Z: I12 Branch 48 IFLE L601 - true
   * 10 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 11 gnu.trove.list.array.TCharArrayList.remove(II)V: I45 Branch 20 IF_ICMPNE L412 - true
   * 12 gnu.trove.list.array.TCharArrayList.remove(C)Z: I16 Branch 15 IF_ICMPNE L384 - true
   * 13 gnu.trove.list.array.TCharArrayList.remove(II)V: I8 Branch 17 IFLT L404 - false
   * 14 gnu.trove.list.array.TCharArrayList.removeAll([C)Z: I20 Branch 49 IFEQ L602 - false
   * 15 gnu.trove.list.array.TCharArrayList.remove(II)V: I23 Branch 19 IFNE L408 - false
   * 16 gnu.trove.list.array.TCharArrayList.removeAll([C)Z: I12 Branch 48 IFLE L601 - false
   * 17 gnu.trove.list.array.TCharArrayList.subList(II)Lgnu/trove/list/TCharList;: I4 Branch 55 IF_ICMPGE L663 - false
   * 18 gnu.trove.list.array.TCharArrayList.remove(II)V: I45 Branch 20 IF_ICMPNE L412 - false
   * 19 gnu.trove.list.array.TCharArrayList.remove(C)Z: I8 Branch 14 IF_ICMPGE L383 - false
   * 20 gnu.trove.list.array.TCharArrayList.remove(C)Z: I16 Branch 15 IF_ICMPNE L384 - false
   * 21 gnu.trove.list.array.TCharArrayList.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 22 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 23 gnu.trove.list.array.TCharArrayList.<init>([C)V: root-Branch
   * 24 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 25 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 26 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 27 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.next()C: root-Branch
   * 28 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.<init>(Lgnu/trove/list/array/TCharArrayList;I)V: root-Branch
   * 29 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 30 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 31 gnu.trove.list.array.TCharArrayList.retainAll(Ljava/util/Collection;)Z: I13 Branch 35 IFEQ L522 - true
   * 32 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.remove()V: I5 Branch 103 IF_ICMPNE L1023 - true
   * 33 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 34 gnu.trove.list.array.TCharArrayList.get(I)C: I5 Branch 9 IF_ICMPLT L280 - true
   * 35 gnu.trove.list.array.TCharArrayList.containsAll(Ljava/util/Collection;)Z: I8 Branch 21 IFEQ L436 - true
   * 36 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - false
   * 37 gnu.trove.list.array.TCharArrayList.retainAll(Ljava/util/Collection;)Z: I13 Branch 35 IFEQ L522 - false
   * 38 gnu.trove.list.array.TCharArrayList.retainAll(Ljava/util/Collection;)Z: I21 Branch 36 IFGT L523 - false
   * 39 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.remove()V: I26 Branch 104 IF_ICMPGE L1028 - false
   * 40 gnu.trove.list.array.TCharArrayList.lastIndexOf(C)I: root-Branch
   * 41 gnu.trove.list.array.TCharArrayList.lastIndexOf(IC)I: I7 Branch 84 IFLE L887 - true
   * 42 gnu.trove.list.array.TCharArrayList.contains(C)Z: I5 Branch 86 IFLT L898 - true
   * 43 gnu.trove.list.array.TCharArrayList.containsAll(Lgnu/trove/TCharCollection;)Z: I4 Branch 24 IF_ACMPNE L453 - true
   * 44 gnu.trove.list.array.TCharArrayList.containsAll(Lgnu/trove/TCharCollection;)Z: I18 Branch 25 IFEQ L457 - false
   * 45 gnu.trove.list.array.TCharArrayList.containsAll(Lgnu/trove/TCharCollection;)Z: I29 Branch 26 IFNE L459 - false
   * 46 gnu.trove.list.array.TCharArrayList.<init>()V: root-Branch
   * 47 gnu.trove.list.array.TCharArrayList.isEmpty()Z: I4 Branch 5 IFNE L201 - false
   * 48 gnu.trove.list.array.TCharArrayList.toString()Ljava/lang/String;: I20 Branch 98 IF_ICMPGE L972 - true
   * 49 gnu.trove.list.array.TCharArrayList.toString()Ljava/lang/String;: I44 Branch 99 IFLE L976 - true
   */

  @Test
  public void test0()  throws Throwable  {
      int int0 = 0;
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      tCharArrayList0.isEmpty();
      char[] charArray0 = new char[10];
      charArray0[3] = 'S';
      charArray0[4] = 'S';
      charArray0[5] = 'P';
      charArray0[7] = 'P';
      charArray0[8] = 'D';
      charArray0[9] = 'D';
      Random.setNextRandom(0);
      charArray0[0] = 'k';
      charArray0[1] = 'K';
      charArray0[2] = 'W';
      charArray0[3] = '<';
      charArray0[4] = 'K';
      charArray0[5] = '>';
      charArray0[6] = '\"';
      charArray0[7] = 'U';
      charArray0[8] = ']';
      charArray0[9] = 'C';
      TCharArrayList tCharArrayList1 = new TCharArrayList(charArray0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      tCharArrayList1.retainAll((Collection<?>) linkedList0);
      tCharArrayList1.containsAll((Collection<?>) linkedList0);
      char[] charArray1 = new char[6];
      charArray1[0] = '&';
      charArray1[2] = 'o';
      TCharArrayList tCharArrayList2 = TCharArrayList.wrap(charArray1);
      tCharArrayList1.containsAll((TCharCollection) tCharArrayList2);
      tCharArrayList2.removeAll(charArray1);
      TCharArrayList tCharArrayList3 = TCharArrayList.wrap(charArray1, 'y');
      tCharArrayList3.reset();
      charArray1[3] = 'C';
      charArray1[5] = 'i';
      charArray1[0] = '|';
      charArray1[1] = 'C';
      charArray1[1] = 'W';
      charArray1[4] = 'K';
      charArray1[5] = 'D';
      TCharArrayList tCharArrayList4 = TCharArrayList.wrap(charArray1, '.');
      TUnmodifiableRandomAccessCharList tUnmodifiableRandomAccessCharList0 = new TUnmodifiableRandomAccessCharList((TCharList) tCharArrayList4);
      tCharArrayList3.toString();
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessCharList0.subList((int) 'K', (int) '.');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // end index 46 greater than begin index 75
         //
      }
  }

  //Test case number: 1
  /*
   * 10 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.wrap([C)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.reset()V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 7 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 8 gnu.trove.list.array.TCharArrayList.get(I)C: I5 Branch 9 IF_ICMPLT L280 - false
   * 9 gnu.trove.list.array.TCharArrayList.add(C)Z: root-Branch
   * 10 gnu.trove.list.array.TCharArrayList$1.ensureCapacity(I)V: I6 Branch 1 IF_ICMPLE L164 - true
   */

  @Test
  public void test1()  throws Throwable  {
      char char0 = 'd';
      TCharArrayList tCharArrayList0 = new TCharArrayList(2028, 'd');
      // Undeclared exception!
      try {
        tCharArrayList0.get(2028);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2028
         //
      }
  }

  //Test case number: 2
  /*
   * 19 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.<init>()V: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.clear(I)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.clear()V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.hashCode()I: I12 Branch 71 IFLE L761 - true
   * 6 gnu.trove.list.array.TCharArrayList.containsAll(Ljava/util/Collection;)Z: I8 Branch 21 IFEQ L436 - true
   * 7 gnu.trove.list.array.TCharArrayList.indexOf(IC)I: I8 Branch 82 IF_ICMPGE L870 - true
   * 8 gnu.trove.list.array.TCharArrayList.toArray([CIII)[C: I3 Branch 63 IFNE L722 - true
   * 9 gnu.trove.list.array.TCharArrayList.toArray([CIII)[C: I11 Branch 64 IFLT L725 - false
   * 10 gnu.trove.list.array.TCharArrayList.toArray([CIII)[C: I15 Branch 65 IF_ICMPLT L725 - false
   * 11 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 12 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 13 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 14 gnu.trove.list.array.TCharArrayList.indexOf(IC)I: I16 Branch 83 IF_ICMPNE L871 - true
   * 15 gnu.trove.list.array.TCharArrayList.indexOf(IC)I: I8 Branch 82 IF_ICMPGE L870 - false
   * 16 gnu.trove.list.array.TCharArrayList.inverseGrep(Lgnu/trove/procedure/TCharProcedure;)Lgnu/trove/list/TCharList;: I14 Branch 89 IF_ICMPGE L917 - true
   * 17 gnu.trove.list.array.TCharArrayList.setQuick(IC)V: root-Branch
   * 18 gnu.trove.list.array.TCharArrayList.grep(Lgnu/trove/procedure/TCharProcedure;)Lgnu/trove/list/TCharList;: I14 Branch 87 IF_ICMPGE L905 - true
   * 19 gnu.trove.list.array.TCharArrayList.forEach(Lgnu/trove/procedure/TCharProcedure;)Z: I8 Branch 72 IF_ICMPGE L772 - true
   */

  @Test
  public void test2()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      TCharArrayList tCharArrayList1 = new TCharArrayList();
      tCharArrayList1.hashCode();
      tCharArrayList1.clear();
      tCharArrayList1.forEach((TCharProcedure) null);
      tCharArrayList0.setQuick(0, 'M');
      Random.setNextRandom(0);
      tCharArrayList0.inverseGrep((TCharProcedure) null);
      tCharArrayList1.grep((TCharProcedure) null);
      char[] charArray0 = new char[8];
      charArray0[1] = '6';
      tCharArrayList1.add(charArray0);
      tCharArrayList1.indexOf(0, '?');
      TCharArrayList tCharArrayList2 = new TCharArrayList();
      char[] charArray1 = new char[1];
      charArray1[0] = '?';
      // Undeclared exception!
      try {
        tCharArrayList2.toArray(charArray1, 0, 0, (int) 'M');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
      }
  }

  //Test case number: 3
  /*
   * 26 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.<init>()V: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.clear(I)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.clear()V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.hashCode()I: I12 Branch 71 IFLE L761 - true
   * 6 gnu.trove.list.array.TCharArrayList.containsAll(Ljava/util/Collection;)Z: I8 Branch 21 IFEQ L436 - true
   * 7 gnu.trove.list.array.TCharArrayList.indexOf(IC)I: I8 Branch 82 IF_ICMPGE L870 - true
   * 8 gnu.trove.list.array.TCharArrayList.toArray([CIII)[C: I3 Branch 63 IFNE L722 - true
   * 9 gnu.trove.list.array.TCharArrayList.toArray([CIII)[C: I11 Branch 64 IFLT L725 - false
   * 10 gnu.trove.list.array.TCharArrayList.toArray([CIII)[C: I15 Branch 65 IF_ICMPLT L725 - false
   * 11 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 12 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 13 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 14 gnu.trove.list.array.TCharArrayList.indexOf(IC)I: I16 Branch 83 IF_ICMPNE L871 - true
   * 15 gnu.trove.list.array.TCharArrayList.indexOf(IC)I: I8 Branch 82 IF_ICMPGE L870 - false
   * 16 gnu.trove.list.array.TCharArrayList.inverseGrep(Lgnu/trove/procedure/TCharProcedure;)Lgnu/trove/list/TCharList;: I14 Branch 89 IF_ICMPGE L917 - true
   * 17 gnu.trove.list.array.TCharArrayList.setQuick(IC)V: root-Branch
   * 18 gnu.trove.list.array.TCharArrayList.grep(Lgnu/trove/procedure/TCharProcedure;)Lgnu/trove/list/TCharList;: I14 Branch 87 IF_ICMPGE L905 - true
   * 19 gnu.trove.list.array.TCharArrayList.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 20 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.<init>(Lgnu/trove/list/array/TCharArrayList;I)V: root-Branch
   * 21 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - false
   * 22 gnu.trove.list.array.TCharArrayList.fill(IIC)V: I5 Branch 76 IF_ICMPLE L816 - false
   * 23 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 24 gnu.trove.list.array.TCharArrayList.reset()V: root-Branch
   * 25 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 26 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 31 IFEQ L495 - true
   */

  @Test
  public void test3()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      TCharArrayList tCharArrayList1 = new TCharArrayList();
      tCharArrayList1.hashCode();
      tCharArrayList1.clear();
      tCharArrayList0.inverseGrep((TCharProcedure) null);
      tCharArrayList1.iterator();
      TCharArrayList tCharArrayList2 = new TCharArrayList();
      int int0 = (-1);
      tCharArrayList1.reset();
      Random.setNextRandom((int) 'M');
      // Undeclared exception!
      try {
        tCharArrayList2.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 4
  /*
   * 26 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.add(C)Z: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.<init>(Lgnu/trove/TCharCollection;)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.next()C: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.<init>(Lgnu/trove/list/array/TCharArrayList;I)V: root-Branch
   * 9 gnu.trove.list.array.TCharArrayList.clear(I)V: root-Branch
   * 10 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 11 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 12 gnu.trove.list.array.TCharArrayList.subList(II)Lgnu/trove/list/TCharList;: I4 Branch 55 IF_ICMPGE L663 - true
   * 13 gnu.trove.list.array.TCharArrayList.get(I)C: I5 Branch 9 IF_ICMPLT L280 - true
   * 14 gnu.trove.list.array.TCharArrayList.subList(II)Lgnu/trove/list/TCharList;: I73 Branch 58 IF_ICMPGE L674 - true
   * 15 gnu.trove.list.array.TCharArrayList.subList(II)Lgnu/trove/list/TCharList;: I40 Branch 57 IF_ICMPLE L670 - true
   * 16 gnu.trove.list.array.TCharArrayList.subList(II)Lgnu/trove/list/TCharList;: I26 Branch 56 IFGE L667 - true
   * 17 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 31 IFEQ L495 - true
   * 18 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - false
   * 19 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I24 Branch 32 IFEQ L497 - false
   * 20 gnu.trove.list.array.TCharArrayList.subList(II)Lgnu/trove/list/TCharList;: I73 Branch 58 IF_ICMPGE L674 - false
   * 21 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 31 IFEQ L495 - false
   * 22 gnu.trove.list.array.TCharArrayList.toArray()[C: root-Branch
   * 23 gnu.trove.list.array.TCharArrayList.toArray(II)[C: root-Branch
   * 24 gnu.trove.list.array.TCharArrayList.hashCode()I: I12 Branch 71 IFLE L761 - true
   * 25 gnu.trove.list.array.TCharArrayList.toArray([CII)[C: I3 Branch 60 IFNE L709 - false
   * 26 gnu.trove.list.array.TCharArrayList.min()C: I4 Branch 94 IFNE L943 - false
   */

  @Test
  public void test4()  throws Throwable  {
      int int0 = 63;
      TCharArrayList tCharArrayList0 = new TCharArrayList(63);
      TCharArrayList tCharArrayList1 = new TCharArrayList(63, 'Q');
      TUnmodifiableRandomAccessCharList tUnmodifiableRandomAccessCharList0 = new TUnmodifiableRandomAccessCharList((TCharList) tCharArrayList1);
      tUnmodifiableRandomAccessCharList0.subList(0, 63);
      // Undeclared exception!
      try {
        tCharArrayList1.min();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // cannot find minimum of an empty list
         //
      }
  }

  //Test case number: 5
  /*
   * 28 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.binarySearch(C)I: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.<init>([C)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 9 gnu.trove.list.array.TCharArrayList.min()C: I32 Branch 96 IF_ICMPGE L948 - true
   * 10 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I4 Branch 66 IF_ACMPNE L738 - true
   * 11 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I13 Branch 67 IFEQ L741 - true
   * 12 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I3 Branch 77 IFGE L834 - true
   * 13 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I16 Branch 78 IF_ICMPLE L837 - true
   * 14 gnu.trove.list.array.TCharArrayList.min()C: I24 Branch 95 IF_ICMPGE L947 - true
   * 15 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I38 Branch 79 IF_ICMPGT L844 - true
   * 16 gnu.trove.list.array.TCharArrayList.min()C: I4 Branch 94 IFNE L943 - true
   * 17 gnu.trove.list.array.TCharArrayList.min()C: I32 Branch 96 IF_ICMPGE L948 - false
   * 18 gnu.trove.list.array.TCharArrayList.toArray([C)[C: I11 Branch 59 IF_ICMPLE L698 - false
   * 19 gnu.trove.list.array.TCharArrayList.min()C: I24 Branch 95 IF_ICMPGE L947 - false
   * 20 gnu.trove.list.array.TCharArrayList.toArray([CII)[C: I3 Branch 60 IFNE L709 - false
   * 21 gnu.trove.list.array.TCharArrayList.indexOf(C)I: root-Branch
   * 22 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 23 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 24 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 25 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 26 gnu.trove.list.array.TCharArrayList.indexOf(IC)I: I16 Branch 83 IF_ICMPNE L871 - true
   * 27 gnu.trove.list.array.TCharArrayList.indexOf(IC)I: I16 Branch 83 IF_ICMPNE L871 - false
   * 28 gnu.trove.list.array.TCharArrayList.indexOf(IC)I: I8 Branch 82 IF_ICMPGE L870 - false
   */

  @Test
  public void test5()  throws Throwable  {
      char[] charArray0 = new char[17];
      charArray0[0] = '\'';
      charArray0[1] = '\'';
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0, '\'');
      tCharArrayList0.indexOf('\'');
      assertEquals("{', ', \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000}", tCharArrayList0.toString());
      
      charArray0[3] = '+';
      TCharArrayList tCharArrayList1 = new TCharArrayList(charArray0);
      Locale locale0 = new Locale("^6$k+O3", "^6$k+O3", "^6$k+O3");
      locale0.getDisplayScript();
      boolean boolean0 = tCharArrayList1.equals((Object) "");
      assertEquals(false, boolean0);
      
      TCharArrayList tCharArrayList2 = new TCharArrayList(530, ']');
      tCharArrayList1.min();
      assertEquals(17, tCharArrayList1.size());
      
      int int0 = tCharArrayList2.binarySearch('i');
      assertEquals(']', tCharArrayList2.getNoEntryValue());
      assertEquals((-1), int0);
  }

  //Test case number: 6
  /*
   * 40 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.getNoEntryValue()C: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.lastIndexOf(C)I: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.<init>(Lgnu/trove/TCharCollection;)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.wrap([C)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 9 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 10 gnu.trove.list.array.TCharArrayList.add(C)Z: root-Branch
   * 11 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 12 gnu.trove.list.array.TCharArrayList.<init>([C)V: root-Branch
   * 13 gnu.trove.list.array.TCharArrayList.reverse()V: root-Branch
   * 14 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 15 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.next()C: root-Branch
   * 16 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.<init>(Lgnu/trove/list/array/TCharArrayList;I)V: root-Branch
   * 17 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 18 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 19 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 20 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 21 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 22 gnu.trove.list.array.TCharArrayList.trimToSize()V: I7 Branch 6 IF_ICMPLE L209 - true
   * 23 gnu.trove.list.array.TCharArrayList.get(I)C: I5 Branch 9 IF_ICMPLT L280 - true
   * 24 gnu.trove.list.array.TCharArrayList.lastIndexOf(IC)I: I15 Branch 85 IF_ICMPNE L888 - true
   * 25 gnu.trove.list.array.TCharArrayList.reverse(II)V: I4 Branch 51 IF_ICMPNE L626 - true
   * 26 gnu.trove.list.array.TCharArrayList.reverse(II)V: I32 Branch 53 IF_ICMPGE L632 - true
   * 27 gnu.trove.list.array.TCharArrayList.reverse(II)V: I12 Branch 52 IF_ICMPLE L629 - true
   * 28 gnu.trove.list.array.TCharArrayList.containsAll([C)Z: I8 Branch 27 IFLE L469 - true
   * 29 gnu.trove.list.array.TCharArrayList.containsAll([C)Z: I16 Branch 28 IFNE L470 - true
   * 30 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 31 IFEQ L495 - true
   * 31 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - false
   * 32 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I24 Branch 32 IFEQ L497 - false
   * 33 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - false
   * 34 gnu.trove.list.array.TCharArrayList.lastIndexOf(IC)I: I15 Branch 85 IF_ICMPNE L888 - false
   * 35 gnu.trove.list.array.TCharArrayList.lastIndexOf(IC)I: I7 Branch 84 IFLE L887 - false
   * 36 gnu.trove.list.array.TCharArrayList.contains(C)Z: I5 Branch 86 IFLT L898 - false
   * 37 gnu.trove.list.array.TCharArrayList.containsAll([C)Z: I8 Branch 27 IFLE L469 - false
   * 38 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 31 IFEQ L495 - false
   * 39 gnu.trove.list.array.TCharArrayList.swap(II)V: root-Branch
   * 40 gnu.trove.list.array.TCharArrayList.reverse(II)V: I32 Branch 53 IF_ICMPGE L632 - false
   */

  @Test
  public void test6()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[1] = '4';
      charArray0[7] = 'L';
      Random.setNextRandom((int) 'L');
      charArray0[3] = 'y';
      charArray0[4] = 'r';
      charArray0[5] = 'C';
      char char0 = '0';
      charArray0[6] = '0';
      TCharArrayList tCharArrayList0 = new TCharArrayList(charArray0);
      tCharArrayList0.containsAll(charArray0);
      char[] charArray1 = new char[1];
      TCharArrayList tCharArrayList1 = TCharArrayList.wrap(charArray1);
      TCharArrayList tCharArrayList2 = new TCharArrayList((TCharCollection) tCharArrayList1);
      tCharArrayList2.iterator();
      TCharArrayList tCharArrayList3 = TCharArrayList.wrap(charArray1, '\u0082');
      tCharArrayList0.reverse();
      tCharArrayList3.trimToSize();
      charArray1[0] = '\u0082';
      TCharArrayList tCharArrayList4 = new TCharArrayList(charArray1);
      tCharArrayList4.getNoEntryValue();
      // Undeclared exception!
      try {
        tCharArrayList4.add(charArray1, (int) '4', (int) '\u0082');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 39 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.lastIndexOf(C)I: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.remove(II)V: I8 Branch 17 IFLT L404 - true
   * 5 gnu.trove.list.array.TCharArrayList.remove(II)V: I3 Branch 16 IFNE L403 - true
   * 6 gnu.trove.list.array.TCharArrayList.lastIndexOf(IC)I: I7 Branch 84 IFLE L887 - true
   * 7 gnu.trove.list.array.TCharArrayList.contains(C)Z: I5 Branch 86 IFLT L898 - true
   * 8 gnu.trove.list.array.TCharArrayList.containsAll([C)Z: I8 Branch 27 IFLE L469 - false
   * 9 gnu.trove.list.array.TCharArrayList.containsAll([C)Z: I16 Branch 28 IFNE L470 - false
   * 10 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 11 gnu.trove.list.array.TCharArrayList.toString()Ljava/lang/String;: I20 Branch 98 IF_ICMPGE L972 - true
   * 12 gnu.trove.list.array.TCharArrayList.toString()Ljava/lang/String;: I44 Branch 99 IFLE L976 - true
   * 13 gnu.trove.list.array.TCharArrayList.binarySearch(C)I: root-Branch
   * 14 gnu.trove.list.array.TCharArrayList.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 15 gnu.trove.list.array.TCharArrayList.sort(II)V: root-Branch
   * 16 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 17 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 18 gnu.trove.list.array.TCharArrayList.wrap([C)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 19 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.<init>(Lgnu/trove/list/array/TCharArrayList;I)V: root-Branch
   * 20 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 21 gnu.trove.list.array.TCharArrayList.retainAll(Ljava/util/Collection;)Z: I13 Branch 35 IFEQ L522 - true
   * 22 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 23 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 24 gnu.trove.list.array.TCharArrayList.hashCode()I: I12 Branch 71 IFLE L761 - true
   * 25 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I3 Branch 77 IFGE L834 - true
   * 26 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I16 Branch 78 IF_ICMPLE L837 - true
   * 27 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I38 Branch 79 IF_ICMPGT L844 - true
   * 28 gnu.trove.list.array.TCharArrayList.set(I[CII)V: I3 Branch 12 IFLT L326 - false
   * 29 gnu.trove.list.array.TCharArrayList.set(I[CII)V: I9 Branch 13 IF_ICMPLE L326 - false
   * 30 gnu.trove.list.array.TCharArrayList.add(C)Z: root-Branch
   * 31 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 32 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I58 Branch 80 IF_ICMPGE L848 - true
   * 33 gnu.trove.list.array.TCharArrayList.hashCode()I: I12 Branch 71 IFLE L761 - false
   * 34 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I38 Branch 79 IF_ICMPGT L844 - false
   * 35 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I70 Branch 81 IF_ICMPLE L851 - false
   * 36 gnu.trove.list.array.TCharArrayList.removeAll(Ljava/util/Collection;)Z: I12 Branch 42 IFEQ L568 - true
   * 37 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I70 Branch 81 IF_ICMPLE L851 - true
   * 38 gnu.trove.list.array.TCharArrayList.retainAll(Lgnu/trove/TCharCollection;)Z: I22 Branch 38 IFEQ L539 - true
   * 39 gnu.trove.list.array.TCharArrayList.retainAll(Lgnu/trove/TCharCollection;)Z: I4 Branch 37 IF_ACMPNE L534 - false
   */

  @Test
  public void test7()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      charArray0[1] = '{';
      char char0 = 'R';
      TCharArrayList tCharArrayList0 = new TCharArrayList((int) '{');
      LinkedList<TCharArrayList> linkedList0 = new LinkedList<TCharArrayList>();
      tCharArrayList0.toString();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      tCharArrayList0.retainAll((Collection<?>) linkedList1);
      tCharArrayList0.sort((int) 'R', (int) 'R');
      tCharArrayList0.hashCode();
      tCharArrayList0.add('{');
      tCharArrayList0.binarySearch('{');
      charArray0[1] = '-';
      TCharArrayList tCharArrayList1 = TCharArrayList.wrap(charArray0);
      tCharArrayList1.binarySearch('{');
      tCharArrayList0.hashCode();
      // Undeclared exception!
      try {
        tCharArrayList0.set(1912, charArray0, 0, (int) '{');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1912
         //
      }
  }

  //Test case number: 8
  /*
   * 61 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.fill(C)V: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.lastIndexOf(C)I: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.toArray(II)[C: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.indexOf(C)I: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList.toArray()[C: root-Branch
   * 9 gnu.trove.list.array.TCharArrayList.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 10 gnu.trove.list.array.TCharArrayList.resetQuick()V: root-Branch
   * 11 gnu.trove.list.array.TCharArrayList.<init>()V: root-Branch
   * 12 gnu.trove.list.array.TCharArrayList.add(C)Z: root-Branch
   * 13 gnu.trove.list.array.TCharArrayList.<init>([C)V: root-Branch
   * 14 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 15 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.next()C: root-Branch
   * 16 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.<init>(Lgnu/trove/list/array/TCharArrayList;I)V: root-Branch
   * 17 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 18 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 19 gnu.trove.list.array.TCharArrayList.isEmpty()Z: I4 Branch 5 IFNE L201 - true
   * 20 gnu.trove.list.array.TCharArrayList.insert(I[CII)V: I5 Branch 8 IF_ICMPNE L264 - true
   * 21 gnu.trove.list.array.TCharArrayList.get(I)C: I5 Branch 9 IF_ICMPLT L280 - true
   * 22 gnu.trove.list.array.TCharArrayList.remove(II)V: I3 Branch 16 IFNE L403 - true
   * 23 gnu.trove.list.array.TCharArrayList.lastIndexOf(IC)I: I7 Branch 84 IFLE L887 - true
   * 24 gnu.trove.list.array.TCharArrayList.contains(C)Z: I5 Branch 86 IFLT L898 - true
   * 25 gnu.trove.list.array.TCharArrayList.remove(II)V: I12 Branch 18 IF_ICMPLT L404 - true
   * 26 gnu.trove.list.array.TCharArrayList.indexOf(IC)I: I8 Branch 82 IF_ICMPGE L870 - true
   * 27 gnu.trove.list.array.TCharArrayList.containsAll(Lgnu/trove/TCharCollection;)Z: I18 Branch 25 IFEQ L457 - true
   * 28 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 29 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.remove()V: I5 Branch 103 IF_ICMPNE L1023 - true
   * 30 gnu.trove.list.array.TCharArrayList.addAll([C)Z: I18 Branch 33 IF_ICMPGE L508 - true
   * 31 gnu.trove.list.array.TCharArrayList.retainAll(Lgnu/trove/TCharCollection;)Z: I22 Branch 38 IFEQ L539 - true
   * 32 gnu.trove.list.array.TCharArrayList.retainAll(Lgnu/trove/TCharCollection;)Z: I4 Branch 37 IF_ACMPNE L534 - true
   * 33 gnu.trove.list.array.TCharArrayList.sum()C: I12 Branch 97 IF_ICMPGE L959 - true
   * 34 gnu.trove.list.array.TCharArrayList.retainAll([C)Z: I21 Branch 40 IFLE L555 - true
   * 35 gnu.trove.list.array.TCharArrayList.retainAll([C)Z: I29 Branch 41 IFGE L556 - true
   * 36 gnu.trove.list.array.TCharArrayList.shuffle(Ljava/util/Random;)V: I9 Branch 54 IF_ICMPLE L640 - true
   * 37 gnu.trove.list.array.TCharArrayList.toArray([CII)[C: I15 Branch 62 IF_ICMPLT L712 - true
   * 38 gnu.trove.list.array.TCharArrayList.toArray([CII)[C: I3 Branch 60 IFNE L709 - true
   * 39 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - false
   * 40 gnu.trove.list.array.TCharArrayList.remove(II)V: I8 Branch 17 IFLT L404 - false
   * 41 gnu.trove.list.array.TCharArrayList.remove(II)V: I23 Branch 19 IFNE L408 - false
   * 42 gnu.trove.list.array.TCharArrayList.containsAll(Lgnu/trove/TCharCollection;)Z: I4 Branch 24 IF_ACMPNE L453 - false
   * 43 gnu.trove.list.array.TCharArrayList.containsAll([C)Z: I8 Branch 27 IFLE L469 - false
   * 44 gnu.trove.list.array.TCharArrayList.containsAll([C)Z: I16 Branch 28 IFNE L470 - false
   * 45 gnu.trove.list.array.TCharArrayList.addAll([C)Z: I28 Branch 34 IFEQ L509 - false
   * 46 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - false
   * 47 gnu.trove.list.array.TCharArrayList.addAll([C)Z: I18 Branch 33 IF_ICMPGE L508 - false
   * 48 gnu.trove.list.array.TCharArrayList.retainAll(Lgnu/trove/TCharCollection;)Z: I22 Branch 38 IFEQ L539 - false
   * 49 gnu.trove.list.array.TCharArrayList.retainAll(Lgnu/trove/TCharCollection;)Z: I29 Branch 39 IFNE L540 - false
   * 50 gnu.trove.list.array.TCharArrayList.retainAll([C)Z: I21 Branch 40 IFLE L555 - false
   * 51 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.remove()V: I26 Branch 104 IF_ICMPGE L1028 - false
   * 52 gnu.trove.list.array.TCharArrayList.toArray([CII)[C: I11 Branch 61 IFLT L712 - false
   * 53 gnu.trove.list.array.TCharArrayList.removeAll(Lgnu/trove/TCharCollection;)Z: I26 Branch 46 IFEQ L588 - true
   * 54 gnu.trove.list.array.TCharArrayList.removeAll(Lgnu/trove/TCharCollection;)Z: I4 Branch 45 IF_ACMPNE L582 - true
   * 55 gnu.trove.list.array.TCharArrayList.insert(I[CII)V: I5 Branch 8 IF_ICMPNE L264 - false
   * 56 gnu.trove.list.array.TCharArrayList.wrap([C)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 57 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 58 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 59 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 60 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 61 gnu.trove.list.array.TCharArrayList.remove(II)V: I3 Branch 16 IFNE L403 - false
   */

  @Test
  public void test8()  throws Throwable  {
      char[] charArray0 = new char[3];
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      TCharArrayList tCharArrayList1 = new TCharArrayList(0, '4');
      TCharArrayList tCharArrayList2 = TCharArrayList.wrap(charArray0);
      assertNotNull(tCharArrayList2);
      
      Random.setNextRandom((-195));
      tCharArrayList1.remove((-195), 0);
      java.util.Random random0 = new java.util.Random((-1377L));
      tCharArrayList1.shuffle(random0);
      charArray0[0] = 'X';
      tCharArrayList1.indexOf('X');
      TCharArrayList tCharArrayList3 = new TCharArrayList(charArray0);
      random0.nextLong();
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList('v');
      tCharArrayList3.retainAll((TCharCollection) tCharLinkedList0);
      TCharArrayList tCharArrayList4 = new TCharArrayList();
      tCharArrayList3.containsAll((TCharCollection) tCharArrayList4);
      tCharArrayList3.sum();
      Random.setNextRandom((int) 'X');
      TCharArrayList tCharArrayList5 = new TCharArrayList(charArray0);
      tCharArrayList5.toArray();
      char[] charArray1 = new char[4];
      tCharArrayList5.isEmpty();
      charArray1[0] = 'X';
      tCharArrayList5.resetQuick();
      charArray1[1] = 'X';
      tCharArrayList3.containsAll(charArray1);
      assertEquals(0, tCharArrayList3.size());
      
      tCharArrayList3.addAll(charArray0);
      tCharArrayList3.fill('X');
      charArray1[2] = 'X';
      tCharArrayList4.size();
      charArray1[3] = 'X';
      // Undeclared exception!
      try {
        tCharArrayList5.insert(0, charArray1, (int) 'X', 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 42 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.<init>()V: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.<init>(Lgnu/trove/TCharCollection;)V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.<init>([C)V: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.reverse()V: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList.swap(II)V: root-Branch
   * 9 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 10 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 11 gnu.trove.list.array.TCharArrayList.sort()V: root-Branch
   * 12 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 13 gnu.trove.list.array.TCharArrayList.reverse(II)V: I4 Branch 51 IF_ICMPNE L626 - true
   * 14 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 15 gnu.trove.list.array.TCharArrayList.removeAll([C)Z: I20 Branch 49 IFEQ L602 - true
   * 16 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 17 gnu.trove.list.array.TCharArrayList.removeAll([C)Z: I12 Branch 48 IFLE L601 - true
   * 18 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 19 gnu.trove.list.array.TCharArrayList.reverse(II)V: I32 Branch 53 IF_ICMPGE L632 - true
   * 20 gnu.trove.list.array.TCharArrayList.reverse(II)V: I12 Branch 52 IF_ICMPLE L629 - true
   * 21 gnu.trove.list.array.TCharArrayList.remove(C)Z: I8 Branch 14 IF_ICMPGE L383 - true
   * 22 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 31 IFEQ L495 - true
   * 23 gnu.trove.list.array.TCharArrayList$1.ensureCapacity(I)V: I6 Branch 1 IF_ICMPLE L164 - false
   * 24 gnu.trove.list.array.TCharArrayList.removeAll([C)Z: I12 Branch 48 IFLE L601 - false
   * 25 gnu.trove.list.array.TCharArrayList.reverse(II)V: I32 Branch 53 IF_ICMPGE L632 - false
   * 26 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 27 gnu.trove.list.array.TCharArrayList.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 28 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.next()C: root-Branch
   * 29 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.<init>(Lgnu/trove/list/array/TCharArrayList;I)V: root-Branch
   * 30 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 31 gnu.trove.list.array.TCharArrayList.get(I)C: I5 Branch 9 IF_ICMPLT L280 - true
   * 32 gnu.trove.list.array.TCharArrayList.removeAll(Lgnu/trove/TCharCollection;)Z: I26 Branch 46 IFEQ L588 - true
   * 33 gnu.trove.list.array.TCharArrayList.removeAll(Lgnu/trove/TCharCollection;)Z: I37 Branch 47 IFEQ L590 - true
   * 34 gnu.trove.list.array.TCharArrayList.removeAll(Lgnu/trove/TCharCollection;)Z: I4 Branch 45 IF_ACMPNE L582 - true
   * 35 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - false
   * 36 gnu.trove.list.array.TCharArrayList.trimToSize()V: I7 Branch 6 IF_ICMPLE L209 - false
   * 37 gnu.trove.list.array.TCharArrayList.removeAll(Lgnu/trove/TCharCollection;)Z: I26 Branch 46 IFEQ L588 - false
   * 38 gnu.trove.list.array.TCharArrayList.toArray([CII)[C: I3 Branch 60 IFNE L709 - false
   * 39 gnu.trove.list.array.TCharArrayList.insert(I[C)V: root-Branch
   * 40 gnu.trove.list.array.TCharArrayList.insert(I[CII)V: I5 Branch 8 IF_ICMPNE L264 - true
   * 41 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - false
   * 42 gnu.trove.list.array.TCharArrayList.addAll(Ljava/util/Collection;)Z: I12 Branch 29 IFEQ L481 - true
   */

  @Test
  public void test9()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'U';
      charArray0[1] = 'U';
      charArray0[0] = 'U';
      charArray0[1] = 'j';
      Random.setNextRandom((int) 'j');
      charArray0[2] = 'U';
      charArray0[3] = 'j';
      TCharArrayList tCharArrayList0 = new TCharArrayList((int) 'U');
      tCharArrayList0.trimToSize();
      charArray0[0] = 'U';
      Locale locale0 = Locale.CHINESE;
      Set<Character> set0 = locale0.getExtensionKeys();
      tCharArrayList0.addAll((Collection<? extends Character>) set0);
      charArray0[1] = 'C';
      Random.setNextRandom(0);
      charArray0[2] = '%';
      charArray0[3] = 'C';
      TCharArrayList tCharArrayList1 = new TCharArrayList(charArray0);
      tCharArrayList0.removeAll((TCharCollection) tCharArrayList1);
      charArray0[2] = 'U';
      charArray0[3] = 'c';
      // Undeclared exception!
      try {
        tCharArrayList1.insert(141, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 22 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.lastIndexOf(C)I: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.<init>([C)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.<init>(Lgnu/trove/list/array/TCharArrayList;I)V: root-Branch
   * 9 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 10 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 11 gnu.trove.list.array.TCharArrayList.remove(II)V: I3 Branch 16 IFNE L403 - true
   * 12 gnu.trove.list.array.TCharArrayList.retainAll(Ljava/util/Collection;)Z: I13 Branch 35 IFEQ L522 - true
   * 13 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 14 gnu.trove.list.array.TCharArrayList.remove(II)V: I8 Branch 17 IFLT L404 - false
   * 15 gnu.trove.list.array.TCharArrayList.lastIndexOf(IC)I: I15 Branch 85 IF_ICMPNE L888 - false
   * 16 gnu.trove.list.array.TCharArrayList.lastIndexOf(IC)I: I7 Branch 84 IFLE L887 - false
   * 17 gnu.trove.list.array.TCharArrayList.remove(II)V: I12 Branch 18 IF_ICMPLT L404 - false
   * 18 gnu.trove.list.array.TCharArrayList.toArray([C)[C: I11 Branch 59 IF_ICMPLE L698 - false
   * 19 gnu.trove.list.array.TCharArrayList.retainAll([C)Z: I21 Branch 40 IFLE L555 - false
   * 20 gnu.trove.list.array.TCharArrayList.retainAll([C)Z: I29 Branch 41 IFGE L556 - false
   * 21 gnu.trove.list.array.TCharArrayList.toArray([CII)[C: I3 Branch 60 IFNE L709 - false
   * 22 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - false
   */

  @Test
  public void test10()  throws Throwable  {
      char char0 = ' ';
      TCharArrayList tCharArrayList0 = new TCharArrayList(10, ' ');
      tCharArrayList0.ensureCapacity((int) '7');
      tCharArrayList0.size();
      char[] charArray0 = new char[7];
      char char1 = 'Q';
      charArray0[0] = 'Q';
      tCharArrayList0.toArray(charArray0);
      charArray0[1] = 'P';
      charArray0[2] = ' ';
      charArray0[3] = ' ';
      charArray0[4] = ' ';
      charArray0[5] = ' ';
      charArray0[6] = ' ';
      // Undeclared exception!
      try {
        tCharArrayList0.retainAll(charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 54
         //
      }
  }

  //Test case number: 11
  /*
   * 65 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.fill(C)V: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.lastIndexOf(C)I: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.toArray(II)[C: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.indexOf(C)I: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList.toArray()[C: root-Branch
   * 9 gnu.trove.list.array.TCharArrayList.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 10 gnu.trove.list.array.TCharArrayList.resetQuick()V: root-Branch
   * 11 gnu.trove.list.array.TCharArrayList.<init>()V: root-Branch
   * 12 gnu.trove.list.array.TCharArrayList.add(C)Z: root-Branch
   * 13 gnu.trove.list.array.TCharArrayList.<init>([C)V: root-Branch
   * 14 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 15 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.next()C: root-Branch
   * 16 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.<init>(Lgnu/trove/list/array/TCharArrayList;I)V: root-Branch
   * 17 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 18 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 19 gnu.trove.list.array.TCharArrayList.isEmpty()Z: I4 Branch 5 IFNE L201 - true
   * 20 gnu.trove.list.array.TCharArrayList.insert(I[CII)V: I5 Branch 8 IF_ICMPNE L264 - true
   * 21 gnu.trove.list.array.TCharArrayList.get(I)C: I5 Branch 9 IF_ICMPLT L280 - true
   * 22 gnu.trove.list.array.TCharArrayList.remove(II)V: I3 Branch 16 IFNE L403 - true
   * 23 gnu.trove.list.array.TCharArrayList.lastIndexOf(IC)I: I7 Branch 84 IFLE L887 - true
   * 24 gnu.trove.list.array.TCharArrayList.contains(C)Z: I5 Branch 86 IFLT L898 - true
   * 25 gnu.trove.list.array.TCharArrayList.remove(II)V: I12 Branch 18 IF_ICMPLT L404 - true
   * 26 gnu.trove.list.array.TCharArrayList.indexOf(IC)I: I8 Branch 82 IF_ICMPGE L870 - true
   * 27 gnu.trove.list.array.TCharArrayList.containsAll(Lgnu/trove/TCharCollection;)Z: I18 Branch 25 IFEQ L457 - true
   * 28 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 29 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.remove()V: I5 Branch 103 IF_ICMPNE L1023 - true
   * 30 gnu.trove.list.array.TCharArrayList.addAll([C)Z: I18 Branch 33 IF_ICMPGE L508 - true
   * 31 gnu.trove.list.array.TCharArrayList.retainAll(Lgnu/trove/TCharCollection;)Z: I22 Branch 38 IFEQ L539 - true
   * 32 gnu.trove.list.array.TCharArrayList.retainAll(Lgnu/trove/TCharCollection;)Z: I4 Branch 37 IF_ACMPNE L534 - true
   * 33 gnu.trove.list.array.TCharArrayList.sum()C: I12 Branch 97 IF_ICMPGE L959 - true
   * 34 gnu.trove.list.array.TCharArrayList.retainAll([C)Z: I21 Branch 40 IFLE L555 - true
   * 35 gnu.trove.list.array.TCharArrayList.retainAll([C)Z: I29 Branch 41 IFGE L556 - true
   * 36 gnu.trove.list.array.TCharArrayList.shuffle(Ljava/util/Random;)V: I9 Branch 54 IF_ICMPLE L640 - true
   * 37 gnu.trove.list.array.TCharArrayList.toArray([CII)[C: I15 Branch 62 IF_ICMPLT L712 - true
   * 38 gnu.trove.list.array.TCharArrayList.toArray([CII)[C: I3 Branch 60 IFNE L709 - true
   * 39 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - false
   * 40 gnu.trove.list.array.TCharArrayList.remove(II)V: I8 Branch 17 IFLT L404 - false
   * 41 gnu.trove.list.array.TCharArrayList.remove(II)V: I23 Branch 19 IFNE L408 - false
   * 42 gnu.trove.list.array.TCharArrayList.containsAll(Lgnu/trove/TCharCollection;)Z: I4 Branch 24 IF_ACMPNE L453 - false
   * 43 gnu.trove.list.array.TCharArrayList.containsAll([C)Z: I8 Branch 27 IFLE L469 - false
   * 44 gnu.trove.list.array.TCharArrayList.containsAll([C)Z: I16 Branch 28 IFNE L470 - false
   * 45 gnu.trove.list.array.TCharArrayList.addAll([C)Z: I28 Branch 34 IFEQ L509 - false
   * 46 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - false
   * 47 gnu.trove.list.array.TCharArrayList.addAll([C)Z: I18 Branch 33 IF_ICMPGE L508 - false
   * 48 gnu.trove.list.array.TCharArrayList.retainAll(Lgnu/trove/TCharCollection;)Z: I22 Branch 38 IFEQ L539 - false
   * 49 gnu.trove.list.array.TCharArrayList.retainAll(Lgnu/trove/TCharCollection;)Z: I29 Branch 39 IFNE L540 - false
   * 50 gnu.trove.list.array.TCharArrayList.retainAll([C)Z: I21 Branch 40 IFLE L555 - false
   * 51 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.remove()V: I26 Branch 104 IF_ICMPGE L1028 - false
   * 52 gnu.trove.list.array.TCharArrayList.toArray([CII)[C: I11 Branch 61 IFLT L712 - false
   * 53 gnu.trove.list.array.TCharArrayList.removeAll(Lgnu/trove/TCharCollection;)Z: I26 Branch 46 IFEQ L588 - true
   * 54 gnu.trove.list.array.TCharArrayList.removeAll(Lgnu/trove/TCharCollection;)Z: I4 Branch 45 IF_ACMPNE L582 - true
   * 55 gnu.trove.list.array.TCharArrayList.insert(I[CII)V: I5 Branch 8 IF_ICMPNE L264 - false
   * 56 gnu.trove.list.array.TCharArrayList.max()C: I4 Branch 91 IFNE L928 - false
   * 57 gnu.trove.list.array.TCharArrayList.retainAll(Lgnu/trove/TCharCollection;)Z: I29 Branch 39 IFNE L540 - true
   * 58 gnu.trove.list.array.TCharArrayList.lastIndexOf(IC)I: I15 Branch 85 IF_ICMPNE L888 - true
   * 59 gnu.trove.list.array.TCharArrayList.containsAll(Lgnu/trove/TCharCollection;)Z: I4 Branch 24 IF_ACMPNE L453 - true
   * 60 gnu.trove.list.array.TCharArrayList.sum()C: I12 Branch 97 IF_ICMPGE L959 - false
   * 61 gnu.trove.list.array.TCharArrayList.lastIndexOf(IC)I: I7 Branch 84 IFLE L887 - false
   * 62 gnu.trove.list.array.TCharArrayList.containsAll([C)Z: I8 Branch 27 IFLE L469 - true
   * 63 gnu.trove.list.array.TCharArrayList.containsAll([C)Z: I16 Branch 28 IFNE L470 - true
   * 64 gnu.trove.list.array.TCharArrayList.lastIndexOf(IC)I: I15 Branch 85 IF_ICMPNE L888 - false
   * 65 gnu.trove.list.array.TCharArrayList.contains(C)Z: I5 Branch 86 IFLT L898 - false
   */

  @Test
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[1];
      java.util.Random random0 = new java.util.Random((-1377L));
      TCharArrayList tCharArrayList0 = new TCharArrayList(charArray0);
      random0.nextLong();
      TCharArrayList tCharArrayList1 = new TCharArrayList();
      tCharArrayList0.containsAll((TCharCollection) tCharArrayList1);
      tCharArrayList0.sum();
      TCharHashSet tCharHashSet0 = new TCharHashSet(charArray0);
      tCharArrayList0.retainAll((TCharCollection) tCharHashSet0);
      TCharArrayList tCharArrayList2 = new TCharArrayList(charArray0);
      char[] charArray1 = new char[4];
      tCharArrayList2.isEmpty();
      tCharArrayList2.shuffle(random0);
      tCharArrayList2.retainAll(charArray0);
      tCharArrayList2.resetQuick();
      tCharArrayList0.containsAll(charArray1);
      tCharArrayList0.addAll(charArray0);
      tCharArrayList2.lastIndexOf('F');
      // Undeclared exception!
      try {
        tCharArrayList1.max();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // cannot find maximum of an empty list
         //
      }
  }

  //Test case number: 12
  /*
   * 28 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.<init>()V: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.<init>(Lgnu/trove/TCharCollection;)V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.<init>([C)V: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.reverse()V: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList.swap(II)V: root-Branch
   * 9 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 10 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 11 gnu.trove.list.array.TCharArrayList.sort()V: root-Branch
   * 12 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 13 gnu.trove.list.array.TCharArrayList.reverse(II)V: I4 Branch 51 IF_ICMPNE L626 - true
   * 14 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 15 gnu.trove.list.array.TCharArrayList.removeAll([C)Z: I20 Branch 49 IFEQ L602 - true
   * 16 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 17 gnu.trove.list.array.TCharArrayList.removeAll([C)Z: I12 Branch 48 IFLE L601 - true
   * 18 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 19 gnu.trove.list.array.TCharArrayList.reverse(II)V: I32 Branch 53 IF_ICMPGE L632 - true
   * 20 gnu.trove.list.array.TCharArrayList.reverse(II)V: I12 Branch 52 IF_ICMPLE L629 - true
   * 21 gnu.trove.list.array.TCharArrayList.remove(C)Z: I8 Branch 14 IF_ICMPGE L383 - true
   * 22 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 31 IFEQ L495 - true
   * 23 gnu.trove.list.array.TCharArrayList$1.ensureCapacity(I)V: I6 Branch 1 IF_ICMPLE L164 - false
   * 24 gnu.trove.list.array.TCharArrayList.removeAll([C)Z: I12 Branch 48 IFLE L601 - false
   * 25 gnu.trove.list.array.TCharArrayList.reverse(II)V: I32 Branch 53 IF_ICMPGE L632 - false
   * 26 gnu.trove.list.array.TCharArrayList.wrap([C)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 27 gnu.trove.list.array.TCharArrayList.replace(IC)C: I5 Branch 11 IF_ICMPLT L309 - true
   * 28 gnu.trove.list.array.TCharArrayList.toArray([CIII)[C: I3 Branch 63 IFNE L722 - false
   */

  @Test
  public void test12()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'R';
      charArray0[0] = 'R';
      charArray0[2] = 'R';
      charArray0[3] = 'c';
      charArray0[0] = 'c';
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0);
      tCharArrayList0.replace(0, 'q');
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      TCharLinkedList tCharLinkedList1 = (TCharLinkedList)tCharLinkedList0.grep((TCharProcedure) null);
      TCharArrayList tCharArrayList1 = new TCharArrayList((TCharCollection) tCharLinkedList1);
      tCharArrayList1.removeAll(charArray0);
      charArray0[1] = 'l';
      tCharArrayList1.toArray(charArray0, (int) 'c', 709, 0);
      charArray0[2] = '?';
      charArray0[3] = '1';
      TCharArrayList tCharArrayList2 = new TCharArrayList(charArray0);
      tCharArrayList2.sort();
      char[] charArray1 = new char[1];
      tCharArrayList2.reverse();
      charArray1[0] = 'O';
      TCharArrayList tCharArrayList3 = new TCharArrayList();
      TCharArrayList tCharArrayList4 = TCharArrayList.wrap(charArray1, 'a');
      // Undeclared exception!
      try {
        tCharArrayList4.ensureCapacity((int) 'O');
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Can not grow ArrayList wrapped external array
         //
      }
  }

  //Test case number: 13
  /*
   * 14 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.wrap([C)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.<init>()V: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.set(I[C)V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 9 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 10 gnu.trove.list.array.TCharArrayList.toString()Ljava/lang/String;: I20 Branch 98 IF_ICMPGE L972 - true
   * 11 gnu.trove.list.array.TCharArrayList.toString()Ljava/lang/String;: I44 Branch 99 IFLE L976 - false
   * 12 gnu.trove.list.array.TCharArrayList.set(I[CII)V: I3 Branch 12 IFLT L326 - false
   * 13 gnu.trove.list.array.TCharArrayList.set(I[CII)V: I9 Branch 13 IF_ICMPLE L326 - false
   * 14 gnu.trove.list.array.TCharArrayList.set(I[CII)V: I3 Branch 12 IFLT L326 - true
   */

  @Test
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[1];
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0);
      tCharArrayList0.toString();
      TCharArrayList tCharArrayList1 = new TCharArrayList();
      // Undeclared exception!
      try {
        tCharArrayList1.set((-16), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -16
         //
      }
  }

  //Test case number: 14
  /*
   * 20 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.wrap([C)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 5 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 6 gnu.trove.list.array.TCharArrayList.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList.<init>([C)V: root-Branch
   * 9 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 10 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 11 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 12 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.<init>(Lgnu/trove/list/array/TCharArrayList;I)V: root-Branch
   * 13 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 14 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 15 gnu.trove.list.array.TCharArrayList.max()C: I32 Branch 93 IF_ICMPLE L933 - true
   * 16 gnu.trove.list.array.TCharArrayList.max()C: I24 Branch 92 IF_ICMPGE L932 - true
   * 17 gnu.trove.list.array.TCharArrayList.max()C: I4 Branch 91 IFNE L928 - true
   * 18 gnu.trove.list.array.TCharArrayList.max()C: I32 Branch 93 IF_ICMPLE L933 - false
   * 19 gnu.trove.list.array.TCharArrayList.max()C: I24 Branch 92 IF_ICMPGE L932 - false
   * 20 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - false
   */

  @Test
  public void test14()  throws Throwable  {
      char[] charArray0 = new char[2];
      TCharArrayList tCharArrayList0 = new TCharArrayList(0);
      tCharArrayList0.iterator();
      charArray0[0] = 'c';
      charArray0[1] = '~';
      TCharArrayList tCharArrayList1 = TCharArrayList.wrap(charArray0, '~');
      tCharArrayList1.iterator();
      char[] charArray1 = new char[7];
      charArray1[0] = '2';
      charArray1[1] = 'K';
      TCharArrayList tCharArrayList2 = new TCharArrayList(charArray1);
      tCharArrayList2.max();
      charArray1[2] = ';';
      charArray1[3] = 'l';
      charArray1[0] = '(';
      charArray1[1] = 'l';
      charArray1[2] = 'x';
      charArray1[3] = 'K';
      tCharArrayList2.max();
      charArray1[4] = 'l';
      charArray1[5] = '2';
      charArray1[6] = '2';
      charArray1[4] = 'm';
      charArray1[5] = 'w';
      charArray1[6] = '@';
      // Undeclared exception!
      try {
        TCharArrayList.wrap((char[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // values can not be null
         //
      }
  }

  //Test case number: 15
  /*
   * 30 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.<init>()V: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.add(C)Z: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.<init>(Lgnu/trove/TCharCollection;)V: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 9 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 10 gnu.trove.list.array.TCharArrayList.wrap([C)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 11 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.next()C: root-Branch
   * 12 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.<init>(Lgnu/trove/list/array/TCharArrayList;I)V: root-Branch
   * 13 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 14 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 15 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 16 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 17 gnu.trove.list.array.TCharArrayList.get(I)C: I5 Branch 9 IF_ICMPLT L280 - true
   * 18 gnu.trove.list.array.TCharArrayList.retainAll([C)Z: I21 Branch 40 IFLE L555 - true
   * 19 gnu.trove.list.array.TCharArrayList.retainAll([C)Z: I29 Branch 41 IFGE L556 - true
   * 20 gnu.trove.list.array.TCharArrayList.max()C: I32 Branch 93 IF_ICMPLE L933 - true
   * 21 gnu.trove.list.array.TCharArrayList.max()C: I24 Branch 92 IF_ICMPGE L932 - true
   * 22 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 31 IFEQ L495 - true
   * 23 gnu.trove.list.array.TCharArrayList.max()C: I4 Branch 91 IFNE L928 - true
   * 24 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - false
   * 25 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I24 Branch 32 IFEQ L497 - false
   * 26 gnu.trove.list.array.TCharArrayList.retainAll([C)Z: I21 Branch 40 IFLE L555 - false
   * 27 gnu.trove.list.array.TCharArrayList.transformValues(Lgnu/trove/function/TCharFunction;)V: I8 Branch 50 IFLE L612 - false
   * 28 gnu.trove.list.array.TCharArrayList.max()C: I24 Branch 92 IF_ICMPGE L932 - false
   * 29 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 31 IFEQ L495 - false
   * 30 gnu.trove.list.array.TCharArrayList.reverse(II)V: I4 Branch 51 IF_ICMPNE L626 - false
   */

  @Test
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[19];
      TCharArrayList tCharArrayList0 = new TCharArrayList(1);
      tCharArrayList0.reverse(1, 1);
      assertEquals('\u0000', tCharArrayList0.getNoEntryValue());
      assertEquals("{}", tCharArrayList0.toString());
      
      TCharArrayList tCharArrayList1 = TCharArrayList.wrap(charArray0);
      assertNotNull(tCharArrayList1);
      
      boolean boolean0 = tCharArrayList1.retainAll(charArray0);
      assertEquals(false, boolean0);
      
      // Undeclared exception!
      try {
        tCharArrayList1.transformValues((TCharFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 16
  /*
   * 31 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.<init>()V: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.add(C)Z: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.<init>(Lgnu/trove/TCharCollection;)V: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 9 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 10 gnu.trove.list.array.TCharArrayList.wrap([C)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 11 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.next()C: root-Branch
   * 12 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.<init>(Lgnu/trove/list/array/TCharArrayList;I)V: root-Branch
   * 13 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 14 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 15 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 16 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 17 gnu.trove.list.array.TCharArrayList.get(I)C: I5 Branch 9 IF_ICMPLT L280 - true
   * 18 gnu.trove.list.array.TCharArrayList.retainAll([C)Z: I21 Branch 40 IFLE L555 - true
   * 19 gnu.trove.list.array.TCharArrayList.retainAll([C)Z: I29 Branch 41 IFGE L556 - true
   * 20 gnu.trove.list.array.TCharArrayList.max()C: I32 Branch 93 IF_ICMPLE L933 - true
   * 21 gnu.trove.list.array.TCharArrayList.max()C: I24 Branch 92 IF_ICMPGE L932 - true
   * 22 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 31 IFEQ L495 - true
   * 23 gnu.trove.list.array.TCharArrayList.max()C: I4 Branch 91 IFNE L928 - true
   * 24 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - false
   * 25 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I24 Branch 32 IFEQ L497 - false
   * 26 gnu.trove.list.array.TCharArrayList.retainAll([C)Z: I21 Branch 40 IFLE L555 - false
   * 27 gnu.trove.list.array.TCharArrayList.transformValues(Lgnu/trove/function/TCharFunction;)V: I8 Branch 50 IFLE L612 - false
   * 28 gnu.trove.list.array.TCharArrayList.max()C: I24 Branch 92 IF_ICMPGE L932 - false
   * 29 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 31 IFEQ L495 - false
   * 30 gnu.trove.list.array.TCharArrayList.reverse(II)V: I4 Branch 51 IF_ICMPNE L626 - false
   * 31 gnu.trove.list.array.TCharArrayList.transformValues(Lgnu/trove/function/TCharFunction;)V: I8 Branch 50 IFLE L612 - true
   */

  @Test
  public void test16()  throws Throwable  {
      char[] charArray0 = new char[19];
      TCharArrayList tCharArrayList0 = new TCharArrayList(1);
      tCharArrayList0.transformValues((TCharFunction) null);
      assertEquals('\u0000', tCharArrayList0.getNoEntryValue());
      assertEquals("{}", tCharArrayList0.toString());
      assertEquals(0, tCharArrayList0.size());
  }

  //Test case number: 17
  /*
   * 24 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.indexOf(C)I: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.<init>([C)V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.reverse(II)V: I4 Branch 51 IF_ICMPNE L626 - true
   * 8 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 9 gnu.trove.list.array.TCharArrayList.indexOf(IC)I: I16 Branch 83 IF_ICMPNE L871 - true
   * 10 gnu.trove.list.array.TCharArrayList.indexOf(IC)I: I8 Branch 82 IF_ICMPGE L870 - true
   * 11 gnu.trove.list.array.TCharArrayList.reverse(II)V: I12 Branch 52 IF_ICMPLE L629 - false
   * 12 gnu.trove.list.array.TCharArrayList.indexOf(IC)I: I8 Branch 82 IF_ICMPGE L870 - false
   * 13 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 14 gnu.trove.list.array.TCharArrayList.min()C: I24 Branch 95 IF_ICMPGE L947 - true
   * 15 gnu.trove.list.array.TCharArrayList.min()C: I4 Branch 94 IFNE L943 - true
   * 16 gnu.trove.list.array.TCharArrayList.min()C: I32 Branch 96 IF_ICMPGE L948 - false
   * 17 gnu.trove.list.array.TCharArrayList.min()C: I24 Branch 95 IF_ICMPGE L947 - false
   * 18 gnu.trove.list.array.TCharArrayList.removeAt(I)C: root-Branch
   * 19 gnu.trove.list.array.TCharArrayList.get(I)C: I5 Branch 9 IF_ICMPLT L280 - true
   * 20 gnu.trove.list.array.TCharArrayList.remove(II)V: I3 Branch 16 IFNE L403 - true
   * 21 gnu.trove.list.array.TCharArrayList.remove(II)V: I12 Branch 18 IF_ICMPLT L404 - true
   * 22 gnu.trove.list.array.TCharArrayList.remove(II)V: I8 Branch 17 IFLT L404 - false
   * 23 gnu.trove.list.array.TCharArrayList.remove(II)V: I23 Branch 19 IFNE L408 - false
   * 24 gnu.trove.list.array.TCharArrayList.min()C: I32 Branch 96 IF_ICMPGE L948 - true
   */

  @Test
  public void test17()  throws Throwable  {
      int int0 = 1240361;
      char[] charArray0 = new char[6];
      charArray0[1] = 'V';
      TCharArrayList tCharArrayList0 = new TCharArrayList(charArray0);
      tCharArrayList0.removeAt(0);
      charArray0[2] = '6';
      charArray0[4] = '&';
      charArray0[5] = '\'';
      tCharArrayList0.indexOf(',');
      char[] charArray1 = new char[2];
      charArray1[1] = '(';
      TCharArrayList tCharArrayList1 = new TCharArrayList(charArray1);
      int int1 = 672196673;
      tCharArrayList1.min();
      // Undeclared exception!
      try {
        tCharArrayList1.reverse(672196673, 1240361);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // from cannot be greater than to
         //
      }
  }

  //Test case number: 18
  /*
   * 11 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.setQuick(IC)V: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.wrap([C)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 7 gnu.trove.list.array.TCharArrayList.writeExternal(Ljava/io/ObjectOutput;)V: I35 Branch 100 IF_ICMPGE L1051 - true
   * 8 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 9 gnu.trove.list.array.TCharArrayList.writeExternal(Ljava/io/ObjectOutput;)V: I35 Branch 100 IF_ICMPGE L1051 - false
   * 10 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I3 Branch 77 IFGE L834 - true
   * 11 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I16 Branch 78 IF_ICMPLE L837 - false
   */

  @Test
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[10];
      charArray0[0] = 'S';
      charArray0[1] = 'T';
      charArray0[2] = 'v';
      charArray0[3] = '<';
      TCharArrayList tCharArrayList0 = new TCharArrayList((int) '<', 'S');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) pipedOutputStream0);
      tCharArrayList0.writeExternal((ObjectOutput) objectOutputStream0);
      char char0 = 'F';
      // Undeclared exception!
      try {
        tCharArrayList0.binarySearch('#', (int) 'v', 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
      }
  }

  //Test case number: 19
  /*
   * 14 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.<init>()V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.fill(C)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.<init>([C)V: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 9 gnu.trove.list.array.TCharArrayList.toArray([C)[C: I11 Branch 59 IF_ICMPLE L698 - true
   * 10 gnu.trove.list.array.TCharArrayList.toArray([CII)[C: I15 Branch 62 IF_ICMPLT L712 - true
   * 11 gnu.trove.list.array.TCharArrayList.toArray([CII)[C: I3 Branch 60 IFNE L709 - true
   * 12 gnu.trove.list.array.TCharArrayList.set(IC)C: I5 Branch 10 IF_ICMPLT L297 - false
   * 13 gnu.trove.list.array.TCharArrayList.toArray([CII)[C: I11 Branch 61 IFLT L712 - false
   * 14 gnu.trove.list.array.TCharArrayList.containsAll(Ljava/util/Collection;)Z: I8 Branch 21 IFEQ L436 - true
   */

  @Test
  public void test19()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      char[] charArray0 = new char[3];
      charArray0[1] = 'I';
      charArray0[2] = '6';
      TCharArrayList tCharArrayList0 = new TCharArrayList(charArray0);
      tCharArrayList0.toArray(charArray0);
      TCharArrayList tCharArrayList1 = new TCharArrayList();
      char char0 = 'd';
      tCharArrayList1.fill('d');
      int int0 = 1;
      Random.setNextRandom((int) 'd');
      // Undeclared exception!
      try {
        tCharArrayList1.set(359, 'd');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 359
         //
      }
  }

  //Test case number: 20
  /*
   * 15 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.<init>()V: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.<init>([C)V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 9 gnu.trove.list.array.TCharArrayList.wrap([C)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 10 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 11 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 12 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 13 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 14 gnu.trove.list.array.TCharArrayList.containsAll(Ljava/util/Collection;)Z: I8 Branch 21 IFEQ L436 - true
   * 15 gnu.trove.list.array.TCharArrayList.fill(IIC)V: I5 Branch 76 IF_ICMPLE L816 - true
   */

  @Test
  public void test20()  throws Throwable  {
      char[] charArray0 = new char[10];
      charArray0[2] = '&';
      charArray0[3] = 'h';
      charArray0[7] = '=';
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Random.setNextRandom(0);
      char[] charArray1 = new char[7];
      charArray1[0] = 's';
      charArray1[1] = '=';
      charArray1[2] = 'i';
      charArray1[1] = 'i';
      charArray1[2] = 'i';
      charArray1[3] = 's';
      charArray1[4] = 's';
      charArray1[5] = 'i';
      charArray1[6] = 'a';
      charArray1[3] = 'f';
      charArray1[4] = 'v';
      charArray1[5] = '4';
      charArray1[6] = ';';
      TCharArrayList tCharArrayList0 = new TCharArrayList(charArray1);
      // Undeclared exception!
      try {
        tCharArrayList0.fill(0, (-1760), 's');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-1760)
         //
      }
  }

  //Test case number: 21
  /*
   * 7 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.wrap([C)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 5 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 6 gnu.trove.list.array.TCharArrayList.insert(IC)V: I5 Branch 7 IF_ICMPNE L243 - true
   * 7 gnu.trove.list.array.TCharArrayList$1.ensureCapacity(I)V: I6 Branch 1 IF_ICMPLE L164 - false
   */

  @Test
  public void test21()  throws Throwable  {
      int int0 = 65521;
      Random.setNextRandom(65521);
      char[] charArray0 = new char[10];
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0);
      // Undeclared exception!
      try {
        tCharArrayList0.insert(7830701, 'v');
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Can not grow ArrayList wrapped external array
         //
      }
  }

  //Test case number: 22
  /*
   * 28 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.add(C)Z: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.<init>([C)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.<init>(Lgnu/trove/TCharCollection;)V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 9 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.next()C: root-Branch
   * 10 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.<init>(Lgnu/trove/list/array/TCharArrayList;I)V: root-Branch
   * 11 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 12 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 13 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 14 gnu.trove.list.array.TCharArrayList.get(I)C: I5 Branch 9 IF_ICMPLT L280 - true
   * 15 gnu.trove.list.array.TCharArrayList.removeAll(Lgnu/trove/TCharCollection;)Z: I26 Branch 46 IFEQ L588 - true
   * 16 gnu.trove.list.array.TCharArrayList.remove(II)V: I3 Branch 16 IFNE L403 - true
   * 17 gnu.trove.list.array.TCharArrayList.remove(II)V: I12 Branch 18 IF_ICMPLT L404 - true
   * 18 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 31 IFEQ L495 - true
   * 19 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - false
   * 20 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I24 Branch 32 IFEQ L497 - false
   * 21 gnu.trove.list.array.TCharArrayList.removeAll(Lgnu/trove/TCharCollection;)Z: I26 Branch 46 IFEQ L588 - false
   * 22 gnu.trove.list.array.TCharArrayList.removeAll(Lgnu/trove/TCharCollection;)Z: I37 Branch 47 IFEQ L590 - false
   * 23 gnu.trove.list.array.TCharArrayList.remove(C)Z: I8 Branch 14 IF_ICMPGE L383 - false
   * 24 gnu.trove.list.array.TCharArrayList.removeAll(Lgnu/trove/TCharCollection;)Z: I4 Branch 45 IF_ACMPNE L582 - false
   * 25 gnu.trove.list.array.TCharArrayList.remove(C)Z: I16 Branch 15 IF_ICMPNE L384 - false
   * 26 gnu.trove.list.array.TCharArrayList.remove(II)V: I8 Branch 17 IFLT L404 - false
   * 27 gnu.trove.list.array.TCharArrayList.remove(II)V: I23 Branch 19 IFNE L408 - false
   * 28 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 31 IFEQ L495 - false
   */

  @Test
  public void test22()  throws Throwable  {
      Random.setNextRandom(502);
      char[] charArray0 = new char[8];
      char char0 = '~';
      charArray0[0] = '~';
      charArray0[1] = 'w';
      Random.setNextRandom(1453);
      charArray0[2] = 'w';
      charArray0[3] = 'C';
      charArray0[5] = '3';
      charArray0[6] = '?';
      charArray0[7] = '3';
      TCharArrayList tCharArrayList0 = new TCharArrayList(charArray0);
      TCharArrayList tCharArrayList1 = new TCharArrayList((TCharCollection) tCharArrayList0);
      tCharArrayList0.removeAll((TCharCollection) tCharArrayList1);
      TCharArrayList tCharArrayList2 = null;
      try {
        tCharArrayList2 = new TCharArrayList((-53), 'e');
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 26 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.<init>([C)V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 9 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.next()C: root-Branch
   * 10 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.<init>(Lgnu/trove/list/array/TCharArrayList;I)V: root-Branch
   * 11 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 12 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 13 gnu.trove.list.array.TCharArrayList.retainAll(Ljava/util/Collection;)Z: I13 Branch 35 IFEQ L522 - true
   * 14 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.remove()V: I5 Branch 103 IF_ICMPNE L1023 - true
   * 15 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 16 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 17 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 18 gnu.trove.list.array.TCharArrayList.get(I)C: I5 Branch 9 IF_ICMPLT L280 - true
   * 19 gnu.trove.list.array.TCharArrayList.remove(II)V: I3 Branch 16 IFNE L403 - true
   * 20 gnu.trove.list.array.TCharArrayList.remove(II)V: I12 Branch 18 IF_ICMPLT L404 - true
   * 21 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - false
   * 22 gnu.trove.list.array.TCharArrayList.retainAll(Ljava/util/Collection;)Z: I13 Branch 35 IFEQ L522 - false
   * 23 gnu.trove.list.array.TCharArrayList.retainAll(Ljava/util/Collection;)Z: I21 Branch 36 IFGT L523 - false
   * 24 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.remove()V: I26 Branch 104 IF_ICMPGE L1028 - false
   * 25 gnu.trove.list.array.TCharArrayList.remove(II)V: I8 Branch 17 IFLT L404 - false
   * 26 gnu.trove.list.array.TCharArrayList.remove(II)V: I23 Branch 19 IFNE L408 - false
   */

  @Test
  public void test23()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'r';
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0, '\\');
      assertNotNull(tCharArrayList0);
      
      // Undeclared exception!
      try {
        tCharArrayList0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 10 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.getQuick(I)C: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 5 gnu.trove.list.array.TCharArrayList.insert(IC)V: I5 Branch 7 IF_ICMPNE L243 - true
   * 6 gnu.trove.list.array.TCharArrayList.retainAll([C)Z: I21 Branch 40 IFLE L555 - true
   * 7 gnu.trove.list.array.TCharArrayList.retainAll([C)Z: I29 Branch 41 IFGE L556 - true
   * 8 gnu.trove.list.array.TCharArrayList.reverse(II)V: I4 Branch 51 IF_ICMPNE L626 - false
   * 9 gnu.trove.list.array.TCharArrayList.retainAll([C)Z: I21 Branch 40 IFLE L555 - false
   * 10 gnu.trove.list.array.TCharArrayList.replace(IC)C: I5 Branch 11 IF_ICMPLT L309 - false
   */

  @Test
  public void test24()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList(1125);
      tCharArrayList0.reverse(1125, 1125);
      char[] charArray0 = new char[4];
      char char0 = 'z';
      tCharArrayList0.getQuick(49);
      charArray0[0] = 'z';
      tCharArrayList0.retainAll(charArray0);
      // Undeclared exception!
      try {
        tCharArrayList0.replace(49, '\u0000');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 49
         //
      }
  }

  //Test case number: 25
  /*
   * 31 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.<init>()V: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.add(C)Z: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.<init>([C)V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.toArray(II)[C: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 9 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 10 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.next()C: root-Branch
   * 11 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.<init>(Lgnu/trove/list/array/TCharArrayList;I)V: root-Branch
   * 12 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 13 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 14 gnu.trove.list.array.TCharArrayList.retainAll(Ljava/util/Collection;)Z: I13 Branch 35 IFEQ L522 - true
   * 15 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.remove()V: I5 Branch 103 IF_ICMPNE L1023 - true
   * 16 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 17 gnu.trove.list.array.TCharArrayList.get(I)C: I5 Branch 9 IF_ICMPLT L280 - true
   * 18 gnu.trove.list.array.TCharArrayList.remove(II)V: I3 Branch 16 IFNE L403 - true
   * 19 gnu.trove.list.array.TCharArrayList.remove(II)V: I12 Branch 18 IF_ICMPLT L404 - true
   * 20 gnu.trove.list.array.TCharArrayList.toArray([CII)[C: I3 Branch 60 IFNE L709 - true
   * 21 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - false
   * 22 gnu.trove.list.array.TCharArrayList.retainAll(Ljava/util/Collection;)Z: I13 Branch 35 IFEQ L522 - false
   * 23 gnu.trove.list.array.TCharArrayList.retainAll(Ljava/util/Collection;)Z: I21 Branch 36 IFGT L523 - false
   * 24 gnu.trove.list.array.TCharArrayList.insert(IC)V: I5 Branch 7 IF_ICMPNE L243 - false
   * 25 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.remove()V: I26 Branch 104 IF_ICMPGE L1028 - false
   * 26 gnu.trove.list.array.TCharArrayList.remove(II)V: I8 Branch 17 IFLT L404 - false
   * 27 gnu.trove.list.array.TCharArrayList.remove(II)V: I23 Branch 19 IFNE L408 - false
   * 28 gnu.trove.list.array.TCharArrayList.toArray([C)[C: I11 Branch 59 IF_ICMPLE L698 - false
   * 29 gnu.trove.list.array.TCharArrayList.toArray([CII)[C: I15 Branch 62 IF_ICMPLT L712 - false
   * 30 gnu.trove.list.array.TCharArrayList.toArray([CII)[C: I11 Branch 61 IFLT L712 - false
   * 31 gnu.trove.list.array.TCharArrayList.toArray([CII)[C: I3 Branch 60 IFNE L709 - false
   */

  @Test
  public void test25()  throws Throwable  {
      int int0 = (-1);
      char[] charArray0 = new char[2];
      TCharArrayList tCharArrayList0 = new TCharArrayList(charArray0);
      LinkedList<TCharArrayList> linkedList0 = new LinkedList<TCharArrayList>();
      tCharArrayList0.retainAll((Collection<?>) linkedList0);
      charArray0[0] = 'Y';
      tCharArrayList0.insert(0, '9');
      charArray0[1] = '9';
      Random.setNextRandom((-1));
      charArray0[0] = '<';
      char char0 = 'R';
      int int1 = 0;
      TCharArrayList tCharArrayList1 = new TCharArrayList();
      char char1 = '0';
      tCharArrayList1.toArray(charArray0);
      // Undeclared exception!
      try {
        tCharArrayList0.toArray((int) '0', (int) '9');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 48
         //
      }
  }

  //Test case number: 26
  /*
   * 11 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 4 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 5 gnu.trove.list.array.TCharArrayList.forEach(Lgnu/trove/procedure/TCharProcedure;)Z: I8 Branch 72 IF_ICMPGE L772 - false
   * 6 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 9 gnu.trove.list.array.TCharArrayList.<init>([C)V: root-Branch
   * 10 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 11 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   */

  @Test
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[3];
      TCharArrayList tCharArrayList0 = new TCharArrayList(charArray0);
      charArray0[0] = ']';
      charArray0[1] = ']';
      charArray0[2] = ']';
      charArray0[0] = 'G';
      charArray0[1] = ']';
      charArray0[2] = 'I';
      char char0 = 'w';
      TCharArrayList tCharArrayList1 = TCharArrayList.wrap(charArray0, 'w');
      Random.setNextRandom(481);
      // Undeclared exception!
      try {
        tCharArrayList1.forEach((TCharProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 9 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.<init>([C)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 7 gnu.trove.list.array.TCharArrayList.toArray([CIII)[C: I15 Branch 65 IF_ICMPLT L725 - true
   * 8 gnu.trove.list.array.TCharArrayList.toArray([CIII)[C: I3 Branch 63 IFNE L722 - true
   * 9 gnu.trove.list.array.TCharArrayList.toArray([CIII)[C: I11 Branch 64 IFLT L725 - false
   */

  @Test
  public void test27()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'N';
      charArray0[1] = '3';
      TCharArrayList tCharArrayList0 = new TCharArrayList(charArray0);
      // Undeclared exception!
      try {
        tCharArrayList0.toArray(charArray0, 0, 0, (-431));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 11 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.indexOf(C)I: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.<init>(Lgnu/trove/list/array/TCharArrayList;I)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 8 gnu.trove.list.array.TCharArrayList.retainAll(Lgnu/trove/TCharCollection;)Z: I22 Branch 38 IFEQ L539 - true
   * 9 gnu.trove.list.array.TCharArrayList.indexOf(IC)I: I8 Branch 82 IF_ICMPGE L870 - true
   * 10 gnu.trove.list.array.TCharArrayList.retainAll(Lgnu/trove/TCharCollection;)Z: I4 Branch 37 IF_ACMPNE L534 - true
   * 11 gnu.trove.list.array.TCharArrayList.forEachDescending(Lgnu/trove/procedure/TCharProcedure;)Z: I8 Branch 74 IFLE L783 - true
   */

  @Test
  public void test28()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList(167);
      tCharArrayList0.forEachDescending((TCharProcedure) null);
      char[] charArray0 = new char[6];
      assertNotNull(charArray0);
  }

  //Test case number: 29
  /*
   * 49 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.<init>(Lgnu/trove/TCharCollection;)V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList.wrap([C)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 9 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.<init>(Lgnu/trove/list/array/TCharArrayList;I)V: root-Branch
   * 10 gnu.trove.list.array.TCharArrayList.clear(I)V: root-Branch
   * 11 gnu.trove.list.array.TCharArrayList.clear()V: root-Branch
   * 12 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I25 Branch 68 IF_ICMPEQ L743 - true
   * 13 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 14 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I36 Branch 69 IFLE L745 - true
   * 15 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 16 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 17 gnu.trove.list.array.TCharArrayList.containsAll(Ljava/util/Collection;)Z: I8 Branch 21 IFEQ L436 - true
   * 18 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 31 IFEQ L495 - true
   * 19 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I4 Branch 66 IF_ACMPNE L738 - false
   * 20 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I13 Branch 67 IFEQ L741 - false
   * 21 gnu.trove.list.array.TCharArrayList.set(IC)C: I5 Branch 10 IF_ICMPLT L297 - false
   * 22 gnu.trove.list.array.TCharArrayList.binarySearch(C)I: root-Branch
   * 23 gnu.trove.list.array.TCharArrayList.resetQuick()V: root-Branch
   * 24 gnu.trove.list.array.TCharArrayList.insert(I[CII)V: I5 Branch 8 IF_ICMPNE L264 - true
   * 25 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I3 Branch 77 IFGE L834 - true
   * 26 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I16 Branch 78 IF_ICMPLE L837 - true
   * 27 gnu.trove.list.array.TCharArrayList.set(IC)C: I5 Branch 10 IF_ICMPLT L297 - true
   * 28 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I38 Branch 79 IF_ICMPGT L844 - true
   * 29 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - false
   * 30 gnu.trove.list.array.TCharArrayList.swap(II)V: root-Branch
   * 31 gnu.trove.list.array.TCharArrayList.shuffle(Ljava/util/Random;)V: I9 Branch 54 IF_ICMPLE L640 - true
   * 32 gnu.trove.list.array.TCharArrayList.shuffle(Ljava/util/Random;)V: I9 Branch 54 IF_ICMPLE L640 - false
   * 33 gnu.trove.list.array.TCharArrayList.add(C)Z: root-Branch
   * 34 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 35 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.next()C: root-Branch
   * 36 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 37 gnu.trove.list.array.TCharArrayList$1.ensureCapacity(I)V: I6 Branch 1 IF_ICMPLE L164 - true
   * 38 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 39 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I4 Branch 66 IF_ACMPNE L738 - true
   * 40 gnu.trove.list.array.TCharArrayList.get(I)C: I5 Branch 9 IF_ICMPLT L280 - true
   * 41 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I58 Branch 80 IF_ICMPGE L848 - true
   * 42 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - false
   * 43 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I25 Branch 68 IF_ICMPEQ L743 - false
   * 44 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I24 Branch 32 IFEQ L497 - false
   * 45 gnu.trove.list.array.TCharArrayList.fill(IIC)V: I5 Branch 76 IF_ICMPLE L816 - false
   * 46 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I38 Branch 79 IF_ICMPGT L844 - false
   * 47 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I70 Branch 81 IF_ICMPLE L851 - false
   * 48 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I58 Branch 80 IF_ICMPGE L848 - false
   * 49 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 31 IFEQ L495 - false
   */

//   @Test
//   public void test29()  throws Throwable  {
//       TCharArrayList tCharArrayList0 = new TCharArrayList(874);
//       tCharArrayList0.fill(874, 65535, 'q');
//       Random.setNextRandom(65535);
//       char[] charArray0 = new char[2];
//       TCharArrayList tCharArrayList1 = TCharArrayList.wrap(charArray0);
//       TCharArrayList tCharArrayList2 = TCharArrayList.wrap(charArray0);
//       charArray0[0] = 'H';
//       tCharArrayList2.clear();
//       TCharArrayList tCharArrayList3 = new TCharArrayList((TCharCollection) tCharArrayList0);
//       tCharArrayList2.equals((Object) tCharArrayList3);
//       java.util.Random random0 = new java.util.Random();
//       tCharArrayList1.shuffle(random0);
//       charArray0[0] = 'e';
//       tCharArrayList3.binarySearch('1');
//       tCharArrayList2.add(charArray0);
//       char char0 = 'K';
//       TCharArrayList tCharArrayList4 = TCharArrayList.wrap(charArray0, 'K');
//       Random.setNextRandom((int) 'e');
//       int int0 = (-166);
//       tCharArrayList0.insert((int) '1', charArray0, 98, 65535);
//       int int1 = 577;
//       tCharArrayList4.setQuick(int1, char0);
//       int int2 = (-1);
//       char char1 = 'X';
//       TCharArrayList tCharArrayList5 = new TCharArrayList(int2, char1);
//       int int3 = (-1071);
//       char[] charArray1 = new char[3];
//       char char2 = '{';
//       charArray1[0] = char2;
//       char char3 = '`';
//       charArray1[1] = char3;
//       charArray1[2] = char1;
//       tCharArrayList4.set(int3, charArray1);
//       Random.setNextRandom(int0);
//   }

  //Test case number: 30
  /*
   * 34 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.<init>(Lgnu/trove/TCharCollection;)V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList.wrap([C)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 9 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.<init>(Lgnu/trove/list/array/TCharArrayList;I)V: root-Branch
   * 10 gnu.trove.list.array.TCharArrayList.clear(I)V: root-Branch
   * 11 gnu.trove.list.array.TCharArrayList.clear()V: root-Branch
   * 12 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I25 Branch 68 IF_ICMPEQ L743 - true
   * 13 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 14 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I36 Branch 69 IFLE L745 - true
   * 15 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 16 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 17 gnu.trove.list.array.TCharArrayList.containsAll(Ljava/util/Collection;)Z: I8 Branch 21 IFEQ L436 - true
   * 18 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 31 IFEQ L495 - true
   * 19 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I4 Branch 66 IF_ACMPNE L738 - false
   * 20 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I13 Branch 67 IFEQ L741 - false
   * 21 gnu.trove.list.array.TCharArrayList.set(IC)C: I5 Branch 10 IF_ICMPLT L297 - false
   * 22 gnu.trove.list.array.TCharArrayList.binarySearch(C)I: root-Branch
   * 23 gnu.trove.list.array.TCharArrayList.resetQuick()V: root-Branch
   * 24 gnu.trove.list.array.TCharArrayList.insert(I[CII)V: I5 Branch 8 IF_ICMPNE L264 - true
   * 25 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I3 Branch 77 IFGE L834 - true
   * 26 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I16 Branch 78 IF_ICMPLE L837 - true
   * 27 gnu.trove.list.array.TCharArrayList.set(IC)C: I5 Branch 10 IF_ICMPLT L297 - true
   * 28 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I38 Branch 79 IF_ICMPGT L844 - true
   * 29 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - false
   * 30 gnu.trove.list.array.TCharArrayList.containsAll(Ljava/util/Collection;)Z: I16 Branch 22 IFEQ L437 - true
   * 31 gnu.trove.list.array.TCharArrayList.containsAll(Ljava/util/Collection;)Z: I8 Branch 21 IFEQ L436 - false
   * 32 gnu.trove.list.array.TCharArrayList.removeAll(Ljava/util/Collection;)Z: I12 Branch 42 IFEQ L568 - true
   * 33 gnu.trove.list.array.TCharArrayList.removeAll(Ljava/util/Collection;)Z: I20 Branch 43 IFEQ L569 - true
   * 34 gnu.trove.list.array.TCharArrayList.removeAll(Ljava/util/Collection;)Z: I12 Branch 42 IFEQ L568 - false
   */

  @Test
  public void test30()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList(874);
      Random.setNextRandom(65535);
      char[] charArray0 = new char[2];
      TCharArrayList tCharArrayList1 = TCharArrayList.wrap(charArray0);
      TCharArrayList tCharArrayList2 = TCharArrayList.wrap(charArray0);
      tCharArrayList2.clear();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      tCharArrayList2.containsAll((Collection<?>) linkedList0);
      TCharArrayList tCharArrayList3 = new TCharArrayList((TCharCollection) tCharArrayList0);
      tCharArrayList2.equals((Object) tCharArrayList3);
      linkedList0.add((Integer) 874);
      tCharArrayList3.binarySearch('1');
      tCharArrayList1.containsAll((Collection<?>) linkedList0);
      charArray0[0] = '1';
      charArray0[0] = 'H';
      tCharArrayList3.removeAll((Collection<?>) linkedList0);
      char char0 = 'K';
      TCharArrayList tCharArrayList4 = TCharArrayList.wrap(charArray0, 'K');
      tCharArrayList4.set((int) '\u0000', 'M');
      Random.setNextRandom((int) 'H');
      tCharArrayList4.resetQuick();
      int int0 = (-166);
      // Undeclared exception!
      try {
        tCharArrayList0.insert(890, charArray0, 98, 65535);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 31
  /*
   * 34 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.<init>(Lgnu/trove/TCharCollection;)V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList.wrap([C)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 9 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.<init>(Lgnu/trove/list/array/TCharArrayList;I)V: root-Branch
   * 10 gnu.trove.list.array.TCharArrayList.clear(I)V: root-Branch
   * 11 gnu.trove.list.array.TCharArrayList.clear()V: root-Branch
   * 12 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I25 Branch 68 IF_ICMPEQ L743 - true
   * 13 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 14 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I36 Branch 69 IFLE L745 - true
   * 15 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 16 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 17 gnu.trove.list.array.TCharArrayList.containsAll(Ljava/util/Collection;)Z: I8 Branch 21 IFEQ L436 - true
   * 18 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 31 IFEQ L495 - true
   * 19 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I4 Branch 66 IF_ACMPNE L738 - false
   * 20 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I13 Branch 67 IFEQ L741 - false
   * 21 gnu.trove.list.array.TCharArrayList.set(IC)C: I5 Branch 10 IF_ICMPLT L297 - false
   * 22 gnu.trove.list.array.TCharArrayList.binarySearch(C)I: root-Branch
   * 23 gnu.trove.list.array.TCharArrayList.resetQuick()V: root-Branch
   * 24 gnu.trove.list.array.TCharArrayList.insert(I[CII)V: I5 Branch 8 IF_ICMPNE L264 - true
   * 25 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I3 Branch 77 IFGE L834 - true
   * 26 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I16 Branch 78 IF_ICMPLE L837 - true
   * 27 gnu.trove.list.array.TCharArrayList.set(IC)C: I5 Branch 10 IF_ICMPLT L297 - true
   * 28 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I38 Branch 79 IF_ICMPGT L844 - true
   * 29 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - false
   * 30 gnu.trove.list.array.TCharArrayList.containsAll(Ljava/util/Collection;)Z: I16 Branch 22 IFEQ L437 - true
   * 31 gnu.trove.list.array.TCharArrayList.containsAll(Ljava/util/Collection;)Z: I8 Branch 21 IFEQ L436 - false
   * 32 gnu.trove.list.array.TCharArrayList.removeAll(Ljava/util/Collection;)Z: I12 Branch 42 IFEQ L568 - true
   * 33 gnu.trove.list.array.TCharArrayList.removeAll(Ljava/util/Collection;)Z: I20 Branch 43 IFEQ L569 - true
   * 34 gnu.trove.list.array.TCharArrayList.removeAll(Ljava/util/Collection;)Z: I12 Branch 42 IFEQ L568 - false
   */

  @Test
  public void test31()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList(874);
      Random.setNextRandom(65535);
      char[] charArray0 = new char[2];
      TCharArrayList tCharArrayList1 = TCharArrayList.wrap(charArray0);
      TCharArrayList tCharArrayList2 = TCharArrayList.wrap(charArray0);
      tCharArrayList2.clear();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      tCharArrayList2.containsAll((Collection<?>) linkedList0);
      TCharArrayList tCharArrayList3 = new TCharArrayList((TCharCollection) tCharArrayList0);
      tCharArrayList2.equals((Object) tCharArrayList3);
      linkedList0.add((Integer) 874);
      tCharArrayList3.binarySearch('1');
      tCharArrayList1.containsAll((Collection<?>) linkedList0);
      tCharArrayList3.removeAll((Collection<?>) linkedList0);
      char char0 = 'K';
      TCharArrayList tCharArrayList4 = TCharArrayList.wrap(charArray0, 'K');
      tCharArrayList4.set((int) '\u0000', 'M');
      Random.setNextRandom((int) '\u0000');
      tCharArrayList4.resetQuick();
      int int0 = (-166);
      // Undeclared exception!
      try {
        tCharArrayList0.insert(890, charArray0, 98, 65535);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 32
  /*
   * 10 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.<init>()V: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.reverse()V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.shuffle(Ljava/util/Random;)V: I9 Branch 54 IF_ICMPLE L640 - true
   * 6 gnu.trove.list.array.TCharArrayList.set(I[CII)V: I9 Branch 13 IF_ICMPLE L326 - true
   * 7 gnu.trove.list.array.TCharArrayList.reverse(II)V: I4 Branch 51 IF_ICMPNE L626 - false
   * 8 gnu.trove.list.array.TCharArrayList.trimToSize()V: I7 Branch 6 IF_ICMPLE L209 - false
   * 9 gnu.trove.list.array.TCharArrayList.set(I[CII)V: I3 Branch 12 IFLT L326 - false
   * 10 gnu.trove.list.array.TCharArrayList.toArray([CII)[C: I3 Branch 60 IFNE L709 - false
   */

  @Test
  public void test32()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      char[] charArray0 = new char[5];
      tCharArrayList0.trimToSize();
      tCharArrayList0.reverse();
      Random.setNextRandom(735);
      charArray0[1] = 'k';
      // Undeclared exception!
      try {
        tCharArrayList0.set(735, charArray0, (-355), (-1419));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 33
  /*
   * 9 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.wrap([C)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 6 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 7 gnu.trove.list.array.TCharArrayList.toString()Ljava/lang/String;: I20 Branch 98 IF_ICMPGE L972 - true
   * 8 gnu.trove.list.array.TCharArrayList.toString()Ljava/lang/String;: I20 Branch 98 IF_ICMPGE L972 - false
   * 9 gnu.trove.list.array.TCharArrayList.toString()Ljava/lang/String;: I44 Branch 99 IFLE L976 - false
   */

  @Test
  public void test33()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = '#';
      charArray0[1] = 'N';
      charArray0[2] = 'b';
      charArray0[3] = 'S';
      charArray0[4] = 'O';
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0);
      assertNotNull(tCharArrayList0);
      
      String string0 = tCharArrayList0.toString();
      assertEquals('\u0000', tCharArrayList0.getNoEntryValue());
      assertEquals("{#, N, b, S, O}", string0);
      assertEquals(5, tCharArrayList0.size());
      assertNotNull(string0);
  }

  //Test case number: 34
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.<init>()V: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.subList(II)Lgnu/trove/list/TCharList;: I4 Branch 55 IF_ICMPGE L663 - true
   * 4 gnu.trove.list.array.TCharArrayList.subList(II)Lgnu/trove/list/TCharList;: I26 Branch 56 IFGE L667 - true
   * 5 gnu.trove.list.array.TCharArrayList.subList(II)Lgnu/trove/list/TCharList;: I40 Branch 57 IF_ICMPLE L670 - false
   */

  @Test
  public void test34()  throws Throwable  {
      int int0 = 2010;
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      // Undeclared exception!
      try {
        tCharArrayList0.subList(1449, 2010);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index < 10
         //
      }
  }

  //Test case number: 35
  /*
   * 15 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 6 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 7 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I4 Branch 66 IF_ACMPNE L738 - true
   * 8 gnu.trove.list.array.TCharArrayList.min()C: I32 Branch 96 IF_ICMPGE L948 - true
   * 9 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I13 Branch 67 IFEQ L741 - true
   * 10 gnu.trove.list.array.TCharArrayList.indexOf(IC)I: I8 Branch 82 IF_ICMPGE L870 - true
   * 11 gnu.trove.list.array.TCharArrayList.min()C: I24 Branch 95 IF_ICMPGE L947 - true
   * 12 gnu.trove.list.array.TCharArrayList.min()C: I4 Branch 94 IFNE L943 - true
   * 13 gnu.trove.list.array.TCharArrayList.min()C: I32 Branch 96 IF_ICMPGE L948 - false
   * 14 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I3 Branch 77 IFGE L834 - false
   * 15 gnu.trove.list.array.TCharArrayList.min()C: I24 Branch 95 IF_ICMPGE L947 - false
   */

  @Test
  public void test35()  throws Throwable  {
      Random.setNextRandom(0);
      TCharArrayList tCharArrayList0 = new TCharArrayList(735, 'l');
      int int0 = tCharArrayList0.indexOf((int) 'l', 'l');
      assertEquals((-1), int0);
      
      // Undeclared exception!
      try {
        tCharArrayList0.binarySearch('l', (-1), 735);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -1
         //
      }
  }

  //Test case number: 36
  /*
   * 30 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.lastIndexOf(C)I: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.<init>([C)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.next()C: root-Branch
   * 9 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.<init>(Lgnu/trove/list/array/TCharArrayList;I)V: root-Branch
   * 10 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 11 gnu.trove.list.array.TCharArrayList.clear(I)V: root-Branch
   * 12 gnu.trove.list.array.TCharArrayList.clear()V: root-Branch
   * 13 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 14 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 15 gnu.trove.list.array.TCharArrayList.containsAll(Lgnu/trove/TCharCollection;)Z: I18 Branch 25 IFEQ L457 - true
   * 16 gnu.trove.list.array.TCharArrayList.get(I)C: I5 Branch 9 IF_ICMPLT L280 - true
   * 17 gnu.trove.list.array.TCharArrayList.containsAll(Lgnu/trove/TCharCollection;)Z: I4 Branch 24 IF_ACMPNE L453 - true
   * 18 gnu.trove.list.array.TCharArrayList.containsAll(Lgnu/trove/TCharCollection;)Z: I29 Branch 26 IFNE L459 - true
   * 19 gnu.trove.list.array.TCharArrayList.lastIndexOf(IC)I: I15 Branch 85 IF_ICMPNE L888 - false
   * 20 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - false
   * 21 gnu.trove.list.array.TCharArrayList.lastIndexOf(IC)I: I7 Branch 84 IFLE L887 - false
   * 22 gnu.trove.list.array.TCharArrayList.contains(C)Z: I5 Branch 86 IFLT L898 - false
   * 23 gnu.trove.list.array.TCharArrayList.containsAll(Lgnu/trove/TCharCollection;)Z: I18 Branch 25 IFEQ L457 - false
   * 24 gnu.trove.list.array.TCharArrayList.binarySearch(C)I: root-Branch
   * 25 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I3 Branch 77 IFGE L834 - true
   * 26 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I16 Branch 78 IF_ICMPLE L837 - true
   * 27 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I38 Branch 79 IF_ICMPGT L844 - true
   * 28 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I58 Branch 80 IF_ICMPGE L848 - true
   * 29 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I38 Branch 79 IF_ICMPGT L844 - false
   * 30 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I70 Branch 81 IF_ICMPLE L851 - false
   */

  @Test
  public void test36()  throws Throwable  {
      char[] charArray0 = new char[1];
      TCharArrayList tCharArrayList0 = new TCharArrayList(charArray0);
      tCharArrayList0.clear();
      charArray0[0] = 'X';
      TCharArrayList tCharArrayList1 = new TCharArrayList(charArray0);
      TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) tCharArrayList1);
      tCharArrayList1.containsAll((TCharCollection) tSynchronizedCharList0);
      tCharArrayList1.binarySearch('Q');
      Random.setNextRandom((int) 'X');
  }

  //Test case number: 37
  /*
   * 13 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.wrap([C)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.<init>()V: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.lastIndexOf(C)I: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.lastIndexOf(IC)I: I7 Branch 84 IFLE L887 - true
   * 8 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 9 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 10 gnu.trove.list.array.TCharArrayList.contains(C)Z: I5 Branch 86 IFLT L898 - true
   * 11 gnu.trove.list.array.TCharArrayList.containsAll([C)Z: I8 Branch 27 IFLE L469 - false
   * 12 gnu.trove.list.array.TCharArrayList.containsAll([C)Z: I16 Branch 28 IFNE L470 - false
   * 13 gnu.trove.list.array.TCharArrayList.forEachDescending(Lgnu/trove/procedure/TCharProcedure;)Z: I8 Branch 74 IFLE L783 - false
   */

  @Test
  public void test37()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[1] = '=';
      charArray0[2] = 'Y';
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      boolean boolean0 = tCharArrayList0.containsAll(charArray0);
      assertEquals(0, tCharArrayList0.size());
      assertEquals('\u0000', tCharArrayList0.getNoEntryValue());
      assertEquals(false, boolean0);
      
      charArray0[3] = 'H';
      TCharArrayList tCharArrayList1 = TCharArrayList.wrap(charArray0);
      assertNotNull(tCharArrayList1);
      
      // Undeclared exception!
      try {
        tCharArrayList1.forEachDescending((TCharProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 38
  /*
   * 9 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.wrap([C)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 7 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 8 gnu.trove.list.array.TCharArrayList.subList(II)Lgnu/trove/list/TCharList;: I4 Branch 55 IF_ICMPGE L663 - true
   * 9 gnu.trove.list.array.TCharArrayList.subList(II)Lgnu/trove/list/TCharList;: I26 Branch 56 IFGE L667 - false
   */

  @Test
  public void test38()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[1] = 'T';
      charArray0[3] = '*';
      charArray0[4] = '\u0000';
      charArray0[5] = 'T';
      charArray0[6] = '*';
      charArray0[7] = 'A';
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0, (Object) tCharArrayList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessCharList0.subList((-1783), (int) '\u0000');
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  //Test case number: 39
  /*
   * 11 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I25 Branch 68 IF_ICMPEQ L743 - true
   * 5 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I36 Branch 69 IFLE L745 - true
   * 6 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I47 Branch 70 IF_ICMPEQ L746 - true
   * 7 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 8 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 9 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I36 Branch 69 IFLE L745 - false
   * 10 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I4 Branch 66 IF_ACMPNE L738 - false
   * 11 gnu.trove.list.array.TCharArrayList.equals(Ljava/lang/Object;)Z: I13 Branch 67 IFEQ L741 - false
   */

  @Test
  public void test39()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '6';
      charArray0[1] = 'u';
      charArray0[2] = '=';
      charArray0[3] = 'C';
      charArray0[4] = '-';
      charArray0[5] = '~';
      charArray0[6] = '`';
      charArray0[7] = 'k';
      charArray0[8] = 'o';
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0, '1');
      assertNotNull(tCharArrayList0);
      
      TCharArrayList tCharArrayList1 = TCharArrayList.wrap(charArray0, 'V');
      boolean boolean0 = tCharArrayList0.equals((Object) tCharArrayList1);
      assertEquals('V', tCharArrayList1.getNoEntryValue());
      assertEquals(true, boolean0);
      assertEquals(9, tCharArrayList1.size());
  }

  //Test case number: 40
  /*
   * 7 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.<init>()V: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 6 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 7 gnu.trove.list.array.TCharArrayList.grep(Lgnu/trove/procedure/TCharProcedure;)Lgnu/trove/list/TCharList;: I14 Branch 87 IF_ICMPGE L905 - false
   */

  @Test
  public void test40()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '/';
      charArray0[1] = '/';
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0, '/');
      assertNotNull(tCharArrayList0);
      
      // Undeclared exception!
      try {
        tCharArrayList0.grep((TCharProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 41
  /*
   * 35 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.lastIndexOf(C)I: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.<init>(Lgnu/trove/TCharCollection;)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.wrap([C)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 9 gnu.trove.list.array.TCharArrayList.add(C)Z: root-Branch
   * 10 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 11 gnu.trove.list.array.TCharArrayList.<init>([C)V: root-Branch
   * 12 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 13 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.next()C: root-Branch
   * 14 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.<init>(Lgnu/trove/list/array/TCharArrayList;I)V: root-Branch
   * 15 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 16 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 17 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 18 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 19 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 20 gnu.trove.list.array.TCharArrayList.retainAll(Lgnu/trove/TCharCollection;)Z: I22 Branch 38 IFEQ L539 - true
   * 21 gnu.trove.list.array.TCharArrayList.retainAll(Lgnu/trove/TCharCollection;)Z: I29 Branch 39 IFNE L540 - true
   * 22 gnu.trove.list.array.TCharArrayList.get(I)C: I5 Branch 9 IF_ICMPLT L280 - true
   * 23 gnu.trove.list.array.TCharArrayList.remove(II)V: I3 Branch 16 IFNE L403 - true
   * 24 gnu.trove.list.array.TCharArrayList.addAll(Ljava/util/Collection;)Z: I12 Branch 29 IFEQ L481 - true
   * 25 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 31 IFEQ L495 - true
   * 26 gnu.trove.list.array.TCharArrayList$TCharArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - false
   * 27 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I24 Branch 32 IFEQ L497 - false
   * 28 gnu.trove.list.array.TCharArrayList.retainAll(Lgnu/trove/TCharCollection;)Z: I22 Branch 38 IFEQ L539 - false
   * 29 gnu.trove.list.array.TCharArrayList.retainAll(Lgnu/trove/TCharCollection;)Z: I4 Branch 37 IF_ACMPNE L534 - false
   * 30 gnu.trove.list.array.TCharArrayList.remove(II)V: I8 Branch 17 IFLT L404 - false
   * 31 gnu.trove.list.array.TCharArrayList.lastIndexOf(IC)I: I15 Branch 85 IF_ICMPNE L888 - false
   * 32 gnu.trove.list.array.TCharArrayList.lastIndexOf(IC)I: I7 Branch 84 IFLE L887 - false
   * 33 gnu.trove.list.array.TCharArrayList.remove(II)V: I12 Branch 18 IF_ICMPLT L404 - false
   * 34 gnu.trove.list.array.TCharArrayList.contains(C)Z: I5 Branch 86 IFLT L898 - false
   * 35 gnu.trove.list.array.TCharArrayList.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 31 IFEQ L495 - false
   */

  @Test
  public void test41()  throws Throwable  {
      Random.setNextRandom(0);
      char[] charArray0 = new char[2];
      charArray0[1] = 's';
      charArray0[0] = 's';
      charArray0[1] = 's';
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0);
      TCharArrayList tCharArrayList1 = new TCharArrayList(charArray0);
      tCharArrayList0.retainAll((TCharCollection) tCharArrayList1);
      TCharArrayList tCharArrayList2 = new TCharArrayList((TCharCollection) tCharArrayList0);
      LinkedList<Character> linkedList0 = new LinkedList<Character>();
      tCharArrayList0.addAll((Collection<? extends Character>) linkedList0);
      tCharArrayList2.lastIndexOf('s');
      charArray0[0] = '@';
      charArray0[1] = '~';
      int int0 = (-1113);
      // Undeclared exception!
      try {
        tCharArrayList0.remove((int) '~', (int) 's');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 126
         //
      }
  }

  //Test case number: 42
  /*
   * 9 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.toArray(II)[C: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.<init>([C)V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 8 gnu.trove.list.array.TCharArrayList.toArray([CII)[C: I11 Branch 61 IFLT L712 - true
   * 9 gnu.trove.list.array.TCharArrayList.toArray([CII)[C: I3 Branch 60 IFNE L709 - true
   */

  @Test
  public void test42()  throws Throwable  {
      char[] charArray0 = new char[1];
      char char0 = 'I';
      charArray0[0] = 'I';
      char char1 = 't';
      Random.setNextRandom(0);
      charArray0[0] = 't';
      TCharArrayList tCharArrayList0 = new TCharArrayList(charArray0);
      Random.setNextRandom((int) 't');
      // Undeclared exception!
      try {
        tCharArrayList0.toArray((-373), (int) 't');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -373
         //
      }
  }

  //Test case number: 43
  /*
   * 7 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.wrap([C)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.wrap([CC)Lgnu/trove/list/array/TCharArrayList;: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList$1.<init>([CCZ)V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I7 Branch 2 IFNE L123 - true
   * 5 gnu.trove.list.array.TCharArrayList.<init>([CCZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 6 gnu.trove.list.array.TCharArrayList.toArray([CIII)[C: I11 Branch 64 IFLT L725 - true
   * 7 gnu.trove.list.array.TCharArrayList.toArray([CIII)[C: I3 Branch 63 IFNE L722 - true
   */

  @Test
  public void test43()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '6';
      charArray0[1] = 'V';
      charArray0[2] = 'W';
      charArray0[3] = 'R';
      charArray0[4] = '%';
      charArray0[0] = '3';
      charArray0[6] = 'v';
      charArray0[7] = '9';
      charArray0[8] = '8';
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0);
      assertNotNull(tCharArrayList0);
      
      // Undeclared exception!
      try {
        tCharArrayList0.toArray(charArray0, (-1688), 81, (int) '%');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -1688
         //
      }
  }

  //Test case number: 44
  /*
   * 18 covered goals:
   * 1 gnu.trove.list.array.TCharArrayList.add([CII)V: root-Branch
   * 2 gnu.trove.list.array.TCharArrayList.<init>(I)V: root-Branch
   * 3 gnu.trove.list.array.TCharArrayList.<init>()V: root-Branch
   * 4 gnu.trove.list.array.TCharArrayList.add([C)V: root-Branch
   * 5 gnu.trove.list.array.TCharArrayList.<init>([C)V: root-Branch
   * 6 gnu.trove.list.array.TCharArrayList.<init>(IC)V: root-Branch
   * 7 gnu.trove.list.array.TCharArrayList.size()I: root-Branch
   * 8 gnu.trove.list.array.TCharArrayList.remove(II)V: I8 Branch 17 IFLT L404 - true
   * 9 gnu.trove.list.array.TCharArrayList.remove(II)V: I3 Branch 16 IFNE L403 - true
   * 10 gnu.trove.list.array.TCharArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 11 gnu.trove.list.array.TCharArrayList.remove(C)Z: I8 Branch 14 IF_ICMPGE L383 - true
   * 12 gnu.trove.list.array.TCharArrayList.remove(C)Z: I16 Branch 15 IF_ICMPNE L384 - true
   * 13 gnu.trove.list.array.TCharArrayList.remove(C)Z: I8 Branch 14 IF_ICMPGE L383 - false
   * 14 gnu.trove.list.array.TCharArrayList.binarySearch(C)I: root-Branch
   * 15 gnu.trove.list.array.TCharArrayList.sort()V: root-Branch
   * 16 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I3 Branch 77 IFGE L834 - true
   * 17 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I16 Branch 78 IF_ICMPLE L837 - true
   * 18 gnu.trove.list.array.TCharArrayList.binarySearch(CII)I: I38 Branch 79 IF_ICMPGT L844 - true
   */

  @Test
  public void test44()  throws Throwable  {
      Random.setNextRandom(635);
      TCharArrayList tCharArrayList0 = new TCharArrayList(629);
      tCharArrayList0.sort();
      TCharArrayList tCharArrayList1 = new TCharArrayList();
      // Undeclared exception!
      try {
        tCharArrayList1.remove((-1997), (-1997));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -1997
         //
      }
  }
}

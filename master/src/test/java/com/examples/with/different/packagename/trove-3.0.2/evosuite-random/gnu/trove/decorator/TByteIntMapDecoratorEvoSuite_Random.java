/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TByteIntMapDecorator;
import gnu.trove.map.TByteIntMap;
import gnu.trove.map.hash.TByteIntHashMap;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.StreamCorruptedException;
import java.io.UnsupportedEncodingException;
import java.util.HashMap;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.Set;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

public class TByteIntMapDecoratorEvoSuite_Random {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)82;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-102);
      byteArray0[1] = byte1;
      int[] intArray0 = new int[8];
      intArray0[0] = (int) byteArray0[0];
      intArray0[1] = (int) byteArray0[1];
      intArray0[2] = (int) byteArray0[1];
      intArray0[3] = (int) byte1;
      intArray0[4] = (int) byte1;
      intArray0[5] = (int) byteArray0[1];
      intArray0[6] = (int) byteArray0[0];
      intArray0[7] = (int) byteArray0[1];
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      int int0 = tByteIntMapDecorator0.size();
      assertEquals(2, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator();
      // Undeclared exception!
      try {
        tByteIntMapDecorator0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)125;
      byteArray0[0] = byte0;
      byte byte1 = (byte)1;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-6);
      byteArray0[2] = byte2;
      int[] intArray0 = new int[8];
      intArray0[0] = (int) byteArray0[2];
      intArray0[1] = (int) byte0;
      intArray0[2] = (int) byte0;
      intArray0[3] = (int) byte2;
      intArray0[4] = (int) byte1;
      intArray0[5] = (int) byteArray0[2];
      intArray0[6] = (int) byteArray0[2];
      intArray0[7] = (int) byte0;
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      TByteIntHashMap tByteIntHashMap1 = (TByteIntHashMap)tByteIntMapDecorator0.getMap();
      assertNotNull(tByteIntHashMap1);
      
      TByteIntMapDecorator tByteIntMapDecorator1 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap1);
      int int0 = tByteIntMapDecorator1.size();
      assertEquals(3, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator();
      byte[] byteArray0 = new byte[10];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)5;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-64);
      byteArray0[3] = byte3;
      byte byte4 = (byte)0;
      byteArray0[4] = byte4;
      byte byte5 = (byte)0;
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-124);
      byteArray0[6] = byte6;
      byte byte7 = (byte) (-86);
      byteArray0[7] = byte7;
      byte byte8 = (byte)68;
      byteArray0[8] = byte8;
      byte byte9 = (byte)40;
      byteArray0[9] = byte9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (int) byte1, (int) byteArray0[8]);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) byteArrayInputStream0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) bufferedInputStream0);
        fail("Expecting exception: StreamCorruptedException");
      
      } catch(StreamCorruptedException e) {
         //
         // invalid stream header: 0084AA44
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator();
      TByteIntMap tByteIntMap0 = tByteIntMapDecorator0.getMap();
      TByteIntMapDecorator tByteIntMapDecorator1 = new TByteIntMapDecorator(tByteIntMap0);
      Set<Byte> set0 = tByteIntMapDecorator1.keySet();
      assertNotNull(set0);
  }

  @Test
  public void test5()  throws Throwable  {
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator();
      byte byte0 = (byte)0;
      Byte byte1 = new Byte(byte0);
      Integer integer0 = new Integer((int) byte0);
      // Undeclared exception!
      try {
        tByteIntMapDecorator0.put(byte1, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator();
      byte byte0 = (byte) (-20);
      ByteArrayOutputStream byteArrayOutputStream0 = null;
      try {
        byteArrayOutputStream0 = new ByteArrayOutputStream((int) byte0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative initial size: -20
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = 0;
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator();
      // Undeclared exception!
      try {
        tByteIntMapDecorator0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator();
      HashMap<Byte, Object> hashMap0 = new HashMap<Byte, Object>();
      String string0 = "5aVg-Byae)RCAp@{;";
      Locale locale0 = new Locale(string0);
      try {
        locale0.getISO3Language();
        fail("Expecting exception: MissingResourceException");
      
      } catch(MissingResourceException e) {
         //
         // Couldn't find 3-letter language code for 5avg-byae)rcap@{;
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator();
          String string0 = "<5Squ2o";
          // Undeclared exception!
          try {
            File.createTempFile(string0, string0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Unable to create temporary file
             //
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test10()  throws Throwable  {
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator();
      byte byte0 = (byte)31;
      Byte byte1 = new Byte(byte0);
      Locale locale0 = Locale.getDefault();
      String string0 = locale0.getISO3Country();
      Integer integer0 = tByteIntMapDecorator0.get((Object) string0);
      // Undeclared exception!
      try {
        tByteIntMapDecorator0.put(byte1, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap();
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      long long0 = 0L;
      pipedInputStream0.skip(long0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap();
      TByteIntHashMap tByteIntHashMap1 = new TByteIntHashMap((TByteIntMap) tByteIntHashMap0);
      byte byte0 = (byte)73;
      tByteIntHashMap1.put(byte0, byte0);
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      byte byte1 = (byte) (-85);
      Byte.valueOf(byte1);
      InputStream inputStream0 = null;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(inputStream0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) pushbackInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator();
      byte byte0 = (byte) (-97);
      Byte byte1 = new Byte(byte0);
      Integer integer0 = new Integer((int) byte0);
      // Undeclared exception!
      try {
        tByteIntMapDecorator0.put(byte1, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap();
      TByteIntHashMap tByteIntHashMap1 = new TByteIntHashMap((TByteIntMap) tByteIntHashMap0);
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap1);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      String string0 = "";
      try {
        byteArrayOutputStream0.toString(string0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
         //
         // 
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator();
      TByteIntMap tByteIntMap0 = tByteIntMapDecorator0.getMap();
      TByteIntMapDecorator tByteIntMapDecorator1 = new TByteIntMapDecorator(tByteIntMap0);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      byte byte0 = (byte)0;
      Byte byte1 = new Byte(byte0);
      int int0 = 195;
      Integer integer0 = new Integer(int0);
      // Undeclared exception!
      try {
        tByteIntMapDecorator1.put((Byte) byte0, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

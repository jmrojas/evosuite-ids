/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedByteSet;
import gnu.trove.set.TByteSet;
import gnu.trove.set.hash.TByteHashSet;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedByteSetEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 11 covered goals:
   * 1 Weak Mutation 2: gnu.trove.impl.sync.TSynchronizedByteSet.equals(Ljava/lang/Object;)Z:65 - ReplaceVariable o -> mutex
   * 2 Weak Mutation 0: gnu.trove.impl.sync.TSynchronizedByteSet.equals(Ljava/lang/Object;)Z:65 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 1: gnu.trove.impl.sync.TSynchronizedByteSet.equals(Ljava/lang/Object;)Z:65 - DeleteField: cLgnu/trove/TByteCollection;
   * 4 Weak Mutation 3: gnu.trove.impl.sync.TSynchronizedByteSet.equals(Ljava/lang/Object;)Z:65 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 5 Weak Mutation 0: gnu.trove.impl.sync.TSynchronizedByteSet.equals(Ljava/lang/Object;)Z:65 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 1: gnu.trove.impl.sync.TSynchronizedByteSet.equals(Ljava/lang/Object;)Z:65 - DeleteField: cLgnu/trove/TByteCollection;
   * 7 Weak Mutation 2: gnu.trove.impl.sync.TSynchronizedByteSet.equals(Ljava/lang/Object;)Z:65 - ReplaceVariable o -> mutex
   * 8 Weak Mutation 3: gnu.trove.impl.sync.TSynchronizedByteSet.equals(Ljava/lang/Object;)Z:65 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 9 gnu.trove.impl.sync.TSynchronizedByteSet.<init>(Lgnu/trove/set/TByteSet;Ljava/lang/Object;)V: root-Branch
   * 10 gnu.trove.impl.sync.TSynchronizedByteSet.equals(Ljava/lang/Object;)Z: root-Branch
   * 11 gnu.trove.impl.sync.TSynchronizedByteSet.<init>(Lgnu/trove/set/TByteSet;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TByteHashSet tByteHashSet0 = new TByteHashSet(2046);
      TSynchronizedByteSet tSynchronizedByteSet0 = new TSynchronizedByteSet((TByteSet) tByteHashSet0, (Object) null);
      TSynchronizedByteSet tSynchronizedByteSet1 = new TSynchronizedByteSet((TByteSet) tSynchronizedByteSet0);
      // Undeclared exception!
      try {
        tSynchronizedByteSet1.equals((Object) tByteHashSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 1
  /*
   * 7 covered goals:
   * 1 Weak Mutation 4: gnu.trove.impl.sync.TSynchronizedByteSet.hashCode()I:68 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 5: gnu.trove.impl.sync.TSynchronizedByteSet.hashCode()I:68 - DeleteField: cLgnu/trove/TByteCollection;
   * 3 Weak Mutation 6: gnu.trove.impl.sync.TSynchronizedByteSet.hashCode()I:68 - DeleteStatement: hashCode()I
   * 4 gnu.trove.impl.sync.TSynchronizedByteSet.hashCode()I: root-Branch
   * 5 Weak Mutation 4: gnu.trove.impl.sync.TSynchronizedByteSet.hashCode()I:68 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 5: gnu.trove.impl.sync.TSynchronizedByteSet.hashCode()I:68 - DeleteField: cLgnu/trove/TByteCollection;
   * 7 Weak Mutation 6: gnu.trove.impl.sync.TSynchronizedByteSet.hashCode()I:68 - DeleteStatement: hashCode()I
   */

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      TByteHashSet tByteHashSet0 = new TByteHashSet(byteArray0);
      TSynchronizedByteSet tSynchronizedByteSet0 = new TSynchronizedByteSet((TByteSet) tByteHashSet0, (Object) "");
      int int0 = tSynchronizedByteSet0.hashCode();
      assertEquals(0, int0);
  }
}

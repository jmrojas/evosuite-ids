/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedIntList;
import gnu.trove.impl.sync.TSynchronizedRandomAccessIntList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList;
import gnu.trove.list.TIntList;
import gnu.trove.list.array.TIntArrayList;
import gnu.trove.list.linked.TIntLinkedList;
import gnu.trove.procedure.TIntProcedure;
import gnu.trove.set.hash.TIntHashSet;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Locale;
import java.util.NoSuchElementException;
import java.util.Random;
import java.util.Stack;
import java.util.StringTokenizer;
import java.util.Vector;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedIntListEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[9];
      int int0 = 0;
      intArray0[0] = int0;
      int int1 = (-399);
      intArray0[1] = int1;
      int int2 = 0;
      TIntArrayList tIntArrayList0 = new TIntArrayList();
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntArrayList0);
      int int3 = (-1086);
      // Undeclared exception!
      try {
        tSynchronizedIntList0.insert(intArray0[1], int3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TIntList tIntList0 = null;
      String string0 = "ZYNSzg`VFx}%&M";
      File file0 = new File(string0);
      String string1 = file0.getParent();
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList(tIntList0, (Object) string1);
      Random random0 = new Random();
      // Undeclared exception!
      try {
        tSynchronizedIntList0.shuffle(random0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int[] intArray0 = new int[2];
      int int0 = 1238;
      intArray0[0] = int0;
      int int1 = (-1);
      intArray0[1] = int1;
      TIntArrayList tIntArrayList0 = TIntArrayList.wrap(intArray0, int1);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntArrayList0);
      String string0 = tSynchronizedRandomAccessIntList0.toString();
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntArrayList0, (Object) string0);
      assertEquals(1237, tSynchronizedIntList0.sum());
  }

  @Test
  public void test3()  throws Throwable  {
      TIntList tIntList0 = null;
      Stack<Stack<Integer>> stack0 = new Stack<Stack<Integer>>();
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList(tIntList0, (Object) stack0);
      // Undeclared exception!
      try {
        tSynchronizedIntList0.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntLinkedList0);
      TIntLinkedList tIntLinkedList1 = (TIntLinkedList)tSynchronizedRandomAccessIntList0.list;
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList1 = new TSynchronizedRandomAccessIntList((TIntList) tIntLinkedList1);
      int[] intArray0 = new int[9];
      int int0 = 1;
      intArray0[0] = int0;
      int int1 = 1;
      intArray0[1] = int1;
      int int2 = (-442);
      intArray0[2] = int2;
      int int3 = Integer.MAX_VALUE;
      intArray0[3] = int3;
      int int4 = 1;
      intArray0[4] = int4;
      int int5 = 2023;
      intArray0[5] = int5;
      int int6 = 0;
      intArray0[6] = int6;
      int int7 = 10;
      intArray0[7] = int7;
      int int8 = 1005;
      intArray0[8] = int8;
      boolean boolean0 = tSynchronizedRandomAccessIntList1.addAll(intArray0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList();
      Stack<Vector<Object>> stack0 = new Stack<Vector<Object>>();
      String string0 = stack0.toString();
      String string1 = "HsQcM_";
      int int0 = (-1);
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string1, string0, int0, string1, string1, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: []://HsQcM_@[]HsQcM_?HsQcM_#[]
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList();
      String string0 = "";
      String string1 = "";
      File file0 = new File(string0, string1);
      String string2 = file0.getCanonicalPath();
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntArrayList0, (Object) string2);
      int int0 = 1433;
      int[] intArray0 = new int[7];
      intArray0[0] = int0;
      intArray0[1] = int0;
      int int1 = (-7);
      intArray0[2] = int1;
      intArray0[3] = int0;
      intArray0[4] = int1;
      intArray0[5] = int1;
      intArray0[6] = int0;
      intArray0[0] = int0;
      intArray0[1] = int0;
      intArray0[2] = int0;
      intArray0[3] = int0;
      intArray0[4] = int0;
      intArray0[5] = int0;
      ArrayList<String> arrayList0 = new ArrayList<String>();
      tSynchronizedRandomAccessIntList0.removeAll((Collection<?>) arrayList0);
      intArray0[6] = int0;
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessIntList0.set(int0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1433
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TIntList tIntList0 = null;
      TSynchronizedIntList tSynchronizedIntList0 = null;
      try {
        tSynchronizedIntList0 = new TSynchronizedIntList(tIntList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      TIntProcedure tIntProcedure0 = null;
      TIntLinkedList tIntLinkedList1 = (TIntLinkedList)tIntLinkedList0.grep(tIntProcedure0);
      Object object0 = null;
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntLinkedList1);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tSynchronizedIntList0, object0);
      int int0 = 0;
      int int1 = (-1676);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessIntList0.subList(int0, int1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TIntList tIntList0 = null;
      String string0 = "";
      StringTokenizer stringTokenizer0 = new StringTokenizer(string0);
      // Undeclared exception!
      try {
        stringTokenizer0.nextToken();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[9];
      int int0 = (-217);
      intArray0[0] = int0;
      int int1 = (-1);
      intArray0[1] = int1;
      int int2 = 0;
      intArray0[2] = int2;
      int int3 = 0;
      intArray0[3] = int3;
      int int4 = 0;
      intArray0[4] = int4;
      int int5 = 0;
      intArray0[5] = int5;
      int int6 = 1617;
      intArray0[6] = int6;
      int int7 = (-228);
      intArray0[7] = int7;
      int int8 = 0;
      intArray0[8] = int8;
      TIntArrayList tIntArrayList0 = TIntArrayList.wrap(intArray0);
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntArrayList0);
      TIntArrayList tIntArrayList1 = new TIntArrayList();
      tIntArrayList1.resetQuick();
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntArrayList1);
      TIntHashSet tIntHashSet0 = new TIntHashSet();
      String string0 = tIntHashSet0.toString();
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList1 = new TSynchronizedRandomAccessIntList((TIntList) tIntArrayList1, (Object) string0);
      int int9 = (-142);
      int int10 = tSynchronizedRandomAccessIntList1.binarySearch(int9);
      assertEquals((-1), int10);
  }

  @Test
  public void test11()  throws Throwable  {
      TIntList tIntList0 = null;
      TUnmodifiableRandomAccessIntList tUnmodifiableRandomAccessIntList0 = null;
      try {
        tUnmodifiableRandomAccessIntList0 = new TUnmodifiableRandomAccessIntList(tIntList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TIntList tIntList0 = null;
      Locale locale0 = Locale.ITALY;
      Locale locale1 = Locale.CHINA;
      String string0 = locale0.getDisplayName(locale1);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList(tIntList0, (Object) string0);
      int int0 = 15287;
      int int1 = 0;
      int[] intArray0 = new int[9];
      intArray0[0] = int1;
      intArray0[1] = int1;
      intArray0[2] = int1;
      intArray0[3] = int0;
      intArray0[4] = int0;
      intArray0[5] = int0;
      int int2 = (-1);
      intArray0[6] = int2;
      intArray0[7] = int0;
      intArray0[8] = int1;
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessIntList0.set(int1, intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      int int0 = 116;
      // Undeclared exception!
      try {
        tIntLinkedList0.subList(int0, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 116 greater than last index 0
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[10];
      int int0 = 859;
      intArray0[0] = int0;
      intArray0[1] = int0;
      intArray0[2] = int0;
      intArray0[3] = int0;
      int int1 = (-1471);
      intArray0[4] = int1;
      intArray0[5] = int0;
      intArray0[6] = int0;
      intArray0[7] = int0;
      intArray0[8] = int0;
      intArray0[9] = int1;
      int int2 = 1965;
      intArray0[0] = int2;
      int int3 = (-1423);
      intArray0[1] = int3;
      int int4 = 1648;
      intArray0[2] = int4;
      int int5 = (-1);
      intArray0[3] = int5;
      int int6 = 0;
      intArray0[4] = int6;
      int int7 = (-628);
      intArray0[5] = int7;
      int int8 = 1284;
      intArray0[6] = int8;
      int int9 = (-615);
      intArray0[7] = int9;
      int int10 = 51;
      intArray0[8] = int10;
      int int11 = (-1);
      intArray0[9] = int11;
      TIntArrayList tIntArrayList0 = TIntArrayList.wrap(intArray0);
      // Undeclared exception!
      try {
        tIntArrayList0.subList(intArray0[3], intArray0[4]);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[8];
      int int0 = 0;
      intArray0[0] = int0;
      int int1 = 188;
      intArray0[1] = int1;
      int int2 = 81;
      intArray0[2] = int2;
      int int3 = 314;
      intArray0[3] = int3;
      int int4 = (-1);
      intArray0[4] = int4;
      int int5 = 383;
      intArray0[5] = int5;
      int int6 = 1960;
      intArray0[6] = int6;
      int int7 = (-1688);
      intArray0[7] = int7;
      TIntArrayList tIntArrayList0 = new TIntArrayList(intArray0);
      String string0 = "";
      URI uRI0 = new URI(string0);
      String string1 = uRI0.getUserInfo();
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntArrayList0, (Object) string1);
      int int8 = 3622219;
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessIntList0.get(int8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = 573953;
      TIntList tIntList0 = null;
      String string0 = "kFli,&~2H8JfXb~\\V";
      RandomAccessFile randomAccessFile0 = null;
      try {
        randomAccessFile0 = new RandomAccessFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"kFli,&~2H8JfXb~\\V\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      int int0 = (-1999);
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList(int0);
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntLinkedList0);
      int int1 = (-140);
      // Undeclared exception!
      try {
        tSynchronizedIntList0.insert(int1, int1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

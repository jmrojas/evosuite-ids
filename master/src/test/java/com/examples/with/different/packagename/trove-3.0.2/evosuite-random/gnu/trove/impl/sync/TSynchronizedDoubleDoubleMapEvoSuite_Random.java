/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedDoubleCollection;
import gnu.trove.impl.sync.TSynchronizedDoubleDoubleMap;
import gnu.trove.impl.sync.TSynchronizedDoubleSet;
import gnu.trove.map.TDoubleDoubleMap;
import gnu.trove.map.hash.TDoubleDoubleHashMap;
import gnu.trove.procedure.TDoubleProcedure;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Locale;
import java.util.NoSuchElementException;
import java.util.StringTokenizer;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedDoubleDoubleMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = 59;
      float float0 = 1325.7552F;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(int0, float0, (double) int0, (double) float0);
      String string0 = "";
      StringTokenizer stringTokenizer0 = new StringTokenizer(string0);
      // Undeclared exception!
      try {
        stringTokenizer0.nextToken();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      Locale locale0 = Locale.US;
      String string0 = locale0.toString();
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap0 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0, (Object) string0);
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap1 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tSynchronizedDoubleDoubleMap0);
      tSynchronizedDoubleDoubleMap1.size();
      int int0 = 0;
      double double0 = 0.0;
      double double1 = 0.0;
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap(int0, (float) int0, double0, double1);
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap2 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap1);
      int int1 = 1131;
      float float0 = (-1753.9684F);
      tSynchronizedDoubleDoubleMap1.containsKey((double) int1);
      TDoubleDoubleHashMap tDoubleDoubleHashMap2 = new TDoubleDoubleHashMap(int1, float0);
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap3 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap2);
      tDoubleDoubleHashMap1.toString();
      String string1 = "wG,}]uB'M|#$";
      tSynchronizedDoubleDoubleMap2.valueCollection();
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap4 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tSynchronizedDoubleDoubleMap3, (Object) string1);
      tSynchronizedDoubleDoubleMap4.keySet();
      TDoubleDoubleHashMap tDoubleDoubleHashMap3 = new TDoubleDoubleHashMap();
      boolean boolean0 = true;
      tSynchronizedDoubleDoubleMap4.values();
      tSynchronizedDoubleDoubleMap4.put(double0, (double) int0);
      double double2 = tSynchronizedDoubleDoubleMap2.remove((double) int1);
      tDoubleDoubleHashMap1.reenableAutoCompaction(boolean0);
      tSynchronizedDoubleDoubleMap3.getNoEntryValue();
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap5 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap3);
      tSynchronizedDoubleDoubleMap3.getNoEntryValue();
      double double3 = (-1.0);
      tDoubleDoubleHashMap1.put((double) float0, double2);
      assertEquals(1, tSynchronizedDoubleDoubleMap2.size());
      
      double double4 = (-106.93030245196897);
      tSynchronizedDoubleDoubleMap4.put(double3, double4);
      assertEquals("{-1.0=-106.93030245196897, 0.0=0.0}", tSynchronizedDoubleDoubleMap4.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      Object object0 = null;
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap0 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0, object0);
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap1 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tSynchronizedDoubleDoubleMap0);
      int int0 = 0;
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap(int0);
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap2 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap1);
      tSynchronizedDoubleDoubleMap2.keySet();
      tSynchronizedDoubleDoubleMap2.toString();
      String string0 = "5|t@4!~";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: 5|t@4!~://5|t@4!~5%7Ct@4!~#5%7Ct@4!~
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = 0;
      float float0 = 0.0F;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(int0, float0);
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap0 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap1 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tSynchronizedDoubleDoubleMap0);
      double double0 = tSynchronizedDoubleDoubleMap1.getNoEntryValue();
      assertEquals(0.0, double0, 0.01D);
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 186;
      double double0 = 1790.5324688885066;
      double double1 = 0.0;
      int int1 = (-1163);
      float float0 = (-458.27945F);
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(int1, float0);
      String string0 = "";
      // Undeclared exception!
      try {
        File.createTempFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = (-1166);
      int int1 = 0;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(int1, int0);
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap0 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      tSynchronizedDoubleDoubleMap0.keySet();
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap1 = (TSynchronizedDoubleDoubleMap)tSynchronizedDoubleDoubleMap0.mutex;
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap2 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tSynchronizedDoubleDoubleMap0, (Object) tSynchronizedDoubleDoubleMap1);
      tSynchronizedDoubleDoubleMap0.increment((double) int0);
      TDoubleProcedure tDoubleProcedure0 = null;
      tSynchronizedDoubleDoubleMap2.forEachKey(tDoubleProcedure0);
      double double0 = 154.93262161138622;
      double double1 = 1106.8014560522004;
      tSynchronizedDoubleDoubleMap2.putIfAbsent(double0, double1);
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap(int0);
      Locale locale0 = Locale.FRENCH;
      String string0 = locale0.getDisplayScript();
      tDoubleDoubleHashMap1.equals((Object) tSynchronizedDoubleDoubleMap1);
      tDoubleDoubleHashMap0.containsValue((double) int1);
      tDoubleDoubleHashMap1.iterator();
      tDoubleDoubleHashMap1.forEachValue(tDoubleProcedure0);
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap3 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap1, (Object) string0);
      tDoubleDoubleHashMap1.capacity();
      // Undeclared exception!
      try {
        tSynchronizedDoubleDoubleMap0.forEachValue(tDoubleProcedure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = 0;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(int0);
      double double0 = Double.NEGATIVE_INFINITY;
      Double double1 = new Double(double0);
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap0 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0, (Object) double1);
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap1 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap1);
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap2 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tSynchronizedDoubleDoubleMap1);
      int int1 = tSynchronizedDoubleDoubleMap2.size();
      assertTrue(int1 == int0);
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = 1820;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(int0);
      double double0 = 2.0;
      tDoubleDoubleHashMap0.contains(double0);
      String string0 = "";
      boolean boolean0 = false;
      StringTokenizer stringTokenizer0 = new StringTokenizer(string0, string0, boolean0);
      // Undeclared exception!
      try {
        stringTokenizer0.nextToken();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      double double0 = 0.0;
      doubleArray0[0] = double0;
      double double1 = (-1.0);
      doubleArray0[1] = double1;
      double double2 = 1.0;
      doubleArray0[2] = double2;
      double double3 = 1274.988626592438;
      doubleArray0[3] = double3;
      double double4 = 1344.1630555884676;
      doubleArray0[4] = double4;
      TDoubleDoubleMap tDoubleDoubleMap0 = null;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = null;
      try {
        tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(tDoubleDoubleMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TDoubleDoubleMap tDoubleDoubleMap0 = null;
      String string0 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: :#
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = 350899;
      float float0 = 0.5F;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(int0, float0);
      String string0 = "";
      URI uRI0 = URI.create(string0);
      URI uRI1 = uRI0.parseServerAuthority();
      String string1 = uRI1.getRawFragment();
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap0 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0, (Object) string1);
      double double0 = 761.9842832237266;
      // Undeclared exception!
      try {
        tSynchronizedDoubleDoubleMap0.remove(double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      double double0 = 1.0;
      doubleArray0[0] = double0;
      double double1 = 0.0;
      doubleArray0[1] = double1;
      double double2 = 0.0;
      doubleArray0[2] = double2;
      double double3 = (-1.0);
      doubleArray0[3] = double3;
      double double4 = (-216.59406436951204);
      doubleArray0[4] = double4;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(doubleArray0, doubleArray0);
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap0 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap1);
      double double5 = Double.NEGATIVE_INFINITY;
      tSynchronizedDoubleDoubleMap0.putIfAbsent(double1, double5);
      assertEquals("{-1.0=-1.0, -216.59406436951204=-216.59406436951204, 1.0=1.0, 0.0=0.0}", tDoubleDoubleHashMap1.toString());
      assertTrue(tDoubleDoubleHashMap0.equals(tDoubleDoubleHashMap1));
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 1;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(int0);
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap0 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      double double0 = tSynchronizedDoubleDoubleMap0.getNoEntryKey();
      assertEquals(0.0, double0, 0.01D);
  }

  @Test
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      double double0 = 1772.5681557191472;
      doubleArray0[0] = double0;
      int int0 = (-1275);
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(int0, int0);
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap0 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      tSynchronizedDoubleDoubleMap0.size();
      double double1 = (-1478.3266052800045);
      doubleArray0[1] = double1;
      double double2 = (-545.830291596404);
      doubleArray0[2] = double2;
      double double3 = 1199.7819977481956;
      doubleArray0[3] = double3;
      double double4 = 0.0;
      tSynchronizedDoubleDoubleMap0.containsValue(double0);
      doubleArray0[4] = double4;
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap(doubleArray0, doubleArray0);
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap1 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap1);
      double double5 = 1.0;
      tSynchronizedDoubleDoubleMap1.remove(double5);
      assertEquals(5, tSynchronizedDoubleDoubleMap1.size());
  }

  @Test
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      double double0 = 1173.8832041443732;
      doubleArray0[0] = double0;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(doubleArray0, doubleArray0);
      String string0 = "";
      Locale locale0 = new Locale(string0);
      String string1 = locale0.getVariant();
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap0 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0, (Object) string1);
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap1 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tSynchronizedDoubleDoubleMap0);
      double double1 = 0.0;
      doubleArray0[1] = double1;
      double double2 = 0.0;
      doubleArray0[2] = double2;
      double double3 = 1803.6468536082612;
      doubleArray0[3] = double3;
      double double4 = Double.POSITIVE_INFINITY;
      doubleArray0[4] = double4;
      double double5 = 0.0;
      doubleArray0[5] = double5;
      double double6 = 0.0;
      doubleArray0[6] = double6;
      double double7 = (-911.2971178210307);
      doubleArray0[7] = double7;
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = double2;
      doubleArray1[1] = double4;
      doubleArray1[2] = double1;
      doubleArray1[3] = double0;
      doubleArray1[4] = double2;
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap(doubleArray0, doubleArray1);
      TDoubleDoubleHashMap tDoubleDoubleHashMap2 = new TDoubleDoubleHashMap((TDoubleDoubleMap) tDoubleDoubleHashMap1);
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap2 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap2);
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap3 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tSynchronizedDoubleDoubleMap2);
      TSynchronizedDoubleCollection tSynchronizedDoubleCollection0 = (TSynchronizedDoubleCollection)tSynchronizedDoubleDoubleMap3.valueCollection();
      assertEquals(0.0, tSynchronizedDoubleCollection0.getNoEntryValue(), 0.01D);
  }

  @Test
  public void test15()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      Locale locale0 = Locale.ROOT;
      String string0 = locale0.toString();
      int int0 = 836;
      float float0 = 0.0F;
      double double0 = 0.0;
      Locale locale1 = new Locale(string0);
      locale0.getDisplayCountry(locale1);
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap(int0, float0, (double) int0, double0);
      URI uRI0 = URI.create(string0);
      String string1 = uRI0.getRawFragment();
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap0 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap1, (Object) string1);
      // Undeclared exception!
      try {
        tSynchronizedDoubleDoubleMap0.values(tDoubleDoubleHashMap1._set);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      double double0 = (-716.3787324651072);
      doubleArray0[0] = double0;
      double double1 = 1794.0390588350824;
      doubleArray0[1] = double1;
      double double2 = 1.0;
      doubleArray0[2] = double2;
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = double0;
      doubleArray1[1] = double2;
      doubleArray1[2] = double2;
      doubleArray1[3] = double1;
      double double3 = (-1970.502991466045);
      doubleArray1[4] = double3;
      doubleArray1[5] = double0;
      double double4 = (-1013.8670789882608);
      doubleArray1[6] = double4;
      doubleArray1[7] = double2;
      doubleArray1[8] = double0;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(doubleArray0, doubleArray1);
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap0 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap1);
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap1 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tSynchronizedDoubleDoubleMap0);
      int int0 = 210;
      float float0 = 0.0F;
      TDoubleDoubleHashMap tDoubleDoubleHashMap2 = new TDoubleDoubleHashMap(int0, float0);
      tDoubleDoubleHashMap2.keys();
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap2 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap2);
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = (TSynchronizedDoubleSet)tSynchronizedDoubleDoubleMap2.keySet();
      assertEquals(0.0, tSynchronizedDoubleSet0.getNoEntryValue(), 0.01D);
  }

  @Test
  public void test17()  throws Throwable  {
      int int0 = 1;
      float float0 = (-1891.7987F);
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(int0, float0);
      String string0 = "";
      URI uRI0 = URI.create(string0);
      uRI0.resolve(string0);
      double[] doubleArray0 = new double[10];
      doubleArray0[0] = (double) float0;
      doubleArray0[1] = (double) float0;
      doubleArray0[2] = (double) int0;
      doubleArray0[3] = (double) int0;
      doubleArray0[4] = (double) float0;
      doubleArray0[5] = (double) float0;
      double double0 = 2.0;
      doubleArray0[6] = double0;
      double double1 = (-1059.1494967302663);
      doubleArray0[7] = double1;
      doubleArray0[8] = (double) int0;
      doubleArray0[9] = (double) float0;
      tDoubleDoubleHashMap0._set = doubleArray0;
      URI uRI1 = uRI0.parseServerAuthority();
      URI uRI2 = uRI0.resolve(uRI1);
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap0 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      tSynchronizedDoubleDoubleMap0.getNoEntryKey();
      URI uRI3 = uRI2.relativize(uRI0);
      URI uRI4 = uRI3.normalize();
      String string1 = uRI4.getSchemeSpecificPart();
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap1 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0, (Object) string1);
      // Undeclared exception!
      try {
        tSynchronizedDoubleDoubleMap1.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      int int0 = (-730);
      float float0 = 1.0F;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(int0, float0);
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      double[] doubleArray0 = new double[10];
      doubleArray0[0] = (double) float0;
      doubleArray0[1] = (double) float0;
      doubleArray0[2] = (double) int0;
      doubleArray0[3] = (double) int0;
      doubleArray0[4] = (double) int0;
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap0 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap1);
      String string0 = tSynchronizedDoubleDoubleMap0.toString();
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap1 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0, (Object) string0);
      tSynchronizedDoubleDoubleMap1.hashCode();
      doubleArray0[5] = (double) float0;
      doubleArray0[6] = (double) float0;
      doubleArray0[7] = (double) float0;
      doubleArray0[8] = (double) float0;
      doubleArray0[9] = (double) int0;
      tDoubleDoubleHashMap1._set = doubleArray0;
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap2 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap1);
      String string1 = "E<Xn Xp0&uf";
      double double0 = 0.0;
      tSynchronizedDoubleDoubleMap2.adjustValue((double) float0, double0);
      File file0 = new File(string1);
      String string2 = file0.getName();
      tSynchronizedDoubleDoubleMap2.equals((Object) string2);
      tSynchronizedDoubleDoubleMap2.containsValue((double) int0);
      double double1 = (-1.0);
      tSynchronizedDoubleDoubleMap2.get(double1);
      String string3 = "C.6Adk";
      URI uRI0 = new URI(string3, string3, string3);
      URI uRI1 = uRI0.parseServerAuthority();
      URI uRI2 = uRI0.resolve(uRI1);
      String string4 = uRI2.getRawPath();
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap3 = new TSynchronizedDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0, (Object) string4);
      assertEquals(0.0, tSynchronizedDoubleDoubleMap3.getNoEntryKey(), 0.01D);
  }
}

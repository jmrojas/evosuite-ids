/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.map.TDoubleShortMap;
import gnu.trove.map.hash.TDoubleShortHashMap;
import gnu.trove.procedure.TDoubleProcedure;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TDoubleShortHashEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleShortHash.removeAt(I)V: root-Branch
   * 2 gnu.trove.impl.hash.TDoubleShortHash.insertKeyAt(ID)V: root-Branch
   * 3 gnu.trove.impl.hash.TDoubleShortHash.index(D)I: I37 Branch 5 IFNE L228 - true
   * 4 gnu.trove.impl.hash.TDoubleShortHash.index(D)I: I46 Branch 6 IF_ICMPNE L231 - false
   * 5 gnu.trove.impl.hash.TDoubleShortHash.index(D)I: I52 Branch 7 IFNE L231 - false
   * 6 gnu.trove.impl.hash.TDoubleShortHash.insertKey(D)I: I30 Branch 13 IFNE L279 - false
   * 7 gnu.trove.impl.hash.TDoubleShortHash.setUp(I)I: root-Branch
   * 8 gnu.trove.impl.hash.TDoubleShortHash.<init>()V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      tDoubleShortHashMap0.putIfAbsent(0.0, (short) (-599));
      assertEquals(false, tDoubleShortHashMap0.isEmpty());
      
      short short0 = tDoubleShortHashMap0.remove(0.0);
      assertEquals((short) (-599), short0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.hash.TDoubleShortHash.<init>(IFDS)V: root-Branch
   */

//   @Test
//   public void test1()  throws Throwable  {
//       TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(808, 1962.9843F, (double) 808, (short) (-180));
//       assertEquals(-180, tDoubleShortHashMap0.getNoEntryValue());
//       assertEquals(808.0, tDoubleShortHashMap0.getNoEntryKey(), 0.01D);
//   }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.hash.TDoubleShortHash.getNoEntryValue()S: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      short short0 = tDoubleShortHashMap0.getNoEntryValue();
      assertEquals((short)0, short0);
      assertEquals(23, tDoubleShortHashMap0.capacity());
      assertEquals(0.0, tDoubleShortHashMap0.getNoEntryKey(), 0.01D);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.hash.TDoubleShortHash.getNoEntryKey()D: root-Branch
   */

//   @Test
//   public void test3()  throws Throwable  {
//       TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
//       double double0 = tDoubleShortHashMap0.getNoEntryKey();
//       assertEquals(0.0, double0, 0.01D);
//       assertEquals(23, tDoubleShortHashMap0.capacity());
//       assertEquals(0, tDoubleShortHashMap0.getNoEntryValue());
//   }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleShortHash.writeExternal(Ljava/io/ObjectOutput;)V: root-Branch
   * 2 gnu.trove.impl.hash.TDoubleShortHash.<init>(I)V: root-Branch
   */

//   @Test
//   public void test4()  throws Throwable  {
//       TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(1);
//       ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
//       ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
//       tDoubleShortHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
//       assertEquals(0.0, tDoubleShortHashMap0.getNoEntryKey(), 0.01D);
//       assertEquals(0, tDoubleShortHashMap0.getNoEntryValue());
//   }

  //Test case number: 5
  /*
   * 13 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleShortHash.contains(D)Z: I5 Branch 1 IFLT L178 - true
   * 2 gnu.trove.impl.hash.TDoubleShortHash.index(D)I: I37 Branch 5 IFNE L228 - false
   * 3 gnu.trove.impl.hash.TDoubleShortHash.insertKey(D)I: I30 Branch 13 IFNE L279 - true
   * 4 gnu.trove.impl.hash.TDoubleShortHash.insertKey(D)I: I50 Branch 14 IF_ICMPNE L286 - false
   * 5 gnu.trove.impl.hash.TDoubleShortHash.insertKey(D)I: I57 Branch 15 IFNE L286 - true
   * 6 gnu.trove.impl.hash.TDoubleShortHash.insertKey(D)I: I57 Branch 15 IFNE L286 - false
   * 7 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I28 Branch 16 IF_ICMPNE L306 - true
   * 8 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I45 Branch 18 IFGE L310 - false
   * 9 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I62 Branch 19 IFNE L316 - true
   * 10 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I62 Branch 19 IFNE L316 - false
   * 11 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I67 Branch 20 IF_ICMPEQ L317 - true
   * 12 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I97 Branch 21 IF_ICMPNE L327 - false
   * 13 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I104 Branch 22 IFNE L327 - false
   */

//   @Test
//   public void test5()  throws Throwable  {
//       double[] doubleArray0 = new double[10];
//       doubleArray0[0] = (double) 1962.9843F;
//       doubleArray0[1] = (double) 808;
//       doubleArray0[2] = (double) 808;
//       doubleArray0[3] = (double) 808;
//       doubleArray0[4] = (double) 808;
//       doubleArray0[5] = (double) 1962.9843F;
//       doubleArray0[6] = (double) (short) (-180);
//       doubleArray0[7] = (double) (short) (-180);
//       short[] shortArray0 = new short[8];
//       TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(doubleArray0, shortArray0);
//       boolean boolean0 = tDoubleShortHashMap0.contains(0.0);
//       assertEquals("{-180.0=0, 808.0=0, 1962.9842529296875=0}", tDoubleShortHashMap0.toString());
//       assertEquals(false, boolean0);
//       assertEquals(0, tDoubleShortHashMap0.getNoEntryValue());
//       assertEquals(3, tDoubleShortHashMap0.size());
//   }

  //Test case number: 6
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleShortHash.contains(D)Z: I5 Branch 1 IFLT L178 - false
   * 2 gnu.trove.impl.hash.TDoubleShortHash.index(D)I: I52 Branch 7 IFNE L231 - false
   */

  @Test
  public void test6()  throws Throwable  {
      double[] doubleArray0 = new double[18];
      short[] shortArray0 = new short[7];
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(doubleArray0, shortArray0);
      boolean boolean0 = tDoubleShortHashMap0.containsKey((double) (short)0);
      assertEquals(1, tDoubleShortHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleShortHash.forEach(Lgnu/trove/procedure/TDoubleProcedure;)Z: I18 Branch 2 IFLE L192 - true
   * 2 gnu.trove.impl.hash.TDoubleShortHash.forEach(Lgnu/trove/procedure/TDoubleProcedure;)Z: I18 Branch 2 IFLE L192 - false
   * 3 gnu.trove.impl.hash.TDoubleShortHash.forEach(Lgnu/trove/procedure/TDoubleProcedure;)Z: I25 Branch 3 IF_ICMPNE L193 - true
   */

//   @Test
//   public void test7()  throws Throwable  {
//       TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
//       boolean boolean0 = tDoubleShortHashMap0.forEach((TDoubleProcedure) null);
//       assertEquals(0.0, tDoubleShortHashMap0.getNoEntryKey(), 0.01D);
//       assertEquals(23, tDoubleShortHashMap0.capacity());
//       assertEquals(true, boolean0);
//       assertEquals(0, tDoubleShortHashMap0.getNoEntryValue());
//   }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleShortHash.forEach(Lgnu/trove/procedure/TDoubleProcedure;)Z: I25 Branch 3 IF_ICMPNE L193 - false
   * 2 gnu.trove.impl.hash.TDoubleShortHash.forEach(Lgnu/trove/procedure/TDoubleProcedure;)Z: I18 Branch 2 IFLE L192 - false
   * 3 gnu.trove.impl.hash.TDoubleShortHash.forEach(Lgnu/trove/procedure/TDoubleProcedure;)Z: I25 Branch 3 IF_ICMPNE L193 - true
   */

  @Test
  public void test8()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      tDoubleShortHashMap0.adjustOrPutValue((double) (short)281, (short)281, (short)281);
      // Undeclared exception!
      try {
        tDoubleShortHashMap0.forEachKey((TDoubleProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 4 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleShortHash.index(D)I: I52 Branch 7 IFNE L231 - true
   * 2 gnu.trove.impl.hash.TDoubleShortHash.indexRehashed(DIIB)I: I46 Branch 9 IFNE L250 - false
   * 3 gnu.trove.impl.hash.TDoubleShortHash.<init>(IF)V: root-Branch
   * 4 gnu.trove.impl.hash.TDoubleShortHash.indexRehashed(DIIB)I: I29 Branch 8 IFGE L245 - false
   */

  @Test
  public void test9()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((int) (short)0, (float) 1);
      tDoubleShortHashMap0.adjustOrPutValue((double) 1, (short)0, (short)0);
      short short0 = tDoubleShortHashMap0.get((double) (short)0);
      assertEquals("{1.0=0}", tDoubleShortHashMap0.toString());
      assertEquals((short)0, short0);
  }

  //Test case number: 10
  /*
   * 6 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleShortHash.indexRehashed(DIIB)I: I59 Branch 10 IFNE L254 - true
   * 2 gnu.trove.impl.hash.TDoubleShortHash.indexRehashed(DIIB)I: I46 Branch 9 IFNE L250 - false
   * 3 gnu.trove.impl.hash.TDoubleShortHash.index(D)I: I46 Branch 6 IF_ICMPNE L231 - true
   * 4 gnu.trove.impl.hash.TDoubleShortHash.indexRehashed(DIIB)I: I29 Branch 8 IFGE L245 - true
   * 5 gnu.trove.impl.hash.TDoubleShortHash.indexRehashed(DIIB)I: I46 Branch 9 IFNE L250 - true
   * 6 gnu.trove.impl.hash.TDoubleShortHash.indexRehashed(DIIB)I: I71 Branch 12 IF_ICMPNE L256 - true
   */

  @Test
  public void test10()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      byte[] byteArray0 = new byte[8];
      tDoubleShortHashMap0.trimToSize();
      byteArray0[0] = (byte)78;
      byteArray0[2] = (byte)4;
      tDoubleShortHashMap0._states = byteArray0;
      tDoubleShortHashMap0.remove((double) (byte) (-81));
      assertEquals(0.0, tDoubleShortHashMap0.getNoEntryKey(), 0.01D);
  }

  //Test case number: 11
  /*
   * 4 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleShortHash.indexRehashed(DIIB)I: I62 Branch 11 IF_ICMPEQ L254 - false
   * 2 gnu.trove.impl.hash.TDoubleShortHash.index(D)I: I46 Branch 6 IF_ICMPNE L231 - false
   * 3 gnu.trove.impl.hash.TDoubleShortHash.index(D)I: I52 Branch 7 IFNE L231 - true
   * 4 gnu.trove.impl.hash.TDoubleShortHash.indexRehashed(DIIB)I: I59 Branch 10 IFNE L254 - false
   */

  @Test
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[10];
      doubleArray0[0] = (double) 1962.9843F;
      doubleArray0[1] = (double) 808;
      short[] shortArray0 = new short[8];
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(doubleArray0, shortArray0);
      TDoubleShortHashMap tDoubleShortHashMap1 = new TDoubleShortHashMap((TDoubleShortMap) tDoubleShortHashMap0);
      tDoubleShortHashMap1.get((double) 1962.9843F);
      assertEquals("{808.0=0, 1962.9842529296875=0, 0.0=0}", tDoubleShortHashMap0.toString());
      assertEquals("{1962.9842529296875=0, 808.0=0, 0.0=0}", tDoubleShortHashMap1.toString());
      assertEquals(3, tDoubleShortHashMap0.size());
      assertTrue(tDoubleShortHashMap0.equals(tDoubleShortHashMap1));
  }

  //Test case number: 12
  /*
   * 9 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleShortHash.indexRehashed(DIIB)I: I71 Branch 12 IF_ICMPNE L256 - false
   * 2 gnu.trove.impl.hash.TDoubleShortHash.index(D)I: I37 Branch 5 IFNE L228 - true
   * 3 gnu.trove.impl.hash.TDoubleShortHash.index(D)I: I46 Branch 6 IF_ICMPNE L231 - true
   * 4 gnu.trove.impl.hash.TDoubleShortHash.indexRehashed(DIIB)I: I29 Branch 8 IFGE L245 - true
   * 5 gnu.trove.impl.hash.TDoubleShortHash.indexRehashed(DIIB)I: I29 Branch 8 IFGE L245 - false
   * 6 gnu.trove.impl.hash.TDoubleShortHash.indexRehashed(DIIB)I: I46 Branch 9 IFNE L250 - true
   * 7 gnu.trove.impl.hash.TDoubleShortHash.indexRehashed(DIIB)I: I59 Branch 10 IFNE L254 - false
   * 8 gnu.trove.impl.hash.TDoubleShortHash.indexRehashed(DIIB)I: I62 Branch 11 IF_ICMPEQ L254 - true
   * 9 gnu.trove.impl.hash.TDoubleShortHash.indexRehashed(DIIB)I: I71 Branch 12 IF_ICMPNE L256 - true
   */

  @Test
  public void test12()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      byte[] byteArray0 = new byte[8];
      tDoubleShortHashMap0.trimToSize();
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      byteArray0[0] = (byte)2;
      tDoubleShortHashMap0._states = byteArray0;
      tDoubleShortHashMap0.get(0.0);
      assertEquals(0.0, tDoubleShortHashMap0.getNoEntryKey(), 0.01D);
  }

  //Test case number: 13
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I31 Branch 17 IF_ICMPNE L306 - true
   * 2 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I45 Branch 18 IFGE L310 - true
   * 3 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I97 Branch 21 IF_ICMPNE L327 - true
   * 4 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I116 Branch 23 IF_ICMPNE L332 - true
   * 5 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I67 Branch 20 IF_ICMPEQ L317 - false
   * 6 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I28 Branch 16 IF_ICMPNE L306 - false
   * 7 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I31 Branch 17 IF_ICMPNE L306 - false
   * 8 gnu.trove.impl.hash.TDoubleShortHash.insertKey(D)I: I50 Branch 14 IF_ICMPNE L286 - true
   */

  @Test
  public void test13()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      byte[] byteArray0 = new byte[8];
      tDoubleShortHashMap0.trimToSize();
      byteArray0[1] = (byte)2;
      byteArray0[0] = (byte)2;
      tDoubleShortHashMap0._states = byteArray0;
      tDoubleShortHashMap0.putIfAbsent(28.427859172835216, (short) (-589));
      assertEquals("{28.427859172835216=-589}", tDoubleShortHashMap0.toString());
      assertEquals(false, tDoubleShortHashMap0.isEmpty());
  }

  //Test case number: 14
  /*
   * 9 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I104 Branch 22 IFNE L327 - true
   * 2 gnu.trove.impl.hash.TDoubleShortHash.<init>(I)V: root-Branch
   * 3 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I62 Branch 19 IFNE L316 - false
   * 4 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I67 Branch 20 IF_ICMPEQ L317 - true
   * 5 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I97 Branch 21 IF_ICMPNE L327 - false
   * 6 gnu.trove.impl.hash.TDoubleShortHash.insertKey(D)I: I30 Branch 13 IFNE L279 - false
   * 7 gnu.trove.impl.hash.TDoubleShortHash.insertKey(D)I: I50 Branch 14 IF_ICMPNE L286 - false
   * 8 gnu.trove.impl.hash.TDoubleShortHash.insertKey(D)I: I57 Branch 15 IFNE L286 - true
   * 9 gnu.trove.impl.hash.TDoubleShortHash.insertKey(D)I: I57 Branch 15 IFNE L286 - false
   */

//   @Test
//   public void test14()  throws Throwable  {
//       double[] doubleArray0 = new double[8];
//       doubleArray0[0] = 1507.3079831142704;
//       doubleArray0[1] = 70.35284248578124;
//       doubleArray0[2] = 1507.3079831142704;
//       doubleArray0[2] = 1691.2872024617016;
//       short[] shortArray0 = new short[5];
//       TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(doubleArray0, shortArray0);
//       assertEquals(0.0, tDoubleShortHashMap0.getNoEntryKey(), 0.01D);
//       assertEquals(4, tDoubleShortHashMap0.size());
//       assertEquals(0, tDoubleShortHashMap0.getNoEntryValue());
//       assertEquals("{1691.2872024617016=0, 70.35284248578124=0, 1507.3079831142704=0, 0.0=0}", tDoubleShortHashMap0.toString());
//   }

  //Test case number: 15
  /*
   * 6 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I116 Branch 23 IF_ICMPNE L332 - false
   * 2 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I121 Branch 24 IF_ICMPEQ L336 - false
   * 3 gnu.trove.impl.hash.TDoubleShortHash.insertKeyAt(ID)V: root-Branch
   * 4 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I28 Branch 16 IF_ICMPNE L306 - false
   * 5 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I31 Branch 17 IF_ICMPNE L306 - true
   * 6 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I31 Branch 17 IF_ICMPNE L306 - false
   */

  @Test
  public void test15()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      byte[] byteArray0 = new byte[8];
      tDoubleShortHashMap0.trimToSize();
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      byteArray0[0] = (byte)2;
      tDoubleShortHashMap0._states = byteArray0;
      tDoubleShortHashMap0.putIfAbsent(28.427859172835216, (short) (-589));
      assertEquals(1, tDoubleShortHashMap0.size());
      assertEquals(false, tDoubleShortHashMap0.isEmpty());
  }

  //Test case number: 16
  /*
   * 12 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I121 Branch 24 IF_ICMPEQ L336 - true
   * 2 gnu.trove.impl.hash.TDoubleShortHash.setUp(I)I: root-Branch
   * 3 gnu.trove.impl.hash.TDoubleShortHash.<init>()V: root-Branch
   * 4 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I28 Branch 16 IF_ICMPNE L306 - true
   * 5 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I45 Branch 18 IFGE L310 - true
   * 6 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I45 Branch 18 IFGE L310 - false
   * 7 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I62 Branch 19 IFNE L316 - true
   * 8 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I97 Branch 21 IF_ICMPNE L327 - true
   * 9 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I116 Branch 23 IF_ICMPNE L332 - true
   * 10 gnu.trove.impl.hash.TDoubleShortHash.insertKeyRehash(DIIB)I: I116 Branch 23 IF_ICMPNE L332 - false
   * 11 gnu.trove.impl.hash.TDoubleShortHash.insertKey(D)I: I30 Branch 13 IFNE L279 - true
   * 12 gnu.trove.impl.hash.TDoubleShortHash.insertKey(D)I: I50 Branch 14 IF_ICMPNE L286 - true
   */

  @Test
  public void test16()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      assertEquals(23, tDoubleShortHashMap0.capacity());
      
      byte[] byteArray0 = new byte[8];
      tDoubleShortHashMap0.trimToSize();
      byteArray0[1] = (byte)4;
      byteArray0[0] = (byte)78;
      byteArray0[2] = (byte)4;
      tDoubleShortHashMap0._states = byteArray0;
      // Undeclared exception!
      try {
        tDoubleShortHashMap0.putIfAbsent((double) (byte)78, (short) (byte)4);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No free or removed slots available. Key set full?!!
         //
      }
  }
}

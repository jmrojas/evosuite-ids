/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.list.linked;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TFloatCollection;
import gnu.trove.function.TFloatFunction;
import gnu.trove.impl.sync.TSynchronizedFloatCollection;
import gnu.trove.impl.sync.TSynchronizedRandomAccessFloatList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessFloatList;
import gnu.trove.list.TFloatList;
import gnu.trove.list.array.TFloatArrayList;
import gnu.trove.list.linked.TFloatLinkedList;
import gnu.trove.procedure.TFloatProcedure;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Random;
import java.util.Set;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TFloatLinkedListEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 9 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.insert(IF)V: root-Branch
   * 2 gnu.trove.list.linked.TFloatLinkedList.<init>()V: root-Branch
   * 3 gnu.trove.list.linked.TFloatLinkedList.size()I: root-Branch
   * 4 gnu.trove.list.linked.TFloatLinkedList$TFloatLink.<init>(F)V: root-Branch
   * 5 gnu.trove.list.linked.TFloatLinkedList$TFloatLink.setNext(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;)V: root-Branch
   * 6 gnu.trove.list.linked.TFloatLinkedList.add(F)Z: I12 Branch 5 IFEQ L87 - false
   * 7 gnu.trove.list.linked.TFloatLinkedList.insert(ILgnu/trove/list/linked/TFloatLinkedList;)V: I20 Branch 8 IF_ACMPNE L138 - false
   * 8 gnu.trove.list.linked.TFloatLinkedList.getLinkAt(I)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I5 Branch 14 IF_ICMPLT L204 - false
   * 9 gnu.trove.list.linked.TFloatLinkedList.no(Ljava/lang/Object;)Z: I3 Branch 110 IFNONNULL L1004 - false
   */

  @Test
  public void test0()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      // Undeclared exception!
      try {
        tFloatLinkedList0.insert(0, (-1458));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 1
  /*
   * 7 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.replace(IF)F: root-Branch
   * 2 gnu.trove.list.linked.TFloatLinkedList.getLinkAt(I)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I5 Branch 14 IF_ICMPLT L204 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.getLinkAt(I)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I17 Branch 15 IF_ICMPGT L207 - false
   * 4 gnu.trove.list.linked.TFloatLinkedList.getLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;IIZ)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I8 Branch 16 IFEQ L236 - true
   * 5 gnu.trove.list.linked.TFloatLinkedList.set(IF)F: I5 Branch 20 IF_ICMPLE L251 - true
   * 6 gnu.trove.list.linked.TFloatLinkedList.set(IF)F: I35 Branch 21 IFEQ L256 - false
   * 7 gnu.trove.list.linked.TFloatLinkedList.got(Ljava/lang/Object;)Z: I3 Branch 109 IFNULL L1000 - true
   */

  @Test
  public void test1()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      // Undeclared exception!
      try {
        tFloatLinkedList0.replace((-332), 889.5033F);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // at offset -332
         //
      }
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.toArray(II)[F: root-Branch
   * 2 gnu.trove.list.linked.TFloatLinkedList.link([FII)Lgnu/trove/list/linked/TFloatLinkedList;: I13 Branch 11 IF_ICMPGE L173 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.toArray([FIII)[F: I3 Branch 69 IFNE L639 - false
   */

  @Test
  public void test2()  throws Throwable  {
      float[] floatArray0 = new float[7];
      TFloatLinkedList tFloatLinkedList0 = TFloatLinkedList.link(floatArray0, (-1828), (-1828));
      float[] floatArray1 = tFloatLinkedList0.toArray(31, 0);
      assertNotSame(floatArray1, floatArray0);
  }

  //Test case number: 3
  /*
   * 14 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.getLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;II)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: root-Branch
   * 2 gnu.trove.list.linked.TFloatLinkedList.binarySearch(F)I: root-Branch
   * 3 gnu.trove.list.linked.TFloatLinkedList$TFloatLink.getValue()F: root-Branch
   * 4 gnu.trove.list.linked.TFloatLinkedList.getLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;IIZ)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I8 Branch 16 IFEQ L236 - false
   * 5 gnu.trove.list.linked.TFloatLinkedList.getLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;IIZ)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I13 Branch 17 IF_ICMPNE L237 - false
   * 6 gnu.trove.list.linked.TFloatLinkedList.binarySearch(FII)I: I3 Branch 82 IFGE L723 - true
   * 7 gnu.trove.list.linked.TFloatLinkedList.binarySearch(FII)I: I16 Branch 83 IF_ICMPLE L727 - true
   * 8 gnu.trove.list.linked.TFloatLinkedList.binarySearch(FII)I: I40 Branch 84 IF_ICMPGE L732 - true
   * 9 gnu.trove.list.linked.TFloatLinkedList.binarySearch(FII)I: I66 Branch 85 IF_ICMPGE L742 - true
   * 10 gnu.trove.list.linked.TFloatLinkedList.binarySearch(FII)I: I66 Branch 85 IF_ICMPGE L742 - false
   * 11 gnu.trove.list.linked.TFloatLinkedList.binarySearch(FII)I: I88 Branch 86 IFNE L745 - true
   * 12 gnu.trove.list.linked.TFloatLinkedList.binarySearch(FII)I: I99 Branch 87 IFGE L748 - false
   * 13 gnu.trove.list.linked.TFloatLinkedList.got(Ljava/lang/Object;)Z: I3 Branch 109 IFNULL L1000 - false
   * 14 gnu.trove.list.linked.TFloatLinkedList.<init>(F)V: root-Branch
   */

//   @Test
//   public void test3()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(0.0F);
//       tFloatLinkedList0.add((float) (-1763));
//       int int0 = tFloatLinkedList0.binarySearch(0.0F);
//       assertEquals((-1763.0F), tFloatLinkedList0.sum(), 0.01F);
//       assertEquals((-2), int0);
//   }

  //Test case number: 4
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.lastIndexOf(F)I: root-Branch
   * 2 gnu.trove.list.linked.TFloatLinkedList.isEmpty()Z: I4 Branch 4 IFNE L81 - false
   * 3 gnu.trove.list.linked.TFloatLinkedList.lastIndexOf(IF)I: I4 Branch 90 IFEQ L784 - false
   */

  @Test
  public void test4()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      int int0 = tFloatLinkedList0.lastIndexOf(0.0F);
      assertEquals((-1), int0);
      assertEquals(true, tFloatLinkedList0.isEmpty());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.indexOf(F)I: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(0.0F);
      // Undeclared exception!
      try {
        tFloatLinkedList0.indexOf((float) (-174));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.toArray([F)[F: root-Branch
   * 2 gnu.trove.list.linked.TFloatLinkedList.toArray([FIII)[F: I3 Branch 69 IFNE L639 - false
   * 3 gnu.trove.list.linked.TFloatLinkedList.toArray([FII)[F: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      float[] floatArray0 = new float[1];
      float[] floatArray1 = tFloatLinkedList0.toArray(floatArray0);
      assertSame(floatArray0, floatArray1);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.clear()V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      tFloatLinkedList0.clear();
      assertEquals(true, tFloatLinkedList0.isEmpty());
      assertEquals(0, tFloatLinkedList0.size());
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.insert(I[FII)V: root-Branch
   * 2 gnu.trove.list.linked.TFloatLinkedList.insert(ILgnu/trove/list/linked/TFloatLinkedList;)V: I20 Branch 8 IF_ACMPNE L138 - false
   */

  @Test
  public void test8()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList((-427.47305F));
      float[] floatArray0 = new float[9];
      // Undeclared exception!
      try {
        tFloatLinkedList0.insert(1813, floatArray0, (-1), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 12 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList$TFloatLink.setValue(F)V: root-Branch
   * 2 gnu.trove.list.linked.TFloatLinkedList$TFloatLink.getNext()Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: root-Branch
   * 3 gnu.trove.list.linked.TFloatLinkedList.add([F)V: I14 Branch 6 IF_ICMPGE L103 - true
   * 4 gnu.trove.list.linked.TFloatLinkedList.add([F)V: I14 Branch 6 IF_ICMPGE L103 - false
   * 5 gnu.trove.list.linked.TFloatLinkedList.fill(IIF)V: I74 Branch 81 IF_ICMPGE L708 - false
   * 6 gnu.trove.list.linked.TFloatLinkedList.fill(F)V: root-Branch
   * 7 gnu.trove.list.linked.TFloatLinkedList.fill(IIF)V: I22 Branch 78 IF_ICMPLE L699 - true
   * 8 gnu.trove.list.linked.TFloatLinkedList.fill(IIF)V: I74 Branch 81 IF_ICMPGE L708 - true
   * 9 gnu.trove.list.linked.TFloatLinkedList.add(F)Z: I12 Branch 5 IFEQ L87 - true
   * 10 gnu.trove.list.linked.TFloatLinkedList.no(Ljava/lang/Object;)Z: I3 Branch 110 IFNONNULL L1004 - true
   * 11 gnu.trove.list.linked.TFloatLinkedList.fill(IIF)V: I3 Branch 77 IFGE L693 - true
   * 12 gnu.trove.list.linked.TFloatLinkedList$TFloatLink.setPrevious(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;)V: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      float[] floatArray0 = new float[3];
      tFloatLinkedList0.add(floatArray0);
      tFloatLinkedList0.fill(0.0F);
      assertEquals(false, tFloatLinkedList0.isEmpty());
      assertEquals("{0.0, 0.0, 0.0}", tFloatLinkedList0.toString());
  }

  //Test case number: 10
  /*
   * 7 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.<init>(Lgnu/trove/list/TFloatList;)V: I29 Branch 3 IFEQ L63 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList$1.next()F: I5 Branch 1 IFEQ L819 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.getNoEntryValue()F: root-Branch
   * 4 gnu.trove.list.linked.TFloatLinkedList.iterator()Lgnu/trove/iterator/TFloatIterator;: root-Branch
   * 5 gnu.trove.list.linked.TFloatLinkedList.<init>(Lgnu/trove/list/TFloatList;)V: I29 Branch 3 IFEQ L63 - true
   * 6 gnu.trove.list.linked.TFloatLinkedList$1.hasNext()Z: root-Branch
   * 7 gnu.trove.list.linked.TFloatLinkedList$1.<init>(Lgnu/trove/list/linked/TFloatLinkedList;)V: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList((float) (-500));
      tFloatLinkedList0.add((float) (-500));
      TFloatLinkedList tFloatLinkedList1 = new TFloatLinkedList((TFloatList) tFloatLinkedList0);
      assertEquals(false, tFloatLinkedList0.isEmpty());
      assertTrue(tFloatLinkedList1.equals(tFloatLinkedList0));
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.add([FII)V: I7 Branch 7 IF_ICMPGE L110 - true
   */

  @Test
  public void test11()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      float[] floatArray0 = new float[1];
      tFloatLinkedList0.add(floatArray0, 0, 0);
      assertEquals("{}", tFloatLinkedList0.toString());
      assertEquals(true, tFloatLinkedList0.isEmpty());
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.add([FII)V: I7 Branch 7 IF_ICMPGE L110 - false
   */

  @Test
  public void test12()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      float[] floatArray0 = new float[20];
      // Undeclared exception!
      try {
        tFloatLinkedList0.add(floatArray0, 718, 718);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 718
         //
      }
  }

  //Test case number: 13
  /*
   * 13 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.insert(ILgnu/trove/list/linked/TFloatLinkedList;)V: I48 Branch 9 IFEQ L147 - true
   * 2 gnu.trove.list.linked.TFloatLinkedList.getLinkAt(I)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I17 Branch 15 IF_ICMPGT L207 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.getLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;IIZ)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I22 Branch 18 IFEQ L241 - true
   * 4 gnu.trove.list.linked.TFloatLinkedList.getLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;IIZ)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I33 Branch 19 IFEQ L242 - true
   * 5 gnu.trove.list.linked.TFloatLinkedList.fill(IIF)V: I22 Branch 78 IF_ICMPLE L699 - false
   * 6 gnu.trove.list.linked.TFloatLinkedList.fill(IIF)V: I31 Branch 79 IF_ICMPGE L700 - true
   * 7 gnu.trove.list.linked.TFloatLinkedList.fill(IIF)V: I54 Branch 80 IF_ICMPGE L704 - true
   * 8 gnu.trove.list.linked.TFloatLinkedList.fill(IIF)V: I54 Branch 80 IF_ICMPGE L704 - false
   * 9 gnu.trove.list.linked.TFloatLinkedList.insert(I[F)V: root-Branch
   * 10 gnu.trove.list.linked.TFloatLinkedList.getLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;IIZ)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I13 Branch 17 IF_ICMPNE L237 - true
   * 11 gnu.trove.list.linked.TFloatLinkedList.link([FII)Lgnu/trove/list/linked/TFloatLinkedList;: I13 Branch 11 IF_ICMPGE L173 - false
   * 12 gnu.trove.list.linked.TFloatLinkedList.insert(ILgnu/trove/list/linked/TFloatLinkedList;)V: I20 Branch 8 IF_ACMPNE L138 - true
   * 13 gnu.trove.list.linked.TFloatLinkedList$TFloatLink.getPrevious()Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(0.0F);
      float[] floatArray0 = new float[18];
      tFloatLinkedList0.fill(0, 850, 1971.5278F);
      tFloatLinkedList0.insert(828, floatArray0);
  }

  //Test case number: 14
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.get(I)F: I5 Branch 12 IF_ICMPLE L182 - true
   * 2 gnu.trove.list.linked.TFloatLinkedList.get(I)F: I35 Branch 13 IFEQ L187 - false
   */

//   @Test
//   public void test14()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(Float.POSITIVE_INFINITY);
//       float float0 = tFloatLinkedList0.get((-1507));
//       assertEquals(Float.POSITIVE_INFINITY, float0, 0.01F);
//       assertEquals(0, tFloatLinkedList0.size());
//   }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.get(I)F: I5 Branch 12 IF_ICMPLE L182 - false
   */

  @Test
  public void test15()  throws Throwable  {
      float[] floatArray0 = new float[8];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, 1.0F);
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tFloatLinkedList0.get(739);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // index 739 exceeds size 8
         //
      }
  }

  //Test case number: 16
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.get(I)F: I35 Branch 13 IFEQ L187 - true
   * 2 gnu.trove.list.linked.TFloatLinkedList.addAll([F)Z: I18 Branch 42 IF_ICMPGE L405 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.addAll([F)Z: I18 Branch 42 IF_ICMPGE L405 - false
   * 4 gnu.trove.list.linked.TFloatLinkedList.addAll([F)Z: I28 Branch 43 IFEQ L406 - false
   * 5 gnu.trove.list.linked.TFloatLinkedList.get(I)F: I5 Branch 12 IF_ICMPLE L182 - true
   */

//   @Test
//   public void test16()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(Float.POSITIVE_INFINITY);
//       float[] floatArray0 = new float[8];
//       tFloatLinkedList0.addAll(floatArray0);
//       float float0 = tFloatLinkedList0.get(0);
//       assertEquals(8, tFloatLinkedList0.size());
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.set(IF)F: I5 Branch 20 IF_ICMPLE L251 - false
   */

  @Test
  public void test17()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(0.0F);
      // Undeclared exception!
      try {
        tFloatLinkedList0.set(1952, 0.0F);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // index 1952 exceeds size 0
         //
      }
  }

  //Test case number: 18
  /*
   * 22 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.set(IF)F: I35 Branch 21 IFEQ L256 - true
   * 2 gnu.trove.list.linked.TFloatLinkedList.set(I[FII)V: I7 Branch 22 IF_ICMPGE L271 - false
   * 3 gnu.trove.list.linked.TFloatLinkedList.subList(II)Lgnu/trove/list/TFloatList;: I99 Branch 68 IF_ICMPGE L609 - false
   * 4 gnu.trove.list.linked.TFloatLinkedList.toArray([FIII)[F: I3 Branch 69 IFNE L639 - true
   * 5 gnu.trove.list.linked.TFloatLinkedList.toArray([FIII)[F: I11 Branch 70 IFLT L642 - false
   * 6 gnu.trove.list.linked.TFloatLinkedList.toArray([FIII)[F: I15 Branch 71 IF_ICMPLT L642 - true
   * 7 gnu.trove.list.linked.TFloatLinkedList.toArray([FIII)[F: I36 Branch 72 IF_ICMPGE L647 - true
   * 8 gnu.trove.list.linked.TFloatLinkedList.toArray([FIII)[F: I36 Branch 72 IF_ICMPGE L647 - false
   * 9 gnu.trove.list.linked.TFloatLinkedList.toArray()[F: root-Branch
   * 10 gnu.trove.list.linked.TFloatLinkedList.set(I[F)V: root-Branch
   * 11 gnu.trove.list.linked.TFloatLinkedList.toArray([FII)[F: root-Branch
   * 12 gnu.trove.list.linked.TFloatLinkedList.sort()V: root-Branch
   * 13 gnu.trove.list.linked.TFloatLinkedList.set(I[FII)V: I7 Branch 22 IF_ICMPGE L271 - true
   * 14 gnu.trove.list.linked.TFloatLinkedList.set(IF)F: I5 Branch 20 IF_ICMPLE L251 - true
   * 15 gnu.trove.list.linked.TFloatLinkedList.sort(II)V: root-Branch
   * 16 gnu.trove.list.linked.TFloatLinkedList.subList(II)Lgnu/trove/list/TFloatList;: I4 Branch 64 IF_ICMPGE L592 - true
   * 17 gnu.trove.list.linked.TFloatLinkedList.subList(II)Lgnu/trove/list/TFloatList;: I28 Branch 65 IF_ICMPGE L596 - true
   * 18 gnu.trove.list.linked.TFloatLinkedList.subList(II)Lgnu/trove/list/TFloatList;: I51 Branch 66 IFGE L600 - true
   * 19 gnu.trove.list.linked.TFloatLinkedList.subList(II)Lgnu/trove/list/TFloatList;: I64 Branch 67 IF_ICMPLE L603 - true
   * 20 gnu.trove.list.linked.TFloatLinkedList.subList(II)Lgnu/trove/list/TFloatList;: I99 Branch 68 IF_ICMPGE L609 - true
   * 21 gnu.trove.list.linked.TFloatLinkedList.getLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;IIZ)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I22 Branch 18 IFEQ L241 - false
   * 22 gnu.trove.list.linked.TFloatLinkedList.getLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;IIZ)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I33 Branch 19 IFEQ L242 - false
   */

  @Test
  public void test18()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(875.46265F);
      float[] floatArray0 = new float[18];
      tFloatLinkedList0.add(floatArray0);
      tFloatLinkedList0.sort();
      assertEquals(false, tFloatLinkedList0.isEmpty());
      assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}", tFloatLinkedList0.toString());
  }

  //Test case number: 19
  /*
   * 9 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.remove(F)Z: I19 Branch 24 IFNE L295 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList.removeLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;)V: I4 Branch 25 IFEQ L311 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.removeLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;)V: I30 Branch 26 IFEQ L319 - false
   * 4 gnu.trove.list.linked.TFloatLinkedList.removeLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;)V: I46 Branch 27 IFEQ L326 - false
   * 5 gnu.trove.list.linked.TFloatLinkedList.remove(F)Z: I12 Branch 23 IFEQ L293 - true
   * 6 gnu.trove.list.linked.TFloatLinkedList.remove(F)Z: I12 Branch 23 IFEQ L293 - false
   * 7 gnu.trove.list.linked.TFloatLinkedList.remove(F)Z: I19 Branch 24 IFNE L295 - true
   * 8 gnu.trove.list.linked.TFloatLinkedList.insert(ILgnu/trove/list/linked/TFloatLinkedList;)V: I48 Branch 9 IFEQ L147 - false
   * 9 gnu.trove.list.linked.TFloatLinkedList.insert(ILgnu/trove/list/linked/TFloatLinkedList;)V: I53 Branch 10 IFNE L148 - true
   */

//   @Test
//   public void test19()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(0.0F);
//       float[] floatArray0 = new float[18];
//       tFloatLinkedList0.add((float) (-1763));
//       tFloatLinkedList0.insert((-1763), floatArray0);
//       boolean boolean0 = tFloatLinkedList0.remove(0.0F);
//       assertEquals((-1763.0F), tFloatLinkedList0.sum(), 0.01F);
//       assertEquals(true, boolean0);
//   }

  //Test case number: 20
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.removeLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;)V: I30 Branch 26 IFEQ L319 - true
   * 2 gnu.trove.list.linked.TFloatLinkedList.removeLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;)V: I46 Branch 27 IFEQ L326 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.shuffle(Ljava/util/Random;)V: I8 Branch 63 IF_ICMPGE L583 - true
   * 4 gnu.trove.list.linked.TFloatLinkedList.shuffle(Ljava/util/Random;)V: I8 Branch 63 IF_ICMPGE L583 - false
   */

  @Test
  public void test20()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      tFloatLinkedList0.add(0.0F);
      Random random0 = new Random((long) 0);
      tFloatLinkedList0.shuffle(random0);
      assertEquals(1, tFloatLinkedList0.size());
      assertEquals("{0.0}", tFloatLinkedList0.toString());
  }

  //Test case number: 21
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.containsAll(Ljava/util/Collection;)Z: I4 Branch 28 IFEQ L339 - true
   * 2 gnu.trove.list.linked.TFloatLinkedList.containsAll(Ljava/util/Collection;)Z: I17 Branch 29 IFEQ L342 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.isEmpty()Z: I4 Branch 4 IFNE L81 - true
   */

  @Test
  public void test21()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      float[] floatArray0 = new float[3];
      tFloatLinkedList0.add(floatArray0);
      Locale locale0 = Locale.CHINA;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      boolean boolean0 = tFloatLinkedList0.containsAll((Collection<?>) set0);
      assertEquals(3, tFloatLinkedList0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.containsAll(Ljava/util/Collection;)Z: I4 Branch 28 IFEQ L339 - false
   */

//   @Test
//   public void test22()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(921.3386F);
//       LinkedList<Float> linkedList0 = new LinkedList<Float>();
//       boolean boolean0 = tFloatLinkedList0.containsAll((Collection<?>) linkedList0);
//       assertEquals(921.3386F, tFloatLinkedList0.getNoEntryValue(), 0.01F);
//       assertEquals(false, boolean0);
//   }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.containsAll(Ljava/util/Collection;)Z: I17 Branch 29 IFEQ L342 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList.containsAll(Ljava/util/Collection;)Z: I25 Branch 30 IFEQ L343 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.containsAll(Ljava/util/Collection;)Z: I4 Branch 28 IFEQ L339 - true
   */

  @Test
  public void test23()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(Float.POSITIVE_INFINITY);
      float[] floatArray0 = new float[8];
      tFloatLinkedList0.addAll(floatArray0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) "Chinesisch (Taiwan)");
      boolean boolean0 = tFloatLinkedList0.containsAll((Collection<?>) linkedList0);
      assertEquals(8, tFloatLinkedList0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 24
  /*
   * 7 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.containsAll(Lgnu/trove/TFloatCollection;)Z: I4 Branch 32 IFEQ L356 - true
   * 2 gnu.trove.list.linked.TFloatLinkedList.containsAll(Lgnu/trove/TFloatCollection;)Z: I17 Branch 33 IFEQ L359 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.containsAll(Lgnu/trove/TFloatCollection;)Z: I17 Branch 33 IFEQ L359 - false
   * 4 gnu.trove.list.linked.TFloatLinkedList.containsAll(Lgnu/trove/TFloatCollection;)Z: I28 Branch 34 IFNE L361 - true
   * 5 gnu.trove.list.linked.TFloatLinkedList.contains(F)Z: I4 Branch 93 IFEQ L801 - true
   * 6 gnu.trove.list.linked.TFloatLinkedList.contains(F)Z: I17 Branch 94 IFEQ L804 - false
   * 7 gnu.trove.list.linked.TFloatLinkedList.contains(F)Z: I24 Branch 95 IFNE L805 - false
   */

  @Test
  public void test24()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      tFloatLinkedList0.add(0.0F);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatLinkedList0);
      boolean boolean0 = tFloatLinkedList0.containsAll((TFloatCollection) tUnmodifiableRandomAccessFloatList0);
      assertEquals(1, tFloatLinkedList0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.containsAll(Lgnu/trove/TFloatCollection;)Z: I4 Branch 32 IFEQ L356 - false
   */

  @Test
  public void test25()  throws Throwable  {
      float[] floatArray0 = new float[7];
      TFloatLinkedList tFloatLinkedList0 = TFloatLinkedList.link(floatArray0, (-1828), (-1828));
      assertNotNull(tFloatLinkedList0);
      
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      boolean boolean0 = tFloatLinkedList0.containsAll((TFloatCollection) tFloatArrayList0);
      assertEquals(true, tFloatLinkedList0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 26
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.containsAll([F)Z: I4 Branch 35 IFEQ L369 - true
   * 2 gnu.trove.list.linked.TFloatLinkedList.containsAll([F)Z: I23 Branch 36 IF_ICMPGE L372 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.containsAll([F)Z: I23 Branch 36 IF_ICMPGE L372 - false
   * 4 gnu.trove.list.linked.TFloatLinkedList.containsAll([F)Z: I33 Branch 37 IFNE L373 - true
   */

  @Test
  public void test26()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(875.46265F);
      float[] floatArray0 = new float[18];
      tFloatLinkedList0.add(floatArray0);
      boolean boolean0 = tFloatLinkedList0.containsAll(floatArray0);
      assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}", tFloatLinkedList0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.containsAll([F)Z: I4 Branch 35 IFEQ L369 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      float[] floatArray0 = new float[7];
      boolean boolean0 = tFloatLinkedList0.containsAll(floatArray0);
      assertEquals(true, tFloatLinkedList0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 28
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.containsAll([F)Z: I33 Branch 37 IFNE L373 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList.contains(F)Z: I17 Branch 94 IFEQ L804 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.contains(F)Z: I24 Branch 95 IFNE L805 - true
   * 4 gnu.trove.list.linked.TFloatLinkedList.containsAll([F)Z: I4 Branch 35 IFEQ L369 - true
   * 5 gnu.trove.list.linked.TFloatLinkedList.containsAll([F)Z: I23 Branch 36 IF_ICMPGE L372 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(875.46265F);
      float[] floatArray0 = new float[18];
      tFloatLinkedList0.add(floatArray0);
      float[] floatArray1 = new float[2];
      floatArray1[0] = (-1.0F);
      boolean boolean0 = tFloatLinkedList0.containsAll(floatArray1);
      assertEquals(18, tFloatLinkedList0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 29
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.addAll(Ljava/util/Collection;)Z: I12 Branch 38 IFEQ L382 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList.addAll(Ljava/util/Collection;)Z: I23 Branch 39 IFEQ L383 - false
   * 3 gnu.trove.list.linked.TFloatLinkedList.addAll(Ljava/util/Collection;)Z: I12 Branch 38 IFEQ L382 - true
   */

//   @Test
//   public void test29()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
//       LinkedList<Float> linkedList0 = new LinkedList<Float>();
//       linkedList0.add((Float) 483.38727F);
//       boolean boolean0 = tFloatLinkedList0.addAll((Collection<? extends Float>) linkedList0);
//       assertEquals(483.38727F, tFloatLinkedList0.sum(), 0.01F);
//       assertEquals(true, boolean0);
//   }

  //Test case number: 30
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.retainAll(Ljava/util/Collection;)Z: I13 Branch 44 IFEQ L417 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList.retainAll(Ljava/util/Collection;)Z: I21 Branch 45 IFGT L418 - false
   * 3 gnu.trove.list.linked.TFloatLinkedList$1.remove()V: I4 Branch 2 IFNONNULL L834 - true
   * 4 gnu.trove.list.linked.TFloatLinkedList.retainAll(Ljava/util/Collection;)Z: I13 Branch 44 IFEQ L417 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(975.1017F);
      float[] floatArray0 = new float[4];
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      tFloatLinkedList0.addAll(floatArray0);
      assertEquals(4, tFloatLinkedList0.size());
      
      boolean boolean0 = tFloatLinkedList0.retainAll((Collection<?>) linkedList0);
      assertEquals(true, boolean0);
  }

  //Test case number: 31
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.retainAll(Lgnu/trove/TFloatCollection;)Z: I13 Branch 46 IFEQ L430 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList.retainAll(Lgnu/trove/TFloatCollection;)Z: I20 Branch 47 IFNE L431 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.retainAll(Lgnu/trove/TFloatCollection;)Z: I13 Branch 46 IFEQ L430 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      float[] floatArray0 = new float[3];
      tFloatLinkedList0.add(floatArray0);
      boolean boolean0 = tFloatLinkedList0.retainAll((TFloatCollection) tFloatLinkedList0);
      assertEquals(3, tFloatLinkedList0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 32
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.retainAll([F)Z: I24 Branch 49 IFGE L446 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList.retainAll([F)Z: I17 Branch 48 IFEQ L445 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.retainAll([F)Z: I17 Branch 48 IFEQ L445 - false
   * 4 gnu.trove.list.linked.TFloatLinkedList.retainAll([F)Z: I24 Branch 49 IFGE L446 - true
   */

  @Test
  public void test32()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(875.46265F);
      float[] floatArray0 = new float[18];
      floatArray0[0] = (float) 1;
      tFloatLinkedList0.add(floatArray0);
      float[] floatArray1 = new float[8];
      boolean boolean0 = tFloatLinkedList0.retainAll(floatArray1);
      assertEquals(false, tFloatLinkedList0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 33
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.removeAll(Ljava/util/Collection;)Z: I13 Branch 50 IFEQ L458 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList.removeAll(Ljava/util/Collection;)Z: I21 Branch 51 IFLE L459 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.removeAll(Ljava/util/Collection;)Z: I13 Branch 50 IFEQ L458 - true
   */

  @Test
  public void test33()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(875.46265F);
      float[] floatArray0 = new float[18];
      tFloatLinkedList0.add(floatArray0);
      Locale locale0 = Locale.CANADA;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      boolean boolean0 = tFloatLinkedList0.removeAll((Collection<?>) set0);
      assertEquals(false, tFloatLinkedList0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 34
  /*
   * 6 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.removeAll(Lgnu/trove/TFloatCollection;)Z: I20 Branch 53 IFEQ L472 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList.contains(F)Z: I4 Branch 93 IFEQ L801 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.contains(F)Z: I17 Branch 94 IFEQ L804 - false
   * 4 gnu.trove.list.linked.TFloatLinkedList.contains(F)Z: I24 Branch 95 IFNE L805 - false
   * 5 gnu.trove.list.linked.TFloatLinkedList.removeAll(Lgnu/trove/TFloatCollection;)Z: I13 Branch 52 IFEQ L471 - true
   * 6 gnu.trove.list.linked.TFloatLinkedList.removeAll(Lgnu/trove/TFloatCollection;)Z: I13 Branch 52 IFEQ L471 - false
   */

  @Test
  public void test34()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(Float.POSITIVE_INFINITY);
      float[] floatArray0 = new float[8];
      tFloatLinkedList0.addAll(floatArray0);
      TSynchronizedFloatCollection tSynchronizedFloatCollection0 = new TSynchronizedFloatCollection((TFloatCollection) tFloatLinkedList0, (Object) floatArray0[7]);
      assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}", tFloatLinkedList0.toString());
      
      boolean boolean0 = tFloatLinkedList0.removeAll((TFloatCollection) tSynchronizedFloatCollection0);
      assertEquals(true, boolean0);
  }

  //Test case number: 35
  /*
   * 7 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.removeAll([F)Z: I24 Branch 55 IFLT L487 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList.removeAll([F)Z: I17 Branch 54 IFEQ L486 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.removeAll([F)Z: I17 Branch 54 IFEQ L486 - false
   * 4 gnu.trove.list.linked.TFloatLinkedList.removeAll([F)Z: I24 Branch 55 IFLT L487 - true
   * 5 gnu.trove.list.linked.TFloatLinkedList.removeLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;)V: I30 Branch 26 IFEQ L319 - false
   * 6 gnu.trove.list.linked.TFloatLinkedList.removeLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;)V: I46 Branch 27 IFEQ L326 - true
   * 7 gnu.trove.list.linked.TFloatLinkedList$1.remove()V: I4 Branch 2 IFNONNULL L834 - true
   */

  @Test
  public void test35()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(0.0F);
      float[] floatArray0 = new float[18];
      tFloatLinkedList0.add((float) (-1763));
      tFloatLinkedList0.insert((-1763), floatArray0);
      boolean boolean0 = tFloatLinkedList0.removeAll(floatArray0);
      assertEquals(false, tFloatLinkedList0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 36
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.removeAt(I)F: I10 Branch 56 IFEQ L498 - true
   * 2 gnu.trove.list.linked.TFloatLinkedList.removeLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;)V: I4 Branch 25 IFEQ L311 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.removeLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;)V: I30 Branch 26 IFEQ L319 - true
   * 4 gnu.trove.list.linked.TFloatLinkedList.removeLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;)V: I46 Branch 27 IFEQ L326 - false
   */

//   @Test
//   public void test36()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(200.85295F);
//       float[] floatArray0 = new float[10];
//       tFloatLinkedList0.addAll(floatArray0);
//       float float0 = tFloatLinkedList0.removeAt(0);
//       assertEquals(false, tFloatLinkedList0.isEmpty());
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 37
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.removeAt(I)F: I10 Branch 56 IFEQ L498 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList.remove(II)V: I7 Branch 57 IF_ICMPGE L508 - false
   */

  @Test
  public void test37()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(921.3386F);
      // Undeclared exception!
      try {
        tFloatLinkedList0.remove(135, 48827);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no elemenet at 135
         //
      }
  }

  //Test case number: 38
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.remove(II)V: I7 Branch 57 IF_ICMPGE L508 - true
   */

//   @Test
//   public void test38()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(975.1017F);
//       tFloatLinkedList0.remove((-156), (-1888));
//       assertEquals(975.1017F, tFloatLinkedList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 39
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.transformValues(Lgnu/trove/function/TFloatFunction;)V: I8 Branch 58 IFEQ L515 - true
   */

//   @Test
//   public void test39()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(Float.NEGATIVE_INFINITY);
//       tFloatLinkedList0.transformValues((TFloatFunction) null);
//       assertEquals(Float.NEGATIVE_INFINITY, tFloatLinkedList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 40
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.transformValues(Lgnu/trove/function/TFloatFunction;)V: I8 Branch 58 IFEQ L515 - false
   */

  @Test
  public void test40()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(Float.NEGATIVE_INFINITY);
      tFloatLinkedList0.fill(1772, 2048, 1661.4607F);
      // Undeclared exception!
      try {
        tFloatLinkedList0.transformValues((TFloatFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 41
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.reverse(II)V: I4 Branch 60 IF_ICMPLE L549 - false
   */

  @Test
  public void test41()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList((float) 171);
      // Undeclared exception!
      try {
        tFloatLinkedList0.reverse(873, 170);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // from > to : 873>170
         //
      }
  }

  //Test case number: 42
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.reverse(II)V: I52 Branch 61 IF_ACMPEQ L561 - true
   * 2 gnu.trove.list.linked.TFloatLinkedList.reverse(II)V: I87 Branch 62 IFEQ L573 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.reverse(II)V: I4 Branch 60 IF_ICMPLE L549 - true
   */

  @Test
  public void test42()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      float[] floatArray0 = new float[3];
      tFloatLinkedList0.add(floatArray0);
      tFloatLinkedList0.reverse(1, 1);
  }

  //Test case number: 43
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.subList(II)Lgnu/trove/list/TFloatList;: I4 Branch 64 IF_ICMPGE L592 - false
   */

  @Test
  public void test43()  throws Throwable  {
      float[] floatArray0 = new float[8];
      TFloatLinkedList tFloatLinkedList0 = TFloatLinkedList.link(floatArray0, 17, (-957));
      // Undeclared exception!
      try {
        tFloatLinkedList0.subList(943, 17);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 943 greater than end index 17
         //
      }
  }

  //Test case number: 44
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.subList(II)Lgnu/trove/list/TFloatList;: I28 Branch 65 IF_ICMPGE L596 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList.sort(II)V: root-Branch
   */

  @Test
  public void test44()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList((-1.0F));
      // Undeclared exception!
      try {
        tFloatLinkedList0.sort(2081, 2081);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 2081 greater than last index 0
         //
      }
  }

  //Test case number: 45
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.subList(II)Lgnu/trove/list/TFloatList;: I51 Branch 66 IFGE L600 - false
   */

  @Test
  public void test45()  throws Throwable  {
      float[] floatArray0 = new float[7];
      TFloatLinkedList tFloatLinkedList0 = TFloatLinkedList.link(floatArray0, (-1828), (-1828));
      // Undeclared exception!
      try {
        tFloatLinkedList0.subList((-1959), 1771);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  //Test case number: 46
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.subList(II)Lgnu/trove/list/TFloatList;: I64 Branch 67 IF_ICMPLE L603 - false
   */

  @Test
  public void test46()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList((float) (-1991));
      // Undeclared exception!
      try {
        tFloatLinkedList0.subList(0, 765);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index < 0
         //
      }
  }

  //Test case number: 47
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.toArray([FIII)[F: I11 Branch 70 IFLT L642 - true
   */

  @Test
  public void test47()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      float[] floatArray0 = new float[3];
      // Undeclared exception!
      try {
        tFloatLinkedList0.toArray(floatArray0, (-1432), 136, (-581));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -1432
         //
      }
  }

  //Test case number: 48
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.toArray([FIII)[F: I15 Branch 71 IF_ICMPLT L642 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList.toArray([FIII)[F: I3 Branch 69 IFNE L639 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.toArray([FIII)[F: I11 Branch 70 IFLT L642 - false
   */

  @Test
  public void test48()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      float[] floatArray0 = new float[3];
      // Undeclared exception!
      try {
        tFloatLinkedList0.toArray(floatArray0, 0, (-1), 158767069);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
      }
  }

  //Test case number: 49
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z: I8 Branch 73 IFEQ L657 - true
   */

//   @Test
//   public void test49()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(921.3386F);
//       boolean boolean0 = tFloatLinkedList0.forEach((TFloatProcedure) null);
//       assertEquals(921.3386F, tFloatLinkedList0.getNoEntryValue(), 0.01F);
//       assertEquals(true, boolean0);
//   }

  //Test case number: 50
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z: I8 Branch 73 IFEQ L657 - false
   */

  @Test
  public void test50()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(921.3386F);
      tFloatLinkedList0.add(23.268454F);
      // Undeclared exception!
      try {
        tFloatLinkedList0.forEach((TFloatProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 51
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z: I8 Branch 75 IFEQ L666 - true
   */

  @Test
  public void test51()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      boolean boolean0 = tFloatLinkedList0.forEachDescending((TFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 52
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z: I8 Branch 75 IFEQ L666 - false
   */

  @Test
  public void test52()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      float[] floatArray0 = new float[8];
      tFloatLinkedList0.addAll(floatArray0);
      // Undeclared exception!
      try {
        tFloatLinkedList0.forEachDescending((TFloatProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 53
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.fill(IIF)V: I3 Branch 77 IFGE L693 - false
   */

  @Test
  public void test53()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      // Undeclared exception!
      try {
        tFloatLinkedList0.fill((-392), (-392), 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  //Test case number: 54
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.fill(IIF)V: I31 Branch 79 IF_ICMPGE L700 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList$TFloatLink.setValue(F)V: root-Branch
   */

  @Test
  public void test54()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(0.0F);
      tFloatLinkedList0.add((float) (-1763));
      tFloatLinkedList0.fill(0, 850, 1971.5278F);
  }

  //Test case number: 55
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.binarySearch(FII)I: I3 Branch 82 IFGE L723 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList.<init>(Lgnu/trove/list/TFloatList;)V: I29 Branch 3 IFEQ L63 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.<init>(Lgnu/trove/list/TFloatList;)V: I29 Branch 3 IFEQ L63 - false
   */

  @Test
  public void test55()  throws Throwable  {
      float[] floatArray0 = new float[1];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tFloatLinkedList0.binarySearch((float) (-1), (-78), (-815));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  //Test case number: 56
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.binarySearch(FII)I: I16 Branch 83 IF_ICMPLE L727 - false
   */

  @Test
  public void test56()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList((float) 31);
      // Undeclared exception!
      try {
        tFloatLinkedList0.binarySearch((float) 31, 31, 31);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index > size: 31 > 0
         //
      }
  }

  //Test case number: 57
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.binarySearch(FII)I: I40 Branch 84 IF_ICMPGE L732 - false
   */

  @Test
  public void test57()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(875.46265F);
      float[] floatArray0 = new float[18];
      tFloatLinkedList0.add(floatArray0);
      int int0 = tFloatLinkedList0.binarySearch((-1.0F), 741337, 1);
      assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}", tFloatLinkedList0.toString());
      assertEquals((-741338), int0);
  }

  //Test case number: 58
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.binarySearch(FII)I: I88 Branch 86 IFNE L745 - false
   */

  @Test
  public void test58()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(0.0F);
      float[] floatArray0 = new float[18];
      tFloatLinkedList0.add((float) (-1763));
      tFloatLinkedList0.insert((-1763), floatArray0);
      int int0 = tFloatLinkedList0.binarySearch(0.0F);
      assertEquals(19, tFloatLinkedList0.size());
      assertEquals(9, int0);
  }

  //Test case number: 59
  /*
   * 15 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.binarySearch(FII)I: I99 Branch 87 IFGE L748 - true
   * 2 gnu.trove.list.linked.TFloatLinkedList.getLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;II)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: root-Branch
   * 3 gnu.trove.list.linked.TFloatLinkedList.binarySearch(F)I: root-Branch
   * 4 gnu.trove.list.linked.TFloatLinkedList.binarySearch(FII)I: I3 Branch 82 IFGE L723 - true
   * 5 gnu.trove.list.linked.TFloatLinkedList.binarySearch(FII)I: I16 Branch 83 IF_ICMPLE L727 - true
   * 6 gnu.trove.list.linked.TFloatLinkedList.binarySearch(FII)I: I40 Branch 84 IF_ICMPGE L732 - true
   * 7 gnu.trove.list.linked.TFloatLinkedList.binarySearch(FII)I: I66 Branch 85 IF_ICMPGE L742 - true
   * 8 gnu.trove.list.linked.TFloatLinkedList.binarySearch(FII)I: I66 Branch 85 IF_ICMPGE L742 - false
   * 9 gnu.trove.list.linked.TFloatLinkedList.binarySearch(FII)I: I88 Branch 86 IFNE L745 - true
   * 10 gnu.trove.list.linked.TFloatLinkedList.fill(IIF)V: I3 Branch 77 IFGE L693 - true
   * 11 gnu.trove.list.linked.TFloatLinkedList.fill(IIF)V: I22 Branch 78 IF_ICMPLE L699 - false
   * 12 gnu.trove.list.linked.TFloatLinkedList.fill(IIF)V: I31 Branch 79 IF_ICMPGE L700 - true
   * 13 gnu.trove.list.linked.TFloatLinkedList.fill(IIF)V: I54 Branch 80 IF_ICMPGE L704 - true
   * 14 gnu.trove.list.linked.TFloatLinkedList.fill(IIF)V: I54 Branch 80 IF_ICMPGE L704 - false
   * 15 gnu.trove.list.linked.TFloatLinkedList.getLinkAt(I)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I5 Branch 14 IF_ICMPLT L204 - false
   */

  @Test
  public void test59()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(0.0F);
      tFloatLinkedList0.fill(0, 850, 1971.5278F);
      tFloatLinkedList0.binarySearch(0.0F);
  }

  //Test case number: 60
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.indexOf(IF)I: I14 Branch 88 IFEQ L767 - true
   * 2 gnu.trove.list.linked.TFloatLinkedList.indexOf(IF)I: I14 Branch 88 IFEQ L767 - false
   * 3 gnu.trove.list.linked.TFloatLinkedList.indexOf(IF)I: I21 Branch 89 IFNE L768 - true
   */

  @Test
  public void test60()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      float[] floatArray0 = new float[3];
      tFloatLinkedList0.add(floatArray0);
      int int0 = tFloatLinkedList0.indexOf(1, (-1.0F));
      assertEquals(false, tFloatLinkedList0.isEmpty());
      assertEquals((-1), int0);
  }

  //Test case number: 61
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.indexOf(IF)I: I21 Branch 89 IFNE L768 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList.indexOf(IF)I: I14 Branch 88 IFEQ L767 - false
   */

//   @Test
//   public void test61()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(Float.POSITIVE_INFINITY);
//       float[] floatArray0 = new float[8];
//       tFloatLinkedList0.addAll(floatArray0);
//       int int0 = tFloatLinkedList0.indexOf(0, Float.POSITIVE_INFINITY);
//       assertEquals(8, tFloatLinkedList0.size());
//       assertEquals(0, int0);
//   }

  //Test case number: 62
  /*
   * 8 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.lastIndexOf(IF)I: I34 Branch 92 IFNE L790 - true
   * 2 gnu.trove.list.linked.TFloatLinkedList.lastIndexOf(F)I: root-Branch
   * 3 gnu.trove.list.linked.TFloatLinkedList.lastIndexOf(IF)I: I4 Branch 90 IFEQ L784 - true
   * 4 gnu.trove.list.linked.TFloatLinkedList.lastIndexOf(IF)I: I27 Branch 91 IFEQ L789 - true
   * 5 gnu.trove.list.linked.TFloatLinkedList.lastIndexOf(IF)I: I27 Branch 91 IFEQ L789 - false
   * 6 gnu.trove.list.linked.TFloatLinkedList.lastIndexOf(IF)I: I34 Branch 92 IFNE L790 - false
   * 7 gnu.trove.list.linked.TFloatLinkedList.reverse()V: I19 Branch 59 IFEQ L531 - true
   * 8 gnu.trove.list.linked.TFloatLinkedList.reverse()V: I19 Branch 59 IFEQ L531 - false
   */

//   @Test
//   public void test62()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
//       float[] floatArray0 = new float[3];
//       floatArray0[2] = (-1988.7234F);
//       tFloatLinkedList0.add(floatArray0);
//       tFloatLinkedList0.reverse();
//       int int0 = tFloatLinkedList0.lastIndexOf(0.0F);
//       assertEquals((-1988.7234F), tFloatLinkedList0.sum(), 0.01F);
//       assertEquals(1, int0);
//   }

  //Test case number: 63
  /*
   * 27 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.contains(F)Z: I4 Branch 93 IFEQ L801 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList.insert(I[F)V: root-Branch
   * 3 gnu.trove.list.linked.TFloatLinkedList.subList(II)Lgnu/trove/list/TFloatList;: I4 Branch 64 IF_ICMPGE L592 - true
   * 4 gnu.trove.list.linked.TFloatLinkedList.subList(II)Lgnu/trove/list/TFloatList;: I28 Branch 65 IF_ICMPGE L596 - true
   * 5 gnu.trove.list.linked.TFloatLinkedList.subList(II)Lgnu/trove/list/TFloatList;: I51 Branch 66 IFGE L600 - true
   * 6 gnu.trove.list.linked.TFloatLinkedList.subList(II)Lgnu/trove/list/TFloatList;: I64 Branch 67 IF_ICMPLE L603 - true
   * 7 gnu.trove.list.linked.TFloatLinkedList.subList(II)Lgnu/trove/list/TFloatList;: I99 Branch 68 IF_ICMPGE L609 - true
   * 8 gnu.trove.list.linked.TFloatLinkedList.getLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;IIZ)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I8 Branch 16 IFEQ L236 - true
   * 9 gnu.trove.list.linked.TFloatLinkedList.getLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;IIZ)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I8 Branch 16 IFEQ L236 - false
   * 10 gnu.trove.list.linked.TFloatLinkedList.getLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;IIZ)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I13 Branch 17 IF_ICMPNE L237 - true
   * 11 gnu.trove.list.linked.TFloatLinkedList.getLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;IIZ)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I13 Branch 17 IF_ICMPNE L237 - false
   * 12 gnu.trove.list.linked.TFloatLinkedList.getLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;IIZ)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I22 Branch 18 IFEQ L241 - true
   * 13 gnu.trove.list.linked.TFloatLinkedList.getLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;IIZ)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I22 Branch 18 IFEQ L241 - false
   * 14 gnu.trove.list.linked.TFloatLinkedList.getLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;IIZ)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I33 Branch 19 IFEQ L242 - true
   * 15 gnu.trove.list.linked.TFloatLinkedList.getLink(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;IIZ)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I33 Branch 19 IFEQ L242 - false
   * 16 gnu.trove.list.linked.TFloatLinkedList.link([FII)Lgnu/trove/list/linked/TFloatLinkedList;: I13 Branch 11 IF_ICMPGE L173 - true
   * 17 gnu.trove.list.linked.TFloatLinkedList.link([FII)Lgnu/trove/list/linked/TFloatLinkedList;: I13 Branch 11 IF_ICMPGE L173 - false
   * 18 gnu.trove.list.linked.TFloatLinkedList.removeAll(Lgnu/trove/TFloatCollection;)Z: I13 Branch 52 IFEQ L471 - true
   * 19 gnu.trove.list.linked.TFloatLinkedList.removeAll(Lgnu/trove/TFloatCollection;)Z: I13 Branch 52 IFEQ L471 - false
   * 20 gnu.trove.list.linked.TFloatLinkedList.removeAll(Lgnu/trove/TFloatCollection;)Z: I20 Branch 53 IFEQ L472 - true
   * 21 gnu.trove.list.linked.TFloatLinkedList.insert(ILgnu/trove/list/linked/TFloatLinkedList;)V: I20 Branch 8 IF_ACMPNE L138 - true
   * 22 gnu.trove.list.linked.TFloatLinkedList.insert(ILgnu/trove/list/linked/TFloatLinkedList;)V: I48 Branch 9 IFEQ L147 - false
   * 23 gnu.trove.list.linked.TFloatLinkedList.insert(ILgnu/trove/list/linked/TFloatLinkedList;)V: I53 Branch 10 IFNE L148 - true
   * 24 gnu.trove.list.linked.TFloatLinkedList.getLinkAt(I)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I5 Branch 14 IF_ICMPLT L204 - true
   * 25 gnu.trove.list.linked.TFloatLinkedList.getLinkAt(I)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I17 Branch 15 IF_ICMPGT L207 - true
   * 26 gnu.trove.list.linked.TFloatLinkedList.getLinkAt(I)Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: I17 Branch 15 IF_ICMPGT L207 - false
   * 27 gnu.trove.list.linked.TFloatLinkedList$TFloatLink.getPrevious()Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: root-Branch
   */

  @Test
  public void test63()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(0.0F);
      float[] floatArray0 = new float[18];
      tFloatLinkedList0.add((float) (-1763));
      tFloatLinkedList0.insert((-1763), floatArray0);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList0);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList1 = (TSynchronizedRandomAccessFloatList)tSynchronizedRandomAccessFloatList0.subList(11, 11);
      boolean boolean0 = tFloatLinkedList0.removeAll((TFloatCollection) tSynchronizedRandomAccessFloatList1);
      assertEquals(19, tFloatLinkedList0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 64
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;: I14 Branch 96 IFEQ L846 - true
   */

//   @Test
//   public void test64()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(921.3386F);
//       TFloatLinkedList tFloatLinkedList1 = (TFloatLinkedList)tFloatLinkedList0.grep((TFloatProcedure) null);
//       assertNotNull(tFloatLinkedList1);
//       assertEquals(921.3386F, tFloatLinkedList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 65
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;: I14 Branch 98 IFEQ L856 - true
   */

//   @Test
//   public void test65()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(921.3386F);
//       TFloatLinkedList tFloatLinkedList1 = (TFloatLinkedList)tFloatLinkedList0.inverseGrep((TFloatProcedure) null);
//       assertEquals(921.3386F, tFloatLinkedList0.getNoEntryValue(), 0.01F);
//       assertNotNull(tFloatLinkedList1);
//       assertFalse(tFloatLinkedList0.equals(tFloatLinkedList1));
//   }

  //Test case number: 66
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.max()F: I8 Branch 100 IFEQ L867 - true
   * 2 gnu.trove.list.linked.TFloatLinkedList.max()F: I23 Branch 101 IFEQ L870 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.max()F: I23 Branch 101 IFEQ L870 - false
   * 4 gnu.trove.list.linked.TFloatLinkedList.max()F: I30 Branch 102 IFGE L871 - true
   */

//   @Test
//   public void test66()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList((float) (-500));
//       tFloatLinkedList0.add((float) (-500));
//       float float0 = tFloatLinkedList0.max();
//       assertEquals(1, tFloatLinkedList0.size());
//       assertEquals(Float.NEGATIVE_INFINITY, float0, 0.01F);
//   }

  //Test case number: 67
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TFloatLinkedList.max()F: I8 Branch 100 IFEQ L867 - false
   */

  @Test
  public void test67()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      // Undeclared exception!
      try {
        tFloatLinkedList0.max();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 68
  /*
   * 8 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.min()F: I8 Branch 103 IFEQ L882 - true
   * 2 gnu.trove.list.linked.TFloatLinkedList.min()F: I23 Branch 104 IFEQ L885 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.min()F: I23 Branch 104 IFEQ L885 - false
   * 4 gnu.trove.list.linked.TFloatLinkedList.min()F: I30 Branch 105 IFLE L886 - true
   * 5 gnu.trove.list.linked.TFloatLinkedList.isEmpty()Z: I4 Branch 4 IFNE L81 - true
   * 6 gnu.trove.list.linked.TFloatLinkedList.addAll([F)Z: I18 Branch 42 IF_ICMPGE L405 - true
   * 7 gnu.trove.list.linked.TFloatLinkedList.addAll([F)Z: I18 Branch 42 IF_ICMPGE L405 - false
   * 8 gnu.trove.list.linked.TFloatLinkedList.addAll([F)Z: I28 Branch 43 IFEQ L406 - false
   */

//   @Test
//   public void test68()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(Float.POSITIVE_INFINITY);
//       float[] floatArray0 = new float[8];
//       tFloatLinkedList0.addAll(floatArray0);
//       float float0 = tFloatLinkedList0.min();
//       assertEquals(8, tFloatLinkedList0.size());
//       assertEquals(Float.POSITIVE_INFINITY, float0, 0.01F);
//   }

  //Test case number: 69
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.min()F: I8 Branch 103 IFEQ L882 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList.size()I: root-Branch
   * 3 gnu.trove.list.linked.TFloatLinkedList.isEmpty()Z: I4 Branch 4 IFNE L81 - false
   */

  @Test
  public void test69()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList((-1762.2383F));
      // Undeclared exception!
      try {
        tFloatLinkedList0.min();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 70
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.sum()F: I12 Branch 106 IFEQ L897 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList.sum()F: I12 Branch 106 IFEQ L897 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.addAll(Lgnu/trove/TFloatCollection;)Z: I12 Branch 40 IFEQ L393 - true
   * 4 gnu.trove.list.linked.TFloatLinkedList.addAll(Lgnu/trove/TFloatCollection;)Z: I12 Branch 40 IFEQ L393 - false
   * 5 gnu.trove.list.linked.TFloatLinkedList.addAll(Lgnu/trove/TFloatCollection;)Z: I23 Branch 41 IFEQ L395 - false
   */

//   @Test
//   public void test70()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(Float.POSITIVE_INFINITY);
//       float[] floatArray0 = new float[8];
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
//       tFloatLinkedList0.addAll((TFloatCollection) tFloatArrayList0);
//       float float0 = tFloatLinkedList0.sum();
//       assertEquals(false, tFloatLinkedList0.isEmpty());
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 71
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 107 IFEQ L975 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 107 IFEQ L975 - true
   */

//   @Test
//   public void test71()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(0.0F);
//       tFloatLinkedList0.add((float) (-1763));
//       ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
//       ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
//       tFloatLinkedList0.writeExternal((ObjectOutput) objectOutputStream0);
//       assertEquals(false, tFloatLinkedList0.isEmpty());
//       assertEquals((-1763.0F), tFloatLinkedList0.sum(), 0.01F);
//   }

  //Test case number: 72
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.equals(Ljava/lang/Object;)Z: I4 Branch 111 IF_ACMPNE L1009 - true
   * 2 gnu.trove.list.linked.TFloatLinkedList.equals(Ljava/lang/Object;)Z: I10 Branch 112 IFNULL L1010 - false
   * 3 gnu.trove.list.linked.TFloatLinkedList.equals(Ljava/lang/Object;)Z: I15 Branch 113 IF_ACMPEQ L1010 - false
   */

  @Test
  public void test72()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      boolean boolean0 = tFloatLinkedList0.equals((Object) "DEU");
      assertEquals(false, boolean0);
  }

  //Test case number: 73
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.equals(Ljava/lang/Object;)Z: I10 Branch 112 IFNULL L1010 - true
   * 2 gnu.trove.list.linked.TFloatLinkedList.equals(Ljava/lang/Object;)Z: I4 Branch 111 IF_ACMPNE L1009 - true
   */

//   @Test
//   public void test73()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(0.0F);
//       boolean boolean0 = tFloatLinkedList0.equals((Object) null);
//       assertEquals(0.0F, tFloatLinkedList0.getNoEntryValue(), 0.01F);
//       assertEquals(false, boolean0);
//   }

  //Test case number: 74
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.hashCode()I: I23 Branch 119 IFEQ L1034 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList.hashCode()I: I23 Branch 119 IFEQ L1034 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.addAll(Lgnu/trove/TFloatCollection;)Z: I12 Branch 40 IFEQ L393 - true
   * 4 gnu.trove.list.linked.TFloatLinkedList.addAll(Lgnu/trove/TFloatCollection;)Z: I12 Branch 40 IFEQ L393 - false
   * 5 gnu.trove.list.linked.TFloatLinkedList.addAll(Lgnu/trove/TFloatCollection;)Z: I23 Branch 41 IFEQ L395 - false
   */

  @Test
  public void test74()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(Float.POSITIVE_INFINITY);
      float[] floatArray0 = new float[8];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      tFloatLinkedList0.addAll((TFloatCollection) tFloatArrayList0);
      int int0 = tFloatLinkedList0.hashCode();
      assertEquals(false, tFloatLinkedList0.isEmpty());
      assertEquals((-1834780664), int0);
  }

  //Test case number: 75
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.toString()Ljava/lang/String;: I16 Branch 120 IFEQ L1045 - true
   * 2 gnu.trove.list.linked.TFloatLinkedList.<init>(F)V: root-Branch
   */

//   @Test
//   public void test75()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(0.0F);
//       String string0 = tFloatLinkedList0.toString();
//       assertEquals("{}", string0);
//       assertEquals(0.0F, tFloatLinkedList0.getNoEntryValue(), 0.01F);
//       assertNotNull(string0);
//   }

  //Test case number: 76
  /*
   * 22 covered goals:
   * 1 gnu.trove.list.linked.TFloatLinkedList.toString()Ljava/lang/String;: I16 Branch 120 IFEQ L1045 - false
   * 2 gnu.trove.list.linked.TFloatLinkedList.toString()Ljava/lang/String;: I32 Branch 121 IFEQ L1048 - true
   * 3 gnu.trove.list.linked.TFloatLinkedList.toString()Ljava/lang/String;: I32 Branch 121 IFEQ L1048 - false
   * 4 gnu.trove.list.linked.TFloatLinkedList.iterator()Lgnu/trove/iterator/TFloatIterator;: root-Branch
   * 5 gnu.trove.list.linked.TFloatLinkedList.<init>()V: root-Branch
   * 6 gnu.trove.list.linked.TFloatLinkedList.add(F)Z: I12 Branch 5 IFEQ L87 - true
   * 7 gnu.trove.list.linked.TFloatLinkedList.add(F)Z: I12 Branch 5 IFEQ L87 - false
   * 8 gnu.trove.list.linked.TFloatLinkedList.no(Ljava/lang/Object;)Z: I3 Branch 110 IFNONNULL L1004 - true
   * 9 gnu.trove.list.linked.TFloatLinkedList.no(Ljava/lang/Object;)Z: I3 Branch 110 IFNONNULL L1004 - false
   * 10 gnu.trove.list.linked.TFloatLinkedList.got(Ljava/lang/Object;)Z: I3 Branch 109 IFNULL L1000 - true
   * 11 gnu.trove.list.linked.TFloatLinkedList.got(Ljava/lang/Object;)Z: I3 Branch 109 IFNULL L1000 - false
   * 12 gnu.trove.list.linked.TFloatLinkedList.add([F)V: I14 Branch 6 IF_ICMPGE L103 - true
   * 13 gnu.trove.list.linked.TFloatLinkedList.add([F)V: I14 Branch 6 IF_ICMPGE L103 - false
   * 14 gnu.trove.list.linked.TFloatLinkedList.toString()Ljava/lang/String;: I16 Branch 120 IFEQ L1045 - true
   * 15 gnu.trove.list.linked.TFloatLinkedList$TFloatLink.getValue()F: root-Branch
   * 16 gnu.trove.list.linked.TFloatLinkedList$TFloatLink.<init>(F)V: root-Branch
   * 17 gnu.trove.list.linked.TFloatLinkedList$TFloatLink.setPrevious(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;)V: root-Branch
   * 18 gnu.trove.list.linked.TFloatLinkedList$TFloatLink.setNext(Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;)V: root-Branch
   * 19 gnu.trove.list.linked.TFloatLinkedList$TFloatLink.getNext()Lgnu/trove/list/linked/TFloatLinkedList$TFloatLink;: root-Branch
   * 20 gnu.trove.list.linked.TFloatLinkedList$1.hasNext()Z: root-Branch
   * 21 gnu.trove.list.linked.TFloatLinkedList$1.<init>(Lgnu/trove/list/linked/TFloatLinkedList;)V: root-Branch
   * 22 gnu.trove.list.linked.TFloatLinkedList$1.next()F: I5 Branch 1 IFEQ L819 - true
   */

  @Test
  public void test76()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      float[] floatArray0 = new float[3];
      tFloatLinkedList0.add(floatArray0);
      String string0 = tFloatLinkedList0.toString();
      assertEquals(false, tFloatLinkedList0.isEmpty());
      assertEquals("{0.0, 0.0, 0.0}", string0);
  }
}

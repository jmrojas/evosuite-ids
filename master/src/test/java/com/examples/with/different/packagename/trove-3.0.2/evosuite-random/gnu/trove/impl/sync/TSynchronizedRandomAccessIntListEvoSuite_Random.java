/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TIntCollection;
import gnu.trove.impl.sync.TSynchronizedIntCollection;
import gnu.trove.impl.sync.TSynchronizedIntList;
import gnu.trove.impl.sync.TSynchronizedRandomAccessIntList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList;
import gnu.trove.list.TIntList;
import gnu.trove.list.array.TIntArrayList;
import gnu.trove.list.linked.TIntLinkedList;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Collection;
import java.util.LinkedList;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedRandomAccessIntListEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[5];
      int int0 = Integer.MIN_VALUE;
      intArray0[0] = int0;
      intArray0[1] = int0;
      TIntArrayList tIntArrayList0 = TIntArrayList.wrap(intArray0);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntArrayList0);
      tSynchronizedRandomAccessIntList0.lastIndexOf(intArray0[1]);
      intArray0[2] = int0;
      intArray0[3] = int0;
      intArray0[4] = int0;
      int int1 = (-167);
      intArray0[0] = int1;
      int int2 = 1;
      intArray0[1] = int2;
      int int3 = 10;
      intArray0[2] = int3;
      int int4 = Integer.MIN_VALUE;
      intArray0[3] = int4;
      int int5 = (-1941);
      intArray0[4] = int5;
      TIntArrayList tIntArrayList1 = TIntArrayList.wrap(intArray0);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList1 = new TSynchronizedRandomAccessIntList((TIntList) tIntArrayList1);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessIntList1.binarySearch(intArray0[2], intArray0[2], int3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 10
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[4];
      int int0 = (-176);
      intArray0[0] = int0;
      intArray0[1] = int0;
      int int1 = 0;
      intArray0[2] = int1;
      intArray0[3] = int1;
      int int2 = (-1609);
      intArray0[0] = int2;
      int int3 = (-635);
      intArray0[1] = int3;
      int int4 = (-1);
      intArray0[2] = int4;
      int int5 = 996;
      intArray0[3] = int5;
      TIntArrayList tIntArrayList0 = new TIntArrayList(intArray0);
      // Undeclared exception!
      try {
        tIntArrayList0.subList(int2, int2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = 0;
      int int1 = (-1154);
      TIntArrayList tIntArrayList0 = new TIntArrayList(int0, int1);
      TUnmodifiableRandomAccessIntList tUnmodifiableRandomAccessIntList0 = new TUnmodifiableRandomAccessIntList((TIntList) tIntArrayList0);
      int int2 = 70;
      int int3 = 0;
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessIntList0.subList(int2, int3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // end index 0 greater than begin index 70
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = (-1);
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList(int0);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntLinkedList0);
      TIntLinkedList tIntLinkedList1 = (TIntLinkedList)tSynchronizedRandomAccessIntList0.list;
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList1 = new TSynchronizedRandomAccessIntList((TIntList) tIntLinkedList1);
      tSynchronizedRandomAccessIntList1.isEmpty();
      int int1 = 1162;
      TIntLinkedList tIntLinkedList2 = new TIntLinkedList(int1);
      String string0 = "1P5Yd$\\qriSRsik";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: 1P5Yd$\\qriSRsik://1P5Yd$\\qriSRsik1P5Yd$%5CqriSRsik#1P5Yd$%5CqriSRsik
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TIntList tIntList0 = null;
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = null;
      try {
        tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList(tIntList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TIntList tIntList0 = null;
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = null;
      try {
        tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList(tIntList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TIntList tIntList0 = null;
      int[] intArray0 = new int[5];
      int int0 = 336;
      intArray0[0] = int0;
      int int1 = 1959;
      intArray0[1] = int1;
      int int2 = (-865);
      intArray0[2] = int2;
      int int3 = (-1741);
      intArray0[3] = int3;
      int int4 = 1518;
      intArray0[4] = int4;
      TIntArrayList tIntArrayList0 = TIntArrayList.wrap(intArray0);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntArrayList0);
      int int5 = 0;
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessIntList0.add(intArray0, int1, int5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int[] intArray0 = new int[9];
      int int0 = 0;
      intArray0[0] = int0;
      int int1 = 633;
      intArray0[1] = int1;
      int int2 = (-989);
      intArray0[2] = int2;
      int int3 = (-1);
      intArray0[3] = int3;
      int int4 = 0;
      intArray0[4] = int4;
      int int5 = 0;
      intArray0[5] = int5;
      int int6 = 0;
      intArray0[6] = int6;
      int int7 = 0;
      intArray0[7] = int7;
      int int8 = 0;
      intArray0[8] = int8;
      TIntArrayList tIntArrayList0 = new TIntArrayList(intArray0);
      String string0 = "Evs]xJ\\r";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: Evs]xJ\\r://Evs]xJ\\rEvs%5DxJ%5Cr#Evs]xJ%5Cr
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int[] intArray0 = new int[5];
      int int0 = (-1);
      intArray0[0] = int0;
      int int1 = (-1160);
      intArray0[1] = int1;
      int int2 = 0;
      intArray0[2] = int2;
      int int3 = 490;
      intArray0[3] = int3;
      int int4 = 0;
      intArray0[4] = int4;
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList(intArray0[0]);
      int int5 = 0;
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntLinkedList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessIntList0.insert(intArray0[4], int1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList();
      String string0 = "";
      String string1 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string1, string1, string1);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://#
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TIntList tIntList0 = null;
      String string0 = File.separator;
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList(tIntList0, (Object) string0);
      int int0 = 425;
      TIntArrayList tIntArrayList0 = new TIntArrayList(int0);
      String string1 = tIntArrayList0.toString();
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList(tIntList0, (Object) string1);
      int int1 = 57;
      int[] intArray0 = new int[1];
      intArray0[0] = int1;
      // Undeclared exception!
      try {
        tIntArrayList0.retainAll(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 424
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList();
      TSynchronizedIntCollection tSynchronizedIntCollection0 = new TSynchronizedIntCollection((TIntCollection) tIntArrayList0);
      TIntArrayList tIntArrayList1 = new TIntArrayList((TIntCollection) tSynchronizedIntCollection0);
      TUnmodifiableRandomAccessIntList tUnmodifiableRandomAccessIntList0 = new TUnmodifiableRandomAccessIntList((TIntList) tIntArrayList1);
      int int0 = 271;
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessIntList0.subList(int0, int0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index < 0
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList();
      TUnmodifiableRandomAccessIntList tUnmodifiableRandomAccessIntList0 = new TUnmodifiableRandomAccessIntList((TIntList) tIntArrayList0);
      int int0 = 750;
      int int1 = (-1709);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessIntList0.subList(int0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // end index -1709 greater than begin index 750
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[8];
      int int0 = 0;
      intArray0[0] = int0;
      int int1 = 924;
      intArray0[1] = int1;
      int int2 = (-1);
      intArray0[2] = int2;
      int int3 = 0;
      intArray0[3] = int3;
      int int4 = (-1503);
      intArray0[4] = int4;
      int int5 = 0;
      intArray0[5] = int5;
      int int6 = (-1364);
      intArray0[6] = int6;
      int int7 = 0;
      intArray0[7] = int7;
      TIntArrayList tIntArrayList0 = new TIntArrayList(intArray0);
      TUnmodifiableRandomAccessIntList tUnmodifiableRandomAccessIntList0 = new TUnmodifiableRandomAccessIntList((TIntList) tIntArrayList0);
      String string0 = tUnmodifiableRandomAccessIntList0.toString();
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntArrayList0, (Object) string0);
      tSynchronizedRandomAccessIntList0.subList(intArray0[3], int7);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 0;
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList(int0);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntLinkedList0);
      tSynchronizedRandomAccessIntList0.reverse();
      tSynchronizedRandomAccessIntList0.sum();
      int[] intArray0 = new int[4];
      int int1 = 10;
      int int2 = 10;
      int int3 = 2;
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessIntList0.binarySearch(int1, int2, int3);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index > size: 2 > 0
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      int int0 = 1585;
      // Undeclared exception!
      try {
        tIntLinkedList0.subList(int0, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 1585 greater than last index 0
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = 0;
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList(int0);
      TIntArrayList tIntArrayList0 = new TIntArrayList((TIntCollection) tIntLinkedList0);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntArrayList0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      tSynchronizedRandomAccessIntList0.removeAll((Collection<?>) linkedList0);
      int int1 = 0;
      TIntArrayList tIntArrayList1 = new TIntArrayList(int1);
      TUnmodifiableRandomAccessIntList tUnmodifiableRandomAccessIntList0 = new TUnmodifiableRandomAccessIntList((TIntList) tIntArrayList1);
      String string0 = tUnmodifiableRandomAccessIntList0.toString();
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntArrayList1, (Object) string0);
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in path at index 0: {}
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      TIntList tIntList0 = null;
      String string0 = "";
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = null;
      try {
        tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList(tIntList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[6];
      int int0 = 1853;
      intArray0[0] = int0;
      int int1 = 0;
      intArray0[1] = int1;
      int int2 = 1;
      intArray0[2] = int2;
      int int3 = (-1612);
      intArray0[3] = int3;
      int int4 = (-147);
      intArray0[4] = int4;
      int int5 = 0;
      intArray0[5] = int5;
      TIntArrayList tIntArrayList0 = TIntArrayList.wrap(intArray0);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntArrayList0);
      int int6 = (-1895);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessIntList0.get(int6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1895
         //
      }
  }
}

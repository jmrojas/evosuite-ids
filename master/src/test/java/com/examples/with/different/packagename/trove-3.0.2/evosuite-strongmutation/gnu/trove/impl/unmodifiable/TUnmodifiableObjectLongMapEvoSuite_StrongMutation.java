/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap;
import gnu.trove.map.TObjectLongMap;
import gnu.trove.map.custom_hash.TObjectLongCustomHashMap;
import gnu.trove.map.hash.TObjectLongHashMap;
import gnu.trove.procedure.TLongProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.util.Set;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableObjectLongMapEvoSuite_StrongMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 6 covered goals:
   * 1 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.size()I:58 - DeleteStatement: size()I
   * 2 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.<init>(Lgnu/trove/map/TObjectLongMap;)V:53 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.size()I:58 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 4 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.size()I:58 - DeleteStatement: size()I
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.size()I: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.<init>(Lgnu/trove/map/TObjectLongMap;)V: I17 Branch 1 IFNONNULL L53 - true
   */

  @Test
  public void test0()  throws Throwable  {
      IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
      Long long0 = new Long((-1322L));
      int int0 = identityHashingStrategy0.computeHashCode(long0);
      TObjectLongHashMap<Object> tObjectLongHashMap0 = new TObjectLongHashMap<Object>(15287);
      TUnmodifiableObjectLongMap<Object> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Object>((TObjectLongMap<Object>) tObjectLongHashMap0);
      int int1 = tUnmodifiableObjectLongMap0.size();
      assertFalse(int1 == int0);
  }

  //Test case number: 1
  /*
   * 4 covered goals:
   * 1 Strong Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.isEmpty()Z:59 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.isEmpty()Z: root-Branch
   * 3 Strong Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.isEmpty()Z:59 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 4 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.isEmpty()Z:59 - DeleteStatement: isEmpty()Z
   */

//   @Test
//   public void test1()  throws Throwable  {
//       IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
//       Long long0 = new Long((-1322L));
//       int int0 = identityHashingStrategy0.computeHashCode(long0);
//       assertEquals(1701123507, int0);
//       
//       TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0);
//       TUnmodifiableObjectLongMap<Long> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongCustomHashMap0);
//       boolean boolean0 = tUnmodifiableObjectLongMap0.isEmpty();
//       assertEquals(true, boolean0);
//   }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.isEmpty()Z:59 - DeleteStatement: isEmpty()Z
   */

  @Test
  public void test2()  throws Throwable  {
      IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0);
      TUnmodifiableObjectLongMap<Long> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongCustomHashMap0);
      boolean boolean0 = tUnmodifiableObjectLongMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 Strong Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.containsKey(Ljava/lang/Object;)Z:60 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.containsKey(Ljava/lang/Object;)Z: root-Branch
   * 3 Strong Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.containsKey(Ljava/lang/Object;)Z:60 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   */

  @Test
  public void test3()  throws Throwable  {
      IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
      Long long0 = new Long((-1322L));
      identityHashingStrategy0.computeHashCode(long0);
      IdentityHashingStrategy<Object> identityHashingStrategy1 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy1, (-112), (float) (-112), (-18L));
      TUnmodifiableObjectLongMap<Integer> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Integer>((TObjectLongMap<Integer>) tObjectLongCustomHashMap0);
      boolean boolean0 = tUnmodifiableObjectLongMap0.containsKey((Object) "\u65E5\u672C\u8A9E");
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 7 covered goals:
   * 1 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.containsValue(J)Z:61 - InsertUnaryOp Negation of val
   * 2 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.containsValue(J)Z:61 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 3 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.containsValue(J)Z:61 - DeleteStatement: containsValue(J)Z
   * 4 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.containsValue(J)Z:61 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 5 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.containsValue(J)Z:61 - DeleteStatement: containsValue(J)Z
   * 6 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.containsValue(J)Z:61 - InsertUnaryOp Negation of val
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.containsValue(J)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
      Long long0 = new Long((-1322L));
      identityHashingStrategy0.computeHashCode(long0);
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0);
      TUnmodifiableObjectLongMap<Long> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongCustomHashMap0);
      boolean boolean0 = tUnmodifiableObjectLongMap0.containsValue((long) 0);
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * 1 Strong Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.get(Ljava/lang/Object;)J:62 - DeleteStatement: get(Ljava/lang/Object;)J
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.get(Ljava/lang/Object;)J: root-Branch
   * 3 Strong Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.get(Ljava/lang/Object;)J:62 - DeleteStatement: get(Ljava/lang/Object;)J
   */

  @Test
  public void test5()  throws Throwable  {
      TObjectLongHashMap<Integer> tObjectLongHashMap0 = new TObjectLongHashMap<Integer>((-1925), (-1925), (-1925));
      TUnmodifiableObjectLongMap<Integer> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Integer>((TObjectLongMap<Integer>) tObjectLongHashMap0);
      long long0 = tUnmodifiableObjectLongMap0.get((Object) (-1925));
      assertEquals((-1925L), long0);
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 Strong Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.keys()[Ljava/lang/Object;:78 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 2 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.keys()[Ljava/lang/Object;:78 - DeleteStatement: keys()[Ljava/lang/Object;
   * 3 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.keys()[Ljava/lang/Object;:78 - DeleteStatement: keys()[Ljava/lang/Object;
   * 4 Strong Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.keys()[Ljava/lang/Object;:78 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.keys()[Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TObjectLongHashMap<Object> tObjectLongHashMap0 = new TObjectLongHashMap<Object>(392);
      TUnmodifiableObjectLongMap<Object> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Object>((TObjectLongMap<Object>) tObjectLongHashMap0);
      Object[] objectArray0 = tUnmodifiableObjectLongMap0.keys();
      assertNotNull(objectArray0);
  }

  //Test case number: 7
  /*
   * 5 covered goals:
   * 1 Strong Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:79 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 2 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:79 - DeleteStatement: keys([Ljava/lang/Object;)[Ljava/lang/Object;
   * 3 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:79 - DeleteStatement: keys([Ljava/lang/Object;)[Ljava/lang/Object;
   * 4 Strong Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:79 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, (-1), (float) (-1), (-9223372036854775808L));
      TUnmodifiableObjectLongMap<Long> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongCustomHashMap0);
      Long[] longArray0 = new Long[10];
      Long[] longArray1 = tUnmodifiableObjectLongMap0.keys(longArray0);
      assertSame(longArray1, longArray0);
  }

  //Test case number: 8
  /*
   * 5 covered goals:
   * 1 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.values()[J:86 - DeleteStatement: values()[J
   * 2 Strong Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.values()[J:86 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 3 Strong Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.values()[J:86 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 4 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.values()[J:86 - DeleteStatement: values()[J
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.values()[J: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 2141977);
      TUnmodifiableObjectLongMap<Integer> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Integer>((TObjectLongMap<Integer>) tObjectLongCustomHashMap0);
      long[] longArray0 = tUnmodifiableObjectLongMap0.values();
      assertNotNull(longArray0);
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.values([J)[J:87 - DeleteStatement: values([J)[J
   * 2 Strong Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.values([J)[J:87 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 3 Strong Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.values([J)[J:87 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 4 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.values([J)[J:87 - DeleteStatement: values([J)[J
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.values([J)[J: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0);
      TUnmodifiableObjectLongMap<Long> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongCustomHashMap0);
      long[] longArray0 = new long[1];
      long[] longArray1 = tUnmodifiableObjectLongMap0.values(longArray0);
      assertSame(longArray1, longArray0);
  }

  //Test case number: 10
  /*
   * 9 covered goals:
   * 1 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.equals(Ljava/lang/Object;)Z:89 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 2 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.equals(Ljava/lang/Object;)Z:89 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 3 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.equals(Ljava/lang/Object;)Z:89 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 4 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> !=
   * 5 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> !=
   * 6 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.equals(Ljava/lang/Object;)Z:89 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 7 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.equals(Ljava/lang/Object;)Z:89 - ReplaceConstant - 0 -> 1
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L89 - false
   * 9 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L89 - true
   */

//   @Test
//   public void test10()  throws Throwable  {
//       IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
//       Long long0 = new Long((-1322L));
//       int int0 = identityHashingStrategy0.computeHashCode(long0);
//       assertEquals(985597010, int0);
//       
//       IdentityHashingStrategy<Object> identityHashingStrategy1 = new IdentityHashingStrategy<Object>();
//       TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy1, (-112), (float) (-112), (-18L));
//       TUnmodifiableObjectLongMap<Integer> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Integer>((TObjectLongMap<Integer>) tObjectLongCustomHashMap0);
//       boolean boolean0 = tUnmodifiableObjectLongMap0.equals((Object) null);
//       assertEquals(false, boolean0);
//   }

  //Test case number: 11
  /*
   * 3 covered goals:
   * 1 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.equals(Ljava/lang/Object;)Z:89 - ReplaceConstant - 1 -> 0
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L89 - true
   * 3 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.equals(Ljava/lang/Object;)Z:89 - ReplaceConstant - 1 -> 0
   */

  @Test
  public void test11()  throws Throwable  {
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>();
      TUnmodifiableObjectLongMap<Long> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongCustomHashMap0);
      boolean boolean0 = tUnmodifiableObjectLongMap0.equals((Object) tUnmodifiableObjectLongMap0);
      assertEquals(true, boolean0);
  }

  //Test case number: 12
  /*
   * 3 covered goals:
   * 1 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.equals(Ljava/lang/Object;)Z:89 - ReplaceConstant - 0 -> 1
   * 2 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> !=
   * 3 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test12()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-112), (float) (-112), (-18L));
      TUnmodifiableObjectLongMap<Integer> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Integer>((TObjectLongMap<Integer>) tObjectLongCustomHashMap0);
      boolean boolean0 = tUnmodifiableObjectLongMap0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 3 covered goals:
   * 1 Strong Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.hashCode()I:90 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.hashCode()I: root-Branch
   * 3 Strong Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.hashCode()I:90 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   */

  @Test
  public void test13()  throws Throwable  {
      TObjectLongCustomHashMap<Object> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Object>((HashingStrategy<? super Object>) null);
      TUnmodifiableObjectLongMap<Object> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Object>((TObjectLongMap<Object>) tObjectLongCustomHashMap0);
      long[] longArray0 = new long[7];
      longArray0[0] = 396L;
      tUnmodifiableObjectLongMap0.hashCode();
      longArray0[0] = (long) 0;
  }

  //Test case number: 14
  /*
   * 2 covered goals:
   * 1 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.hashCode()I:90 - DeleteStatement: hashCode()I
   * 2 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.hashCode()I:90 - DeleteStatement: hashCode()I
   */

  @Test
  public void test14()  throws Throwable  {
      TObjectLongHashMap<Object> tObjectLongHashMap0 = new TObjectLongHashMap<Object>(1572);
      TUnmodifiableObjectLongMap<Object> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Object>((TObjectLongMap<Object>) tObjectLongHashMap0);
      tObjectLongHashMap0.putIfAbsent((Object) "/", 1288L);
      int int0 = tUnmodifiableObjectLongMap0.hashCode();
      assertEquals(1319, int0);
  }

  //Test case number: 15
  /*
   * 5 covered goals:
   * 1 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.toString()Ljava/lang/String;:91 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 2 Strong Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.toString()Ljava/lang/String;:91 - DeleteStatement: toString()Ljava/lang/String;
   * 3 Strong Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.toString()Ljava/lang/String;:91 - DeleteStatement: toString()Ljava/lang/String;
   * 4 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.toString()Ljava/lang/String;:91 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TObjectLongCustomHashMap<Object> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Object>();
      TUnmodifiableObjectLongMap<Object> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Object>((TObjectLongMap<Object>) tObjectLongCustomHashMap0);
      String string0 = tUnmodifiableObjectLongMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 16
  /*
   * 6 covered goals:
   * 1 Strong Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.getNoEntryValue()J:92 - DeleteStatement: getNoEntryValue()J
   * 2 Strong Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.getNoEntryValue()J:92 - DeleteStatement: getNoEntryValue()J
   * 3 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.getNoEntryValue()J:92 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 4 Strong Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:101 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.getNoEntryValue()J: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 0, 0.0F, 1058L);
      TUnmodifiableObjectLongMap<Integer> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Integer>((TObjectLongMap<Integer>) tObjectLongCustomHashMap0);
      TObjectLongHashMap<Object> tObjectLongHashMap0 = new TObjectLongHashMap<Object>((TObjectLongMap<?>) tUnmodifiableObjectLongMap0);
      assertEquals(1058L, tObjectLongHashMap0.getNoEntryValue());
  }

  //Test case number: 17
  /*
   * 5 covered goals:
   * 1 Strong Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z:95 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 2 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z:95 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z
   * 3 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z:95 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z
   * 4 Strong Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z:95 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   */

//   @Test
//   public void test17()  throws Throwable  {
//       IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
//       Long long0 = new Long((-1322L));
//       int int0 = identityHashingStrategy0.computeHashCode(long0);
//       assertEquals(1503273838, int0);
//       
//       TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0);
//       TUnmodifiableObjectLongMap<Long> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongCustomHashMap0);
//       TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>(0, (-938.9502F));
//       ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tObjectLongHashMap0._set);
//       boolean boolean0 = tUnmodifiableObjectLongMap0.forEachKey((TObjectProcedure<? super Long>) toObjectArrayProceedure0);
//       assertEquals(true, boolean0);
//   }

  //Test case number: 18
  /*
   * 5 covered goals:
   * 1 Strong Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:98 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 2 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:98 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z
   * 3 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:98 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z
   * 4 Strong Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:98 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TObjectLongCustomHashMap<Object> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Object>((HashingStrategy<? super Object>) null);
      TUnmodifiableObjectLongMap<Object> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Object>((TObjectLongMap<Object>) tObjectLongCustomHashMap0);
      long[] longArray0 = new long[7];
      longArray0[0] = 396L;
      tUnmodifiableObjectLongMap0.forEachValue((TLongProcedure) null);
      longArray0[0] = (long) 0;
  }

  //Test case number: 19
  /*
   * 2 covered goals:
   * 1 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:101 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z
   * 2 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:101 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z
   */

  @Test
  public void test19()  throws Throwable  {
      IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
      Long long0 = new Long((-1322L));
      identityHashingStrategy0.computeHashCode(long0);
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0);
      TUnmodifiableObjectLongMap<Long> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongCustomHashMap0);
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>(0, (-938.9502F));
      tObjectLongHashMap0.putAll((TObjectLongMap<? extends Long>) tUnmodifiableObjectLongMap0);
      assertEquals(3, tObjectLongHashMap0.capacity());
  }

  //Test case number: 20
  /*
   * 4 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.put(Ljava/lang/Object;J)J: root-Branch
   * 2 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.size()I:58 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 3 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.getNoEntryValue()J:92 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 4 Strong Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:101 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   */

  @Test
  public void test20()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 0, (float) 0, (long) 0);
      TUnmodifiableObjectLongMap<Integer> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Integer>((TObjectLongMap<Integer>) tObjectLongCustomHashMap0);
      TObjectLongHashMap<Object> tObjectLongHashMap0 = new TObjectLongHashMap<Object>((TObjectLongMap<?>) tUnmodifiableObjectLongMap0);
      TUnmodifiableObjectLongMap<Object> tUnmodifiableObjectLongMap1 = new TUnmodifiableObjectLongMap<Object>((TObjectLongMap<Object>) tObjectLongHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectLongMap1.put((Object) null, (long) 'm');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 21
  /*
   * 12 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.keySet()Ljava/util/Set;: I4 Branch 2 IFNONNULL L74 - true
   * 2 Strong Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.keySet()Ljava/util/Set;:74 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.keySet()Ljava/util/Set;:75 - DeleteStatement: keySet()Ljava/util/Set;
   * 4 Strong Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.keySet()Ljava/util/Set;:75 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 5 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.keySet()Ljava/util/Set;:76 - DeleteField: keySetLjava/util/Set;
   * 6 Strong Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.keySet()Ljava/util/Set;:75 - DeleteStatement: unmodifiableSet(Ljava/util/Set;)Ljava/util/Set;
   * 7 Strong Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.keySet()Ljava/util/Set;:74 - ReplaceComparisonOperator != null -> = null
   * 8 Strong Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.keySet()Ljava/util/Set;:75 - DeleteStatement: keySet()Ljava/util/Set;
   * 9 Strong Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.keySet()Ljava/util/Set;:75 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 10 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.keySet()Ljava/util/Set;:76 - DeleteField: keySetLjava/util/Set;
   * 11 Strong Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.keySet()Ljava/util/Set;:75 - DeleteStatement: unmodifiableSet(Ljava/util/Set;)Ljava/util/Set;
   * 12 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.keySet()Ljava/util/Set;: I4 Branch 2 IFNONNULL L74 - false
   */

  @Test
  public void test21()  throws Throwable  {
      TObjectLongHashMap<Integer> tObjectLongHashMap0 = new TObjectLongHashMap<Integer>(0, 0, 0);
      TUnmodifiableObjectLongMap<Integer> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Integer>((TObjectLongMap<Integer>) tObjectLongHashMap0);
      Set<Integer> set0 = tUnmodifiableObjectLongMap0.keySet();
      assertNotNull(set0);
      
      Set<Integer> set1 = tUnmodifiableObjectLongMap0.keySet();
      assertSame(set1, set0);
  }

  //Test case number: 22
  /*
   * 13 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.valueCollection()Lgnu/trove/TLongCollection;: I4 Branch 3 IFNONNULL L82 - true
   * 2 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.<init>(Lgnu/trove/map/TObjectLongMap;)V:53 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.valueCollection()Lgnu/trove/TLongCollection;:82 - ReplaceComparisonOperator != null -> = null
   * 4 Strong Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.valueCollection()Lgnu/trove/TLongCollection;:83 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TLongCollection;)Lgnu/trove/TLongCollection;
   * 5 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.valueCollection()Lgnu/trove/TLongCollection;:84 - DeleteField: valuesLgnu/trove/TLongCollection;
   * 6 Strong Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.valueCollection()Lgnu/trove/TLongCollection;:83 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 7 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.valueCollection()Lgnu/trove/TLongCollection;:83 - DeleteStatement: valueCollection()Lgnu/trove/TLongCollection;
   * 8 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.valueCollection()Lgnu/trove/TLongCollection;:82 - ReplaceComparisonOperator != null -> = null
   * 9 Strong Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.valueCollection()Lgnu/trove/TLongCollection;:83 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TLongCollection;)Lgnu/trove/TLongCollection;
   * 10 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.valueCollection()Lgnu/trove/TLongCollection;:84 - DeleteField: valuesLgnu/trove/TLongCollection;
   * 11 Strong Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.valueCollection()Lgnu/trove/TLongCollection;:83 - DeleteField: mLgnu/trove/map/TObjectLongMap;
   * 12 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.valueCollection()Lgnu/trove/TLongCollection;:83 - DeleteStatement: valueCollection()Lgnu/trove/TLongCollection;
   * 13 gnu.trove.impl.unmodifiable.TUnmodifiableObjectLongMap.valueCollection()Lgnu/trove/TLongCollection;: I4 Branch 3 IFNONNULL L82 - false
   */

  @Test
  public void test22()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 2141977);
      TUnmodifiableObjectLongMap<Integer> tUnmodifiableObjectLongMap0 = new TUnmodifiableObjectLongMap<Integer>((TObjectLongMap<Integer>) tObjectLongCustomHashMap0);
      TUnmodifiableLongCollection tUnmodifiableLongCollection0 = (TUnmodifiableLongCollection)tUnmodifiableObjectLongMap0.valueCollection();
      assertNotNull(tUnmodifiableLongCollection0);
      
      TUnmodifiableLongCollection tUnmodifiableLongCollection1 = (TUnmodifiableLongCollection)tUnmodifiableObjectLongMap0.valueCollection();
      assertSame(tUnmodifiableLongCollection1, tUnmodifiableLongCollection0);
  }
}

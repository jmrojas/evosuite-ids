/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TByteCollection;
import gnu.trove.impl.sync.TSynchronizedByteList;
import gnu.trove.impl.sync.TSynchronizedRandomAccessByteList;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessByteList;
import gnu.trove.list.TByteList;
import gnu.trove.list.array.TByteArrayList;
import gnu.trove.list.linked.TByteLinkedList;
import java.io.PipedInputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Locale;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedRandomAccessByteListEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-31);
      byteArray0[0] = byte0;
      byte byte1 = (byte)13;
      TByteList tByteList0 = null;
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = null;
      try {
        tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList(tByteList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      byte byte0 = (byte)1;
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList(byte0);
      String string0 = "2FHb";
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0);
      int int0 = 0;
      tSynchronizedRandomAccessByteList0.sort(int0, int0);
      String string1 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, (int) byte0, string1, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 0: 2FHb://2FHb@2FHb:1?2FHb#2FHb
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      byte byte0 = (byte) (-105);
      TByteArrayList tByteArrayList0 = new TByteArrayList();
      String string0 = "+O*+%auz)";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 0: +O*+%auz):+O*+%25auz)#+O*+%25auz)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      int int0 = 176;
      int int1 = 1375;
      // Undeclared exception!
      try {
        tByteLinkedList0.subList(int0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 176 greater than last index 0
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      byte byte0 = (byte)1;
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList(byte0);
      int int0 = 508;
      int int1 = (-1235);
      // Undeclared exception!
      try {
        tByteLinkedList0.subList(int0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 508 greater than end index -1235
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TByteList tByteList0 = null;
      String string0 = "k[sn~>[>1SI_\"w!";
      // Undeclared exception!
      try {
        URI.create(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in path at index 1: k[sn~>[>1SI_\"w!
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0);
      byte byte0 = (byte) (-87);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessByteList0.indexOf(byte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TByteList tByteList0 = null;
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = null;
      try {
        tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList(tByteList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      byte byte0 = (byte)106;
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList(byte0);
      int int0 = (-876);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = byte0;
      byteArray0[0] = byte0;
      byteArray0[0] = byte0;
      byteArray0[1] = byte0;
      byteArray0[2] = byte0;
      byteArray0[3] = byte0;
      byteArray0[4] = byte0;
      byte byte1 = (byte) (-128);
      byteArray0[1] = byte1;
      byteArray0[2] = byte1;
      byteArray0[3] = byte1;
      byteArray0[4] = byte0;
      byteArray0[1] = byte0;
      byte byte2 = (byte) (-12);
      byteArray0[2] = byte2;
      byteArray0[3] = byte0;
      byteArray0[4] = byte0;
      // Undeclared exception!
      try {
        tByteLinkedList0.set(int0, byteArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // at offset -876
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte) (-1);
      byteArray0[0] = byte0;
      byte byte1 = (byte)1;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-46);
      byteArray0[2] = byte2;
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0);
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteArrayList0);
      byte byte3 = tSynchronizedRandomAccessByteList0.removeAt((int) byteArray0[1]);
      assertFalse(byte3 == byte2);
  }

  @Test
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)0;
      byte byte1 = (byte) (-103);
      byteArray0[0] = byte1;
      byteArray0[0] = byte0;
      TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteArrayList0);
      byte byte2 = (byte) (-12);
      tSynchronizedRandomAccessByteList0.fill(byte2);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      tSynchronizedRandomAccessByteList0.retainAll((Collection<?>) linkedList0);
      tSynchronizedRandomAccessByteList0.containsAll(byteArray0);
      int int0 = 2;
      byte byte3 = (byte)0;
      TByteArrayList tByteArrayList1 = new TByteArrayList(int0, byte3);
      byte byte4 = (byte)0;
      boolean boolean0 = tSynchronizedRandomAccessByteList0.add(byte4);
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList1 = new TSynchronizedRandomAccessByteList((TByteList) tByteArrayList1);
      boolean boolean1 = tSynchronizedRandomAccessByteList1.containsAll((TByteCollection) tByteArrayList1);
      assertTrue(boolean1 == boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-1);
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-43);
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-76);
      byteArray0[4] = byte4;
      byte byte5 = (byte)117;
      byteArray0[5] = byte5;
      byte byte6 = (byte)63;
      byteArray0[6] = byte6;
      byte byte7 = (byte) (-125);
      byteArray0[7] = byte7;
      byte byte8 = (byte) (-57);
      byteArray0[8] = byte8;
      TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
      TSynchronizedByteList tSynchronizedByteList0 = new TSynchronizedByteList((TByteList) tByteArrayList0);
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tSynchronizedByteList0);
      byte byte9 = tSynchronizedRandomAccessByteList0.max();
      assertFalse(byte9 == byte8);
  }

  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte) (-27);
      TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
      String string0 = "`+~p";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in path at index 0: `+~p
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TByteList tByteList0 = null;
      String string0 = "6";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: 6://66#6
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteArrayList0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      tSynchronizedRandomAccessByteList0.containsAll((Collection<?>) linkedList0);
      TByteList tByteList0 = null;
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)45;
      byteArray0[0] = byte0;
      byte byte1 = (byte)43;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-12);
      byteArray0[2] = byte2;
      byte byte3 = (byte)2;
      byteArray0[3] = byte3;
      byte byte4 = (byte)0;
      byteArray0[4] = byte4;
      byte byte5 = (byte)0;
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-10);
      byteArray0[6] = byte6;
      tSynchronizedRandomAccessByteList0.toArray(byteArray0, (int) byteArray0[2], (int) byteArray0[5]);
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList1 = null;
      try {
        tSynchronizedRandomAccessByteList1 = new TSynchronizedRandomAccessByteList(tByteList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TByteList tByteList0 = null;
      TUnmodifiableRandomAccessByteList tUnmodifiableRandomAccessByteList0 = null;
      try {
        tUnmodifiableRandomAccessByteList0 = new TUnmodifiableRandomAccessByteList(tByteList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
      TUnmodifiableByteList tUnmodifiableByteList0 = new TUnmodifiableByteList((TByteList) tByteArrayList0);
      int int0 = 0;
      tUnmodifiableByteList0.subList(int0, (int) byteArray0[0]);
      int int1 = (-220);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      String string0 = locale0.getDisplayVariant();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0, (Object) string0);
      tSynchronizedRandomAccessByteList0.sum();
      int int0 = 841;
      int int1 = (-208);
      tSynchronizedRandomAccessByteList0.clear();
      // Undeclared exception!
      try {
        tByteLinkedList0.subList(int0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 841 greater than end index -208
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TUnmodifiableRandomAccessByteList tUnmodifiableRandomAccessByteList0 = new TUnmodifiableRandomAccessByteList((TByteList) tByteLinkedList0);
      int int0 = 2;
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessByteList0.subList(int0, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 2 greater than last index 0
         //
      }
  }
}

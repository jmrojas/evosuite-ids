/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedObjectFloatMap;
import gnu.trove.map.TObjectFloatMap;
import gnu.trove.map.custom_hash.TObjectFloatCustomHashMap;
import gnu.trove.map.hash.TObjectFloatHashMap;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InterruptedIOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Locale;
import org.evosuite.testcase.TestCaseExecutor;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedObjectFloatMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<String> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0);
      TSynchronizedObjectFloatMap<String> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<String>((TObjectFloatMap<String>) tObjectFloatCustomHashMap0);
      String string0 = tSynchronizedObjectFloatMap0.toString();
      assertEquals("{}", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      TObjectFloatMap<String> tObjectFloatMap0 = null;
      float float0 = (-1700.2834F);
      TSynchronizedObjectFloatMap<String> tSynchronizedObjectFloatMap0 = null;
      try {
        tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<String>(tObjectFloatMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int0 = 0;
      TObjectFloatHashMap<Float> tObjectFloatHashMap0 = new TObjectFloatHashMap<Float>(int0);
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectFloatMap<?>) tObjectFloatHashMap0);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      String string0 = locale0.getDisplayScript();
      TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatCustomHashMap0, (Object) string0);
      Object object0 = null;
      boolean boolean0 = tSynchronizedObjectFloatMap0.containsKey(object0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      TObjectFloatMap<Object> tObjectFloatMap0 = null;
      TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap0 = null;
      try {
        tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Object>(tObjectFloatMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TObjectFloatMap<Integer> tObjectFloatMap0 = null;
      String string0 = "";
      int int0 = 0;
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, int0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://@:0?#
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TObjectFloatHashMap<Integer> tObjectFloatHashMap0 = new TObjectFloatHashMap<Integer>();
      TSynchronizedObjectFloatMap<Integer> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Integer>((TObjectFloatMap<Integer>) tObjectFloatHashMap0);
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>();
      tSynchronizedObjectFloatMap0.keys();
      TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap1 = new TSynchronizedObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatCustomHashMap0);
      Object object0 = null;
      float float0 = (-1.0F);
      float float1 = tSynchronizedObjectFloatMap1.put(object0, float0);
      int int0 = 0;
      TObjectFloatHashMap<Float> tObjectFloatHashMap1 = new TObjectFloatHashMap<Float>(int0, int0);
      TSynchronizedObjectFloatMap<Float> tSynchronizedObjectFloatMap2 = new TSynchronizedObjectFloatMap<Float>((TObjectFloatMap<Float>) tObjectFloatHashMap1, object0);
      float float2 = 0.0F;
      // Undeclared exception!
      try {
        tSynchronizedObjectFloatMap2.putIfAbsent((Float) float1, float2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

//   @Test
//   public void test6()  throws Throwable  {
//       int int0 = 0;
//       float float0 = (-2006.863F);
//       TObjectFloatHashMap<Object> tObjectFloatHashMap0 = new TObjectFloatHashMap<Object>(int0, float0);
//       Locale locale0 = Locale.TRADITIONAL_CHINESE;
//       tObjectFloatHashMap0.keys();
//       Locale locale1 = Locale.ENGLISH;
//       PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
//       PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
//       DataInputStream dataInputStream0 = new DataInputStream((InputStream) pipedInputStream0);
//       try {
//         dataInputStream0.readUTF();
//         fail("Expecting exception: InterruptedIOException");
//       
//       } catch(InterruptedIOException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//       }
//   }

  @Test
  public void test7()  throws Throwable  {
      int int0 = 1204;
      TObjectFloatHashMap<Object> tObjectFloatHashMap0 = new TObjectFloatHashMap<Object>(int0, int0, int0);
      Object object0 = null;
      TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatHashMap0, object0);
      float float0 = 581.63696F;
      // Undeclared exception!
      try {
        tSynchronizedObjectFloatMap0.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

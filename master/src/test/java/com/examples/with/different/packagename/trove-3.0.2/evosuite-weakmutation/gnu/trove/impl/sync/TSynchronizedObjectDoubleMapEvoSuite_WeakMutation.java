/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TDoubleFunction;
import gnu.trove.impl.sync.TSynchronizedDoubleCollection;
import gnu.trove.impl.sync.TSynchronizedObjectDoubleMap;
import gnu.trove.iterator.TObjectDoubleIterator;
import gnu.trove.map.TObjectDoubleMap;
import gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap;
import gnu.trove.map.hash.TObjectDoubleHashMap;
import gnu.trove.procedure.TDoubleProcedure;
import gnu.trove.procedure.TObjectDoubleProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedObjectDoubleMapEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 9 covered goals:
   * 1 Weak Mutation 5: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.isEmpty()Z:74 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 6: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.isEmpty()Z:74 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 3 Weak Mutation 7: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.isEmpty()Z:74 - DeleteStatement: isEmpty()Z
   * 4 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.isEmpty()Z: root-Branch
   * 5 Weak Mutation 0: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.<init>(Lgnu/trove/map/TObjectDoubleMap;)V:59 - ReplaceComparisonOperator != null -> = null
   * 6 Weak Mutation 5: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.isEmpty()Z:74 - DeleteField: mutexLjava/lang/Object;
   * 7 Weak Mutation 6: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.isEmpty()Z:74 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 8 Weak Mutation 7: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.isEmpty()Z:74 - DeleteStatement: isEmpty()Z
   * 9 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.<init>(Lgnu/trove/map/TObjectDoubleMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleHashMap<Integer> tObjectDoubleHashMap0 = new TObjectDoubleHashMap<Integer>(0);
      TObjectDoubleCustomHashMap<Object> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectDoubleMap<?>) tObjectDoubleHashMap0);
      TSynchronizedObjectDoubleMap<Object> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Object>((TObjectDoubleMap<Object>) tObjectDoubleCustomHashMap0);
      boolean boolean0 = tSynchronizedObjectDoubleMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 9 covered goals:
   * 1 Weak Mutation 8: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.containsKey(Ljava/lang/Object;)Z:77 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 9: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.containsKey(Ljava/lang/Object;)Z:77 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 3 Weak Mutation 10: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.containsKey(Ljava/lang/Object;)Z:77 - ReplaceVariable key -> mutex
   * 4 Weak Mutation 11: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.containsKey(Ljava/lang/Object;)Z:77 - DeleteStatement: containsKey(Ljava/lang/Object;)Z
   * 5 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.containsKey(Ljava/lang/Object;)Z: root-Branch
   * 6 Weak Mutation 8: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.containsKey(Ljava/lang/Object;)Z:77 - DeleteField: mutexLjava/lang/Object;
   * 7 Weak Mutation 9: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.containsKey(Ljava/lang/Object;)Z:77 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 8 Weak Mutation 10: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.containsKey(Ljava/lang/Object;)Z:77 - ReplaceVariable key -> mutex
   * 9 Weak Mutation 11: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.containsKey(Ljava/lang/Object;)Z:77 - DeleteStatement: containsKey(Ljava/lang/Object;)Z
   */

  @Test
  public void test1()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      TSynchronizedObjectDoubleMap<Integer> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Integer>((TObjectDoubleMap<Integer>) tObjectDoubleCustomHashMap0);
      boolean boolean0 = tSynchronizedObjectDoubleMap0.containsKey((Object) "");
      assertEquals(false, boolean0);
  }

  //Test case number: 2
  /*
   * 9 covered goals:
   * 1 Weak Mutation 12: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.containsValue(D)Z:80 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 13: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.containsValue(D)Z:80 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 3 Weak Mutation 14: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.containsValue(D)Z:80 - InsertUnaryOp Negation of value
   * 4 Weak Mutation 15: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.containsValue(D)Z:80 - DeleteStatement: containsValue(D)Z
   * 5 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.containsValue(D)Z: root-Branch
   * 6 Weak Mutation 12: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.containsValue(D)Z:80 - DeleteField: mutexLjava/lang/Object;
   * 7 Weak Mutation 13: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.containsValue(D)Z:80 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 8 Weak Mutation 14: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.containsValue(D)Z:80 - InsertUnaryOp Negation of value
   * 9 Weak Mutation 15: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.containsValue(D)Z:80 - DeleteStatement: containsValue(D)Z
   */

  @Test
  public void test2()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Object> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      TSynchronizedObjectDoubleMap<Object> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Object>((TObjectDoubleMap<Object>) tObjectDoubleCustomHashMap0);
      boolean boolean0 = tSynchronizedObjectDoubleMap0.containsValue((double) 0);
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 20 covered goals:
   * 1 Weak Mutation 17: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.get(Ljava/lang/Object;)D:83 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 2 Weak Mutation 16: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.get(Ljava/lang/Object;)D:83 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 19: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.get(Ljava/lang/Object;)D:83 - DeleteStatement: get(Ljava/lang/Object;)D
   * 4 Weak Mutation 18: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.get(Ljava/lang/Object;)D:83 - ReplaceVariable key -> mutex
   * 5 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.get(Ljava/lang/Object;)D: root-Branch
   * 6 Weak Mutation 2: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.size()I:71 - DeleteField: mutexLjava/lang/Object;
   * 7 Weak Mutation 3: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.size()I:71 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 8 Weak Mutation 4: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.size()I:71 - DeleteStatement: size()I
   * 9 Weak Mutation 17: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.get(Ljava/lang/Object;)D:83 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 10 Weak Mutation 16: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.get(Ljava/lang/Object;)D:83 - DeleteField: mutexLjava/lang/Object;
   * 11 Weak Mutation 19: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.get(Ljava/lang/Object;)D:83 - DeleteStatement: get(Ljava/lang/Object;)D
   * 12 Weak Mutation 18: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.get(Ljava/lang/Object;)D:83 - ReplaceVariable key -> mutex
   * 13 Weak Mutation 66: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.getNoEntryValue()D:139 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 14 Weak Mutation 67: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.getNoEntryValue()D:139 - DeleteStatement: getNoEntryValue()D
   * 15 Weak Mutation 79: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:151 - DeleteField: mutexLjava/lang/Object;
   * 16 Weak Mutation 81: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:151 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z
   * 17 Weak Mutation 80: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:151 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 18 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.size()I: root-Branch
   * 19 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.getNoEntryValue()D: root-Branch
   * 20 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      TSynchronizedObjectDoubleMap<Integer> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Integer>((TObjectDoubleMap<Integer>) tObjectDoubleCustomHashMap0);
      TObjectDoubleHashMap<Object> tObjectDoubleHashMap0 = new TObjectDoubleHashMap<Object>((TObjectDoubleMap<?>) tSynchronizedObjectDoubleMap0);
      TSynchronizedObjectDoubleMap<Object> tSynchronizedObjectDoubleMap1 = new TSynchronizedObjectDoubleMap<Object>((TObjectDoubleMap<Object>) tObjectDoubleHashMap0);
      double double0 = tSynchronizedObjectDoubleMap1.get((Object) "");
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 4
  /*
   * 13 covered goals:
   * 1 Weak Mutation 21: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.put(Ljava/lang/Object;D)D:87 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 2 Weak Mutation 20: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.put(Ljava/lang/Object;D)D:87 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 23: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.put(Ljava/lang/Object;D)D:87 - InsertUnaryOp Negation of value
   * 4 Weak Mutation 22: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.put(Ljava/lang/Object;D)D:87 - ReplaceVariable key -> mutex
   * 5 Weak Mutation 24: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.put(Ljava/lang/Object;D)D:87 - DeleteStatement: put(Ljava/lang/Object;D)D
   * 6 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.put(Ljava/lang/Object;D)D: root-Branch
   * 7 Weak Mutation 1: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.<init>(Lgnu/trove/map/TObjectDoubleMap;Ljava/lang/Object;)V:67 - ReplaceVariable mutex -> mutex
   * 8 Weak Mutation 21: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.put(Ljava/lang/Object;D)D:87 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 9 Weak Mutation 20: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.put(Ljava/lang/Object;D)D:87 - DeleteField: mutexLjava/lang/Object;
   * 10 Weak Mutation 23: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.put(Ljava/lang/Object;D)D:87 - InsertUnaryOp Negation of value
   * 11 Weak Mutation 22: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.put(Ljava/lang/Object;D)D:87 - ReplaceVariable key -> mutex
   * 12 Weak Mutation 24: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.put(Ljava/lang/Object;D)D:87 - DeleteStatement: put(Ljava/lang/Object;D)D
   * 13 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.<init>(Lgnu/trove/map/TObjectDoubleMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1867, (float) 1867);
      TSynchronizedObjectDoubleMap<Integer> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Integer>((TObjectDoubleMap<Integer>) tObjectDoubleCustomHashMap0, (Object) "");
      tSynchronizedObjectDoubleMap0.put((Integer) 1867, (double) 1867);
      assertEquals(1, tObjectDoubleCustomHashMap0.size());
      assertEquals("{1867=1867.0}", tObjectDoubleCustomHashMap0.toString());
  }

  //Test case number: 5
  /*
   * 9 covered goals:
   * 1 Weak Mutation 25: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.remove(Ljava/lang/Object;)D:90 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 27: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.remove(Ljava/lang/Object;)D:90 - ReplaceVariable key -> mutex
   * 3 Weak Mutation 26: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.remove(Ljava/lang/Object;)D:90 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 4 Weak Mutation 28: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.remove(Ljava/lang/Object;)D:90 - DeleteStatement: remove(Ljava/lang/Object;)D
   * 5 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.remove(Ljava/lang/Object;)D: root-Branch
   * 6 Weak Mutation 25: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.remove(Ljava/lang/Object;)D:90 - DeleteField: mutexLjava/lang/Object;
   * 7 Weak Mutation 27: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.remove(Ljava/lang/Object;)D:90 - ReplaceVariable key -> mutex
   * 8 Weak Mutation 26: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.remove(Ljava/lang/Object;)D:90 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 9 Weak Mutation 28: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.remove(Ljava/lang/Object;)D:90 - DeleteStatement: remove(Ljava/lang/Object;)D
   */

  @Test
  public void test5()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      TObjectDoubleHashMap<Object> tObjectDoubleHashMap0 = new TObjectDoubleHashMap<Object>((TObjectDoubleMap<?>) tObjectDoubleCustomHashMap0);
      TSynchronizedObjectDoubleMap<Object> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Object>((TObjectDoubleMap<Object>) tObjectDoubleHashMap0);
      Double double0 = new Double(1007.3800945897316);
      double double1 = tSynchronizedObjectDoubleMap0.remove((Object) double0);
      assertNotSame(double0, double1);
  }

  //Test case number: 6
  /*
   * 7 covered goals:
   * 1 Weak Mutation 29: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putAll(Ljava/util/Map;)V:93 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 31: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putAll(Ljava/util/Map;)V:93 - DeleteStatement: putAll(Ljava/util/Map;)V
   * 3 Weak Mutation 30: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putAll(Ljava/util/Map;)V:93 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 4 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putAll(Ljava/util/Map;)V: root-Branch
   * 5 Weak Mutation 29: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putAll(Ljava/util/Map;)V:93 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 31: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putAll(Ljava/util/Map;)V:93 - DeleteStatement: putAll(Ljava/util/Map;)V
   * 7 Weak Mutation 30: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putAll(Ljava/util/Map;)V:93 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   */

  @Test
  public void test6()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleHashMap<Integer> tObjectDoubleHashMap0 = new TObjectDoubleHashMap<Integer>(0);
      TObjectDoubleCustomHashMap<Object> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectDoubleMap<?>) tObjectDoubleHashMap0);
      TSynchronizedObjectDoubleMap<Object> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Object>((TObjectDoubleMap<Object>) tObjectDoubleCustomHashMap0);
      HashMap<Object, Double> hashMap0 = new HashMap<Object, Double>();
      tSynchronizedObjectDoubleMap0.putAll((Map<?, ? extends Double>) hashMap0);
      assertEquals("{}", tSynchronizedObjectDoubleMap0.toString());
  }

  //Test case number: 7
  /*
   * 7 covered goals:
   * 1 Weak Mutation 34: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putAll(Lgnu/trove/map/TObjectDoubleMap;)V:96 - DeleteStatement: putAll(Lgnu/trove/map/TObjectDoubleMap;)V
   * 2 Weak Mutation 32: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putAll(Lgnu/trove/map/TObjectDoubleMap;)V:96 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 33: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putAll(Lgnu/trove/map/TObjectDoubleMap;)V:96 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 4 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putAll(Lgnu/trove/map/TObjectDoubleMap;)V: root-Branch
   * 5 Weak Mutation 34: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putAll(Lgnu/trove/map/TObjectDoubleMap;)V:96 - DeleteStatement: putAll(Lgnu/trove/map/TObjectDoubleMap;)V
   * 6 Weak Mutation 32: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putAll(Lgnu/trove/map/TObjectDoubleMap;)V:96 - DeleteField: mutexLjava/lang/Object;
   * 7 Weak Mutation 33: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putAll(Lgnu/trove/map/TObjectDoubleMap;)V:96 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   */

  @Test
  public void test7()  throws Throwable  {
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>();
      TSynchronizedObjectDoubleMap<Double> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Double>((TObjectDoubleMap<Double>) tObjectDoubleCustomHashMap0);
      tSynchronizedObjectDoubleMap0.putAll((TObjectDoubleMap<? extends Double>) tSynchronizedObjectDoubleMap0);
      assertEquals("{}", tSynchronizedObjectDoubleMap0.toString());
  }

  //Test case number: 8
  /*
   * 7 covered goals:
   * 1 Weak Mutation 35: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.clear()V:99 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 36: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.clear()V:99 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 3 Weak Mutation 37: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.clear()V:99 - DeleteStatement: clear()V
   * 4 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.clear()V: root-Branch
   * 5 Weak Mutation 35: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.clear()V:99 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 36: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.clear()V:99 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 7 Weak Mutation 37: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.clear()V:99 - DeleteStatement: clear()V
   */

  @Test
  public void test8()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      TSynchronizedObjectDoubleMap<Integer> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Integer>((TObjectDoubleMap<Integer>) tObjectDoubleCustomHashMap0);
      tSynchronizedObjectDoubleMap0.clear();
      assertEquals("{}", tSynchronizedObjectDoubleMap0.toString());
  }

  //Test case number: 9
  /*
   * 16 covered goals:
   * 1 Weak Mutation 39: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keySet()Ljava/util/Set;:107 - DeleteField: keySetLjava/util/Set;
   * 2 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keySet()Ljava/util/Set;: I11 Branch 2 IFNONNULL L107 - true
   * 3 Weak Mutation 38: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keySet()Ljava/util/Set;:106 - DeleteField: mutexLjava/lang/Object;
   * 4 Weak Mutation 42: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keySet()Ljava/util/Set;:108 - DeleteStatement: keySet()Ljava/util/Set;
   * 5 Weak Mutation 43: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keySet()Ljava/util/Set;:108 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 40: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keySet()Ljava/util/Set;:107 - ReplaceComparisonOperator != null -> = null
   * 7 Weak Mutation 41: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keySet()Ljava/util/Set;:108 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 8 Weak Mutation 44: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keySet()Ljava/util/Set;:110 - DeleteField: keySetLjava/util/Set;
   * 9 Weak Mutation 38: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keySet()Ljava/util/Set;:106 - DeleteField: mutexLjava/lang/Object;
   * 10 Weak Mutation 39: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keySet()Ljava/util/Set;:107 - DeleteField: keySetLjava/util/Set;
   * 11 Weak Mutation 42: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keySet()Ljava/util/Set;:108 - DeleteStatement: keySet()Ljava/util/Set;
   * 12 Weak Mutation 43: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keySet()Ljava/util/Set;:108 - DeleteField: mutexLjava/lang/Object;
   * 13 Weak Mutation 40: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keySet()Ljava/util/Set;:107 - ReplaceComparisonOperator != null -> = null
   * 14 Weak Mutation 41: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keySet()Ljava/util/Set;:108 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 15 Weak Mutation 44: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keySet()Ljava/util/Set;:110 - DeleteField: keySetLjava/util/Set;
   * 16 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keySet()Ljava/util/Set;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test9()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0);
      TSynchronizedObjectDoubleMap<Double> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Double>((TObjectDoubleMap<Double>) tObjectDoubleCustomHashMap0);
      Set<Double> set0 = tSynchronizedObjectDoubleMap0.keySet();
      assertNotNull(set0);
      
      Set<Double> set1 = tSynchronizedObjectDoubleMap0.keySet();
      assertSame(set1, set0);
  }

  //Test case number: 10
  /*
   * 7 covered goals:
   * 1 Weak Mutation 46: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keys()[Ljava/lang/Object;:114 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 2 Weak Mutation 47: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keys()[Ljava/lang/Object;:114 - DeleteStatement: keys()[Ljava/lang/Object;
   * 3 Weak Mutation 45: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keys()[Ljava/lang/Object;:114 - DeleteField: mutexLjava/lang/Object;
   * 4 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keys()[Ljava/lang/Object;: root-Branch
   * 5 Weak Mutation 46: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keys()[Ljava/lang/Object;:114 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 6 Weak Mutation 47: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keys()[Ljava/lang/Object;:114 - DeleteStatement: keys()[Ljava/lang/Object;
   * 7 Weak Mutation 45: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keys()[Ljava/lang/Object;:114 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test10()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0);
      TSynchronizedObjectDoubleMap<Double> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Double>((TObjectDoubleMap<Double>) tObjectDoubleCustomHashMap0);
      Object[] objectArray0 = tSynchronizedObjectDoubleMap0.keys();
      assertNotNull(objectArray0);
  }

  //Test case number: 11
  /*
   * 7 covered goals:
   * 1 Weak Mutation 50: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:117 - DeleteStatement: keys([Ljava/lang/Object;)[Ljava/lang/Object;
   * 2 Weak Mutation 49: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:117 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 3 Weak Mutation 48: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:117 - DeleteField: mutexLjava/lang/Object;
   * 4 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: root-Branch
   * 5 Weak Mutation 50: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:117 - DeleteStatement: keys([Ljava/lang/Object;)[Ljava/lang/Object;
   * 6 Weak Mutation 49: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:117 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 7 Weak Mutation 48: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:117 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test11()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      TObjectDoubleHashMap<Object> tObjectDoubleHashMap0 = new TObjectDoubleHashMap<Object>((TObjectDoubleMap<?>) tObjectDoubleCustomHashMap0);
      TSynchronizedObjectDoubleMap<Object> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Object>((TObjectDoubleMap<Object>) tObjectDoubleHashMap0);
      TObjectDoubleCustomHashMap<Object> tObjectDoubleCustomHashMap1 = new TObjectDoubleCustomHashMap<Object>();
      Object[] objectArray0 = tSynchronizedObjectDoubleMap0.keys(tObjectDoubleCustomHashMap1._set);
      assertNotNull(objectArray0);
  }

  //Test case number: 12
  /*
   * 16 covered goals:
   * 1 Weak Mutation 52: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;:122 - DeleteField: valuesLgnu/trove/TDoubleCollection;
   * 2 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;: I11 Branch 3 IFNONNULL L122 - true
   * 3 Weak Mutation 51: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;:121 - DeleteField: mutexLjava/lang/Object;
   * 4 Weak Mutation 55: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;:123 - DeleteStatement: valueCollection()Lgnu/trove/TDoubleCollection;
   * 5 Weak Mutation 54: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;:123 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 6 Weak Mutation 53: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;:122 - ReplaceComparisonOperator != null -> = null
   * 7 Weak Mutation 57: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;:124 - DeleteField: valuesLgnu/trove/TDoubleCollection;
   * 8 Weak Mutation 56: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;:123 - DeleteField: mutexLjava/lang/Object;
   * 9 Weak Mutation 51: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;:121 - DeleteField: mutexLjava/lang/Object;
   * 10 Weak Mutation 55: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;:123 - DeleteStatement: valueCollection()Lgnu/trove/TDoubleCollection;
   * 11 Weak Mutation 54: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;:123 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 12 Weak Mutation 53: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;:122 - ReplaceComparisonOperator != null -> = null
   * 13 Weak Mutation 52: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;:122 - DeleteField: valuesLgnu/trove/TDoubleCollection;
   * 14 Weak Mutation 57: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;:124 - DeleteField: valuesLgnu/trove/TDoubleCollection;
   * 15 Weak Mutation 56: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;:123 - DeleteField: mutexLjava/lang/Object;
   * 16 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;: I11 Branch 3 IFNONNULL L122 - false
   */

  @Test
  public void test12()  throws Throwable  {
      TObjectDoubleHashMap<Object> tObjectDoubleHashMap0 = new TObjectDoubleHashMap<Object>();
      TSynchronizedObjectDoubleMap<Object> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Object>((TObjectDoubleMap<Object>) tObjectDoubleHashMap0);
      TSynchronizedDoubleCollection tSynchronizedDoubleCollection0 = (TSynchronizedDoubleCollection)tSynchronizedObjectDoubleMap0.valueCollection();
      assertNotNull(tSynchronizedDoubleCollection0);
      
      TSynchronizedDoubleCollection tSynchronizedDoubleCollection1 = (TSynchronizedDoubleCollection)tSynchronizedObjectDoubleMap0.valueCollection();
      assertSame(tSynchronizedDoubleCollection1, tSynchronizedDoubleCollection0);
  }

  //Test case number: 13
  /*
   * 7 covered goals:
   * 1 Weak Mutation 59: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.values()[D:128 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 2 Weak Mutation 58: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.values()[D:128 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 60: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.values()[D:128 - DeleteStatement: values()[D
   * 4 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.values()[D: root-Branch
   * 5 Weak Mutation 59: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.values()[D:128 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 6 Weak Mutation 58: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.values()[D:128 - DeleteField: mutexLjava/lang/Object;
   * 7 Weak Mutation 60: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.values()[D:128 - DeleteStatement: values()[D
   */

  @Test
  public void test13()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Object> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      TSynchronizedObjectDoubleMap<Object> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Object>((TObjectDoubleMap<Object>) tObjectDoubleCustomHashMap0);
      double[] doubleArray0 = tSynchronizedObjectDoubleMap0.values();
      assertNotNull(doubleArray0);
  }

  //Test case number: 14
  /*
   * 7 covered goals:
   * 1 Weak Mutation 63: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.values([D)[D:131 - DeleteStatement: values([D)[D
   * 2 Weak Mutation 62: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.values([D)[D:131 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 3 Weak Mutation 61: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.values([D)[D:131 - DeleteField: mutexLjava/lang/Object;
   * 4 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.values([D)[D: root-Branch
   * 5 Weak Mutation 63: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.values([D)[D:131 - DeleteStatement: values([D)[D
   * 6 Weak Mutation 62: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.values([D)[D:131 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 7 Weak Mutation 61: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.values([D)[D:131 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test14()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Object> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      TSynchronizedObjectDoubleMap<Object> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Object>((TObjectDoubleMap<Object>) tObjectDoubleCustomHashMap0);
      double[] doubleArray0 = new double[1];
      double[] doubleArray1 = tSynchronizedObjectDoubleMap0.values(doubleArray0);
      assertSame(doubleArray0, doubleArray1);
  }

  //Test case number: 15
  /*
   * 13 covered goals:
   * 1 Weak Mutation 64: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.iterator()Lgnu/trove/iterator/TObjectDoubleIterator;:135 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 2 Weak Mutation 65: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.iterator()Lgnu/trove/iterator/TObjectDoubleIterator;:135 - DeleteStatement: iterator()Lgnu/trove/iterator/TObjectDoubleIterator;
   * 3 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.iterator()Lgnu/trove/iterator/TObjectDoubleIterator;: root-Branch
   * 4 Weak Mutation 2: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.size()I:71 - DeleteField: mutexLjava/lang/Object;
   * 5 Weak Mutation 3: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.size()I:71 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 6 Weak Mutation 4: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.size()I:71 - DeleteStatement: size()I
   * 7 Weak Mutation 66: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.getNoEntryValue()D:139 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 8 Weak Mutation 67: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.getNoEntryValue()D:139 - DeleteStatement: getNoEntryValue()D
   * 9 Weak Mutation 79: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:151 - DeleteField: mutexLjava/lang/Object;
   * 10 Weak Mutation 81: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:151 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z
   * 11 Weak Mutation 80: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:151 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 12 Weak Mutation 64: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.iterator()Lgnu/trove/iterator/TObjectDoubleIterator;:135 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 13 Weak Mutation 65: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.iterator()Lgnu/trove/iterator/TObjectDoubleIterator;:135 - DeleteStatement: iterator()Lgnu/trove/iterator/TObjectDoubleIterator;
   */

  @Test
  public void test15()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      TSynchronizedObjectDoubleMap<Integer> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Integer>((TObjectDoubleMap<Integer>) tObjectDoubleCustomHashMap0);
      TObjectDoubleHashMap<Object> tObjectDoubleHashMap0 = new TObjectDoubleHashMap<Object>((TObjectDoubleMap<?>) tSynchronizedObjectDoubleMap0);
      TSynchronizedObjectDoubleMap<Object> tSynchronizedObjectDoubleMap1 = new TSynchronizedObjectDoubleMap<Object>((TObjectDoubleMap<Object>) tObjectDoubleHashMap0);
      TObjectDoubleIterator<Object> tObjectDoubleIterator0 = tSynchronizedObjectDoubleMap1.iterator();
      assertEquals(false, tObjectDoubleIterator0.hasNext());
  }

  //Test case number: 16
  /*
   * 11 covered goals:
   * 1 Weak Mutation 68: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putIfAbsent(Ljava/lang/Object;D)D:142 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 69: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putIfAbsent(Ljava/lang/Object;D)D:142 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 3 Weak Mutation 70: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putIfAbsent(Ljava/lang/Object;D)D:142 - ReplaceVariable key -> mutex
   * 4 Weak Mutation 71: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putIfAbsent(Ljava/lang/Object;D)D:142 - InsertUnaryOp Negation of value
   * 5 Weak Mutation 72: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putIfAbsent(Ljava/lang/Object;D)D:142 - DeleteStatement: putIfAbsent(Ljava/lang/Object;D)D
   * 6 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putIfAbsent(Ljava/lang/Object;D)D: root-Branch
   * 7 Weak Mutation 68: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putIfAbsent(Ljava/lang/Object;D)D:142 - DeleteField: mutexLjava/lang/Object;
   * 8 Weak Mutation 69: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putIfAbsent(Ljava/lang/Object;D)D:142 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 9 Weak Mutation 70: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putIfAbsent(Ljava/lang/Object;D)D:142 - ReplaceVariable key -> mutex
   * 10 Weak Mutation 71: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putIfAbsent(Ljava/lang/Object;D)D:142 - InsertUnaryOp Negation of value
   * 11 Weak Mutation 72: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.putIfAbsent(Ljava/lang/Object;D)D:142 - DeleteStatement: putIfAbsent(Ljava/lang/Object;D)D
   */

  @Test
  public void test16()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      Double double0 = new Double(0.0);
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0);
      TSynchronizedObjectDoubleMap<Double> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Double>((TObjectDoubleMap<Double>) tObjectDoubleCustomHashMap0);
      tSynchronizedObjectDoubleMap0.putIfAbsent(double0, (double) double0);
      assertEquals(false, tObjectDoubleCustomHashMap0.isEmpty());
      assertEquals(1, tObjectDoubleCustomHashMap0.size());
  }

  //Test case number: 17
  /*
   * 7 covered goals:
   * 1 Weak Mutation 73: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z:145 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 74: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z:145 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 3 Weak Mutation 75: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z:145 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z
   * 4 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   * 5 Weak Mutation 73: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z:145 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 74: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z:145 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 7 Weak Mutation 75: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z:145 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z
   */

  @Test
  public void test17()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Object> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (-1878));
      TSynchronizedObjectDoubleMap<Object> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Object>((TObjectDoubleMap<Object>) tObjectDoubleCustomHashMap0);
      boolean boolean0 = tSynchronizedObjectDoubleMap0.forEachKey((TObjectProcedure<? super Object>) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 18
  /*
   * 7 covered goals:
   * 1 Weak Mutation 76: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:148 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 77: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:148 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 3 Weak Mutation 78: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:148 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z
   * 4 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: root-Branch
   * 5 Weak Mutation 76: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:148 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 77: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:148 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 7 Weak Mutation 78: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z:148 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z
   */

  @Test
  public void test18()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, (-1172));
      TSynchronizedObjectDoubleMap<Double> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Double>((TObjectDoubleMap<Double>) tObjectDoubleCustomHashMap0);
      boolean boolean0 = tSynchronizedObjectDoubleMap0.forEachValue((TDoubleProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 19
  /*
   * 7 covered goals:
   * 1 Weak Mutation 84: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:154 - DeleteStatement: transformValues(Lgnu/trove/function/TDoubleFunction;)V
   * 2 Weak Mutation 83: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:154 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 3 Weak Mutation 82: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:154 - DeleteField: mutexLjava/lang/Object;
   * 4 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V: root-Branch
   * 5 Weak Mutation 84: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:154 - DeleteStatement: transformValues(Lgnu/trove/function/TDoubleFunction;)V
   * 6 Weak Mutation 83: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:154 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 7 Weak Mutation 82: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V:154 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test19()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0);
      TSynchronizedObjectDoubleMap<Double> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Double>((TObjectDoubleMap<Double>) tObjectDoubleCustomHashMap0);
      // Undeclared exception!
      try {
        tSynchronizedObjectDoubleMap0.transformValues((TDoubleFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 20
  /*
   * 7 covered goals:
   * 1 Weak Mutation 85: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:157 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 87: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:157 - DeleteStatement: retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z
   * 3 Weak Mutation 86: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:157 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 4 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: root-Branch
   * 5 Weak Mutation 85: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:157 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 87: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:157 - DeleteStatement: retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z
   * 7 Weak Mutation 86: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z:157 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   */

  @Test
  public void test20()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Object> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      TSynchronizedObjectDoubleMap<Object> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Object>((TObjectDoubleMap<Object>) tObjectDoubleCustomHashMap0);
      boolean boolean0 = tSynchronizedObjectDoubleMap0.retainEntries((TObjectDoubleProcedure<? super Object>) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 21
  /*
   * 9 covered goals:
   * 1 Weak Mutation 89: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.increment(Ljava/lang/Object;)Z:160 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 2 Weak Mutation 88: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.increment(Ljava/lang/Object;)Z:160 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 91: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.increment(Ljava/lang/Object;)Z:160 - DeleteStatement: increment(Ljava/lang/Object;)Z
   * 4 Weak Mutation 90: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.increment(Ljava/lang/Object;)Z:160 - ReplaceVariable key -> mutex
   * 5 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.increment(Ljava/lang/Object;)Z: root-Branch
   * 6 Weak Mutation 89: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.increment(Ljava/lang/Object;)Z:160 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 7 Weak Mutation 88: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.increment(Ljava/lang/Object;)Z:160 - DeleteField: mutexLjava/lang/Object;
   * 8 Weak Mutation 91: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.increment(Ljava/lang/Object;)Z:160 - DeleteStatement: increment(Ljava/lang/Object;)Z
   * 9 Weak Mutation 90: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.increment(Ljava/lang/Object;)Z:160 - ReplaceVariable key -> mutex
   */

  @Test
  public void test21()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, 0, (float) 0, (double) 0);
      TSynchronizedObjectDoubleMap<Double> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Double>((TObjectDoubleMap<Double>) tObjectDoubleCustomHashMap0);
      Double double0 = new Double((double) 0);
      boolean boolean0 = tSynchronizedObjectDoubleMap0.increment(double0);
      assertEquals(false, boolean0);
  }

  //Test case number: 22
  /*
   * 11 covered goals:
   * 1 Weak Mutation 93: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustValue(Ljava/lang/Object;D)Z:163 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 2 Weak Mutation 92: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustValue(Ljava/lang/Object;D)Z:163 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 95: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustValue(Ljava/lang/Object;D)Z:163 - InsertUnaryOp Negation of amount
   * 4 Weak Mutation 94: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustValue(Ljava/lang/Object;D)Z:163 - ReplaceVariable key -> mutex
   * 5 Weak Mutation 96: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustValue(Ljava/lang/Object;D)Z:163 - DeleteStatement: adjustValue(Ljava/lang/Object;D)Z
   * 6 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustValue(Ljava/lang/Object;D)Z: root-Branch
   * 7 Weak Mutation 93: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustValue(Ljava/lang/Object;D)Z:163 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 8 Weak Mutation 92: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustValue(Ljava/lang/Object;D)Z:163 - DeleteField: mutexLjava/lang/Object;
   * 9 Weak Mutation 95: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustValue(Ljava/lang/Object;D)Z:163 - InsertUnaryOp Negation of amount
   * 10 Weak Mutation 94: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustValue(Ljava/lang/Object;D)Z:163 - ReplaceVariable key -> mutex
   * 11 Weak Mutation 96: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustValue(Ljava/lang/Object;D)Z:163 - DeleteStatement: adjustValue(Ljava/lang/Object;D)Z
   */

  @Test
  public void test22()  throws Throwable  {
      TObjectDoubleHashMap<Object> tObjectDoubleHashMap0 = new TObjectDoubleHashMap<Object>();
      TSynchronizedObjectDoubleMap<Object> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Object>((TObjectDoubleMap<Object>) tObjectDoubleHashMap0);
      boolean boolean0 = tSynchronizedObjectDoubleMap0.adjustValue((Object) tObjectDoubleHashMap0, (-4.079246355540956));
      assertEquals(false, boolean0);
  }

  //Test case number: 23
  /*
   * 18 covered goals:
   * 1 Weak Mutation 102: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustOrPutValue(Ljava/lang/Object;DD)D:166 - ReplaceVariable put_amount -> adjust_amount
   * 2 Weak Mutation 103: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustOrPutValue(Ljava/lang/Object;DD)D:166 - InsertUnaryOp Negation of put_amount
   * 3 Weak Mutation 100: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustOrPutValue(Ljava/lang/Object;DD)D:166 - ReplaceVariable adjust_amount -> put_amount
   * 4 Weak Mutation 101: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustOrPutValue(Ljava/lang/Object;DD)D:166 - InsertUnaryOp Negation of adjust_amount
   * 5 Weak Mutation 98: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustOrPutValue(Ljava/lang/Object;DD)D:166 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 6 Weak Mutation 99: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustOrPutValue(Ljava/lang/Object;DD)D:166 - ReplaceVariable key -> mutex
   * 7 Weak Mutation 97: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustOrPutValue(Ljava/lang/Object;DD)D:166 - DeleteField: mutexLjava/lang/Object;
   * 8 Weak Mutation 104: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustOrPutValue(Ljava/lang/Object;DD)D:166 - DeleteStatement: adjustOrPutValue(Ljava/lang/Object;DD)D
   * 9 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustOrPutValue(Ljava/lang/Object;DD)D: root-Branch
   * 10 Weak Mutation 1: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.<init>(Lgnu/trove/map/TObjectDoubleMap;Ljava/lang/Object;)V:67 - ReplaceVariable mutex -> mutex
   * 11 Weak Mutation 102: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustOrPutValue(Ljava/lang/Object;DD)D:166 - ReplaceVariable put_amount -> adjust_amount
   * 12 Weak Mutation 103: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustOrPutValue(Ljava/lang/Object;DD)D:166 - InsertUnaryOp Negation of put_amount
   * 13 Weak Mutation 100: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustOrPutValue(Ljava/lang/Object;DD)D:166 - ReplaceVariable adjust_amount -> put_amount
   * 14 Weak Mutation 101: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustOrPutValue(Ljava/lang/Object;DD)D:166 - InsertUnaryOp Negation of adjust_amount
   * 15 Weak Mutation 98: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustOrPutValue(Ljava/lang/Object;DD)D:166 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 16 Weak Mutation 99: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustOrPutValue(Ljava/lang/Object;DD)D:166 - ReplaceVariable key -> mutex
   * 17 Weak Mutation 97: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustOrPutValue(Ljava/lang/Object;DD)D:166 - DeleteField: mutexLjava/lang/Object;
   * 18 Weak Mutation 104: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.adjustOrPutValue(Ljava/lang/Object;DD)D:166 - DeleteStatement: adjustOrPutValue(Ljava/lang/Object;DD)D
   */

  @Test
  public void test23()  throws Throwable  {
      TObjectDoubleHashMap<Double> tObjectDoubleHashMap0 = new TObjectDoubleHashMap<Double>((-561), (-561));
      TSynchronizedObjectDoubleMap<Double> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Double>((TObjectDoubleMap<Double>) tObjectDoubleHashMap0, (Object) "zh");
      Double double0 = new Double((double) (-561.0F));
      double double1 = tSynchronizedObjectDoubleMap0.adjustOrPutValue(double0, (double) (-561), (-427.1315483623146));
      assertEquals(false, tObjectDoubleHashMap0.isEmpty());
      assertEquals((-427.1315483623146), double1, 0.01D);
  }

  //Test case number: 24
  /*
   * 9 covered goals:
   * 1 Weak Mutation 108: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.equals(Ljava/lang/Object;)Z:170 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 2 Weak Mutation 106: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.equals(Ljava/lang/Object;)Z:170 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 3 Weak Mutation 107: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.equals(Ljava/lang/Object;)Z:170 - ReplaceVariable o -> mutex
   * 4 Weak Mutation 105: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.equals(Ljava/lang/Object;)Z:170 - DeleteField: mutexLjava/lang/Object;
   * 5 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.equals(Ljava/lang/Object;)Z: root-Branch
   * 6 Weak Mutation 108: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.equals(Ljava/lang/Object;)Z:170 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 7 Weak Mutation 106: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.equals(Ljava/lang/Object;)Z:170 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 8 Weak Mutation 107: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.equals(Ljava/lang/Object;)Z:170 - ReplaceVariable o -> mutex
   * 9 Weak Mutation 105: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.equals(Ljava/lang/Object;)Z:170 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test24()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      TObjectDoubleHashMap<Object> tObjectDoubleHashMap0 = new TObjectDoubleHashMap<Object>((TObjectDoubleMap<?>) tObjectDoubleCustomHashMap0);
      TObjectDoubleCustomHashMap<String> tObjectDoubleCustomHashMap1 = new TObjectDoubleCustomHashMap<String>();
      TSynchronizedObjectDoubleMap<String> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<String>((TObjectDoubleMap<String>) tObjectDoubleCustomHashMap1);
      boolean boolean0 = tSynchronizedObjectDoubleMap0.equals((Object) tObjectDoubleHashMap0);
      assertEquals(true, boolean0);
  }

  //Test case number: 25
  /*
   * 7 covered goals:
   * 1 Weak Mutation 110: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.hashCode()I:173 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 2 Weak Mutation 111: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.hashCode()I:173 - DeleteStatement: hashCode()I
   * 3 Weak Mutation 109: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.hashCode()I:173 - DeleteField: mutexLjava/lang/Object;
   * 4 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.hashCode()I: root-Branch
   * 5 Weak Mutation 110: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.hashCode()I:173 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 6 Weak Mutation 111: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.hashCode()I:173 - DeleteStatement: hashCode()I
   * 7 Weak Mutation 109: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.hashCode()I:173 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test25()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Object> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      TSynchronizedObjectDoubleMap<Object> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Object>((TObjectDoubleMap<Object>) tObjectDoubleCustomHashMap0);
      int int0 = tSynchronizedObjectDoubleMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 26
  /*
   * 7 covered goals:
   * 1 Weak Mutation 114: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.toString()Ljava/lang/String;:176 - DeleteStatement: toString()Ljava/lang/String;
   * 2 Weak Mutation 113: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.toString()Ljava/lang/String;:176 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 3 Weak Mutation 112: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.toString()Ljava/lang/String;:176 - DeleteField: mutexLjava/lang/Object;
   * 4 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.toString()Ljava/lang/String;: root-Branch
   * 5 Weak Mutation 114: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.toString()Ljava/lang/String;:176 - DeleteStatement: toString()Ljava/lang/String;
   * 6 Weak Mutation 113: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.toString()Ljava/lang/String;:176 - DeleteField: mLgnu/trove/map/TObjectDoubleMap;
   * 7 Weak Mutation 112: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.toString()Ljava/lang/String;:176 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test26()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0);
      TSynchronizedObjectDoubleMap<Double> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Double>((TObjectDoubleMap<Double>) tObjectDoubleCustomHashMap0);
      String string0 = tSynchronizedObjectDoubleMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 27
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.<init>(Lgnu/trove/map/TObjectDoubleMap;)V: I17 Branch 1 IFNONNULL L59 - false
   * 2 Weak Mutation 0: gnu.trove.impl.sync.TSynchronizedObjectDoubleMap.<init>(Lgnu/trove/map/TObjectDoubleMap;)V:59 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test27()  throws Throwable  {
      TSynchronizedObjectDoubleMap<Integer> tSynchronizedObjectDoubleMap0 = null;
      try {
        tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Integer>((TObjectDoubleMap<Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TFloatFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatSet;
import gnu.trove.map.TFloatFloatMap;
import gnu.trove.map.hash.TFloatFloatHashMap;
import gnu.trove.procedure.TFloatFloatProcedure;
import gnu.trove.procedure.TFloatProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableFloatFloatMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap$1.hasNext()Z: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableFloatFloatMap;)V: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap$1.key()F: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap$1.value()F: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap$1.advance()V: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.iterator()Lgnu/trove/iterator/TFloatFloatIterator;: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.size()I: root-Branch
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.<init>(Lgnu/trove/map/TFloatFloatMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      float[] floatArray0 = new float[5];
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap(floatArray0, floatArray0);
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      TFloatFloatHashMap tFloatFloatHashMap1 = new TFloatFloatHashMap((TFloatFloatMap) tUnmodifiableFloatFloatMap0);
      assertEquals(1, tUnmodifiableFloatFloatMap0.size());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.values()[F: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap(1290, 1290, 1290, 1290);
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      float[] floatArray0 = tUnmodifiableFloatFloatMap0.values();
      assertNotNull(floatArray0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.getNoEntryValue()F: root-Branch
   */

//   @Test
//   public void test2()  throws Throwable  {
//       TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap((-241));
//       TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
//       float float0 = tUnmodifiableFloatFloatMap0.getNoEntryValue();
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap((-241));
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      boolean boolean0 = tUnmodifiableFloatFloatMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap(168, 168);
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      HashMap<Float, Float> hashMap0 = new HashMap<Float, Float>();
      // Undeclared exception!
      try {
        tUnmodifiableFloatFloatMap0.putAll((Map<? extends Float, ? extends Float>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.adjustValue(FF)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap();
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatFloatMap0.adjustValue(1195.269F, 1195.269F);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.put(FF)F: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap((-519), (-519), (-519), (-519));
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatFloatMap0.put((float) (-519), (float) (-519));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.increment(F)Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap();
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatFloatMap0.increment(0.0F);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.get(F)F: root-Branch
   */

//   @Test
//   public void test8()  throws Throwable  {
//       TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap(352);
//       TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
//       float float0 = tUnmodifiableFloatFloatMap0.get((float) 352);
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.containsValue(F)Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap(1302, 1302, 1302, 1302);
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      boolean boolean0 = tUnmodifiableFloatFloatMap0.containsValue((float) 1302);
      assertEquals(false, boolean0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.transformValues(Lgnu/trove/function/TFloatFunction;)V: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap(0, 0);
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatFloatMap0.transformValues((TFloatFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.hashCode()I: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap(352);
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      int int0 = tUnmodifiableFloatFloatMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.forEachEntry(Lgnu/trove/procedure/TFloatFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap(1302, 1302, 1302, 1302);
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      boolean boolean0 = tUnmodifiableFloatFloatMap0.forEachEntry((TFloatFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.containsKey(F)Z: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap(1302, 1302, 1302, 1302);
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      boolean boolean0 = tUnmodifiableFloatFloatMap0.containsKey((float) 1302);
      assertEquals(false, boolean0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.putIfAbsent(FF)F: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap(1290, 1290, 1290, 1290);
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatFloatMap0.putIfAbsent((float) 1290, (float) 1290);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.clear()V: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap(352);
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatFloatMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      float[] floatArray0 = new float[2];
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap(floatArray0, floatArray0);
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatFloatMap0.forEachValue((TFloatProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.keys([F)[F: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap(1302, 1302, 1302, 1302);
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      float[] floatArray0 = tUnmodifiableFloatFloatMap0.keys(tFloatFloatHashMap0._set);
      assertNotNull(floatArray0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.adjustOrPutValue(FFF)F: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap((-241));
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatFloatMap0.adjustOrPutValue(0.0F, (float) 0, 0.0F);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.getNoEntryKey()F: root-Branch
   */

//   @Test
//   public void test19()  throws Throwable  {
//       TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap();
//       TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
//       float float0 = tUnmodifiableFloatFloatMap0.getNoEntryKey();
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.keys()[F: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap();
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      float[] floatArray0 = tUnmodifiableFloatFloatMap0.keys();
      assertNotNull(floatArray0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.values([F)[F: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap();
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      float[] floatArray0 = tUnmodifiableFloatFloatMap0.values(tFloatFloatHashMap0._set);
      assertNotNull(floatArray0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap((-241));
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      String string0 = tUnmodifiableFloatFloatMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.putAll(Lgnu/trove/map/TFloatFloatMap;)V: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap((-1836), (-1836));
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatFloatMap0.putAll((TFloatFloatMap) tFloatFloatHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.retainEntries(Lgnu/trove/procedure/TFloatFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap(1302, 1302, 1302, 1302);
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatFloatMap0.retainEntries((TFloatFloatProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.remove(F)F: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap((-1528), (-1528), (-1528), (-1528));
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatFloatMap0.remove((float) (-1528));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap((-241));
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      boolean boolean0 = tUnmodifiableFloatFloatMap0.forEachKey((TFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.<init>(Lgnu/trove/map/TFloatFloatMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = null;
      try {
        tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.keySet()Lgnu/trove/set/TFloatSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.keySet()Lgnu/trove/set/TFloatSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap();
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      TUnmodifiableFloatSet tUnmodifiableFloatSet0 = (TUnmodifiableFloatSet)tUnmodifiableFloatFloatMap0.keySet();
      assertNotNull(tUnmodifiableFloatSet0);
      
      TUnmodifiableFloatSet tUnmodifiableFloatSet1 = (TUnmodifiableFloatSet)tUnmodifiableFloatFloatMap0.keySet();
      assertSame(tUnmodifiableFloatSet1, tUnmodifiableFloatSet0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap(0, 0);
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = (TUnmodifiableFloatCollection)tUnmodifiableFloatFloatMap0.valueCollection();
      assertNotNull(tUnmodifiableFloatCollection0);
      
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection1 = (TUnmodifiableFloatCollection)tUnmodifiableFloatFloatMap0.valueCollection();
      assertSame(tUnmodifiableFloatCollection1, tUnmodifiableFloatCollection0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap.<init>(Lgnu/trove/map/TFloatFloatMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap();
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = new TUnmodifiableFloatFloatMap((TFloatFloatMap) tFloatFloatHashMap0);
      boolean boolean0 = tUnmodifiableFloatFloatMap0.equals((Object) "France");
      assertEquals(false, boolean0);
  }
}

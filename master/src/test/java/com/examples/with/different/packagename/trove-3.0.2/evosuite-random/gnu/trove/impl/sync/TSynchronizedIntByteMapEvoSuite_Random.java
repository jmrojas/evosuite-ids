/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedIntByteMap;
import gnu.trove.map.TIntByteMap;
import gnu.trove.map.hash.TIntByteHashMap;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.Locale;
import java.util.NoSuchElementException;
import java.util.StringTokenizer;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedIntByteMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = 1728;
      int int1 = (-385);
      int int2 = (-838);
      byte byte0 = (byte)124;
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap(int1, (float) int0, int2, byte0);
      TSynchronizedIntByteMap tSynchronizedIntByteMap0 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap0);
      byte[] byteArray0 = new byte[8];
      byte byte1 = (byte) (-57);
      byteArray0[0] = byte1;
      byteArray0[1] = byte0;
      byteArray0[2] = byte0;
      byte byte2 = (byte) (-67);
      byteArray0[3] = byte2;
      byteArray0[4] = byte0;
      byteArray0[5] = byte0;
      byteArray0[6] = byte0;
      byteArray0[7] = byte0;
      byte[] byteArray1 = tIntByteHashMap0.values(byteArray0);
      tSynchronizedIntByteMap0.toString();
      TIntByteHashMap tIntByteHashMap1 = new TIntByteHashMap(int0);
      tIntByteHashMap0.compact();
      TIntByteHashMap tIntByteHashMap2 = new TIntByteHashMap((TIntByteMap) tIntByteHashMap1);
      TSynchronizedIntByteMap tSynchronizedIntByteMap1 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap2);
      byte[] byteArray2 = tSynchronizedIntByteMap1.values();
      assertNotSame(byteArray2, byteArray1);
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = 1545;
      int int1 = 452759;
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap(int1);
      Locale locale0 = Locale.GERMAN;
      String string0 = locale0.toString();
      TSynchronizedIntByteMap tSynchronizedIntByteMap0 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap0, (Object) string0);
      Locale locale1 = Locale.CHINESE;
      String string1 = locale0.getDisplayVariant(locale1);
      TSynchronizedIntByteMap tSynchronizedIntByteMap1 = new TSynchronizedIntByteMap((TIntByteMap) tSynchronizedIntByteMap0, (Object) string1);
      tSynchronizedIntByteMap0.values();
      tSynchronizedIntByteMap1.size();
      byte[] byteArray0 = new byte[6];
      tSynchronizedIntByteMap1.valueCollection();
      byte byte0 = (byte) (-94);
      byteArray0[0] = byte0;
      byte byte1 = (byte)88;
      tSynchronizedIntByteMap0.keySet();
      byteArray0[1] = byte1;
      byte byte2 = (byte)55;
      TIntByteMap tIntByteMap0 = null;
      // Undeclared exception!
      try {
        tSynchronizedIntByteMap1.putAll(tIntByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = 0;
      byte byte0 = (byte) (-1);
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap(int0, (float) int0, int0, byte0);
      Locale locale0 = Locale.FRENCH;
      String string0 = locale0.toLanguageTag();
      TSynchronizedIntByteMap tSynchronizedIntByteMap0 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap0);
      // Undeclared exception!
      try {
        File.createTempFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = (-617);
      float float0 = (-734.7803F);
      int int1 = 0;
      int int2 = 0;
      byte byte0 = (byte)20;
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap(int1, (float) int0, int2, byte0);
      String string0 = ")W!B";
      URI uRI0 = new URI(string0);
      URI uRI1 = uRI0.parseServerAuthority();
      String string1 = uRI1.getUserInfo();
      TSynchronizedIntByteMap tSynchronizedIntByteMap0 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap0, (Object) string1);
      TSynchronizedIntByteMap tSynchronizedIntByteMap1 = new TSynchronizedIntByteMap((TIntByteMap) tSynchronizedIntByteMap0);
      byte byte1 = (byte)21;
      TIntByteHashMap tIntByteHashMap1 = new TIntByteHashMap(int0, float0, int0, byte1);
      TSynchronizedIntByteMap tSynchronizedIntByteMap2 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap1);
      tSynchronizedIntByteMap2.putIfAbsent(int0, byte1);
      assertEquals(1, tSynchronizedIntByteMap2.size());
      
      int int3 = 0;
      byte byte2 = (byte) (-91);
      TIntByteHashMap tIntByteHashMap2 = new TIntByteHashMap(int3, (float) int3, int3, byte2);
      Locale locale0 = Locale.ITALIAN;
      Locale locale1 = Locale.KOREAN;
      String string2 = locale0.getDisplayScript(locale1);
      TSynchronizedIntByteMap tSynchronizedIntByteMap3 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap2, (Object) string2);
      boolean boolean0 = tSynchronizedIntByteMap3.isEmpty();
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap();
      TSynchronizedIntByteMap tSynchronizedIntByteMap0 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap0);
      String string0 = "fuf:/dK";
      File file0 = new File(string0, string0);
      RandomAccessFile randomAccessFile0 = null;
      try {
        randomAccessFile0 = new RandomAccessFile(file0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"fuf:/dK\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TIntByteMap tIntByteMap0 = null;
      TSynchronizedIntByteMap tSynchronizedIntByteMap0 = null;
      try {
        tSynchronizedIntByteMap0 = new TSynchronizedIntByteMap(tIntByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = 0;
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap(int0);
      String string0 = "k[d>?,]Cux3kI0@)=j";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: k[d>?,]Cux3kI0@)=j://k[d>?,]Cux3kI0@)=jk%5Bd%3E%3F,%5DCux3kI0@)=j#k[d%3E?,]Cux3kI0@)=j
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = 245;
      float float0 = 589.33234F;
      int int1 = 460;
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap(int1);
      String string0 = " exceeds size ";
      StringTokenizer stringTokenizer0 = new StringTokenizer(string0, string0);
      // Undeclared exception!
      try {
        stringTokenizer0.nextToken(string0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TIntByteMap tIntByteMap0 = null;
      TIntByteHashMap tIntByteHashMap0 = null;
      try {
        tIntByteHashMap0 = new TIntByteHashMap(tIntByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 30;
      float float0 = 1.0F;
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap(int0);
      TSynchronizedIntByteMap tSynchronizedIntByteMap0 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap0);
      tSynchronizedIntByteMap0.putAll((TIntByteMap) tIntByteHashMap0);
      int int1 = 165;
      byte byte0 = (byte)0;
      TIntByteHashMap tIntByteHashMap1 = new TIntByteHashMap(int0, float0, int1, byte0);
      Locale locale0 = Locale.FRENCH;
      String string0 = locale0.getDisplayLanguage();
      TSynchronizedIntByteMap tSynchronizedIntByteMap1 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap1, (Object) string0);
      tSynchronizedIntByteMap1.values(tIntByteHashMap1._states);
      int int2 = 145;
      float float1 = 1271.691F;
      TIntByteHashMap tIntByteHashMap2 = new TIntByteHashMap(int2, float1);
      TSynchronizedIntByteMap tSynchronizedIntByteMap2 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap2);
      tSynchronizedIntByteMap2.keys(tIntByteHashMap2._set);
      byte byte1 = tSynchronizedIntByteMap2.getNoEntryValue();
      assertEquals((byte)0, byte1);
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = 1308;
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap(int0, int0);
      TIntByteHashMap tIntByteHashMap1 = new TIntByteHashMap((TIntByteMap) tIntByteHashMap0);
      Object object0 = null;
      TSynchronizedIntByteMap tSynchronizedIntByteMap0 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap1, object0);
      // Undeclared exception!
      try {
        tSynchronizedIntByteMap0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = (-326);
      int int1 = 1843;
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap(int1);
      TSynchronizedIntByteMap tSynchronizedIntByteMap0 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap0);
      tIntByteHashMap0.toString();
      TSynchronizedIntByteMap tSynchronizedIntByteMap1 = new TSynchronizedIntByteMap((TIntByteMap) tSynchronizedIntByteMap0);
      tSynchronizedIntByteMap1.toString();
      tSynchronizedIntByteMap1.increment(int1);
      byte byte0 = (byte)78;
      TIntByteHashMap tIntByteHashMap1 = new TIntByteHashMap(int0, (float) int0, int0, byte0);
      TSynchronizedIntByteMap tSynchronizedIntByteMap2 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap1);
      String string0 = "";
      tSynchronizedIntByteMap2.keys(tIntByteHashMap1._set);
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://#
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 0;
      float float0 = 0.0F;
      byte byte0 = (byte)56;
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap(int0, float0, int0, byte0);
      TIntByteHashMap tIntByteHashMap1 = null;
      try {
        tIntByteHashMap1 = new TIntByteHashMap((TIntByteMap) tIntByteHashMap0);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = (-1790);
      TIntByteMap tIntByteMap0 = null;
      String string0 = "";
      int int1 = 1812;
      try {
        Byte.valueOf(string0, int1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // radix 1812 greater than Character.MAX_RADIX
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = (-246);
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap(int0);
      String string0 = File.separator;
      TSynchronizedIntByteMap tSynchronizedIntByteMap0 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap0, (Object) string0);
      StringTokenizer stringTokenizer0 = new StringTokenizer(string0);
      // Undeclared exception!
      try {
        stringTokenizer0.nextToken(string0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = 77;
      float float0 = 0.5F;
      byte byte0 = (byte)124;
      TIntByteMap tIntByteMap0 = null;
      Locale locale0 = Locale.JAPAN;
      String string0 = locale0.getDisplayName();
      TSynchronizedIntByteMap tSynchronizedIntByteMap0 = new TSynchronizedIntByteMap(tIntByteMap0, (Object) string0);
      // Undeclared exception!
      try {
        tSynchronizedIntByteMap0.putAll(tIntByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = 0;
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap(int0, int0);
      TSynchronizedIntByteMap tSynchronizedIntByteMap0 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap0);
      byte[] byteArray0 = tSynchronizedIntByteMap0.values();
      assertNotNull(byteArray0);
      
      int int1 = 92;
      float float0 = (-1750.3445F);
      byte byte0 = (byte) (-37);
      TIntByteHashMap tIntByteHashMap1 = new TIntByteHashMap(int1, float0, int1, byte0);
      int int2 = 1;
      Integer integer0 = new Integer(int2);
      TSynchronizedIntByteMap tSynchronizedIntByteMap1 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap1, (Object) integer0);
      int int3 = 1171;
      TIntByteHashMap tIntByteHashMap2 = new TIntByteHashMap(int3);
      String string0 = tIntByteHashMap2.toString();
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      String string1 = hashMap0.toString();
      TSynchronizedIntByteMap tSynchronizedIntByteMap2 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap2, (Object) string1);
      tIntByteHashMap0.getNoEntryValue();
      int int4 = (-1371);
      byte byte1 = (byte) (-11);
      tSynchronizedIntByteMap2.adjustOrPutValue(int4, byte1, byte0);
      TSynchronizedIntByteMap tSynchronizedIntByteMap3 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap2, (Object) string0);
      tSynchronizedIntByteMap3.getNoEntryValue();
      int int5 = 0;
      tIntByteHashMap2.contains(int5);
      int int6 = tSynchronizedIntByteMap3.hashCode();
      assertEquals(1, tIntByteHashMap2.size());
      assertEquals(1406, int6);
  }

  @Test
  public void test17()  throws Throwable  {
      int int0 = (-1);
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap();
      Object object0 = null;
      TSynchronizedIntByteMap tSynchronizedIntByteMap0 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap0, object0);
      tSynchronizedIntByteMap0.getNoEntryValue();
      TIntByteHashMap tIntByteHashMap1 = new TIntByteHashMap();
      TIntByteHashMap tIntByteHashMap2 = new TIntByteHashMap((TIntByteMap) tIntByteHashMap1);
      int int1 = (-1401);
      String string0 = Integer.toOctalString(int1);
      TSynchronizedIntByteMap tSynchronizedIntByteMap1 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap2, (Object) string0);
      TSynchronizedIntByteMap tSynchronizedIntByteMap2 = new TSynchronizedIntByteMap((TIntByteMap) tSynchronizedIntByteMap1);
      tSynchronizedIntByteMap2.remove(int1);
      TIntByteHashMap tIntByteHashMap3 = new TIntByteHashMap(int0, int0);
      TIntByteHashMap tIntByteHashMap4 = new TIntByteHashMap((TIntByteMap) tIntByteHashMap3);
      int int2 = 0;
      int int3 = (-1308);
      TSynchronizedIntByteMap tSynchronizedIntByteMap3 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap3);
      tSynchronizedIntByteMap2.iterator();
      tIntByteHashMap3.increment(int3);
      TIntByteHashMap tIntByteHashMap5 = new TIntByteHashMap((TIntByteMap) tIntByteHashMap4);
      TSynchronizedIntByteMap tSynchronizedIntByteMap4 = new TSynchronizedIntByteMap((TIntByteMap) tIntByteHashMap5);
      byte byte0 = (byte) (-53);
      // Undeclared exception!
      try {
        tSynchronizedIntByteMap0.containsValue(byte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

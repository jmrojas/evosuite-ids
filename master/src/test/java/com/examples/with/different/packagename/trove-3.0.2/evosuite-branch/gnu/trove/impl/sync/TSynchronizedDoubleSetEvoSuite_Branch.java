/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedDoubleSet;
import gnu.trove.set.TDoubleSet;
import gnu.trove.set.hash.TDoubleHashSet;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedDoubleSetEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleSet.hashCode()I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedDoubleSet.<init>(Lgnu/trove/set/TDoubleSet;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(139, 139, 139);
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0);
      int int0 = tSynchronizedDoubleSet0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleSet.equals(Ljava/lang/Object;)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedDoubleSet.<init>(Lgnu/trove/set/TDoubleSet;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet();
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0, (Object) null);
      // Undeclared exception!
      try {
        tSynchronizedDoubleSet0.equals((Object) "\u6CD5\u6587");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.custom_hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TShortFunction;
import gnu.trove.map.TObjectShortMap;
import gnu.trove.map.custom_hash.TObjectShortCustomHashMap;
import gnu.trove.map.hash.TObjectShortHashMap;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.TObjectShortProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TObjectShortCustomHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap$TShortValueCollection.<init>(Lgnu/trove/map/custom_hash/TObjectShortCustomHashMap;)V: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectShortCustomHashMap$1.<init>(Lgnu/trove/map/custom_hash/TObjectShortCustomHashMap;)V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.valueCollection()Lgnu/trove/TShortCollection;: root-Branch
   * 5 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.<init>()V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TObjectShortCustomHashMap<Short> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Short>();
      tObjectShortCustomHashMap0.valueCollection();
      assertEquals(23, tObjectShortCustomHashMap0.capacity());
  }

  //Test case number: 1
  /*
   * 18 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap$1.execute(Ljava/lang/Object;S)Z: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.getNoEntryValue()S: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.putAll(Lgnu/trove/map/TObjectShortMap;)V: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;I)V: root-Branch
   * 5 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.put(Ljava/lang/Object;S)S: root-Branch
   * 6 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFS)V: I24 Branch 8 IFEQ L134 - true
   * 7 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectShortMap;)V: I14 Branch 9 IFEQ L151 - false
   * 8 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectShortMap;)V: I42 Branch 10 IFEQ L157 - true
   * 9 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.doPut(SI)S: I12 Branch 21 IFGE L268 - true
   * 10 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.doPut(SI)S: I41 Branch 22 IFEQ L276 - false
   * 11 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.adjustOrPutValue(Ljava/lang/Object;SS)S: I9 Branch 41 IFGE L456 - true
   * 12 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.adjustOrPutValue(Ljava/lang/Object;SS)S: I52 Branch 42 IFEQ L466 - false
   * 13 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I18 Branch 47 IFLE L518 - true
   * 14 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I18 Branch 47 IFLE L518 - false
   * 15 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - true
   * 16 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - false
   * 17 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I30 Branch 49 IF_ACMPEQ L519 - false
   * 18 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I39 Branch 50 IFNE L519 - true
   */

  @Test
  public void test1()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectShortCustomHashMap<String> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (-60));
      tObjectShortCustomHashMap0.adjustOrPutValue(", ", (short)8, (short)0);
      TObjectShortCustomHashMap<String> tObjectShortCustomHashMap1 = new TObjectShortCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (TObjectShortMap<? extends String>) tObjectShortCustomHashMap0);
      assertEquals(false, tObjectShortCustomHashMap0.isEmpty());
      assertTrue(tObjectShortCustomHashMap1.equals(tObjectShortCustomHashMap0));
  }

  //Test case number: 2
  /*
   * 15 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap$TObjectShortHashIterator.value()S: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectShortCustomHashMap$TObjectShortHashIterator.<init>(Lgnu/trove/map/custom_hash/TObjectShortCustomHashMap;Lgnu/trove/map/custom_hash/TObjectShortCustomHashMap;)V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectShortCustomHashMap$TObjectShortHashIterator.advance()V: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectShortCustomHashMap$TObjectShortHashIterator.key()Ljava/lang/Object;: root-Branch
   * 5 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.containsKey(Ljava/lang/Object;)Z: root-Branch
   * 6 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.iterator()Lgnu/trove/iterator/TObjectShortIterator;: root-Branch
   * 7 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.get(Ljava/lang/Object;)S: I9 Branch 19 IFGE L243 - true
   * 8 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.putIfAbsent(Ljava/lang/Object;S)S: I9 Branch 20 IFGE L259 - true
   * 9 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L588 - true
   * 10 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 59 IF_ICMPEQ L592 - true
   * 11 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 60 IFEQ L597 - true
   * 12 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 60 IFEQ L597 - false
   * 13 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.equals(Ljava/lang/Object;)Z: I54 Branch 61 IF_ICMPNE L601 - false
   * 14 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.equals(Ljava/lang/Object;)Z: I62 Branch 62 IF_ICMPNE L602 - false
   * 15 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.equals(Ljava/lang/Object;)Z: I66 Branch 63 IFNE L602 - true
   */

  @Test
  public void test2()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectShortCustomHashMap<String> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1888);
      tObjectShortCustomHashMap0.putIfAbsent("Xrf?+bQwp1B/HX", (short)0);
      boolean boolean0 = tObjectShortCustomHashMap0.equals((Object) tObjectShortCustomHashMap0);
      assertEquals("{Xrf?+bQwp1B/HX=0}", tObjectShortCustomHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TObjectShortCustomHashMap<Short> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Short>((HashingStrategy<? super Short>) null);
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tObjectShortCustomHashMap0._set);
      boolean boolean0 = tObjectShortCustomHashMap0.forEachKey((TObjectProcedure<? super Short>) toObjectArrayProceedure0);
      assertEquals(true, boolean0);
      assertEquals(23, tObjectShortCustomHashMap0.capacity());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.increment(Ljava/lang/Object;)Z: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.adjustValue(Ljava/lang/Object;S)Z: I9 Branch 40 IFGE L440 - false
   */

  @Test
  public void test4()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectShortCustomHashMap<String> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (-60));
      boolean boolean0 = tObjectShortCustomHashMap0.increment("Xrf?+bQwp1B/HX");
      assertEquals(3, tObjectShortCustomHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.keySet()Ljava/util/Set;: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectShortCustomHashMap$KeyView.<init>(Lgnu/trove/map/custom_hash/TObjectShortCustomHashMap;)V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectShortCustomHashMap<String> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1888);
      tObjectShortCustomHashMap0.keySet();
      assertEquals(3821, tObjectShortCustomHashMap0.capacity());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IF)V: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TObjectShortCustomHashMap<Short> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Short>((HashingStrategy<? super Short>) null, (int) (short)0, (float) (short)0);
      assertEquals(3, tObjectShortCustomHashMap0.capacity());
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.clear()V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectShortCustomHashMap<String> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1888);
      tObjectShortCustomHashMap0.clear();
      assertEquals(3821, tObjectShortCustomHashMap0.capacity());
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectShortMap;)V: I14 Branch 9 IFEQ L151 - true
   * 2 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFS)V: I24 Branch 8 IFEQ L134 - true
   */

//   @Test
//   public void test8()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       TObjectShortHashMap<String> tObjectShortHashMap0 = new TObjectShortHashMap<String>(0, 435.1857F);
//       TObjectShortCustomHashMap<Object> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectShortMap<?>) tObjectShortHashMap0);
//       assertEquals(0, tObjectShortCustomHashMap0.getNoEntryValue());
//   }

  //Test case number: 9
  /*
   * 11 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - true
   * 2 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - false
   * 3 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - true
   * 4 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.getNoEntryValue()S: root-Branch
   * 5 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.putAll(Lgnu/trove/map/TObjectShortMap;)V: root-Branch
   * 6 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectShortMap;)V: I14 Branch 9 IFEQ L151 - false
   * 7 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectShortMap;)V: I42 Branch 10 IFEQ L157 - false
   * 8 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I18 Branch 47 IFLE L518 - true
   * 9 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I18 Branch 47 IFLE L518 - false
   * 10 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - true
   * 11 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFS)V: I24 Branch 8 IFEQ L134 - false
   */

//   @Test
//   public void test9()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       TObjectShortCustomHashMap<String> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 91, (float) 91, (short)3);
//       TObjectShortCustomHashMap<Object> tObjectShortCustomHashMap1 = new TObjectShortCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectShortMap<?>) tObjectShortCustomHashMap0);
//       tObjectShortCustomHashMap1.ensureCapacity((int) (short)3);
//       assertEquals(3, tObjectShortCustomHashMap1.getNoEntryValue());
//       assertEquals("{}", tObjectShortCustomHashMap1.toString());
//       assertEquals(3, tObjectShortCustomHashMap1.capacity());
//   }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.containsValue(S)Z: I25 Branch 16 IF_ACMPEQ L232 - false
   * 2 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.containsValue(S)Z: I30 Branch 17 IF_ACMPEQ L232 - false
   * 3 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.containsValue(S)Z: I35 Branch 18 IF_ICMPNE L232 - false
   * 4 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.containsValue(S)Z: I18 Branch 15 IFLE L231 - false
   * 5 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.containsValue(S)Z: I25 Branch 16 IF_ACMPEQ L232 - true
   */

  @Test
  public void test10()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectShortCustomHashMap<String> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1888);
      tObjectShortCustomHashMap0.put("Xrf?+bQwp1B/HX", (short)0);
      boolean boolean0 = tObjectShortCustomHashMap0.containsValue((short)0);
      assertEquals("{Xrf?+bQwp1B/HX=0}", tObjectShortCustomHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 11
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.containsValue(S)Z: I35 Branch 18 IF_ICMPNE L232 - true
   * 2 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.containsValue(S)Z: I18 Branch 15 IFLE L231 - true
   * 3 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.containsValue(S)Z: I18 Branch 15 IFLE L231 - false
   * 4 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.containsValue(S)Z: I25 Branch 16 IF_ACMPEQ L232 - true
   * 5 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.containsValue(S)Z: I25 Branch 16 IF_ACMPEQ L232 - false
   * 6 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.containsValue(S)Z: I30 Branch 17 IF_ACMPEQ L232 - false
   * 7 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.putIfAbsent(Ljava/lang/Object;S)S: I9 Branch 20 IFGE L259 - true
   */

  @Test
  public void test11()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectShortCustomHashMap<String> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1888);
      tObjectShortCustomHashMap0.putIfAbsent("Xrf?+bQwp1B/HX", (short)0);
      boolean boolean0 = tObjectShortCustomHashMap0.containsValue((short)56);
      assertEquals("{Xrf?+bQwp1B/HX=0}", tObjectShortCustomHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.remove(Ljava/lang/Object;)S: I14 Branch 23 IFLT L287 - true
   */

  @Test
  public void test12()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectShortCustomHashMap<String> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 91, (float) 91, (short)3);
      short short0 = tObjectShortCustomHashMap0.remove((Object) "");
      assertEquals(true, tObjectShortCustomHashMap0.isEmpty());
      assertEquals((short)3, short0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.putAll(Ljava/util/Map;)V: I13 Branch 24 IFEQ L313 - true
   */

//   @Test
//   public void test13()  throws Throwable  {
//       TObjectShortCustomHashMap<Short> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Short>((HashingStrategy<? super Short>) null, (-1));
//       HashMap<Short, Short> hashMap0 = new HashMap<Short, Short>();
//       tObjectShortCustomHashMap0.putAll((Map<? extends Short, ? extends Short>) hashMap0);
//       assertEquals(0.5F, tObjectShortCustomHashMap0.getAutoCompactionFactor(), 0.01F);
//   }

  //Test case number: 14
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L347 - true
   * 2 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L347 - false
   * 3 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L348 - true
   */

  @Test
  public void test14()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectShortCustomHashMap<Integer> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      Object[] objectArray0 = tObjectShortCustomHashMap0.keys();
      assertNotNull(objectArray0);
      assertEquals(23, tObjectShortCustomHashMap0.capacity());
  }

  //Test case number: 15
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L369 - false
   * 2 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I49 Branch 31 IF_ACMPEQ L369 - false
   * 3 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I10 Branch 28 IF_ICMPGE L360 - true
   * 4 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L368 - true
   * 5 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L368 - false
   * 6 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L369 - true
   */

  @Test
  public void test15()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectShortCustomHashMap<String> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (-60));
      tObjectShortCustomHashMap0.adjustOrPutValue(", ", (short)8, (short)0);
      String[] stringArray0 = new String[1];
      tObjectShortCustomHashMap0.keys(stringArray0);
      assertEquals(false, tObjectShortCustomHashMap0.isEmpty());
      assertEquals("{, =0}", tObjectShortCustomHashMap0.toString());
  }

  //Test case number: 16
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.values()[S: I34 Branch 33 IF_ACMPEQ L391 - false
   * 2 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.values()[S: I39 Branch 34 IF_ACMPEQ L391 - false
   * 3 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.values()[S: I27 Branch 32 IFLE L390 - true
   * 4 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.values()[S: I27 Branch 32 IFLE L390 - false
   * 5 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.values()[S: I34 Branch 33 IF_ACMPEQ L391 - true
   */

  @Test
  public void test16()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectShortCustomHashMap<String> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 91, (float) 91, (short)3);
      tObjectShortCustomHashMap0.put("", (short) (-20177));
      tObjectShortCustomHashMap0.values();
      assertEquals(1, tObjectShortCustomHashMap0.size());
      assertEquals("{=-20177}", tObjectShortCustomHashMap0.toString());
  }

  //Test case number: 17
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.values([S)[S: I10 Branch 35 IF_ICMPGE L402 - true
   * 2 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.values([S)[S: I37 Branch 36 IFLE L409 - true
   * 3 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.values([S)[S: I37 Branch 36 IFLE L409 - false
   * 4 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.values([S)[S: I44 Branch 37 IF_ACMPEQ L410 - true
   * 5 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.values([S)[S: I65 Branch 39 IF_ICMPLE L414 - false
   * 6 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFS)V: I24 Branch 8 IFEQ L134 - false
   */

//   @Test
//   public void test17()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       TObjectShortCustomHashMap<String> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 91, (float) 91, (short)3);
//       short[] shortArray0 = new short[3];
//       short[] shortArray1 = tObjectShortCustomHashMap0.values(shortArray0);
//       assertSame(shortArray0, shortArray1);
//       assertNotNull(shortArray1);
//       assertEquals(3, tObjectShortCustomHashMap0.getNoEntryValue());
//   }

  //Test case number: 18
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.values([S)[S: I10 Branch 35 IF_ICMPGE L402 - false
   * 2 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.values([S)[S: I44 Branch 37 IF_ACMPEQ L410 - false
   * 3 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.values([S)[S: I49 Branch 38 IF_ACMPEQ L410 - false
   * 4 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.values([S)[S: I65 Branch 39 IF_ICMPLE L414 - true
   * 5 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.values([S)[S: I37 Branch 36 IFLE L409 - true
   * 6 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.values([S)[S: I37 Branch 36 IFLE L409 - false
   * 7 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.values([S)[S: I44 Branch 37 IF_ACMPEQ L410 - true
   * 8 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.values()[S: I27 Branch 32 IFLE L390 - true
   * 9 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.values()[S: I27 Branch 32 IFLE L390 - false
   * 10 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.values()[S: I34 Branch 33 IF_ACMPEQ L391 - true
   */

  @Test
  public void test18()  throws Throwable  {
      TObjectShortCustomHashMap<Short> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Short>();
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectShortCustomHashMap<Object> tObjectShortCustomHashMap1 = new TObjectShortCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 1531);
      tObjectShortCustomHashMap1.put((Object) "{1952,0}", (short)0);
      short[] shortArray0 = tObjectShortCustomHashMap0.values();
      tObjectShortCustomHashMap1.values(shortArray0);
      assertEquals(1, tObjectShortCustomHashMap1.size());
      assertEquals("{{1952,0}=0}", tObjectShortCustomHashMap1.toString());
  }

  //Test case number: 19
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I27 Branch 51 IFLE L545 - false
   * 2 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I34 Branch 52 IF_ACMPEQ L546 - true
   * 3 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I27 Branch 51 IFLE L545 - true
   */

  @Test
  public void test19()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectShortCustomHashMap<String> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (-60));
      boolean boolean0 = tObjectShortCustomHashMap0.retainEntries((TObjectShortProcedure<? super String>) null);
      assertEquals(false, boolean0);
      assertEquals("{}", tObjectShortCustomHashMap0.toString());
      assertEquals(3, tObjectShortCustomHashMap0.capacity());
  }

  //Test case number: 20
  /*
   * 12 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I34 Branch 52 IF_ACMPEQ L546 - false
   * 2 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I39 Branch 53 IF_ACMPEQ L546 - false
   * 3 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I27 Branch 51 IFLE L545 - false
   * 4 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I34 Branch 52 IF_ACMPEQ L546 - true
   * 5 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - true
   * 6 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - false
   * 7 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - true
   * 8 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - false
   * 9 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.rehash(I)V: I63 Branch 13 IF_ACMPEQ L201 - false
   * 10 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.rehash(I)V: I73 Branch 14 IFGE L203 - true
   * 11 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.adjustOrPutValue(Ljava/lang/Object;SS)S: I9 Branch 41 IFGE L456 - true
   * 12 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.adjustOrPutValue(Ljava/lang/Object;SS)S: I52 Branch 42 IFEQ L466 - false
   */

  @Test
  public void test20()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectShortCustomHashMap<String> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (-60));
      tObjectShortCustomHashMap0.adjustOrPutValue(", ", (short)8, (short)0);
      // Undeclared exception!
      try {
        tObjectShortCustomHashMap0.retainEntries((TObjectShortProcedure<? super String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 21
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.transformValues(Lgnu/trove/function/TShortFunction;)V: I18 Branch 55 IFLE L570 - false
   * 2 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.transformValues(Lgnu/trove/function/TShortFunction;)V: I24 Branch 56 IFNULL L571 - false
   * 3 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.transformValues(Lgnu/trove/function/TShortFunction;)V: I29 Branch 57 IF_ACMPEQ L571 - false
   * 4 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;)V: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TObjectShortCustomHashMap<Short> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Short>((HashingStrategy<? super Short>) null);
      // Undeclared exception!
      try {
        tObjectShortCustomHashMap0.transformValues((TShortFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L588 - false
   */

  @Test
  public void test22()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectShortCustomHashMap<String> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (-60));
      boolean boolean0 = tObjectShortCustomHashMap0.equals((Object) null);
      assertEquals(false, boolean0);
      assertEquals(3, tObjectShortCustomHashMap0.capacity());
  }

  //Test case number: 23
  /*
   * 12 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.equals(Ljava/lang/Object;)Z: I54 Branch 61 IF_ICMPNE L601 - true
   * 2 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.equals(Ljava/lang/Object;)Z: I78 Branch 64 IF_ICMPEQ L608 - true
   * 3 gnu.trove.map.custom_hash.TObjectShortCustomHashMap$TObjectShortHashIterator.value()S: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectShortCustomHashMap$TObjectShortHashIterator.<init>(Lgnu/trove/map/custom_hash/TObjectShortCustomHashMap;Lgnu/trove/map/custom_hash/TObjectShortCustomHashMap;)V: root-Branch
   * 5 gnu.trove.map.custom_hash.TObjectShortCustomHashMap$TObjectShortHashIterator.advance()V: root-Branch
   * 6 gnu.trove.map.custom_hash.TObjectShortCustomHashMap$TObjectShortHashIterator.key()Ljava/lang/Object;: root-Branch
   * 7 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.iterator()Lgnu/trove/iterator/TObjectShortIterator;: root-Branch
   * 8 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L588 - true
   * 9 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 59 IF_ICMPEQ L592 - true
   * 10 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 60 IFEQ L597 - true
   * 11 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 60 IFEQ L597 - false
   * 12 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.get(Ljava/lang/Object;)S: I9 Branch 19 IFGE L243 - true
   */

  @Test
  public void test23()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectShortCustomHashMap<String> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1888);
      tObjectShortCustomHashMap0.put("{}", (short)56);
      boolean boolean0 = tObjectShortCustomHashMap0.equals((Object) tObjectShortCustomHashMap0);
      assertEquals(false, tObjectShortCustomHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.hashCode()I: I22 Branch 65 IFLE L625 - true
   * 2 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.hashCode()I: I22 Branch 65 IFLE L625 - false
   * 3 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L626 - true
   * 4 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.<init>()V: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TObjectShortCustomHashMap<Short> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Short>();
      int int0 = tObjectShortCustomHashMap0.hashCode();
      assertEquals(0, int0);
      assertEquals(23, tObjectShortCustomHashMap0.capacity());
  }

  //Test case number: 25
  /*
   * 11 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I51 Branch 71 IF_ACMPEQ L1108 - false
   * 2 gnu.trove.map.custom_hash.TObjectShortCustomHashMap$1.<init>(Lgnu/trove/map/custom_hash/TObjectShortCustomHashMap;)V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;I)V: root-Branch
   * 5 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.put(Ljava/lang/Object;S)S: root-Branch
   * 6 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 69 IFLE L1107 - true
   * 7 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 69 IFLE L1107 - false
   * 8 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I45 Branch 70 IF_ACMPEQ L1108 - false
   * 9 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I51 Branch 71 IF_ACMPEQ L1108 - true
   * 10 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.doPut(SI)S: I12 Branch 21 IFGE L268 - true
   * 11 gnu.trove.map.custom_hash.TObjectShortCustomHashMap.doPut(SI)S: I41 Branch 22 IFEQ L276 - false
   */

  @Test
  public void test25()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectShortCustomHashMap<Object> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 1531);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      tObjectShortCustomHashMap0.put((Object) "{1952,0}", (short)0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) byteArrayOutputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) bufferedOutputStream0);
      tObjectShortCustomHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(1, tObjectShortCustomHashMap0.size());
      assertEquals("{{1952,0}=0}", tObjectShortCustomHashMap0.toString());
  }
}

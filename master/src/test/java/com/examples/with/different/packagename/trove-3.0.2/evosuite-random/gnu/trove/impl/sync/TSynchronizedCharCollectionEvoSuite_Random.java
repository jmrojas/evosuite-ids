/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TCharCollection;
import gnu.trove.impl.sync.TSynchronizedCharCollection;
import gnu.trove.impl.sync.TSynchronizedCharList;
import gnu.trove.impl.sync.TSynchronizedCharSet;
import gnu.trove.impl.sync.TSynchronizedRandomAccessCharList;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessCharList;
import gnu.trove.iterator.TCharIterator;
import gnu.trove.list.TCharList;
import gnu.trove.list.array.TCharArrayList;
import gnu.trove.list.linked.TCharLinkedList;
import gnu.trove.set.TCharSet;
import gnu.trove.set.hash.TCharHashSet;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PushbackInputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Locale;
import java.util.NoSuchElementException;
import java.util.StringTokenizer;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedCharCollectionEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      char[] charArray0 = new char[1];
      char char0 = 'x';
      charArray0[0] = char0;
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0);
      TSynchronizedCharCollection tSynchronizedCharCollection0 = new TSynchronizedCharCollection((TCharCollection) tCharArrayList0);
      int int0 = tSynchronizedCharCollection0.size();
      assertEquals(1, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      char[] charArray0 = new char[1];
      char char0 = '\\';
      charArray0[0] = char0;
      char char1 = 'S';
      charArray0[0] = char1;
      TCharHashSet tCharHashSet0 = new TCharHashSet((int) char1);
      TSynchronizedCharCollection tSynchronizedCharCollection0 = new TSynchronizedCharCollection((TCharCollection) tCharHashSet0);
      tSynchronizedCharCollection0.isEmpty();
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0);
      Object object0 = null;
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0, object0);
      TSynchronizedCharCollection tSynchronizedCharCollection1 = new TSynchronizedCharCollection((TCharCollection) tSynchronizedRandomAccessCharList0, object0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessCharList0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      int int0 = 0;
      TCharHashSet tCharHashSet0 = new TCharHashSet(int0, int0);
      TUnmodifiableCharSet tUnmodifiableCharSet0 = new TUnmodifiableCharSet((TCharSet) tCharHashSet0);
      TSynchronizedCharSet tSynchronizedCharSet0 = new TSynchronizedCharSet((TCharSet) tUnmodifiableCharSet0);
      TCharHashSet tCharHashSet1 = null;
      try {
        tCharHashSet1 = new TCharHashSet((TCharCollection) tCharHashSet0);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      char[] charArray0 = new char[9];
      char char0 = '/';
      charArray0[0] = char0;
      char char1 = ')';
      charArray0[1] = char1;
      char char2 = '8';
      charArray0[2] = char2;
      char char3 = 'p';
      charArray0[3] = char3;
      char char4 = 'P';
      charArray0[4] = char4;
      char char5 = 'd';
      charArray0[5] = char5;
      char char6 = 'Z';
      charArray0[6] = char6;
      char char7 = 'K';
      charArray0[7] = char7;
      char char8 = '`';
      charArray0[8] = char8;
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0, char0);
      TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) tCharArrayList0);
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      String string0 = tCharHashSet0.toString();
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tSynchronizedCharList0, (Object) string0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      boolean boolean0 = tSynchronizedRandomAccessCharList0.removeAll((Collection<?>) linkedList0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      char[] charArray0 = new char[4];
      char char0 = '%';
      charArray0[0] = char0;
      char char1 = 'v';
      charArray0[1] = char1;
      char char2 = 'i';
      charArray0[2] = char2;
      char char3 = '9';
      charArray0[3] = char3;
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0);
      // Undeclared exception!
      try {
        tCharArrayList0.subList((int) charArray0[2], (int) char1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index < 4
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      char[] charArray0 = new char[4];
      char char0 = 'm';
      charArray0[0] = char0;
      char char1 = 'f';
      charArray0[1] = char1;
      char char2 = 'W';
      charArray0[2] = char2;
      char char3 = 'Y';
      charArray0[3] = char3;
      TCharHashSet tCharHashSet0 = new TCharHashSet(charArray0);
      TSynchronizedCharCollection tSynchronizedCharCollection0 = new TSynchronizedCharCollection((TCharCollection) tCharHashSet0);
      boolean boolean0 = tSynchronizedCharCollection0.containsAll((TCharCollection) tCharHashSet0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = (-1814);
      int int1 = 0;
      float float0 = 0.0F;
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      TUnmodifiableRandomAccessCharList tUnmodifiableRandomAccessCharList0 = new TUnmodifiableRandomAccessCharList((TCharList) tCharLinkedList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessCharList0.subList(int0, int1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = 0;
      float float0 = 1341.6675F;
      TCharHashSet tCharHashSet0 = new TCharHashSet(int0, float0);
      Object object0 = null;
      TSynchronizedCharSet tSynchronizedCharSet0 = new TSynchronizedCharSet((TCharSet) tCharHashSet0, object0);
      TCharIterator tCharIterator0 = tSynchronizedCharSet0.iterator();
      assertEquals(false, tCharIterator0.hasNext());
  }

  @Test
  public void test8()  throws Throwable  {
      TCharCollection tCharCollection0 = null;
      TSynchronizedCharCollection tSynchronizedCharCollection0 = null;
      try {
        tSynchronizedCharCollection0 = new TSynchronizedCharCollection(tCharCollection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 172;
      char char0 = '?';
      TCharHashSet tCharHashSet0 = new TCharHashSet(int0, (float) int0, char0);
      String string0 = "";
      URI uRI0 = new URI(string0);
      URI uRI1 = uRI0.normalize();
      String string1 = uRI1.getScheme();
      tCharHashSet0.equals((Object) string1);
      StringTokenizer stringTokenizer0 = new StringTokenizer(string0);
      // Undeclared exception!
      try {
        stringTokenizer0.nextToken();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      int int0 = 669;
      int int1 = 73467739;
      // Undeclared exception!
      try {
        tCharLinkedList0.subList(int0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 669 greater than last index 0
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[3];
      char char0 = '[';
      charArray0[0] = char0;
      char char1 = '/';
      charArray0[1] = char1;
      char char2 = 'y';
      charArray0[2] = char2;
      TCharHashSet tCharHashSet0 = new TCharHashSet(charArray0);
      InputStream inputStream0 = null;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(inputStream0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) pushbackInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 1;
      char char0 = '=';
      TCharHashSet tCharHashSet0 = new TCharHashSet(int0, (float) int0, char0);
      TCharArrayList tCharArrayList0 = new TCharArrayList((TCharCollection) tCharHashSet0);
      TUnmodifiableCharSet tUnmodifiableCharSet0 = new TUnmodifiableCharSet((TCharSet) tCharHashSet0);
      String string0 = tUnmodifiableCharSet0.toString();
      TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) tCharArrayList0, (Object) string0);
      TSynchronizedCharList tSynchronizedCharList1 = new TSynchronizedCharList((TCharList) tSynchronizedCharList0);
      boolean boolean0 = tSynchronizedCharList1.isEmpty();
      assertEquals(true, boolean0);
      
      TSynchronizedCharSet tSynchronizedCharSet0 = new TSynchronizedCharSet((TCharSet) tCharHashSet0);
      char[] charArray0 = tSynchronizedCharSet0.toArray(tCharHashSet0._set);
      assertNotNull(charArray0);
      
      Collection<String> collection0 = null;
      // Undeclared exception!
      try {
        tSynchronizedCharSet0.removeAll(collection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = 989;
      int int1 = 1;
      char char0 = '@';
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList(char0);
      int int2 = 2028;
      tCharLinkedList0.sum();
      // Undeclared exception!
      try {
        tCharLinkedList0.subList(int2, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 2028 greater than end index 1
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TCharCollection tCharCollection0 = null;
      TCharHashSet tCharHashSet0 = null;
      try {
        tCharHashSet0 = new TCharHashSet(tCharCollection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      int int0 = 204;
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessCharList0.subList(int0, int0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index < 10
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      TCharList tCharList0 = null;
      TUnmodifiableRandomAccessCharList tUnmodifiableRandomAccessCharList0 = null;
      try {
        tUnmodifiableRandomAccessCharList0 = new TUnmodifiableRandomAccessCharList(tCharList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      int int0 = 1541;
      char char0 = ' ';
      TCharHashSet tCharHashSet0 = new TCharHashSet(int0, (float) int0, char0);
      Locale locale0 = Locale.KOREA;
      Locale locale1 = Locale.ENGLISH;
      String string0 = locale0.getDisplayName(locale1);
      TSynchronizedCharSet tSynchronizedCharSet0 = new TSynchronizedCharSet((TCharSet) tCharHashSet0, (Object) string0);
      boolean boolean0 = tSynchronizedCharSet0.removeAll(tCharHashSet0._set);
      assertEquals(false, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      int int0 = 0;
      TCharArrayList tCharArrayList0 = new TCharArrayList(int0);
      Locale locale0 = Locale.ROOT;
      char char0 = '.';
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList(char0);
      TSynchronizedCharCollection tSynchronizedCharCollection0 = new TSynchronizedCharCollection((TCharCollection) tCharLinkedList0);
      char char1 = 'A';
      String string0 = locale0.getExtension(char1);
      TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) tCharArrayList0, (Object) string0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      // Undeclared exception!
      try {
        tSynchronizedCharList0.removeAll((Collection<?>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

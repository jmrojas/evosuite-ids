/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TByteFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteSet;
import gnu.trove.map.TByteByteMap;
import gnu.trove.map.hash.TByteByteHashMap;
import gnu.trove.procedure.TByteByteProcedure;
import gnu.trove.procedure.TByteProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableByteByteMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap$1.value()B: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap$1.advance()V: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap$1.key()B: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap$1.hasNext()Z: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableByteByteMap;)V: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.size()I: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.iterator()Lgnu/trove/iterator/TByteByteIterator;: root-Branch
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.<init>(Lgnu/trove/map/TByteByteMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(200, 200);
      TByteByteHashMap tByteByteHashMap1 = new TByteByteHashMap(tByteByteHashMap0._set, byteArray0);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap1);
      TByteByteHashMap tByteByteHashMap2 = new TByteByteHashMap((TByteByteMap) tUnmodifiableByteByteMap0);
      assertEquals(1, tUnmodifiableByteByteMap0.size());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.increment(B)Z: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((-736));
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteByteMap0.increment((byte) (-5));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.transformValues(Lgnu/trove/function/TByteFunction;)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((-1772));
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteByteMap0.transformValues((TByteFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.putAll(Lgnu/trove/map/TByteByteMap;)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(391, (float) 391, (byte)0, (byte)0);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteByteMap0.putAll((TByteByteMap) tByteByteHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      boolean boolean0 = tUnmodifiableByteByteMap0.forEachValue((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.getNoEntryValue()B: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte byte0 = tUnmodifiableByteByteMap0.getNoEntryValue();
      assertEquals((byte)0, byte0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.keys([B)[B: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((-1), (-1));
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte[] byteArray0 = tUnmodifiableByteByteMap0.keys(tByteByteHashMap0._set);
      assertNotNull(byteArray0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.containsKey(B)Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      boolean boolean0 = tUnmodifiableByteByteMap0.containsKey((byte)0);
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.get(B)B: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((-1), (-1));
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte byte0 = tUnmodifiableByteByteMap0.get((byte)0);
      assertEquals((byte)0, byte0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.hashCode()I: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((-1), (-1));
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      int int0 = tUnmodifiableByteByteMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.adjustOrPutValue(BBB)B: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteByteMap0.adjustOrPutValue((byte)45, (byte)45, (byte)45);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.values([B)[B: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((-1), (-1));
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte[] byteArray0 = tUnmodifiableByteByteMap0.values(tByteByteHashMap0._set);
      assertNotNull(byteArray0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      String string0 = tUnmodifiableByteByteMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.putIfAbsent(BB)B: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(1791);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteByteMap0.putIfAbsent((byte)124, (byte)124);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.values()[B: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(byteArray0, byteArray0);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte[] byteArray1 = tUnmodifiableByteByteMap0.values();
      assertNotSame(byteArray1, byteArray0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.forEachEntry(Lgnu/trove/procedure/TByteByteProcedure;)Z: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((-1), (-1));
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      boolean boolean0 = tUnmodifiableByteByteMap0.forEachEntry((TByteByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.retainEntries(Lgnu/trove/procedure/TByteByteProcedure;)Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(byteArray0, byteArray0);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteByteMap0.retainEntries((TByteByteProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(104);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      HashMap<Byte, Byte> hashMap0 = new HashMap<Byte, Byte>();
      // Undeclared exception!
      try {
        tUnmodifiableByteByteMap0.putAll((Map<? extends Byte, ? extends Byte>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.adjustValue(BB)Z: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((-1272));
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteByteMap0.adjustValue((byte) (-98), (byte) (-98));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.keys()[B: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((-1), (-1));
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte[] byteArray0 = tUnmodifiableByteByteMap0.keys();
      assertNotNull(byteArray0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.containsValue(B)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      boolean boolean0 = tUnmodifiableByteByteMap0.containsValue((byte)0);
      assertEquals(false, boolean0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.remove(B)B: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(200, 200);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteByteMap0.remove((byte)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.clear()V: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(byteArray0, byteArray0);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteByteMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((-1), (-1));
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      boolean boolean0 = tUnmodifiableByteByteMap0.forEachKey((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((-736));
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      boolean boolean0 = tUnmodifiableByteByteMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.put(BB)B: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteByteMap0.put((byte)0, (byte)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.getNoEntryKey()B: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((-1), (-1));
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte byte0 = tUnmodifiableByteByteMap0.getNoEntryKey();
      assertEquals((byte)0, byte0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.<init>(Lgnu/trove/map/TByteByteMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = null;
      try {
        tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.keySet()Lgnu/trove/set/TByteSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.keySet()Lgnu/trove/set/TByteSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      TUnmodifiableByteSet tUnmodifiableByteSet0 = (TUnmodifiableByteSet)tUnmodifiableByteByteMap0.keySet();
      assertNotNull(tUnmodifiableByteSet0);
      
      TUnmodifiableByteSet tUnmodifiableByteSet1 = (TUnmodifiableByteSet)tUnmodifiableByteByteMap0.keySet();
      assertSame(tUnmodifiableByteSet1, tUnmodifiableByteSet0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.valueCollection()Lgnu/trove/TByteCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.valueCollection()Lgnu/trove/TByteCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(200, 200);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      TUnmodifiableByteCollection tUnmodifiableByteCollection0 = (TUnmodifiableByteCollection)tUnmodifiableByteByteMap0.valueCollection();
      assertNotNull(tUnmodifiableByteCollection0);
      
      TUnmodifiableByteCollection tUnmodifiableByteCollection1 = (TUnmodifiableByteCollection)tUnmodifiableByteByteMap0.valueCollection();
      assertSame(tUnmodifiableByteCollection1, tUnmodifiableByteCollection0);
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - false
   */

  @Test
  public void test30()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      boolean boolean0 = tUnmodifiableByteByteMap0.equals((Object) tByteByteHashMap0);
      assertEquals(true, boolean0);
  }

  //Test case number: 31
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap.<init>(Lgnu/trove/map/TByteByteMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(391, (float) 391, (byte)0, (byte)0);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      boolean boolean0 = tUnmodifiableByteByteMap0.equals((Object) "");
      assertEquals(false, boolean0);
  }
}

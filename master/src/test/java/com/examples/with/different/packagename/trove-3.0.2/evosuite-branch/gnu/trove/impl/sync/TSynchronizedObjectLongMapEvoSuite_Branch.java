/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TLongFunction;
import gnu.trove.impl.sync.TSynchronizedLongCollection;
import gnu.trove.impl.sync.TSynchronizedObjectLongMap;
import gnu.trove.iterator.TObjectLongIterator;
import gnu.trove.map.TObjectLongMap;
import gnu.trove.map.custom_hash.TObjectLongCustomHashMap;
import gnu.trove.map.hash.TObjectLongHashMap;
import gnu.trove.procedure.TLongProcedure;
import gnu.trove.procedure.TObjectLongProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedObjectLongMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.containsValue(J)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedObjectLongMap.<init>(Lgnu/trove/map/TObjectLongMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>(0, 0, 0);
      TSynchronizedObjectLongMap<Long> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongHashMap0);
      boolean boolean0 = tSynchronizedObjectLongMap0.containsValue((long) 0);
      assertEquals(false, boolean0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.iterator()Lgnu/trove/iterator/TObjectLongIterator;: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedObjectLongMap.<init>(Lgnu/trove/map/TObjectLongMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TObjectLongHashMap<Integer> tObjectLongHashMap0 = new TObjectLongHashMap<Integer>(635, 635);
      TSynchronizedObjectLongMap<Integer> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Integer>((TObjectLongMap<Integer>) tObjectLongHashMap0, (Object) "");
      TObjectLongIterator<Integer> tObjectLongIterator0 = tSynchronizedObjectLongMap0.iterator();
      assertEquals(false, tObjectLongIterator0.hasNext());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TObjectLongCustomHashMap<Object> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Object>((HashingStrategy<? super Object>) null);
      TSynchronizedObjectLongMap<Object> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Object>((TObjectLongMap<Object>) tObjectLongCustomHashMap0);
      boolean boolean0 = tSynchronizedObjectLongMap0.forEachValue((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.size()I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedObjectLongMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: root-Branch
   * 3 gnu.trove.impl.sync.TSynchronizedObjectLongMap.getNoEntryValue()J: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>(18);
      TSynchronizedObjectLongMap<Long> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongHashMap0);
      TObjectLongHashMap<Long> tObjectLongHashMap1 = new TObjectLongHashMap<Long>((TObjectLongMap<? extends Long>) tSynchronizedObjectLongMap0);
      assertTrue(tObjectLongHashMap0.equals(tObjectLongHashMap1));
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.increment(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0);
      TSynchronizedObjectLongMap<Long> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongCustomHashMap0);
      Long long0 = new Long((-19L));
      boolean boolean0 = tSynchronizedObjectLongMap0.increment(long0);
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.clear()V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>(18);
      TSynchronizedObjectLongMap<Long> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongHashMap0);
      tSynchronizedObjectLongMap0.clear();
      assertEquals(true, tSynchronizedObjectLongMap0.isEmpty());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TObjectLongHashMap<Object> tObjectLongHashMap0 = new TObjectLongHashMap<Object>(0, 0, 0);
      TSynchronizedObjectLongMap<Object> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Object>((TObjectLongMap<Object>) tObjectLongHashMap0);
      Object object0 = new Object();
      boolean boolean0 = tSynchronizedObjectLongMap0.equals(object0);
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.remove(Ljava/lang/Object;)J: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>();
      TSynchronizedObjectLongMap<Long> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongCustomHashMap0, (Object) "");
      // Undeclared exception!
      try {
        tSynchronizedObjectLongMap0.remove((Object) tSynchronizedObjectLongMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.put(Ljava/lang/Object;J)J: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 0, (float) 0, (-842L));
      TSynchronizedObjectLongMap<Long> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongCustomHashMap0);
      long long0 = tSynchronizedObjectLongMap0.put((Long) (-842L), (-842L));
      assertEquals(1, tObjectLongCustomHashMap0.size());
      assertEquals((-842L), long0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TObjectLongHashMap<Integer> tObjectLongHashMap0 = new TObjectLongHashMap<Integer>(1755, 1755);
      TSynchronizedObjectLongMap<Integer> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Integer>((TObjectLongMap<Integer>) tObjectLongHashMap0);
      String string0 = tSynchronizedObjectLongMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.containsKey(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>();
      TSynchronizedObjectLongMap<Integer> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Integer>((TObjectLongMap<Integer>) tObjectLongCustomHashMap0);
      // Undeclared exception!
      try {
        tSynchronizedObjectLongMap0.containsKey((Object) "chinois (Taiwan)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.transformValues(Lgnu/trove/function/TLongFunction;)V: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TSynchronizedObjectLongMap<Object> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Object>((TObjectLongMap<Object>) null, (Object) "B.EQUALS(A) =");
      // Undeclared exception!
      try {
        tSynchronizedObjectLongMap0.transformValues((TLongFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TObjectLongHashMap<Object> tObjectLongHashMap0 = new TObjectLongHashMap<Object>(36, 36);
      TSynchronizedObjectLongMap<Object> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Object>((TObjectLongMap<Object>) tObjectLongHashMap0);
      HashMap<Object, Long> hashMap0 = new HashMap<Object, Long>();
      tSynchronizedObjectLongMap0.putAll((Map<?, ? extends Long>) hashMap0);
      assertEquals(true, tSynchronizedObjectLongMap0.isEmpty());
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.hashCode()I: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TObjectLongHashMap<Object> tObjectLongHashMap0 = new TObjectLongHashMap<Object>(635, 635, 635);
      TSynchronizedObjectLongMap<Object> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Object>((TObjectLongMap<Object>) tObjectLongHashMap0, (Object) "");
      int int0 = tSynchronizedObjectLongMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.putAll(Lgnu/trove/map/TObjectLongMap;)V: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TObjectLongHashMap<Object> tObjectLongHashMap0 = new TObjectLongHashMap<Object>(36, 36);
      TSynchronizedObjectLongMap<Object> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Object>((TObjectLongMap<Object>) tObjectLongHashMap0);
      tSynchronizedObjectLongMap0.putAll((TObjectLongMap<?>) tObjectLongHashMap0);
      assertEquals("{}", tObjectLongHashMap0.toString());
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.putIfAbsent(Ljava/lang/Object;J)J: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 0, (float) 0, (-842L));
      TSynchronizedObjectLongMap<Long> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongCustomHashMap0);
      long long0 = tSynchronizedObjectLongMap0.putIfAbsent((Long) (-842L), (-842L));
      assertEquals("{-842=-842}", tObjectLongCustomHashMap0.toString());
      assertEquals((-842L), long0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.get(Ljava/lang/Object;)J: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>(0, 0, 0);
      TSynchronizedObjectLongMap<Long> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongHashMap0);
      long long0 = tSynchronizedObjectLongMap0.get((Object) 0);
      assertEquals(0L, long0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.values([J)[J: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>(0, 0, 0);
      TSynchronizedObjectLongMap<Long> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongHashMap0);
      long[] longArray0 = new long[3];
      long[] longArray1 = tSynchronizedObjectLongMap0.values(longArray0);
      assertSame(longArray0, longArray1);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TObjectLongHashMap<Object> tObjectLongHashMap0 = new TObjectLongHashMap<Object>(1755, 1755, 1755);
      TSynchronizedObjectLongMap<Object> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Object>((TObjectLongMap<Object>) tObjectLongHashMap0);
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tObjectLongHashMap0._set);
      boolean boolean0 = tSynchronizedObjectLongMap0.forEachKey((TObjectProcedure<? super Object>) toObjectArrayProceedure0);
      assertEquals(true, boolean0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.keys()[Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TObjectLongCustomHashMap<String> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<String>();
      Object object0 = new Object();
      TSynchronizedObjectLongMap<String> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<String>((TObjectLongMap<String>) tObjectLongCustomHashMap0, object0);
      Object[] objectArray0 = tSynchronizedObjectLongMap0.keys();
      assertNotNull(objectArray0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 1755, (float) 1755);
      TSynchronizedObjectLongMap<Long> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongCustomHashMap0, (Object) "{}");
      boolean boolean0 = tSynchronizedObjectLongMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.values()[J: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<String> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 635);
      TSynchronizedObjectLongMap<String> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<String>((TObjectLongMap<String>) tObjectLongCustomHashMap0, (Object) "");
      long[] longArray0 = tSynchronizedObjectLongMap0.values();
      assertNotNull(longArray0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>();
      TSynchronizedObjectLongMap<Long> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongCustomHashMap0, (Object) "");
      boolean boolean0 = tSynchronizedObjectLongMap0.retainEntries((TObjectLongProcedure<? super Long>) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.adjustOrPutValue(Ljava/lang/Object;JJ)J: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0);
      TSynchronizedObjectLongMap<Long> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongCustomHashMap0);
      Long long0 = new Long((-19L));
      long long1 = tSynchronizedObjectLongMap0.adjustOrPutValue(long0, (-19L), (long) long0);
      assertEquals("{-19=-19}", tObjectLongCustomHashMap0.toString());
      assertEquals((-19L), long1);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>(763, 763);
      TSynchronizedObjectLongMap<Long> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongHashMap0);
      Long[] longArray0 = new Long[10];
      Long[] longArray1 = tSynchronizedObjectLongMap0.keys(longArray0);
      assertSame(longArray1, longArray0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.adjustValue(Ljava/lang/Object;J)Z: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      Long long0 = new Long((long) (-1));
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>((-1), (float) (-1), (long) long0);
      TSynchronizedObjectLongMap<Long> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongHashMap0);
      boolean boolean0 = tSynchronizedObjectLongMap0.adjustValue(long0, (long) long0);
      assertEquals(false, boolean0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.<init>(Lgnu/trove/map/TObjectLongMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test26()  throws Throwable  {
      TSynchronizedObjectLongMap<Object> tSynchronizedObjectLongMap0 = null;
      try {
        tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Object>((TObjectLongMap<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.keySet()Ljava/util/Set;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedObjectLongMap.keySet()Ljava/util/Set;: I11 Branch 2 IFNONNULL L107 - false
   * 3 gnu.trove.impl.sync.TSynchronizedObjectLongMap.<init>(Lgnu/trove/map/TObjectLongMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>();
      TSynchronizedObjectLongMap<Long> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongCustomHashMap0, (Object) "");
      Set<Long> set0 = tSynchronizedObjectLongMap0.keySet();
      assertNotNull(set0);
      
      Set<Long> set1 = tSynchronizedObjectLongMap0.keySet();
      assertSame(set1, set0);
  }

  //Test case number: 28
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectLongMap.valueCollection()Lgnu/trove/TLongCollection;: I11 Branch 3 IFNONNULL L122 - true
   * 2 gnu.trove.impl.sync.TSynchronizedObjectLongMap.valueCollection()Lgnu/trove/TLongCollection;: I11 Branch 3 IFNONNULL L122 - false
   * 3 gnu.trove.impl.sync.TSynchronizedObjectLongMap.<init>(Lgnu/trove/map/TObjectLongMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test28()  throws Throwable  {
      IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 0, (float) 0, (-842L));
      TSynchronizedObjectLongMap<Long> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongCustomHashMap0);
      TSynchronizedLongCollection tSynchronizedLongCollection0 = (TSynchronizedLongCollection)tSynchronizedObjectLongMap0.valueCollection();
      assertNotNull(tSynchronizedLongCollection0);
      
      TSynchronizedLongCollection tSynchronizedLongCollection1 = (TSynchronizedLongCollection)tSynchronizedObjectLongMap0.valueCollection();
      assertSame(tSynchronizedLongCollection1, tSynchronizedLongCollection0);
  }
}

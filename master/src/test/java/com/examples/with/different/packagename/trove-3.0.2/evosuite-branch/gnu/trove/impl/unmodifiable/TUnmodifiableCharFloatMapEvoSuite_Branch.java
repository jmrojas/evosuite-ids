/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TFloatFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection;
import gnu.trove.map.TCharFloatMap;
import gnu.trove.map.hash.TCharFloatHashMap;
import gnu.trove.procedure.TCharFloatProcedure;
import gnu.trove.procedure.TCharProcedure;
import gnu.trove.procedure.TFloatProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableCharFloatMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap$1.value()F: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap$1.key()C: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap$1.advance()V: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap$1.hasNext()Z: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableCharFloatMap;)V: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.size()I: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.iterator()Lgnu/trove/iterator/TCharFloatIterator;: root-Branch
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.<init>(Lgnu/trove/map/TCharFloatMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      char[] charArray0 = new char[2];
      float[] floatArray0 = new float[9];
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(charArray0, floatArray0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      TCharFloatHashMap tCharFloatHashMap1 = new TCharFloatHashMap((TCharFloatMap) tUnmodifiableCharFloatMap0);
      assertEquals(1, tUnmodifiableCharFloatMap0.size());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.keys()[C: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap();
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      char[] charArray0 = tUnmodifiableCharFloatMap0.keys();
      assertNotNull(charArray0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((-3), (float) (-3), '^', (float) '^');
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      boolean boolean0 = tUnmodifiableCharFloatMap0.forEachKey((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.putIfAbsent(CF)F: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap();
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableCharFloatMap0.putIfAbsent('u', 'u');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.containsKey(C)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap();
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      boolean boolean0 = tUnmodifiableCharFloatMap0.containsKey('7');
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.getNoEntryValue()F: root-Branch
   */

//   @Test
//   public void test5()  throws Throwable  {
//       TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((int) '\u001E');
//       TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
//       float float0 = tUnmodifiableCharFloatMap0.getNoEntryValue();
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.retainEntries(Lgnu/trove/procedure/TCharFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap();
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableCharFloatMap0.retainEntries((TCharFloatProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.containsValue(F)Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap();
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      boolean boolean0 = tUnmodifiableCharFloatMap0.containsValue((float) '7');
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.forEachEntry(Lgnu/trove/procedure/TCharFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap();
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      boolean boolean0 = tUnmodifiableCharFloatMap0.forEachEntry((TCharFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.hashCode()I: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(65543, 65543);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      int int0 = tUnmodifiableCharFloatMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.get(C)F: root-Branch
   */

//   @Test
//   public void test10()  throws Throwable  {
//       TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((int) '\u001E');
//       TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
//       float float0 = tUnmodifiableCharFloatMap0.get('\u001E');
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.adjustValue(CF)Z: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[2];
      float[] floatArray0 = new float[9];
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(charArray0, floatArray0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableCharFloatMap0.adjustValue('b', 'b');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((int) '\u001E');
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      boolean boolean0 = tUnmodifiableCharFloatMap0.forEachValue((TFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.remove(C)F: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(1803);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableCharFloatMap0.remove('\u0000');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(65543, 65543);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      String string0 = tUnmodifiableCharFloatMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((int) '\u001E');
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      boolean boolean0 = tUnmodifiableCharFloatMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.keys([C)[C: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((int) '\u001E');
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      char[] charArray0 = tUnmodifiableCharFloatMap0.keys(tCharFloatHashMap0._set);
      assertNotNull(charArray0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.values([F)[F: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      float[] floatArray0 = new float[2];
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap();
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      float[] floatArray1 = tUnmodifiableCharFloatMap0.values(floatArray0);
      assertSame(floatArray0, floatArray1);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.putAll(Lgnu/trove/map/TCharFloatMap;)V: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((-3), (float) (-3), '^', (float) '^');
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableCharFloatMap0.putAll((TCharFloatMap) tCharFloatHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.put(CF)F: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap();
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableCharFloatMap0.put('7', '7');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.getNoEntryKey()C: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(1803);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      char char0 = tUnmodifiableCharFloatMap0.getNoEntryKey();
      assertEquals('\u0000', char0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.transformValues(Lgnu/trove/function/TFloatFunction;)V: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(983);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableCharFloatMap0.transformValues((TFloatFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.adjustOrPutValue(CFF)F: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((int) '\u001E');
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableCharFloatMap0.adjustOrPutValue('\u001E', '\u001E', '\u001E');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.increment(C)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((-370), (float) (-370), 'J', (float) (-370));
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableCharFloatMap0.increment('J');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.values()[F: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((int) '\u001E');
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      float[] floatArray0 = tUnmodifiableCharFloatMap0.values();
      assertNotNull(floatArray0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((int) 'C');
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      HashMap<Character, Float> hashMap0 = new HashMap<Character, Float>();
      // Undeclared exception!
      try {
        tUnmodifiableCharFloatMap0.putAll((Map<? extends Character, ? extends Float>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.<init>(Lgnu/trove/map/TCharFloatMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test26()  throws Throwable  {
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = null;
      try {
        tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.keySet()Lgnu/trove/set/TCharSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.keySet()Lgnu/trove/set/TCharSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(65543, 65543);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      TUnmodifiableCharSet tUnmodifiableCharSet0 = (TUnmodifiableCharSet)tUnmodifiableCharFloatMap0.keySet();
      assertNotNull(tUnmodifiableCharSet0);
      
      TUnmodifiableCharSet tUnmodifiableCharSet1 = (TUnmodifiableCharSet)tUnmodifiableCharFloatMap0.keySet();
      assertSame(tUnmodifiableCharSet1, tUnmodifiableCharSet0);
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap();
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = (TUnmodifiableFloatCollection)tUnmodifiableCharFloatMap0.valueCollection();
      assertNotNull(tUnmodifiableFloatCollection0);
      
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection1 = (TUnmodifiableFloatCollection)tUnmodifiableCharFloatMap0.valueCollection();
      assertSame(tUnmodifiableFloatCollection1, tUnmodifiableFloatCollection0);
  }

  //Test case number: 29
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap.<init>(Lgnu/trove/map/TCharFloatMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test29()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap();
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      boolean boolean0 = tUnmodifiableCharFloatMap0.equals((Object) (-1898));
      assertEquals(false, boolean0);
  }
}

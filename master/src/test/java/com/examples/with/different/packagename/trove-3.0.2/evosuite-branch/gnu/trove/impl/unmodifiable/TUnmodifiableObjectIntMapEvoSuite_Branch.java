/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TIntFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap;
import gnu.trove.iterator.TObjectIntIterator;
import gnu.trove.map.TObjectIntMap;
import gnu.trove.map.custom_hash.TObjectIntCustomHashMap;
import gnu.trove.map.hash.TObjectIntHashMap;
import gnu.trove.procedure.TIntProcedure;
import gnu.trove.procedure.TObjectIntProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableObjectIntMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.<init>(Lgnu/trove/map/TObjectIntMap;)V: I17 Branch 1 IFNONNULL L53 - true
   */

  @Test
  public void test0()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Object> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (-704));
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntCustomHashMap0);
      Object[] objectArray0 = tUnmodifiableObjectIntMap0.keys(tObjectIntCustomHashMap0._set);
      assertNotNull(objectArray0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.hashCode()I: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1393, (float) 1393, 1393);
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>((TObjectIntMap<?>) tObjectIntCustomHashMap0);
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      int int0 = tUnmodifiableObjectIntMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 2
  /*
   * 4 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.containsValue(I)Z: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.getNoEntryValue()I: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.size()I: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>();
      TUnmodifiableObjectIntMap<Integer> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Integer>((TObjectIntMap<Integer>) tObjectIntHashMap0);
      TObjectIntHashMap<Object> tObjectIntHashMap1 = new TObjectIntHashMap<Object>((TObjectIntMap<?>) tUnmodifiableObjectIntMap0);
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap1 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap1);
      boolean boolean0 = tUnmodifiableObjectIntMap1.containsValue(109);
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.containsKey(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>(0);
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      boolean boolean0 = tUnmodifiableObjectIntMap0.containsKey((Object) "7");
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.adjustOrPutValue(Ljava/lang/Object;II)I: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1393, (float) 1393, 1393);
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>((TObjectIntMap<?>) tObjectIntCustomHashMap0);
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectIntMap0.adjustOrPutValue((Object) "", 0, 1393);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.values()[I: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>(0);
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      int[] intArray0 = tUnmodifiableObjectIntMap0.values();
      assertNotNull(intArray0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.values([I)[I: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>(0);
      TUnmodifiableObjectIntMap<Integer> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Integer>((TObjectIntMap<Integer>) tObjectIntHashMap0);
      int[] intArray0 = new int[1];
      int[] intArray1 = tUnmodifiableObjectIntMap0.values(intArray0);
      assertSame(intArray0, intArray1);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.transformValues(Lgnu/trove/function/TIntFunction;)V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>(0);
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectIntMap0.transformValues((TIntFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.putIfAbsent(Ljava/lang/Object;I)I: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Object> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (-704));
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntCustomHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectIntMap0.putIfAbsent((Object) null, (-704));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.increment(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0);
      TUnmodifiableObjectIntMap<String> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<String>((TObjectIntMap<String>) tObjectIntCustomHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectIntMap0.increment("S");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.remove(Ljava/lang/Object;)I: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>((-1487), (-1487));
      TUnmodifiableObjectIntMap<Integer> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Integer>((TObjectIntMap<Integer>) tObjectIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectIntMap0.remove((Object) (-1487));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>();
      TUnmodifiableObjectIntMap<Integer> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Integer>((TObjectIntMap<Integer>) tObjectIntHashMap0);
      TObjectIntHashMap<Object> tObjectIntHashMap1 = new TObjectIntHashMap<Object>((TObjectIntMap<?>) tUnmodifiableObjectIntMap0);
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap1 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap1);
      String string0 = tUnmodifiableObjectIntMap1.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.putAll(Lgnu/trove/map/TObjectIntMap;)V: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>(105359952, 105359952);
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectIntMap0.putAll((TObjectIntMap<?>) tObjectIntHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TObjectIntHashMap<String> tObjectIntHashMap0 = new TObjectIntHashMap<String>((-704), (-704), (-704));
      TUnmodifiableObjectIntMap<String> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<String>((TObjectIntMap<String>) tObjectIntHashMap0);
      String[] stringArray0 = new String[2];
      ToObjectArrayProceedure<String> toObjectArrayProceedure0 = new ToObjectArrayProceedure<String>(stringArray0);
      boolean boolean0 = tUnmodifiableObjectIntMap0.forEachKey((TObjectProcedure<? super String>) toObjectArrayProceedure0);
      assertEquals(true, boolean0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.adjustValue(Ljava/lang/Object;I)Z: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>(1381, 1381);
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectIntMap0.adjustValue((Object) tUnmodifiableObjectIntMap0, 1381);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.retainEntries(Lgnu/trove/procedure/TObjectIntProcedure;)Z: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TObjectIntCustomHashMap<Object> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Object>();
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntCustomHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectIntMap0.retainEntries((TObjectIntProcedure<? super Object>) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.put(Ljava/lang/Object;I)I: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      TUnmodifiableObjectIntMap<Integer> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Integer>((TObjectIntMap<Integer>) tObjectIntCustomHashMap0);
      Integer integer0 = new Integer((-1495));
      // Undeclared exception!
      try {
        tUnmodifiableObjectIntMap0.put(integer0, (-1495));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>(0, 0);
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      boolean boolean0 = tUnmodifiableObjectIntMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keys()[Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TObjectIntHashMap<String> tObjectIntHashMap0 = new TObjectIntHashMap<String>((-465), (-465), (-465));
      TUnmodifiableObjectIntMap<String> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<String>((TObjectIntMap<String>) tObjectIntHashMap0);
      Object[] objectArray0 = tUnmodifiableObjectIntMap0.keys();
      assertNotNull(objectArray0);
  }

  //Test case number: 19
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.iterator()Lgnu/trove/iterator/TObjectIntIterator;: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableObjectIntMap;)V: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>();
      TUnmodifiableObjectIntMap<Integer> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Integer>((TObjectIntMap<Integer>) tObjectIntHashMap0);
      TObjectIntIterator<Integer> tObjectIntIterator0 = tUnmodifiableObjectIntMap0.iterator();
      assertEquals(false, tObjectIntIterator0.hasNext());
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.get(Ljava/lang/Object;)I: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>(927292696, 927292696);
      TUnmodifiableObjectIntMap<Integer> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Integer>((TObjectIntMap<Integer>) tObjectIntHashMap0);
      int int0 = tUnmodifiableObjectIntMap0.get((Object) "");
      assertEquals(0, int0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.clear()V: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>();
      TUnmodifiableObjectIntMap<Integer> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Integer>((TObjectIntMap<Integer>) tObjectIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectIntMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 4 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.putAll(Ljava/util/Map;)V: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.getNoEntryValue()I: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.size()I: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>();
      TUnmodifiableObjectIntMap<Integer> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Integer>((TObjectIntMap<Integer>) tObjectIntHashMap0);
      TObjectIntHashMap<Object> tObjectIntHashMap1 = new TObjectIntHashMap<Object>((TObjectIntMap<?>) tUnmodifiableObjectIntMap0);
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap1 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap1);
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      // Undeclared exception!
      try {
        tUnmodifiableObjectIntMap1.putAll((Map<?, ? extends Integer>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>();
      TUnmodifiableObjectIntMap<Integer> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Integer>((TObjectIntMap<Integer>) tObjectIntHashMap0);
      boolean boolean0 = tUnmodifiableObjectIntMap0.forEachValue((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.<init>(Lgnu/trove/map/TObjectIntMap;)V: I17 Branch 1 IFNONNULL L53 - false
   */

  @Test
  public void test24()  throws Throwable  {
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = null;
      try {
        tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keySet()Ljava/util/Set;: I4 Branch 2 IFNONNULL L74 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keySet()Ljava/util/Set;: I4 Branch 2 IFNONNULL L74 - false
   */

  @Test
  public void test25()  throws Throwable  {
      TObjectIntHashMap<String> tObjectIntHashMap0 = new TObjectIntHashMap<String>(0, 0, 0);
      TUnmodifiableObjectIntMap<String> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<String>((TObjectIntMap<String>) tObjectIntHashMap0);
      Set<String> set0 = tUnmodifiableObjectIntMap0.keySet();
      assertNotNull(set0);
      
      Set<String> set1 = tUnmodifiableObjectIntMap0.keySet();
      assertSame(set1, set0);
  }

  //Test case number: 26
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.valueCollection()Lgnu/trove/TIntCollection;: I4 Branch 3 IFNONNULL L82 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.valueCollection()Lgnu/trove/TIntCollection;: I4 Branch 3 IFNONNULL L82 - false
   */

  @Test
  public void test26()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1393, (float) 1393, 1393);
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>((TObjectIntMap<?>) tObjectIntCustomHashMap0);
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      TUnmodifiableIntCollection tUnmodifiableIntCollection0 = (TUnmodifiableIntCollection)tUnmodifiableObjectIntMap0.valueCollection();
      assertNotNull(tUnmodifiableIntCollection0);
      
      TUnmodifiableIntCollection tUnmodifiableIntCollection1 = (TUnmodifiableIntCollection)tUnmodifiableObjectIntMap0.valueCollection();
      assertSame(tUnmodifiableIntCollection1, tUnmodifiableIntCollection0);
  }

  //Test case number: 27
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L89 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L89 - false
   */

  @Test
  public void test27()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Object> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (-704));
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntCustomHashMap0);
      boolean boolean0 = tUnmodifiableObjectIntMap0.equals((Object) tObjectIntCustomHashMap0);
      assertEquals(true, boolean0);
  }

  //Test case number: 28
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L89 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L89 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.<init>(Lgnu/trove/map/TObjectIntMap;)V: I17 Branch 1 IFNONNULL L53 - true
   */

  @Test
  public void test28()  throws Throwable  {
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>();
      TUnmodifiableObjectIntMap<Integer> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Integer>((TObjectIntMap<Integer>) tObjectIntHashMap0);
      boolean boolean0 = tUnmodifiableObjectIntMap0.equals((Object) "{}");
      assertEquals(false, boolean0);
  }
}

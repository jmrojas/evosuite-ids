/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.set.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TDoubleCollection;
import gnu.trove.impl.sync.TSynchronizedDoubleCollection;
import gnu.trove.set.hash.TDoubleHashSet;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TDoubleHashSetEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 12 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet$TDoubleHashIterator.next()D: root-Branch
   * 2 gnu.trove.set.hash.TDoubleHashSet.add(D)Z: I9 Branch 9 IFGE L196 - true
   * 3 gnu.trove.set.hash.TDoubleHashSet.addAll(Ljava/util/Collection;)Z: I12 Branch 18 IFEQ L261 - false
   * 4 gnu.trove.set.hash.TDoubleHashSet.addAll(Ljava/util/Collection;)Z: I27 Branch 19 IFEQ L263 - false
   * 5 gnu.trove.set.hash.TDoubleHashSet.retainAll(Ljava/util/Collection;)Z: I13 Branch 24 IFEQ L302 - false
   * 6 gnu.trove.set.hash.TDoubleHashSet.retainAll(Ljava/util/Collection;)Z: I21 Branch 25 IFGT L303 - true
   * 7 gnu.trove.set.hash.TDoubleHashSet.<init>(Ljava/util/Collection;)V: root-Branch
   * 8 gnu.trove.set.hash.TDoubleHashSet$TDoubleHashIterator.<init>(Lgnu/trove/set/hash/TDoubleHashSet;Lgnu/trove/impl/hash/TDoubleHash;)V: root-Branch
   * 9 gnu.trove.set.hash.TDoubleHashSet.iterator()Lgnu/trove/iterator/TDoubleIterator;: root-Branch
   * 10 gnu.trove.set.hash.TDoubleHashSet.<init>(I)V: root-Branch
   * 11 gnu.trove.set.hash.TDoubleHashSet.retainAll(Ljava/util/Collection;)Z: I13 Branch 24 IFEQ L302 - true
   * 12 gnu.trove.set.hash.TDoubleHashSet.addAll(Ljava/util/Collection;)Z: I12 Branch 18 IFEQ L261 - true
   */

  @Test
  public void test0()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      linkedList0.add((Double) 1884.2392316551875);
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((Collection<? extends Double>) linkedList0);
      boolean boolean0 = tDoubleHashSet0.retainAll((Collection<?>) linkedList0);
      assertEquals("{1884.2392316551875}", tDoubleHashSet0.toString());
      assertEquals(false, tDoubleHashSet0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 1
  /*
   * 10 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.<init>(Lgnu/trove/TDoubleCollection;)V: I12 Branch 2 IFEQ L127 - true
   * 2 gnu.trove.set.hash.TDoubleHashSet.addAll(Lgnu/trove/TDoubleCollection;)Z: I13 Branch 20 IFEQ L275 - true
   * 3 gnu.trove.set.hash.TDoubleHashSet.addAll(Lgnu/trove/TDoubleCollection;)Z: I13 Branch 20 IFEQ L275 - false
   * 4 gnu.trove.set.hash.TDoubleHashSet.addAll(Lgnu/trove/TDoubleCollection;)Z: I24 Branch 21 IFEQ L277 - false
   * 5 gnu.trove.set.hash.TDoubleHashSet.<init>([D)V: root-Branch
   * 6 gnu.trove.set.hash.TDoubleHashSet.add(D)Z: I9 Branch 9 IFGE L196 - false
   * 7 gnu.trove.set.hash.TDoubleHashSet.addAll([D)Z: I12 Branch 22 IFLE L288 - true
   * 8 gnu.trove.set.hash.TDoubleHashSet.addAll([D)Z: I12 Branch 22 IFLE L288 - false
   * 9 gnu.trove.set.hash.TDoubleHashSet.addAll([D)Z: I20 Branch 23 IFEQ L289 - true
   * 10 gnu.trove.set.hash.TDoubleHashSet.addAll([D)Z: I20 Branch 23 IFEQ L289 - false
   */

  @Test
  public void test1()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(doubleArray0);
      TSynchronizedDoubleCollection tSynchronizedDoubleCollection0 = new TSynchronizedDoubleCollection((TDoubleCollection) tDoubleHashSet0);
      TDoubleHashSet tDoubleHashSet1 = new TDoubleHashSet((TDoubleCollection) tSynchronizedDoubleCollection0);
      assertEquals("{0.0}", tDoubleHashSet0.toString());
      assertEquals(1, tDoubleHashSet1.size());
      assertEquals("{0.0}", tDoubleHashSet1.toString());
  }

  //Test case number: 2
  /*
   * 9 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.toArray()[D: I34 Branch 5 IF_ICMPNE L166 - false
   * 2 gnu.trove.set.hash.TDoubleHashSet.rehash(I)V: I35 Branch 40 IFLE L410 - true
   * 3 gnu.trove.set.hash.TDoubleHashSet.rehash(I)V: I35 Branch 40 IFLE L410 - false
   * 4 gnu.trove.set.hash.TDoubleHashSet.rehash(I)V: I42 Branch 41 IF_ICMPNE L411 - true
   * 5 gnu.trove.set.hash.TDoubleHashSet.rehash(I)V: I42 Branch 41 IF_ICMPNE L411 - false
   * 6 gnu.trove.set.hash.TDoubleHashSet.toArray()[D: I27 Branch 4 IFLE L165 - true
   * 7 gnu.trove.set.hash.TDoubleHashSet.toArray()[D: I27 Branch 4 IFLE L165 - false
   * 8 gnu.trove.set.hash.TDoubleHashSet.toArray()[D: I34 Branch 5 IF_ICMPNE L166 - true
   * 9 gnu.trove.set.hash.TDoubleHashSet.<init>(IFD)V: I12 Branch 1 IFEQ L101 - false
   */

  @Test
  public void test2()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((-1436), (-1436), (-1436));
      tDoubleHashSet0.add((double) (-1436));
      tDoubleHashSet0.toArray();
      assertEquals(1, tDoubleHashSet0.size());
      assertEquals("{-1436.0}", tDoubleHashSet0.toString());
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.toArray([D)[D: I21 Branch 6 IFLE L179 - true
   * 2 gnu.trove.set.hash.TDoubleHashSet.toArray([D)[D: I21 Branch 6 IFLE L179 - false
   * 3 gnu.trove.set.hash.TDoubleHashSet.toArray([D)[D: I28 Branch 7 IF_ICMPNE L180 - true
   * 4 gnu.trove.set.hash.TDoubleHashSet.toArray([D)[D: I28 Branch 7 IF_ICMPNE L180 - false
   * 5 gnu.trove.set.hash.TDoubleHashSet.toArray([D)[D: I45 Branch 8 IF_ICMPLE L185 - false
   */

  @Test
  public void test3()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(doubleArray0);
      double[] doubleArray1 = tDoubleHashSet0.toArray(tDoubleHashSet0._set);
      assertEquals("{0.0}", tDoubleHashSet0.toString());
      assertEquals(1, tDoubleHashSet0.size());
      assertNotNull(doubleArray1);
  }

  //Test case number: 4
  /*
   * 5 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.toArray([D)[D: I45 Branch 8 IF_ICMPLE L185 - true
   * 2 gnu.trove.set.hash.TDoubleHashSet.toArray([D)[D: I21 Branch 6 IFLE L179 - true
   * 3 gnu.trove.set.hash.TDoubleHashSet.toArray([D)[D: I21 Branch 6 IFLE L179 - false
   * 4 gnu.trove.set.hash.TDoubleHashSet.toArray([D)[D: I28 Branch 7 IF_ICMPNE L180 - true
   * 5 gnu.trove.set.hash.TDoubleHashSet.toArray([D)[D: I28 Branch 7 IF_ICMPNE L180 - false
   */

  @Test
  public void test4()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[1] = (-1.0);
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 1755.0165326653712;
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(doubleArray0);
      double[] doubleArray1 = tDoubleHashSet0.toArray(doubleArray0);
      assertNotNull(doubleArray1);
      assertSame(doubleArray1, doubleArray0);
      assertEquals("{1.0,1755.0165326653712,-1.0,0.0}", tDoubleHashSet0.toString());
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.remove(D)Z: I9 Branch 10 IFLT L209 - false
   * 2 gnu.trove.set.hash.TDoubleHashSet.removeAll(Lgnu/trove/TDoubleCollection;)Z: I13 Branch 35 IFEQ L365 - false
   * 3 gnu.trove.set.hash.TDoubleHashSet.removeAll(Lgnu/trove/TDoubleCollection;)Z: I24 Branch 36 IFEQ L367 - false
   */

  @Test
  public void test5()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((-1436), (-1436), (-1436));
      tDoubleHashSet0.addAll(tDoubleHashSet0._set);
      assertEquals(false, tDoubleHashSet0.isEmpty());
      
      // Undeclared exception!
      try {
        tDoubleHashSet0.removeAll((TDoubleCollection) tDoubleHashSet0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.containsAll(Ljava/util/Collection;)Z: I8 Branch 11 IFEQ L219 - false
   * 2 gnu.trove.set.hash.TDoubleHashSet.containsAll(Ljava/util/Collection;)Z: I16 Branch 12 IFEQ L220 - true
   * 3 gnu.trove.set.hash.TDoubleHashSet.<init>(IF)V: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(0, 0);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      linkedList0.add(0, (Double) null);
      boolean boolean0 = tDoubleHashSet0.containsAll((Collection<?>) linkedList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.containsAll(Ljava/util/Collection;)Z: I16 Branch 12 IFEQ L220 - false
   * 2 gnu.trove.set.hash.TDoubleHashSet.containsAll(Ljava/util/Collection;)Z: I28 Branch 13 IFNE L222 - false
   */

  @Test
  public void test7()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(843);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) 4.9E-324);
      boolean boolean0 = tDoubleHashSet0.containsAll((Collection<?>) linkedList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 4 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.containsAll(Ljava/util/Collection;)Z: I28 Branch 13 IFNE L222 - true
   * 2 gnu.trove.set.hash.TDoubleHashSet.containsAll(Ljava/util/Collection;)Z: I8 Branch 11 IFEQ L219 - true
   * 3 gnu.trove.set.hash.TDoubleHashSet.containsAll(Ljava/util/Collection;)Z: I8 Branch 11 IFEQ L219 - false
   * 4 gnu.trove.set.hash.TDoubleHashSet.containsAll(Ljava/util/Collection;)Z: I16 Branch 12 IFEQ L220 - false
   */

  @Test
  public void test8()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(843);
      tDoubleHashSet0.add(4.9E-324);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) 4.9E-324);
      boolean boolean0 = tDoubleHashSet0.containsAll((Collection<?>) linkedList0);
      assertEquals("{4.9E-324}", tDoubleHashSet0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 9
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.containsAll(Lgnu/trove/TDoubleCollection;)Z: I9 Branch 14 IFEQ L237 - false
   * 2 gnu.trove.set.hash.TDoubleHashSet.containsAll(Lgnu/trove/TDoubleCollection;)Z: I20 Branch 15 IFNE L239 - true
   * 3 gnu.trove.set.hash.TDoubleHashSet.containsAll(Lgnu/trove/TDoubleCollection;)Z: I9 Branch 14 IFEQ L237 - true
   */

  @Test
  public void test9()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(doubleArray0);
      boolean boolean0 = tDoubleHashSet0.containsAll((TDoubleCollection) tDoubleHashSet0);
      assertEquals("{0.0}", tDoubleHashSet0.toString());
      assertEquals(1, tDoubleHashSet0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 10
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.containsAll(Lgnu/trove/TDoubleCollection;)Z: I20 Branch 15 IFNE L239 - false
   * 2 gnu.trove.set.hash.TDoubleHashSet.<init>()V: root-Branch
   * 3 gnu.trove.set.hash.TDoubleHashSet.containsAll(Lgnu/trove/TDoubleCollection;)Z: I9 Branch 14 IFEQ L237 - false
   */

  @Test
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet();
      TDoubleHashSet tDoubleHashSet1 = new TDoubleHashSet(doubleArray0);
      boolean boolean0 = tDoubleHashSet0.containsAll((TDoubleCollection) tDoubleHashSet1);
      assertEquals("{0.0}", tDoubleHashSet1.toString());
      assertEquals(1, tDoubleHashSet1.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.containsAll([D)Z: I8 Branch 16 IFLE L249 - true
   * 2 gnu.trove.set.hash.TDoubleHashSet.containsAll([D)Z: I8 Branch 16 IFLE L249 - false
   * 3 gnu.trove.set.hash.TDoubleHashSet.containsAll([D)Z: I16 Branch 17 IFNE L250 - true
   */

  @Test
  public void test11()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((-1479));
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)42;
      byteArray0[2] = (byte)1;
      tDoubleHashSet0._states = byteArray0;
      boolean boolean0 = tDoubleHashSet0.containsAll(tDoubleHashSet0._set);
      assertEquals(true, boolean0);
  }

  //Test case number: 12
  /*
   * 2 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.containsAll([D)Z: I16 Branch 17 IFNE L250 - false
   * 2 gnu.trove.set.hash.TDoubleHashSet.containsAll([D)Z: I8 Branch 16 IFLE L249 - false
   */

  @Test
  public void test12()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((-1436), (-1436), (-1436));
      boolean boolean0 = tDoubleHashSet0.containsAll(tDoubleHashSet0._set);
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.addAll(Ljava/util/Collection;)Z: I27 Branch 19 IFEQ L263 - true
   * 2 gnu.trove.set.hash.TDoubleHashSet.addAll(Ljava/util/Collection;)Z: I12 Branch 18 IFEQ L261 - true
   * 3 gnu.trove.set.hash.TDoubleHashSet.addAll(Ljava/util/Collection;)Z: I12 Branch 18 IFEQ L261 - false
   */

  @Test
  public void test13()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((-265), 1223.3451F);
      double[] doubleArray0 = new double[6];
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      doubleArray0[0] = (double) 1223.3451F;
      tDoubleHashSet0.addAll(doubleArray0);
      linkedList0.add((Double) 1223.3450927734375);
      boolean boolean0 = tDoubleHashSet0.addAll((Collection<? extends Double>) linkedList0);
      assertEquals(false, tDoubleHashSet0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 14
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.addAll(Lgnu/trove/TDoubleCollection;)Z: I24 Branch 21 IFEQ L277 - true
   * 2 gnu.trove.set.hash.TDoubleHashSet.<init>(Lgnu/trove/TDoubleCollection;)V: I12 Branch 2 IFEQ L127 - false
   * 3 gnu.trove.set.hash.TDoubleHashSet.<init>(Lgnu/trove/TDoubleCollection;)V: I36 Branch 3 IFEQ L132 - true
   */

  @Test
  public void test14()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((-1479));
      byte[] byteArray0 = new byte[10];
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)1;
      tDoubleHashSet0._states = byteArray0;
      TDoubleHashSet tDoubleHashSet1 = new TDoubleHashSet((TDoubleCollection) tDoubleHashSet0);
      assertEquals(23, tDoubleHashSet1.capacity());
      assertEquals(1, tDoubleHashSet1.size());
      assertEquals("{0.0}", tDoubleHashSet1.toString());
      assertEquals(0.0, tDoubleHashSet1.getNoEntryValue(), 0.01D);
  }

  //Test case number: 15
  /*
   * 4 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.retainAll(Ljava/util/Collection;)Z: I21 Branch 25 IFGT L303 - false
   * 2 gnu.trove.set.hash.TDoubleHashSet.retainAll(Ljava/util/Collection;)Z: I13 Branch 24 IFEQ L302 - true
   * 3 gnu.trove.set.hash.TDoubleHashSet.retainAll(Ljava/util/Collection;)Z: I13 Branch 24 IFEQ L302 - false
   * 4 gnu.trove.set.hash.TDoubleHashSet.<init>(IFD)V: I12 Branch 1 IFEQ L101 - true
   */

  @Test
  public void test15()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(0, (float) 0, 0.0);
      TDoubleHashSet tDoubleHashSet1 = new TDoubleHashSet(tDoubleHashSet0._set);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      boolean boolean0 = tDoubleHashSet1.retainAll((Collection<?>) linkedList0);
      assertEquals(true, boolean0);
      assertEquals(0, tDoubleHashSet1.size());
  }

  //Test case number: 16
  /*
   * 5 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.retainAll(Lgnu/trove/TDoubleCollection;)Z: I4 Branch 26 IF_ACMPNE L314 - true
   * 2 gnu.trove.set.hash.TDoubleHashSet.retainAll(Lgnu/trove/TDoubleCollection;)Z: I22 Branch 27 IFEQ L319 - true
   * 3 gnu.trove.set.hash.TDoubleHashSet.retainAll(Lgnu/trove/TDoubleCollection;)Z: I22 Branch 27 IFEQ L319 - false
   * 4 gnu.trove.set.hash.TDoubleHashSet.retainAll(Lgnu/trove/TDoubleCollection;)Z: I29 Branch 28 IFNE L320 - false
   * 5 gnu.trove.set.hash.TDoubleHashSet.<init>(Lgnu/trove/TDoubleCollection;)V: I36 Branch 3 IFEQ L132 - false
   */

  @Test
  public void test16()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((-1436), (-1436), (-1436));
      TDoubleHashSet tDoubleHashSet1 = new TDoubleHashSet((TDoubleCollection) tDoubleHashSet0);
      tDoubleHashSet1.add((double) (-1436));
      boolean boolean0 = tDoubleHashSet1.retainAll((TDoubleCollection) tDoubleHashSet0);
      assertEquals(0, tDoubleHashSet1.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.set.hash.TDoubleHashSet.retainAll(Lgnu/trove/TDoubleCollection;)Z: I4 Branch 26 IF_ACMPNE L314 - false
   */

  @Test
  public void test17()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((-1479));
      boolean boolean0 = tDoubleHashSet0.retainAll((TDoubleCollection) tDoubleHashSet0);
      assertEquals(false, boolean0);
  }

  //Test case number: 18
  /*
   * 9 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.retainAll(Lgnu/trove/TDoubleCollection;)Z: I29 Branch 28 IFNE L320 - true
   * 2 gnu.trove.set.hash.TDoubleHashSet.retainAll(Lgnu/trove/TDoubleCollection;)Z: I4 Branch 26 IF_ACMPNE L314 - true
   * 3 gnu.trove.set.hash.TDoubleHashSet.retainAll(Lgnu/trove/TDoubleCollection;)Z: I22 Branch 27 IFEQ L319 - true
   * 4 gnu.trove.set.hash.TDoubleHashSet.retainAll(Lgnu/trove/TDoubleCollection;)Z: I22 Branch 27 IFEQ L319 - false
   * 5 gnu.trove.set.hash.TDoubleHashSet.<init>(Lgnu/trove/TDoubleCollection;)V: I12 Branch 2 IFEQ L127 - false
   * 6 gnu.trove.set.hash.TDoubleHashSet.<init>(Lgnu/trove/TDoubleCollection;)V: I36 Branch 3 IFEQ L132 - true
   * 7 gnu.trove.set.hash.TDoubleHashSet.addAll(Lgnu/trove/TDoubleCollection;)Z: I13 Branch 20 IFEQ L275 - true
   * 8 gnu.trove.set.hash.TDoubleHashSet.addAll(Lgnu/trove/TDoubleCollection;)Z: I13 Branch 20 IFEQ L275 - false
   * 9 gnu.trove.set.hash.TDoubleHashSet.addAll(Lgnu/trove/TDoubleCollection;)Z: I24 Branch 21 IFEQ L277 - false
   */

  @Test
  public void test18()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((-1479));
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)42;
      byteArray0[2] = (byte)1;
      tDoubleHashSet0._states = byteArray0;
      TDoubleHashSet tDoubleHashSet1 = new TDoubleHashSet((TDoubleCollection) tDoubleHashSet0);
      boolean boolean0 = tDoubleHashSet1.retainAll((TDoubleCollection) tDoubleHashSet0);
      assertEquals(false, tDoubleHashSet1.isEmpty());
      assertEquals("{0.0}", tDoubleHashSet1.toString());
      assertEquals(23, tDoubleHashSet1.capacity());
      assertEquals(false, boolean0);
      assertEquals(0.0, tDoubleHashSet1.getNoEntryValue(), 0.01D);
  }

  //Test case number: 19
  /*
   * 6 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.retainAll([D)Z: I39 Branch 31 IFGE L337 - false
   * 2 gnu.trove.set.hash.TDoubleHashSet.retainAll([D)Z: I26 Branch 29 IFLE L336 - true
   * 3 gnu.trove.set.hash.TDoubleHashSet.retainAll([D)Z: I26 Branch 29 IFLE L336 - false
   * 4 gnu.trove.set.hash.TDoubleHashSet.retainAll([D)Z: I33 Branch 30 IF_ICMPNE L337 - true
   * 5 gnu.trove.set.hash.TDoubleHashSet.retainAll([D)Z: I33 Branch 30 IF_ICMPNE L337 - false
   * 6 gnu.trove.set.hash.TDoubleHashSet.retainAll([D)Z: I39 Branch 31 IFGE L337 - true
   */

  @Test
  public void test19()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((-265), 1223.3451F);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 1223.3451F;
      tDoubleHashSet0.addAll(doubleArray0);
      doubleArray0[2] = (double) 1223.3451F;
      doubleArray0[3] = (double) 1223.3451F;
      doubleArray0[4] = 1223.3450927734375;
      doubleArray0[1] = (double) (-265);
      doubleArray0[5] = (double) (-265);
      boolean boolean0 = tDoubleHashSet0.retainAll(doubleArray0);
      assertEquals(false, tDoubleHashSet0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 20
  /*
   * 5 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.removeAll(Ljava/util/Collection;)Z: I12 Branch 32 IFEQ L349 - false
   * 2 gnu.trove.set.hash.TDoubleHashSet.removeAll(Ljava/util/Collection;)Z: I20 Branch 33 IFEQ L350 - false
   * 3 gnu.trove.set.hash.TDoubleHashSet.removeAll(Ljava/util/Collection;)Z: I32 Branch 34 IFEQ L352 - true
   * 4 gnu.trove.set.hash.TDoubleHashSet.remove(D)Z: I9 Branch 10 IFLT L209 - true
   * 5 gnu.trove.set.hash.TDoubleHashSet.removeAll(Ljava/util/Collection;)Z: I12 Branch 32 IFEQ L349 - true
   */

  @Test
  public void test20()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((-265), 1223.3451F);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      linkedList0.add((Double) 1223.3450927734375);
      boolean boolean0 = tDoubleHashSet0.removeAll((Collection<?>) linkedList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.set.hash.TDoubleHashSet.removeAll(Ljava/util/Collection;)Z: I20 Branch 33 IFEQ L350 - true
   */

  @Test
  public void test21()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(0, 0);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      linkedList0.add(0, (Double) null);
      boolean boolean0 = tDoubleHashSet0.removeAll((Collection<?>) linkedList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 22
  /*
   * 5 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.removeAll(Ljava/util/Collection;)Z: I32 Branch 34 IFEQ L352 - false
   * 2 gnu.trove.set.hash.TDoubleHashSet.<init>(IF)V: root-Branch
   * 3 gnu.trove.set.hash.TDoubleHashSet.removeAll(Ljava/util/Collection;)Z: I12 Branch 32 IFEQ L349 - true
   * 4 gnu.trove.set.hash.TDoubleHashSet.removeAll(Ljava/util/Collection;)Z: I12 Branch 32 IFEQ L349 - false
   * 5 gnu.trove.set.hash.TDoubleHashSet.removeAll(Ljava/util/Collection;)Z: I20 Branch 33 IFEQ L350 - false
   */

  @Test
  public void test22()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((-265), 1223.3451F);
      double[] doubleArray0 = new double[6];
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      doubleArray0[0] = (double) 1223.3451F;
      tDoubleHashSet0.addAll(doubleArray0);
      linkedList0.add((Double) 1223.3450927734375);
      boolean boolean0 = tDoubleHashSet0.removeAll((Collection<?>) linkedList0);
      assertEquals(1, tDoubleHashSet0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 6 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.removeAll(Lgnu/trove/TDoubleCollection;)Z: I24 Branch 36 IFEQ L367 - true
   * 2 gnu.trove.set.hash.TDoubleHashSet$TDoubleHashIterator.<init>(Lgnu/trove/set/hash/TDoubleHashSet;Lgnu/trove/impl/hash/TDoubleHash;)V: root-Branch
   * 3 gnu.trove.set.hash.TDoubleHashSet$TDoubleHashIterator.next()D: root-Branch
   * 4 gnu.trove.set.hash.TDoubleHashSet.iterator()Lgnu/trove/iterator/TDoubleIterator;: root-Branch
   * 5 gnu.trove.set.hash.TDoubleHashSet.removeAll(Lgnu/trove/TDoubleCollection;)Z: I13 Branch 35 IFEQ L365 - true
   * 6 gnu.trove.set.hash.TDoubleHashSet.removeAll(Lgnu/trove/TDoubleCollection;)Z: I13 Branch 35 IFEQ L365 - false
   */

  @Test
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(0, (float) 0, 0.0);
      TDoubleHashSet tDoubleHashSet1 = new TDoubleHashSet(doubleArray0);
      boolean boolean0 = tDoubleHashSet0.removeAll((TDoubleCollection) tDoubleHashSet1);
      assertEquals(1, tDoubleHashSet1.size());
      assertEquals(false, boolean0);
      assertEquals("{0.0}", tDoubleHashSet1.toString());
  }

  //Test case number: 24
  /*
   * 6 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.removeAll([D)Z: I20 Branch 38 IFEQ L379 - false
   * 2 gnu.trove.set.hash.TDoubleHashSet.removeAll([D)Z: I12 Branch 37 IFLE L378 - true
   * 3 gnu.trove.set.hash.TDoubleHashSet.removeAll([D)Z: I12 Branch 37 IFLE L378 - false
   * 4 gnu.trove.set.hash.TDoubleHashSet.removeAll([D)Z: I20 Branch 38 IFEQ L379 - true
   * 5 gnu.trove.set.hash.TDoubleHashSet.remove(D)Z: I9 Branch 10 IFLT L209 - true
   * 6 gnu.trove.set.hash.TDoubleHashSet.remove(D)Z: I9 Branch 10 IFLT L209 - false
   */

  @Test
  public void test24()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((-1479));
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)42;
      byteArray0[2] = (byte)1;
      tDoubleHashSet0._states = byteArray0;
      boolean boolean0 = tDoubleHashSet0.removeAll(tDoubleHashSet0._set);
      assertEquals(false, tDoubleHashSet0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 25
  /*
   * 2 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.clear()V: I22 Branch 39 IFLE L393 - true
   * 2 gnu.trove.set.hash.TDoubleHashSet.clear()V: I22 Branch 39 IFLE L393 - false
   */

  @Test
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(doubleArray0);
      assertEquals(1, tDoubleHashSet0.size());
      
      tDoubleHashSet0.clear();
      assertEquals("{}", tDoubleHashSet0.toString());
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.set.hash.TDoubleHashSet.equals(Ljava/lang/Object;)Z: I4 Branch 42 IFNE L421 - false
   */

  @Test
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(doubleArray0);
      boolean boolean0 = tDoubleHashSet0.equals((Object) "giapponese (Giappone)");
      assertEquals(1, tDoubleHashSet0.size());
      assertEquals("{0.0}", tDoubleHashSet0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 27
  /*
   * 2 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.equals(Ljava/lang/Object;)Z: I20 Branch 43 IF_ICMPEQ L425 - false
   * 2 gnu.trove.set.hash.TDoubleHashSet.equals(Ljava/lang/Object;)Z: I4 Branch 42 IFNE L421 - true
   */

  @Test
  public void test27()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(0, (float) 0, 0.0);
      TDoubleHashSet tDoubleHashSet1 = new TDoubleHashSet(tDoubleHashSet0._set);
      boolean boolean0 = tDoubleHashSet0.equals((Object) tDoubleHashSet1);
      assertEquals("{0.0}", tDoubleHashSet1.toString());
      assertEquals(1, tDoubleHashSet1.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 28
  /*
   * 6 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.equals(Ljava/lang/Object;)Z: I42 Branch 45 IF_ICMPNE L429 - false
   * 2 gnu.trove.set.hash.TDoubleHashSet.equals(Ljava/lang/Object;)Z: I51 Branch 46 IFNE L430 - true
   * 3 gnu.trove.set.hash.TDoubleHashSet.equals(Ljava/lang/Object;)Z: I34 Branch 44 IFLE L428 - true
   * 4 gnu.trove.set.hash.TDoubleHashSet.equals(Ljava/lang/Object;)Z: I20 Branch 43 IF_ICMPEQ L425 - true
   * 5 gnu.trove.set.hash.TDoubleHashSet.equals(Ljava/lang/Object;)Z: I34 Branch 44 IFLE L428 - false
   * 6 gnu.trove.set.hash.TDoubleHashSet.equals(Ljava/lang/Object;)Z: I42 Branch 45 IF_ICMPNE L429 - true
   */

  @Test
  public void test28()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(0, (float) 0, 0.0);
      tDoubleHashSet0.add((-864.1116586160991));
      boolean boolean0 = tDoubleHashSet0.equals((Object) tDoubleHashSet0);
      assertEquals("{-864.1116586160991}", tDoubleHashSet0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 29
  /*
   * 6 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.equals(Ljava/lang/Object;)Z: I51 Branch 46 IFNE L430 - false
   * 2 gnu.trove.set.hash.TDoubleHashSet.equals(Ljava/lang/Object;)Z: I4 Branch 42 IFNE L421 - true
   * 3 gnu.trove.set.hash.TDoubleHashSet.equals(Ljava/lang/Object;)Z: I20 Branch 43 IF_ICMPEQ L425 - true
   * 4 gnu.trove.set.hash.TDoubleHashSet.equals(Ljava/lang/Object;)Z: I34 Branch 44 IFLE L428 - false
   * 5 gnu.trove.set.hash.TDoubleHashSet.equals(Ljava/lang/Object;)Z: I42 Branch 45 IF_ICMPNE L429 - true
   * 6 gnu.trove.set.hash.TDoubleHashSet.equals(Ljava/lang/Object;)Z: I42 Branch 45 IF_ICMPNE L429 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(0, (float) 0, 0.0);
      TDoubleHashSet tDoubleHashSet1 = new TDoubleHashSet(tDoubleHashSet0._set);
      tDoubleHashSet0.add((-864.1116586160991));
      boolean boolean0 = tDoubleHashSet0.equals((Object) tDoubleHashSet1);
      assertEquals(false, tDoubleHashSet0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 30
  /*
   * 4 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.hashCode()I: I21 Branch 48 IF_ICMPNE L443 - false
   * 2 gnu.trove.set.hash.TDoubleHashSet.hashCode()I: I13 Branch 47 IFLE L442 - true
   * 3 gnu.trove.set.hash.TDoubleHashSet.hashCode()I: I13 Branch 47 IFLE L442 - false
   * 4 gnu.trove.set.hash.TDoubleHashSet.hashCode()I: I21 Branch 48 IF_ICMPNE L443 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((-1479));
      byte[] byteArray0 = new byte[10];
      byteArray0[1] = (byte)1;
      tDoubleHashSet0._states = byteArray0;
      int int0 = tDoubleHashSet0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 31
  /*
   * 11 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.toString()Ljava/lang/String;: I54 Branch 51 IF_ICMPGE L458 - false
   * 2 gnu.trove.set.hash.TDoubleHashSet.rehash(I)V: I35 Branch 40 IFLE L410 - true
   * 3 gnu.trove.set.hash.TDoubleHashSet.rehash(I)V: I35 Branch 40 IFLE L410 - false
   * 4 gnu.trove.set.hash.TDoubleHashSet.rehash(I)V: I42 Branch 41 IF_ICMPNE L411 - true
   * 5 gnu.trove.set.hash.TDoubleHashSet.rehash(I)V: I42 Branch 41 IF_ICMPNE L411 - false
   * 6 gnu.trove.set.hash.TDoubleHashSet.toString()Ljava/lang/String;: I30 Branch 49 IFLE L455 - true
   * 7 gnu.trove.set.hash.TDoubleHashSet.toString()Ljava/lang/String;: I30 Branch 49 IFLE L455 - false
   * 8 gnu.trove.set.hash.TDoubleHashSet.toString()Ljava/lang/String;: I38 Branch 50 IF_ICMPNE L456 - true
   * 9 gnu.trove.set.hash.TDoubleHashSet.toString()Ljava/lang/String;: I38 Branch 50 IF_ICMPNE L456 - false
   * 10 gnu.trove.set.hash.TDoubleHashSet.toString()Ljava/lang/String;: I54 Branch 51 IF_ICMPGE L458 - true
   * 11 gnu.trove.set.hash.TDoubleHashSet.<init>(IFD)V: I12 Branch 1 IFEQ L101 - false
   */

  @Test
  public void test31()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((-1436), (-1436), (-1436));
      tDoubleHashSet0.add((double) (-1436));
      tDoubleHashSet0.add(1648.6425663392592);
      String string0 = tDoubleHashSet0.toString();
      assertEquals(2, tDoubleHashSet0.size());
      assertEquals("{1648.6425663392592,-1436.0}", string0);
  }

  //Test case number: 32
  /*
   * 4 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 52 IFLE L506 - true
   * 2 gnu.trove.set.hash.TDoubleHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 52 IFLE L506 - false
   * 3 gnu.trove.set.hash.TDoubleHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I45 Branch 53 IF_ICMPNE L507 - true
   * 4 gnu.trove.set.hash.TDoubleHashSet.<init>(IFD)V: I12 Branch 1 IFEQ L101 - true
   */

  @Test
  public void test32()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(0, (float) 0, 0.0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) pipedOutputStream0);
      tDoubleHashSet0.writeExternal((ObjectOutput) objectOutputStream0);
  }

  //Test case number: 33
  /*
   * 12 covered goals:
   * 1 gnu.trove.set.hash.TDoubleHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I45 Branch 53 IF_ICMPNE L507 - false
   * 2 gnu.trove.set.hash.TDoubleHashSet.<init>(I)V: root-Branch
   * 3 gnu.trove.set.hash.TDoubleHashSet.<init>([D)V: root-Branch
   * 4 gnu.trove.set.hash.TDoubleHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 52 IFLE L506 - true
   * 5 gnu.trove.set.hash.TDoubleHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 52 IFLE L506 - false
   * 6 gnu.trove.set.hash.TDoubleHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I45 Branch 53 IF_ICMPNE L507 - true
   * 7 gnu.trove.set.hash.TDoubleHashSet.add(D)Z: I9 Branch 9 IFGE L196 - true
   * 8 gnu.trove.set.hash.TDoubleHashSet.add(D)Z: I9 Branch 9 IFGE L196 - false
   * 9 gnu.trove.set.hash.TDoubleHashSet.addAll([D)Z: I12 Branch 22 IFLE L288 - true
   * 10 gnu.trove.set.hash.TDoubleHashSet.addAll([D)Z: I12 Branch 22 IFLE L288 - false
   * 11 gnu.trove.set.hash.TDoubleHashSet.addAll([D)Z: I20 Branch 23 IFEQ L289 - true
   * 12 gnu.trove.set.hash.TDoubleHashSet.addAll([D)Z: I20 Branch 23 IFEQ L289 - false
   */

  @Test
  public void test33()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(doubleArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) pipedOutputStream0);
      tDoubleHashSet0.writeExternal((ObjectOutput) objectOutputStream0);
  }
}

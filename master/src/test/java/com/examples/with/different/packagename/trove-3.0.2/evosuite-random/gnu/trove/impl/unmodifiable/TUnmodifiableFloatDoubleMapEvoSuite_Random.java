/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap;
import gnu.trove.map.TFloatDoubleMap;
import gnu.trove.map.hash.TFloatDoubleHashMap;
import gnu.trove.procedure.TFloatDoubleProcedure;
import java.net.URI;
import java.net.URISyntaxException;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableFloatDoubleMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      float[] floatArray0 = new float[3];
      float float0 = (-1793.0319F);
      floatArray0[0] = float0;
      float float1 = Float.POSITIVE_INFINITY;
      floatArray0[1] = float1;
      float float2 = 485.63608F;
      floatArray0[2] = float2;
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) floatArray0[0];
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(floatArray0, doubleArray0);
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      tUnmodifiableFloatDoubleMap0.values(doubleArray0);
      TFloatDoubleHashMap tFloatDoubleHashMap1 = new TFloatDoubleHashMap();
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap1 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap1);
      tUnmodifiableFloatDoubleMap1.size();
      float float3 = 0.0F;
      String string0 = "e-|E,s.Nf";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: e-|E,s.Nf://e-%7F%7CE,s.Nfe-%7F%7CE,s.Nf?e-%7F%7CE,s.Nf#e-%7F%7CE,s.Nf
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TFloatDoubleMap tFloatDoubleMap0 = null;
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = null;
      try {
        tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap(tFloatDoubleMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = (-1311);
      float float0 = (-1153.2177F);
      float float1 = 0.5F;
      double double0 = 0.0;
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(int0, float0, float1, double0);
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      float[] floatArray0 = tUnmodifiableFloatDoubleMap0.keys();
      assertNotNull(floatArray0);
  }

  @Test
  public void test3()  throws Throwable  {
      TFloatDoubleMap tFloatDoubleMap0 = null;
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = null;
      try {
        tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap(tFloatDoubleMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      float[] floatArray0 = new float[9];
      float float0 = (-556.95374F);
      floatArray0[0] = float0;
      float float1 = 0.0F;
      floatArray0[1] = float1;
      float float2 = (-639.41626F);
      floatArray0[2] = float2;
      float float3 = Float.NEGATIVE_INFINITY;
      floatArray0[3] = float3;
      float float4 = 1.0F;
      floatArray0[4] = float4;
      float float5 = (-1969.7423F);
      floatArray0[5] = float5;
      float float6 = 1.0F;
      floatArray0[6] = float6;
      float float7 = (-1735.3536F);
      floatArray0[7] = float7;
      float float8 = (-1602.3492F);
      floatArray0[8] = float8;
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) floatArray0[1];
      doubleArray0[1] = (double) float3;
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(floatArray0, doubleArray0);
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      TFloatDoubleProcedure tFloatDoubleProcedure0 = null;
      // Undeclared exception!
      try {
        tUnmodifiableFloatDoubleMap0.forEachEntry(tFloatDoubleProcedure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = 0;
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(int0);
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      int int1 = tUnmodifiableFloatDoubleMap0.size();
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) int0;
      doubleArray0[1] = (double) int0;
      doubleArray0[2] = (double) int1;
      doubleArray0[3] = (double) int1;
      doubleArray0[4] = (double) int0;
      doubleArray0[5] = (double) int0;
      double[] doubleArray1 = tUnmodifiableFloatDoubleMap0.values(doubleArray0);
      assertSame(doubleArray0, doubleArray1);
  }

  @Test
  public void test6()  throws Throwable  {
      float[] floatArray0 = new float[8];
      float float0 = 1471.4504F;
      floatArray0[0] = float0;
      float float1 = (-1956.0096F);
      floatArray0[1] = float1;
      float float2 = (-97.62432F);
      floatArray0[2] = float2;
      float float3 = 1703.9673F;
      floatArray0[3] = float3;
      float float4 = Float.NEGATIVE_INFINITY;
      floatArray0[4] = float4;
      float float5 = 0.0F;
      floatArray0[5] = float5;
      float float6 = (-1802.5563F);
      floatArray0[6] = float6;
      float float7 = 0.0F;
      floatArray0[7] = float7;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) floatArray0[1];
      doubleArray0[1] = (double) floatArray0[1];
      double double0 = 0.0;
      doubleArray0[2] = double0;
      doubleArray0[3] = (double) float7;
      doubleArray0[4] = (double) floatArray0[3];
      doubleArray0[5] = (double) floatArray0[0];
      doubleArray0[6] = (double) float6;
      doubleArray0[7] = (double) floatArray0[4];
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(floatArray0, doubleArray0);
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      float[] floatArray1 = tUnmodifiableFloatDoubleMap0.keys();
      assertFalse(floatArray1.equals(floatArray0));
  }

  @Test
  public void test7()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap();
      tFloatDoubleHashMap0.clear();
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      float float0 = 34.328213F;
      double double0 = 0.0;
      float float1 = (-214.73868F);
      double double1 = 1782.1813329100207;
      // Undeclared exception!
      try {
        tUnmodifiableFloatDoubleMap0.put(float1, double1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = (-1);
      int int1 = 0;
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(int1, int1, int1, int0);
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatDoubleMap0.increment((float) int1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      float[] floatArray0 = new float[3];
      float float0 = 1387.4775F;
      floatArray0[0] = float0;
      float float1 = (-1622.9944F);
      floatArray0[1] = float1;
      float float2 = Float.NEGATIVE_INFINITY;
      floatArray0[2] = float2;
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) float1;
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(floatArray0, doubleArray0);
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatDoubleMap0.putAll((TFloatDoubleMap) tFloatDoubleHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = (-1734);
      int int1 = (-1);
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(int1);
      TFloatDoubleHashMap tFloatDoubleHashMap1 = new TFloatDoubleHashMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap1);
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap1 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tUnmodifiableFloatDoubleMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatDoubleMap1.remove((float) int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TFloatDoubleMap tFloatDoubleMap0 = null;
      TFloatDoubleHashMap tFloatDoubleHashMap0 = null;
      try {
        tFloatDoubleHashMap0 = new TFloatDoubleHashMap(tFloatDoubleMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 0;
      float float0 = (-1164.713F);
      float float1 = 0.0F;
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap();
      TFloatDoubleMap tFloatDoubleMap0 = null;
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = null;
      try {
        tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap(tFloatDoubleMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = (-1);
      float float0 = 0.0F;
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(int0, float0, float0, (double) int0);
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      double double0 = (-1.0);
      double double1 = 887.7296625579077;
      // Undeclared exception!
      try {
        tUnmodifiableFloatDoubleMap0.adjustOrPutValue(float0, double0, double1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

//   @Test
//   public void test14()  throws Throwable  {
//       int int0 = 1;
//       float float0 = 115.88741F;
//       float float1 = (-1590.9363F);
//       int int1 = (-2034);
//       TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(int1);
//       TFloatDoubleHashMap tFloatDoubleHashMap1 = new TFloatDoubleHashMap((TFloatDoubleMap) tFloatDoubleHashMap0);
//       TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap1);
//       float[] floatArray0 = tUnmodifiableFloatDoubleMap0.keys(tFloatDoubleHashMap1._set);
//       assertNotNull(floatArray0);
//       
//       double double0 = Double.NEGATIVE_INFINITY;
//       TFloatDoubleHashMap tFloatDoubleHashMap2 = new TFloatDoubleHashMap(int0, float0, float1, double0);
//       TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap1 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap2);
//       float float2 = tUnmodifiableFloatDoubleMap1.getNoEntryKey();
//       assertEquals((-1590.9363F), float2, 0.01F);
//   }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TShortFunction;
import gnu.trove.impl.sync.TSynchronizedCharSet;
import gnu.trove.impl.sync.TSynchronizedCharShortMap;
import gnu.trove.impl.sync.TSynchronizedShortCollection;
import gnu.trove.iterator.TCharShortIterator;
import gnu.trove.map.TCharShortMap;
import gnu.trove.map.hash.TCharShortHashMap;
import gnu.trove.procedure.TCharProcedure;
import gnu.trove.procedure.TCharShortProcedure;
import gnu.trove.procedure.TShortProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedCharShortMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.values()[S: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedCharShortMap.<init>(Lgnu/trove/map/TCharShortMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap(75);
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      short[] shortArray0 = tSynchronizedCharShortMap0.values();
      assertNotNull(shortArray0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.get(C)S: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap();
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      short short0 = tSynchronizedCharShortMap0.get(';');
      assertEquals((short)0, short0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.containsValue(S)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap(75);
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      boolean boolean0 = tSynchronizedCharShortMap0.containsValue((short)0);
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.transformValues(Lgnu/trove/function/TShortFunction;)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap((-379), (-379));
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      tSynchronizedCharShortMap0.transformValues((TShortFunction) null);
      assertEquals(true, tSynchronizedCharShortMap0.isEmpty());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.adjustValue(CS)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedCharShortMap.<init>(Lgnu/trove/map/TCharShortMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap((int) (short) (-448));
      Character character0 = new Character('\u0010');
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0, (Object) character0);
      boolean boolean0 = tSynchronizedCharShortMap0.adjustValue('\u0010', (short) (-448));
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.adjustOrPutValue(CSS)S: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap((int) (short) (-448));
      Character character0 = new Character('\u0010');
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0, (Object) character0);
      short short0 = tSynchronizedCharShortMap0.adjustOrPutValue((char) character0, (short) (-448), (short) (-448));
      assertEquals(1, tCharShortHashMap0.size());
      assertEquals((short) (-448), short0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap((-379), (-379));
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      boolean boolean0 = tSynchronizedCharShortMap0.equals((Object) "NULL");
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.hashCode()I: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap((-379), (-379));
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      int int0 = tSynchronizedCharShortMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.remove(C)S: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap();
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      short short0 = tSynchronizedCharShortMap0.remove(';');
      assertEquals((short)0, short0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.containsKey(C)Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap();
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      boolean boolean0 = tSynchronizedCharShortMap0.containsKey(';');
      assertEquals(false, boolean0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.getNoEntryValue()S: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap();
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      short short0 = tSynchronizedCharShortMap0.getNoEntryValue();
      assertEquals((short)0, short0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.clear()V: root-Branch
   */

//   @Test
//   public void test11()  throws Throwable  {
//       TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap();
//       TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0, (Object) "");
//       tSynchronizedCharShortMap0.clear();
//       assertEquals(0, tSynchronizedCharShortMap0.getNoEntryValue());
//   }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap();
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      boolean boolean0 = tSynchronizedCharShortMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.put(CS)S: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap();
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      tSynchronizedCharShortMap0.put(';', (short) (-1));
      assertEquals(1, tCharShortHashMap0.size());
      assertEquals("{;=-1}", tSynchronizedCharShortMap0.toString());
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.putIfAbsent(CS)S: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap();
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      tSynchronizedCharShortMap0.putIfAbsent(';', (short)0);
      assertEquals(false, tCharShortHashMap0.isEmpty());
      assertEquals("{;=0}", tSynchronizedCharShortMap0.toString());
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.increment(C)Z: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap();
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0, (Object) "");
      boolean boolean0 = tSynchronizedCharShortMap0.increment('3');
      assertEquals(false, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap();
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      boolean boolean0 = tSynchronizedCharShortMap0.forEachValue((TShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.keys([C)[C: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap();
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      char[] charArray0 = tSynchronizedCharShortMap0.keys(tCharShortHashMap0._set);
      assertNotNull(charArray0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.forEachEntry(Lgnu/trove/procedure/TCharShortProcedure;)Z: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap(724);
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      boolean boolean0 = tSynchronizedCharShortMap0.forEachEntry((TCharShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.size()I: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap();
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      int int0 = tSynchronizedCharShortMap0.size();
      assertEquals(0, int0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap();
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      String string0 = tSynchronizedCharShortMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap(0);
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      HashMap<Character, Short> hashMap0 = new HashMap<Character, Short>();
      tSynchronizedCharShortMap0.putAll((Map<? extends Character, ? extends Short>) hashMap0);
      assertEquals(true, tSynchronizedCharShortMap0.isEmpty());
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.keys()[C: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap(724);
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      char[] charArray0 = tSynchronizedCharShortMap0.keys();
      assertNotNull(charArray0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.values([S)[S: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap();
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      short[] shortArray0 = new short[10];
      short[] shortArray1 = tSynchronizedCharShortMap0.values(shortArray0);
      assertSame(shortArray1, shortArray0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.retainEntries(Lgnu/trove/procedure/TCharShortProcedure;)Z: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap();
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      boolean boolean0 = tSynchronizedCharShortMap0.retainEntries((TCharShortProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 25
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.putAll(Lgnu/trove/map/TCharShortMap;)V: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedCharShortMap.<init>(Lgnu/trove/map/TCharShortMap;Ljava/lang/Object;)V: root-Branch
   */

//   @Test
//   public void test25()  throws Throwable  {
//       TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap();
//       TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0, (Object) "");
//       tSynchronizedCharShortMap0.putAll((TCharShortMap) tCharShortHashMap0);
//       assertEquals(0, tSynchronizedCharShortMap0.getNoEntryValue());
//   }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.iterator()Lgnu/trove/iterator/TCharShortIterator;: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap();
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      TCharShortIterator tCharShortIterator0 = tSynchronizedCharShortMap0.iterator();
      assertEquals(false, tCharShortIterator0.hasNext());
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap(0);
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      boolean boolean0 = tSynchronizedCharShortMap0.forEachKey((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.getNoEntryKey()C: root-Branch
   */

  @Test
  public void test28()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap();
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      char char0 = tSynchronizedCharShortMap0.getNoEntryKey();
      assertEquals('\u0000', char0);
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.<init>(Lgnu/trove/map/TCharShortMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = null;
      try {
        tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.keySet()Lgnu/trove/set/TCharSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedCharShortMap.keySet()Lgnu/trove/set/TCharSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test30()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap();
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      TSynchronizedCharSet tSynchronizedCharSet0 = (TSynchronizedCharSet)tSynchronizedCharShortMap0.keySet();
      assertNotNull(tSynchronizedCharSet0);
      
      TSynchronizedCharSet tSynchronizedCharSet1 = (TSynchronizedCharSet)tSynchronizedCharShortMap0.keySet();
      assertSame(tSynchronizedCharSet1, tSynchronizedCharSet0);
  }

  //Test case number: 31
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharShortMap.valueCollection()Lgnu/trove/TShortCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 gnu.trove.impl.sync.TSynchronizedCharShortMap.valueCollection()Lgnu/trove/TShortCollection;: I11 Branch 3 IFNONNULL L121 - false
   * 3 gnu.trove.impl.sync.TSynchronizedCharShortMap.<init>(Lgnu/trove/map/TCharShortMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap(724);
      TSynchronizedCharShortMap tSynchronizedCharShortMap0 = new TSynchronizedCharShortMap((TCharShortMap) tCharShortHashMap0);
      TSynchronizedShortCollection tSynchronizedShortCollection0 = (TSynchronizedShortCollection)tSynchronizedCharShortMap0.valueCollection();
      assertNotNull(tSynchronizedShortCollection0);
      
      TSynchronizedShortCollection tSynchronizedShortCollection1 = (TSynchronizedShortCollection)tSynchronizedCharShortMap0.valueCollection();
      assertSame(tSynchronizedShortCollection1, tSynchronizedShortCollection0);
  }
}

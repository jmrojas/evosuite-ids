/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TByteCollection;
import gnu.trove.impl.sync.TSynchronizedByteCollection;
import gnu.trove.impl.sync.TSynchronizedByteSet;
import gnu.trove.impl.sync.TSynchronizedRandomAccessByteList;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessByteList;
import gnu.trove.list.TByteList;
import gnu.trove.list.array.TByteArrayList;
import gnu.trove.set.TByteSet;
import gnu.trove.set.hash.TByteHashSet;
import java.io.File;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Locale;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedByteSetEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TByteSet tByteSet0 = null;
      String string0 = "y4MCl$i+9xTaw+";
      int int0 = 1598;
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, int0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: y4MCl$i+9xTaw+://y4MCl$i+9xTaw+@y4MCl$i+9xTaw+:1598y4MCl$i+9xTaw+?y4MCl$i+9xTaw+#y4MCl$i+9xTaw+
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = (-269);
      float float0 = 10.0F;
      TByteHashSet tByteHashSet0 = new TByteHashSet(int0, float0);
      TSynchronizedByteSet tSynchronizedByteSet0 = new TSynchronizedByteSet((TByteSet) tByteHashSet0);
      TSynchronizedByteSet tSynchronizedByteSet1 = (TSynchronizedByteSet)tSynchronizedByteSet0.mutex;
      tSynchronizedByteSet0.equals((Object) tSynchronizedByteSet1);
      TByteSet tByteSet0 = null;
      TSynchronizedByteSet tSynchronizedByteSet2 = null;
      try {
        tSynchronizedByteSet2 = new TSynchronizedByteSet(tByteSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = 144;
      float float0 = 0.0F;
      byte byte0 = (byte)75;
      TByteHashSet tByteHashSet0 = new TByteHashSet(int0, float0, byte0);
      TSynchronizedByteSet tSynchronizedByteSet0 = new TSynchronizedByteSet((TByteSet) tByteHashSet0);
      tSynchronizedByteSet0.iterator();
      TByteHashSet tByteHashSet1 = new TByteHashSet();
      TSynchronizedByteSet tSynchronizedByteSet1 = new TSynchronizedByteSet((TByteSet) tByteHashSet1);
      tSynchronizedByteSet1.iterator();
      int int1 = (-1508);
      byte[] byteArray0 = new byte[2];
      byte byte1 = (byte)49;
      byteArray0[0] = byte1;
      byte byte2 = (byte)125;
      byteArray0[1] = byte2;
      TByteHashSet tByteHashSet2 = new TByteHashSet(byteArray0);
      TSynchronizedByteSet tSynchronizedByteSet2 = new TSynchronizedByteSet((TByteSet) tByteHashSet2);
      tSynchronizedByteSet2.remove(byteArray0[0]);
      float float1 = 1029.1311F;
      byte byte3 = (byte)0;
      TByteHashSet tByteHashSet3 = new TByteHashSet(int1, float1, byte3);
      String string0 = "!b=fV[&{IQRL,Qw87";
      String string1 = "Values of NaN are not supported.";
      Locale locale0 = new Locale(string0, string1, string1);
      Locale locale1 = Locale.KOREAN;
      String string2 = locale0.getDisplayLanguage(locale1);
      TSynchronizedByteSet tSynchronizedByteSet3 = new TSynchronizedByteSet((TByteSet) tByteHashSet3, (Object) string2);
      String string3 = tSynchronizedByteSet3.toString();
      assertFalse(string2.equals(string3));
  }

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte) (-1);
      float float0 = (-1804.0149F);
      TByteHashSet tByteHashSet0 = new TByteHashSet((int) byte0, float0);
      String string0 = File.separator;
      TSynchronizedByteSet tSynchronizedByteSet0 = new TSynchronizedByteSet((TByteSet) tByteHashSet0, (Object) string0);
      tSynchronizedByteSet0.toArray();
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-42);
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-77);
      byteArray0[2] = byte2;
      byte byte3 = (byte)27;
      byteArray0[3] = byte3;
      TByteHashSet tByteHashSet1 = new TByteHashSet(byteArray0);
      String string1 = "/KgU";
      Locale locale0 = new Locale(string1, string1, string1);
      String string2 = locale0.getDisplayScript();
      TSynchronizedByteSet tSynchronizedByteSet1 = new TSynchronizedByteSet((TByteSet) tByteHashSet1, (Object) string2);
      boolean boolean0 = tSynchronizedByteSet1.removeAll(byteArray0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      TByteHashSet tByteHashSet0 = new TByteHashSet();
      Object object0 = null;
      TSynchronizedByteSet tSynchronizedByteSet0 = new TSynchronizedByteSet((TByteSet) tByteHashSet0, object0);
      // Undeclared exception!
      try {
        tSynchronizedByteSet0.removeAll(tByteHashSet0._set);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte) (-106);
      byteArray0[0] = byte0;
      byte byte1 = (byte)31;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-28);
      byteArray0[2] = byte2;
      byte byte3 = (byte)63;
      byteArray0[3] = byte3;
      byte byte4 = (byte)0;
      byteArray0[4] = byte4;
      byte byte5 = (byte)0;
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, byte5);
      TUnmodifiableRandomAccessByteList tUnmodifiableRandomAccessByteList0 = new TUnmodifiableRandomAccessByteList((TByteList) tByteArrayList0);
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tUnmodifiableRandomAccessByteList0);
      int int0 = 1963;
      int int1 = 1327;
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessByteList0.subList(int0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // end index 1327 greater than begin index 1963
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TByteSet tByteSet0 = null;
      TUnmodifiableByteCollection tUnmodifiableByteCollection0 = null;
      try {
        tUnmodifiableByteCollection0 = new TUnmodifiableByteCollection((TByteCollection) tByteSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-39);
      byteArray0[0] = byte0;
      byte byte1 = (byte)14;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-19);
      byteArray0[2] = byte2;
      byte byte3 = (byte)55;
      byteArray0[3] = byte3;
      byte byte4 = (byte)97;
      byteArray0[4] = byte4;
      byte byte5 = (byte)25;
      byteArray0[5] = byte5;
      TByteHashSet tByteHashSet0 = new TByteHashSet(byteArray0);
      TSynchronizedByteSet tSynchronizedByteSet0 = new TSynchronizedByteSet((TByteSet) tByteHashSet0);
      boolean boolean0 = tSynchronizedByteSet0.containsAll(byteArray0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = 1500;
      TByteHashSet tByteHashSet0 = new TByteHashSet(int0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      tByteHashSet0.removeAll((Collection<?>) linkedList0);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      tByteHashSet0.containsAll((Collection<?>) linkedList1);
      TSynchronizedByteSet tSynchronizedByteSet0 = new TSynchronizedByteSet((TByteSet) tByteHashSet0);
      Object object0 = null;
      TSynchronizedByteSet tSynchronizedByteSet1 = new TSynchronizedByteSet((TByteSet) tSynchronizedByteSet0, object0);
      // Undeclared exception!
      try {
        tSynchronizedByteSet1.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)66;
      int int0 = 0;
      TByteHashSet tByteHashSet0 = new TByteHashSet(int0, (float) byte0);
      TUnmodifiableByteSet tUnmodifiableByteSet0 = new TUnmodifiableByteSet((TByteSet) tByteHashSet0);
      TSynchronizedByteSet tSynchronizedByteSet0 = new TSynchronizedByteSet((TByteSet) tUnmodifiableByteSet0);
      byteArray0[0] = byte0;
      byte byte1 = (byte)7;
      byteArray0[1] = byte1;
      byte byte2 = (byte)60;
      byteArray0[2] = byte2;
      byte byte3 = (byte)40;
      byteArray0[3] = byte3;
      byte byte4 = (byte)65;
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-81);
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-74);
      byteArray0[6] = byte6;
      byte byte7 = (byte)1;
      byteArray0[7] = byte7;
      byte byte8 = (byte)0;
      byteArray0[8] = byte8;
      // Undeclared exception!
      try {
        tSynchronizedByteSet0.retainAll((TByteCollection) tUnmodifiableByteSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = 0;
      TByteHashSet tByteHashSet0 = new TByteHashSet(int0);
      TUnmodifiableByteSet tUnmodifiableByteSet0 = new TUnmodifiableByteSet((TByteSet) tByteHashSet0);
      TSynchronizedByteSet tSynchronizedByteSet0 = new TSynchronizedByteSet((TByteSet) tUnmodifiableByteSet0);
      tSynchronizedByteSet0.hashCode();
      // Undeclared exception!
      try {
        tUnmodifiableByteSet0.addAll((TByteCollection) tSynchronizedByteSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 1818;
      TByteHashSet tByteHashSet0 = new TByteHashSet(int0, int0);
      TSynchronizedByteSet tSynchronizedByteSet0 = new TSynchronizedByteSet((TByteSet) tByteHashSet0);
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)1;
      byteArray0[1] = byte1;
      byte byte2 = (byte)1;
      byteArray0[2] = byte2;
      byte byte3 = (byte)43;
      byteArray0[3] = byte3;
      byte byte4 = (byte)0;
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-32);
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-73);
      byteArray0[6] = byte6;
      boolean boolean0 = tSynchronizedByteSet0.retainAll(byteArray0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)104;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte)51;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-31);
      byteArray0[3] = byte3;
      byte byte4 = (byte)0;
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-1);
      byteArray0[5] = byte5;
      TByteHashSet tByteHashSet0 = new TByteHashSet(byteArray0);
      Object object0 = null;
      TSynchronizedByteSet tSynchronizedByteSet0 = new TSynchronizedByteSet((TByteSet) tByteHashSet0, object0);
      String string0 = tByteHashSet0.toString();
      TSynchronizedByteSet tSynchronizedByteSet1 = new TSynchronizedByteSet((TByteSet) tSynchronizedByteSet0, (Object) string0);
      byte byte6 = (byte)96;
      // Undeclared exception!
      try {
        tSynchronizedByteSet1.add(byte6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byte byte0 = (byte) (-80);
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte)1;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-33);
      byteArray0[3] = byte3;
      byte byte4 = (byte)0;
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-69);
      byteArray0[5] = byte5;
      byte byte6 = (byte)1;
      byteArray0[6] = byte6;
      byte byte7 = (byte) (-1);
      byteArray0[7] = byte7;
      byte byte8 = (byte)0;
      byteArray0[8] = byte8;
      byte byte9 = (byte) (-43);
      byteArray0[9] = byte9;
      TByteHashSet tByteHashSet0 = new TByteHashSet(byteArray0);
      TSynchronizedByteSet tSynchronizedByteSet0 = new TSynchronizedByteSet((TByteSet) tByteHashSet0);
      Locale locale0 = Locale.GERMAN;
      String string0 = locale0.getDisplayVariant();
      TSynchronizedByteSet tSynchronizedByteSet1 = new TSynchronizedByteSet((TByteSet) tByteHashSet0, (Object) string0);
      boolean boolean0 = tSynchronizedByteSet0.removeAll(byteArray0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      locale0.getUnicodeLocaleAttributes();
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-79);
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-1);
      byteArray0[1] = byte1;
      byte byte2 = (byte)63;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-25);
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-1);
      byteArray0[4] = byte4;
      byte byte5 = (byte)1;
      byteArray0[5] = byte5;
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, byteArray0[0]);
      String string0 = locale0.getDisplayScript();
      TSynchronizedByteCollection tSynchronizedByteCollection0 = new TSynchronizedByteCollection((TByteCollection) tByteArrayList0, (Object) string0);
      TByteHashSet tByteHashSet0 = new TByteHashSet((TByteCollection) tSynchronizedByteCollection0);
      TSynchronizedByteSet tSynchronizedByteSet0 = new TSynchronizedByteSet((TByteSet) tByteHashSet0);
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://?#
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = 0;
      float float0 = (-184.91766F);
      TByteHashSet tByteHashSet0 = new TByteHashSet(int0, float0);
      TSynchronizedByteSet tSynchronizedByteSet0 = new TSynchronizedByteSet((TByteSet) tByteHashSet0);
      String string0 = tSynchronizedByteSet0.toString();
      TSynchronizedByteSet tSynchronizedByteSet1 = new TSynchronizedByteSet((TByteSet) tByteHashSet0, (Object) string0);
      boolean boolean0 = tSynchronizedByteSet1.retainAll((TByteCollection) tByteHashSet0);
      assertEquals(false, boolean0);
  }
}

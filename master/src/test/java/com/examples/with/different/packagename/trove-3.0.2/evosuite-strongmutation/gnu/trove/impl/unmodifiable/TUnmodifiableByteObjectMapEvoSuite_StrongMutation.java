/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteSet;
import gnu.trove.map.TByteObjectMap;
import gnu.trove.map.hash.TByteObjectHashMap;
import gnu.trove.procedure.TByteObjectProcedure;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import java.util.Collection;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableByteObjectMapEvoSuite_StrongMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 5 covered goals:
   * 1 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.size()I:58 - DeleteStatement: size()I
   * 2 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.<init>(Lgnu/trove/map/TByteObjectMap;)V:53 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.size()I:58 - DeleteStatement: size()I
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.size()I: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.<init>(Lgnu/trove/map/TByteObjectMap;)V: I17 Branch 1 IFNONNULL L53 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TByteObjectHashMap<Object> tByteObjectHashMap0 = new TByteObjectHashMap<Object>();
      TUnmodifiableByteObjectMap<Object> tUnmodifiableByteObjectMap0 = new TUnmodifiableByteObjectMap<Object>((TByteObjectMap<Object>) tByteObjectHashMap0);
      tUnmodifiableByteObjectMap0.size();
      tByteObjectHashMap0.putIfAbsent((byte)0, (Object) null);
      TUnmodifiableByteObjectMap<Object> tUnmodifiableByteObjectMap1 = new TUnmodifiableByteObjectMap<Object>((TByteObjectMap<Object>) tByteObjectHashMap0);
      assertEquals(1, tUnmodifiableByteObjectMap1.size());
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * 1 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.isEmpty()Z:59 - DeleteStatement: isEmpty()Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.isEmpty()Z: root-Branch
   * 3 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.isEmpty()Z:59 - DeleteStatement: isEmpty()Z
   */

  @Test
  public void test1()  throws Throwable  {
      TByteObjectHashMap<Byte> tByteObjectHashMap0 = new TByteObjectHashMap<Byte>(0, (float) 0, (byte) (-39));
      TUnmodifiableByteObjectMap<Byte> tUnmodifiableByteObjectMap0 = new TUnmodifiableByteObjectMap<Byte>((TByteObjectMap<Byte>) tByteObjectHashMap0);
      boolean boolean0 = tUnmodifiableByteObjectMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.containsKey(B)Z:60 - InsertUnaryOp IINC -1 key
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.containsKey(B)Z: root-Branch
   * 3 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.containsKey(B)Z:60 - InsertUnaryOp IINC -1 key
   */

  @Test
  public void test2()  throws Throwable  {
      TByteObjectHashMap<Integer> tByteObjectHashMap0 = new TByteObjectHashMap<Integer>(2004663929, 2004663929);
      TUnmodifiableByteObjectMap<Integer> tUnmodifiableByteObjectMap0 = new TUnmodifiableByteObjectMap<Integer>((TByteObjectMap<Integer>) tByteObjectHashMap0);
      tByteObjectHashMap0.putIfAbsent((byte)0, (Integer) 2004663929);
      boolean boolean0 = tUnmodifiableByteObjectMap0.containsKey((byte)1);
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 9 covered goals:
   * 1 Strong Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.get(B)Ljava/lang/Object;:62 - DeleteStatement: get(B)Ljava/lang/Object;
   * 2 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.get(B)Ljava/lang/Object;:62 - DeleteField: mLgnu/trove/map/TByteObjectMap;
   * 3 Strong Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.get(B)Ljava/lang/Object;:62 - InsertUnaryOp IINC -1 key
   * 4 Strong Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.get(B)Ljava/lang/Object;:62 - InsertUnaryOp IINC 1 key
   * 5 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.get(B)Ljava/lang/Object;:62 - DeleteField: mLgnu/trove/map/TByteObjectMap;
   * 6 Strong Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.get(B)Ljava/lang/Object;:62 - InsertUnaryOp IINC -1 key
   * 7 Strong Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.get(B)Ljava/lang/Object;:62 - InsertUnaryOp IINC 1 key
   * 8 Strong Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.get(B)Ljava/lang/Object;:62 - DeleteStatement: get(B)Ljava/lang/Object;
   * 9 gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.get(B)Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TByteObjectHashMap<Object> tByteObjectHashMap0 = new TByteObjectHashMap<Object>(1, (float) 0, (byte)111);
      TUnmodifiableByteObjectMap<Object> tUnmodifiableByteObjectMap0 = new TUnmodifiableByteObjectMap<Object>((TByteObjectMap<Object>) tByteObjectHashMap0);
      tByteObjectHashMap0.put((byte)0, (Object) "");
      String string0 = (String)tUnmodifiableByteObjectMap0.get((byte)0);
      assertEquals("", string0);
  }

  //Test case number: 4
  /*
   * 5 covered goals:
   * 1 Strong Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.keys()[B:78 - DeleteStatement: keys()[B
   * 2 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.keys()[B:78 - DeleteField: mLgnu/trove/map/TByteObjectMap;
   * 3 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.keys()[B:78 - DeleteField: mLgnu/trove/map/TByteObjectMap;
   * 4 Strong Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.keys()[B:78 - DeleteStatement: keys()[B
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.keys()[B: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TByteObjectHashMap<Object> tByteObjectHashMap0 = new TByteObjectHashMap<Object>();
      TUnmodifiableByteObjectMap<Object> tUnmodifiableByteObjectMap0 = new TUnmodifiableByteObjectMap<Object>((TByteObjectMap<Object>) tByteObjectHashMap0);
      byte[] byteArray0 = tUnmodifiableByteObjectMap0.keys();
      assertNotNull(byteArray0);
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.keys([B)[B:79 - DeleteField: mLgnu/trove/map/TByteObjectMap;
   * 2 Strong Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.keys([B)[B:79 - DeleteStatement: keys([B)[B
   * 3 Strong Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.keys([B)[B:79 - DeleteStatement: keys([B)[B
   * 4 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.keys([B)[B:79 - DeleteField: mLgnu/trove/map/TByteObjectMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.keys([B)[B: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TByteObjectHashMap<Byte> tByteObjectHashMap0 = new TByteObjectHashMap<Byte>((-1538), 675.8345F);
      TUnmodifiableByteObjectMap<Byte> tUnmodifiableByteObjectMap0 = new TUnmodifiableByteObjectMap<Byte>((TByteObjectMap<Byte>) tByteObjectHashMap0);
      TByteObjectHashMap<Integer> tByteObjectHashMap1 = new TByteObjectHashMap<Integer>((-1538), (-32.699203F));
      byte[] byteArray0 = tUnmodifiableByteObjectMap0.keys(tByteObjectHashMap1._states);
      assertNotNull(byteArray0);
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.values()[Ljava/lang/Object;:86 - DeleteField: mLgnu/trove/map/TByteObjectMap;
   * 2 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.values()[Ljava/lang/Object;:86 - DeleteStatement: values()[Ljava/lang/Object;
   * 3 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.values()[Ljava/lang/Object;:86 - DeleteStatement: values()[Ljava/lang/Object;
   * 4 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.values()[Ljava/lang/Object;:86 - DeleteField: mLgnu/trove/map/TByteObjectMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.values()[Ljava/lang/Object;: root-Branch
   */

//   @Test
//   public void test6()  throws Throwable  {
//       TByteObjectHashMap<String> tByteObjectHashMap0 = new TByteObjectHashMap<String>((int) (byte)0, (float) (byte)0, (byte)0);
//       TUnmodifiableByteObjectMap<String> tUnmodifiableByteObjectMap0 = new TUnmodifiableByteObjectMap<String>((TByteObjectMap<String>) tByteObjectHashMap0);
//       String[] stringArray0 = tUnmodifiableByteObjectMap0.values();
//       assertNotNull(stringArray0);
//   }

  //Test case number: 7
  /*
   * 5 covered goals:
   * 1 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.values([Ljava/lang/Object;)[Ljava/lang/Object;:87 - DeleteStatement: values([Ljava/lang/Object;)[Ljava/lang/Object;
   * 2 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.values([Ljava/lang/Object;)[Ljava/lang/Object;:87 - DeleteField: mLgnu/trove/map/TByteObjectMap;
   * 3 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.values([Ljava/lang/Object;)[Ljava/lang/Object;:87 - DeleteField: mLgnu/trove/map/TByteObjectMap;
   * 4 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.values([Ljava/lang/Object;)[Ljava/lang/Object;:87 - DeleteStatement: values([Ljava/lang/Object;)[Ljava/lang/Object;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TByteObjectHashMap<Byte> tByteObjectHashMap0 = new TByteObjectHashMap<Byte>((-1), (float) (-1), (byte)127);
      TUnmodifiableByteObjectMap<Byte> tUnmodifiableByteObjectMap0 = new TUnmodifiableByteObjectMap<Byte>((TByteObjectMap<Byte>) tByteObjectHashMap0);
      Byte[] byteArray0 = new Byte[10];
      Byte[] byteArray1 = tUnmodifiableByteObjectMap0.values(byteArray0);
      assertSame(byteArray0, byteArray1);
  }

  //Test case number: 8
  /*
   * 7 covered goals:
   * 1 Strong Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.equals(Ljava/lang/Object;)Z:89 - ReplaceConstant - 1 -> 0
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L89 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L89 - false
   * 4 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.equals(Ljava/lang/Object;)Z:89 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 5 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.equals(Ljava/lang/Object;)Z:89 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 6 Strong Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.equals(Ljava/lang/Object;)Z:89 - ReplaceConstant - 1 -> 0
   * 7 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test8()  throws Throwable  {
      TByteObjectHashMap<Integer> tByteObjectHashMap0 = new TByteObjectHashMap<Integer>(0);
      TUnmodifiableByteObjectMap<Integer> tUnmodifiableByteObjectMap0 = new TUnmodifiableByteObjectMap<Integer>((TByteObjectMap<Integer>) tByteObjectHashMap0);
      TByteObjectHashMap<Object> tByteObjectHashMap1 = new TByteObjectHashMap<Object>(474, (float) 474, (byte)0);
      TUnmodifiableByteObjectMap<Object> tUnmodifiableByteObjectMap1 = new TUnmodifiableByteObjectMap<Object>((TByteObjectMap<Object>) tByteObjectHashMap1);
      boolean boolean0 = tUnmodifiableByteObjectMap1.equals((Object) tUnmodifiableByteObjectMap0);
      assertEquals(true, boolean0);
  }

  //Test case number: 9
  /*
   * 7 covered goals:
   * 1 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> !=
   * 2 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> !=
   * 3 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.equals(Ljava/lang/Object;)Z:89 - ReplaceConstant - 0 -> 1
   * 4 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> !=
   * 5 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.equals(Ljava/lang/Object;)Z:89 - ReplaceConstant - 0 -> 1
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L89 - false
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L89 - true
   */

  @Test
  public void test9()  throws Throwable  {
      TByteObjectHashMap<Integer> tByteObjectHashMap0 = new TByteObjectHashMap<Integer>((-1538), (-32.699203F));
      TUnmodifiableByteObjectMap<Integer> tUnmodifiableByteObjectMap0 = new TUnmodifiableByteObjectMap<Integer>((TByteObjectMap<Integer>) tByteObjectHashMap0);
      boolean boolean0 = tUnmodifiableByteObjectMap0.equals((Object) "CN");
      assertEquals(false, boolean0);
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.toString()Ljava/lang/String;:91 - DeleteField: mLgnu/trove/map/TByteObjectMap;
   * 2 Strong Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.toString()Ljava/lang/String;:91 - DeleteStatement: toString()Ljava/lang/String;
   * 3 Strong Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.toString()Ljava/lang/String;:91 - DeleteStatement: toString()Ljava/lang/String;
   * 4 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.toString()Ljava/lang/String;:91 - DeleteField: mLgnu/trove/map/TByteObjectMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TByteObjectHashMap<Byte> tByteObjectHashMap0 = new TByteObjectHashMap<Byte>();
      TUnmodifiableByteObjectMap<Byte> tUnmodifiableByteObjectMap0 = new TUnmodifiableByteObjectMap<Byte>((TByteObjectMap<Byte>) tByteObjectHashMap0);
      String string0 = tUnmodifiableByteObjectMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 11
  /*
   * 3 covered goals:
   * 1 Strong Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.getNoEntryKey()B:92 - DeleteStatement: getNoEntryKey()B
   * 2 Strong Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.getNoEntryKey()B:92 - DeleteStatement: getNoEntryKey()B
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.getNoEntryKey()B: root-Branch
   */

//   @Test
//   public void test11()  throws Throwable  {
//       TByteObjectHashMap<Integer> tByteObjectHashMap0 = new TByteObjectHashMap<Integer>(0);
//       TUnmodifiableByteObjectMap<Integer> tUnmodifiableByteObjectMap0 = new TUnmodifiableByteObjectMap<Integer>((TByteObjectMap<Integer>) tByteObjectHashMap0);
//       tUnmodifiableByteObjectMap0.getNoEntryKey();
//       TByteObjectHashMap<String> tByteObjectHashMap1 = new TByteObjectHashMap<String>(474, (float) 474, (byte)127);
//       TUnmodifiableByteObjectMap<String> tUnmodifiableByteObjectMap1 = new TUnmodifiableByteObjectMap<String>((TByteObjectMap<String>) tByteObjectHashMap1);
//       assertEquals(127, tUnmodifiableByteObjectMap1.getNoEntryKey());
//   }

  //Test case number: 12
  /*
   * 3 covered goals:
   * 1 Strong Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z:95 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   * 3 Strong Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z:95 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z
   */

  @Test
  public void test12()  throws Throwable  {
      TByteObjectHashMap<Integer> tByteObjectHashMap0 = new TByteObjectHashMap<Integer>((-383), (-383));
      TUnmodifiableByteObjectMap<Integer> tUnmodifiableByteObjectMap0 = new TUnmodifiableByteObjectMap<Integer>((TByteObjectMap<Integer>) tByteObjectHashMap0);
      boolean boolean0 = tUnmodifiableByteObjectMap0.forEachKey((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 7 covered goals:
   * 1 Strong Mutation 60: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z:98 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   * 3 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.size()I:58 - DeleteField: mLgnu/trove/map/TByteObjectMap;
   * 4 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.getNoEntryKey()B:92 - DeleteField: mLgnu/trove/map/TByteObjectMap;
   * 5 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.forEachEntry(Lgnu/trove/procedure/TByteObjectProcedure;)Z:101 - DeleteField: mLgnu/trove/map/TByteObjectMap;
   * 6 Strong Mutation 60: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z:98 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.forEachEntry(Lgnu/trove/procedure/TByteObjectProcedure;)Z: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TByteObjectHashMap<Integer> tByteObjectHashMap0 = new TByteObjectHashMap<Integer>();
      TUnmodifiableByteObjectMap<Integer> tUnmodifiableByteObjectMap0 = new TUnmodifiableByteObjectMap<Integer>((TByteObjectMap<Integer>) tByteObjectHashMap0);
      TByteObjectHashMap<Object> tByteObjectHashMap1 = new TByteObjectHashMap<Object>((TByteObjectMap<?>) tUnmodifiableByteObjectMap0);
      TUnmodifiableByteObjectMap<Object> tUnmodifiableByteObjectMap1 = new TUnmodifiableByteObjectMap<Object>((TByteObjectMap<Object>) tByteObjectHashMap1);
      Object[] objectArray0 = new Object[7];
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
      boolean boolean0 = tUnmodifiableByteObjectMap1.forEachValue((TObjectProcedure<? super Object>) toObjectArrayProceedure0);
      assertEquals(true, boolean0);
  }

  //Test case number: 14
  /*
   * 2 covered goals:
   * 1 Strong Mutation 62: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.forEachEntry(Lgnu/trove/procedure/TByteObjectProcedure;)Z:101 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TByteObjectProcedure;)Z
   * 2 Strong Mutation 62: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.forEachEntry(Lgnu/trove/procedure/TByteObjectProcedure;)Z:101 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TByteObjectProcedure;)Z
   */

  @Test
  public void test14()  throws Throwable  {
      TByteObjectHashMap<Object> tByteObjectHashMap0 = new TByteObjectHashMap<Object>(0, 0);
      TUnmodifiableByteObjectMap<Object> tUnmodifiableByteObjectMap0 = new TUnmodifiableByteObjectMap<Object>((TByteObjectMap<Object>) tByteObjectHashMap0);
      boolean boolean0 = tUnmodifiableByteObjectMap0.forEachEntry((TByteObjectProcedure<? super Object>) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 15
  /*
   * 3 covered goals:
   * 1 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.forEachEntry(Lgnu/trove/procedure/TByteObjectProcedure;)Z:101 - DeleteField: mLgnu/trove/map/TByteObjectMap;
   * 2 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.size()I:58 - DeleteField: mLgnu/trove/map/TByteObjectMap;
   * 3 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.getNoEntryKey()B:92 - DeleteField: mLgnu/trove/map/TByteObjectMap;
   */

//   @Test
//   public void test15()  throws Throwable  {
//       TByteObjectHashMap<Integer> tByteObjectHashMap0 = new TByteObjectHashMap<Integer>();
//       TUnmodifiableByteObjectMap<Integer> tUnmodifiableByteObjectMap0 = new TUnmodifiableByteObjectMap<Integer>((TByteObjectMap<Integer>) tByteObjectHashMap0);
//       TByteObjectHashMap<Object> tByteObjectHashMap1 = new TByteObjectHashMap<Object>((TByteObjectMap<?>) tUnmodifiableByteObjectMap0);
//       assertEquals(0, tByteObjectHashMap1.getNoEntryKey());
//   }

  //Test case number: 16
  /*
   * 12 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.keySet()Lgnu/trove/set/TByteSet;: I4 Branch 2 IFNONNULL L74 - true
   * 2 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.keySet()Lgnu/trove/set/TByteSet;:75 - DeleteField: mLgnu/trove/map/TByteObjectMap;
   * 3 Strong Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.keySet()Lgnu/trove/set/TByteSet;:74 - ReplaceComparisonOperator != null -> = null
   * 4 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.keySet()Lgnu/trove/set/TByteSet;:75 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TByteSet;)Lgnu/trove/set/TByteSet;
   * 5 Strong Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.keySet()Lgnu/trove/set/TByteSet;:75 - DeleteStatement: keySet()Lgnu/trove/set/TByteSet;
   * 6 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.keySet()Lgnu/trove/set/TByteSet;:76 - DeleteField: keySetLgnu/trove/set/TByteSet;
   * 7 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.keySet()Lgnu/trove/set/TByteSet;:75 - DeleteField: mLgnu/trove/map/TByteObjectMap;
   * 8 Strong Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.keySet()Lgnu/trove/set/TByteSet;:74 - ReplaceComparisonOperator != null -> = null
   * 9 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.keySet()Lgnu/trove/set/TByteSet;:75 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TByteSet;)Lgnu/trove/set/TByteSet;
   * 10 Strong Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.keySet()Lgnu/trove/set/TByteSet;:75 - DeleteStatement: keySet()Lgnu/trove/set/TByteSet;
   * 11 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.keySet()Lgnu/trove/set/TByteSet;:76 - DeleteField: keySetLgnu/trove/set/TByteSet;
   * 12 gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.keySet()Lgnu/trove/set/TByteSet;: I4 Branch 2 IFNONNULL L74 - false
   */

  @Test
  public void test16()  throws Throwable  {
      TByteObjectHashMap<String> tByteObjectHashMap0 = new TByteObjectHashMap<String>(762);
      TUnmodifiableByteObjectMap<String> tUnmodifiableByteObjectMap0 = new TUnmodifiableByteObjectMap<String>((TByteObjectMap<String>) tByteObjectHashMap0);
      TUnmodifiableByteSet tUnmodifiableByteSet0 = (TUnmodifiableByteSet)tUnmodifiableByteObjectMap0.keySet();
      assertNotNull(tUnmodifiableByteSet0);
      
      TUnmodifiableByteSet tUnmodifiableByteSet1 = (TUnmodifiableByteSet)tUnmodifiableByteObjectMap0.keySet();
      assertSame(tUnmodifiableByteSet1, tUnmodifiableByteSet0);
  }

  //Test case number: 17
  /*
   * 13 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.valueCollection()Ljava/util/Collection;: I4 Branch 3 IFNONNULL L82 - true
   * 2 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.<init>(Lgnu/trove/map/TByteObjectMap;)V:53 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.valueCollection()Ljava/util/Collection;:83 - DeleteStatement: valueCollection()Ljava/util/Collection;
   * 4 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.valueCollection()Ljava/util/Collection;:83 - DeleteStatement: unmodifiableCollection(Ljava/util/Collection;)Ljava/util/Collection;
   * 5 Strong Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.valueCollection()Ljava/util/Collection;:82 - ReplaceComparisonOperator != null -> = null
   * 6 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.valueCollection()Ljava/util/Collection;:83 - DeleteField: mLgnu/trove/map/TByteObjectMap;
   * 7 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.valueCollection()Ljava/util/Collection;:84 - DeleteField: valuesLjava/util/Collection;
   * 8 Strong Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.valueCollection()Ljava/util/Collection;:83 - DeleteStatement: valueCollection()Ljava/util/Collection;
   * 9 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.valueCollection()Ljava/util/Collection;:83 - DeleteStatement: unmodifiableCollection(Ljava/util/Collection;)Ljava/util/Collection;
   * 10 Strong Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.valueCollection()Ljava/util/Collection;:82 - ReplaceComparisonOperator != null -> = null
   * 11 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.valueCollection()Ljava/util/Collection;:83 - DeleteField: mLgnu/trove/map/TByteObjectMap;
   * 12 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.valueCollection()Ljava/util/Collection;:84 - DeleteField: valuesLjava/util/Collection;
   * 13 gnu.trove.impl.unmodifiable.TUnmodifiableByteObjectMap.valueCollection()Ljava/util/Collection;: I4 Branch 3 IFNONNULL L82 - false
   */

  @Test
  public void test17()  throws Throwable  {
      TByteObjectHashMap<Integer> tByteObjectHashMap0 = new TByteObjectHashMap<Integer>(2004663929, (-1.0F), (byte)1);
      TUnmodifiableByteObjectMap<Integer> tUnmodifiableByteObjectMap0 = new TUnmodifiableByteObjectMap<Integer>((TByteObjectMap<Integer>) tByteObjectHashMap0);
      Collection<Integer> collection0 = tUnmodifiableByteObjectMap0.valueCollection();
      assertNotNull(collection0);
      
      Collection<Integer> collection1 = tUnmodifiableByteObjectMap0.valueCollection();
      assertSame(collection1, collection0);
  }
}

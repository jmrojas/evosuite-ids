/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.iterator.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.hash.TObjectHash;
import gnu.trove.iterator.hash.TObjectHashIterator;
import gnu.trove.map.TObjectByteMap;
import gnu.trove.map.TObjectFloatMap;
import gnu.trove.map.custom_hash.TObjectByteCustomHashMap;
import gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap;
import gnu.trove.map.custom_hash.TObjectFloatCustomHashMap;
import gnu.trove.map.custom_hash.TObjectIntCustomHashMap;
import gnu.trove.map.custom_hash.TObjectLongCustomHashMap;
import gnu.trove.map.hash.TCustomHashMap;
import gnu.trove.map.hash.THashMap;
import gnu.trove.map.hash.TObjectByteHashMap;
import gnu.trove.map.hash.TObjectFloatHashMap;
import gnu.trove.map.hash.TObjectShortHashMap;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.set.hash.TCustomHashSet;
import gnu.trove.set.hash.TLinkedHashSet;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.util.ConcurrentModificationException;
import java.util.NoSuchElementException;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TObjectHashIteratorEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int0 = 693;
      short short0 = (short) (-349);
      TObjectShortHashMap<Integer> tObjectShortHashMap0 = new TObjectShortHashMap<Integer>(int0, (float) int0, short0);
      int int1 = 6;
      PipedInputStream pipedInputStream0 = new PipedInputStream(int1);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TCustomHashSet<Object> tCustomHashSet0 = new TCustomHashSet<Object>();
      TObjectHashIterator<Object> tObjectHashIterator0 = tCustomHashSet0.iterator();
      // Undeclared exception!
      try {
        tObjectHashIterator0.remove();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 23
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      int int0 = 0;
      TLinkedHashSet<Object> tLinkedHashSet0 = new TLinkedHashSet<Object>(int0);
      tLinkedHashSet0.iterator();
      IdentityHashingStrategy<Object> identityHashingStrategy1 = new IdentityHashingStrategy<Object>();
      int int1 = (-15);
      TObjectDoubleCustomHashMap<String> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy1, int1);
      TObjectHashIterator<String> tObjectHashIterator0 = new TObjectHashIterator<String>((TObjectHash<String>) tObjectDoubleCustomHashMap0);
      // Undeclared exception!
      try {
        tObjectHashIterator0.remove();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = (-1832);
      TObjectHash<Object> tObjectHash0 = null;
      TObjectHashIterator<Object> tObjectHashIterator0 = null;
      try {
        tObjectHashIterator0 = new TObjectHashIterator<Object>(tObjectHash0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int0 = 1704;
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, int0);
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap1 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectByteMap<?>) tObjectByteCustomHashMap0);
      TObjectHashIterator<Object> tObjectHashIterator0 = new TObjectHashIterator<Object>((TObjectHash<Object>) tObjectByteCustomHashMap1);
      boolean boolean0 = tObjectHashIterator0.hasNext();
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = (-1);
      float float0 = (-1525.3895F);
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int1 = 1451;
      float float1 = 860.8506F;
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, int1, float1, float0);
      TObjectHashIterator<Object> tObjectHashIterator0 = new TObjectHashIterator<Object>((TObjectHash<Object>) tObjectFloatCustomHashMap0);
      THashMap<Integer, Object> tHashMap0 = new THashMap<Integer, Object>();
      TObjectHashIterator<Integer> tObjectHashIterator1 = new TObjectHashIterator<Integer>((TObjectHash<Integer>) tHashMap0);
      // Undeclared exception!
      try {
        tObjectHashIterator1.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      HashingStrategy<Object> hashingStrategy0 = null;
      int int0 = 1;
      float float0 = 0.0F;
      byte byte0 = (byte) (-81);
      TObjectByteHashMap<Integer> tObjectByteHashMap0 = new TObjectByteHashMap<Integer>(int0, (float) int0, byte0);
      TObjectHashIterator<Integer> tObjectHashIterator0 = new TObjectHashIterator<Integer>((TObjectHash<Integer>) tObjectByteHashMap0);
      // Undeclared exception!
      try {
        tObjectHashIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TObjectFloatHashMap<String> tObjectFloatHashMap0 = new TObjectFloatHashMap<String>();
      TObjectHashIterator<String> tObjectHashIterator0 = new TObjectHashIterator<String>((TObjectHash<String>) tObjectFloatHashMap0);
      // Undeclared exception!
      try {
        tObjectHashIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = 75;
      int int1 = (-114);
      THashMap<Integer, Object> tHashMap0 = new THashMap<Integer, Object>(int1);
      TObjectHashIterator<Integer> tObjectHashIterator0 = new TObjectHashIterator<Integer>((TObjectHash<Integer>) tHashMap0);
      tObjectHashIterator0.hasNext();
      TObjectShortHashMap<Integer> tObjectShortHashMap0 = new TObjectShortHashMap<Integer>(int0);
      TObjectHashIterator<Integer> tObjectHashIterator1 = new TObjectHashIterator<Integer>((TObjectHash<Integer>) tObjectShortHashMap0);
      // Undeclared exception!
      try {
        tObjectHashIterator1.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TObjectHash<Integer> tObjectHash0 = null;
      TObjectLongCustomHashMap<Object> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Object>();
      TObjectHashIterator<Integer> tObjectHashIterator0 = null;
      try {
        tObjectHashIterator0 = new TObjectHashIterator<Integer>(tObjectHash0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = (-1815);
      THashMap<Integer, Object> tHashMap0 = new THashMap<Integer, Object>(int0);
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tHashMap0._set);
      tHashMap0.forEachValue((TObjectProcedure<? super Object>) toObjectArrayProceedure0);
      TObjectHashIterator<Integer> tObjectHashIterator0 = new TObjectHashIterator<Integer>((TObjectHash<Integer>) tHashMap0);
      TLinkedHashSet<Object> tLinkedHashSet0 = new TLinkedHashSet<Object>();
      String string0 = tLinkedHashSet0.toString();
      tHashMap0.put((Integer) int0, (Object) string0);
      // Undeclared exception!
      try {
        tObjectHashIterator0.hasNext();
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int0 = 146;
      TObjectIntCustomHashMap<Object> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, int0, (float) int0, int0);
      TObjectHashIterator<Object> tObjectHashIterator0 = new TObjectHashIterator<Object>((TObjectHash<Object>) tObjectIntCustomHashMap0);
      int int1 = 0;
      float float0 = (-1740.927F);
      // Undeclared exception!
      try {
        tObjectHashIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      HashingStrategy<Object> hashingStrategy0 = null;
      int int0 = 807;
      TObjectByteCustomHashMap<String> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<String>((HashingStrategy<? super String>) hashingStrategy0, int0);
      TObjectHashIterator<String> tObjectHashIterator0 = new TObjectHashIterator<String>((TObjectHash<String>) tObjectByteCustomHashMap0);
      // Undeclared exception!
      try {
        tObjectHashIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TCustomHashSet<Object> tCustomHashSet0 = new TCustomHashSet<Object>();
      TObjectHashIterator<Object> tObjectHashIterator0 = tCustomHashSet0.iterator();
      // Undeclared exception!
      try {
        tObjectHashIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      HashingStrategy<Object> hashingStrategy0 = null;
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>(hashingStrategy0);
      TObjectHashIterator<Integer> tObjectHashIterator0 = new TObjectHashIterator<Integer>((TObjectHash<Integer>) tObjectDoubleCustomHashMap0);
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>();
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap1 = new TObjectFloatCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectFloatMap<?>) tObjectFloatCustomHashMap0);
      TObjectHashIterator<Object> tObjectHashIterator1 = new TObjectHashIterator<Object>((TObjectHash<Object>) tObjectFloatCustomHashMap0);
      // Undeclared exception!
      try {
        tObjectHashIterator1.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int0 = 6;
      TObjectHash<Object> tObjectHash0 = null;
      TObjectHashIterator<Object> tObjectHashIterator0 = null;
      try {
        tObjectHashIterator0 = new TObjectHashIterator<Object>(tObjectHash0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      HashingStrategy<Integer> hashingStrategy0 = null;
      int int0 = 0;
      TCustomHashMap<Integer, Object> tCustomHashMap0 = new TCustomHashMap<Integer, Object>(hashingStrategy0);
      TObjectHashIterator<Integer> tObjectHashIterator0 = new TObjectHashIterator<Integer>((TObjectHash<Integer>) tCustomHashMap0);
      // Undeclared exception!
      try {
        tObjectHashIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

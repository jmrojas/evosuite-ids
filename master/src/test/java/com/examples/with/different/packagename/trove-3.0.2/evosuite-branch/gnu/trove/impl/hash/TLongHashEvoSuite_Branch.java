/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.map.hash.TLongObjectHashMap;
import gnu.trove.procedure.TLongProcedure;
import gnu.trove.set.hash.TLongHashSet;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TLongHashEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.hash.TLongHash.setUp(I)I: root-Branch
   * 2 gnu.trove.impl.hash.TLongHash.<init>(IFJ)V: I16 Branch 4 IFEQ L122 - false
   */

  @Test
  public void test0()  throws Throwable  {
      TLongHashSet tLongHashSet0 = new TLongHashSet((-1063), (-1063), (-1063));
      assertEquals((-1063L), tLongHashSet0.getNoEntryValue());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.hash.TLongHash.getNoEntryValue()J: root-Branch
   * 2 gnu.trove.impl.hash.TLongHash.<init>(IF)V: I17 Branch 3 IFEQ L103 - true
   */

  @Test
  public void test1()  throws Throwable  {
      TLongObjectHashMap<String> tLongObjectHashMap0 = new TLongObjectHashMap<String>(1336, 1336);
      long long0 = tLongObjectHashMap0.getNoEntryValue();
      assertEquals(0L, long0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.hash.TLongHash.<init>(IFJ)V: I16 Branch 4 IFEQ L122 - true
   */

  @Test
  public void test2()  throws Throwable  {
      TLongHashSet tLongHashSet0 = new TLongHashSet(0, 0, 0);
      assertEquals(0L, tLongHashSet0.getNoEntryValue());
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.hash.TLongHash.contains(J)Z: I5 Branch 5 IFLT L163 - true
   * 2 gnu.trove.impl.hash.TLongHash.index(J)I: I37 Branch 9 IFNE L213 - false
   * 3 gnu.trove.impl.hash.TLongHash.<init>(I)V: I16 Branch 2 IFEQ L85 - true
   */

  @Test
  public void test3()  throws Throwable  {
      TLongObjectHashMap<Object> tLongObjectHashMap0 = new TLongObjectHashMap<Object>(Integer.MAX_VALUE);
      boolean boolean0 = tLongObjectHashMap0.containsKey((long) Integer.MAX_VALUE);
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 9 covered goals:
   * 1 gnu.trove.impl.hash.TLongHash.contains(J)Z: I5 Branch 5 IFLT L163 - false
   * 2 gnu.trove.impl.hash.TLongHash.index(J)I: I52 Branch 11 IFNE L216 - false
   * 3 gnu.trove.impl.hash.TLongHash.insertKeyAt(IJ)V: root-Branch
   * 4 gnu.trove.impl.hash.TLongHash.insertKey(J)I: I30 Branch 17 IFNE L263 - true
   * 5 gnu.trove.impl.hash.TLongHash.insertKey(J)I: I30 Branch 17 IFNE L263 - false
   * 6 gnu.trove.impl.hash.TLongHash.insertKey(J)I: I50 Branch 18 IF_ICMPNE L270 - false
   * 7 gnu.trove.impl.hash.TLongHash.insertKey(J)I: I57 Branch 19 IFNE L270 - false
   * 8 gnu.trove.impl.hash.TLongHash.index(J)I: I37 Branch 9 IFNE L213 - true
   * 9 gnu.trove.impl.hash.TLongHash.index(J)I: I46 Branch 10 IF_ICMPNE L216 - false
   */

  @Test
  public void test4()  throws Throwable  {
      long[] longArray0 = new long[5];
      TLongHashSet tLongHashSet0 = new TLongHashSet(longArray0);
      boolean boolean0 = tLongHashSet0.containsAll(longArray0);
      assertEquals(true, boolean0);
      assertEquals(1, tLongHashSet0.size());
  }

  //Test case number: 5
  /*
   * 4 covered goals:
   * 1 gnu.trove.impl.hash.TLongHash.forEach(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 6 IFLE L177 - true
   * 2 gnu.trove.impl.hash.TLongHash.forEach(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 6 IFLE L177 - false
   * 3 gnu.trove.impl.hash.TLongHash.forEach(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 7 IF_ICMPNE L178 - true
   * 4 gnu.trove.impl.hash.TLongHash.<init>()V: I15 Branch 1 IFEQ L68 - true
   */

  @Test
  public void test5()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>();
      boolean boolean0 = tLongObjectHashMap0.forEach((TLongProcedure) null);
      assertEquals(true, boolean0);
      assertEquals(23, tLongObjectHashMap0.capacity());
  }

  //Test case number: 6
  /*
   * 4 covered goals:
   * 1 gnu.trove.impl.hash.TLongHash.forEach(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 7 IF_ICMPNE L178 - false
   * 2 gnu.trove.impl.hash.TLongHash.insertKey(J)I: I57 Branch 19 IFNE L270 - false
   * 3 gnu.trove.impl.hash.TLongHash.forEach(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 6 IFLE L177 - false
   * 4 gnu.trove.impl.hash.TLongHash.forEach(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 7 IF_ICMPNE L178 - true
   */

  @Test
  public void test6()  throws Throwable  {
      TLongObjectHashMap<String> tLongObjectHashMap0 = new TLongObjectHashMap<String>(1336, 1336);
      TLongHashSet tLongHashSet0 = new TLongHashSet(tLongObjectHashMap0._set);
      // Undeclared exception!
      try {
        tLongHashSet0.forEach((TLongProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 19 covered goals:
   * 1 gnu.trove.impl.hash.TLongHash.index(J)I: I52 Branch 11 IFNE L216 - true
   * 2 gnu.trove.impl.hash.TLongHash.indexRehashed(JIIB)I: I29 Branch 12 IFGE L230 - true
   * 3 gnu.trove.impl.hash.TLongHash.indexRehashed(JIIB)I: I46 Branch 13 IFNE L235 - true
   * 4 gnu.trove.impl.hash.TLongHash.indexRehashed(JIIB)I: I59 Branch 14 IFNE L239 - false
   * 5 gnu.trove.impl.hash.TLongHash.indexRehashed(JIIB)I: I62 Branch 15 IF_ICMPEQ L239 - true
   * 6 gnu.trove.impl.hash.TLongHash.indexRehashed(JIIB)I: I62 Branch 15 IF_ICMPEQ L239 - false
   * 7 gnu.trove.impl.hash.TLongHash.indexRehashed(JIIB)I: I71 Branch 16 IF_ICMPNE L241 - true
   * 8 gnu.trove.impl.hash.TLongHash.insertKey(J)I: I57 Branch 19 IFNE L270 - true
   * 9 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I28 Branch 20 IF_ICMPNE L290 - true
   * 10 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I45 Branch 22 IFGE L294 - false
   * 11 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I62 Branch 23 IFNE L300 - true
   * 12 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I62 Branch 23 IFNE L300 - false
   * 13 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I67 Branch 24 IF_ICMPEQ L301 - true
   * 14 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I97 Branch 25 IF_ICMPNE L311 - false
   * 15 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I104 Branch 26 IFNE L311 - false
   * 16 gnu.trove.impl.hash.TLongHash.removeAt(I)V: root-Branch
   * 17 gnu.trove.impl.hash.TLongHash.index(J)I: I46 Branch 10 IF_ICMPNE L216 - false
   * 18 gnu.trove.impl.hash.TLongHash.indexRehashed(JIIB)I: I29 Branch 12 IFGE L230 - false
   * 19 gnu.trove.impl.hash.TLongHash.indexRehashed(JIIB)I: I46 Branch 13 IFNE L235 - false
   */

  @Test
  public void test7()  throws Throwable  {
      long[] longArray0 = new long[9];
      longArray0[8] = (-1L);
      TLongHashSet tLongHashSet0 = new TLongHashSet(longArray0);
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>(1856, 1856, 1856);
      boolean boolean0 = tLongHashSet0.removeAll(tLongObjectHashMap0._set);
      assertEquals(true, boolean0);
      assertEquals("{-1}", tLongHashSet0.toString());
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.hash.TLongHash.indexRehashed(JIIB)I: I59 Branch 14 IFNE L239 - true
   * 2 gnu.trove.impl.hash.TLongHash.indexRehashed(JIIB)I: I46 Branch 13 IFNE L235 - false
   * 3 gnu.trove.impl.hash.TLongHash.index(J)I: I46 Branch 10 IF_ICMPNE L216 - true
   */

  @Test
  public void test8()  throws Throwable  {
      TLongObjectHashMap<Object> tLongObjectHashMap0 = new TLongObjectHashMap<Object>(Integer.MAX_VALUE);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)2;
      tLongObjectHashMap0._states = byteArray0;
      boolean boolean0 = tLongObjectHashMap0.containsKey((long) Integer.MAX_VALUE);
      assertEquals(false, boolean0);
  }

  //Test case number: 9
  /*
   * 9 covered goals:
   * 1 gnu.trove.impl.hash.TLongHash.indexRehashed(JIIB)I: I71 Branch 16 IF_ICMPNE L241 - false
   * 2 gnu.trove.impl.hash.TLongHash.contains(J)Z: I5 Branch 5 IFLT L163 - true
   * 3 gnu.trove.impl.hash.TLongHash.index(J)I: I37 Branch 9 IFNE L213 - true
   * 4 gnu.trove.impl.hash.TLongHash.index(J)I: I46 Branch 10 IF_ICMPNE L216 - true
   * 5 gnu.trove.impl.hash.TLongHash.indexRehashed(JIIB)I: I29 Branch 12 IFGE L230 - true
   * 6 gnu.trove.impl.hash.TLongHash.indexRehashed(JIIB)I: I29 Branch 12 IFGE L230 - false
   * 7 gnu.trove.impl.hash.TLongHash.indexRehashed(JIIB)I: I46 Branch 13 IFNE L235 - true
   * 8 gnu.trove.impl.hash.TLongHash.indexRehashed(JIIB)I: I59 Branch 14 IFNE L239 - true
   * 9 gnu.trove.impl.hash.TLongHash.indexRehashed(JIIB)I: I71 Branch 16 IF_ICMPNE L241 - true
   */

  @Test
  public void test9()  throws Throwable  {
      TLongObjectHashMap<Object> tLongObjectHashMap0 = new TLongObjectHashMap<Object>(Integer.MAX_VALUE);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      tLongObjectHashMap0._states = byteArray0;
      boolean boolean0 = tLongObjectHashMap0.containsKey((long) Integer.MAX_VALUE);
      assertEquals(false, boolean0);
  }

  //Test case number: 10
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I31 Branch 21 IF_ICMPNE L290 - true
   * 2 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I97 Branch 25 IF_ICMPNE L311 - true
   * 3 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I116 Branch 27 IF_ICMPNE L316 - true
   * 4 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I67 Branch 24 IF_ICMPEQ L301 - false
   * 5 gnu.trove.impl.hash.TLongHash.insertKey(J)I: I50 Branch 18 IF_ICMPNE L270 - true
   * 6 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I28 Branch 20 IF_ICMPNE L290 - false
   * 7 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I31 Branch 21 IF_ICMPNE L290 - false
   * 8 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I45 Branch 22 IFGE L294 - true
   */

  @Test
  public void test10()  throws Throwable  {
      TLongObjectHashMap<Object> tLongObjectHashMap0 = new TLongObjectHashMap<Object>(Integer.MAX_VALUE);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      tLongObjectHashMap0._states = byteArray0;
      tLongObjectHashMap0.putIfAbsent((long) (byte)2, (Object) "");
      assertEquals(1, tLongObjectHashMap0.size());
      assertEquals("{2=}", tLongObjectHashMap0.toString());
  }

  //Test case number: 11
  /*
   * 9 covered goals:
   * 1 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I104 Branch 26 IFNE L311 - true
   * 2 gnu.trove.impl.hash.TLongHash.<init>(IF)V: I17 Branch 3 IFEQ L103 - true
   * 3 gnu.trove.impl.hash.TLongHash.insertKey(J)I: I30 Branch 17 IFNE L263 - false
   * 4 gnu.trove.impl.hash.TLongHash.insertKey(J)I: I50 Branch 18 IF_ICMPNE L270 - false
   * 5 gnu.trove.impl.hash.TLongHash.insertKey(J)I: I57 Branch 19 IFNE L270 - true
   * 6 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I62 Branch 23 IFNE L300 - false
   * 7 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I67 Branch 24 IF_ICMPEQ L301 - true
   * 8 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I97 Branch 25 IF_ICMPNE L311 - false
   * 9 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I104 Branch 26 IFNE L311 - false
   */

  @Test
  public void test11()  throws Throwable  {
      TLongHashSet tLongHashSet0 = new TLongHashSet(1793, 1793);
      long[] longArray0 = new long[5];
      longArray0[2] = (long) 1793;
      longArray0[3] = (-624L);
      longArray0[4] = (-1053L);
      tLongHashSet0.addAll(longArray0);
      assertEquals(false, tLongHashSet0.isEmpty());
      assertEquals("{0,-1053,1793,-624}", tLongHashSet0.toString());
  }

  //Test case number: 12
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I116 Branch 27 IF_ICMPNE L316 - false
   * 2 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I121 Branch 28 IF_ICMPEQ L320 - true
   * 3 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I28 Branch 20 IF_ICMPNE L290 - true
   */

  @Test
  public void test12()  throws Throwable  {
      TLongObjectHashMap<Object> tLongObjectHashMap0 = new TLongObjectHashMap<Object>(Integer.MAX_VALUE);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      tLongObjectHashMap0._states = byteArray0;
      // Undeclared exception!
      try {
        tLongObjectHashMap0.putIfAbsent((long) (byte) (-1), (Object) "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No free or removed slots available. Key set full?!!
         //
      }
  }

  //Test case number: 13
  /*
   * 15 covered goals:
   * 1 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I121 Branch 28 IF_ICMPEQ L320 - false
   * 2 gnu.trove.impl.hash.TLongHash.setUp(I)I: root-Branch
   * 3 gnu.trove.impl.hash.TLongHash.insertKeyAt(IJ)V: root-Branch
   * 4 gnu.trove.impl.hash.TLongHash.<init>(I)V: I16 Branch 2 IFEQ L85 - true
   * 5 gnu.trove.impl.hash.TLongHash.insertKey(J)I: I30 Branch 17 IFNE L263 - true
   * 6 gnu.trove.impl.hash.TLongHash.insertKey(J)I: I50 Branch 18 IF_ICMPNE L270 - true
   * 7 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I28 Branch 20 IF_ICMPNE L290 - false
   * 8 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I31 Branch 21 IF_ICMPNE L290 - true
   * 9 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I31 Branch 21 IF_ICMPNE L290 - false
   * 10 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I45 Branch 22 IFGE L294 - true
   * 11 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I45 Branch 22 IFGE L294 - false
   * 12 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I62 Branch 23 IFNE L300 - true
   * 13 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I97 Branch 25 IF_ICMPNE L311 - true
   * 14 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I116 Branch 27 IF_ICMPNE L316 - true
   * 15 gnu.trove.impl.hash.TLongHash.insertKeyRehash(JIIB)I: I116 Branch 27 IF_ICMPNE L316 - false
   */

  @Test
  public void test13()  throws Throwable  {
      TLongObjectHashMap<Object> tLongObjectHashMap0 = new TLongObjectHashMap<Object>(Integer.MAX_VALUE);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      tLongObjectHashMap0._states = byteArray0;
      tLongObjectHashMap0.putIfAbsent((long) (byte)2, (Object) "");
      assertEquals(false, tLongObjectHashMap0.isEmpty());
      assertEquals(1, tLongObjectHashMap0.size());
  }
}

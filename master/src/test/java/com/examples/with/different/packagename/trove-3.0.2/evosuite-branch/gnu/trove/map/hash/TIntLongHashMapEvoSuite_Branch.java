/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TLongFunction;
import gnu.trove.map.TIntLongMap;
import gnu.trove.map.hash.TIntLongHashMap;
import gnu.trove.procedure.TIntLongProcedure;
import gnu.trove.procedure.TIntProcedure;
import gnu.trove.procedure.TLongProcedure;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TIntLongHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap$TKeyView.<init>(Lgnu/trove/map/hash/TIntLongHashMap;)V: root-Branch
   * 2 gnu.trove.map.hash.TIntLongHashMap.keySet()Lgnu/trove/set/TIntSet;: root-Branch
   * 3 gnu.trove.map.hash.TIntLongHashMap.<init>(I)V: root-Branch
   * 4 gnu.trove.map.hash.TIntLongHashMap.setUp(I)I: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(1995);
      tIntLongHashMap0.keySet();
      assertEquals(4177, tIntLongHashMap0.capacity());
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.valueCollection()Lgnu/trove/TLongCollection;: root-Branch
   * 2 gnu.trove.map.hash.TIntLongHashMap$TValueView.<init>(Lgnu/trove/map/hash/TIntLongHashMap;)V: root-Branch
   * 3 gnu.trove.map.hash.TIntLongHashMap.<init>()V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      tIntLongHashMap0.valueCollection();
      assertEquals(23, tIntLongHashMap0.capacity());
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.increment(I)Z: root-Branch
   * 2 gnu.trove.map.hash.TIntLongHashMap.adjustValue(IJ)Z: I9 Branch 71 IFGE L477 - false
   * 3 gnu.trove.map.hash.TIntLongHashMap.<init>(IF)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap((-2000), (-2000));
      boolean boolean0 = tIntLongHashMap0.increment(218);
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.forEachKey(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   * 2 gnu.trove.map.hash.TIntLongHashMap.put(IJ)J: root-Branch
   * 3 gnu.trove.map.hash.TIntLongHashMap.<init>([I[J)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 4 gnu.trove.map.hash.TIntLongHashMap.<init>([I[J)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 5 gnu.trove.map.hash.TIntLongHashMap.doPut(IJI)J: I12 Branch 40 IFGE L214 - true
   * 6 gnu.trove.map.hash.TIntLongHashMap.doPut(IJI)J: I12 Branch 40 IFGE L214 - false
   * 7 gnu.trove.map.hash.TIntLongHashMap.doPut(IJI)J: I41 Branch 41 IFEQ L221 - true
   * 8 gnu.trove.map.hash.TIntLongHashMap.doPut(IJI)J: I41 Branch 41 IFEQ L221 - false
   */

  @Test
  public void test3()  throws Throwable  {
      int[] intArray0 = new int[4];
      long[] longArray0 = new long[3];
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(intArray0, longArray0);
      // Undeclared exception!
      try {
        tIntLongHashMap0.forEachKey((TIntProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TIntLongHashMap.containsKey(I)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      tIntLongHashMap0.containsKey((-1));
      assertEquals(23, tIntLongHashMap0.capacity());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TIntLongHashMap.clear()V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      tIntLongHashMap0.clear();
      assertEquals(23, tIntLongHashMap0.capacity());
      assertEquals("{}", tIntLongHashMap0.toString());
  }

  //Test case number: 6
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.removeAt(I)V: root-Branch
   * 2 gnu.trove.map.hash.TIntLongHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 3 gnu.trove.map.hash.TIntLongHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 4 gnu.trove.map.hash.TIntLongHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 5 gnu.trove.map.hash.TIntLongHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 6 gnu.trove.map.hash.TIntLongHashMap.remove(I)J: I14 Branch 46 IFLT L276 - false
   * 7 gnu.trove.map.hash.TIntLongHashMap.adjustOrPutValue(IJJ)J: I9 Branch 72 IFGE L491 - true
   * 8 gnu.trove.map.hash.TIntLongHashMap.adjustOrPutValue(IJJ)J: I58 Branch 73 IFEQ L502 - false
   */

  @Test
  public void test6()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap((-2000), (-2000));
      tIntLongHashMap0.adjustOrPutValue(15, (-2000), (-2000));
      assertEquals(1, tIntLongHashMap0.size());
      
      long long0 = tIntLongHashMap0.remove(15);
      assertEquals((-2000L), long0);
  }

  //Test case number: 7
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.<init>(Lgnu/trove/map/TIntLongMap;)V: I10 Branch 34 IFEQ L133 - false
   * 2 gnu.trove.map.hash.TIntLongHashMap.<init>(Lgnu/trove/map/TIntLongMap;)V: I38 Branch 35 IFEQ L139 - true
   * 3 gnu.trove.map.hash.TIntLongHashMap.<init>(Lgnu/trove/map/TIntLongMap;)V: I52 Branch 36 IFEQ L143 - true
   * 4 gnu.trove.map.hash.TIntLongHashMap$TIntLongHashIterator.value()J: root-Branch
   * 5 gnu.trove.map.hash.TIntLongHashMap$TIntLongHashIterator.key()I: root-Branch
   * 6 gnu.trove.map.hash.TIntLongHashMap$TIntLongHashIterator.advance()V: root-Branch
   * 7 gnu.trove.map.hash.TIntLongHashMap$TIntLongHashIterator.<init>(Lgnu/trove/map/hash/TIntLongHashMap;Lgnu/trove/map/hash/TIntLongHashMap;)V: root-Branch
   * 8 gnu.trove.map.hash.TIntLongHashMap.iterator()Lgnu/trove/iterator/TIntLongIterator;: root-Branch
   * 9 gnu.trove.map.hash.TIntLongHashMap.putAll(Lgnu/trove/map/TIntLongMap;)V: I15 Branch 43 IFEQ L243 - true
   * 10 gnu.trove.map.hash.TIntLongHashMap.putAll(Lgnu/trove/map/TIntLongMap;)V: I15 Branch 43 IFEQ L243 - false
   */

  @Test
  public void test7()  throws Throwable  {
      int[] intArray0 = new int[4];
      long[] longArray0 = new long[3];
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(intArray0, longArray0);
      TIntLongHashMap tIntLongHashMap1 = new TIntLongHashMap((TIntLongMap) tIntLongHashMap0);
      assertEquals(23, tIntLongHashMap1.capacity());
      assertEquals("{0=0}", tIntLongHashMap1.toString());
      assertEquals(0, tIntLongHashMap1.getNoEntryKey());
      assertEquals(0L, tIntLongHashMap1.getNoEntryValue());
      assertEquals(11, tIntLongHashMap0.capacity());
      assertEquals(1, tIntLongHashMap0.size());
  }

  //Test case number: 8
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.<init>(Lgnu/trove/map/TIntLongMap;)V: I38 Branch 35 IFEQ L139 - false
   * 2 gnu.trove.map.hash.TIntLongHashMap.<init>(Lgnu/trove/map/TIntLongMap;)V: I52 Branch 36 IFEQ L143 - false
   * 3 gnu.trove.map.hash.TIntLongHashMap.<init>(IFIJ)V: root-Branch
   * 4 gnu.trove.map.hash.TIntLongHashMap.<init>(Lgnu/trove/map/TIntLongMap;)V: I10 Branch 34 IFEQ L133 - false
   */

  @Test
  public void test8()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap((-1754), 1904, 4831, 4831);
      TIntLongHashMap tIntLongHashMap1 = new TIntLongHashMap((TIntLongMap) tIntLongHashMap0);
      assertEquals(4831L, tIntLongHashMap1.getNoEntryValue());
      assertEquals(3, tIntLongHashMap1.capacity());
      assertEquals(4831, tIntLongHashMap1.getNoEntryKey());
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TIntLongHashMap.putIfAbsent(IJ)J: I9 Branch 39 IFGE L205 - false
   */

  @Test
  public void test9()  throws Throwable  {
      int[] intArray0 = new int[9];
      long[] longArray0 = new long[2];
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(intArray0, longArray0);
      long long0 = tIntLongHashMap0.putIfAbsent(0, (-1717));
      assertEquals("{0=0}", tIntLongHashMap0.toString());
      assertEquals(1, tIntLongHashMap0.size());
      assertEquals(23, tIntLongHashMap0.capacity());
      assertEquals(0L, long0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TIntLongHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - true
   */

  @Test
  public void test10()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      HashMap<Integer, Long> hashMap0 = new HashMap<Integer, Long>();
      tIntLongHashMap0.putAll((Map<? extends Integer, ? extends Long>) hashMap0);
      assertEquals(23, tIntLongHashMap0.capacity());
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TIntLongHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - false
   */

  @Test
  public void test11()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(456);
      HashMap<Integer, Long> hashMap0 = new HashMap<Integer, Long>();
      hashMap0.put((Integer) 675, (Long) null);
      // Undeclared exception!
      try {
        tIntLongHashMap0.putAll((Map<? extends Integer, ? extends Long>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TIntLongHashMap.get(I)J: I9 Branch 44 IFGE L253 - false
   */

  @Test
  public void test12()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(1);
      long long0 = tIntLongHashMap0.get(0);
      assertEquals(0L, long0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TIntLongHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - true
   */

  @Test
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[9];
      long[] longArray0 = new long[2];
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(intArray0, longArray0);
      boolean boolean0 = tIntLongHashMap0.isEmpty();
      assertEquals(false, boolean0);
      assertEquals(23, tIntLongHashMap0.capacity());
      assertEquals("{0=0}", tIntLongHashMap0.toString());
      assertEquals(1, tIntLongHashMap0.size());
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TIntLongHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - false
   */

  @Test
  public void test14()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap((-2000), (-2000));
      boolean boolean0 = tIntLongHashMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TIntLongHashMap.remove(I)J: I14 Branch 46 IFLT L276 - true
   */

  @Test
  public void test15()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap((-2000), (-2000));
      long long0 = tIntLongHashMap0.remove((-2000));
      assertEquals(0L, long0);
      assertEquals(0, tIntLongHashMap0.size());
  }

  //Test case number: 16
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.keys()[I: I34 Branch 48 IF_ICMPNE L304 - false
   * 2 gnu.trove.map.hash.TIntLongHashMap.keys()[I: I27 Branch 47 IFLE L303 - true
   * 3 gnu.trove.map.hash.TIntLongHashMap.keys()[I: I27 Branch 47 IFLE L303 - false
   * 4 gnu.trove.map.hash.TIntLongHashMap.keys()[I: I34 Branch 48 IF_ICMPNE L304 - true
   * 5 gnu.trove.map.hash.TIntLongHashMap.putIfAbsent(IJ)J: I9 Branch 39 IFGE L205 - true
   */

  @Test
  public void test16()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap((-1656));
      tIntLongHashMap0.putIfAbsent(0, 0);
      tIntLongHashMap0.keys();
      assertEquals(false, tIntLongHashMap0.isEmpty());
      assertEquals("{0=0}", tIntLongHashMap0.toString());
  }

  //Test case number: 17
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.keys([I)[I: I10 Branch 49 IF_ICMPGE L315 - true
   * 2 gnu.trove.map.hash.TIntLongHashMap.keys([I)[I: I37 Branch 50 IFLE L322 - true
   * 3 gnu.trove.map.hash.TIntLongHashMap.keys([I)[I: I37 Branch 50 IFLE L322 - false
   * 4 gnu.trove.map.hash.TIntLongHashMap.keys([I)[I: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test17()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      int[] intArray0 = tIntLongHashMap0.keys(tIntLongHashMap0._set);
      assertNotNull(intArray0);
      assertEquals(23, tIntLongHashMap0.capacity());
  }

  //Test case number: 18
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.keys([I)[I: I10 Branch 49 IF_ICMPGE L315 - false
   * 2 gnu.trove.map.hash.TIntLongHashMap.keys([I)[I: I44 Branch 51 IF_ICMPNE L323 - false
   * 3 gnu.trove.map.hash.TIntLongHashMap.keys([I)[I: I37 Branch 50 IFLE L322 - true
   * 4 gnu.trove.map.hash.TIntLongHashMap.keys([I)[I: I37 Branch 50 IFLE L322 - false
   * 5 gnu.trove.map.hash.TIntLongHashMap.keys([I)[I: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test18()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap((-1656));
      tIntLongHashMap0.putIfAbsent(0, 0);
      int[] intArray0 = new int[1];
      tIntLongHashMap0.putIfAbsent(1167, 1167);
      tIntLongHashMap0.keys(intArray0);
      assertEquals(2, tIntLongHashMap0.size());
      assertEquals("{1167=1167, 0=0}", tIntLongHashMap0.toString());
  }

  //Test case number: 19
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.values()[J: I27 Branch 52 IFLE L343 - true
   * 2 gnu.trove.map.hash.TIntLongHashMap.values()[J: I27 Branch 52 IFLE L343 - false
   * 3 gnu.trove.map.hash.TIntLongHashMap.values()[J: I34 Branch 53 IF_ICMPNE L344 - true
   * 4 gnu.trove.map.hash.TIntLongHashMap.values()[J: I34 Branch 53 IF_ICMPNE L344 - false
   */

  @Test
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[4];
      long[] longArray0 = new long[3];
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(intArray0, longArray0);
      long[] longArray1 = tIntLongHashMap0.values();
      assertEquals("{0=0}", tIntLongHashMap0.toString());
      assertEquals(11, tIntLongHashMap0.capacity());
      assertEquals(1, tIntLongHashMap0.size());
      assertNotNull(longArray1);
  }

  //Test case number: 20
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.values([J)[J: I10 Branch 54 IF_ICMPGE L355 - true
   * 2 gnu.trove.map.hash.TIntLongHashMap.values([J)[J: I37 Branch 55 IFLE L362 - true
   * 3 gnu.trove.map.hash.TIntLongHashMap.values([J)[J: I37 Branch 55 IFLE L362 - false
   * 4 gnu.trove.map.hash.TIntLongHashMap.values([J)[J: I44 Branch 56 IF_ICMPNE L363 - true
   */

  @Test
  public void test20()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      long[] longArray0 = new long[1];
      long[] longArray1 = tIntLongHashMap0.values(longArray0);
      assertNotNull(longArray1);
      assertEquals(23, tIntLongHashMap0.capacity());
      assertSame(longArray0, longArray1);
  }

  //Test case number: 21
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.values([J)[J: I10 Branch 54 IF_ICMPGE L355 - false
   * 2 gnu.trove.map.hash.TIntLongHashMap.values([J)[J: I44 Branch 56 IF_ICMPNE L363 - false
   * 3 gnu.trove.map.hash.TIntLongHashMap.values([J)[J: I37 Branch 55 IFLE L362 - true
   * 4 gnu.trove.map.hash.TIntLongHashMap.values([J)[J: I37 Branch 55 IFLE L362 - false
   * 5 gnu.trove.map.hash.TIntLongHashMap.values([J)[J: I44 Branch 56 IF_ICMPNE L363 - true
   */

  @Test
  public void test21()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      tIntLongHashMap0.put(20, 0L);
      tIntLongHashMap0.adjustOrPutValue((-1851), 0L, (long) 20);
      long[] longArray0 = new long[1];
      tIntLongHashMap0.values(longArray0);
      assertEquals(2, tIntLongHashMap0.size());
      assertEquals("{20=0, -1851=20}", tIntLongHashMap0.toString());
  }

  //Test case number: 22
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.containsValue(J)Z: I25 Branch 58 IF_ICMPNE L377 - false
   * 2 gnu.trove.map.hash.TIntLongHashMap.containsValue(J)Z: I31 Branch 59 IFNE L377 - true
   * 3 gnu.trove.map.hash.TIntLongHashMap.containsValue(J)Z: I18 Branch 57 IFLE L376 - true
   * 4 gnu.trove.map.hash.TIntLongHashMap.containsValue(J)Z: I18 Branch 57 IFLE L376 - false
   * 5 gnu.trove.map.hash.TIntLongHashMap.containsValue(J)Z: I25 Branch 58 IF_ICMPNE L377 - true
   */

  @Test
  public void test22()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      tIntLongHashMap0.put(20, 0L);
      boolean boolean0 = tIntLongHashMap0.containsValue(20L);
      assertEquals("{20=0}", tIntLongHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 23
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.containsValue(J)Z: I31 Branch 59 IFNE L377 - false
   * 2 gnu.trove.map.hash.TIntLongHashMap.containsValue(J)Z: I18 Branch 57 IFLE L376 - false
   * 3 gnu.trove.map.hash.TIntLongHashMap.containsValue(J)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 4 gnu.trove.map.hash.TIntLongHashMap.containsValue(J)Z: I25 Branch 58 IF_ICMPNE L377 - false
   */

  @Test
  public void test23()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      tIntLongHashMap0.adjustOrPutValue((-1851), 0L, (long) 20);
      boolean boolean0 = tIntLongHashMap0.containsValue(20L);
      assertEquals(1, tIntLongHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 60 IFLE L407 - true
   * 2 gnu.trove.map.hash.TIntLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TIntLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test24()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      boolean boolean0 = tIntLongHashMap0.forEachValue((TLongProcedure) null);
      assertEquals(true, boolean0);
      assertEquals(23, tIntLongHashMap0.capacity());
  }

  //Test case number: 25
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - false
   * 2 gnu.trove.map.hash.TIntLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TIntLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test25()  throws Throwable  {
      int[] intArray0 = new int[5];
      long[] longArray0 = new long[7];
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(intArray0, longArray0);
      // Undeclared exception!
      try {
        tIntLongHashMap0.forEachValue((TLongProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I18 Branch 66 IFLE L434 - true
   * 2 gnu.trove.map.hash.TIntLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I18 Branch 66 IFLE L434 - false
   * 3 gnu.trove.map.hash.TIntLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test26()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      tIntLongHashMap0.transformValues((TLongFunction) null);
      assertEquals(23, tIntLongHashMap0.capacity());
  }

  //Test case number: 27
  /*
   * 12 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I25 Branch 67 IF_ICMPNE L435 - false
   * 2 gnu.trove.map.hash.TIntLongHashMap$TIntLongHashIterator.value()J: root-Branch
   * 3 gnu.trove.map.hash.TIntLongHashMap$TIntLongHashIterator.key()I: root-Branch
   * 4 gnu.trove.map.hash.TIntLongHashMap$TIntLongHashIterator.advance()V: root-Branch
   * 5 gnu.trove.map.hash.TIntLongHashMap$TIntLongHashIterator.<init>(Lgnu/trove/map/hash/TIntLongHashMap;Lgnu/trove/map/hash/TIntLongHashMap;)V: root-Branch
   * 6 gnu.trove.map.hash.TIntLongHashMap.iterator()Lgnu/trove/iterator/TIntLongIterator;: root-Branch
   * 7 gnu.trove.map.hash.TIntLongHashMap.putAll(Lgnu/trove/map/TIntLongMap;)V: I15 Branch 43 IFEQ L243 - true
   * 8 gnu.trove.map.hash.TIntLongHashMap.putAll(Lgnu/trove/map/TIntLongMap;)V: I15 Branch 43 IFEQ L243 - false
   * 9 gnu.trove.map.hash.TIntLongHashMap.doPut(IJI)J: I12 Branch 40 IFGE L214 - false
   * 10 gnu.trove.map.hash.TIntLongHashMap.doPut(IJI)J: I41 Branch 41 IFEQ L221 - true
   * 11 gnu.trove.map.hash.TIntLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I18 Branch 66 IFLE L434 - false
   * 12 gnu.trove.map.hash.TIntLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test27()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      long[] longArray0 = new long[7];
      TIntLongHashMap tIntLongHashMap1 = new TIntLongHashMap(tIntLongHashMap0._set, longArray0);
      tIntLongHashMap0.putAll((TIntLongMap) tIntLongHashMap1);
      // Undeclared exception!
      try {
        tIntLongHashMap0.transformValues((TLongFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.retainEntries(Lgnu/trove/procedure/TIntLongProcedure;)Z: I31 Branch 68 IFLE L453 - true
   * 2 gnu.trove.map.hash.TIntLongHashMap.retainEntries(Lgnu/trove/procedure/TIntLongProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TIntLongHashMap.retainEntries(Lgnu/trove/procedure/TIntLongProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test28()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap((-2000), (-2000));
      boolean boolean0 = tIntLongHashMap0.retainEntries((TIntLongProcedure) null);
      assertEquals(false, boolean0);
      assertEquals(3, tIntLongHashMap0.capacity());
      assertEquals("{}", tIntLongHashMap0.toString());
  }

  //Test case number: 29
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.retainEntries(Lgnu/trove/procedure/TIntLongProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - false
   * 2 gnu.trove.map.hash.TIntLongHashMap.retainEntries(Lgnu/trove/procedure/TIntLongProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TIntLongHashMap.retainEntries(Lgnu/trove/procedure/TIntLongProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test29()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap((-1656));
      tIntLongHashMap0.putIfAbsent(0, 0);
      // Undeclared exception!
      try {
        tIntLongHashMap0.retainEntries((TIntLongProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.adjustValue(IJ)Z: I9 Branch 71 IFGE L477 - true
   * 2 gnu.trove.map.hash.TIntLongHashMap.increment(I)Z: root-Branch
   */

  @Test
  public void test30()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      tIntLongHashMap0.adjustOrPutValue((-1851), 0L, (long) 20);
      boolean boolean0 = tIntLongHashMap0.increment((-1851));
      assertEquals(1, tIntLongHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TIntLongHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - false
   */

  @Test
  public void test31()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      boolean boolean0 = tIntLongHashMap0.equals((Object) "14");
      assertEquals(23, tIntLongHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 32
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - false
   * 2 gnu.trove.map.hash.TIntLongHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   */

  @Test
  public void test32()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(206);
      tIntLongHashMap0.putIfAbsent((-1144), 206);
      TIntLongHashMap tIntLongHashMap1 = new TIntLongHashMap(0);
      boolean boolean0 = tIntLongHashMap0.equals((Object) tIntLongHashMap1);
      assertEquals("{-1144=206}", tIntLongHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 33
  /*
   * 11 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.equals(Ljava/lang/Object;)Z: I85 Branch 78 IFEQ L1200 - false
   * 2 gnu.trove.map.hash.TIntLongHashMap.equals(Ljava/lang/Object;)Z: I89 Branch 79 IFEQ L1200 - true
   * 3 gnu.trove.map.hash.TIntLongHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 4 gnu.trove.map.hash.TIntLongHashMap.equals(Ljava/lang/Object;)Z: I85 Branch 78 IFEQ L1200 - true
   * 5 gnu.trove.map.hash.TIntLongHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 6 gnu.trove.map.hash.TIntLongHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 7 gnu.trove.map.hash.TIntLongHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 8 gnu.trove.map.hash.TIntLongHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 9 gnu.trove.map.hash.TIntLongHashMap.adjustOrPutValue(IJJ)J: I9 Branch 72 IFGE L491 - false
   * 10 gnu.trove.map.hash.TIntLongHashMap.adjustOrPutValue(IJJ)J: I58 Branch 73 IFEQ L502 - true
   * 11 gnu.trove.map.hash.TIntLongHashMap.get(I)J: I9 Branch 44 IFGE L253 - true
   */

  @Test
  public void test33()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = (-1717);
      long[] longArray0 = new long[2];
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(intArray0, longArray0);
      TIntLongHashMap tIntLongHashMap1 = new TIntLongHashMap(intArray0, longArray0);
      tIntLongHashMap1.adjustOrPutValue((-1717), (long) (-1717), 9223372036854775807L);
      boolean boolean0 = tIntLongHashMap0.equals((Object) tIntLongHashMap1);
      assertEquals("{-1717=-1717, 0=0}", tIntLongHashMap1.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 34
  /*
   * 13 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.equals(Ljava/lang/Object;)Z: I89 Branch 79 IFEQ L1200 - false
   * 2 gnu.trove.map.hash.TIntLongHashMap.equals(Ljava/lang/Object;)Z: I93 Branch 80 IFEQ L1200 - false
   * 3 gnu.trove.map.hash.TIntLongHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 4 gnu.trove.map.hash.TIntLongHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 5 gnu.trove.map.hash.TIntLongHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 6 gnu.trove.map.hash.TIntLongHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 7 gnu.trove.map.hash.TIntLongHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 8 gnu.trove.map.hash.TIntLongHashMap.equals(Ljava/lang/Object;)Z: I85 Branch 78 IFEQ L1200 - false
   * 9 gnu.trove.map.hash.TIntLongHashMap.adjustOrPutValue(IJJ)J: I9 Branch 72 IFGE L491 - false
   * 10 gnu.trove.map.hash.TIntLongHashMap.adjustOrPutValue(IJJ)J: I58 Branch 73 IFEQ L502 - true
   * 11 gnu.trove.map.hash.TIntLongHashMap.<init>([I[J)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 12 gnu.trove.map.hash.TIntLongHashMap.<init>([I[J)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 13 gnu.trove.map.hash.TIntLongHashMap.get(I)J: I9 Branch 44 IFGE L253 - true
   */

  @Test
  public void test34()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = (-1717);
      long[] longArray0 = new long[2];
      longArray0[0] = (long) (-1717);
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(intArray0, longArray0);
      TIntLongHashMap tIntLongHashMap1 = new TIntLongHashMap(intArray0, longArray0);
      tIntLongHashMap1.adjustOrPutValue((-1717), (long) (-1717), 9223372036854775807L);
      boolean boolean0 = tIntLongHashMap0.equals((Object) tIntLongHashMap1);
      assertEquals("{-1717=-3434, 0=0}", tIntLongHashMap1.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 35
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - false
   * 2 gnu.trove.map.hash.TIntLongHashMap.<init>(I)V: root-Branch
   * 3 gnu.trove.map.hash.TIntLongHashMap.putIfAbsent(IJ)J: I9 Branch 39 IFGE L205 - true
   * 4 gnu.trove.map.hash.TIntLongHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 5 gnu.trove.map.hash.TIntLongHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 6 gnu.trove.map.hash.TIntLongHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   */

  @Test
  public void test35()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap((-1656));
      tIntLongHashMap0.putIfAbsent(0, 0);
      int int0 = tIntLongHashMap0.hashCode();
      assertEquals(1, tIntLongHashMap0.size());
      assertEquals(0, int0);
  }

  //Test case number: 36
  /*
   * 13 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap$1.execute(IJ)Z: I4 Branch 115 IFEQ L1233 - true
   * 2 gnu.trove.map.hash.TIntLongHashMap$1.<init>(Lgnu/trove/map/hash/TIntLongHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 3 gnu.trove.map.hash.TIntLongHashMap$1.execute(IJ)Z: I4 Branch 115 IFEQ L1233 - false
   * 4 gnu.trove.map.hash.TIntLongHashMap.toString()Ljava/lang/String;: root-Branch
   * 5 gnu.trove.map.hash.TIntLongHashMap.put(IJ)J: root-Branch
   * 6 gnu.trove.map.hash.TIntLongHashMap.<init>()V: root-Branch
   * 7 gnu.trove.map.hash.TIntLongHashMap.forEachEntry(Lgnu/trove/procedure/TIntLongProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 8 gnu.trove.map.hash.TIntLongHashMap.forEachEntry(Lgnu/trove/procedure/TIntLongProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 9 gnu.trove.map.hash.TIntLongHashMap.forEachEntry(Lgnu/trove/procedure/TIntLongProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 10 gnu.trove.map.hash.TIntLongHashMap.forEachEntry(Lgnu/trove/procedure/TIntLongProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 11 gnu.trove.map.hash.TIntLongHashMap.forEachEntry(Lgnu/trove/procedure/TIntLongProcedure;)Z: I39 Branch 65 IFNE L422 - true
   * 12 gnu.trove.map.hash.TIntLongHashMap.doPut(IJI)J: I12 Branch 40 IFGE L214 - true
   * 13 gnu.trove.map.hash.TIntLongHashMap.doPut(IJI)J: I41 Branch 41 IFEQ L221 - false
   */

  @Test
  public void test36()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      tIntLongHashMap0.put(20, 0L);
      tIntLongHashMap0.adjustOrPutValue((-1851), 0L, (long) 20);
      String string0 = tIntLongHashMap0.toString();
      assertEquals(2, tIntLongHashMap0.size());
      assertEquals("{20=0, -1851=20}", string0);
  }

  //Test case number: 37
  /*
   * 12 covered goals:
   * 1 gnu.trove.map.hash.TIntLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - false
   * 2 gnu.trove.map.hash.TIntLongHashMap.<init>(IF)V: root-Branch
   * 3 gnu.trove.map.hash.TIntLongHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.hash.TIntLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - true
   * 5 gnu.trove.map.hash.TIntLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - false
   * 6 gnu.trove.map.hash.TIntLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - true
   * 7 gnu.trove.map.hash.TIntLongHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 8 gnu.trove.map.hash.TIntLongHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 9 gnu.trove.map.hash.TIntLongHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 10 gnu.trove.map.hash.TIntLongHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 11 gnu.trove.map.hash.TIntLongHashMap.adjustOrPutValue(IJJ)J: I9 Branch 72 IFGE L491 - true
   * 12 gnu.trove.map.hash.TIntLongHashMap.adjustOrPutValue(IJJ)J: I58 Branch 73 IFEQ L502 - false
   */

  @Test
  public void test37()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap((-2000), (-2000));
      tIntLongHashMap0.adjustOrPutValue(15, (-2000), (-2000));
      PipedInputStream pipedInputStream0 = new PipedInputStream(15);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) pipedOutputStream0);
      tIntLongHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
  }
}

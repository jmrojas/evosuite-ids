/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TDoubleCollection;
import gnu.trove.impl.sync.TSynchronizedDoubleList;
import gnu.trove.impl.sync.TSynchronizedDoubleSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessDoubleList;
import gnu.trove.list.TDoubleList;
import gnu.trove.list.array.TDoubleArrayList;
import gnu.trove.procedure.TDoubleProcedure;
import gnu.trove.set.TDoubleSet;
import gnu.trove.set.hash.TDoubleHashSet;
import java.io.File;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Locale;
import java.util.MissingResourceException;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedDoubleSetEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      int int0 = (-1);
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(int0);
      Object object0 = null;
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0, object0);
      // Undeclared exception!
      try {
        tSynchronizedDoubleSet0.removeAll(tDoubleHashSet0._set);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = 0;
      float float0 = 1.0F;
      double double0 = 2015.2521112771826;
      int int1 = (-728);
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(int1);
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0);
      tSynchronizedDoubleSet0.removeAll(tDoubleHashSet0._set);
      TSynchronizedDoubleSet tSynchronizedDoubleSet1 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0);
      tSynchronizedDoubleSet1.retainAll((TDoubleCollection) tDoubleHashSet0);
      Collection<Object> collection0 = null;
      // Undeclared exception!
      try {
        tSynchronizedDoubleSet0.containsAll(collection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = (-1921);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) int0;
      doubleArray0[1] = (double) int0;
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet();
      String string0 = "voN+gK+L$";
      URI uRI0 = new URI(string0);
      String string1 = uRI0.toString();
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0, (Object) string1);
      double double0 = 1534.9974039580818;
      tSynchronizedDoubleSet0.add(double0);
      doubleArray0[2] = (double) int0;
      doubleArray0[3] = (double) int0;
      TDoubleHashSet tDoubleHashSet1 = new TDoubleHashSet(doubleArray0);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      char char0 = '}';
      // Undeclared exception!
      try {
        locale0.getExtension(char0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Ill-formed extension key: }
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TDoubleList tDoubleList0 = null;
      TSynchronizedDoubleList tSynchronizedDoubleList0 = null;
      try {
        tSynchronizedDoubleList0 = new TSynchronizedDoubleList(tDoubleList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 0;
      TDoubleSet tDoubleSet0 = null;
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = null;
      try {
        tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet(tDoubleSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = 1523;
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(int0, int0, int0);
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) int0;
      doubleArray0[0] = (double) int0;
      doubleArray0[1] = (double) int0;
      doubleArray0[2] = (double) int0;
      doubleArray0[3] = (double) int0;
      TDoubleProcedure tDoubleProcedure0 = null;
      tSynchronizedDoubleSet0.forEach(tDoubleProcedure0);
      doubleArray0[1] = (double) int0;
      doubleArray0[2] = (double) int0;
      doubleArray0[3] = (double) int0;
      boolean boolean0 = tSynchronizedDoubleSet0.removeAll(doubleArray0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = 0;
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(int0);
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0);
      TSynchronizedDoubleSet tSynchronizedDoubleSet1 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0);
      tSynchronizedDoubleSet1.retainAll((TDoubleCollection) tDoubleHashSet0);
      float float0 = 0.0F;
      tDoubleHashSet0.trimToSize();
      tDoubleHashSet0.capacity();
      String string0 = File.separator;
      tSynchronizedDoubleSet1.equals((Object) string0);
      tSynchronizedDoubleSet1.containsAll(tDoubleHashSet0._set);
      tDoubleHashSet0.toString();
      TDoubleHashSet tDoubleHashSet1 = new TDoubleHashSet(int0, float0, (double) float0);
      String string1 = File.pathSeparator;
      TSynchronizedDoubleSet tSynchronizedDoubleSet2 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet1, (Object) string1);
      tSynchronizedDoubleSet1.add((double) int0);
      tSynchronizedDoubleSet1.retainAll((TDoubleCollection) tDoubleHashSet1);
      tSynchronizedDoubleSet1.clear();
      tSynchronizedDoubleSet2.retainAll(tDoubleHashSet1._set);
      tSynchronizedDoubleSet2.hashCode();
      tSynchronizedDoubleSet2.toArray();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) int0;
      double double0 = 0.0;
      doubleArray0[1] = double0;
      tSynchronizedDoubleSet1.removeAll(doubleArray0);
      Locale locale0 = Locale.getDefault();
      String string2 = locale0.getISO3Country();
      Locale locale1 = Locale.PRC;
      locale0.getDisplayScript(locale1);
      Locale.getISOCountries();
      tSynchronizedDoubleSet2.equals((Object) string2);
      String string3 = locale0.getISO3Country();
      TSynchronizedDoubleSet tSynchronizedDoubleSet3 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet1);
      boolean boolean0 = tSynchronizedDoubleSet1.equals((Object) string3);
      assertTrue(tSynchronizedDoubleSet1.equals(tSynchronizedDoubleSet2));
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      double double0 = 1966.2286889792556;
      doubleArray0[0] = double0;
      double double1 = (-773.7793809456688);
      doubleArray0[1] = double1;
      double double2 = 948.4245335675513;
      doubleArray0[2] = double2;
      double double3 = (-1.0);
      doubleArray0[3] = double3;
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(doubleArray0);
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet0 = new TUnmodifiableDoubleSet((TDoubleSet) tDoubleHashSet0);
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tUnmodifiableDoubleSet0);
      double double4 = 1426.1318941931013;
      boolean boolean0 = tSynchronizedDoubleSet0.contains(double4);
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      TDoubleSet tDoubleSet0 = null;
      Object object0 = null;
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = null;
      try {
        tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet(tDoubleSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TDoubleCollection tDoubleCollection0 = null;
      TDoubleHashSet tDoubleHashSet0 = null;
      try {
        tDoubleHashSet0 = new TDoubleHashSet(tDoubleCollection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      double double0 = 784.0780642998187;
      doubleArray0[0] = double0;
      double double1 = (-897.8116852129299);
      int int0 = 700;
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(int0, (float) int0, doubleArray0[0]);
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0);
      tSynchronizedDoubleSet0.retainAll((TDoubleCollection) tDoubleHashSet0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      tDoubleHashSet0.removeAll((Collection<?>) linkedList0);
      doubleArray0[1] = double1;
      double double2 = (-112.58245258090376);
      doubleArray0[2] = double2;
      double double3 = (-332.8593451622473);
      doubleArray0[3] = double3;
      tSynchronizedDoubleSet0.isEmpty();
      tSynchronizedDoubleSet0.retainAll(tDoubleHashSet0._set);
      double double4 = (-974.0219753316302);
      doubleArray0[4] = double4;
      double double5 = 525.1394236930313;
      doubleArray0[5] = double5;
      double double6 = (-675.0683843464179);
      doubleArray0[6] = double6;
      TDoubleHashSet tDoubleHashSet1 = new TDoubleHashSet(doubleArray0);
      String string0 = ";W{ZG\"al%Xr7'Qp~i";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: ;W{ZG\"al%Xr7'Qp~i://;W%7BZG%22al%25Xr7'Qp~i;W%7BZG%22al%25Xr7'Qp~i?;W%7BZG%22al%25Xr7'Qp~i#;W%7BZG%22al%25Xr7'Qp~i
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TDoubleSet tDoubleSet0 = null;
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = null;
      try {
        tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet(tDoubleSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TDoubleCollection tDoubleCollection0 = null;
      TDoubleSet tDoubleSet0 = null;
      TDoubleArrayList tDoubleArrayList0 = null;
      try {
        tDoubleArrayList0 = new TDoubleArrayList((TDoubleCollection) tDoubleSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = 0;
      double double0 = (-1157.6099198380143);
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(int0, double0);
      TUnmodifiableRandomAccessDoubleList tUnmodifiableRandomAccessDoubleList0 = new TUnmodifiableRandomAccessDoubleList((TDoubleList) tDoubleArrayList0);
      int int1 = 2034;
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessDoubleList0.subList(int0, int1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index < 0
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 77;
      int int1 = (-1353);
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet();
      Locale locale0 = Locale.FRENCH;
      String string0 = locale0.getCountry();
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) int0;
      doubleArray0[1] = (double) int0;
      doubleArray0[2] = (double) int0;
      doubleArray0[3] = (double) int0;
      doubleArray0[4] = (double) int1;
      doubleArray0[5] = (double) int0;
      doubleArray0[6] = (double) int1;
      doubleArray0[7] = (double) int1;
      double double0 = 0.0;
      doubleArray0[8] = double0;
      tDoubleHashSet0.retainAll(doubleArray0);
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0, (Object) string0);
      double double1 = 147.86925628885498;
      tSynchronizedDoubleSet0.contains(double1);
      float float0 = 23.643143F;
      TDoubleHashSet tDoubleHashSet1 = new TDoubleHashSet(int1, float0);
      double double2 = 335.42071636688644;
      tDoubleHashSet1.remove(double2);
      TSynchronizedDoubleSet tSynchronizedDoubleSet1 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet1);
      tSynchronizedDoubleSet1.addAll(tDoubleHashSet1._set);
      Locale locale1 = Locale.GERMANY;
      String string1 = locale1.getScript();
      TSynchronizedDoubleSet tSynchronizedDoubleSet2 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet1, (Object) string1);
      TDoubleHashSet tDoubleHashSet2 = new TDoubleHashSet(int0);
      double double3 = 4.9E-324;
      tSynchronizedDoubleSet1.add(double3);
      TSynchronizedDoubleSet tSynchronizedDoubleSet3 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet2);
      tSynchronizedDoubleSet3.containsAll((TDoubleCollection) tDoubleHashSet2);
      tDoubleHashSet1.capacity();
      tSynchronizedDoubleSet3.containsAll(tDoubleHashSet2._set);
      tSynchronizedDoubleSet3.addAll(tDoubleHashSet2._set);
      tSynchronizedDoubleSet3.addAll((TDoubleCollection) tDoubleHashSet2);
      double double4 = tSynchronizedDoubleSet3.getNoEntryValue();
      assertTrue(double4 == double0);
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = (-1466);
      double double0 = 1761.8517807817964;
      TDoubleArrayList tDoubleArrayList0 = null;
      try {
        tDoubleArrayList0 = new TDoubleArrayList(int0, double0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[10];
      double double0 = (-1142.8769950041064);
      doubleArray0[0] = double0;
      double double1 = 0.0;
      doubleArray0[1] = double1;
      double double2 = (-1.0);
      doubleArray0[2] = double2;
      double double3 = 0.0;
      doubleArray0[3] = double3;
      double double4 = 906.2807798487968;
      doubleArray0[4] = double4;
      double double5 = 426.68609354374377;
      doubleArray0[5] = double5;
      double double6 = 1.0;
      doubleArray0[6] = double6;
      double double7 = (-732.8415997074591);
      doubleArray0[7] = double7;
      double double8 = (-1465.4993874176098);
      doubleArray0[8] = double8;
      double double9 = 1412.6446858934326;
      doubleArray0[9] = double9;
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(doubleArray0);
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet0 = new TUnmodifiableDoubleSet((TDoubleSet) tDoubleHashSet0);
      String string0 = "";
      URI uRI0 = URI.create(string0);
      URI uRI1 = uRI0.parseServerAuthority();
      URI uRI2 = uRI0.relativize(uRI1);
      String string1 = uRI2.getQuery();
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tUnmodifiableDoubleSet0, (Object) string1);
      // Undeclared exception!
      try {
        tSynchronizedDoubleSet0.removeAll(doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TFloatFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap;
import gnu.trove.iterator.TObjectFloatIterator;
import gnu.trove.map.TObjectFloatMap;
import gnu.trove.map.custom_hash.TObjectFloatCustomHashMap;
import gnu.trove.map.hash.TObjectFloatHashMap;
import gnu.trove.procedure.TFloatProcedure;
import gnu.trove.procedure.TObjectFloatProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableObjectFloatMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableObjectFloatMap;)V: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.iterator()Lgnu/trove/iterator/TObjectFloatIterator;: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.<init>(Lgnu/trove/map/TObjectFloatMap;)V: I17 Branch 1 IFNONNULL L53 - true
   */

  @Test
  public void test0()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectFloatCustomHashMap<Integer> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 141, (float) 141);
      TUnmodifiableObjectFloatMap<Integer> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Integer>((TObjectFloatMap<Integer>) tObjectFloatCustomHashMap0);
      TObjectFloatIterator<Integer> tObjectFloatIterator0 = tUnmodifiableObjectFloatMap0.iterator();
      assertEquals(false, tObjectFloatIterator0.hasNext());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.put(Ljava/lang/Object;F)F: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      IdentityHashingStrategy<Float> identityHashingStrategy0 = new IdentityHashingStrategy<Float>();
      TObjectFloatCustomHashMap<Float> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Float>((HashingStrategy<? super Float>) identityHashingStrategy0, 120, (float) 120);
      TUnmodifiableObjectFloatMap<Float> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Float>((TObjectFloatMap<Float>) tObjectFloatCustomHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectFloatMap0.put((Float) null, (float) 120);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.putIfAbsent(Ljava/lang/Object;F)F: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TObjectFloatHashMap<Object> tObjectFloatHashMap0 = new TObjectFloatHashMap<Object>();
      TUnmodifiableObjectFloatMap<Object> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectFloatMap0.putIfAbsent((Object) tObjectFloatHashMap0, (float) (-19));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.forEachEntry(Lgnu/trove/procedure/TObjectFloatProcedure;)Z: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.size()I: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.getNoEntryValue()F: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      TUnmodifiableObjectFloatMap<Object> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatCustomHashMap0);
      TObjectFloatHashMap<Object> tObjectFloatHashMap0 = new TObjectFloatHashMap<Object>((TObjectFloatMap<?>) tUnmodifiableObjectFloatMap0);
      assertEquals("{}", tObjectFloatHashMap0.toString());
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.transformValues(Lgnu/trove/function/TFloatFunction;)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<Float> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Float>((HashingStrategy<? super Float>) identityHashingStrategy0);
      TUnmodifiableObjectFloatMap<Float> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Float>((TObjectFloatMap<Float>) tObjectFloatCustomHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectFloatMap0.transformValues((TFloatFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.containsValue(F)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      TUnmodifiableObjectFloatMap<Object> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatCustomHashMap0);
      boolean boolean0 = tUnmodifiableObjectFloatMap0.containsValue(0.0F);
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.retainEntries(Lgnu/trove/procedure/TObjectFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TObjectFloatHashMap<Float> tObjectFloatHashMap0 = new TObjectFloatHashMap<Float>(1729);
      TUnmodifiableObjectFloatMap<Float> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Float>((TObjectFloatMap<Float>) tObjectFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectFloatMap0.retainEntries((TObjectFloatProcedure<? super Float>) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 1, (float) 1, (float) 1);
      TUnmodifiableObjectFloatMap<Object> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatCustomHashMap0);
      boolean boolean0 = tUnmodifiableObjectFloatMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.adjustValue(Ljava/lang/Object;F)Z: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TObjectFloatHashMap<Integer> tObjectFloatHashMap0 = new TObjectFloatHashMap<Integer>((-1), (-1));
      TUnmodifiableObjectFloatMap<Integer> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Integer>((TObjectFloatMap<Integer>) tObjectFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectFloatMap0.adjustValue((Integer) 1084875082, (float) (-1));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.increment(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectFloatCustomHashMap<Integer> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 141, (float) 141);
      TUnmodifiableObjectFloatMap<Integer> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Integer>((TObjectFloatMap<Integer>) tObjectFloatCustomHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectFloatMap0.increment((Integer) 141);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.values([F)[F: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TObjectFloatHashMap<Object> tObjectFloatHashMap0 = new TObjectFloatHashMap<Object>((-1234), (-1234));
      TUnmodifiableObjectFloatMap<Object> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatHashMap0);
      float[] floatArray0 = new float[8];
      float[] floatArray1 = tUnmodifiableObjectFloatMap0.values(floatArray0);
      assertSame(floatArray0, floatArray1);
  }

  //Test case number: 11
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.hashCode()I: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.containsKey(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TObjectFloatHashMap<Object> tObjectFloatHashMap0 = new TObjectFloatHashMap<Object>();
      TUnmodifiableObjectFloatMap<Object> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatHashMap0);
      boolean boolean0 = tUnmodifiableObjectFloatMap0.containsKey((Object) tUnmodifiableObjectFloatMap0);
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.clear()V: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      TUnmodifiableObjectFloatMap<Object> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatCustomHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectFloatMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.keys()[Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TObjectFloatHashMap<Object> tObjectFloatHashMap0 = new TObjectFloatHashMap<Object>();
      TUnmodifiableObjectFloatMap<Object> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatHashMap0);
      Object[] objectArray0 = tUnmodifiableObjectFloatMap0.keys();
      assertNotNull(objectArray0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.adjustOrPutValue(Ljava/lang/Object;FF)F: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TObjectFloatHashMap<Integer> tObjectFloatHashMap0 = new TObjectFloatHashMap<Integer>();
      TUnmodifiableObjectFloatMap<Integer> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Integer>((TObjectFloatMap<Integer>) tObjectFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectFloatMap0.adjustOrPutValue((Integer) 0, (float) 0, (float) 0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<String> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1);
      TUnmodifiableObjectFloatMap<String> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<String>((TObjectFloatMap<String>) tObjectFloatCustomHashMap0);
      String string0 = tUnmodifiableObjectFloatMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.get(Ljava/lang/Object;)F: root-Branch
   */

//   @Test
//   public void test16()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 1, (float) 1, (float) 1);
//       TObjectFloatHashMap<Float> tObjectFloatHashMap0 = new TObjectFloatHashMap<Float>(1, 1, 1);
//       TUnmodifiableObjectFloatMap<Float> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Float>((TObjectFloatMap<Float>) tObjectFloatHashMap0);
//       float float0 = tUnmodifiableObjectFloatMap0.get((Object) tObjectFloatCustomHashMap0);
//       assertEquals(1.0F, float0, 0.01F);
//   }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (-1501));
      TUnmodifiableObjectFloatMap<Object> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatCustomHashMap0);
      boolean boolean0 = tUnmodifiableObjectFloatMap0.forEachValue((TFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 767, (float) 767);
      TUnmodifiableObjectFloatMap<Object> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatCustomHashMap0);
      HashMap<Object, Float> hashMap0 = new HashMap<Object, Float>();
      // Undeclared exception!
      try {
        tUnmodifiableObjectFloatMap0.putAll((Map<?, ? extends Float>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.values()[F: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectFloatCustomHashMap<Integer> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-15));
      TUnmodifiableObjectFloatMap<Integer> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Integer>((TObjectFloatMap<Integer>) tObjectFloatCustomHashMap0);
      float[] floatArray0 = tUnmodifiableObjectFloatMap0.values();
      assertNotNull(floatArray0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.putAll(Lgnu/trove/map/TObjectFloatMap;)V: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatHashMap<Object> tObjectFloatHashMap0 = new TObjectFloatHashMap<Object>((-1234), (-1234));
      TUnmodifiableObjectFloatMap<Object> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatHashMap0);
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectFloatMap<?>) tObjectFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectFloatMap0.putAll((TObjectFloatMap<?>) tObjectFloatCustomHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>((HashingStrategy<? super Object>) null, (-2008), (float) (-2008), (float) (-2008));
      TUnmodifiableObjectFloatMap<Object> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatCustomHashMap0);
      Object[] objectArray0 = tUnmodifiableObjectFloatMap0.keys(tObjectFloatCustomHashMap0._set);
      assertNotNull(objectArray0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.remove(Ljava/lang/Object;)F: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TObjectFloatCustomHashMap<Float> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Float>();
      TUnmodifiableObjectFloatMap<Float> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Float>((TObjectFloatMap<Float>) tObjectFloatCustomHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectFloatMap0.remove((Object) tUnmodifiableObjectFloatMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectFloatCustomHashMap<Integer> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-15));
      TUnmodifiableObjectFloatMap<Integer> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Integer>((TObjectFloatMap<Integer>) tObjectFloatCustomHashMap0);
      Integer[] integerArray0 = new Integer[5];
      ToObjectArrayProceedure<Integer> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Integer>(integerArray0);
      boolean boolean0 = tUnmodifiableObjectFloatMap0.forEachKey((TObjectProcedure<? super Integer>) toObjectArrayProceedure0);
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.<init>(Lgnu/trove/map/TObjectFloatMap;)V: I17 Branch 1 IFNONNULL L53 - false
   */

  @Test
  public void test24()  throws Throwable  {
      TUnmodifiableObjectFloatMap<Float> tUnmodifiableObjectFloatMap0 = null;
      try {
        tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Float>((TObjectFloatMap<Float>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.keySet()Ljava/util/Set;: I4 Branch 2 IFNONNULL L74 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.keySet()Ljava/util/Set;: I4 Branch 2 IFNONNULL L74 - false
   */

  @Test
  public void test25()  throws Throwable  {
      TObjectFloatHashMap<String> tObjectFloatHashMap0 = new TObjectFloatHashMap<String>(141, 141);
      TUnmodifiableObjectFloatMap<String> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<String>((TObjectFloatMap<String>) tObjectFloatHashMap0);
      Set<String> set0 = tUnmodifiableObjectFloatMap0.keySet();
      assertNotNull(set0);
      
      Set<String> set1 = tUnmodifiableObjectFloatMap0.keySet();
      assertSame(set1, set0);
  }

  //Test case number: 26
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I4 Branch 3 IFNONNULL L82 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I4 Branch 3 IFNONNULL L82 - false
   */

  @Test
  public void test26()  throws Throwable  {
      TObjectFloatHashMap<Integer> tObjectFloatHashMap0 = new TObjectFloatHashMap<Integer>((-1), (-1));
      TUnmodifiableObjectFloatMap<Integer> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Integer>((TObjectFloatMap<Integer>) tObjectFloatHashMap0);
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = (TUnmodifiableFloatCollection)tUnmodifiableObjectFloatMap0.valueCollection();
      assertNotNull(tUnmodifiableFloatCollection0);
      
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection1 = (TUnmodifiableFloatCollection)tUnmodifiableObjectFloatMap0.valueCollection();
      assertSame(tUnmodifiableFloatCollection1, tUnmodifiableFloatCollection0);
  }

  //Test case number: 27
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L89 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L89 - false
   */

  @Test
  public void test27()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      TObjectFloatHashMap<Integer> tObjectFloatHashMap0 = new TObjectFloatHashMap<Integer>((-1), (-1));
      TUnmodifiableObjectFloatMap<Integer> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Integer>((TObjectFloatMap<Integer>) tObjectFloatHashMap0);
      boolean boolean0 = tUnmodifiableObjectFloatMap0.equals((Object) tObjectFloatCustomHashMap0);
      assertEquals(true, boolean0);
  }

  //Test case number: 28
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L89 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L89 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectFloatMap.<init>(Lgnu/trove/map/TObjectFloatMap;)V: I17 Branch 1 IFNONNULL L53 - true
   */

  @Test
  public void test28()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 1, (float) 1, (float) 1);
      TUnmodifiableObjectFloatMap<Object> tUnmodifiableObjectFloatMap0 = new TUnmodifiableObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatCustomHashMap0);
      boolean boolean0 = tUnmodifiableObjectFloatMap0.equals((Object) "{}");
      assertEquals(false, boolean0);
  }
}

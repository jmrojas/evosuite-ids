/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharSet;
import gnu.trove.map.TCharByteMap;
import gnu.trove.map.hash.TCharByteHashMap;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TCharByteProcedure;
import gnu.trove.procedure.TCharProcedure;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableCharByteMapEvoSuite_StrongMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 5 covered goals:
   * 1 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.isEmpty()Z: root-Branch
   * 3 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.<init>(Lgnu/trove/map/TCharByteMap;)V:58 - ReplaceComparisonOperator != null -> = null
   * 4 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.<init>(Lgnu/trove/map/TCharByteMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1099), (-1099));
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      boolean boolean0 = tUnmodifiableCharByteMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 9 covered goals:
   * 1 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.containsKey(C)Z:65 - InsertUnaryOp IINC -1 key
   * 2 Strong Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.containsKey(C)Z:65 - InsertUnaryOp Negation of key
   * 3 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.containsKey(C)Z:65 - InsertUnaryOp IINC 1 key
   * 4 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.containsKey(C)Z:65 - DeleteStatement: containsKey(C)Z
   * 5 Strong Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.containsKey(C)Z:65 - InsertUnaryOp Negation of key
   * 6 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.containsKey(C)Z:65 - InsertUnaryOp IINC 1 key
   * 7 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.containsKey(C)Z:65 - DeleteStatement: containsKey(C)Z
   * 8 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.containsKey(C)Z:65 - InsertUnaryOp IINC -1 key
   * 9 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.containsKey(C)Z: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      char[] charArray0 = new char[10];
      charArray0[3] = '<';
      byte[] byteArray0 = new byte[8];
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      boolean boolean0 = tUnmodifiableCharByteMap0.containsKey('<');
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 4 covered goals:
   * 1 Strong Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.containsValue(B)Z:66 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 2 Strong Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.containsValue(B)Z:66 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 3 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.containsValue(B)Z:66 - InsertUnaryOp IINC 1 val
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.containsValue(B)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      char[] charArray0 = new char[12];
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-116);
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      tUnmodifiableCharByteMap0.containsValue((byte) (-1));
      byteArray0[3] = (byte)0;
  }

  //Test case number: 3
  /*
   * 7 covered goals:
   * 1 Strong Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.containsValue(B)Z:66 - DeleteStatement: containsValue(B)Z
   * 2 Strong Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.containsValue(B)Z:66 - InsertUnaryOp Negation of val
   * 3 Strong Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.containsValue(B)Z:66 - InsertUnaryOp IINC -1 val
   * 4 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.containsValue(B)Z:66 - InsertUnaryOp IINC 1 val
   * 5 Strong Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.containsValue(B)Z:66 - InsertUnaryOp Negation of val
   * 6 Strong Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.containsValue(B)Z:66 - InsertUnaryOp IINC -1 val
   * 7 Strong Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.containsValue(B)Z:66 - DeleteStatement: containsValue(B)Z
   */

  @Test
  public void test3()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[1] = '#';
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-39);
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      boolean boolean0 = tUnmodifiableCharByteMap0.containsValue((byte) (-39));
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 9 covered goals:
   * 1 Strong Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.get(C)B:67 - InsertUnaryOp IINC -1 key
   * 2 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.get(C)B:67 - InsertUnaryOp IINC 1 key
   * 3 Strong Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.get(C)B:67 - InsertUnaryOp Negation of key
   * 4 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.get(C)B:67 - DeleteStatement: get(C)B
   * 5 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.get(C)B:67 - InsertUnaryOp IINC 1 key
   * 6 Strong Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.get(C)B:67 - InsertUnaryOp Negation of key
   * 7 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.get(C)B:67 - DeleteStatement: get(C)B
   * 8 Strong Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.get(C)B:67 - InsertUnaryOp IINC -1 key
   * 9 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.get(C)B: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '/';
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      byte byte0 = tUnmodifiableCharByteMap0.get('/');
      assertEquals((byte)1, byte0);
  }

  //Test case number: 5
  /*
   * 11 covered goals:
   * 1 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.keySet()Lgnu/trove/set/TCharSet;:81 - DeleteField: keySetLgnu/trove/set/TCharSet;
   * 2 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.keySet()Lgnu/trove/set/TCharSet;:79 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.keySet()Lgnu/trove/set/TCharSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TCharSet;
   * 4 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.keySet()Lgnu/trove/set/TCharSet;:80 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 5 Strong Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.keySet()Lgnu/trove/set/TCharSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TCharSet;)Lgnu/trove/set/TCharSet;
   * 6 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.keySet()Lgnu/trove/set/TCharSet;:79 - ReplaceComparisonOperator != null -> = null
   * 7 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.keySet()Lgnu/trove/set/TCharSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TCharSet;
   * 8 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.keySet()Lgnu/trove/set/TCharSet;:80 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 9 Strong Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.keySet()Lgnu/trove/set/TCharSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TCharSet;)Lgnu/trove/set/TCharSet;
   * 10 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.keySet()Lgnu/trove/set/TCharSet;:81 - DeleteField: keySetLgnu/trove/set/TCharSet;
   * 11 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.keySet()Lgnu/trove/set/TCharSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test5()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1846), (-1110.6901F));
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      TUnmodifiableCharSet tUnmodifiableCharSet0 = (TUnmodifiableCharSet)tUnmodifiableCharByteMap0.keySet();
      assertEquals(0, tUnmodifiableCharSet0.size());
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.keys()[C:83 - DeleteStatement: keys()[C
   * 2 Strong Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.keys()[C:83 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 3 Strong Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.keys()[C:83 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 4 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.keys()[C:83 - DeleteStatement: keys()[C
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.keys()[C: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(0, 0);
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      char[] charArray0 = tUnmodifiableCharByteMap0.keys();
      assertNotNull(charArray0);
  }

  //Test case number: 7
  /*
   * 5 covered goals:
   * 1 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.keys([C)[C:84 - DeleteStatement: keys([C)[C
   * 2 Strong Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.keys([C)[C:84 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 3 Strong Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.keys([C)[C:84 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 4 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.keys([C)[C:84 - DeleteStatement: keys([C)[C
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.keys([C)[C: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1846), (-1110.6901F));
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      char[] charArray0 = tUnmodifiableCharByteMap0.keys(tCharByteHashMap0._set);
      assertNotNull(charArray0);
  }

  //Test case number: 8
  /*
   * 11 covered goals:
   * 1 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.valueCollection()Lgnu/trove/TByteCollection;:89 - DeleteField: valuesLgnu/trove/TByteCollection;
   * 2 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.valueCollection()Lgnu/trove/TByteCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TByteCollection;)Lgnu/trove/TByteCollection;
   * 4 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 5 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TByteCollection;
   * 6 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.valueCollection()Lgnu/trove/TByteCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 7 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TByteCollection;)Lgnu/trove/TByteCollection;
   * 8 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.valueCollection()Lgnu/trove/TByteCollection;:89 - DeleteField: valuesLgnu/trove/TByteCollection;
   * 9 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 10 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TByteCollection;
   * 11 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.valueCollection()Lgnu/trove/TByteCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test8()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1846), (-1110.6901F));
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      TUnmodifiableByteCollection tUnmodifiableByteCollection0 = (TUnmodifiableByteCollection)tUnmodifiableCharByteMap0.valueCollection();
      assertEquals(true, tUnmodifiableByteCollection0.isEmpty());
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.values()[B:91 - DeleteStatement: values()[B
   * 2 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.values()[B:91 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 3 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.values()[B:91 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 4 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.values()[B:91 - DeleteStatement: values()[B
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.values()[B: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1013), (-953.0522F));
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      byte[] byteArray0 = tUnmodifiableCharByteMap0.values();
      assertNotNull(byteArray0);
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.values([B)[B:92 - DeleteStatement: values([B)[B
   * 2 Strong Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.values([B)[B:92 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 3 Strong Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.values([B)[B:92 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 4 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.values([B)[B:92 - DeleteStatement: values([B)[B
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.values([B)[B: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(0);
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      byte[] byteArray0 = tUnmodifiableCharByteMap0.values(tCharByteHashMap0._states);
      assertNotNull(byteArray0);
  }

  //Test case number: 11
  /*
   * 7 covered goals:
   * 1 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 2 Strong Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 3 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 4 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 5 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   */

  @Test
  public void test11()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1099), (-1099));
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      boolean boolean0 = tUnmodifiableCharByteMap0.equals((Object) "");
      assertEquals(false, boolean0);
      
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap1 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      assertTrue(tUnmodifiableCharByteMap1.equals(tUnmodifiableCharByteMap0));
  }

  //Test case number: 12
  /*
   * 3 covered goals:
   * 1 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   * 2 Strong Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 3 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test12()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1099), (-1099));
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      boolean boolean0 = tUnmodifiableCharByteMap0.equals((Object) "");
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 3 covered goals:
   * 1 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.hashCode()I:95 - DeleteStatement: hashCode()I
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.hashCode()I: root-Branch
   * 3 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.hashCode()I:95 - DeleteStatement: hashCode()I
   */

  @Test
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 's';
      byte[] byteArray0 = new byte[6];
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      int int0 = tUnmodifiableCharByteMap0.hashCode();
      assertEquals(115, int0);
  }

  //Test case number: 14
  /*
   * 5 covered goals:
   * 1 Strong Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 2 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 3 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 4 Strong Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1013), (-953.0522F));
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      String string0 = tUnmodifiableCharByteMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 15
  /*
   * 3 covered goals:
   * 1 Strong Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.getNoEntryKey()C:97 - DeleteStatement: getNoEntryKey()C
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.getNoEntryKey()C: root-Branch
   * 3 Strong Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.getNoEntryKey()C:97 - DeleteStatement: getNoEntryKey()C
   */

  @Test
  public void test15()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1370), (float) (-1370), '~', (byte)112);
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      char char0 = tUnmodifiableCharByteMap0.getNoEntryKey();
      assertEquals('~', char0);
  }

  //Test case number: 16
  /*
   * 3 covered goals:
   * 1 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.getNoEntryValue()B:98 - DeleteStatement: getNoEntryValue()B
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.getNoEntryValue()B: root-Branch
   * 3 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.getNoEntryValue()B:98 - DeleteStatement: getNoEntryValue()B
   */

  @Test
  public void test16()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((int) 'd', (-608.0461F), '7', (byte)44);
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      byte byte0 = tUnmodifiableCharByteMap0.getNoEntryValue();
      assertEquals((byte)44, byte0);
  }

  //Test case number: 17
  /*
   * 2 covered goals:
   * 1 Strong Mutation 60: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.getNoEntryValue()B:98 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 2 Strong Mutation 60: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.getNoEntryValue()B:98 - DeleteField: mLgnu/trove/map/TCharByteMap;
   */

  @Test
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-39);
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(1, (float) (byte) (-39));
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      tUnmodifiableCharByteMap0.getNoEntryValue();
      byteArray0[1] = (byte)127;
  }

  //Test case number: 18
  /*
   * 3 covered goals:
   * 1 Strong Mutation 63: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   * 3 Strong Mutation 63: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z
   */

  @Test
  public void test18()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(1914);
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      boolean boolean0 = tUnmodifiableCharByteMap0.forEachKey((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 19
  /*
   * 3 covered goals:
   * 1 Strong Mutation 65: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   * 3 Strong Mutation 65: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z
   */

  @Test
  public void test19()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1131), (-195.21936F));
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      boolean boolean0 = tUnmodifiableCharByteMap0.forEachValue((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 20
  /*
   * 3 covered goals:
   * 1 Strong Mutation 67: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:107 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z: root-Branch
   * 3 Strong Mutation 67: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:107 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z
   */

  @Test
  public void test20()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      boolean boolean0 = tUnmodifiableCharByteMap0.forEachEntry((TCharByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 27 covered goals:
   * 1 Strong Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 2 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap$1.key()C:114 - DeleteField: iterLgnu/trove/iterator/TCharByteIterator;
   * 3 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap$1.key()C:114 - DeleteStatement: key()C
   * 4 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap$1.value()B:115 - DeleteField: iterLgnu/trove/iterator/TCharByteIterator;
   * 5 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap$1.value()B:115 - DeleteStatement: value()B
   * 6 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TCharByteIterator;
   * 7 Strong Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap$1.advance()V:116 - DeleteStatement: advance()V
   * 8 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TCharByteIterator;
   * 9 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.size()I:63 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 10 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.size()I:63 - DeleteStatement: size()I
   * 11 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap$1.key()C:114 - DeleteField: iterLgnu/trove/iterator/TCharByteIterator;
   * 12 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap$1.key()C:114 - DeleteStatement: key()C
   * 13 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap$1.value()B:115 - DeleteField: iterLgnu/trove/iterator/TCharByteIterator;
   * 14 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap$1.value()B:115 - DeleteStatement: value()B
   * 15 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TCharByteIterator;
   * 16 Strong Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap$1.advance()V:116 - DeleteStatement: advance()V
   * 17 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TCharByteIterator;
   * 18 Strong Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 19 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.size()I:63 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 20 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.size()I:63 - DeleteStatement: size()I
   * 21 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.iterator()Lgnu/trove/iterator/TCharByteIterator;: root-Branch
   * 22 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.size()I: root-Branch
   * 23 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap$1.key()C: root-Branch
   * 24 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap$1.hasNext()Z: root-Branch
   * 25 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableCharByteMap;)V: root-Branch
   * 26 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap$1.value()B: root-Branch
   * 27 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap$1.advance()V: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) tCharByteHashMap0);
      tCharByteHashMap0.putIfAbsent('}', (byte)101);
      TCharByteHashMap tCharByteHashMap1 = new TCharByteHashMap((TCharByteMap) tUnmodifiableCharByteMap0);
      assertEquals(1, tUnmodifiableCharByteMap0.size());
      assertEquals("{}=101}", tCharByteHashMap1.toString());
  }

  //Test case number: 22
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.<init>(Lgnu/trove/map/TCharByteMap;)V: I17 Branch 1 IFNONNULL L58 - false
   * 2 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap.<init>(Lgnu/trove/map/TCharByteMap;)V:58 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test22()  throws Throwable  {
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = null;
      try {
        tUnmodifiableCharByteMap0 = new TUnmodifiableCharByteMap((TCharByteMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

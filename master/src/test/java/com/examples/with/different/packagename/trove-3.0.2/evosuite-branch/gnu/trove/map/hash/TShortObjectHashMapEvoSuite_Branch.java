/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TObjectFunction;
import gnu.trove.iterator.TShortObjectIterator;
import gnu.trove.map.TShortObjectMap;
import gnu.trove.map.hash.TShortObjectHashMap;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.TShortObjectProcedure;
import gnu.trove.procedure.TShortProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.set.TShortSet;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TShortObjectHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap$ValueView.<init>(Lgnu/trove/map/hash/TShortObjectHashMap;)V: root-Branch
   * 2 gnu.trove.map.hash.TShortObjectHashMap$1.<init>(Lgnu/trove/map/hash/TShortObjectHashMap;)V: root-Branch
   * 3 gnu.trove.map.hash.TShortObjectHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.hash.TShortObjectHashMap.valueCollection()Ljava/util/Collection;: root-Branch
   * 5 gnu.trove.map.hash.TShortObjectHashMap.<init>(IFS)V: root-Branch
   */

//   @Test
//   public void test0()  throws Throwable  {
//       TShortObjectHashMap<Object> tShortObjectHashMap0 = new TShortObjectHashMap<Object>((int) (short)1754, (float) (short)1754, (short)1754);
//       tShortObjectHashMap0.valueCollection();
//       assertEquals(1754, tShortObjectHashMap0.getNoEntryKey());
//   }

  //Test case number: 1
  /*
   * 13 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap$1.execute(SLjava/lang/Object;)Z: root-Branch
   * 2 gnu.trove.map.hash.TShortObjectHashMap.<init>(Lgnu/trove/map/TShortObjectMap;)V: root-Branch
   * 3 gnu.trove.map.hash.TShortObjectHashMap.getNoEntryKey()S: root-Branch
   * 4 gnu.trove.map.hash.TShortObjectHashMap.putAll(Lgnu/trove/map/TShortObjectMap;)V: root-Branch
   * 5 gnu.trove.map.hash.TShortObjectHashMap.put(SLjava/lang/Object;)Ljava/lang/Object;: root-Branch
   * 6 gnu.trove.map.hash.TShortObjectHashMap.<init>(I)V: root-Branch
   * 7 gnu.trove.map.hash.TShortObjectHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I11 Branch 48 IFGE L239 - true
   * 8 gnu.trove.map.hash.TShortObjectHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I40 Branch 49 IFEQ L247 - false
   * 9 gnu.trove.map.hash.TShortObjectHashMap.forEachEntry(Lgnu/trove/procedure/TShortObjectProcedure;)Z: I23 Branch 65 IFLE L416 - true
   * 10 gnu.trove.map.hash.TShortObjectHashMap.forEachEntry(Lgnu/trove/procedure/TShortObjectProcedure;)Z: I23 Branch 65 IFLE L416 - false
   * 11 gnu.trove.map.hash.TShortObjectHashMap.forEachEntry(Lgnu/trove/procedure/TShortObjectProcedure;)Z: I30 Branch 66 IF_ICMPNE L417 - true
   * 12 gnu.trove.map.hash.TShortObjectHashMap.forEachEntry(Lgnu/trove/procedure/TShortObjectProcedure;)Z: I30 Branch 66 IF_ICMPNE L417 - false
   * 13 gnu.trove.map.hash.TShortObjectHashMap.forEachEntry(Lgnu/trove/procedure/TShortObjectProcedure;)Z: I39 Branch 67 IFNE L417 - true
   */

  @Test
  public void test1()  throws Throwable  {
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>(1);
      tShortObjectHashMap0.put((short)0, "");
      TShortObjectHashMap<String> tShortObjectHashMap1 = new TShortObjectHashMap<String>((TShortObjectMap<? extends String>) tShortObjectHashMap0);
      assertEquals(false, tShortObjectHashMap0.isEmpty());
      assertTrue(tShortObjectHashMap1.equals(tShortObjectHashMap0));
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   * 2 gnu.trove.map.hash.TShortObjectHashMap.<init>(IF)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TShortObjectHashMap<Short> tShortObjectHashMap0 = new TShortObjectHashMap<Short>((int) (short)22315, (float) (short)22315);
      boolean boolean0 = tShortObjectHashMap0.forEachKey((TShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.removeAt(I)V: root-Branch
   * 2 gnu.trove.map.hash.TShortObjectHashMap.rehash(I)V: I47 Branch 36 IFLE L161 - true
   * 3 gnu.trove.map.hash.TShortObjectHashMap.rehash(I)V: I47 Branch 36 IFLE L161 - false
   * 4 gnu.trove.map.hash.TShortObjectHashMap.rehash(I)V: I54 Branch 37 IF_ICMPNE L162 - true
   * 5 gnu.trove.map.hash.TShortObjectHashMap.remove(S)Ljava/lang/Object;: I13 Branch 50 IFLT L259 - false
   */

  @Test
  public void test3()  throws Throwable  {
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>(1);
      tShortObjectHashMap0.put((short) (-144), "");
      assertEquals(false, tShortObjectHashMap0.isEmpty());
      
      tShortObjectHashMap0.remove((short) (-144));
      assertEquals(0, tShortObjectHashMap0.size());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.keySet()Lgnu/trove/set/TShortSet;: root-Branch
   * 2 gnu.trove.map.hash.TShortObjectHashMap$KeyView.<init>(Lgnu/trove/map/hash/TShortObjectHashMap;)V: root-Branch
   */

//   @Test
//   public void test4()  throws Throwable  {
//       TShortObjectHashMap<Short> tShortObjectHashMap0 = new TShortObjectHashMap<Short>((-945));
//       TShortSet tShortSet0 = tShortObjectHashMap0.keySet();
//       assertEquals(0, tShortSet0.getNoEntryValue());
//   }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.clear()V: root-Branch
   * 2 gnu.trove.map.hash.TShortObjectHashMap.<init>()V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TShortObjectHashMap<Integer> tShortObjectHashMap0 = new TShortObjectHashMap<Integer>();
      tShortObjectHashMap0.clear();
      assertEquals(23, tShortObjectHashMap0.capacity());
      assertEquals("{}", tShortObjectHashMap0.toString());
  }

  //Test case number: 6
  /*
   * 16 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.containsKey(S)Z: root-Branch
   * 2 gnu.trove.map.hash.TShortObjectHashMap.iterator()Lgnu/trove/iterator/TShortObjectIterator;: root-Branch
   * 3 gnu.trove.map.hash.TShortObjectHashMap$TShortObjectHashIterator.key()S: root-Branch
   * 4 gnu.trove.map.hash.TShortObjectHashMap$TShortObjectHashIterator.<init>(Lgnu/trove/map/hash/TShortObjectHashMap;Lgnu/trove/map/hash/TShortObjectHashMap;)V: root-Branch
   * 5 gnu.trove.map.hash.TShortObjectHashMap$TShortObjectHashIterator.advance()V: root-Branch
   * 6 gnu.trove.map.hash.TShortObjectHashMap$TShortObjectHashIterator.value()Ljava/lang/Object;: root-Branch
   * 7 gnu.trove.map.hash.TShortObjectHashMap.rehash(I)V: I54 Branch 37 IF_ICMPNE L162 - false
   * 8 gnu.trove.map.hash.TShortObjectHashMap.get(S)Ljava/lang/Object;: I9 Branch 46 IFGE L213 - true
   * 9 gnu.trove.map.hash.TShortObjectHashMap.putIfAbsent(SLjava/lang/Object;)Ljava/lang/Object;: I9 Branch 47 IFGE L229 - true
   * 10 gnu.trove.map.hash.TShortObjectHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 73 IFNE L467 - true
   * 11 gnu.trove.map.hash.TShortObjectHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 74 IF_ICMPEQ L471 - true
   * 12 gnu.trove.map.hash.TShortObjectHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 75 IFEQ L476 - true
   * 13 gnu.trove.map.hash.TShortObjectHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 75 IFEQ L476 - false
   * 14 gnu.trove.map.hash.TShortObjectHashMap.equals(Ljava/lang/Object;)Z: I52 Branch 76 IFNONNULL L480 - false
   * 15 gnu.trove.map.hash.TShortObjectHashMap.equals(Ljava/lang/Object;)Z: I58 Branch 77 IFNONNULL L481 - false
   * 16 gnu.trove.map.hash.TShortObjectHashMap.equals(Ljava/lang/Object;)Z: I62 Branch 78 IFNE L481 - true
   */

  @Test
  public void test6()  throws Throwable  {
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>((-1840), (float) (-1840), (short) (-346));
      tShortObjectHashMap0.putIfAbsent((short) (-346), (String) null);
      boolean boolean0 = tShortObjectHashMap0.equals((Object) tShortObjectHashMap0);
      assertEquals(false, tShortObjectHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I30 Branch 40 IF_ICMPNE L194 - false
   * 2 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I35 Branch 41 IF_ACMPNE L194 - true
   * 3 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I23 Branch 39 IFLE L193 - true
   * 4 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I14 Branch 38 IF_ACMPNE L192 - false
   * 5 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I23 Branch 39 IFLE L193 - false
   * 6 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I30 Branch 40 IF_ICMPNE L194 - true
   */

  @Test
  public void test7()  throws Throwable  {
      TShortObjectHashMap<Object> tShortObjectHashMap0 = new TShortObjectHashMap<Object>(16, 16);
      TShortObjectHashMap<String> tShortObjectHashMap1 = new TShortObjectHashMap<String>((int) (short) (-1720), (float) 16, (short) (-1720));
      tShortObjectHashMap0.putIfAbsent((short) (-1720), (Object) tShortObjectHashMap1);
      boolean boolean0 = tShortObjectHashMap0.containsValue((Object) null);
      assertEquals(false, tShortObjectHashMap0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I35 Branch 41 IF_ACMPNE L194 - false
   * 2 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I14 Branch 38 IF_ACMPNE L192 - false
   * 3 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I23 Branch 39 IFLE L193 - false
   * 4 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I30 Branch 40 IF_ICMPNE L194 - true
   * 5 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I30 Branch 40 IF_ICMPNE L194 - false
   */

  @Test
  public void test8()  throws Throwable  {
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>(195311, 195311);
      tShortObjectHashMap0.putIfAbsent((short)73, (String) null);
      boolean boolean0 = tShortObjectHashMap0.containsValue((Object) null);
      assertEquals("{73=null}", tShortObjectHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I57 Branch 43 IF_ICMPNE L200 - false
   * 2 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I62 Branch 44 IF_ACMPEQ L200 - true
   * 3 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I68 Branch 45 IFEQ L200 - false
   * 4 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I14 Branch 38 IF_ACMPNE L192 - true
   * 5 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I50 Branch 42 IFLE L199 - false
   */

  @Test
  public void test9()  throws Throwable  {
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>(0);
      tShortObjectHashMap0.put((short) (-150), "");
      boolean boolean0 = tShortObjectHashMap0.containsValue((Object) "");
      assertEquals(1, tShortObjectHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 10
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I62 Branch 44 IF_ACMPEQ L200 - false
   * 2 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I68 Branch 45 IFEQ L200 - true
   * 3 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I14 Branch 38 IF_ACMPNE L192 - true
   * 4 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I50 Branch 42 IFLE L199 - true
   * 5 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I50 Branch 42 IFLE L199 - false
   * 6 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I57 Branch 43 IF_ICMPNE L200 - true
   * 7 gnu.trove.map.hash.TShortObjectHashMap.containsValue(Ljava/lang/Object;)Z: I57 Branch 43 IF_ICMPNE L200 - false
   */

  @Test
  public void test10()  throws Throwable  {
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>(0, 0);
      tShortObjectHashMap0.putIfAbsent((short)0, "jwOy");
      boolean boolean0 = tShortObjectHashMap0.containsValue((Object) "fr");
      assertEquals(false, tShortObjectHashMap0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.get(S)Ljava/lang/Object;: I9 Branch 46 IFGE L213 - false
   */

//   @Test
//   public void test11()  throws Throwable  {
//       TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>((int) (short) (-1720), (float) 16, (short) (-1720));
//       tShortObjectHashMap0.get((short) (-1720));
//       assertEquals(-1720, tShortObjectHashMap0.getNoEntryKey());
//   }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.putIfAbsent(SLjava/lang/Object;)Ljava/lang/Object;: I9 Branch 47 IFGE L229 - false
   */

  @Test
  public void test12()  throws Throwable  {
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>(0);
      tShortObjectHashMap0.put((short)1754, (String) null);
      tShortObjectHashMap0.putIfAbsent((short)1754, (String) null);
      assertEquals("{1754=null}", tShortObjectHashMap0.toString());
      assertEquals(1, tShortObjectHashMap0.size());
  }

  //Test case number: 13
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I11 Branch 48 IFGE L239 - false
   * 2 gnu.trove.map.hash.TShortObjectHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I40 Branch 49 IFEQ L247 - true
   */

  @Test
  public void test13()  throws Throwable  {
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>((-1846));
      tShortObjectHashMap0.putIfAbsent((short)1571, "begin index can not be < 0");
      tShortObjectHashMap0.put((short)1571, (String) null);
      assertEquals(false, tShortObjectHashMap0.isEmpty());
      assertEquals(3, tShortObjectHashMap0.capacity());
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.remove(S)Ljava/lang/Object;: I13 Branch 50 IFLT L259 - true
   */

  @Test
  public void test14()  throws Throwable  {
      TShortObjectHashMap<Integer> tShortObjectHashMap0 = new TShortObjectHashMap<Integer>();
      tShortObjectHashMap0.remove((short)22315);
      assertEquals(23, tShortObjectHashMap0.capacity());
      assertEquals(0, tShortObjectHashMap0.size());
      assertEquals(true, tShortObjectHashMap0.isEmpty());
  }

  //Test case number: 15
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.putAll(Ljava/util/Map;)V: I13 Branch 51 IFEQ L279 - false
   * 2 gnu.trove.map.hash.TShortObjectHashMap.putAll(Ljava/util/Map;)V: I13 Branch 51 IFEQ L279 - true
   */

  @Test
  public void test15()  throws Throwable  {
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>(1);
      HashMap<Short, String> hashMap0 = new HashMap<Short, String>();
      Short short0 = new Short((short) (-11));
      hashMap0.put(short0, "=");
      tShortObjectHashMap0.putAll((Map<? extends Short, ? extends String>) hashMap0);
      assertEquals(1, tShortObjectHashMap0.size());
      assertEquals("{-11==}", tShortObjectHashMap0.toString());
  }

  //Test case number: 16
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.keys()[S: I34 Branch 53 IF_ICMPNE L316 - false
   * 2 gnu.trove.map.hash.TShortObjectHashMap.keys()[S: I27 Branch 52 IFLE L315 - true
   * 3 gnu.trove.map.hash.TShortObjectHashMap.keys()[S: I27 Branch 52 IFLE L315 - false
   * 4 gnu.trove.map.hash.TShortObjectHashMap.keys()[S: I34 Branch 53 IF_ICMPNE L316 - true
   */

  @Test
  public void test16()  throws Throwable  {
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>(1);
      tShortObjectHashMap0.put((short)0, "");
      tShortObjectHashMap0.keys();
      assertEquals("{0=}", tShortObjectHashMap0.toString());
      assertEquals(false, tShortObjectHashMap0.isEmpty());
  }

  //Test case number: 17
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.keys([S)[S: I6 Branch 54 IF_ICMPGE L327 - true
   * 2 gnu.trove.map.hash.TShortObjectHashMap.keys([S)[S: I34 Branch 55 IFLE L334 - true
   * 3 gnu.trove.map.hash.TShortObjectHashMap.keys([S)[S: I34 Branch 55 IFLE L334 - false
   * 4 gnu.trove.map.hash.TShortObjectHashMap.keys([S)[S: I41 Branch 56 IF_ICMPNE L335 - true
   */

//   @Test
//   public void test17()  throws Throwable  {
//       TShortObjectHashMap<Integer> tShortObjectHashMap0 = new TShortObjectHashMap<Integer>(16, (float) 16, (short) (-1720));
//       TShortObjectHashMap<Object> tShortObjectHashMap1 = new TShortObjectHashMap<Object>(16, 16);
//       short[] shortArray0 = tShortObjectHashMap1.keys(tShortObjectHashMap0._set);
//       assertNotNull(shortArray0);
//       assertEquals(-1720, tShortObjectHashMap0.getNoEntryKey());
//   }

  //Test case number: 18
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.keys([S)[S: I6 Branch 54 IF_ICMPGE L327 - false
   * 2 gnu.trove.map.hash.TShortObjectHashMap.keys([S)[S: I41 Branch 56 IF_ICMPNE L335 - false
   * 3 gnu.trove.map.hash.TShortObjectHashMap.keys([S)[S: I34 Branch 55 IFLE L334 - true
   * 4 gnu.trove.map.hash.TShortObjectHashMap.keys([S)[S: I34 Branch 55 IFLE L334 - false
   * 5 gnu.trove.map.hash.TShortObjectHashMap.keys([S)[S: I41 Branch 56 IF_ICMPNE L335 - true
   * 6 gnu.trove.map.hash.TShortObjectHashMap.keys()[S: I27 Branch 52 IFLE L315 - true
   * 7 gnu.trove.map.hash.TShortObjectHashMap.keys()[S: I27 Branch 52 IFLE L315 - false
   * 8 gnu.trove.map.hash.TShortObjectHashMap.keys()[S: I34 Branch 53 IF_ICMPNE L316 - true
   */

  @Test
  public void test18()  throws Throwable  {
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>(0, 0);
      short[] shortArray0 = tShortObjectHashMap0.keys();
      tShortObjectHashMap0.putIfAbsent((short)0, "jwOy");
      tShortObjectHashMap0.keys(shortArray0);
      assertEquals(false, tShortObjectHashMap0.isEmpty());
      assertEquals("{0=jwOy}", tShortObjectHashMap0.toString());
  }

  //Test case number: 19
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.values()[Ljava/lang/Object;: I35 Branch 58 IF_ICMPNE L357 - false
   * 2 gnu.trove.map.hash.TShortObjectHashMap.values()[Ljava/lang/Object;: I28 Branch 57 IFLE L356 - true
   * 3 gnu.trove.map.hash.TShortObjectHashMap.values()[Ljava/lang/Object;: I28 Branch 57 IFLE L356 - false
   * 4 gnu.trove.map.hash.TShortObjectHashMap.values()[Ljava/lang/Object;: I35 Branch 58 IF_ICMPNE L357 - true
   */

  @Test
  public void test19()  throws Throwable  {
      TShortObjectHashMap<Integer> tShortObjectHashMap0 = new TShortObjectHashMap<Integer>();
      tShortObjectHashMap0.putIfAbsent((short)1571, (Integer) (-1846));
      tShortObjectHashMap0.values();
      assertEquals("{1571=-1846}", tShortObjectHashMap0.toString());
      assertEquals(false, tShortObjectHashMap0.isEmpty());
  }

  //Test case number: 20
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I6 Branch 59 IF_ICMPGE L368 - true
   * 2 gnu.trove.map.hash.TShortObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I39 Branch 60 IFLE L376 - true
   * 3 gnu.trove.map.hash.TShortObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I39 Branch 60 IFLE L376 - false
   * 4 gnu.trove.map.hash.TShortObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I46 Branch 61 IF_ICMPNE L377 - true
   */

  @Test
  public void test20()  throws Throwable  {
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>(67);
      String[] stringArray0 = new String[6];
      String[] stringArray1 = tShortObjectHashMap0.values(stringArray0);
      assertSame(stringArray0, stringArray1);
      assertEquals(137, tShortObjectHashMap0.capacity());
      assertNotNull(stringArray1);
  }

  //Test case number: 21
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I6 Branch 59 IF_ICMPGE L368 - false
   * 2 gnu.trove.map.hash.TShortObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I46 Branch 61 IF_ICMPNE L377 - false
   * 3 gnu.trove.map.hash.TShortObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I39 Branch 60 IFLE L376 - true
   * 4 gnu.trove.map.hash.TShortObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I39 Branch 60 IFLE L376 - false
   * 5 gnu.trove.map.hash.TShortObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I46 Branch 61 IF_ICMPNE L377 - true
   */

  @Test
  public void test21()  throws Throwable  {
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>(1);
      tShortObjectHashMap0.put((short)0, "");
      tShortObjectHashMap0.put((short) (-144), "");
      String[] stringArray0 = new String[1];
      tShortObjectHashMap0.values(stringArray0);
      assertEquals(2, tShortObjectHashMap0.size());
      assertEquals("{-144=,0=}", tShortObjectHashMap0.toString());
  }

  //Test case number: 22
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I25 Branch 63 IF_ICMPNE L402 - false
   * 2 gnu.trove.map.hash.TShortObjectHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I31 Branch 64 IFNE L402 - true
   * 3 gnu.trove.map.hash.TShortObjectHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I18 Branch 62 IFLE L401 - true
   * 4 gnu.trove.map.hash.TShortObjectHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I18 Branch 62 IFLE L401 - false
   * 5 gnu.trove.map.hash.TShortObjectHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I25 Branch 63 IF_ICMPNE L402 - true
   */

  @Test
  public void test22()  throws Throwable  {
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>(0);
      tShortObjectHashMap0.put((short) (-150), "");
      Object[] objectArray0 = new Object[10];
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
      boolean boolean0 = tShortObjectHashMap0.forEachValue((TObjectProcedure<? super String>) toObjectArrayProceedure0);
      assertEquals(1, tShortObjectHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.retainEntries(Lgnu/trove/procedure/TShortObjectProcedure;)Z: I31 Branch 68 IFLE L436 - true
   * 2 gnu.trove.map.hash.TShortObjectHashMap.retainEntries(Lgnu/trove/procedure/TShortObjectProcedure;)Z: I31 Branch 68 IFLE L436 - false
   * 3 gnu.trove.map.hash.TShortObjectHashMap.retainEntries(Lgnu/trove/procedure/TShortObjectProcedure;)Z: I38 Branch 69 IF_ICMPNE L437 - true
   */

  @Test
  public void test23()  throws Throwable  {
      TShortObjectHashMap<Short> tShortObjectHashMap0 = new TShortObjectHashMap<Short>((-12), (-12));
      boolean boolean0 = tShortObjectHashMap0.retainEntries((TShortObjectProcedure<? super Short>) null);
      assertEquals("{}", tShortObjectHashMap0.toString());
      assertEquals(3, tShortObjectHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 24
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: I18 Branch 71 IFLE L455 - true
   * 2 gnu.trove.map.hash.TShortObjectHashMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: I18 Branch 71 IFLE L455 - false
   * 3 gnu.trove.map.hash.TShortObjectHashMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: I25 Branch 72 IF_ICMPNE L456 - true
   */

  @Test
  public void test24()  throws Throwable  {
      TShortObjectHashMap<Short> tShortObjectHashMap0 = new TShortObjectHashMap<Short>((-945));
      tShortObjectHashMap0.transformValues((TObjectFunction<Short, Short>) null);
      assertEquals(3, tShortObjectHashMap0.capacity());
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 73 IFNE L467 - false
   */

  @Test
  public void test25()  throws Throwable  {
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>(0);
      TShortObjectIterator<String> tShortObjectIterator0 = tShortObjectHashMap0.iterator();
      boolean boolean0 = tShortObjectHashMap0.equals((Object) tShortObjectIterator0);
      assertEquals(false, boolean0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 74 IF_ICMPEQ L471 - false
   */

  @Test
  public void test26()  throws Throwable  {
      TShortObjectHashMap<Integer> tShortObjectHashMap0 = new TShortObjectHashMap<Integer>();
      TShortObjectHashMap<String> tShortObjectHashMap1 = new TShortObjectHashMap<String>((-1855), (float) (-1855), (short)773);
      tShortObjectHashMap0.putIfAbsent((short)773, (Integer) (-1855));
      boolean boolean0 = tShortObjectHashMap1.equals((Object) tShortObjectHashMap0);
      assertEquals(1, tShortObjectHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 27
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.equals(Ljava/lang/Object;)Z: I52 Branch 76 IFNONNULL L480 - true
   * 2 gnu.trove.map.hash.TShortObjectHashMap.equals(Ljava/lang/Object;)Z: I75 Branch 79 IFNE L485 - false
   * 3 gnu.trove.map.hash.TShortObjectHashMap.<init>()V: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TShortObjectHashMap<Integer> tShortObjectHashMap0 = new TShortObjectHashMap<Integer>();
      TShortObjectHashMap<String> tShortObjectHashMap1 = new TShortObjectHashMap<String>((-1840), (float) (-1840), (short)773);
      tShortObjectHashMap0.putIfAbsent((short)773, (Integer) (-1840));
      tShortObjectHashMap1.putIfAbsent((short)773, " greater than last index ");
      boolean boolean0 = tShortObjectHashMap1.equals((Object) tShortObjectHashMap0);
      assertEquals("{773=-1840}", tShortObjectHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 28
  /*
   * 13 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.equals(Ljava/lang/Object;)Z: I75 Branch 79 IFNE L485 - true
   * 2 gnu.trove.map.hash.TShortObjectHashMap.<init>(IFS)V: root-Branch
   * 3 gnu.trove.map.hash.TShortObjectHashMap.iterator()Lgnu/trove/iterator/TShortObjectIterator;: root-Branch
   * 4 gnu.trove.map.hash.TShortObjectHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 73 IFNE L467 - true
   * 5 gnu.trove.map.hash.TShortObjectHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 74 IF_ICMPEQ L471 - true
   * 6 gnu.trove.map.hash.TShortObjectHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 75 IFEQ L476 - true
   * 7 gnu.trove.map.hash.TShortObjectHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 75 IFEQ L476 - false
   * 8 gnu.trove.map.hash.TShortObjectHashMap.equals(Ljava/lang/Object;)Z: I52 Branch 76 IFNONNULL L480 - true
   * 9 gnu.trove.map.hash.TShortObjectHashMap.get(S)Ljava/lang/Object;: I9 Branch 46 IFGE L213 - true
   * 10 gnu.trove.map.hash.TShortObjectHashMap$TShortObjectHashIterator.key()S: root-Branch
   * 11 gnu.trove.map.hash.TShortObjectHashMap$TShortObjectHashIterator.<init>(Lgnu/trove/map/hash/TShortObjectHashMap;Lgnu/trove/map/hash/TShortObjectHashMap;)V: root-Branch
   * 12 gnu.trove.map.hash.TShortObjectHashMap$TShortObjectHashIterator.advance()V: root-Branch
   * 13 gnu.trove.map.hash.TShortObjectHashMap$TShortObjectHashIterator.value()Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test28()  throws Throwable  {
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>((-1840), (float) (-1840), (short) (-346));
      tShortObjectHashMap0.put((short)1, "");
      boolean boolean0 = tShortObjectHashMap0.equals((Object) tShortObjectHashMap0);
      assertEquals("{1=}", tShortObjectHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 29
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.hashCode()I: I29 Branch 81 IF_ICMPNE L503 - false
   * 2 gnu.trove.map.hash.TShortObjectHashMap.hashCode()I: I41 Branch 82 IFNONNULL L504 - true
   * 3 gnu.trove.map.hash.TShortObjectHashMap.hashCode()I: I22 Branch 80 IFLE L502 - true
   * 4 gnu.trove.map.hash.TShortObjectHashMap.hashCode()I: I22 Branch 80 IFLE L502 - false
   * 5 gnu.trove.map.hash.TShortObjectHashMap.hashCode()I: I29 Branch 81 IF_ICMPNE L503 - true
   */

  @Test
  public void test29()  throws Throwable  {
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>((-1846));
      tShortObjectHashMap0.putIfAbsent((short)1571, "begin index can not be < 0");
      int int0 = tShortObjectHashMap0.hashCode();
      assertEquals(false, tShortObjectHashMap0.isEmpty());
      assertEquals(1147962994, int0);
  }

  //Test case number: 30
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.hashCode()I: I41 Branch 82 IFNONNULL L504 - false
   * 2 gnu.trove.map.hash.TShortObjectHashMap.hashCode()I: I22 Branch 80 IFLE L502 - true
   * 3 gnu.trove.map.hash.TShortObjectHashMap.hashCode()I: I22 Branch 80 IFLE L502 - false
   * 4 gnu.trove.map.hash.TShortObjectHashMap.hashCode()I: I29 Branch 81 IF_ICMPNE L503 - true
   * 5 gnu.trove.map.hash.TShortObjectHashMap.hashCode()I: I29 Branch 81 IF_ICMPNE L503 - false
   */

  @Test
  public void test30()  throws Throwable  {
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>((-1846));
      tShortObjectHashMap0.put((short)1571, (String) null);
      int int0 = tShortObjectHashMap0.hashCode();
      assertEquals(1, tShortObjectHashMap0.size());
      assertEquals(1571, int0);
  }

  //Test case number: 31
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I39 Branch 84 IF_ICMPNE L974 - false
   * 2 gnu.trove.map.hash.TShortObjectHashMap.put(SLjava/lang/Object;)Ljava/lang/Object;: root-Branch
   * 3 gnu.trove.map.hash.TShortObjectHashMap.<init>(I)V: root-Branch
   * 4 gnu.trove.map.hash.TShortObjectHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I31 Branch 83 IFLE L973 - true
   * 5 gnu.trove.map.hash.TShortObjectHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I31 Branch 83 IFLE L973 - false
   * 6 gnu.trove.map.hash.TShortObjectHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I39 Branch 84 IF_ICMPNE L974 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>(0);
      tShortObjectHashMap0.put((short) (-150), "");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tShortObjectHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(1, tShortObjectHashMap0.size());
      assertEquals("\uFFFD\uFFFD\u0000\u0005w\u0012\u0000\u0000?\u0000\u0000\u0000?\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\uFFFDjt\u0000\u0000", byteArrayOutputStream0.toString());
  }

  //Test case number: 32
  /*
   * 19 covered goals:
   * 1 gnu.trove.map.hash.TShortObjectHashMap$2.execute(SLjava/lang/Object;)Z: I4 Branch 97 IFEQ L1013 - true
   * 2 gnu.trove.map.hash.TShortObjectHashMap$2.execute(SLjava/lang/Object;)Z: I4 Branch 97 IFEQ L1013 - false
   * 3 gnu.trove.map.hash.TShortObjectHashMap$1.<init>(Lgnu/trove/map/hash/TShortObjectHashMap;)V: root-Branch
   * 4 gnu.trove.map.hash.TShortObjectHashMap$2.<init>(Lgnu/trove/map/hash/TShortObjectHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 5 gnu.trove.map.hash.TShortObjectHashMap.toString()Ljava/lang/String;: root-Branch
   * 6 gnu.trove.map.hash.TShortObjectHashMap.setUp(I)I: root-Branch
   * 7 gnu.trove.map.hash.TShortObjectHashMap.<init>(IF)V: root-Branch
   * 8 gnu.trove.map.hash.TShortObjectHashMap.rehash(I)V: I47 Branch 36 IFLE L161 - true
   * 9 gnu.trove.map.hash.TShortObjectHashMap.rehash(I)V: I47 Branch 36 IFLE L161 - false
   * 10 gnu.trove.map.hash.TShortObjectHashMap.rehash(I)V: I54 Branch 37 IF_ICMPNE L162 - true
   * 11 gnu.trove.map.hash.TShortObjectHashMap.rehash(I)V: I54 Branch 37 IF_ICMPNE L162 - false
   * 12 gnu.trove.map.hash.TShortObjectHashMap.putIfAbsent(SLjava/lang/Object;)Ljava/lang/Object;: I9 Branch 47 IFGE L229 - true
   * 13 gnu.trove.map.hash.TShortObjectHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I11 Branch 48 IFGE L239 - true
   * 14 gnu.trove.map.hash.TShortObjectHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I40 Branch 49 IFEQ L247 - false
   * 15 gnu.trove.map.hash.TShortObjectHashMap.forEachEntry(Lgnu/trove/procedure/TShortObjectProcedure;)Z: I23 Branch 65 IFLE L416 - true
   * 16 gnu.trove.map.hash.TShortObjectHashMap.forEachEntry(Lgnu/trove/procedure/TShortObjectProcedure;)Z: I23 Branch 65 IFLE L416 - false
   * 17 gnu.trove.map.hash.TShortObjectHashMap.forEachEntry(Lgnu/trove/procedure/TShortObjectProcedure;)Z: I30 Branch 66 IF_ICMPNE L417 - true
   * 18 gnu.trove.map.hash.TShortObjectHashMap.forEachEntry(Lgnu/trove/procedure/TShortObjectProcedure;)Z: I30 Branch 66 IF_ICMPNE L417 - false
   * 19 gnu.trove.map.hash.TShortObjectHashMap.forEachEntry(Lgnu/trove/procedure/TShortObjectProcedure;)Z: I39 Branch 67 IFNE L417 - true
   */

  @Test
  public void test32()  throws Throwable  {
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>(0, 0);
      tShortObjectHashMap0.putIfAbsent((short)0, "jwOy");
      tShortObjectHashMap0.putIfAbsent((short)142, "jwOy");
      String string0 = tShortObjectHashMap0.toString();
      assertEquals(false, tShortObjectHashMap0.isEmpty());
      assertEquals("{142=jwOy,0=jwOy}", string0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TByteFunction;
import gnu.trove.impl.sync.TSynchronizedByteCollection;
import gnu.trove.impl.sync.TSynchronizedCharByteMap;
import gnu.trove.impl.sync.TSynchronizedCharSet;
import gnu.trove.iterator.TCharByteIterator;
import gnu.trove.map.TCharByteMap;
import gnu.trove.map.hash.TCharByteHashMap;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TCharByteProcedure;
import gnu.trove.procedure.TCharProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedCharByteMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.put(CB)B: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedCharByteMap.<init>(Lgnu/trove/map/TCharByteMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-10));
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      tSynchronizedCharByteMap0.put('m', (byte) (-10));
      assertEquals(1, tCharByteHashMap0.size());
      assertEquals("{m=-10}", tCharByteHashMap0.toString());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      HashMap<Character, Byte> hashMap0 = new HashMap<Character, Byte>();
      tSynchronizedCharByteMap0.putAll((Map<? extends Character, ? extends Byte>) hashMap0);
      assertEquals('\u0000', tSynchronizedCharByteMap0.getNoEntryKey());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-10));
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      boolean boolean0 = tSynchronizedCharByteMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.values([B)[B: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      byte[] byteArray0 = tSynchronizedCharByteMap0.values(tCharByteHashMap0._states);
      assertNotNull(byteArray0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.transformValues(Lgnu/trove/function/TByteFunction;)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      tSynchronizedCharByteMap0.transformValues((TByteFunction) null);
      assertEquals("{}", tSynchronizedCharByteMap0.toString());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      char[] charArray0 = new char[1];
      byte[] byteArray0 = new byte[5];
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      // Undeclared exception!
      try {
        tSynchronizedCharByteMap0.retainEntries((TCharByteProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.hashCode()I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedCharByteMap.<init>(Lgnu/trove/map/TCharByteMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(490, 490);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0, (Object) "X");
      int int0 = tSynchronizedCharByteMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.putAll(Lgnu/trove/map/TCharByteMap;)V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      char[] charArray0 = new char[1];
      byte[] byteArray0 = new byte[5];
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      tSynchronizedCharByteMap0.putAll((TCharByteMap) tCharByteHashMap0);
      assertEquals(1, tCharByteHashMap0.size());
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(4, 4);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      boolean boolean0 = tSynchronizedCharByteMap0.forEachValue((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      boolean boolean0 = tSynchronizedCharByteMap0.forEachEntry((TCharByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.clear()V: root-Branch
   */

//   @Test
//   public void test10()  throws Throwable  {
//       TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
//       TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
//       tSynchronizedCharByteMap0.clear();
//       assertEquals(0, tSynchronizedCharByteMap0.getNoEntryValue());
//   }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.keys([C)[C: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(490, 490);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0, (Object) "X");
      char[] charArray0 = tSynchronizedCharByteMap0.keys(tCharByteHashMap0._set);
      assertNotNull(charArray0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.keys()[C: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(4, 4);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      char[] charArray0 = tSynchronizedCharByteMap0.keys();
      assertNotNull(charArray0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-10));
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      byte byte0 = tSynchronizedCharByteMap0.adjustOrPutValue('m', (byte) (-10), (byte) (-10));
      assertEquals(1, tCharByteHashMap0.size());
      assertEquals((byte) (-10), byte0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.getNoEntryKey()C: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      char char0 = tSynchronizedCharByteMap0.getNoEntryKey();
      assertEquals('\u0000', char0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.values()[B: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-12));
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      byte[] byteArray0 = tSynchronizedCharByteMap0.values();
      assertNotNull(byteArray0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.increment(C)Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-10));
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      boolean boolean0 = tSynchronizedCharByteMap0.increment('m');
      assertEquals(false, boolean0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.containsValue(B)Z: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-10));
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      boolean boolean0 = tSynchronizedCharByteMap0.containsValue((byte) (-10));
      assertEquals(false, boolean0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.putIfAbsent(CB)B: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      tSynchronizedCharByteMap0.putIfAbsent('\u0000', (byte)99);
      assertEquals(1, tCharByteHashMap0.size());
      assertEquals("{\u0000=99}", tCharByteHashMap0.toString());
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.iterator()Lgnu/trove/iterator/TCharByteIterator;: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(490, 490);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0, (Object) "X");
      TCharByteIterator tCharByteIterator0 = tSynchronizedCharByteMap0.iterator();
      assertEquals(false, tCharByteIterator0.hasNext());
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(4, 4);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      String string0 = tSynchronizedCharByteMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.getNoEntryValue()B: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      byte byte0 = tSynchronizedCharByteMap0.getNoEntryValue();
      assertEquals((byte)0, byte0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustValue(CB)Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-10));
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      boolean boolean0 = tSynchronizedCharByteMap0.adjustValue('m', (byte) (-10));
      assertEquals(false, boolean0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.size()I: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(490, 490);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0, (Object) "X");
      int int0 = tSynchronizedCharByteMap0.size();
      assertEquals(0, int0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-12));
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      boolean boolean0 = tSynchronizedCharByteMap0.forEachKey((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.containsKey(C)Z: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-10));
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      boolean boolean0 = tSynchronizedCharByteMap0.containsKey('m');
      assertEquals(false, boolean0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.get(C)B: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      byte byte0 = tSynchronizedCharByteMap0.get('\u0000');
      assertEquals((byte)0, byte0);
  }

  //Test case number: 27
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.equals(Ljava/lang/Object;)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedCharByteMap.<init>(Lgnu/trove/map/TCharByteMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(490, 490);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0, (Object) "X");
      boolean boolean0 = tSynchronizedCharByteMap0.equals((Object) "X");
      assertEquals(false, boolean0);
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.remove(C)B: root-Branch
   */

  @Test
  public void test28()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      byte byte0 = tSynchronizedCharByteMap0.remove('\u0000');
      assertEquals((byte)0, byte0);
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.<init>(Lgnu/trove/map/TCharByteMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = null;
      try {
        tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.keySet()Lgnu/trove/set/TCharSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedCharByteMap.keySet()Lgnu/trove/set/TCharSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test30()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-10));
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      TSynchronizedCharSet tSynchronizedCharSet0 = (TSynchronizedCharSet)tSynchronizedCharByteMap0.keySet();
      assertNotNull(tSynchronizedCharSet0);
      
      TSynchronizedCharSet tSynchronizedCharSet1 = (TSynchronizedCharSet)tSynchronizedCharByteMap0.keySet();
      assertSame(tSynchronizedCharSet1, tSynchronizedCharSet0);
  }

  //Test case number: 31
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.valueCollection()Lgnu/trove/TByteCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 gnu.trove.impl.sync.TSynchronizedCharByteMap.valueCollection()Lgnu/trove/TByteCollection;: I11 Branch 3 IFNONNULL L121 - false
   * 3 gnu.trove.impl.sync.TSynchronizedCharByteMap.<init>(Lgnu/trove/map/TCharByteMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      TSynchronizedByteCollection tSynchronizedByteCollection0 = (TSynchronizedByteCollection)tSynchronizedCharByteMap0.valueCollection();
      assertNotNull(tSynchronizedByteCollection0);
      
      TSynchronizedByteCollection tSynchronizedByteCollection1 = (TSynchronizedByteCollection)tSynchronizedCharByteMap0.valueCollection();
      assertSame(tSynchronizedByteCollection1, tSynchronizedByteCollection0);
  }
}

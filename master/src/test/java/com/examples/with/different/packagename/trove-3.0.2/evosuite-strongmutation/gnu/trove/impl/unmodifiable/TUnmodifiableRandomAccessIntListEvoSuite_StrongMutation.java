/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedRandomAccessIntList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList;
import gnu.trove.list.TIntList;
import gnu.trove.list.array.TIntArrayList;
import gnu.trove.list.linked.TIntLinkedList;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableRandomAccessIntListEvoSuite_StrongMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList.subList(II)Lgnu/trove/list/TIntList;:62 - ReplaceVariable fromIndex -> toIndex
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList.subList(II)Lgnu/trove/list/TIntList;: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList.<init>(Lgnu/trove/list/TIntList;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[2];
      TIntArrayList tIntArrayList0 = new TIntArrayList(intArray0);
      TUnmodifiableRandomAccessIntList tUnmodifiableRandomAccessIntList0 = new TUnmodifiableRandomAccessIntList((TIntList) tIntArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessIntList0.subList(1, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // end index 0 greater than begin index 1
         //
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 Strong Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList.subList(II)Lgnu/trove/list/TIntList;:62 - ReplaceVariable toIndex -> fromIndex
   */

  @Test
  public void test1()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList((-16));
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntLinkedList0);
      TUnmodifiableRandomAccessIntList tUnmodifiableRandomAccessIntList0 = new TUnmodifiableRandomAccessIntList((TIntList) tSynchronizedRandomAccessIntList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessIntList0.subList(0, (-16));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 0 greater than end index -16
         //
      }
  }

  //Test case number: 2
  /*
   * 8 covered goals:
   * 1 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList.subList(II)Lgnu/trove/list/TIntList;:62 - InsertUnaryOp Negation of toIndex
   * 2 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList.subList(II)Lgnu/trove/list/TIntList;:62 - InsertUnaryOp Negation of fromIndex
   * 3 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList.subList(II)Lgnu/trove/list/TIntList;:62 - DeleteField: listLgnu/trove/list/TIntList;
   * 4 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList.subList(II)Lgnu/trove/list/TIntList;:62 - InsertUnaryOp Negation of fromIndex
   * 5 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList.subList(II)Lgnu/trove/list/TIntList;:62 - InsertUnaryOp IINC 1 fromIndex
   * 6 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList.subList(II)Lgnu/trove/list/TIntList;:62 - InsertUnaryOp Negation of toIndex
   * 7 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList.subList(II)Lgnu/trove/list/TIntList;:62 - InsertUnaryOp IINC -1 toIndex
   * 8 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList.subList(II)Lgnu/trove/list/TIntList;:62 - DeleteStatement: subList(II)Lgnu/trove/list/TIntList;
   */

  @Test
  public void test2()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList(8, 8);
      TUnmodifiableRandomAccessIntList tUnmodifiableRandomAccessIntList0 = new TUnmodifiableRandomAccessIntList((TIntList) tIntArrayList0);
      TUnmodifiableRandomAccessIntList tUnmodifiableRandomAccessIntList1 = (TUnmodifiableRandomAccessIntList)tUnmodifiableRandomAccessIntList0.subList(8, 8);
      assertNotNull(tUnmodifiableRandomAccessIntList1);
      assertEquals("{}", tUnmodifiableRandomAccessIntList1.toString());
  }

  //Test case number: 3
  /*
   * 6 covered goals:
   * 1 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList.subList(II)Lgnu/trove/list/TIntList;:62 - DeleteStatement: subList(II)Lgnu/trove/list/TIntList;
   * 2 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList.subList(II)Lgnu/trove/list/TIntList;:62 - DeleteField: listLgnu/trove/list/TIntList;
   * 3 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList.subList(II)Lgnu/trove/list/TIntList;:62 - InsertUnaryOp IINC 1 fromIndex
   * 4 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList.subList(II)Lgnu/trove/list/TIntList;:62 - InsertUnaryOp IINC -1 fromIndex
   * 5 Strong Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList.subList(II)Lgnu/trove/list/TIntList;:62 - InsertUnaryOp IINC 1 toIndex
   * 6 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList.subList(II)Lgnu/trove/list/TIntList;:62 - InsertUnaryOp IINC -1 toIndex
   */

  @Test
  public void test3()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList(0, 0);
      TUnmodifiableRandomAccessIntList tUnmodifiableRandomAccessIntList0 = new TUnmodifiableRandomAccessIntList((TIntList) tIntArrayList0);
      TUnmodifiableRandomAccessIntList tUnmodifiableRandomAccessIntList1 = (TUnmodifiableRandomAccessIntList)tUnmodifiableRandomAccessIntList0.subList(0, 0);
      assertEquals(0, tUnmodifiableRandomAccessIntList1.sum());
  }
}

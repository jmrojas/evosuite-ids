/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TShortFunction;
import gnu.trove.map.TObjectShortMap;
import gnu.trove.map.custom_hash.TObjectShortCustomHashMap;
import gnu.trove.map.hash.TObjectShortHashMap;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.TObjectShortProcedure;
import gnu.trove.procedure.TShortProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.set.hash.TShortHashSet;
import java.io.ByteArrayOutputStream;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TObjectShortHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 12 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   * 2 gnu.trove.map.hash.TObjectShortHashMap.getNoEntryValue()S: root-Branch
   * 3 gnu.trove.map.hash.TObjectShortHashMap.<init>(Lgnu/trove/map/TObjectShortMap;)V: I13 Branch 9 IFEQ L138 - false
   * 4 gnu.trove.map.hash.TObjectShortHashMap.<init>(Lgnu/trove/map/TObjectShortMap;)V: I35 Branch 10 IFEQ L143 - true
   * 5 gnu.trove.map.hash.TObjectShortHashMap.<init>()V: root-Branch
   * 6 gnu.trove.map.hash.TObjectShortHashMap.putAll(Lgnu/trove/map/TObjectShortMap;)V: root-Branch
   * 7 gnu.trove.map.hash.TObjectShortHashMap.setUp(I)I: root-Branch
   * 8 gnu.trove.map.hash.TObjectShortHashMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I18 Branch 47 IFLE L506 - true
   * 9 gnu.trove.map.hash.TObjectShortHashMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I18 Branch 47 IFLE L506 - false
   * 10 gnu.trove.map.hash.TObjectShortHashMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I25 Branch 48 IF_ACMPEQ L507 - true
   * 11 gnu.trove.map.hash.TObjectShortHashMap.<init>(IFS)V: I23 Branch 8 IFEQ L124 - true
   * 12 gnu.trove.map.hash.TObjectShortHashMap$1.<init>(Lgnu/trove/map/hash/TObjectShortHashMap;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TObjectShortHashMap<Integer> tObjectShortHashMap0 = new TObjectShortHashMap<Integer>();
      TObjectShortHashMap<Object> tObjectShortHashMap1 = new TObjectShortHashMap<Object>((TObjectShortMap<?>) tObjectShortHashMap0);
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tObjectShortHashMap1._set);
      boolean boolean0 = tObjectShortHashMap1.forEachKey((TObjectProcedure<? super Object>) toObjectArrayProceedure0);
      assertEquals(23, tObjectShortHashMap1.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.clear()V: root-Branch
   * 2 gnu.trove.map.hash.TObjectShortHashMap.<init>(I)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TObjectShortHashMap<String> tObjectShortHashMap0 = new TObjectShortHashMap<String>(0);
      tObjectShortHashMap0.clear();
      assertEquals("{}", tObjectShortHashMap0.toString());
  }

  //Test case number: 2
  /*
   * 20 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.containsKey(Ljava/lang/Object;)Z: root-Branch
   * 2 gnu.trove.map.hash.TObjectShortHashMap.put(Ljava/lang/Object;S)S: root-Branch
   * 3 gnu.trove.map.hash.TObjectShortHashMap$TObjectShortHashIterator.key()Ljava/lang/Object;: root-Branch
   * 4 gnu.trove.map.hash.TObjectShortHashMap$TObjectShortHashIterator.advance()V: root-Branch
   * 5 gnu.trove.map.hash.TObjectShortHashMap$TObjectShortHashIterator.value()S: root-Branch
   * 6 gnu.trove.map.hash.TObjectShortHashMap.get(Ljava/lang/Object;)S: I9 Branch 19 IFGE L230 - true
   * 7 gnu.trove.map.hash.TObjectShortHashMap.doPut(SI)S: I12 Branch 21 IFGE L255 - true
   * 8 gnu.trove.map.hash.TObjectShortHashMap.doPut(SI)S: I41 Branch 22 IFEQ L263 - false
   * 9 gnu.trove.map.hash.TObjectShortHashMap.putAll(Ljava/util/Map;)V: I13 Branch 24 IFEQ L300 - true
   * 10 gnu.trove.map.hash.TObjectShortHashMap.putAll(Ljava/util/Map;)V: I13 Branch 24 IFEQ L300 - false
   * 11 gnu.trove.map.hash.TObjectShortHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L576 - true
   * 12 gnu.trove.map.hash.TObjectShortHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 59 IF_ICMPEQ L580 - true
   * 13 gnu.trove.map.hash.TObjectShortHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 60 IFEQ L585 - true
   * 14 gnu.trove.map.hash.TObjectShortHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 60 IFEQ L585 - false
   * 15 gnu.trove.map.hash.TObjectShortHashMap.equals(Ljava/lang/Object;)Z: I54 Branch 61 IF_ICMPNE L589 - false
   * 16 gnu.trove.map.hash.TObjectShortHashMap.equals(Ljava/lang/Object;)Z: I62 Branch 62 IF_ICMPNE L590 - false
   * 17 gnu.trove.map.hash.TObjectShortHashMap.equals(Ljava/lang/Object;)Z: I66 Branch 63 IFNE L590 - true
   * 18 gnu.trove.map.hash.TObjectShortHashMap.iterator()Lgnu/trove/iterator/TObjectShortIterator;: root-Branch
   * 19 gnu.trove.map.hash.TObjectShortHashMap$TObjectShortHashIterator.<init>(Lgnu/trove/map/hash/TObjectShortHashMap;Lgnu/trove/map/hash/TObjectShortHashMap;)V: root-Branch
   * 20 gnu.trove.map.hash.TObjectShortHashMap.<init>(IF)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>(2, 2);
      HashMap<Short, Short> hashMap0 = new HashMap<Short, Short>();
      Short short0 = new Short((short)0);
      hashMap0.put(short0, (Short) (short)0);
      tObjectShortHashMap0.putAll((Map<? extends Short, ? extends Short>) hashMap0);
      boolean boolean0 = tObjectShortHashMap0.equals((Object) tObjectShortHashMap0);
      assertEquals("{0=0}", tObjectShortHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.increment(Ljava/lang/Object;)Z: root-Branch
   * 2 gnu.trove.map.hash.TObjectShortHashMap.adjustValue(Ljava/lang/Object;S)Z: I9 Branch 40 IFGE L427 - false
   */

  @Test
  public void test3()  throws Throwable  {
      TObjectShortHashMap<String> tObjectShortHashMap0 = new TObjectShortHashMap<String>((-126), (-126));
      boolean boolean0 = tObjectShortHashMap0.increment("8");
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.valueCollection()Lgnu/trove/TShortCollection;: root-Branch
   * 2 gnu.trove.map.hash.TObjectShortHashMap$TShortValueCollection.<init>(Lgnu/trove/map/hash/TObjectShortHashMap;)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TObjectShortHashMap<Integer> tObjectShortHashMap0 = new TObjectShortHashMap<Integer>();
      tObjectShortHashMap0.valueCollection();
      assertEquals(23, tObjectShortHashMap0.capacity());
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap$KeyView.iterator()Ljava/util/Iterator;: root-Branch
   * 2 gnu.trove.map.hash.TObjectShortHashMap$MapBackedView.size()I: root-Branch
   * 3 gnu.trove.map.hash.TObjectShortHashMap.keySet()Ljava/util/Set;: root-Branch
   * 4 gnu.trove.map.hash.TObjectShortHashMap$KeyView.<init>(Lgnu/trove/map/hash/TObjectShortHashMap;)V: root-Branch
   * 5 gnu.trove.map.hash.TObjectShortHashMap.<init>(Lgnu/trove/map/TObjectShortMap;)V: I13 Branch 9 IFEQ L138 - true
   */

//   @Test
//   public void test5()  throws Throwable  {
//       TObjectShortCustomHashMap<Short> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Short>();
//       TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>((TObjectShortMap<? extends Short>) tObjectShortCustomHashMap0);
//       Set<Short> set0 = tObjectShortHashMap0.keySet();
//       TShortHashSet tShortHashSet0 = new TShortHashSet((Collection<? extends Short>) set0);
//       assertEquals(0, tObjectShortHashMap0.getNoEntryValue());
//   }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap$1.execute(Ljava/lang/Object;S)Z: root-Branch
   * 2 gnu.trove.map.hash.TObjectShortHashMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I25 Branch 48 IF_ACMPEQ L507 - false
   * 3 gnu.trove.map.hash.TObjectShortHashMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I30 Branch 49 IF_ACMPEQ L507 - false
   * 4 gnu.trove.map.hash.TObjectShortHashMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I39 Branch 50 IFNE L507 - true
   * 5 gnu.trove.map.hash.TObjectShortHashMap.<init>(Lgnu/trove/map/TObjectShortMap;)V: I35 Branch 10 IFEQ L143 - true
   */

  @Test
  public void test6()  throws Throwable  {
      TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>(2, 2);
      HashMap<Short, Short> hashMap0 = new HashMap<Short, Short>();
      Short short0 = new Short((short)0);
      hashMap0.put(short0, (Short) (short)0);
      tObjectShortHashMap0.putAll((Map<? extends Short, ? extends Short>) hashMap0);
      TObjectShortHashMap<Short> tObjectShortHashMap1 = new TObjectShortHashMap<Short>((TObjectShortMap<? extends Short>) tObjectShortHashMap0);
      assertEquals(false, tObjectShortHashMap0.isEmpty());
      assertTrue(tObjectShortHashMap1.equals(tObjectShortHashMap0));
  }

  //Test case number: 7
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.<init>(Lgnu/trove/map/TObjectShortMap;)V: I35 Branch 10 IFEQ L143 - false
   * 2 gnu.trove.map.hash.TObjectShortHashMap.getNoEntryValue()S: root-Branch
   * 3 gnu.trove.map.hash.TObjectShortHashMap.<init>(Lgnu/trove/map/TObjectShortMap;)V: I13 Branch 9 IFEQ L138 - false
   * 4 gnu.trove.map.hash.TObjectShortHashMap.<init>(IFS)V: I23 Branch 8 IFEQ L124 - false
   */

  @Test
  public void test7()  throws Throwable  {
      TObjectShortHashMap<Integer> tObjectShortHashMap0 = new TObjectShortHashMap<Integer>(38, 0.0F, (short)24829);
      TObjectShortHashMap<Object> tObjectShortHashMap1 = null;
      try {
        tObjectShortHashMap1 = new TObjectShortHashMap<Object>((TObjectShortMap<?>) tObjectShortHashMap0);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  //Test case number: 8
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.rehash(I)V: I49 Branch 11 IFLE L185 - true
   * 2 gnu.trove.map.hash.TObjectShortHashMap.rehash(I)V: I49 Branch 11 IFLE L185 - false
   * 3 gnu.trove.map.hash.TObjectShortHashMap.rehash(I)V: I56 Branch 12 IF_ACMPEQ L186 - true
   * 4 gnu.trove.map.hash.TObjectShortHashMap.putAll(Lgnu/trove/map/TObjectShortMap;)V: root-Branch
   * 5 gnu.trove.map.hash.TObjectShortHashMap.<init>(Lgnu/trove/map/TObjectShortMap;)V: I13 Branch 9 IFEQ L138 - true
   */

//   @Test
//   public void test8()  throws Throwable  {
//       TObjectShortCustomHashMap<Short> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Short>();
//       TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>((TObjectShortMap<? extends Short>) tObjectShortCustomHashMap0);
//       tObjectShortHashMap0.trimToSize();
//       assertEquals("{}", tObjectShortHashMap0.toString());
//       assertEquals(0, tObjectShortHashMap0.getNoEntryValue());
//       assertEquals(3, tObjectShortHashMap0.capacity());
//   }

  //Test case number: 9
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.containsValue(S)Z: I25 Branch 16 IF_ACMPEQ L219 - false
   * 2 gnu.trove.map.hash.TObjectShortHashMap.containsValue(S)Z: I30 Branch 17 IF_ACMPEQ L219 - false
   * 3 gnu.trove.map.hash.TObjectShortHashMap.containsValue(S)Z: I35 Branch 18 IF_ICMPNE L219 - true
   * 4 gnu.trove.map.hash.TObjectShortHashMap.containsValue(S)Z: I18 Branch 15 IFLE L218 - true
   * 5 gnu.trove.map.hash.TObjectShortHashMap.containsValue(S)Z: I18 Branch 15 IFLE L218 - false
   * 6 gnu.trove.map.hash.TObjectShortHashMap.containsValue(S)Z: I25 Branch 16 IF_ACMPEQ L219 - true
   * 7 gnu.trove.map.hash.TObjectShortHashMap.putIfAbsent(Ljava/lang/Object;S)S: I9 Branch 20 IFGE L246 - true
   */

  @Test
  public void test9()  throws Throwable  {
      TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>();
      Short short0 = new Short((short)64);
      tObjectShortHashMap0.putIfAbsent(short0, (short)64);
      boolean boolean0 = tObjectShortHashMap0.containsValue((short)0);
      assertEquals(false, tObjectShortHashMap0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 10
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.containsValue(S)Z: I35 Branch 18 IF_ICMPNE L219 - false
   * 2 gnu.trove.map.hash.TObjectShortHashMap.containsValue(S)Z: I18 Branch 15 IFLE L218 - false
   * 3 gnu.trove.map.hash.TObjectShortHashMap.containsValue(S)Z: I25 Branch 16 IF_ACMPEQ L219 - true
   * 4 gnu.trove.map.hash.TObjectShortHashMap.containsValue(S)Z: I25 Branch 16 IF_ACMPEQ L219 - false
   * 5 gnu.trove.map.hash.TObjectShortHashMap.containsValue(S)Z: I30 Branch 17 IF_ACMPEQ L219 - false
   * 6 gnu.trove.map.hash.TObjectShortHashMap.rehash(I)V: I56 Branch 12 IF_ACMPEQ L186 - false
   * 7 gnu.trove.map.hash.TObjectShortHashMap.rehash(I)V: I61 Branch 13 IF_ACMPEQ L186 - false
   * 8 gnu.trove.map.hash.TObjectShortHashMap.rehash(I)V: I77 Branch 14 IFGE L189 - true
   */

  @Test
  public void test10()  throws Throwable  {
      TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>(0, 0.0F, (short) (-1));
      tObjectShortHashMap0.put((Short) (short) (-1), (short) (-1));
      boolean boolean0 = tObjectShortHashMap0.containsValue((short) (-1));
      assertEquals(1, tObjectShortHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.get(Ljava/lang/Object;)S: I9 Branch 19 IFGE L230 - false
   */

  @Test
  public void test11()  throws Throwable  {
      TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>((-1785), (-1785));
      short short0 = tObjectShortHashMap0.get((Object) "");
      assertEquals((short)0, short0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.putIfAbsent(Ljava/lang/Object;S)S: I9 Branch 20 IFGE L246 - false
   */

  @Test
  public void test12()  throws Throwable  {
      TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>(2, 2);
      HashMap<Short, Short> hashMap0 = new HashMap<Short, Short>();
      Short short0 = new Short((short)0);
      hashMap0.put(short0, (Short) (short)0);
      tObjectShortHashMap0.putAll((Map<? extends Short, ? extends Short>) hashMap0);
      short short1 = tObjectShortHashMap0.putIfAbsent((Short) (short)0, (short) (-516));
      assertEquals("{0=0}", tObjectShortHashMap0.toString());
      assertEquals((short)0, short1);
  }

  //Test case number: 13
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.doPut(SI)S: I12 Branch 21 IFGE L255 - false
   * 2 gnu.trove.map.hash.TObjectShortHashMap.doPut(SI)S: I41 Branch 22 IFEQ L263 - true
   */

  @Test
  public void test13()  throws Throwable  {
      TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>(2, 2);
      HashMap<Short, Short> hashMap0 = new HashMap<Short, Short>();
      Short short0 = new Short((short)0);
      hashMap0.put(short0, (Short) (short)0);
      tObjectShortHashMap0.putAll((Map<? extends Short, ? extends Short>) hashMap0);
      short short1 = tObjectShortHashMap0.put((Short) (short)0, (short)0);
      assertEquals(false, tObjectShortHashMap0.isEmpty());
      assertEquals((short)0, short1);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.remove(Ljava/lang/Object;)S: I14 Branch 23 IFLT L274 - true
   */

  @Test
  public void test14()  throws Throwable  {
      TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>(2, 2);
      short short0 = tObjectShortHashMap0.remove((Object) 2);
      assertEquals((short)0, short0);
      assertEquals(true, tObjectShortHashMap0.isEmpty());
  }

  //Test case number: 15
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L335 - false
   * 2 gnu.trove.map.hash.TObjectShortHashMap.keys()[Ljava/lang/Object;: I35 Branch 27 IF_ACMPEQ L335 - false
   * 3 gnu.trove.map.hash.TObjectShortHashMap.adjustOrPutValue(Ljava/lang/Object;SS)S: I9 Branch 41 IFGE L443 - true
   * 4 gnu.trove.map.hash.TObjectShortHashMap.adjustOrPutValue(Ljava/lang/Object;SS)S: I52 Branch 42 IFEQ L454 - false
   * 5 gnu.trove.map.hash.TObjectShortHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L334 - true
   * 6 gnu.trove.map.hash.TObjectShortHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L334 - false
   * 7 gnu.trove.map.hash.TObjectShortHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L335 - true
   */

  @Test
  public void test15()  throws Throwable  {
      TObjectShortHashMap<String> tObjectShortHashMap0 = new TObjectShortHashMap<String>();
      tObjectShortHashMap0.adjustOrPutValue("T", (short)0, (short)64);
      tObjectShortHashMap0.keys();
      assertEquals(1, tObjectShortHashMap0.size());
      assertEquals("{T=64}", tObjectShortHashMap0.toString());
  }

  //Test case number: 16
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L356 - false
   * 2 gnu.trove.map.hash.TObjectShortHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I49 Branch 31 IF_ACMPEQ L356 - false
   * 3 gnu.trove.map.hash.TObjectShortHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I10 Branch 28 IF_ICMPGE L347 - true
   * 4 gnu.trove.map.hash.TObjectShortHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L355 - true
   * 5 gnu.trove.map.hash.TObjectShortHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L355 - false
   * 6 gnu.trove.map.hash.TObjectShortHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L356 - true
   */

  @Test
  public void test16()  throws Throwable  {
      TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>(2, 2);
      HashMap<Short, Short> hashMap0 = new HashMap<Short, Short>();
      Short short0 = new Short((short)0);
      hashMap0.put(short0, (Short) (short)0);
      tObjectShortHashMap0.putAll((Map<? extends Short, ? extends Short>) hashMap0);
      Short[] shortArray0 = new Short[10];
      Short[] shortArray1 = tObjectShortHashMap0.keys(shortArray0);
      assertEquals(1, tObjectShortHashMap0.size());
      assertSame(shortArray1, shortArray0);
  }

  //Test case number: 17
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.values()[S: I34 Branch 33 IF_ACMPEQ L378 - false
   * 2 gnu.trove.map.hash.TObjectShortHashMap.values()[S: I39 Branch 34 IF_ACMPEQ L378 - false
   * 3 gnu.trove.map.hash.TObjectShortHashMap.values()[S: I27 Branch 32 IFLE L377 - true
   * 4 gnu.trove.map.hash.TObjectShortHashMap.values()[S: I27 Branch 32 IFLE L377 - false
   * 5 gnu.trove.map.hash.TObjectShortHashMap.values()[S: I34 Branch 33 IF_ACMPEQ L378 - true
   */

  @Test
  public void test17()  throws Throwable  {
      TObjectShortHashMap<String> tObjectShortHashMap0 = new TObjectShortHashMap<String>();
      tObjectShortHashMap0.adjustOrPutValue("T", (short)0, (short)64);
      tObjectShortHashMap0.values();
      assertEquals("{T=64}", tObjectShortHashMap0.toString());
      assertEquals(1, tObjectShortHashMap0.size());
  }

  //Test case number: 18
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.values([S)[S: I10 Branch 35 IF_ICMPGE L389 - true
   * 2 gnu.trove.map.hash.TObjectShortHashMap.values([S)[S: I37 Branch 36 IFLE L396 - true
   * 3 gnu.trove.map.hash.TObjectShortHashMap.values([S)[S: I37 Branch 36 IFLE L396 - false
   * 4 gnu.trove.map.hash.TObjectShortHashMap.values([S)[S: I44 Branch 37 IF_ACMPEQ L397 - true
   * 5 gnu.trove.map.hash.TObjectShortHashMap.values([S)[S: I65 Branch 39 IF_ICMPLE L401 - false
   * 6 gnu.trove.map.hash.TObjectShortHashMap.<init>(IFS)V: I23 Branch 8 IFEQ L124 - true
   */

//   @Test
//   public void test18()  throws Throwable  {
//       TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>(809, 0.5F, (short)0);
//       short[] shortArray0 = new short[1];
//       short[] shortArray1 = tObjectShortHashMap0.values(shortArray0);
//       assertEquals(1759, tObjectShortHashMap0.capacity());
//       assertSame(shortArray1, shortArray0);
//       assertEquals(0, tObjectShortHashMap0.getNoEntryValue());
//       assertNotNull(shortArray1);
//   }

  //Test case number: 19
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.values([S)[S: I10 Branch 35 IF_ICMPGE L389 - false
   * 2 gnu.trove.map.hash.TObjectShortHashMap.values([S)[S: I44 Branch 37 IF_ACMPEQ L397 - false
   * 3 gnu.trove.map.hash.TObjectShortHashMap.values([S)[S: I49 Branch 38 IF_ACMPEQ L397 - false
   * 4 gnu.trove.map.hash.TObjectShortHashMap.values([S)[S: I65 Branch 39 IF_ICMPLE L401 - true
   * 5 gnu.trove.map.hash.TObjectShortHashMap.values([S)[S: I37 Branch 36 IFLE L396 - true
   * 6 gnu.trove.map.hash.TObjectShortHashMap.values([S)[S: I37 Branch 36 IFLE L396 - false
   * 7 gnu.trove.map.hash.TObjectShortHashMap.values([S)[S: I44 Branch 37 IF_ACMPEQ L397 - true
   */

  @Test
  public void test19()  throws Throwable  {
      TObjectShortHashMap<Integer> tObjectShortHashMap0 = new TObjectShortHashMap<Integer>((-326), (-326));
      tObjectShortHashMap0.putIfAbsent((Integer) 0, (short)0);
      tObjectShortHashMap0.adjustOrPutValue((Integer) (-326), (short)0, (short)1281);
      short[] shortArray0 = new short[1];
      tObjectShortHashMap0.values(shortArray0);
      assertEquals(2, tObjectShortHashMap0.size());
      assertEquals("{-326=1281,0=0}", tObjectShortHashMap0.toString());
  }

  //Test case number: 20
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.adjustValue(Ljava/lang/Object;S)Z: I9 Branch 40 IFGE L427 - true
   * 2 gnu.trove.map.hash.TObjectShortHashMap.increment(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TObjectShortHashMap<String> tObjectShortHashMap0 = new TObjectShortHashMap<String>((-126), (-126));
      tObjectShortHashMap0.adjustOrPutValue("8", (short)1690, (short)1690);
      boolean boolean0 = tObjectShortHashMap0.increment("8");
      assertEquals(false, tObjectShortHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.adjustOrPutValue(Ljava/lang/Object;SS)S: I9 Branch 41 IFGE L443 - false
   * 2 gnu.trove.map.hash.TObjectShortHashMap.adjustOrPutValue(Ljava/lang/Object;SS)S: I52 Branch 42 IFEQ L454 - true
   * 3 gnu.trove.map.hash.TObjectShortHashMap.putAll(Ljava/util/Map;)V: I13 Branch 24 IFEQ L300 - true
   * 4 gnu.trove.map.hash.TObjectShortHashMap.putAll(Ljava/util/Map;)V: I13 Branch 24 IFEQ L300 - false
   */

  @Test
  public void test21()  throws Throwable  {
      TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>(2, 2);
      HashMap<Short, Short> hashMap0 = new HashMap<Short, Short>();
      Short short0 = new Short((short)0);
      hashMap0.put(short0, (Short) (short)0);
      tObjectShortHashMap0.putAll((Map<? extends Short, ? extends Short>) hashMap0);
      short short1 = tObjectShortHashMap0.adjustOrPutValue((Short) (short)0, (short)0, (short)645);
      assertEquals(false, tObjectShortHashMap0.isEmpty());
      assertEquals((short)0, short1);
  }

  //Test case number: 22
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I18 Branch 43 IFLE L484 - true
   * 2 gnu.trove.map.hash.TObjectShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I18 Branch 43 IFLE L484 - false
   * 3 gnu.trove.map.hash.TObjectShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I25 Branch 44 IF_ACMPEQ L485 - true
   */

  @Test
  public void test22()  throws Throwable  {
      TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>();
      boolean boolean0 = tObjectShortHashMap0.forEachValue((TShortProcedure) null);
      assertEquals(true, boolean0);
      assertEquals(23, tObjectShortHashMap0.capacity());
  }

  //Test case number: 23
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I25 Branch 44 IF_ACMPEQ L485 - false
   * 2 gnu.trove.map.hash.TObjectShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I30 Branch 45 IF_ACMPEQ L485 - false
   * 3 gnu.trove.map.hash.TObjectShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I18 Branch 43 IFLE L484 - false
   * 4 gnu.trove.map.hash.TObjectShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I25 Branch 44 IF_ACMPEQ L485 - true
   */

  @Test
  public void test23()  throws Throwable  {
      TObjectShortHashMap<String> tObjectShortHashMap0 = new TObjectShortHashMap<String>();
      tObjectShortHashMap0.adjustOrPutValue("T", (short)0, (short)64);
      // Undeclared exception!
      try {
        tObjectShortHashMap0.forEachValue((TShortProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.retainEntries(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I27 Branch 51 IFLE L533 - true
   * 2 gnu.trove.map.hash.TObjectShortHashMap.retainEntries(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I27 Branch 51 IFLE L533 - false
   * 3 gnu.trove.map.hash.TObjectShortHashMap.retainEntries(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I34 Branch 52 IF_ACMPEQ L534 - true
   */

  @Test
  public void test24()  throws Throwable  {
      TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>();
      boolean boolean0 = tObjectShortHashMap0.retainEntries((TObjectShortProcedure<? super Short>) null);
      assertEquals(false, boolean0);
      assertEquals(23, tObjectShortHashMap0.capacity());
  }

  //Test case number: 25
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.retainEntries(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I34 Branch 52 IF_ACMPEQ L534 - false
   * 2 gnu.trove.map.hash.TObjectShortHashMap.retainEntries(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I39 Branch 53 IF_ACMPEQ L534 - false
   * 3 gnu.trove.map.hash.TObjectShortHashMap.retainEntries(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I27 Branch 51 IFLE L533 - false
   * 4 gnu.trove.map.hash.TObjectShortHashMap.retainEntries(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I34 Branch 52 IF_ACMPEQ L534 - true
   */

  @Test
  public void test25()  throws Throwable  {
      TObjectShortHashMap<Integer> tObjectShortHashMap0 = new TObjectShortHashMap<Integer>((-5));
      tObjectShortHashMap0.putIfAbsent((Integer) (-5), (short) (-8945));
      // Undeclared exception!
      try {
        tObjectShortHashMap0.retainEntries((TObjectShortProcedure<? super Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.transformValues(Lgnu/trove/function/TShortFunction;)V: I18 Branch 55 IFLE L558 - false
   * 2 gnu.trove.map.hash.TObjectShortHashMap.transformValues(Lgnu/trove/function/TShortFunction;)V: I24 Branch 56 IFNULL L559 - false
   * 3 gnu.trove.map.hash.TObjectShortHashMap.transformValues(Lgnu/trove/function/TShortFunction;)V: I29 Branch 57 IF_ACMPEQ L559 - false
   */

  @Test
  public void test26()  throws Throwable  {
      TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>();
      // Undeclared exception!
      try {
        tObjectShortHashMap0.transformValues((TShortFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L576 - false
   */

//   @Test
//   public void test27()  throws Throwable  {
//       TObjectShortHashMap<Object> tObjectShortHashMap0 = new TObjectShortHashMap<Object>((int) (short)27, 0.0F, (short)27);
//       boolean boolean0 = tObjectShortHashMap0.equals((Object) null);
//       assertEquals(27, tObjectShortHashMap0.getNoEntryValue());
//       assertEquals(false, boolean0);
//   }

  //Test case number: 28
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L614 - false
   * 2 gnu.trove.map.hash.TObjectShortHashMap.hashCode()I: I34 Branch 67 IF_ACMPEQ L614 - false
   * 3 gnu.trove.map.hash.TObjectShortHashMap.hashCode()I: I45 Branch 68 IFNONNULL L615 - true
   * 4 gnu.trove.map.hash.TObjectShortHashMap.<init>(I)V: root-Branch
   * 5 gnu.trove.map.hash.TObjectShortHashMap.hashCode()I: I22 Branch 65 IFLE L613 - true
   * 6 gnu.trove.map.hash.TObjectShortHashMap.hashCode()I: I22 Branch 65 IFLE L613 - false
   * 7 gnu.trove.map.hash.TObjectShortHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L614 - true
   * 8 gnu.trove.map.hash.TObjectShortHashMap.putIfAbsent(Ljava/lang/Object;S)S: I9 Branch 20 IFGE L246 - true
   */

  @Test
  public void test28()  throws Throwable  {
      TObjectShortHashMap<Integer> tObjectShortHashMap0 = new TObjectShortHashMap<Integer>((-5));
      tObjectShortHashMap0.putIfAbsent((Integer) (-5), (short) (-8945));
      int int0 = tObjectShortHashMap0.hashCode();
      assertEquals("{-5=-8945}", tObjectShortHashMap0.toString());
      assertEquals(8948, int0);
  }

  //Test case number: 29
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I31 Branch 69 IFLE L1093 - true
   * 2 gnu.trove.map.hash.TObjectShortHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I31 Branch 69 IFLE L1093 - false
   * 3 gnu.trove.map.hash.TObjectShortHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I39 Branch 70 IF_ACMPEQ L1094 - false
   * 4 gnu.trove.map.hash.TObjectShortHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I45 Branch 71 IF_ACMPEQ L1094 - true
   * 5 gnu.trove.map.hash.TObjectShortHashMap.<init>()V: root-Branch
   */

  @Test
  public void test29()  throws Throwable  {
      TObjectShortHashMap<String> tObjectShortHashMap0 = new TObjectShortHashMap<String>();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream((OutputStream) byteArrayOutputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) filterOutputStream0);
      tObjectShortHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals("\uFFFD\uFFFD\u0000\u0005", byteArrayOutputStream0.toString());
      assertEquals(4, byteArrayOutputStream0.size());
  }

  //Test case number: 30
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I45 Branch 71 IF_ACMPEQ L1094 - false
   * 2 gnu.trove.map.hash.TObjectShortHashMap.put(Ljava/lang/Object;S)S: root-Branch
   * 3 gnu.trove.map.hash.TObjectShortHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I31 Branch 69 IFLE L1093 - true
   * 4 gnu.trove.map.hash.TObjectShortHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I31 Branch 69 IFLE L1093 - false
   * 5 gnu.trove.map.hash.TObjectShortHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I39 Branch 70 IF_ACMPEQ L1094 - false
   * 6 gnu.trove.map.hash.TObjectShortHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I45 Branch 71 IF_ACMPEQ L1094 - true
   * 7 gnu.trove.map.hash.TObjectShortHashMap.doPut(SI)S: I12 Branch 21 IFGE L255 - true
   * 8 gnu.trove.map.hash.TObjectShortHashMap.doPut(SI)S: I41 Branch 22 IFEQ L263 - false
   * 9 gnu.trove.map.hash.TObjectShortHashMap.<init>(IFS)V: I23 Branch 8 IFEQ L124 - false
   */

  @Test
  public void test30()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream((OutputStream) byteArrayOutputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) filterOutputStream0);
      TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>(0, 0.0F, (short) (-1));
      tObjectShortHashMap0.put((Short) (short) (-1), (short) (-1));
      tObjectShortHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals("\uFFFD\uFFFD\u0000\u0005w\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\uFFFD\uFFFD\u0000\u0000\u0000\u0001sr\u0000\u000Fjava.lang.ShorthM7\u00134`\uFFFDR\u0002\u0000\u0001S\u0000\u0005valuexr\u0000\u0010java.lang.Number\uFFFD\uFFFD\uFFFD\u001D\u000B\uFFFD\uFFFD\uFFFD\u0002\u0000\u0000xp\uFFFD\uFFFD", byteArrayOutputStream0.toString());
      assertEquals(96, byteArrayOutputStream0.size());
  }

  //Test case number: 31
  /*
   * 21 covered goals:
   * 1 gnu.trove.map.hash.TObjectShortHashMap$2.execute(Ljava/lang/Object;S)Z: I4 Branch 102 IFEQ L1134 - true
   * 2 gnu.trove.map.hash.TObjectShortHashMap$2.execute(Ljava/lang/Object;S)Z: I4 Branch 102 IFEQ L1134 - false
   * 3 gnu.trove.map.hash.TObjectShortHashMap.toString()Ljava/lang/String;: root-Branch
   * 4 gnu.trove.map.hash.TObjectShortHashMap.setUp(I)I: root-Branch
   * 5 gnu.trove.map.hash.TObjectShortHashMap.<init>(IF)V: root-Branch
   * 6 gnu.trove.map.hash.TObjectShortHashMap.rehash(I)V: I49 Branch 11 IFLE L185 - true
   * 7 gnu.trove.map.hash.TObjectShortHashMap.rehash(I)V: I49 Branch 11 IFLE L185 - false
   * 8 gnu.trove.map.hash.TObjectShortHashMap.rehash(I)V: I56 Branch 12 IF_ACMPEQ L186 - true
   * 9 gnu.trove.map.hash.TObjectShortHashMap.rehash(I)V: I56 Branch 12 IF_ACMPEQ L186 - false
   * 10 gnu.trove.map.hash.TObjectShortHashMap.rehash(I)V: I61 Branch 13 IF_ACMPEQ L186 - false
   * 11 gnu.trove.map.hash.TObjectShortHashMap.rehash(I)V: I77 Branch 14 IFGE L189 - true
   * 12 gnu.trove.map.hash.TObjectShortHashMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I18 Branch 47 IFLE L506 - true
   * 13 gnu.trove.map.hash.TObjectShortHashMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I18 Branch 47 IFLE L506 - false
   * 14 gnu.trove.map.hash.TObjectShortHashMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I25 Branch 48 IF_ACMPEQ L507 - true
   * 15 gnu.trove.map.hash.TObjectShortHashMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I25 Branch 48 IF_ACMPEQ L507 - false
   * 16 gnu.trove.map.hash.TObjectShortHashMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I30 Branch 49 IF_ACMPEQ L507 - false
   * 17 gnu.trove.map.hash.TObjectShortHashMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: I39 Branch 50 IFNE L507 - true
   * 18 gnu.trove.map.hash.TObjectShortHashMap.adjustOrPutValue(Ljava/lang/Object;SS)S: I9 Branch 41 IFGE L443 - true
   * 19 gnu.trove.map.hash.TObjectShortHashMap.adjustOrPutValue(Ljava/lang/Object;SS)S: I52 Branch 42 IFEQ L454 - false
   * 20 gnu.trove.map.hash.TObjectShortHashMap$2.<init>(Lgnu/trove/map/hash/TObjectShortHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 21 gnu.trove.map.hash.TObjectShortHashMap$1.<init>(Lgnu/trove/map/hash/TObjectShortHashMap;)V: root-Branch
   */

  @Test
  public void test31()  throws Throwable  {
      TObjectShortHashMap<String> tObjectShortHashMap0 = new TObjectShortHashMap<String>((-126), (-126));
      tObjectShortHashMap0.adjustOrPutValue("", (short) (-1607), (short)1690);
      tObjectShortHashMap0.adjustOrPutValue("8", (short)1690, (short)1690);
      String string0 = tObjectShortHashMap0.toString();
      assertEquals(2, tObjectShortHashMap0.size());
      assertEquals("{8=1690,=1690}", string0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet;
import gnu.trove.map.TDoubleIntMap;
import gnu.trove.map.hash.TDoubleIntHashMap;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableDoubleIntMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap();
      tDoubleIntHashMap0.isEmpty();
      double[] doubleArray0 = new double[1];
      double double0 = 0.0;
      doubleArray0[0] = double0;
      double double1 = 1491.7973436854006;
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      boolean boolean0 = tUnmodifiableDoubleIntMap0.isEmpty();
      assertEquals(true, boolean0);
      
      doubleArray0[0] = double1;
      tDoubleIntHashMap0._set = doubleArray0;
      int int0 = (-1);
      tUnmodifiableDoubleIntMap0.containsValue(int0);
      int int1 = 1248;
      tUnmodifiableDoubleIntMap0.containsValue(int1);
      int[] intArray0 = new int[3];
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet0 = (TUnmodifiableDoubleSet)tUnmodifiableDoubleIntMap0.keySet();
      assertNotNull(tUnmodifiableDoubleSet0);
      
      int int2 = 0;
      doubleArray0[0] = (double) int0;
      intArray0[0] = int2;
      int int3 = (-421);
      int[] intArray1 = tUnmodifiableDoubleIntMap0.values();
      assertNotNull(intArray1);
      
      intArray0[1] = int3;
      int int4 = 326;
      intArray0[2] = int4;
      int[] intArray2 = tUnmodifiableDoubleIntMap0.values(intArray0);
      assertNotNull(intArray2);
      
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap1 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      double[] doubleArray1 = tUnmodifiableDoubleIntMap1.keys(tDoubleIntHashMap0._set);
      assertNotNull(doubleArray1);
      assertEquals(true, tUnmodifiableDoubleIntMap1.isEmpty());
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = 0;
      float float0 = (-1.0F);
      int int1 = 273;
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(int1, int1);
      tDoubleIntHashMap0.getAutoCompactionFactor();
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      tUnmodifiableDoubleIntMap0.hashCode();
      double double0 = 1772.924280309664;
      TDoubleIntHashMap tDoubleIntHashMap1 = new TDoubleIntHashMap(int0, float0, double0, int0);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap1 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap1);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleIntMap1.put(double0, int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = 362;
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(int0, int0);
      tDoubleIntHashMap0.containsValue(int0);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap1 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleIntMap1.increment((double) int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap();
      double double0 = (-535.1345918692921);
      tDoubleIntHashMap0.remove(double0);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      int int0 = 0;
      tUnmodifiableDoubleIntMap0.containsValue(int0);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap1 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      double double1 = (-51.181226669025726);
      int int1 = (-210);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleIntMap1.adjustValue(double1, int1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap();
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      tDoubleIntHashMap0.putAll((TDoubleIntMap) tUnmodifiableDoubleIntMap0);
      TDoubleIntHashMap tDoubleIntHashMap1 = new TDoubleIntHashMap((TDoubleIntMap) tUnmodifiableDoubleIntMap0);
      tDoubleIntHashMap0.iterator();
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap1 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap1);
      int int0 = 1854585413;
      tUnmodifiableDoubleIntMap1.keys(tDoubleIntHashMap1._set);
      TDoubleIntHashMap tDoubleIntHashMap2 = new TDoubleIntHashMap(int0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleIntMap1.adjustOrPutValue((double) int0, int0, int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = 1074;
      float float0 = 0.0F;
      int int1 = 1516;
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(int0, float0, (double) int0, int1);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      int int2 = 129;
      boolean boolean0 = tUnmodifiableDoubleIntMap0.containsValue(int2);
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = (-408);
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(int0, int0);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap1 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tUnmodifiableDoubleIntMap0);
      double double0 = Double.NEGATIVE_INFINITY;
      // Undeclared exception!
      try {
        tUnmodifiableDoubleIntMap1.remove(double0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = (-78);
      int int1 = 0;
      float float0 = (-1269.952F);
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap();
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleIntMap0.putIfAbsent((double) float0, int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      double[] doubleArray0 = new double[10];
      double double0 = 379.3061343572766;
      doubleArray0[0] = double0;
      double double1 = (-1.0);
      doubleArray0[1] = double1;
      double double2 = 0.0;
      doubleArray0[2] = double2;
      double double3 = Double.NEGATIVE_INFINITY;
      doubleArray0[3] = double3;
      double double4 = 1826.3778417999922;
      doubleArray0[4] = double4;
      double double5 = 0.0;
      doubleArray0[5] = double5;
      double double6 = (-1610.3040886707468);
      doubleArray0[6] = double6;
      double double7 = (-1189.93024610864);
      doubleArray0[7] = double7;
      double double8 = (-923.3438511862429);
      doubleArray0[8] = double8;
      double double9 = 1852.7837488329633;
      doubleArray0[9] = double9;
      int[] intArray0 = new int[9];
      int int0 = (-1);
      intArray0[0] = int0;
      int int1 = (-1196);
      intArray0[1] = int1;
      int int2 = 0;
      intArray0[2] = int2;
      int int3 = 1792;
      intArray0[3] = int3;
      int int4 = 155;
      intArray0[4] = int4;
      int int5 = (-1);
      intArray0[5] = int5;
      int int6 = 0;
      intArray0[6] = int6;
      int int7 = (-1617);
      intArray0[7] = int7;
      int int8 = (-286);
      intArray0[8] = int8;
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(doubleArray0, intArray0);
      TDoubleIntHashMap tDoubleIntHashMap1 = new TDoubleIntHashMap((TDoubleIntMap) tDoubleIntHashMap0);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap1);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap1 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tUnmodifiableDoubleIntMap0);
      int int9 = tUnmodifiableDoubleIntMap1.hashCode();
      assertEquals((-1774985608), int9);
  }

  @Test
  public void test9()  throws Throwable  {
      TDoubleIntMap tDoubleIntMap0 = null;
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = null;
      try {
        tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap(tDoubleIntMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = 0;
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(int0);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap1 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tUnmodifiableDoubleIntMap0);
      double double0 = 1146.527412931333;
      int int1 = (-642);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleIntMap1.adjustOrPutValue(double0, int1, int1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      double double0 = (-493.19861605712316);
      doubleArray0[0] = double0;
      double double1 = 1.0;
      doubleArray0[1] = double1;
      double double2 = 0.0;
      doubleArray0[2] = double2;
      double double3 = 0.0;
      doubleArray0[3] = double3;
      double double4 = (-392.82285608388673);
      doubleArray0[4] = double4;
      int[] intArray0 = new int[8];
      int int0 = 981;
      intArray0[0] = int0;
      int int1 = (-1);
      intArray0[1] = int1;
      int int2 = 0;
      intArray0[2] = int2;
      int int3 = (-541);
      intArray0[3] = int3;
      int int4 = (-28);
      intArray0[4] = int4;
      int int5 = 1;
      intArray0[5] = int5;
      int int6 = (-1);
      intArray0[6] = int6;
      int int7 = (-1);
      intArray0[7] = int7;
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(doubleArray0, intArray0);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      double double5 = 0.0;
      int int8 = tUnmodifiableDoubleIntMap0.get(double5);
      assertEquals((-541), int8);
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 83;
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(int0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) int0;
      double double0 = Double.POSITIVE_INFINITY;
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      HashMap<Double, Integer> hashMap0 = new HashMap<Double, Integer>();
      int[] intArray0 = new int[7];
      intArray0[0] = int0;
      intArray0[1] = int0;
      intArray0[2] = int0;
      intArray0[3] = int0;
      intArray0[4] = int0;
      intArray0[5] = int0;
      intArray0[6] = int0;
      tDoubleIntHashMap0.values(intArray0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleIntMap0.putAll((Map<? extends Double, ? extends Integer>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap();
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      int[] intArray0 = new int[8];
      int int0 = (-1382);
      intArray0[0] = int0;
      int int1 = 0;
      intArray0[1] = int1;
      int int2 = 0;
      intArray0[2] = int2;
      int int3 = 0;
      intArray0[3] = int3;
      int int4 = 0;
      intArray0[4] = int4;
      int int5 = 87719;
      intArray0[5] = int5;
      tUnmodifiableDoubleIntMap0.getNoEntryValue();
      int int6 = 0;
      intArray0[6] = int6;
      int int7 = (-1);
      intArray0[0] = int7;
      intArray0[1] = int1;
      intArray0[2] = int0;
      intArray0[3] = int5;
      intArray0[4] = int6;
      intArray0[5] = int6;
      intArray0[6] = int1;
      intArray0[7] = int4;
      int int8 = 78;
      boolean boolean0 = tUnmodifiableDoubleIntMap0.isEmpty();
      assertEquals(true, boolean0);
      
      intArray0[7] = int8;
      int[] intArray1 = tUnmodifiableDoubleIntMap0.values(intArray0);
      assertNotNull(intArray1);
      assertEquals(true, tUnmodifiableDoubleIntMap0.isEmpty());
  }

  @Test
  public void test14()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap();
      int[] intArray0 = new int[4];
      int int0 = (-1096);
      intArray0[0] = int0;
      int int1 = 231;
      intArray0[1] = int1;
      int int2 = (-1702);
      intArray0[2] = int2;
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleIntMap0.adjustOrPutValue((double) intArray0[0], int2, intArray0[0]);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = 523;
      int int1 = 1;
      float float0 = 0.0F;
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(int1, float0, (double) float0, int0);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      tUnmodifiableDoubleIntMap0.getNoEntryValue();
      int int2 = 173;
      TDoubleIntMap tDoubleIntMap0 = null;
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap1 = null;
      try {
        tUnmodifiableDoubleIntMap1 = new TUnmodifiableDoubleIntMap(tDoubleIntMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = (-213);
      float float0 = 354.52036F;
      double double0 = 0.0;
      int int1 = 0;
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(int0, float0, double0, int1);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      double double1 = 1062.627058356045;
      int int2 = (-877);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleIntMap0.adjustOrPutValue(double1, int2, int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      double double0 = 0.0;
      doubleArray0[0] = double0;
      double double1 = (-364.7866877196446);
      doubleArray0[1] = double1;
      double double2 = 0.0;
      doubleArray0[2] = double2;
      double double3 = 0.0;
      doubleArray0[3] = double3;
      double double4 = 0.0;
      doubleArray0[4] = double4;
      double double5 = 211.93880733272877;
      doubleArray0[5] = double5;
      int[] intArray0 = new int[8];
      int int0 = 463646329;
      intArray0[0] = int0;
      int int1 = (-236);
      intArray0[1] = int1;
      int int2 = (-1806);
      intArray0[2] = int2;
      int int3 = 0;
      intArray0[3] = int3;
      int int4 = 1201;
      intArray0[4] = int4;
      int int5 = 1984;
      intArray0[5] = int5;
      int int6 = (-595);
      intArray0[6] = int6;
      int int7 = (-103);
      intArray0[7] = int7;
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(doubleArray0, intArray0);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      double double6 = 0.0;
      // Undeclared exception!
      try {
        tUnmodifiableDoubleIntMap0.remove(double6);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap();
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      tUnmodifiableDoubleIntMap0.isEmpty();
      TDoubleIntMap tDoubleIntMap0 = null;
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap1 = null;
      try {
        tUnmodifiableDoubleIntMap1 = new TUnmodifiableDoubleIntMap(tDoubleIntMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

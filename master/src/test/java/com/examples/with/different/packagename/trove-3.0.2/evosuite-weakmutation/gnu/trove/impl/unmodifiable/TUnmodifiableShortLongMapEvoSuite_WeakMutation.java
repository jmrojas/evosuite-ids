/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortSet;
import gnu.trove.map.TShortLongMap;
import gnu.trove.map.hash.TShortLongHashMap;
import gnu.trove.procedure.TLongProcedure;
import gnu.trove.procedure.TShortLongProcedure;
import gnu.trove.procedure.TShortProcedure;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableShortLongMapEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 29 covered goals:
   * 1 Weak Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.size()I:63 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 2 Weak Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.size()I:63 - DeleteStatement: size()I
   * 3 Weak Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.key()S:114 - DeleteField: iterLgnu/trove/iterator/TShortLongIterator;
   * 4 Weak Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.key()S:114 - DeleteStatement: key()S
   * 5 Weak Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.value()J:115 - DeleteField: iterLgnu/trove/iterator/TShortLongIterator;
   * 6 Weak Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.value()J:115 - DeleteStatement: value()J
   * 7 Weak Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TShortLongIterator;
   * 8 Weak Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.advance()V:116 - DeleteStatement: advance()V
   * 9 Weak Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TShortLongIterator;
   * 10 Weak Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 11 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.iterator()Lgnu/trove/iterator/TShortLongIterator;: root-Branch
   * 12 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.size()I: root-Branch
   * 13 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.key()S: root-Branch
   * 14 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.advance()V: root-Branch
   * 15 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.value()J: root-Branch
   * 16 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableShortLongMap;)V: root-Branch
   * 17 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.hasNext()Z: root-Branch
   * 18 Weak Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.key()S:114 - DeleteField: iterLgnu/trove/iterator/TShortLongIterator;
   * 19 Weak Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.key()S:114 - DeleteStatement: key()S
   * 20 Weak Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.value()J:115 - DeleteField: iterLgnu/trove/iterator/TShortLongIterator;
   * 21 Weak Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.value()J:115 - DeleteStatement: value()J
   * 22 Weak Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TShortLongIterator;
   * 23 Weak Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.advance()V:116 - DeleteStatement: advance()V
   * 24 Weak Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TShortLongIterator;
   * 25 Weak Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 26 Weak Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.<init>(Lgnu/trove/map/TShortLongMap;)V:58 - ReplaceComparisonOperator != null -> = null
   * 27 Weak Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.size()I:63 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 28 Weak Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.size()I:63 - DeleteStatement: size()I
   * 29 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.<init>(Lgnu/trove/map/TShortLongMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      short[] shortArray0 = new short[7];
      long[] longArray0 = new long[5];
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(shortArray0, longArray0);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      TShortLongHashMap tShortLongHashMap1 = new TShortLongHashMap((TShortLongMap) tUnmodifiableShortLongMap0);
      assertEquals(1, tUnmodifiableShortLongMap0.size());
      assertEquals(false, tShortLongHashMap1.isEmpty());
  }

  //Test case number: 1
  /*
   * 5 covered goals:
   * 1 Weak Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.isEmpty()Z:64 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 2 Weak Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.isEmpty()Z: root-Branch
   * 4 Weak Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.isEmpty()Z:64 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 5 Weak Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   */

  @Test
  public void test1()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap((-1815), (float) (-1815), (short)0, (long) (-1815));
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      boolean boolean0 = tUnmodifiableShortLongMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 11 covered goals:
   * 1 Weak Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.containsKey(S)Z:65 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 2 Weak Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.containsKey(S)Z:65 - InsertUnaryOp Negation of key
   * 3 Weak Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.containsKey(S)Z:65 - InsertUnaryOp IINC 1 key
   * 4 Weak Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.containsKey(S)Z:65 - DeleteStatement: containsKey(S)Z
   * 5 Weak Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.containsKey(S)Z:65 - InsertUnaryOp IINC -1 key
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.containsKey(S)Z: root-Branch
   * 7 Weak Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.containsKey(S)Z:65 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 8 Weak Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.containsKey(S)Z:65 - InsertUnaryOp Negation of key
   * 9 Weak Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.containsKey(S)Z:65 - InsertUnaryOp IINC 1 key
   * 10 Weak Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.containsKey(S)Z:65 - DeleteStatement: containsKey(S)Z
   * 11 Weak Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.containsKey(S)Z:65 - InsertUnaryOp IINC -1 key
   */

  @Test
  public void test2()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(2147483592);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      boolean boolean0 = tUnmodifiableShortLongMap0.containsKey((short)12);
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 7 covered goals:
   * 1 Weak Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.containsValue(J)Z:66 - InsertUnaryOp Negation of val
   * 2 Weak Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.containsValue(J)Z:66 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 3 Weak Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.containsValue(J)Z:66 - DeleteStatement: containsValue(J)Z
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.containsValue(J)Z: root-Branch
   * 5 Weak Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.containsValue(J)Z:66 - InsertUnaryOp Negation of val
   * 6 Weak Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.containsValue(J)Z:66 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 7 Weak Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.containsValue(J)Z:66 - DeleteStatement: containsValue(J)Z
   */

  @Test
  public void test3()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(2147483592);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      boolean boolean0 = tUnmodifiableShortLongMap0.containsValue(0L);
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 11 covered goals:
   * 1 Weak Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.get(S)J:67 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 2 Weak Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.get(S)J:67 - InsertUnaryOp IINC 1 key
   * 3 Weak Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.get(S)J:67 - InsertUnaryOp Negation of key
   * 4 Weak Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.get(S)J:67 - DeleteStatement: get(S)J
   * 5 Weak Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.get(S)J:67 - InsertUnaryOp IINC -1 key
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.get(S)J: root-Branch
   * 7 Weak Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.get(S)J:67 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 8 Weak Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.get(S)J:67 - InsertUnaryOp IINC 1 key
   * 9 Weak Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.get(S)J:67 - InsertUnaryOp Negation of key
   * 10 Weak Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.get(S)J:67 - DeleteStatement: get(S)J
   * 11 Weak Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.get(S)J:67 - InsertUnaryOp IINC -1 key
   */

  @Test
  public void test4()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(2147483592);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      long long0 = tUnmodifiableShortLongMap0.get((short)12);
      assertEquals(0L, long0);
  }

  //Test case number: 5
  /*
   * 14 covered goals:
   * 1 Weak Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keySet()Lgnu/trove/set/TShortSet;:79 - DeleteField: keySetLgnu/trove/set/TShortSet;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keySet()Lgnu/trove/set/TShortSet;: I4 Branch 2 IFNONNULL L79 - true
   * 3 Weak Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keySet()Lgnu/trove/set/TShortSet;:79 - ReplaceComparisonOperator != null -> = null
   * 4 Weak Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keySet()Lgnu/trove/set/TShortSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TShortSet;
   * 5 Weak Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keySet()Lgnu/trove/set/TShortSet;:80 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 6 Weak Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keySet()Lgnu/trove/set/TShortSet;:81 - DeleteField: keySetLgnu/trove/set/TShortSet;
   * 7 Weak Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keySet()Lgnu/trove/set/TShortSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TShortSet;)Lgnu/trove/set/TShortSet;
   * 8 Weak Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keySet()Lgnu/trove/set/TShortSet;:79 - ReplaceComparisonOperator != null -> = null
   * 9 Weak Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keySet()Lgnu/trove/set/TShortSet;:79 - DeleteField: keySetLgnu/trove/set/TShortSet;
   * 10 Weak Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keySet()Lgnu/trove/set/TShortSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TShortSet;
   * 11 Weak Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keySet()Lgnu/trove/set/TShortSet;:80 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 12 Weak Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keySet()Lgnu/trove/set/TShortSet;:81 - DeleteField: keySetLgnu/trove/set/TShortSet;
   * 13 Weak Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keySet()Lgnu/trove/set/TShortSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TShortSet;)Lgnu/trove/set/TShortSet;
   * 14 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keySet()Lgnu/trove/set/TShortSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test5()  throws Throwable  {
      short[] shortArray0 = new short[7];
      long[] longArray0 = new long[5];
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(shortArray0, longArray0);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      TUnmodifiableShortSet tUnmodifiableShortSet0 = (TUnmodifiableShortSet)tUnmodifiableShortLongMap0.keySet();
      assertNotNull(tUnmodifiableShortSet0);
      
      TUnmodifiableShortSet tUnmodifiableShortSet1 = (TUnmodifiableShortSet)tUnmodifiableShortLongMap0.keySet();
      assertSame(tUnmodifiableShortSet1, tUnmodifiableShortSet0);
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 Weak Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keys()[S:83 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 2 Weak Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keys()[S:83 - DeleteStatement: keys()[S
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keys()[S: root-Branch
   * 4 Weak Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keys()[S:83 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 5 Weak Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keys()[S:83 - DeleteStatement: keys()[S
   */

  @Test
  public void test6()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(2147483592);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      short[] shortArray0 = tUnmodifiableShortLongMap0.keys();
      assertNotNull(shortArray0);
  }

  //Test case number: 7
  /*
   * 5 covered goals:
   * 1 Weak Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keys([S)[S:84 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 2 Weak Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keys([S)[S:84 - DeleteStatement: keys([S)[S
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keys([S)[S: root-Branch
   * 4 Weak Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keys([S)[S:84 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 5 Weak Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keys([S)[S:84 - DeleteStatement: keys([S)[S
   */

  @Test
  public void test7()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(2147483592);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      short[] shortArray0 = tUnmodifiableShortLongMap0.keys(tShortLongHashMap0._set);
      assertNotNull(shortArray0);
  }

  //Test case number: 8
  /*
   * 14 covered goals:
   * 1 Weak Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.valueCollection()Lgnu/trove/TLongCollection;:87 - DeleteField: valuesLgnu/trove/TLongCollection;
   * 2 Weak Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.valueCollection()Lgnu/trove/TLongCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 3 Weak Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.valueCollection()Lgnu/trove/TLongCollection;:88 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 4 Weak Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.valueCollection()Lgnu/trove/TLongCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TLongCollection;
   * 5 Weak Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.valueCollection()Lgnu/trove/TLongCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TLongCollection;)Lgnu/trove/TLongCollection;
   * 6 Weak Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.valueCollection()Lgnu/trove/TLongCollection;:89 - DeleteField: valuesLgnu/trove/TLongCollection;
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.valueCollection()Lgnu/trove/TLongCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.valueCollection()Lgnu/trove/TLongCollection;: I4 Branch 3 IFNONNULL L87 - false
   * 9 Weak Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.valueCollection()Lgnu/trove/TLongCollection;:88 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 10 Weak Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.valueCollection()Lgnu/trove/TLongCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TLongCollection;
   * 11 Weak Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.valueCollection()Lgnu/trove/TLongCollection;:87 - DeleteField: valuesLgnu/trove/TLongCollection;
   * 12 Weak Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.valueCollection()Lgnu/trove/TLongCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 13 Weak Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.valueCollection()Lgnu/trove/TLongCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TLongCollection;)Lgnu/trove/TLongCollection;
   * 14 Weak Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.valueCollection()Lgnu/trove/TLongCollection;:89 - DeleteField: valuesLgnu/trove/TLongCollection;
   */

  @Test
  public void test8()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(2147483592);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      TUnmodifiableLongCollection tUnmodifiableLongCollection0 = (TUnmodifiableLongCollection)tUnmodifiableShortLongMap0.valueCollection();
      assertNotNull(tUnmodifiableLongCollection0);
      
      TUnmodifiableLongCollection tUnmodifiableLongCollection1 = (TUnmodifiableLongCollection)tUnmodifiableShortLongMap0.valueCollection();
      assertSame(tUnmodifiableLongCollection1, tUnmodifiableLongCollection0);
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 Weak Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.values()[J:91 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 2 Weak Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.values()[J:91 - DeleteStatement: values()[J
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.values()[J: root-Branch
   * 4 Weak Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.values()[J:91 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 5 Weak Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.values()[J:91 - DeleteStatement: values()[J
   */

  @Test
  public void test9()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap((-1678), (float) (-1678), (short)0, (long) (-1678));
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      long[] longArray0 = tUnmodifiableShortLongMap0.values();
      assertNotNull(longArray0);
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 Weak Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.values([J)[J:92 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 2 Weak Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.values([J)[J:92 - DeleteStatement: values([J)[J
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.values([J)[J: root-Branch
   * 4 Weak Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.values([J)[J:92 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 5 Weak Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.values([J)[J:92 - DeleteStatement: values([J)[J
   */

  @Test
  public void test10()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(2147483592);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      long[] longArray0 = new long[18];
      long[] longArray1 = tUnmodifiableShortLongMap0.values(longArray0);
      assertSame(longArray0, longArray1);
  }

  //Test case number: 11
  /*
   * 12 covered goals:
   * 1 Weak Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 2 Weak Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.equals(Ljava/lang/Object;)Z:94 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 3 Weak Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 5 Weak Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 8 Weak Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 9 Weak Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.equals(Ljava/lang/Object;)Z:94 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 10 Weak Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 12 Weak Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   */

  @Test
  public void test11()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap((-1678), (float) (-1678), (short)0, (long) (-1678));
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      boolean boolean0 = tUnmodifiableShortLongMap0.equals((Object) "QS/;9WV1");
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 5 covered goals:
   * 1 Weak Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.hashCode()I:95 - DeleteStatement: hashCode()I
   * 2 Weak Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.hashCode()I:95 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.hashCode()I: root-Branch
   * 4 Weak Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.hashCode()I:95 - DeleteStatement: hashCode()I
   * 5 Weak Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.hashCode()I:95 - DeleteField: mLgnu/trove/map/TShortLongMap;
   */

  @Test
  public void test12()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap((-1815), (float) (-1815), (short)0, (long) (-1815));
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      int int0 = tUnmodifiableShortLongMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 13
  /*
   * 5 covered goals:
   * 1 Weak Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 2 Weak Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.toString()Ljava/lang/String;: root-Branch
   * 4 Weak Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 5 Weak Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TShortLongMap;
   */

  @Test
  public void test13()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap();
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      String string0 = tUnmodifiableShortLongMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 14
  /*
   * 5 covered goals:
   * 1 Weak Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.getNoEntryKey()S:97 - DeleteStatement: getNoEntryKey()S
   * 2 Weak Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.getNoEntryKey()S:97 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.getNoEntryKey()S: root-Branch
   * 4 Weak Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.getNoEntryKey()S:97 - DeleteStatement: getNoEntryKey()S
   * 5 Weak Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.getNoEntryKey()S:97 - DeleteField: mLgnu/trove/map/TShortLongMap;
   */

  @Test
  public void test14()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(1803);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      short short0 = tUnmodifiableShortLongMap0.getNoEntryKey();
      assertEquals((short)0, short0);
  }

  //Test case number: 15
  /*
   * 5 covered goals:
   * 1 Weak Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.getNoEntryValue()J:98 - DeleteStatement: getNoEntryValue()J
   * 2 Weak Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.getNoEntryValue()J:98 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.getNoEntryValue()J: root-Branch
   * 4 Weak Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.getNoEntryValue()J:98 - DeleteStatement: getNoEntryValue()J
   * 5 Weak Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.getNoEntryValue()J:98 - DeleteField: mLgnu/trove/map/TShortLongMap;
   */

  @Test
  public void test15()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap((-1815), (float) (-1815), (short)0, (long) (-1815));
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      long long0 = tUnmodifiableShortLongMap0.getNoEntryValue();
      assertEquals((-1815L), long0);
  }

  //Test case number: 16
  /*
   * 5 covered goals:
   * 1 Weak Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z
   * 2 Weak Mutation 60: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z:101 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   * 4 Weak Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z
   * 5 Weak Mutation 60: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z:101 - DeleteField: mLgnu/trove/map/TShortLongMap;
   */

  @Test
  public void test16()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(1803);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      boolean boolean0 = tUnmodifiableShortLongMap0.forEachKey((TShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 5 covered goals:
   * 1 Weak Mutation 63: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z
   * 2 Weak Mutation 62: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:104 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   * 4 Weak Mutation 63: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z
   * 5 Weak Mutation 62: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:104 - DeleteField: mLgnu/trove/map/TShortLongMap;
   */

  @Test
  public void test17()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(2147483592);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      boolean boolean0 = tUnmodifiableShortLongMap0.forEachValue((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 18
  /*
   * 5 covered goals:
   * 1 Weak Mutation 64: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.forEachEntry(Lgnu/trove/procedure/TShortLongProcedure;)Z:107 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 2 Weak Mutation 65: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.forEachEntry(Lgnu/trove/procedure/TShortLongProcedure;)Z:107 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TShortLongProcedure;)Z
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.forEachEntry(Lgnu/trove/procedure/TShortLongProcedure;)Z: root-Branch
   * 4 Weak Mutation 64: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.forEachEntry(Lgnu/trove/procedure/TShortLongProcedure;)Z:107 - DeleteField: mLgnu/trove/map/TShortLongMap;
   * 5 Weak Mutation 65: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.forEachEntry(Lgnu/trove/procedure/TShortLongProcedure;)Z:107 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TShortLongProcedure;)Z
   */

  @Test
  public void test18()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(2147483592);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      boolean boolean0 = tUnmodifiableShortLongMap0.forEachEntry((TShortLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 19
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.<init>(Lgnu/trove/map/TShortLongMap;)V: I17 Branch 1 IFNONNULL L58 - false
   * 2 Weak Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.<init>(Lgnu/trove/map/TShortLongMap;)V:58 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test19()  throws Throwable  {
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = null;
      try {
        tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

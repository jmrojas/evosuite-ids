/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TIntShortMapDecorator;
import gnu.trove.map.TIntShortMap;
import gnu.trove.map.hash.TIntShortHashMap;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.AbstractMap;
import java.util.Locale;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

public class TIntShortMapDecoratorEvoSuite_Random {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = (-1811);
      float float0 = (-1.0F);
      TIntShortMapDecorator tIntShortMapDecorator0 = new TIntShortMapDecorator();
      TIntShortMap tIntShortMap0 = tIntShortMapDecorator0.getMap();
      TIntShortMapDecorator tIntShortMapDecorator1 = new TIntShortMapDecorator(tIntShortMap0);
      String string0 = "";
      // Undeclared exception!
      try {
        tIntShortMapDecorator0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TIntShortMap tIntShortMap0 = null;
      TIntShortMapDecorator tIntShortMapDecorator0 = new TIntShortMapDecorator(tIntShortMap0);
      // Undeclared exception!
      try {
        tIntShortMapDecorator0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int[] intArray0 = new int[7];
      int int0 = (-1704);
      intArray0[0] = int0;
      int int1 = 0;
      intArray0[1] = int1;
      int int2 = 32767;
      intArray0[2] = int2;
      int int3 = (-204);
      intArray0[3] = int3;
      int int4 = (-1586);
      intArray0[4] = int4;
      int int5 = 654;
      intArray0[5] = int5;
      int int6 = (-345);
      intArray0[6] = int6;
      short[] shortArray0 = new short[3];
      short short0 = (short)536;
      shortArray0[0] = short0;
      short short1 = (short) (-1292);
      shortArray0[1] = short1;
      short short2 = (short)0;
      shortArray0[2] = short2;
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(intArray0, shortArray0);
      TIntShortMapDecorator tIntShortMapDecorator0 = new TIntShortMapDecorator((TIntShortMap) tIntShortHashMap0);
      String string0 = tIntShortMapDecorator0.toString();
      assertEquals("{32767=null, -1704=536, null=-1292}", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = (-691);
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(int0, int0);
      TIntShortMapDecorator tIntShortMapDecorator0 = new TIntShortMapDecorator();
      tIntShortMapDecorator0.getMap();
      TIntShortMapDecorator tIntShortMapDecorator1 = new TIntShortMapDecorator((TIntShortMap) tIntShortHashMap0);
      tIntShortMapDecorator1.keySet();
      tIntShortHashMap0.keySet();
      TIntShortMapDecorator tIntShortMapDecorator2 = new TIntShortMapDecorator((TIntShortMap) tIntShortHashMap0);
      short short0 = (short) (-102);
      Short short1 = new Short(short0);
      tIntShortMapDecorator2.put((Integer) int0, short1);
      tIntShortMapDecorator2.values();
      String string0 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: :#
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TIntShortMapDecorator tIntShortMapDecorator0 = new TIntShortMapDecorator();
      // Undeclared exception!
      try {
        tIntShortMapDecorator0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int[] intArray0 = new int[8];
      int int0 = 273;
      intArray0[0] = int0;
      int int1 = (-178);
      TIntShortMapDecorator tIntShortMapDecorator0 = new TIntShortMapDecorator();
      InputStream inputStream0 = null;
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(inputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = (-1764);
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(int0);
      int[] intArray0 = new int[5];
      intArray0[0] = int0;
      intArray0[1] = int0;
      int int1 = 31322867;
      intArray0[2] = int1;
      intArray0[3] = int0;
      intArray0[4] = int0;
      tIntShortHashMap0._set = intArray0;
      TIntShortMapDecorator tIntShortMapDecorator0 = new TIntShortMapDecorator();
      tIntShortMapDecorator0.entrySet();
      TIntShortMapDecorator tIntShortMapDecorator1 = new TIntShortMapDecorator((TIntShortMap) tIntShortHashMap0);
      short short0 = (short) (-1029);
      Short short1 = new Short(short0);
      tIntShortMapDecorator1.put((Integer) int0, short1);
      short short2 = (short)1577;
      Short.compare(short2, (short) short1);
      tIntShortMapDecorator1.keySet();
      String string0 = tIntShortMapDecorator1.toString();
      tIntShortMapDecorator1.equals((Object) string0);
      assertEquals(false, tIntShortMapDecorator1.isEmpty());
      assertEquals("{-1764=-1029}", tIntShortMapDecorator1.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = (-1838);
      Integer integer0 = new Integer(int0);
      int int1 = 1835;
      short short0 = (short)942;
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(int0, (float) integer0, int1, short0);
      AbstractMap.SimpleEntry<Integer, TIntShortHashMap> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, TIntShortHashMap>(integer0, tIntShortHashMap0);
      abstractMap_SimpleEntry0.hashCode();
      TIntShortMapDecorator tIntShortMapDecorator0 = new TIntShortMapDecorator();
      // Undeclared exception!
      try {
        tIntShortMapDecorator0.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TIntShortMapDecorator tIntShortMapDecorator0 = new TIntShortMapDecorator();
      tIntShortMapDecorator0.getMap();
      int int0 = (-403);
      Integer integer0 = Integer.valueOf(int0);
      short short0 = (short)698;
      Short short1 = new Short(short0);
      // Undeclared exception!
      try {
        tIntShortMapDecorator0.put(integer0, short1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int[] intArray0 = new int[10];
      int int0 = 1;
      intArray0[0] = int0;
      int int1 = 0;
      intArray0[1] = int1;
      int int2 = (-2009);
      intArray0[2] = int2;
      int int3 = 245;
      intArray0[3] = int3;
      int int4 = 0;
      intArray0[4] = int4;
      int int5 = 1747;
      intArray0[5] = int5;
      int int6 = 255;
      intArray0[6] = int6;
      int int7 = 0;
      intArray0[7] = int7;
      int int8 = 844;
      intArray0[8] = int8;
      int int9 = 1886;
      intArray0[9] = int9;
      short[] shortArray0 = new short[6];
      short short0 = (short)35;
      shortArray0[0] = short0;
      short short1 = (short) (-1);
      shortArray0[1] = short1;
      short short2 = (short)1366;
      shortArray0[2] = short2;
      short short3 = (short)0;
      shortArray0[3] = short3;
      short short4 = (short)1805;
      shortArray0[4] = short4;
      short short5 = (short) (-1374);
      shortArray0[5] = short5;
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(intArray0, shortArray0);
      TIntShortMapDecorator tIntShortMapDecorator0 = new TIntShortMapDecorator((TIntShortMap) tIntShortHashMap0);
      int int10 = (-1028);
      Integer integer0 = new Integer(int10);
      short short6 = (short) (-1234);
      Short short7 = new Short(short6);
      AbstractMap.SimpleEntry<Integer, Short> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, Short>(integer0, short7);
      String string0 = " hashCode= ";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 0:  hashCode= :%20hashCode=%20#%20hashCode=%20
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          String string0 = "c\"so&a=o/XDu5Em)m.";
          String string1 = "";
          // Undeclared exception!
          try {
            File.createTempFile(string0, string1);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Unable to create temporary file
             //
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test11()  throws Throwable  {
      TIntShortMap tIntShortMap0 = null;
      TIntShortMapDecorator tIntShortMapDecorator0 = new TIntShortMapDecorator(tIntShortMap0);
      String string0 = " vs b=";
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale locale1 = Locale.CANADA;
      String string1 = locale0.getDisplayLanguage(locale1);
      tIntShortMapDecorator0.get((Object) string1);
      // Undeclared exception!
      try {
        tIntShortMapDecorator0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TIntShortMapDecorator tIntShortMapDecorator0 = new TIntShortMapDecorator();
      Object object0 = null;
      // Undeclared exception!
      try {
        tIntShortMapDecorator0.get(object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = (-1937);
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(int0);
      TIntShortMapDecorator tIntShortMapDecorator0 = new TIntShortMapDecorator((TIntShortMap) tIntShortHashMap0);
      TIntShortHashMap tIntShortHashMap1 = (TIntShortHashMap)tIntShortMapDecorator0.getMap();
      TIntShortHashMap tIntShortHashMap2 = new TIntShortHashMap((TIntShortMap) tIntShortHashMap1);
      TIntShortMapDecorator tIntShortMapDecorator1 = new TIntShortMapDecorator((TIntShortMap) tIntShortHashMap2);
      tIntShortMapDecorator1.clear();
      TIntShortMap tIntShortMap0 = null;
      TIntShortMapDecorator tIntShortMapDecorator2 = new TIntShortMapDecorator(tIntShortMap0);
      // Undeclared exception!
      try {
        tIntShortMapDecorator2.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TIntShortMapDecorator tIntShortMapDecorator0 = new TIntShortMapDecorator();
      String string0 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: :#
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TIntShortMapDecorator tIntShortMapDecorator0 = new TIntShortMapDecorator();
      String string0 = "nF'=fag5D a";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: nF'=fag5D a://nF'=fag5D%20anF'=fag5D%20a?nF'=fag5D%20a#nF'=fag5D%20a
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      TIntShortMapDecorator tIntShortMapDecorator0 = new TIntShortMapDecorator();
      // Undeclared exception!
      try {
        tIntShortMapDecorator0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      int int0 = 1;
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(int0, int0);
      Short short0 = null;
      AbstractMap.SimpleImmutableEntry<TIntShortHashMap, Short> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<TIntShortHashMap, Short>(tIntShortHashMap0, short0);
      TIntShortMapDecorator tIntShortMapDecorator0 = new TIntShortMapDecorator();
      tIntShortMapDecorator0.values();
      String string0 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://#
         //
      }
  }
}

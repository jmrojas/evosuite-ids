/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TObjectFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap;
import gnu.trove.map.TIntObjectMap;
import gnu.trove.map.hash.TIntObjectHashMap;
import java.io.File;
import java.net.URI;
import java.util.Locale;
import org.evosuite.testcase.TestCaseExecutor;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableIntObjectMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = 1;
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>(int0);
      TUnmodifiableIntObjectMap<Integer> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      TIntObjectHashMap<Object> tIntObjectHashMap1 = new TIntObjectHashMap<Object>(int0, int0);
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap1 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap1);
      assertEquals(0, tUnmodifiableIntObjectMap1.getNoEntryKey());
  }

  @Test
  public void test1()  throws Throwable  {
      TIntObjectMap<String> tIntObjectMap0 = null;
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>();
      TUnmodifiableIntObjectMap<Integer> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      TUnmodifiableIntObjectMap<Integer> tUnmodifiableIntObjectMap1 = new TUnmodifiableIntObjectMap<Integer>((TIntObjectMap<Integer>) tUnmodifiableIntObjectMap0);
      tUnmodifiableIntObjectMap1.size();
      TUnmodifiableIntObjectMap<String> tUnmodifiableIntObjectMap2 = null;
      try {
        tUnmodifiableIntObjectMap2 = new TUnmodifiableIntObjectMap<String>(tIntObjectMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = (-293);
      TIntObjectHashMap<String> tIntObjectHashMap0 = new TIntObjectHashMap<String>(int0);
      TUnmodifiableIntObjectMap<String> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<String>((TIntObjectMap<String>) tIntObjectHashMap0);
      String[] stringArray0 = new String[5];
      String string0 = "Could not find insertion index for null key. Key set full!?!!";
      stringArray0[0] = string0;
      String string1 = "";
      stringArray0[1] = string1;
      String string2 = "C3`t{";
      stringArray0[2] = string2;
      String string3 = "";
      stringArray0[3] = string3;
      String string4 = "gnu.trove.no_entry.float";
      stringArray0[4] = string4;
      String[] stringArray1 = tUnmodifiableIntObjectMap0.values(stringArray0);
      assertSame(stringArray1, stringArray0);
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = 143483;
      float float0 = (-956.824F);
      int int1 = 0;
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>(int0, float0, int1);
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      Locale locale0 = Locale.CANADA_FRENCH;
      String string0 = locale0.toString();
      // Undeclared exception!
      try {
        tUnmodifiableIntObjectMap0.put(int0, (Object) string0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TIntObjectMap<Object> tIntObjectMap0 = null;
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap0 = null;
      try {
        tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Object>(tIntObjectMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = 0;
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>(int0, int0);
      TIntObjectHashMap<Object> tIntObjectHashMap1 = new TIntObjectHashMap<Object>((TIntObjectMap<?>) tIntObjectHashMap0);
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap1);
      int int1 = 32767;
      TIntObjectHashMap<Integer> tIntObjectHashMap2 = new TIntObjectHashMap<Integer>(int1);
      TUnmodifiableIntObjectMap<Integer> tUnmodifiableIntObjectMap1 = new TUnmodifiableIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap2);
      // Undeclared exception!
      try {
        tUnmodifiableIntObjectMap1.put(int1, (Integer) int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = 437;
      float float0 = (-1679.8478F);
      int int1 = 0;
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>(int0, float0, int1);
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      tUnmodifiableIntObjectMap0.keySet();
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap1 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      tUnmodifiableIntObjectMap1.getNoEntryKey();
      TObjectFunction<Object, Object> tObjectFunction0 = null;
      // Undeclared exception!
      try {
        tUnmodifiableIntObjectMap0.transformValues(tObjectFunction0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>();
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      int[] intArray0 = new int[7];
      int int0 = 241;
      intArray0[0] = int0;
      int int1 = 669;
      intArray0[1] = int1;
      int int2 = 1002331963;
      intArray0[2] = int2;
      int int3 = 1;
      intArray0[3] = int3;
      int int4 = 0;
      tIntObjectHashMap0.ensureCapacity(int4);
      int int5 = 259;
      intArray0[4] = int5;
      int int6 = (-376);
      intArray0[5] = int6;
      int int7 = 417;
      intArray0[6] = int7;
      tUnmodifiableIntObjectMap0.keys(intArray0);
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap1 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      tIntObjectHashMap0.getNoEntryValue();
      // Undeclared exception!
      try {
        tUnmodifiableIntObjectMap1.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>();
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) tIntObjectHashMap0;
      objectArray0[1] = (Object) tUnmodifiableIntObjectMap0;
      objectArray0[2] = (Object) tIntObjectHashMap0;
      objectArray0[3] = (Object) tIntObjectHashMap0;
      objectArray0[4] = (Object) tUnmodifiableIntObjectMap0;
      objectArray0[5] = (Object) tIntObjectHashMap0;
      objectArray0[6] = (Object) tUnmodifiableIntObjectMap0;
      objectArray0[7] = (Object) tIntObjectHashMap0;
      tUnmodifiableIntObjectMap0.values(objectArray0);
      int int0 = 11;
      float float0 = 0.0F;
      TIntObjectHashMap<Integer> tIntObjectHashMap1 = new TIntObjectHashMap<Integer>(int0, float0);
      TUnmodifiableIntObjectMap<Integer> tUnmodifiableIntObjectMap1 = new TUnmodifiableIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap1);
      TUnmodifiableIntObjectMap<Integer> tUnmodifiableIntObjectMap2 = new TUnmodifiableIntObjectMap<Integer>((TIntObjectMap<Integer>) tUnmodifiableIntObjectMap1);
      // Undeclared exception!
      try {
        tUnmodifiableIntObjectMap2.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 0;
      int int1 = (-1177);
      float float0 = 519.1875F;
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>(int1, float0, int0);
      TUnmodifiableIntObjectMap<Integer> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      tUnmodifiableIntObjectMap0.keys(tIntObjectHashMap0._set);
      TIntObjectHashMap<Integer> tIntObjectHashMap1 = new TIntObjectHashMap<Integer>(int0);
      TIntObjectHashMap<Integer> tIntObjectHashMap2 = new TIntObjectHashMap<Integer>((TIntObjectMap<? extends Integer>) tIntObjectHashMap1);
      TUnmodifiableIntObjectMap<Integer> tUnmodifiableIntObjectMap1 = new TUnmodifiableIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap2);
      assertNotSame(tUnmodifiableIntObjectMap1, tUnmodifiableIntObjectMap0);
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = (-35);
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>(int0);
      int int1 = 0;
      TIntObjectHashMap<Object> tIntObjectHashMap1 = new TIntObjectHashMap<Object>(int1, int1, int1);
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap1);
      tUnmodifiableIntObjectMap0.toString();
      TUnmodifiableIntObjectMap<Integer> tUnmodifiableIntObjectMap1 = new TUnmodifiableIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      tIntObjectHashMap0.trimToSize();
      String string0 = tUnmodifiableIntObjectMap1.toString();
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap2 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tUnmodifiableIntObjectMap0);
      Integer[] integerArray0 = new Integer[2];
      int int2 = 759;
      Integer integer0 = new Integer(int2);
      integerArray0[0] = integer0;
      File file0 = new File(string0, string0);
      File file1 = file0.getParentFile();
      URI uRI0 = file1.toURI();
      String string1 = uRI0.getRawQuery();
      tUnmodifiableIntObjectMap1.containsValue((Object) string1);
      integerArray0[0] = (Integer) int1;
      tIntObjectHashMap0.getAutoCompactionFactor();
      integerArray0[1] = integer0;
      integerArray0[1] = (Integer) int1;
      tUnmodifiableIntObjectMap1.values(integerArray0);
      // Undeclared exception!
      try {
        tUnmodifiableIntObjectMap2.putAll((TIntObjectMap<?>) tIntObjectHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

//   @Test
//   public void test11()  throws Throwable  {
//       int int0 = 47447201;
//       TIntObjectHashMap<String> tIntObjectHashMap0 = new TIntObjectHashMap<String>(int0);
//       int int1 = 0;
//       float float0 = 3.4028235E38F;
//       TIntObjectHashMap<Object> tIntObjectHashMap1 = new TIntObjectHashMap<Object>(int1, float0);
//       int int2 = (-1626);
//       float float1 = 0.0F;
//       TIntObjectHashMap<Integer> tIntObjectHashMap2 = new TIntObjectHashMap<Integer>(int2, float1);
//       TUnmodifiableIntObjectMap<Integer> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap2);
//       tUnmodifiableIntObjectMap0.keys();
//       TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap1 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap1);
//       Object[] objectArray0 = new Object[7];
//       objectArray0[0] = (Object) tIntObjectHashMap1;
//       objectArray0[1] = (Object) tIntObjectHashMap1;
//       objectArray0[2] = (Object) tUnmodifiableIntObjectMap1;
//       objectArray0[3] = (Object) tIntObjectHashMap1;
//       objectArray0[4] = (Object) tIntObjectHashMap0;
//       objectArray0[5] = (Object) int0;
//       objectArray0[6] = (Object) tUnmodifiableIntObjectMap1;
//       tUnmodifiableIntObjectMap1.values(objectArray0);
//       TUnmodifiableIntObjectMap<String> tUnmodifiableIntObjectMap2 = new TUnmodifiableIntObjectMap<String>((TIntObjectMap<String>) tIntObjectHashMap0);
//       int int3 = 127;
//       TIntObjectHashMap<Object> tIntObjectHashMap3 = new TIntObjectHashMap<Object>((TIntObjectMap<?>) tIntObjectHashMap0);
//       // Undeclared exception!
//       try {
//         tIntObjectHashMap3.ensureCapacity(int0);
//         fail("Expecting exception: OutOfMemoryError");
//       
//       } catch(OutOfMemoryError e) {
//          //
//          // Java heap space
//          //
//       }
//   }

  @Test
  public void test12()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>();
      tIntObjectHashMap0.size();
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      tUnmodifiableIntObjectMap0.size();
      int int0 = tUnmodifiableIntObjectMap0.getNoEntryKey();
      assertEquals(0, int0);
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = (-675);
      float float0 = (-1768.9479F);
      int int1 = 0;
      TIntObjectHashMap<String> tIntObjectHashMap0 = new TIntObjectHashMap<String>(int0, float0, int1);
      TUnmodifiableIntObjectMap<String> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<String>((TIntObjectMap<String>) tIntObjectHashMap0);
      int int2 = tUnmodifiableIntObjectMap0.getNoEntryKey();
      assertFalse(int0 == int2);
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 0;
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>(int0);
      TUnmodifiableIntObjectMap<Integer> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      Locale locale0 = Locale.US;
      TIntObjectHashMap<String> tIntObjectHashMap1 = new TIntObjectHashMap<String>();
      TUnmodifiableIntObjectMap<String> tUnmodifiableIntObjectMap1 = new TUnmodifiableIntObjectMap<String>((TIntObjectMap<String>) tIntObjectHashMap1);
      tUnmodifiableIntObjectMap1.iterator();
      Locale locale1 = null;
      // Undeclared exception!
      try {
        locale0.getDisplayName(locale1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = 548348231;
      float float0 = 0.0F;
      int int1 = 0;
      TIntObjectMap<Object> tIntObjectMap0 = null;
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>(int1);
      TUnmodifiableIntObjectMap<Integer> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      tUnmodifiableIntObjectMap0.size();
      TIntObjectHashMap<Object> tIntObjectHashMap1 = null;
      try {
        tIntObjectHashMap1 = new TIntObjectHashMap<Object>(tIntObjectMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

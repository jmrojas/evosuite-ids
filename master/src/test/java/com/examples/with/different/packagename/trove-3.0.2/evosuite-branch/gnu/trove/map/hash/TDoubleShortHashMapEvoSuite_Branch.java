/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TShortCollection;
import gnu.trove.function.TShortFunction;
import gnu.trove.map.TDoubleShortMap;
import gnu.trove.map.hash.TDoubleShortHashMap;
import gnu.trove.procedure.TDoubleProcedure;
import gnu.trove.procedure.TDoubleShortProcedure;
import gnu.trove.procedure.TShortProcedure;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TDoubleShortHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap$TKeyView.<init>(Lgnu/trove/map/hash/TDoubleShortHashMap;)V: root-Branch
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.setUp(I)I: root-Branch
   * 3 gnu.trove.map.hash.TDoubleShortHashMap.keySet()Lgnu/trove/set/TDoubleSet;: root-Branch
   * 4 gnu.trove.map.hash.TDoubleShortHashMap.<init>()V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      tDoubleShortHashMap0.keySet();
      assertEquals(23, tDoubleShortHashMap0.capacity());
  }

  //Test case number: 1
  /*
   * 19 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap$TDoubleShortHashIterator.key()D: root-Branch
   * 2 gnu.trove.map.hash.TDoubleShortHashMap$TDoubleShortHashIterator.advance()V: root-Branch
   * 3 gnu.trove.map.hash.TDoubleShortHashMap$TDoubleShortHashIterator.<init>(Lgnu/trove/map/hash/TDoubleShortHashMap;Lgnu/trove/map/hash/TDoubleShortHashMap;)V: root-Branch
   * 4 gnu.trove.map.hash.TDoubleShortHashMap$TDoubleShortHashIterator.value()S: root-Branch
   * 5 gnu.trove.map.hash.TDoubleShortHashMap.<init>(IF)V: root-Branch
   * 6 gnu.trove.map.hash.TDoubleShortHashMap.put(DS)S: root-Branch
   * 7 gnu.trove.map.hash.TDoubleShortHashMap.iterator()Lgnu/trove/iterator/TDoubleShortIterator;: root-Branch
   * 8 gnu.trove.map.hash.TDoubleShortHashMap.<init>(Lgnu/trove/map/TDoubleShortMap;)V: I10 Branch 34 IFEQ L133 - false
   * 9 gnu.trove.map.hash.TDoubleShortHashMap.<init>(Lgnu/trove/map/TDoubleShortMap;)V: I40 Branch 35 IFEQ L139 - true
   * 10 gnu.trove.map.hash.TDoubleShortHashMap.<init>(Lgnu/trove/map/TDoubleShortMap;)V: I52 Branch 36 IFEQ L143 - true
   * 11 gnu.trove.map.hash.TDoubleShortHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 12 gnu.trove.map.hash.TDoubleShortHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 13 gnu.trove.map.hash.TDoubleShortHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 14 gnu.trove.map.hash.TDoubleShortHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 15 gnu.trove.map.hash.TDoubleShortHashMap.putIfAbsent(DS)S: I9 Branch 39 IFGE L205 - true
   * 16 gnu.trove.map.hash.TDoubleShortHashMap.doPut(DSI)S: I12 Branch 40 IFGE L214 - true
   * 17 gnu.trove.map.hash.TDoubleShortHashMap.doPut(DSI)S: I41 Branch 41 IFEQ L221 - false
   * 18 gnu.trove.map.hash.TDoubleShortHashMap.putAll(Lgnu/trove/map/TDoubleShortMap;)V: I15 Branch 43 IFEQ L243 - true
   * 19 gnu.trove.map.hash.TDoubleShortHashMap.putAll(Lgnu/trove/map/TDoubleShortMap;)V: I15 Branch 43 IFEQ L243 - false
   */

  @Test
  public void test1()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((-1), (-1));
      tDoubleShortHashMap0.putIfAbsent(1785.4486400969356, (short) (-650));
      TDoubleShortHashMap tDoubleShortHashMap1 = new TDoubleShortHashMap((TDoubleShortMap) tDoubleShortHashMap0);
      assertEquals(false, tDoubleShortHashMap0.isEmpty());
      assertTrue(tDoubleShortHashMap0.equals(tDoubleShortHashMap1));
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.increment(D)Z: root-Branch
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.adjustValue(DS)Z: I9 Branch 71 IFGE L477 - false
   */

  @Test
  public void test2()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(0, 0);
      boolean boolean0 = tDoubleShortHashMap0.increment((double) 0);
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.containsKey(D)Z: root-Branch
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.<init>([D[S)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 3 gnu.trove.map.hash.TDoubleShortHashMap.<init>([D[S)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 4 gnu.trove.map.hash.TDoubleShortHashMap.doPut(DSI)S: I12 Branch 40 IFGE L214 - false
   * 5 gnu.trove.map.hash.TDoubleShortHashMap.doPut(DSI)S: I41 Branch 41 IFEQ L221 - true
   */

  @Test
  public void test3()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      short[] shortArray0 = new short[4];
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(doubleArray0, shortArray0);
      tDoubleShortHashMap0.containsKey(515.057136596629);
      assertEquals(11, tDoubleShortHashMap0.capacity());
      assertEquals(1, tDoubleShortHashMap0.size());
      assertEquals("{0.0=0}", tDoubleShortHashMap0.toString());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.valueCollection()Lgnu/trove/TShortCollection;: root-Branch
   * 2 gnu.trove.map.hash.TDoubleShortHashMap$TValueView.<init>(Lgnu/trove/map/hash/TDoubleShortHashMap;)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(0, 270.3584F);
      TShortCollection tShortCollection0 = tDoubleShortHashMap0.valueCollection();
      assertEquals(0, tShortCollection0.size());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.clear()V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((-1), (-1));
      tDoubleShortHashMap0.clear();
      assertEquals("{}", tDoubleShortHashMap0.toString());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.forEachKey(Lgnu/trove/procedure/TDoubleProcedure;)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((int) (short)0, (float) (short) (-1));
      boolean boolean0 = tDoubleShortHashMap0.forEachKey((TDoubleProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.removeAt(I)V: root-Branch
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.remove(D)S: I14 Branch 46 IFLT L276 - false
   * 3 gnu.trove.map.hash.TDoubleShortHashMap$TDoubleShortHashIterator.key()D: root-Branch
   * 4 gnu.trove.map.hash.TDoubleShortHashMap$TDoubleShortHashIterator.advance()V: root-Branch
   * 5 gnu.trove.map.hash.TDoubleShortHashMap$TDoubleShortHashIterator.<init>(Lgnu/trove/map/hash/TDoubleShortHashMap;Lgnu/trove/map/hash/TDoubleShortHashMap;)V: root-Branch
   * 6 gnu.trove.map.hash.TDoubleShortHashMap$TDoubleShortHashIterator.value()S: root-Branch
   * 7 gnu.trove.map.hash.TDoubleShortHashMap.iterator()Lgnu/trove/iterator/TDoubleShortIterator;: root-Branch
   * 8 gnu.trove.map.hash.TDoubleShortHashMap.putAll(Lgnu/trove/map/TDoubleShortMap;)V: I15 Branch 43 IFEQ L243 - true
   * 9 gnu.trove.map.hash.TDoubleShortHashMap.putAll(Lgnu/trove/map/TDoubleShortMap;)V: I15 Branch 43 IFEQ L243 - false
   */

  @Test
  public void test7()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      short[] shortArray0 = new short[6];
      TDoubleShortHashMap tDoubleShortHashMap1 = new TDoubleShortHashMap(tDoubleShortHashMap0._set, shortArray0);
      tDoubleShortHashMap0.putAll((TDoubleShortMap) tDoubleShortHashMap1);
      assertEquals(false, tDoubleShortHashMap0.isEmpty());
      
      short short0 = tDoubleShortHashMap0.remove((double) (short)0);
      assertEquals((short)0, short0);
  }

  //Test case number: 8
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.<init>(Lgnu/trove/map/TDoubleShortMap;)V: I40 Branch 35 IFEQ L139 - false
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.<init>(Lgnu/trove/map/TDoubleShortMap;)V: I52 Branch 36 IFEQ L143 - false
   * 3 gnu.trove.map.hash.TDoubleShortHashMap.<init>(IFDS)V: root-Branch
   * 4 gnu.trove.map.hash.TDoubleShortHashMap.<init>(Lgnu/trove/map/TDoubleShortMap;)V: I10 Branch 34 IFEQ L133 - false
   */

  @Test
  public void test8()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(897, 0.0F, 1.0, (short) (-1));
      TDoubleShortHashMap tDoubleShortHashMap1 = null;
      try {
        tDoubleShortHashMap1 = new TDoubleShortHashMap((TDoubleShortMap) tDoubleShortHashMap0);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.putIfAbsent(DS)S: I9 Branch 39 IFGE L205 - false
   */

  @Test
  public void test9()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      short[] shortArray0 = new short[3];
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(doubleArray0, shortArray0);
      short short0 = tDoubleShortHashMap0.putIfAbsent((double) (short)0, (short)1698);
      assertEquals(7, tDoubleShortHashMap0.capacity());
      assertEquals(1, tDoubleShortHashMap0.size());
      assertEquals("{0.0=0}", tDoubleShortHashMap0.toString());
      assertEquals((short)0, short0);
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - false
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - true
   */

  @Test
  public void test10()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((-1), 0.0F);
      HashMap<Double, Short> hashMap0 = new HashMap<Double, Short>();
      hashMap0.put((Double) 1.0, (Short) (short) (-1823));
      tDoubleShortHashMap0.putAll((Map<? extends Double, ? extends Short>) hashMap0);
      assertEquals("{1.0=-1823}", tDoubleShortHashMap0.toString());
      assertEquals(false, tDoubleShortHashMap0.isEmpty());
  }

  //Test case number: 11
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.get(D)S: I9 Branch 44 IFGE L253 - true
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 3 gnu.trove.map.hash.TDoubleShortHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 4 gnu.trove.map.hash.TDoubleShortHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 5 gnu.trove.map.hash.TDoubleShortHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 6 gnu.trove.map.hash.TDoubleShortHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 7 gnu.trove.map.hash.TDoubleShortHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 8 gnu.trove.map.hash.TDoubleShortHashMap.equals(Ljava/lang/Object;)Z: I84 Branch 78 IF_ICMPEQ L1200 - true
   * 9 gnu.trove.map.hash.TDoubleShortHashMap.<init>(I)V: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(548);
      tDoubleShortHashMap0.putIfAbsent(0.0, (short)157);
      boolean boolean0 = tDoubleShortHashMap0.equals((Object) tDoubleShortHashMap0);
      assertEquals(false, tDoubleShortHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 12
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.get(D)S: I9 Branch 44 IFGE L253 - false
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.equals(Ljava/lang/Object;)Z: I84 Branch 78 IF_ICMPEQ L1200 - false
   * 3 gnu.trove.map.hash.TDoubleShortHashMap.equals(Ljava/lang/Object;)Z: I87 Branch 79 IF_ICMPEQ L1200 - false
   * 4 gnu.trove.map.hash.TDoubleShortHashMap.equals(Ljava/lang/Object;)Z: I90 Branch 80 IF_ICMPEQ L1200 - true
   * 5 gnu.trove.map.hash.TDoubleShortHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 6 gnu.trove.map.hash.TDoubleShortHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 7 gnu.trove.map.hash.TDoubleShortHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 8 gnu.trove.map.hash.TDoubleShortHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 9 gnu.trove.map.hash.TDoubleShortHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   */

  @Test
  public void test12()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(1878);
      short[] shortArray0 = new short[8];
      tDoubleShortHashMap0.putIfAbsent((-1.0), (short)714);
      TDoubleShortHashMap tDoubleShortHashMap1 = new TDoubleShortHashMap(tDoubleShortHashMap0._set, shortArray0);
      boolean boolean0 = tDoubleShortHashMap0.equals((Object) tDoubleShortHashMap1);
      assertEquals(1, tDoubleShortHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - true
   */

  @Test
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      short[] shortArray0 = new short[4];
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(doubleArray0, shortArray0);
      boolean boolean0 = tDoubleShortHashMap0.isEmpty();
      assertEquals(11, tDoubleShortHashMap0.capacity());
      assertEquals("{0.0=0}", tDoubleShortHashMap0.toString());
      assertEquals(false, boolean0);
      assertEquals(1, tDoubleShortHashMap0.size());
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - false
   */

  @Test
  public void test14()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(0, 270.3584F);
      boolean boolean0 = tDoubleShortHashMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.remove(D)S: I14 Branch 46 IFLT L276 - true
   */

  @Test
  public void test15()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((-1), (-1));
      short short0 = tDoubleShortHashMap0.remove((double) (-1));
      assertEquals((short)0, short0);
      assertEquals(true, tDoubleShortHashMap0.isEmpty());
  }

  //Test case number: 16
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.keys()[D: I34 Branch 48 IF_ICMPNE L304 - false
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.keys()[D: I27 Branch 47 IFLE L303 - true
   * 3 gnu.trove.map.hash.TDoubleShortHashMap.keys()[D: I27 Branch 47 IFLE L303 - false
   * 4 gnu.trove.map.hash.TDoubleShortHashMap.keys()[D: I34 Branch 48 IF_ICMPNE L304 - true
   */

  @Test
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      short[] shortArray0 = new short[6];
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(doubleArray0, shortArray0);
      double[] doubleArray1 = tDoubleShortHashMap0.keys();
      assertEquals("{0.0=0}", tDoubleShortHashMap0.toString());
      assertNotNull(doubleArray1);
      assertEquals(17, tDoubleShortHashMap0.capacity());
      assertEquals(1, tDoubleShortHashMap0.size());
  }

  //Test case number: 17
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.keys([D)[D: I10 Branch 49 IF_ICMPGE L315 - true
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.keys([D)[D: I37 Branch 50 IFLE L322 - true
   * 3 gnu.trove.map.hash.TDoubleShortHashMap.keys([D)[D: I37 Branch 50 IFLE L322 - false
   * 4 gnu.trove.map.hash.TDoubleShortHashMap.keys([D)[D: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test17()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((-1), 0.0F);
      double[] doubleArray0 = tDoubleShortHashMap0.keys(tDoubleShortHashMap0._set);
      assertNotNull(doubleArray0);
  }

  //Test case number: 18
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.keys([D)[D: I10 Branch 49 IF_ICMPGE L315 - false
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.keys([D)[D: I44 Branch 51 IF_ICMPNE L323 - false
   * 3 gnu.trove.map.hash.TDoubleShortHashMap.keys([D)[D: I37 Branch 50 IFLE L322 - true
   * 4 gnu.trove.map.hash.TDoubleShortHashMap.keys([D)[D: I37 Branch 50 IFLE L322 - false
   * 5 gnu.trove.map.hash.TDoubleShortHashMap.keys([D)[D: I44 Branch 51 IF_ICMPNE L323 - true
   * 6 gnu.trove.map.hash.TDoubleShortHashMap.keys()[D: I27 Branch 47 IFLE L303 - true
   * 7 gnu.trove.map.hash.TDoubleShortHashMap.keys()[D: I27 Branch 47 IFLE L303 - false
   * 8 gnu.trove.map.hash.TDoubleShortHashMap.keys()[D: I34 Branch 48 IF_ICMPNE L304 - true
   */

  @Test
  public void test18()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((-1), (-1));
      double[] doubleArray0 = tDoubleShortHashMap0.keys();
      tDoubleShortHashMap0.put(1.0, (short)0);
      tDoubleShortHashMap0.keys(doubleArray0);
      assertEquals(1, tDoubleShortHashMap0.size());
      assertEquals(7, tDoubleShortHashMap0.capacity());
  }

  //Test case number: 19
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.values()[S: I34 Branch 53 IF_ICMPNE L344 - false
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.values()[S: I27 Branch 52 IFLE L343 - true
   * 3 gnu.trove.map.hash.TDoubleShortHashMap.values()[S: I27 Branch 52 IFLE L343 - false
   * 4 gnu.trove.map.hash.TDoubleShortHashMap.values()[S: I34 Branch 53 IF_ICMPNE L344 - true
   */

  @Test
  public void test19()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(0, 270.3584F);
      tDoubleShortHashMap0.putIfAbsent(0.0, (short) (-1));
      tDoubleShortHashMap0.values();
      assertEquals(1, tDoubleShortHashMap0.size());
      assertEquals("{0.0=-1}", tDoubleShortHashMap0.toString());
  }

  //Test case number: 20
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.values([S)[S: I44 Branch 56 IF_ICMPNE L363 - false
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.values([S)[S: I10 Branch 54 IF_ICMPGE L355 - true
   * 3 gnu.trove.map.hash.TDoubleShortHashMap.values([S)[S: I37 Branch 55 IFLE L362 - true
   * 4 gnu.trove.map.hash.TDoubleShortHashMap.values([S)[S: I37 Branch 55 IFLE L362 - false
   * 5 gnu.trove.map.hash.TDoubleShortHashMap.values([S)[S: I44 Branch 56 IF_ICMPNE L363 - true
   */

  @Test
  public void test20()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      tDoubleShortHashMap0.put(2.0, (short)1);
      short[] shortArray0 = new short[6];
      tDoubleShortHashMap0.values(shortArray0);
      assertEquals("{2.0=1}", tDoubleShortHashMap0.toString());
      assertEquals(1, tDoubleShortHashMap0.size());
  }

  //Test case number: 21
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.containsValue(S)Z: I25 Branch 58 IF_ICMPNE L377 - false
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.containsValue(S)Z: I30 Branch 59 IF_ICMPNE L377 - true
   * 3 gnu.trove.map.hash.TDoubleShortHashMap.containsValue(S)Z: I18 Branch 57 IFLE L376 - true
   * 4 gnu.trove.map.hash.TDoubleShortHashMap.containsValue(S)Z: I18 Branch 57 IFLE L376 - false
   * 5 gnu.trove.map.hash.TDoubleShortHashMap.containsValue(S)Z: I25 Branch 58 IF_ICMPNE L377 - true
   */

  @Test
  public void test21()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((-1), (-1));
      tDoubleShortHashMap0.put(1.0, (short)0);
      boolean boolean0 = tDoubleShortHashMap0.containsValue((short) (-303));
      assertEquals(1, tDoubleShortHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 22
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.containsValue(S)Z: I30 Branch 59 IF_ICMPNE L377 - false
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.containsValue(S)Z: I18 Branch 57 IFLE L376 - false
   * 3 gnu.trove.map.hash.TDoubleShortHashMap.containsValue(S)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 4 gnu.trove.map.hash.TDoubleShortHashMap.containsValue(S)Z: I25 Branch 58 IF_ICMPNE L377 - false
   */

  @Test
  public void test22()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((-1), 0.0F);
      tDoubleShortHashMap0.put(1.0, (short) (-1823));
      boolean boolean0 = tDoubleShortHashMap0.containsValue((short) (-1823));
      assertEquals(false, tDoubleShortHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I18 Branch 60 IFLE L407 - true
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TDoubleShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test23()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(1, 1);
      boolean boolean0 = tDoubleShortHashMap0.forEachValue((TShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - false
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I18 Branch 60 IFLE L407 - false
   */

  @Test
  public void test24()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((-1), (-1));
      tDoubleShortHashMap0.putIfAbsent(1785.4486400969356, (short) (-650));
      // Undeclared exception!
      try {
        tDoubleShortHashMap0.forEachValue((TShortProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.transformValues(Lgnu/trove/function/TShortFunction;)V: I18 Branch 66 IFLE L434 - true
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.transformValues(Lgnu/trove/function/TShortFunction;)V: I18 Branch 66 IFLE L434 - false
   * 3 gnu.trove.map.hash.TDoubleShortHashMap.transformValues(Lgnu/trove/function/TShortFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test25()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(5119, 0.0F);
      tDoubleShortHashMap0.transformValues((TShortFunction) null);
      assertEquals(3, tDoubleShortHashMap0.capacity());
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.retainEntries(Lgnu/trove/procedure/TDoubleShortProcedure;)Z: I31 Branch 68 IFLE L453 - true
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.retainEntries(Lgnu/trove/procedure/TDoubleShortProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TDoubleShortHashMap.retainEntries(Lgnu/trove/procedure/TDoubleShortProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test26()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((int) (short) (-15));
      boolean boolean0 = tDoubleShortHashMap0.retainEntries((TDoubleShortProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 27
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.retainEntries(Lgnu/trove/procedure/TDoubleShortProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - false
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.doPut(DSI)S: I12 Branch 40 IFGE L214 - false
   * 3 gnu.trove.map.hash.TDoubleShortHashMap.doPut(DSI)S: I41 Branch 41 IFEQ L221 - true
   * 4 gnu.trove.map.hash.TDoubleShortHashMap.retainEntries(Lgnu/trove/procedure/TDoubleShortProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 5 gnu.trove.map.hash.TDoubleShortHashMap.retainEntries(Lgnu/trove/procedure/TDoubleShortProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test27()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      short[] shortArray0 = new short[7];
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(doubleArray0, shortArray0);
      // Undeclared exception!
      try {
        tDoubleShortHashMap0.retainEntries((TDoubleShortProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.adjustValue(DS)Z: I9 Branch 71 IFGE L477 - true
   */

  @Test
  public void test28()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      tDoubleShortHashMap0.put(2.0, (short)1);
      boolean boolean0 = tDoubleShortHashMap0.adjustValue(2.0, (short)1);
      assertEquals(false, tDoubleShortHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.adjustOrPutValue(DSS)S: I9 Branch 72 IFGE L491 - true
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.adjustOrPutValue(DSS)S: I59 Branch 73 IFEQ L502 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(1, 1);
      short short0 = tDoubleShortHashMap0.adjustOrPutValue((double) 1, (short)1507, (short)1507);
      assertEquals("{1.0=1507}", tDoubleShortHashMap0.toString());
      assertEquals((short)1507, short0);
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.adjustOrPutValue(DSS)S: I9 Branch 72 IFGE L491 - false
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.adjustOrPutValue(DSS)S: I59 Branch 73 IFEQ L502 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((-222));
      tDoubleShortHashMap0.putIfAbsent(0.0, (short)12221);
      short short0 = tDoubleShortHashMap0.adjustOrPutValue((double) (short)0, (short)0, (short)0);
      assertEquals(false, tDoubleShortHashMap0.isEmpty());
      assertEquals((short)12221, short0);
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - false
   */

  @Test
  public void test31()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      boolean boolean0 = tDoubleShortHashMap0.equals((Object) "United Kingdom");
      assertEquals(false, boolean0);
      assertEquals(23, tDoubleShortHashMap0.capacity());
  }

  //Test case number: 32
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - false
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.<init>(I)V: root-Branch
   * 3 gnu.trove.map.hash.TDoubleShortHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 4 gnu.trove.map.hash.TDoubleShortHashMap.putIfAbsent(DS)S: I9 Branch 39 IFGE L205 - true
   */

  @Test
  public void test32()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((-1), (-1));
      TDoubleShortHashMap tDoubleShortHashMap1 = new TDoubleShortHashMap((-1917));
      tDoubleShortHashMap1.putIfAbsent(1785.4486400969356, (short) (-650));
      boolean boolean0 = tDoubleShortHashMap0.equals((Object) tDoubleShortHashMap1);
      assertEquals("{1785.4486400969356=-650}", tDoubleShortHashMap1.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 33
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - false
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.<init>(IF)V: root-Branch
   * 3 gnu.trove.map.hash.TDoubleShortHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 4 gnu.trove.map.hash.TDoubleShortHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 5 gnu.trove.map.hash.TDoubleShortHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 6 gnu.trove.map.hash.TDoubleShortHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 7 gnu.trove.map.hash.TDoubleShortHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 8 gnu.trove.map.hash.TDoubleShortHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 9 gnu.trove.map.hash.TDoubleShortHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   */

  @Test
  public void test33()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((-1), 0.0F);
      tDoubleShortHashMap0.put(1.0, (short) (-1823));
      int int0 = tDoubleShortHashMap0.hashCode();
      assertEquals(1, tDoubleShortHashMap0.size());
      assertEquals((-1072695071), int0);
  }

  //Test case number: 34
  /*
   * 11 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap$1.execute(DS)Z: I4 Branch 115 IFEQ L1233 - true
   * 2 gnu.trove.map.hash.TDoubleShortHashMap$1.<init>(Lgnu/trove/map/hash/TDoubleShortHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 3 gnu.trove.map.hash.TDoubleShortHashMap$1.execute(DS)Z: I4 Branch 115 IFEQ L1233 - false
   * 4 gnu.trove.map.hash.TDoubleShortHashMap.toString()Ljava/lang/String;: root-Branch
   * 5 gnu.trove.map.hash.TDoubleShortHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleShortProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 6 gnu.trove.map.hash.TDoubleShortHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleShortProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 7 gnu.trove.map.hash.TDoubleShortHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleShortProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 8 gnu.trove.map.hash.TDoubleShortHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleShortProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 9 gnu.trove.map.hash.TDoubleShortHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleShortProcedure;)Z: I39 Branch 65 IFNE L422 - true
   * 10 gnu.trove.map.hash.TDoubleShortHashMap.<init>([D[S)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 11 gnu.trove.map.hash.TDoubleShortHashMap.<init>([D[S)V: I24 Branch 33 IF_ICMPGE L119 - false
   */

  @Test
  public void test34()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 1.0;
      short[] shortArray0 = new short[7];
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(doubleArray0, shortArray0);
      String string0 = tDoubleShortHashMap0.toString();
      assertNotNull(string0);
      assertEquals(17, tDoubleShortHashMap0.capacity());
      assertEquals(2, tDoubleShortHashMap0.size());
      assertEquals("{1.0=0, 0.0=0}", string0);
  }

  //Test case number: 35
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TDoubleShortHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - false
   * 2 gnu.trove.map.hash.TDoubleShortHashMap.put(DS)S: root-Branch
   * 3 gnu.trove.map.hash.TDoubleShortHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.hash.TDoubleShortHashMap.<init>()V: root-Branch
   * 5 gnu.trove.map.hash.TDoubleShortHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - true
   * 6 gnu.trove.map.hash.TDoubleShortHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - false
   * 7 gnu.trove.map.hash.TDoubleShortHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - true
   * 8 gnu.trove.map.hash.TDoubleShortHashMap.doPut(DSI)S: I12 Branch 40 IFGE L214 - true
   * 9 gnu.trove.map.hash.TDoubleShortHashMap.doPut(DSI)S: I41 Branch 41 IFEQ L221 - false
   */

  @Test
  public void test35()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      tDoubleShortHashMap0.put(2.0, (short)1);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tDoubleShortHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(false, tDoubleShortHashMap0.isEmpty());
      assertEquals("{2.0=1}", tDoubleShortHashMap0.toString());
  }
}

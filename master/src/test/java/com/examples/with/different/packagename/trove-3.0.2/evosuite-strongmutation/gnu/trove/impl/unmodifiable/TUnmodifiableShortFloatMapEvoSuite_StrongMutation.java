/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortSet;
import gnu.trove.map.TShortFloatMap;
import gnu.trove.map.hash.TShortFloatHashMap;
import gnu.trove.procedure.TFloatProcedure;
import gnu.trove.procedure.TShortFloatProcedure;
import gnu.trove.procedure.TShortProcedure;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableShortFloatMapEvoSuite_StrongMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 5 covered goals:
   * 1 Strong Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.isEmpty()Z:64 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.isEmpty()Z: root-Branch
   * 3 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:58 - ReplaceComparisonOperator != null -> = null
   * 4 Strong Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.isEmpty()Z:64 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.<init>(Lgnu/trove/map/TShortFloatMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      short[] shortArray0 = new short[8];
      float[] floatArray0 = new float[3];
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      shortArray0[0] = (short) (-1);
      tUnmodifiableShortFloatMap0.isEmpty();
      shortArray0[0] = (short)0;
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   * 2 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   */

  @Test
  public void test1()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-1181));
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      boolean boolean0 = tUnmodifiableShortFloatMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 Strong Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.containsKey(S)Z:65 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.containsKey(S)Z: root-Branch
   * 3 Strong Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.containsKey(S)Z:65 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   */

  @Test
  public void test2()  throws Throwable  {
      short[] shortArray0 = new short[8];
      shortArray0[3] = (short) (-1);
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-1704));
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      tUnmodifiableShortFloatMap0.containsKey((short)0);
      shortArray0[3] = (short)0;
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * 1 Strong Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.containsKey(S)Z:65 - InsertUnaryOp Negation of key
   * 2 Strong Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.containsKey(S)Z:65 - InsertUnaryOp Negation of key
   * 3 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.containsKey(S)Z:65 - InsertUnaryOp IINC 1 key
   * 4 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.containsKey(S)Z:65 - DeleteStatement: containsKey(S)Z
   * 5 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.containsKey(S)Z:65 - InsertUnaryOp IINC -1 key
   */

  @Test
  public void test3()  throws Throwable  {
      short[] shortArray0 = new short[6];
      shortArray0[2] = (short) (-1923);
      float[] floatArray0 = new float[10];
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      boolean boolean0 = tUnmodifiableShortFloatMap0.containsKey((short) (-1923));
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * 1 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.containsKey(S)Z:65 - InsertUnaryOp IINC -1 key
   * 2 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.containsKey(S)Z:65 - InsertUnaryOp IINC 1 key
   * 3 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.containsKey(S)Z:65 - DeleteStatement: containsKey(S)Z
   */

  @Test
  public void test4()  throws Throwable  {
      short[] shortArray0 = new short[4];
      float[] floatArray0 = new float[3];
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      boolean boolean0 = tUnmodifiableShortFloatMap0.containsKey((short)0);
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 4 covered goals:
   * 1 Strong Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.containsValue(F)Z:66 - InsertUnaryOp Negation of val
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.containsValue(F)Z: root-Branch
   * 3 Strong Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.containsValue(F)Z:66 - InsertUnaryOp Negation of val
   * 4 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.containsValue(F)Z:66 - DeleteStatement: containsValue(F)Z
   */

  @Test
  public void test5()  throws Throwable  {
      short[] shortArray0 = new short[5];
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) (short) (-1492);
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      boolean boolean0 = tUnmodifiableShortFloatMap0.containsValue((-1492.0F));
      assertEquals(true, boolean0);
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * 1 Strong Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.containsValue(F)Z:66 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 2 Strong Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.containsValue(F)Z:66 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   */

  @Test
  public void test6()  throws Throwable  {
      short[] shortArray0 = new short[3];
      shortArray0[0] = (short) (-3);
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((int) (short) (-3), 1877.8534F, (short)0, 420.77478F);
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      tUnmodifiableShortFloatMap0.containsValue((float) 64);
      shortArray0[0] = (short)0;
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.containsValue(F)Z:66 - DeleteStatement: containsValue(F)Z
   */

  @Test
  public void test7()  throws Throwable  {
      short[] shortArray0 = new short[10];
      float[] floatArray0 = new float[2];
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      boolean boolean0 = tUnmodifiableShortFloatMap0.containsValue(0.0F);
      assertEquals(true, boolean0);
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 Strong Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.get(S)F:67 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.get(S)F: root-Branch
   * 3 Strong Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.get(S)F:67 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   */

  @Test
  public void test8()  throws Throwable  {
      short[] shortArray0 = new short[8];
      float[] floatArray0 = new float[3];
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      shortArray0[0] = (short) (-1);
      tUnmodifiableShortFloatMap0.get((short) (-1));
      shortArray0[0] = (short)0;
  }

  //Test case number: 9
  /*
   * 8 covered goals:
   * 1 Strong Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.get(S)F:67 - InsertUnaryOp IINC -1 key
   * 2 Strong Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.get(S)F:67 - InsertUnaryOp IINC 1 key
   * 3 Strong Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.get(S)F:67 - InsertUnaryOp Negation of key
   * 4 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.get(S)F:67 - DeleteStatement: get(S)F
   * 5 Strong Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.get(S)F:67 - InsertUnaryOp IINC 1 key
   * 6 Strong Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.get(S)F:67 - InsertUnaryOp Negation of key
   * 7 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.get(S)F:67 - DeleteStatement: get(S)F
   * 8 Strong Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.get(S)F:67 - InsertUnaryOp IINC -1 key
   */

//   @Test
//   public void test9()  throws Throwable  {
//       short[] shortArray0 = new short[10];
//       shortArray0[1] = (short)1382;
//       float[] floatArray0 = new float[2];
//       floatArray0[1] = (float) (short)1076;
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
//       TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
//       float float0 = tUnmodifiableShortFloatMap0.get((short)1382);
//       assertEquals(1076.0F, float0, 0.01F);
//   }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.keys()[S:83 - DeleteStatement: keys()[S
   * 2 Strong Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.keys()[S:83 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 3 Strong Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.keys()[S:83 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 4 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.keys()[S:83 - DeleteStatement: keys()[S
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.keys()[S: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-1181));
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      short[] shortArray0 = tUnmodifiableShortFloatMap0.keys();
      assertNotNull(shortArray0);
  }

  //Test case number: 11
  /*
   * 5 covered goals:
   * 1 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.keys([S)[S:84 - DeleteStatement: keys([S)[S
   * 2 Strong Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.keys([S)[S:84 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 3 Strong Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.keys([S)[S:84 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 4 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.keys([S)[S:84 - DeleteStatement: keys([S)[S
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.keys([S)[S: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-1181));
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      short[] shortArray0 = tUnmodifiableShortFloatMap0.keys(tShortFloatHashMap0._set);
      assertNotNull(shortArray0);
  }

  //Test case number: 12
  /*
   * 5 covered goals:
   * 1 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.values()[F:91 - DeleteStatement: values()[F
   * 2 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.values()[F:91 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 3 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.values()[F:91 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 4 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.values()[F:91 - DeleteStatement: values()[F
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.values()[F: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap();
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      float[] floatArray0 = tUnmodifiableShortFloatMap0.values();
      assertNotNull(floatArray0);
  }

  //Test case number: 13
  /*
   * 5 covered goals:
   * 1 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.values([F)[F:92 - DeleteStatement: values([F)[F
   * 2 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.values([F)[F:92 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 3 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.values([F)[F:92 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 4 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.values([F)[F:92 - DeleteStatement: values([F)[F
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.values([F)[F: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-146), (float) 708, (short)0, (float) 708);
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      float[] floatArray0 = new float[8];
      float[] floatArray1 = tUnmodifiableShortFloatMap0.values(floatArray0);
      assertSame(floatArray1, floatArray0);
  }

  //Test case number: 14
  /*
   * 7 covered goals:
   * 1 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.equals(Ljava/lang/Object;)Z:94 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 2 Strong Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 3 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.equals(Ljava/lang/Object;)Z:94 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 4 Strong Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   * 5 Strong Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   */

  @Test
  public void test14()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-146), (float) 708, (short)0, (float) 708);
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      float[] floatArray0 = new float[8];
      floatArray0[5] = (float) (short)0;
      Object object0 = new Object();
      tUnmodifiableShortFloatMap0.equals(object0);
      floatArray0[5] = (-708.4342F);
  }

  //Test case number: 15
  /*
   * 4 covered goals:
   * 1 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 2 Strong Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 3 Strong Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   * 4 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   */

  @Test
  public void test15()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-146), (float) 708, (short)0, (float) 708);
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap1 = new TUnmodifiableShortFloatMap((TShortFloatMap) tUnmodifiableShortFloatMap0);
      Object object0 = new Object();
      boolean boolean0 = tUnmodifiableShortFloatMap1.equals(object0);
      assertEquals(false, boolean0);
      assertTrue(tUnmodifiableShortFloatMap1.equals(tUnmodifiableShortFloatMap0));
  }

  //Test case number: 16
  /*
   * 3 covered goals:
   * 1 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.hashCode()I:95 - DeleteStatement: hashCode()I
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.hashCode()I: root-Branch
   * 3 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.hashCode()I:95 - DeleteStatement: hashCode()I
   */

  @Test
  public void test16()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap();
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      tShortFloatHashMap0.put((short)0, 900.87994F);
      int int0 = tUnmodifiableShortFloatMap0.hashCode();
      assertEquals(1393242512, int0);
  }

  //Test case number: 17
  /*
   * 2 covered goals:
   * 1 Strong Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.hashCode()I:95 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 2 Strong Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.hashCode()I:95 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   */

  @Test
  public void test17()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-146), (float) 708, (short)0, (float) 708);
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      float[] floatArray0 = new float[8];
      floatArray0[5] = (float) (short)0;
      tUnmodifiableShortFloatMap0.hashCode();
      floatArray0[5] = (-708.4342F);
  }

  //Test case number: 18
  /*
   * 5 covered goals:
   * 1 Strong Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 2 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 3 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 4 Strong Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-1181));
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      String string0 = tUnmodifiableShortFloatMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 19
  /*
   * 3 covered goals:
   * 1 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.getNoEntryKey()S:97 - DeleteStatement: getNoEntryKey()S
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.getNoEntryKey()S: root-Branch
   * 3 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.getNoEntryKey()S:97 - DeleteStatement: getNoEntryKey()S
   */

//   @Test
//   public void test19()  throws Throwable  {
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-642), (-642));
//       TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
//       tUnmodifiableShortFloatMap0.getNoEntryKey();
//       TShortFloatHashMap tShortFloatHashMap1 = new TShortFloatHashMap((-642), (-12.828474F), (short)1357, 1.0F);
//       TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap1 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap1);
//       assertEquals(1357, tUnmodifiableShortFloatMap1.getNoEntryKey());
//   }

  //Test case number: 20
  /*
   * 2 covered goals:
   * 1 Strong Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.getNoEntryKey()S:97 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 2 Strong Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.getNoEntryKey()S:97 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   */

  @Test
  public void test20()  throws Throwable  {
      short[] shortArray0 = new short[3];
      shortArray0[0] = (short) (-3);
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((int) (short) (-3), 1877.8534F, (short)0, 420.77478F);
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      tUnmodifiableShortFloatMap0.getNoEntryKey();
      shortArray0[0] = (short)0;
  }

  //Test case number: 21
  /*
   * 3 covered goals:
   * 1 Strong Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.getNoEntryValue()F:98 - DeleteStatement: getNoEntryValue()F
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.getNoEntryValue()F: root-Branch
   * 3 Strong Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.getNoEntryValue()F:98 - DeleteStatement: getNoEntryValue()F
   */

//   @Test
//   public void test21()  throws Throwable  {
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-1328), (-467.2177F), (short) (-1478), (float) (short) (-1478));
//       TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
//       float float0 = tUnmodifiableShortFloatMap0.getNoEntryValue();
//       assertEquals((-1478.0F), float0, 0.01F);
//   }

  //Test case number: 22
  /*
   * 2 covered goals:
   * 1 Strong Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.getNoEntryValue()F:98 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 2 Strong Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.getNoEntryValue()F:98 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   */

  @Test
  public void test22()  throws Throwable  {
      short[] shortArray0 = new short[8];
      float[] floatArray0 = new float[3];
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      shortArray0[0] = (short) (-1);
      tUnmodifiableShortFloatMap0.getNoEntryValue();
      shortArray0[0] = (short)0;
  }

  //Test case number: 23
  /*
   * 5 covered goals:
   * 1 Strong Mutation 60: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z:101 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 2 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z
   * 3 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z
   * 4 Strong Mutation 60: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z:101 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-146), (float) 708, (short)0, (float) 708);
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      float[] floatArray0 = new float[8];
      floatArray0[5] = (float) (short)0;
      tUnmodifiableShortFloatMap0.forEachKey((TShortProcedure) null);
      floatArray0[5] = (-708.4342F);
  }

  //Test case number: 24
  /*
   * 5 covered goals:
   * 1 Strong Mutation 62: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:104 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 2 Strong Mutation 63: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z
   * 3 Strong Mutation 63: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z
   * 4 Strong Mutation 62: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:104 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      short[] shortArray0 = new short[3];
      shortArray0[0] = (short) (-3);
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((int) (short) (-3), 1877.8534F, (short)0, 420.77478F);
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      tUnmodifiableShortFloatMap0.forEachValue((TFloatProcedure) null);
      shortArray0[0] = (short)0;
  }

  //Test case number: 25
  /*
   * 4 covered goals:
   * 1 Strong Mutation 64: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:107 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z: root-Branch
   * 3 Strong Mutation 64: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:107 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 4 Strong Mutation 65: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:107 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z
   */

  @Test
  public void test25()  throws Throwable  {
      float[] floatArray0 = new float[8];
      floatArray0[2] = (float) (short) (-912);
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-642), (-642));
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      tUnmodifiableShortFloatMap0.forEachEntry((TShortFloatProcedure) null);
      floatArray0[2] = 0.0F;
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 Strong Mutation 65: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:107 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z
   */

  @Test
  public void test26()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-642), (-642));
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      boolean boolean0 = tUnmodifiableShortFloatMap0.forEachEntry((TShortFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 27
  /*
   * 19 covered goals:
   * 1 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap$1.value()F:115 - DeleteStatement: value()F
   * 2 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap$1.key()S:114 - DeleteStatement: key()S
   * 3 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap$1.key()S:114 - DeleteField: iterLgnu/trove/iterator/TShortFloatIterator;
   * 4 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap$1.key()S:114 - DeleteStatement: key()S
   * 5 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap$1.value()F:115 - DeleteField: iterLgnu/trove/iterator/TShortFloatIterator;
   * 6 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap$1.value()F:115 - DeleteStatement: value()F
   * 7 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TShortFloatIterator;
   * 8 Strong Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap$1.advance()V:116 - DeleteStatement: advance()V
   * 9 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TShortFloatIterator;
   * 10 Strong Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 11 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.size()I:63 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 12 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.size()I:63 - DeleteStatement: size()I
   * 13 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap$1.value()F: root-Branch
   * 14 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap$1.advance()V: root-Branch
   * 15 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap$1.key()S: root-Branch
   * 16 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap$1.hasNext()Z: root-Branch
   * 17 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableShortFloatMap;)V: root-Branch
   * 18 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.size()I: root-Branch
   * 19 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.iterator()Lgnu/trove/iterator/TShortFloatIterator;: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      short[] shortArray0 = new short[5];
      shortArray0[0] = (short) (-33);
      float[] floatArray0 = new float[8];
      floatArray0[0] = (float) (short) (-912);
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      TShortFloatHashMap tShortFloatHashMap1 = new TShortFloatHashMap((TShortFloatMap) tUnmodifiableShortFloatMap0);
      assertEquals("{0=0.0, -33=-912.0}", tShortFloatHashMap1.toString());
  }

  //Test case number: 28
  /*
   * 8 covered goals:
   * 1 Strong Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 2 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap$1.key()S:114 - DeleteField: iterLgnu/trove/iterator/TShortFloatIterator;
   * 3 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap$1.value()F:115 - DeleteField: iterLgnu/trove/iterator/TShortFloatIterator;
   * 4 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TShortFloatIterator;
   * 5 Strong Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap$1.advance()V:116 - DeleteStatement: advance()V
   * 6 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TShortFloatIterator;
   * 7 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.size()I:63 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 8 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.size()I:63 - DeleteStatement: size()I
   */

  @Test
  public void test28()  throws Throwable  {
      short[] shortArray0 = new short[5];
      float[] floatArray0 = new float[8];
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      TShortFloatHashMap tShortFloatHashMap1 = new TShortFloatHashMap((TShortFloatMap) tUnmodifiableShortFloatMap0);
      assertEquals(1, tUnmodifiableShortFloatMap0.size());
      assertEquals("{0=0.0}", tShortFloatHashMap1.toString());
  }

  //Test case number: 29
  /*
   * 12 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.keySet()Lgnu/trove/set/TShortSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:79 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TShortSet;
   * 4 Strong Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:80 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 5 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:81 - DeleteField: keySetLgnu/trove/set/TShortSet;
   * 6 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TShortSet;)Lgnu/trove/set/TShortSet;
   * 7 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:79 - ReplaceComparisonOperator != null -> = null
   * 8 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TShortSet;
   * 9 Strong Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:80 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 10 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:81 - DeleteField: keySetLgnu/trove/set/TShortSet;
   * 11 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TShortSet;)Lgnu/trove/set/TShortSet;
   * 12 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.keySet()Lgnu/trove/set/TShortSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((int) (short) (-3), 1877.8534F, (short)0, 420.77478F);
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      TUnmodifiableShortSet tUnmodifiableShortSet0 = (TUnmodifiableShortSet)tUnmodifiableShortFloatMap0.keySet();
      assertNotNull(tUnmodifiableShortSet0);
      
      TUnmodifiableShortSet tUnmodifiableShortSet1 = (TUnmodifiableShortSet)tUnmodifiableShortFloatMap0.keySet();
      assertSame(tUnmodifiableShortSet1, tUnmodifiableShortSet0);
  }

  //Test case number: 30
  /*
   * 12 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 Strong Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:88 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 3 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TFloatCollection;
   * 4 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 5 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TFloatCollection;)Lgnu/trove/TFloatCollection;
   * 6 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:89 - DeleteField: valuesLgnu/trove/TFloatCollection;
   * 7 Strong Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:88 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 8 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TFloatCollection;
   * 9 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 10 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TFloatCollection;)Lgnu/trove/TFloatCollection;
   * 11 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:89 - DeleteField: valuesLgnu/trove/TFloatCollection;
   * 12 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test30()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap();
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = (TUnmodifiableFloatCollection)tUnmodifiableShortFloatMap0.valueCollection();
      assertNotNull(tUnmodifiableFloatCollection0);
      
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection1 = (TUnmodifiableFloatCollection)tUnmodifiableShortFloatMap0.valueCollection();
      assertSame(tUnmodifiableFloatCollection1, tUnmodifiableFloatCollection0);
  }

  //Test case number: 31
  /*
   * 7 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - false
   * 2 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:58 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 1 -> 0
   * 4 Strong Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 5 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 6 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 1 -> 0
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap();
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = new TUnmodifiableShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap1 = new TUnmodifiableShortFloatMap((TShortFloatMap) tUnmodifiableShortFloatMap0);
      boolean boolean0 = tUnmodifiableShortFloatMap0.equals((Object) tUnmodifiableShortFloatMap1);
      assertEquals(true, boolean0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongDoubleMap;
import gnu.trove.map.TLongDoubleMap;
import gnu.trove.map.hash.TLongDoubleHashMap;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableLongDoubleMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap();
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap0 = new TUnmodifiableLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0);
      long long0 = 386L;
      double double0 = (-1.0);
      // Undeclared exception!
      try {
        tUnmodifiableLongDoubleMap0.adjustOrPutValue(long0, double0, double0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TLongDoubleMap tLongDoubleMap0 = null;
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap0 = null;
      try {
        tUnmodifiableLongDoubleMap0 = new TUnmodifiableLongDoubleMap(tLongDoubleMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = 0;
      double double0 = (-1395.001385154122);
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(int0, (float) int0, (long) int0, double0);
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap0 = new TUnmodifiableLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0);
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap1 = new TUnmodifiableLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0);
      tUnmodifiableLongDoubleMap1.keys();
      float float0 = 0.0F;
      long long0 = 1L;
      double double1 = Double.POSITIVE_INFINITY;
      long long1 = (-532L);
      // Undeclared exception!
      try {
        tUnmodifiableLongDoubleMap0.increment(long1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = (-1234);
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(int0, int0);
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap0 = new TUnmodifiableLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableLongDoubleMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      long[] longArray0 = new long[8];
      long long0 = (-623L);
      longArray0[0] = long0;
      long long1 = (-816L);
      longArray0[1] = long1;
      long long2 = 1192L;
      longArray0[2] = long2;
      long long3 = 0L;
      longArray0[3] = long3;
      long long4 = (-1026L);
      longArray0[4] = long4;
      long long5 = 411L;
      longArray0[5] = long5;
      long long6 = (-684L);
      longArray0[6] = long6;
      long long7 = 1701L;
      longArray0[7] = long7;
      double[] doubleArray0 = new double[5];
      double double0 = (-2040.4099329404198);
      doubleArray0[0] = double0;
      doubleArray0[1] = (double) long3;
      doubleArray0[2] = (double) longArray0[4];
      doubleArray0[3] = (double) long0;
      doubleArray0[4] = (double) longArray0[6];
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(longArray0, doubleArray0);
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap0 = new TUnmodifiableLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableLongDoubleMap0.putAll((TLongDoubleMap) tLongDoubleHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TLongDoubleMap tLongDoubleMap0 = null;
      TLongDoubleMap tLongDoubleMap1 = null;
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap0 = null;
      try {
        tUnmodifiableLongDoubleMap0 = new TUnmodifiableLongDoubleMap(tLongDoubleMap1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = (-68);
      int int1 = 4;
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(int1);
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap0 = new TUnmodifiableLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0);
      double double0 = 0.0;
      TLongDoubleHashMap tLongDoubleHashMap1 = new TLongDoubleHashMap(int0, (float) int0, (long) int0, double0);
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap1 = new TUnmodifiableLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap1);
      double double1 = tUnmodifiableLongDoubleMap1.getNoEntryValue();
      assertEquals(0.0, double1, 0.01D);
  }

  @Test
  public void test7()  throws Throwable  {
      long[] longArray0 = new long[3];
      long long0 = 1372L;
      longArray0[0] = long0;
      long long1 = 1L;
      longArray0[1] = long1;
      long long2 = 708L;
      longArray0[2] = long2;
      double[] doubleArray0 = new double[7];
      double double0 = Double.POSITIVE_INFINITY;
      doubleArray0[0] = double0;
      doubleArray0[1] = (double) long2;
      double double1 = (-506.1384553164667);
      doubleArray0[2] = double1;
      double double2 = (-803.8614959586118);
      doubleArray0[3] = double2;
      double double3 = 1727.7289717773656;
      doubleArray0[4] = double3;
      doubleArray0[5] = (double) longArray0[1];
      doubleArray0[6] = (double) longArray0[0];
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(longArray0, doubleArray0);
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap0 = new TUnmodifiableLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0);
      assertEquals(3, tUnmodifiableLongDoubleMap0.size());
  }

  @Test
  public void test8()  throws Throwable  {
      long[] longArray0 = new long[9];
      long long0 = 0L;
      longArray0[0] = long0;
      long long1 = (-9223372036854775808L);
      longArray0[1] = long1;
      long long2 = 1L;
      longArray0[2] = long2;
      long long3 = 2L;
      longArray0[3] = long3;
      long long4 = (-352L);
      longArray0[4] = long4;
      long long5 = 1591L;
      longArray0[5] = long5;
      long long6 = 1L;
      longArray0[6] = long6;
      long long7 = (-1445L);
      longArray0[7] = long7;
      long long8 = (-1058L);
      longArray0[8] = long8;
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) long1;
      doubleArray0[1] = (double) long6;
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(longArray0, doubleArray0);
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap0 = new TUnmodifiableLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0);
      assertEquals(0L, tUnmodifiableLongDoubleMap0.getNoEntryKey());
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = (-1786);
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(int0, int0);
      tLongDoubleHashMap0.keys();
      boolean boolean0 = false;
      tLongDoubleHashMap0.reenableAutoCompaction(boolean0);
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap0 = new TUnmodifiableLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0);
      long long0 = 382L;
      // Undeclared exception!
      try {
        tUnmodifiableLongDoubleMap0.put(long0, long0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      long[] longArray0 = new long[6];
      long long0 = (-9223372036854775808L);
      longArray0[0] = long0;
      long long1 = 1L;
      longArray0[1] = long1;
      long long2 = (-9223372036854775808L);
      longArray0[2] = long2;
      long long3 = 0L;
      longArray0[3] = long3;
      long long4 = 1396L;
      longArray0[4] = long4;
      long long5 = 0L;
      longArray0[5] = long5;
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) longArray0[1];
      doubleArray0[1] = (double) longArray0[3];
      doubleArray0[2] = (double) longArray0[4];
      doubleArray0[3] = (double) long4;
      doubleArray0[4] = (double) long3;
      doubleArray0[5] = (double) longArray0[0];
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(longArray0, doubleArray0);
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap0 = new TUnmodifiableLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0);
      tUnmodifiableLongDoubleMap0.keys();
      TLongDoubleHashMap tLongDoubleHashMap1 = new TLongDoubleHashMap();
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap1 = new TUnmodifiableLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap1);
      tUnmodifiableLongDoubleMap1.toString();
      long long6 = tUnmodifiableLongDoubleMap1.getNoEntryKey();
      assertFalse(long6 == long1);
  }

  @Test
  public void test11()  throws Throwable  {
      long[] longArray0 = new long[2];
      long long0 = (-9223372036854775808L);
      longArray0[0] = long0;
      long long1 = (-1L);
      longArray0[1] = long1;
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) long1;
      doubleArray0[1] = (double) longArray0[0];
      doubleArray0[0] = (double) longArray0[1];
      doubleArray0[0] = (double) long0;
      doubleArray0[1] = (double) longArray0[1];
      doubleArray0[1] = (double) longArray0[0];
      int int0 = (-1000);
      float float0 = 0.0F;
      int int1 = 606;
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(int1);
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap0 = new TUnmodifiableLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0);
      long long2 = 2000L;
      double double0 = 117.8431788854064;
      tUnmodifiableLongDoubleMap0.containsValue((double) int0);
      // Undeclared exception!
      try {
        tUnmodifiableLongDoubleMap0.putIfAbsent(long2, double0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      long[] longArray0 = new long[8];
      long long0 = 9223372036854775807L;
      longArray0[0] = long0;
      long long1 = (-973L);
      longArray0[1] = long1;
      long long2 = 0L;
      longArray0[2] = long2;
      long long3 = (-1508L);
      longArray0[3] = long3;
      long long4 = 876L;
      longArray0[4] = long4;
      long long5 = (-1751L);
      int int0 = 1207;
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(int0, (float) longArray0[1]);
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap0 = new TUnmodifiableLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0);
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap1 = new TUnmodifiableLongDoubleMap((TLongDoubleMap) tUnmodifiableLongDoubleMap0);
      tUnmodifiableLongDoubleMap1.getNoEntryKey();
      longArray0[5] = long5;
      long long6 = 0L;
      longArray0[6] = long6;
      long long7 = (-1845L);
      TLongDoubleHashMap tLongDoubleHashMap1 = new TLongDoubleHashMap();
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap2 = new TUnmodifiableLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap1);
      longArray0[7] = long7;
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) longArray0[5];
      doubleArray0[1] = (double) longArray0[1];
      doubleArray0[2] = (double) longArray0[0];
      doubleArray0[3] = (double) longArray0[1];
      doubleArray0[4] = (double) longArray0[7];
      doubleArray0[5] = (double) long0;
      doubleArray0[6] = (double) longArray0[1];
      TLongDoubleHashMap tLongDoubleHashMap2 = new TLongDoubleHashMap(longArray0, doubleArray0);
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap3 = new TUnmodifiableLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap2);
      assertEquals(0.0, tUnmodifiableLongDoubleMap3.getNoEntryValue(), 0.01D);
  }

  @Test
  public void test13()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap();
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap0 = new TUnmodifiableLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0);
      long long0 = 0L;
      // Undeclared exception!
      try {
        tUnmodifiableLongDoubleMap0.increment(long0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 954;
      float float0 = (-1443.1938F);
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(int0, float0);
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap0 = new TUnmodifiableLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0);
      TLongDoubleMap tLongDoubleMap0 = null;
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap1 = null;
      try {
        tUnmodifiableLongDoubleMap1 = new TUnmodifiableLongDoubleMap(tLongDoubleMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = (-1599);
      int int1 = 906;
      float float0 = (-1.0F);
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(int1, float0);
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap0 = new TUnmodifiableLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0);
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap1 = new TUnmodifiableLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0);
      TLongDoubleHashMap tLongDoubleHashMap1 = new TLongDoubleHashMap(int0);
      // Undeclared exception!
      try {
        tUnmodifiableLongDoubleMap1.putAll((TLongDoubleMap) tLongDoubleHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

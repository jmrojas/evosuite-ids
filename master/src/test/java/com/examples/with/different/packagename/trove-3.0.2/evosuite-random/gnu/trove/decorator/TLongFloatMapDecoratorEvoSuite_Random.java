/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TLongFloatMapDecorator;
import gnu.trove.map.TLongFloatMap;
import gnu.trove.map.hash.TLongFloatHashMap;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.PipedInputStream;
import java.io.PrintStream;
import java.io.RandomAccessFile;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.AbstractMap;
import java.util.Locale;
import java.util.MissingResourceException;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TLongFloatMapDecoratorEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TLongFloatMap tLongFloatMap0 = null;
      TLongFloatMapDecorator tLongFloatMapDecorator0 = new TLongFloatMapDecorator(tLongFloatMap0);
      Locale locale0 = Locale.ROOT;
      String string0 = locale0.getDisplayLanguage();
      tLongFloatMapDecorator0.get((Object) string0);
      TLongFloatMapDecorator tLongFloatMapDecorator1 = new TLongFloatMapDecorator();
      tLongFloatMapDecorator1.keySet();
      float float0 = 1.0F;
      Float.toHexString(float0);
      int int0 = 0;
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      double double0 = (-2023.9265795093118);
      Float float0 = new Float(double0);
      AbstractMap.SimpleImmutableEntry<Object, Float> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, Float>(object0, float0);
      abstractMap_SimpleImmutableEntry0.getKey();
      TLongFloatMapDecorator tLongFloatMapDecorator0 = new TLongFloatMapDecorator();
      long long0 = 2043L;
      Long long1 = new Long(long0);
      Float float1 = new Float((double) float0);
      // Undeclared exception!
      try {
        tLongFloatMapDecorator0.put(long1, float1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TLongFloatMapDecorator tLongFloatMapDecorator0 = new TLongFloatMapDecorator();
      Object object0 = null;
      // Undeclared exception!
      try {
        tLongFloatMapDecorator0.remove(object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TLongFloatMapDecorator tLongFloatMapDecorator0 = new TLongFloatMapDecorator();
      ObjectInput objectInput0 = null;
      // Undeclared exception!
      try {
        tLongFloatMapDecorator0.readExternal(objectInput0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TLongFloatMapDecorator tLongFloatMapDecorator0 = new TLongFloatMapDecorator();
      float float0 = 0.0F;
      String string0 = Float.toString(float0);
      tLongFloatMapDecorator0.get((Object) string0);
      TLongFloatMapDecorator tLongFloatMapDecorator1 = new TLongFloatMapDecorator();
      // Undeclared exception!
      try {
        tLongFloatMapDecorator1.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TLongFloatMapDecorator tLongFloatMapDecorator0 = new TLongFloatMapDecorator();
      // Undeclared exception!
      try {
        tLongFloatMapDecorator0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TLongFloatMapDecorator tLongFloatMapDecorator0 = new TLongFloatMapDecorator();
      Locale locale0 = Locale.TAIWAN;
      String string0 = locale0.toLanguageTag();
      tLongFloatMapDecorator0.remove((Object) string0);
      float float0 = 1440.9767F;
      boolean boolean0 = Float.isInfinite(float0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = (-1732);
      float float0 = (-1109.574F);
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(int0, float0);
      TLongFloatMapDecorator tLongFloatMapDecorator0 = new TLongFloatMapDecorator((TLongFloatMap) tLongFloatHashMap0);
      tLongFloatMapDecorator0.toString();
      TLongFloatMapDecorator tLongFloatMapDecorator1 = new TLongFloatMapDecorator();
      String string0 = "";
      int int1 = 0;
      TLongFloatHashMap tLongFloatHashMap1 = new TLongFloatHashMap(int1, int1, int1, int1);
      AbstractMap.SimpleEntry<TLongFloatHashMap, Integer> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<TLongFloatHashMap, Integer>(tLongFloatHashMap1, (Integer) int1);
      abstractMap_SimpleEntry0.hashCode();
      int int2 = 1;
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, int2, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://@:1?#
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TLongFloatMapDecorator tLongFloatMapDecorator0 = new TLongFloatMapDecorator((TLongFloatMap) tLongFloatHashMap0);
      float[] floatArray0 = new float[7];
      float float0 = 0.0F;
      String string0 = "";
      int int0 = 0;
      TLongFloatMapDecorator tLongFloatMapDecorator1 = new TLongFloatMapDecorator();
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, int0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://@:0?#
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TLongFloatMapDecorator tLongFloatMapDecorator0 = new TLongFloatMapDecorator();
      long long0 = 9223372036854775807L;
      Long long1 = new Long(long0);
      Float float0 = new Float((float) long0);
      // Undeclared exception!
      try {
        tLongFloatMapDecorator0.put(long1, float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = 0;
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(int0);
      TLongFloatMapDecorator tLongFloatMapDecorator0 = new TLongFloatMapDecorator((TLongFloatMap) tLongFloatHashMap0);
      tLongFloatMapDecorator0.keySet();
      float float0 = 0.0F;
      TLongFloatMapDecorator tLongFloatMapDecorator1 = new TLongFloatMapDecorator();
      tLongFloatMapDecorator1.values();
      String string0 = "M ~%)6e71";
      PrintStream printStream0 = null;
      try {
        printStream0 = new PrintStream(string0, string0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
         //
         // M ~%)6e71
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 939;
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(int0, int0);
      TLongFloatMapDecorator tLongFloatMapDecorator0 = new TLongFloatMapDecorator((TLongFloatMap) tLongFloatHashMap0);
      String string0 = "ofrd&1";
      RandomAccessFile randomAccessFile0 = null;
      try {
        randomAccessFile0 = new RandomAccessFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"ofrd&1\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 1344393353;
      long[] longArray0 = new long[2];
      longArray0[0] = (long) int0;
      longArray0[0] = (long) int0;
      longArray0[1] = (long) int0;
      TLongFloatMapDecorator tLongFloatMapDecorator0 = new TLongFloatMapDecorator();
      // Undeclared exception!
      try {
        tLongFloatMapDecorator0.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      long[] longArray0 = new long[9];
      long long0 = (-1110L);
      longArray0[0] = long0;
      long long1 = 51L;
      longArray0[1] = long1;
      long long2 = (-1979L);
      longArray0[2] = long2;
      long long3 = 0L;
      longArray0[3] = long3;
      long long4 = 0L;
      longArray0[4] = long4;
      long long5 = 0L;
      longArray0[5] = long5;
      long long6 = 0L;
      longArray0[6] = long6;
      long long7 = (-1L);
      longArray0[7] = long7;
      long long8 = 1597L;
      longArray0[8] = long8;
      float[] floatArray0 = new float[4];
      floatArray0[0] = (float) longArray0[4];
      float float0 = 0.0F;
      floatArray0[1] = float0;
      floatArray0[2] = (float) long1;
      floatArray0[3] = (float) long8;
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(longArray0, floatArray0);
      TLongFloatMapDecorator tLongFloatMapDecorator0 = new TLongFloatMapDecorator((TLongFloatMap) tLongFloatHashMap0);
      String string0 = "J";
      File file0 = null;
      // Undeclared exception!
      try {
        File.createTempFile(string0, string0, file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TLongFloatMapDecorator tLongFloatMapDecorator0 = new TLongFloatMapDecorator((TLongFloatMap) tLongFloatHashMap0);
      long long0 = 0L;
      Long long1 = new Long(long0);
      float float0 = 1057.542F;
      Float float1 = new Float(float0);
      tLongFloatMapDecorator0.put(long1, float1);
      String string0 = "";
      long long2 = 0L;
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      String string1 = locale0.getISO3Language();
      tLongFloatMapDecorator0.keySet();
      tLongFloatMapDecorator0.get((Object) string1);
      Float float2 = new Float((double) long2);
      tLongFloatMapDecorator0.put((Long) long2, float2);
      tLongFloatHashMap0.containsKey(long2);
      File file0 = new File(string0);
      // Undeclared exception!
      try {
        File.createTempFile(string0, string0, file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
      }
  }
}

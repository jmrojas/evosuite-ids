/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TShortFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection;
import gnu.trove.map.TIntShortMap;
import gnu.trove.map.hash.TIntShortHashMap;
import gnu.trove.procedure.TIntProcedure;
import gnu.trove.procedure.TIntShortProcedure;
import gnu.trove.procedure.TShortProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableIntShortMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap$1.key()I: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap$1.advance()V: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableIntShortMap;)V: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap$1.hasNext()Z: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap$1.value()S: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.size()I: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.iterator()Lgnu/trove/iterator/TIntShortIterator;: root-Branch
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.<init>(Lgnu/trove/map/TIntShortMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[11];
      short[] shortArray0 = new short[2];
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(intArray0, shortArray0);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      TIntShortHashMap tIntShortHashMap1 = new TIntShortHashMap((TIntShortMap) tUnmodifiableIntShortMap0);
      assertEquals(1, tUnmodifiableIntShortMap0.size());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.forEachEntry(Lgnu/trove/procedure/TIntShortProcedure;)Z: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap();
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      boolean boolean0 = tUnmodifiableIntShortMap0.forEachEntry((TIntShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.hashCode()I: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((-177), (-177));
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      int int0 = tUnmodifiableIntShortMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.forEachKey(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap();
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      boolean boolean0 = tUnmodifiableIntShortMap0.forEachKey((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.putIfAbsent(IS)S: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap();
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntShortMap0.putIfAbsent(32752, (short)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.values()[S: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap();
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      short[] shortArray0 = tUnmodifiableIntShortMap0.values();
      assertNotNull(shortArray0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.adjustOrPutValue(ISS)S: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((-1040), (float) (-1040), (-1040), (short)1650);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntShortMap0.adjustOrPutValue((int) (short)1650, (short)1650, (short)1650);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.keys([I)[I: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((-1040), (float) (-1040), (-1040), (short)1650);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      int[] intArray0 = tUnmodifiableIntShortMap0.keys(tIntShortHashMap0._set);
      assertNotNull(intArray0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.put(IS)S: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      int[] intArray0 = new int[11];
      short[] shortArray0 = new short[2];
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(intArray0, shortArray0);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntShortMap0.put(0, (short)916);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.getNoEntryKey()I: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(281);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      int int0 = tUnmodifiableIntShortMap0.getNoEntryKey();
      assertEquals(0, int0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap();
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      String string0 = tUnmodifiableIntShortMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.retainEntries(Lgnu/trove/procedure/TIntShortProcedure;)Z: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((int) (short) (-12), (float) (short) (-12));
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntShortMap0.retainEntries((TIntShortProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.getNoEntryValue()S: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap();
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      short short0 = tUnmodifiableIntShortMap0.getNoEntryValue();
      assertEquals((short)0, short0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.increment(I)Z: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap();
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntShortMap0.increment((int) (short) (-28));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.putAll(Lgnu/trove/map/TIntShortMap;)V: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((-177), (-177));
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntShortMap0.putAll((TIntShortMap) tUnmodifiableIntShortMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.values([S)[S: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(2000, (float) (short)14, 2000, (short)14);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      short[] shortArray0 = new short[5];
      short[] shortArray1 = tUnmodifiableIntShortMap0.values(shortArray0);
      assertSame(shortArray0, shortArray1);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((-1040), (float) (-1040), (-1040), (short)1650);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      boolean boolean0 = tUnmodifiableIntShortMap0.forEachValue((TShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.containsKey(I)Z: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(2000, (float) (short)14, 2000, (short)14);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      boolean boolean0 = tUnmodifiableIntShortMap0.containsKey((int) (short)14);
      assertEquals(false, boolean0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap();
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      boolean boolean0 = tUnmodifiableIntShortMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.containsValue(S)Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(281);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      boolean boolean0 = tUnmodifiableIntShortMap0.containsValue((short) (-289));
      assertEquals(false, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.keys()[I: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((-177), (-177));
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      int[] intArray0 = tUnmodifiableIntShortMap0.keys();
      assertNotNull(intArray0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.clear()V: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(281);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntShortMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap();
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      HashMap<Integer, Short> hashMap0 = new HashMap<Integer, Short>();
      // Undeclared exception!
      try {
        tUnmodifiableIntShortMap0.putAll((Map<? extends Integer, ? extends Short>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.get(I)S: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((-1040), (float) (-1040), (-1040), (short)1650);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      short short0 = tUnmodifiableIntShortMap0.get((int) (short)1650);
      assertEquals((short)1650, short0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.remove(I)S: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(2000, (float) (short)14, 2000, (short)14);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntShortMap0.remove((int) (short)14);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.transformValues(Lgnu/trove/function/TShortFunction;)V: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(34);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntShortMap0.transformValues((TShortFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.adjustValue(IS)Z: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap();
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntShortMap0.adjustValue(994, (short) (-1));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.<init>(Lgnu/trove/map/TIntShortMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = null;
      try {
        tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.keySet()Lgnu/trove/set/TIntSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.keySet()Lgnu/trove/set/TIntSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap();
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = (TUnmodifiableIntSet)tUnmodifiableIntShortMap0.keySet();
      assertNotNull(tUnmodifiableIntSet0);
      
      TUnmodifiableIntSet tUnmodifiableIntSet1 = (TUnmodifiableIntSet)tUnmodifiableIntShortMap0.keySet();
      assertSame(tUnmodifiableIntSet1, tUnmodifiableIntSet0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.valueCollection()Lgnu/trove/TShortCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.valueCollection()Lgnu/trove/TShortCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap();
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      TUnmodifiableShortCollection tUnmodifiableShortCollection0 = (TUnmodifiableShortCollection)tUnmodifiableIntShortMap0.valueCollection();
      assertNotNull(tUnmodifiableShortCollection0);
      
      TUnmodifiableShortCollection tUnmodifiableShortCollection1 = (TUnmodifiableShortCollection)tUnmodifiableIntShortMap0.valueCollection();
      assertSame(tUnmodifiableShortCollection1, tUnmodifiableShortCollection0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap.<init>(Lgnu/trove/map/TIntShortMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap();
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      boolean boolean0 = tUnmodifiableIntShortMap0.equals((Object) "{}");
      assertEquals(false, boolean0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TLongFunction;
import gnu.trove.impl.sync.TSynchronizedLongCollection;
import gnu.trove.impl.sync.TSynchronizedLongLongMap;
import gnu.trove.impl.sync.TSynchronizedLongSet;
import gnu.trove.map.TLongLongMap;
import gnu.trove.map.hash.TLongLongHashMap;
import gnu.trove.procedure.TLongLongProcedure;
import gnu.trove.procedure.TLongProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedLongLongMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.keys()[J: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedLongLongMap.<init>(Lgnu/trove/map/TLongLongMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      long[] longArray0 = new long[32];
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      long[] longArray1 = tSynchronizedLongLongMap0.keys();
      assertFalse(longArray0.equals(longArray1));
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(165, 165);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      HashMap<Long, Long> hashMap0 = new HashMap<Long, Long>();
      tSynchronizedLongLongMap0.putAll((Map<? extends Long, ? extends Long>) hashMap0);
      assertEquals(true, hashMap0.isEmpty());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.adjustOrPutValue(JJJ)J: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(1714, 1714, 1714, 1714);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      long long0 = tSynchronizedLongLongMap0.adjustOrPutValue((long) 1714, (long) 1714, (long) 1714);
      assertEquals(1, tLongLongHashMap0.size());
      assertEquals(1714L, long0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.putAll(Lgnu/trove/map/TLongLongMap;)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(165, 165);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      tSynchronizedLongLongMap0.putAll((TLongLongMap) tLongLongHashMap0);
      assertEquals(3, tLongLongHashMap0.capacity());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.size()I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedLongLongMap.iterator()Lgnu/trove/iterator/TLongLongIterator;: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      long[] longArray0 = new long[32];
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      tLongLongHashMap0.putAll((TLongLongMap) tSynchronizedLongLongMap0);
      assertEquals(1, tSynchronizedLongLongMap0.size());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.increment(J)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(469, (float) 469, (-22L), (long) 469);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      boolean boolean0 = tSynchronizedLongLongMap0.increment((long) 469);
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.clear()V: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      tSynchronizedLongLongMap0.clear();
      assertEquals(0, tSynchronizedLongLongMap0.size());
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.values()[J: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      long[] longArray0 = new long[32];
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      long[] longArray1 = tSynchronizedLongLongMap0.values();
      assertFalse(longArray1.equals(longArray0));
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.keys([J)[J: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      long[] longArray0 = tSynchronizedLongLongMap0.keys(tLongLongHashMap0._set);
      assertNotNull(longArray0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      boolean boolean0 = tSynchronizedLongLongMap0.forEachKey((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.hashCode()I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedLongLongMap.<init>(Lgnu/trove/map/TLongLongMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0, (Object) "it-IT");
      int int0 = tSynchronizedLongLongMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.putIfAbsent(JJ)J: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      tSynchronizedLongLongMap0.putIfAbsent((long) 25, (long) 25);
      assertEquals(1, tLongLongHashMap0.size());
      assertEquals("{25=25}", tLongLongHashMap0.toString());
  }

  //Test case number: 12
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.equals(Ljava/lang/Object;)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedLongLongMap.<init>(Lgnu/trove/map/TLongLongMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0, (Object) "it-IT");
      boolean boolean0 = tSynchronizedLongLongMap0.equals((Object) "it-IT");
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.containsValue(J)Z: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      boolean boolean0 = tSynchronizedLongLongMap0.containsValue((long) 25);
      assertEquals(false, boolean0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.values([J)[J: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      long[] longArray0 = tSynchronizedLongLongMap0.values(tLongLongHashMap0._set);
      assertNotNull(longArray0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.transformValues(Lgnu/trove/function/TLongFunction;)V: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(165, 165);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      tSynchronizedLongLongMap0.transformValues((TLongFunction) null);
      assertEquals("{}", tSynchronizedLongLongMap0.toString());
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.containsKey(J)Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(469, (float) 469, (-22L), (long) 469);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      boolean boolean0 = tSynchronizedLongLongMap0.containsKey((-22L));
      assertEquals(false, boolean0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.put(JJ)J: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      long[] longArray0 = new long[32];
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      tSynchronizedLongLongMap0.put((long) (-17), (long) (-17));
      assertEquals(2, tLongLongHashMap0.size());
      assertEquals("{-17=-17, 0=0}", tSynchronizedLongLongMap0.toString());
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(165, 165);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      boolean boolean0 = tSynchronizedLongLongMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.forEachEntry(Lgnu/trove/procedure/TLongLongProcedure;)Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(1714, 1714, 1714, 1714);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      boolean boolean0 = tSynchronizedLongLongMap0.forEachEntry((TLongLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.retainEntries(Lgnu/trove/procedure/TLongLongProcedure;)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      boolean boolean0 = tSynchronizedLongLongMap0.retainEntries((TLongLongProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.adjustValue(JJ)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(469, (float) 469, (-22L), (long) 469);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      boolean boolean0 = tSynchronizedLongLongMap0.adjustValue((long) 469, (long) 469);
      assertEquals(false, boolean0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.get(J)J: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(1714, 1714, 1714, 1714);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      long long0 = tSynchronizedLongLongMap0.get((long) 1714);
      assertEquals(1714L, long0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      boolean boolean0 = tSynchronizedLongLongMap0.forEachValue((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.remove(J)J: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      long[] longArray0 = new long[32];
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      tSynchronizedLongLongMap0.remove(0L);
      assertEquals(true, tLongLongHashMap0.isEmpty());
      assertEquals(0, tLongLongHashMap0.size());
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.getNoEntryKey()J: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(165, 165);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      long long0 = tSynchronizedLongLongMap0.getNoEntryKey();
      assertEquals(0L, long0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.getNoEntryValue()J: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      long long0 = tSynchronizedLongLongMap0.getNoEntryValue();
      assertEquals(0L, long0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(165, 165);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      String string0 = tSynchronizedLongLongMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.<init>(Lgnu/trove/map/TLongLongMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = null;
      try {
        tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.keySet()Lgnu/trove/set/TLongSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedLongLongMap.keySet()Lgnu/trove/set/TLongSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test29()  throws Throwable  {
      long[] longArray0 = new long[32];
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      TSynchronizedLongSet tSynchronizedLongSet0 = (TSynchronizedLongSet)tSynchronizedLongLongMap0.keySet();
      assertNotNull(tSynchronizedLongSet0);
      
      TSynchronizedLongSet tSynchronizedLongSet1 = (TSynchronizedLongSet)tSynchronizedLongLongMap0.keySet();
      assertSame(tSynchronizedLongSet1, tSynchronizedLongSet0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedLongLongMap.valueCollection()Lgnu/trove/TLongCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 gnu.trove.impl.sync.TSynchronizedLongLongMap.valueCollection()Lgnu/trove/TLongCollection;: I11 Branch 3 IFNONNULL L121 - false
   * 3 gnu.trove.impl.sync.TSynchronizedLongLongMap.<init>(Lgnu/trove/map/TLongLongMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(469, (float) 469, (-22L), (long) 469);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      TSynchronizedLongCollection tSynchronizedLongCollection0 = (TSynchronizedLongCollection)tSynchronizedLongLongMap0.valueCollection();
      assertNotNull(tSynchronizedLongCollection0);
      
      TSynchronizedLongCollection tSynchronizedLongCollection1 = (TSynchronizedLongCollection)tSynchronizedLongLongMap0.valueCollection();
      assertSame(tSynchronizedLongCollection1, tSynchronizedLongCollection0);
  }
}

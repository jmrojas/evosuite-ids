/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TObjectCharMapDecorator;
import gnu.trove.map.TObjectCharMap;
import gnu.trove.map.custom_hash.TObjectCharCustomHashMap;
import gnu.trove.map.hash.TObjectCharHashMap;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.AbstractMap;
import java.util.Locale;
import java.util.Map;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

public class TObjectCharMapDecoratorEvoSuite_Random {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TObjectCharMapDecorator<Integer> tObjectCharMapDecorator0 = new TObjectCharMapDecorator<Integer>();
      // Undeclared exception!
      try {
        tObjectCharMapDecorator0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TObjectCharMapDecorator<Object> tObjectCharMapDecorator0 = new TObjectCharMapDecorator<Object>();
      tObjectCharMapDecorator0.entrySet();
      String string0 = "";
      String string1 = "/9gSvB}JBg+e%jZ";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string1, string1, string1);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in path at index 6: /9gSvB}JBg+e%jZ:/9gSvB%7DJBg+e%25jZ#/9gSvB%7DJBg+e%25jZ
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TObjectCharHashMap<TObjectCharHashMap<String>> tObjectCharHashMap0 = new TObjectCharHashMap<TObjectCharHashMap<String>>();
      tObjectCharHashMap0.size();
      TObjectCharCustomHashMap<TObjectCharHashMap<Character>> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<TObjectCharHashMap<Character>>();
      TObjectCharMapDecorator<TObjectCharHashMap<Character>> tObjectCharMapDecorator0 = new TObjectCharMapDecorator<TObjectCharHashMap<Character>>((TObjectCharMap<TObjectCharHashMap<Character>>) tObjectCharCustomHashMap0);
      TObjectCharHashMap<Object> tObjectCharHashMap1 = new TObjectCharHashMap<Object>((TObjectCharMap<?>) tObjectCharCustomHashMap0);
      TObjectCharMapDecorator<Object> tObjectCharMapDecorator1 = new TObjectCharMapDecorator<Object>((TObjectCharMap<Object>) tObjectCharHashMap1);
      tObjectCharMapDecorator1.putAll((Map<?, ? extends Character>) tObjectCharMapDecorator0);
      TObjectCharMapDecorator<Integer> tObjectCharMapDecorator2 = new TObjectCharMapDecorator<Integer>();
      String string0 = "T!";
      Locale locale0 = Locale.forLanguageTag(string0);
      tObjectCharCustomHashMap0.values();
      String string1 = locale0.getDisplayCountry();
      // Undeclared exception!
      try {
        tObjectCharMapDecorator2.get((Object) string1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = 86;
      TObjectCharHashMap<Integer> tObjectCharHashMap0 = new TObjectCharHashMap<Integer>(int0, int0);
      TObjectCharMapDecorator<Integer> tObjectCharMapDecorator0 = new TObjectCharMapDecorator<Integer>((TObjectCharMap<Integer>) tObjectCharHashMap0);
      TObjectCharMap<Integer> tObjectCharMap0 = tObjectCharMapDecorator0.getMap();
      assertEquals(0, tObjectCharMap0.size());
  }

  @Test
  public void test4()  throws Throwable  {
      TObjectCharHashMap<TObjectCharHashMap<Object>> tObjectCharHashMap0 = new TObjectCharHashMap<TObjectCharHashMap<Object>>();
      TObjectCharMapDecorator<TObjectCharHashMap<Object>> tObjectCharMapDecorator0 = new TObjectCharMapDecorator<TObjectCharHashMap<Object>>((TObjectCharMap<TObjectCharHashMap<Object>>) tObjectCharHashMap0);
      TObjectCharMapDecorator<Character> tObjectCharMapDecorator1 = new TObjectCharMapDecorator<Character>();
      // Undeclared exception!
      try {
        tObjectCharMapDecorator1.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TObjectCharMapDecorator<Object> tObjectCharMapDecorator0 = new TObjectCharMapDecorator<Object>();
      TObjectCharMap<String> tObjectCharMap0 = null;
      TObjectCharMapDecorator<String> tObjectCharMapDecorator1 = new TObjectCharMapDecorator<String>(tObjectCharMap0);
      // Undeclared exception!
      try {
        tObjectCharMapDecorator1.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TObjectCharMapDecorator<TObjectCharHashMap<String>> tObjectCharMapDecorator0 = new TObjectCharMapDecorator<TObjectCharHashMap<String>>();
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int0 = 257;
      float float0 = (-1.0F);
      TObjectCharCustomHashMap<Object> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, int0, float0);
      char char0 = 'j';
      TObjectCharHashMap<String> tObjectCharHashMap0 = new TObjectCharHashMap<String>(int0, float0, char0);
      // Undeclared exception!
      try {
        tObjectCharMapDecorator0.put(tObjectCharHashMap0, (Character) char0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TObjectCharCustomHashMap<Object> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Object>();
      int int0 = 734;
      tObjectCharCustomHashMap0.setUp(int0);
      TObjectCharMapDecorator<Object> tObjectCharMapDecorator0 = new TObjectCharMapDecorator<Object>((TObjectCharMap<Object>) tObjectCharCustomHashMap0);
      tObjectCharMapDecorator0.isEmpty();
      OutputStream outputStream0 = null;
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(outputStream0);
      Object object0 = null;
      Character character0 = tObjectCharMapDecorator0.get(object0);
      tObjectCharMapDecorator0.put(object0, character0);
      ObjectOutputStream objectOutputStream0 = null;
      try {
        objectOutputStream0 = new ObjectOutputStream((OutputStream) filterOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          int int0 = (-1576);
          float float0 = 0.0F;
          char char0 = ':';
          String string0 = "W.amybK!<#JSYyOeF)0";
          // Undeclared exception!
          try {
            File.createTempFile(string0, string0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Unable to create temporary file
             //
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test9()  throws Throwable  {
      TObjectCharMapDecorator<Character> tObjectCharMapDecorator0 = new TObjectCharMapDecorator<Character>();
      Locale locale0 = Locale.ENGLISH;
      Locale locale1 = Locale.US;
      String string0 = locale0.getDisplayLanguage(locale1);
      // Undeclared exception!
      try {
        tObjectCharMapDecorator0.remove((Object) string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TObjectCharHashMap<Object> tObjectCharHashMap0 = new TObjectCharHashMap<Object>();
      TObjectCharMapDecorator<Object> tObjectCharMapDecorator0 = new TObjectCharMapDecorator<Object>((TObjectCharMap<Object>) tObjectCharHashMap0);
      tObjectCharMapDecorator0.isEmpty();
      TObjectCharMapDecorator<String> tObjectCharMapDecorator1 = new TObjectCharMapDecorator<String>();
      // Undeclared exception!
      try {
        tObjectCharMapDecorator1.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TObjectCharHashMap<TObjectCharHashMap<Integer>> tObjectCharHashMap0 = new TObjectCharHashMap<TObjectCharHashMap<Integer>>();
      TObjectCharMapDecorator<TObjectCharHashMap<Integer>> tObjectCharMapDecorator0 = new TObjectCharMapDecorator<TObjectCharHashMap<Integer>>((TObjectCharMap<TObjectCharHashMap<Integer>>) tObjectCharHashMap0);
      tObjectCharHashMap0.clear();
      String string0 = "gnu.trove.no_entry.int";
      String string1 = "";
      TObjectCharMapDecorator<Object> tObjectCharMapDecorator1 = new TObjectCharMapDecorator<Object>();
      // Undeclared exception!
      try {
        tObjectCharMapDecorator1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TObjectCharMapDecorator<AbstractMap.SimpleImmutableEntry<Character, String>> tObjectCharMapDecorator0 = new TObjectCharMapDecorator<AbstractMap.SimpleImmutableEntry<Character, String>>();
      tObjectCharMapDecorator0.entrySet();
      TObjectCharCustomHashMap<Object> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Object>();
      IdentityHashingStrategy<Character> identityHashingStrategy0 = new IdentityHashingStrategy<Character>();
      int int0 = 357;
      char char0 = 'H';
      TObjectCharHashMap<AbstractMap.SimpleImmutableEntry<Object, Object>> tObjectCharHashMap0 = new TObjectCharHashMap<AbstractMap.SimpleImmutableEntry<Object, Object>>(int0, (float) int0, char0);
      TObjectCharMapDecorator<AbstractMap.SimpleImmutableEntry<Object, Object>> tObjectCharMapDecorator1 = new TObjectCharMapDecorator<AbstractMap.SimpleImmutableEntry<Object, Object>>((TObjectCharMap<AbstractMap.SimpleImmutableEntry<Object, Object>>) tObjectCharHashMap0);
      TObjectCharMapDecorator<Object> tObjectCharMapDecorator2 = new TObjectCharMapDecorator<Object>();
      String string0 = "";
      FileInputStream fileInputStream0 = null;
      try {
        fileInputStream0 = new FileInputStream(string0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         //  (No such file or directory)
         //
      }
  }
}

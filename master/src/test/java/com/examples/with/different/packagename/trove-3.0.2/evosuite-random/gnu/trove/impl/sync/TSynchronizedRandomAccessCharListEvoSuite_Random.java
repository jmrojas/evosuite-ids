/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TCharCollection;
import gnu.trove.impl.sync.TSynchronizedCharList;
import gnu.trove.impl.sync.TSynchronizedRandomAccessCharList;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessCharList;
import gnu.trove.list.TCharList;
import gnu.trove.list.array.TCharArrayList;
import gnu.trove.list.linked.TCharLinkedList;
import gnu.trove.procedure.TCharProcedure;
import java.io.FileNotFoundException;
import java.io.RandomAccessFile;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Locale;
import java.util.Random;
import javax.swing.text.Segment;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedRandomAccessCharListEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      char char0 = '[';
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList(char0);
      int int0 = (-435);
      tCharLinkedList0.iterator();
      // Undeclared exception!
      try {
        tCharLinkedList0.subList((int) char0, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 91 greater than end index -435
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TCharList tCharList0 = null;
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = null;
      try {
        tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList(tCharList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TCharList tCharList0 = null;
      String string0 = "fo";
      RandomAccessFile randomAccessFile0 = null;
      try {
        randomAccessFile0 = new RandomAccessFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"fo\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      char char0 = ',';
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList(char0);
      int int0 = (-880);
      int int1 = 26;
      // Undeclared exception!
      try {
        tCharLinkedList0.subList(int0, int1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      char[] charArray0 = new char[7];
      char char0 = '^';
      charArray0[0] = char0;
      char char1 = 'O';
      charArray0[1] = char1;
      char char2 = '|';
      TCharArrayList tCharArrayList0 = new TCharArrayList((int) charArray0[1]);
      TUnmodifiableCharList tUnmodifiableCharList0 = new TUnmodifiableCharList((TCharList) tCharArrayList0);
      TCharArrayList tCharArrayList1 = new TCharArrayList((TCharCollection) tUnmodifiableCharList0);
      Locale locale0 = Locale.JAPAN;
      String string0 = "=VGE\"F3";
      Locale locale1 = new Locale(string0, string0);
      String string1 = locale0.getDisplayCountry(locale1);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList1, (Object) string1);
      tSynchronizedRandomAccessCharList0.toArray(charArray0);
      charArray0[2] = char2;
      char char3 = '@';
      charArray0[3] = char3;
      char char4 = 'd';
      charArray0[4] = char4;
      char char5 = 'r';
      charArray0[5] = char5;
      char char6 = 'k';
      charArray0[6] = char6;
      TCharArrayList.wrap(charArray0);
      String string2 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string2, string2, string2);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: :#
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      char[] charArray0 = new char[6];
      char char0 = 'V';
      charArray0[0] = char0;
      char char1 = '';
      charArray0[1] = char1;
      char char2 = 'q';
      charArray0[2] = char2;
      char char3 = 'c';
      charArray0[3] = char3;
      char char4 = 'e';
      charArray0[4] = char4;
      char char5 = '6';
      charArray0[5] = char5;
      char char6 = '3';
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0, char6);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      Random random0 = new Random();
      tSynchronizedRandomAccessCharList0.shuffle(random0);
      assertEquals('', tSynchronizedRandomAccessCharList0.max());
  }

  @Test
  public void test6()  throws Throwable  {
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      String string0 = "";
      URI uRI0 = new URI(string0);
      String string1 = uRI0.toASCIIString();
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharLinkedList0, (Object) string1);
      int int0 = 905;
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessCharList0.subList(int0, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 905 greater than last index 0
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = 2;
      TCharArrayList tCharArrayList0 = new TCharArrayList(int0);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessCharList0.min();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // cannot find minimum of an empty list
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      char char0 = 'h';
      int int0 = 0;
      int int1 = 0;
      tCharArrayList0.binarySearch(char0, int0, int1);
      int int2 = (-1);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      tSynchronizedRandomAccessCharList0.hashCode();
      // Undeclared exception!
      try {
        tCharArrayList0.subList(int2, int2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      TCharProcedure tCharProcedure0 = null;
      tCharLinkedList0.inverseGrep(tCharProcedure0);
      String string0 = "";
      RandomAccessFile randomAccessFile0 = null;
      try {
        randomAccessFile0 = new RandomAccessFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TCharList tCharList0 = null;
      TUnmodifiableRandomAccessCharList tUnmodifiableRandomAccessCharList0 = null;
      try {
        tUnmodifiableRandomAccessCharList0 = new TUnmodifiableRandomAccessCharList(tCharList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 0;
      char char0 = '2';
      TCharArrayList tCharArrayList0 = new TCharArrayList(int0, char0);
      TCharArrayList tCharArrayList1 = new TCharArrayList((TCharCollection) tCharArrayList0);
      String string0 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: :#
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 31;
      TCharArrayList tCharArrayList0 = new TCharArrayList(int0);
      Locale locale0 = Locale.CANADA_FRENCH;
      String string0 = locale0.getLanguage();
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0, (Object) string0);
      char[] charArray0 = new char[9];
      char char0 = '^';
      charArray0[0] = char0;
      char char1 = '2';
      charArray0[1] = char1;
      char char2 = 'Z';
      charArray0[2] = char2;
      char char3 = 'd';
      charArray0[3] = char3;
      char char4 = '#';
      charArray0[4] = char4;
      char char5 = '[';
      charArray0[5] = char5;
      char char6 = '5';
      charArray0[6] = char6;
      char char7 = ']';
      charArray0[7] = char7;
      char char8 = '*';
      charArray0[8] = char8;
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessCharList0.retainAll(charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 30
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharLinkedList0);
      tSynchronizedRandomAccessCharList0.addAll((TCharCollection) tCharLinkedList0);
      TCharList tCharList0 = null;
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList1 = null;
      try {
        tSynchronizedRandomAccessCharList1 = new TSynchronizedRandomAccessCharList(tCharList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      TCharProcedure tCharProcedure0 = null;
      TCharLinkedList tCharLinkedList1 = (TCharLinkedList)tCharLinkedList0.grep(tCharProcedure0);
      Locale locale0 = Locale.CHINA;
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharLinkedList1);
      tSynchronizedRandomAccessCharList0.retainAll((TCharCollection) tCharLinkedList1);
      tCharLinkedList0.inverseGrep(tCharProcedure0);
      int int0 = (-1731);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessCharList0.reverse(int0, int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TCharList tCharList0 = null;
      String string0 = ",?G+1[R0h";
      int int0 = (-1046);
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, int0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: ,?G+1[R0h://,%3FG+1%5BR0h@,?G+1[R0h:-1046,%3FG+1%5BR0h?,?G+1[R0h#,?G+1[R0h
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      char[] charArray0 = new char[2];
      char char0 = '`';
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharLinkedList0);
      char char1 = 'k';
      tCharLinkedList0.fill(char1);
      int int0 = (-1739);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessCharList0.sort((int) char0, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 96 greater than end index -1739
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[2];
      char char0 = '5';
      charArray0[0] = char0;
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      Segment segment0 = new Segment();
      String string0 = segment0.toString();
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharLinkedList0, (Object) string0);
      char char1 = '\'';
      tSynchronizedRandomAccessCharList0.fill(char1);
      char char2 = '(';
      charArray0[1] = char2;
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList1 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      int int0 = (-1023);
      // Undeclared exception!
      try {
        tCharArrayList0.set((int) char2, charArray0, (int) charArray0[1], int0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) tCharArrayList0);
      String string0 = "";
      RandomAccessFile randomAccessFile0 = null;
      try {
        randomAccessFile0 = new RandomAccessFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
      }
  }

  @Test
  public void test19()  throws Throwable  {
      int int0 = 1;
      TCharArrayList tCharArrayList0 = new TCharArrayList(int0);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      int int1 = 31;
      char char0 = 'R';
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessCharList0.insert(int1, char0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

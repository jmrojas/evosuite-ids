/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.strategy;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.strategy.IdentityHashingStrategy;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class IdentityHashingStrategyEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


//   @Test
//   public void test0()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       IdentityHashingStrategy<Object> identityHashingStrategy1 = new IdentityHashingStrategy<Object>();
//       Object object0 = new Object();
//       identityHashingStrategy0.computeHashCode(object0);
//       String string0 = "";
//       int int0 = identityHashingStrategy1.computeHashCode((Object) string0);
//       IdentityHashingStrategy<Integer> identityHashingStrategy2 = new IdentityHashingStrategy<Integer>();
//       IdentityHashingStrategy<Object> identityHashingStrategy3 = new IdentityHashingStrategy<Object>();
//       IdentityHashingStrategy<String> identityHashingStrategy4 = new IdentityHashingStrategy<String>();
//       identityHashingStrategy1.computeHashCode((Object) string0);
//       identityHashingStrategy2.computeHashCode((Integer) int0);
//       IdentityHashingStrategy<Integer> identityHashingStrategy5 = new IdentityHashingStrategy<Integer>();
//       IdentityHashingStrategy<Object> identityHashingStrategy6 = new IdentityHashingStrategy<Object>();
//       String string1 = "0I2~!%s5\"3VjS.T[IYO";
//       int int1 = identityHashingStrategy6.computeHashCode((Object) string1);
//       String string2 = "So}@qxeUE ";
//       Object object1 = null;
//       identityHashingStrategy3.computeHashCode(object1);
//       int int2 = identityHashingStrategy4.computeHashCode(string2);
//       identityHashingStrategy2.equals((Integer) int1, (Integer) int1);
//       identityHashingStrategy0.computeHashCode(object1);
//       identityHashingStrategy4.equals(string0, string0);
//       identityHashingStrategy2.equals((Integer) int1, (Integer) int1);
//       IdentityHashingStrategy<Integer> identityHashingStrategy7 = new IdentityHashingStrategy<Integer>();
//       int int3 = identityHashingStrategy7.computeHashCode((Integer) int2);
//       IdentityHashingStrategy<Integer> identityHashingStrategy8 = new IdentityHashingStrategy<Integer>();
//       identityHashingStrategy6.computeHashCode((Object) string1);
//       identityHashingStrategy8.computeHashCode((Integer) int3);
//       identityHashingStrategy6.computeHashCode((Object) string1);
//       Object object2 = new Object();
//       int int4 = identityHashingStrategy3.computeHashCode(object2);
//       assertEquals(1040849355, int4);
//       
//       boolean boolean0 = identityHashingStrategy3.equals(object1, object2);
//       assertEquals(false, boolean0);
//   }

//   @Test
//   public void test1()  throws Throwable  {
//       IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
//       IdentityHashingStrategy<Object> identityHashingStrategy1 = new IdentityHashingStrategy<Object>();
//       Object object0 = new Object();
//       identityHashingStrategy1.equals(object0, object0);
//       IdentityHashingStrategy<Object> identityHashingStrategy2 = new IdentityHashingStrategy<Object>();
//       String string0 = "nA1'L&`jz";
//       int int0 = identityHashingStrategy2.computeHashCode((Object) string0);
//       IdentityHashingStrategy<Object> identityHashingStrategy3 = new IdentityHashingStrategy<Object>();
//       Object object1 = new Object();
//       identityHashingStrategy3.equals((Object) string0, object1);
//       Object object2 = new Object();
//       identityHashingStrategy3.equals(object2, object2);
//       IdentityHashingStrategy<Object> identityHashingStrategy4 = new IdentityHashingStrategy<Object>();
//       identityHashingStrategy0.computeHashCode((Integer) int0);
//       String string1 = "?_z(r'Hf'&H}'";
//       int int1 = identityHashingStrategy4.computeHashCode((Object) string1);
//       identityHashingStrategy3.computeHashCode(object2);
//       IdentityHashingStrategy<Object> identityHashingStrategy5 = new IdentityHashingStrategy<Object>();
//       Object object3 = new Object();
//       identityHashingStrategy5.equals(object3, object3);
//       Object object4 = new Object();
//       identityHashingStrategy2.computeHashCode(object4);
//       IdentityHashingStrategy<Integer> identityHashingStrategy6 = new IdentityHashingStrategy<Integer>();
//       Object object5 = null;
//       Object object6 = new Object();
//       identityHashingStrategy5.equals(object5, object6);
//       int int2 = identityHashingStrategy3.computeHashCode(object3);
//       assertEquals(1322324015, int2);
//       
//       boolean boolean0 = identityHashingStrategy6.equals((Integer) int1, (Integer) int1);
//       assertEquals(true, boolean0);
//   }

  @Test
  public void test2()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      IdentityHashingStrategy<String> identityHashingStrategy1 = new IdentityHashingStrategy<String>();
      String string0 = "Y3&~o,, \\Q,@ZI";
      identityHashingStrategy1.computeHashCode(string0);
      String string1 = "tU0r:$Y_jXz*";
      identityHashingStrategy1.computeHashCode(string1);
      identityHashingStrategy1.computeHashCode(string1);
      IdentityHashingStrategy<String> identityHashingStrategy2 = new IdentityHashingStrategy<String>();
      assertFalse(identityHashingStrategy2.equals(identityHashingStrategy1));
  }

  @Test
  public void test3()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      Object object0 = null;
      Object object1 = new Object();
      identityHashingStrategy0.equals(object0, object1);
      IdentityHashingStrategy<String> identityHashingStrategy1 = new IdentityHashingStrategy<String>();
      identityHashingStrategy0.equals(object1, object0);
      IdentityHashingStrategy<Integer> identityHashingStrategy2 = new IdentityHashingStrategy<Integer>();
  }

//   @Test
//   public void test4()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       IdentityHashingStrategy<Object> identityHashingStrategy1 = new IdentityHashingStrategy<Object>();
//       IdentityHashingStrategy<String> identityHashingStrategy2 = new IdentityHashingStrategy<String>();
//       String string0 = "6accHB_I\"colx1Q,626";
//       identityHashingStrategy1.computeHashCode((Object) string0);
//       Object object0 = new Object();
//       IdentityHashingStrategy<Integer> identityHashingStrategy3 = new IdentityHashingStrategy<Integer>();
//       identityHashingStrategy0.equals(object0, object0);
//       String string1 = "y/)";
//       identityHashingStrategy2.computeHashCode(string1);
//       identityHashingStrategy1.equals((Object) string0, (Object) string0);
//       IdentityHashingStrategy<Integer> identityHashingStrategy4 = new IdentityHashingStrategy<Integer>();
//       Integer integer0 = null;
//       IdentityHashingStrategy<Object> identityHashingStrategy5 = new IdentityHashingStrategy<Object>();
//       IdentityHashingStrategy<Object> identityHashingStrategy6 = new IdentityHashingStrategy<Object>();
//       IdentityHashingStrategy<Object> identityHashingStrategy7 = new IdentityHashingStrategy<Object>();
//       int int0 = identityHashingStrategy4.computeHashCode(integer0);
//       identityHashingStrategy6.computeHashCode((Object) string0);
//       identityHashingStrategy4.computeHashCode(integer0);
//       IdentityHashingStrategy<String> identityHashingStrategy8 = new IdentityHashingStrategy<String>();
//       boolean boolean0 = identityHashingStrategy4.equals(integer0, integer0);
//       assertEquals(true, boolean0);
//       
//       int int1 = identityHashingStrategy8.computeHashCode(string0);
//       assertEquals(871322735, int1);
//       
//       boolean boolean1 = identityHashingStrategy4.equals((Integer) int0, integer0);
//       assertEquals(false, boolean1);
//   }

  @Test
  public void test5()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      IdentityHashingStrategy<Integer> identityHashingStrategy1 = new IdentityHashingStrategy<Integer>();
      IdentityHashingStrategy<Object> identityHashingStrategy2 = new IdentityHashingStrategy<Object>();
      IdentityHashingStrategy<String> identityHashingStrategy3 = new IdentityHashingStrategy<String>();
      String string0 = "iI ";
      identityHashingStrategy3.computeHashCode(string0);
      IdentityHashingStrategy<Integer> identityHashingStrategy4 = new IdentityHashingStrategy<Integer>();
      assertFalse(identityHashingStrategy4.equals(identityHashingStrategy1));
  }

//   @Test
//   public void test6()  throws Throwable  {
//       IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
//       IdentityHashingStrategy<String> identityHashingStrategy1 = new IdentityHashingStrategy<String>();
//       String string0 = "n-@}k2/Oa@fnrbXeEyn";
//       int int0 = identityHashingStrategy1.computeHashCode(string0);
//       assertEquals(2022249543, int0);
//       
//       Integer integer0 = null;
//       identityHashingStrategy0.equals(integer0, integer0);
//       IdentityHashingStrategy<Object> identityHashingStrategy2 = new IdentityHashingStrategy<Object>();
//       Object object0 = new Object();
//       identityHashingStrategy2.equals(object0, object0);
//       IdentityHashingStrategy<Object> identityHashingStrategy3 = new IdentityHashingStrategy<Object>();
//       Object object1 = new Object();
//       identityHashingStrategy3.equals(object1, object1);
//       IdentityHashingStrategy<Object> identityHashingStrategy4 = new IdentityHashingStrategy<Object>();
//       IdentityHashingStrategy<Object> identityHashingStrategy5 = new IdentityHashingStrategy<Object>();
//       identityHashingStrategy3.equals(object1, object1);
//       Object object2 = null;
//       identityHashingStrategy4.equals(object2, object2);
//       boolean boolean0 = identityHashingStrategy5.equals(object2, object2);
//       assertEquals(true, boolean0);
//       
//       IdentityHashingStrategy<Integer> identityHashingStrategy6 = new IdentityHashingStrategy<Integer>();
//       IdentityHashingStrategy<Object> identityHashingStrategy7 = new IdentityHashingStrategy<Object>();
//       identityHashingStrategy4.computeHashCode(object2);
//       IdentityHashingStrategy<String> identityHashingStrategy8 = new IdentityHashingStrategy<String>();
//       int int1 = identityHashingStrategy7.computeHashCode(object2);
//       assertFalse(int1 == int0);
//   }

  @Test
  public void test7()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      IdentityHashingStrategy<String> identityHashingStrategy1 = new IdentityHashingStrategy<String>();
      Integer integer0 = null;
      IdentityHashingStrategy<Integer> identityHashingStrategy2 = new IdentityHashingStrategy<Integer>();
      identityHashingStrategy0.equals(integer0, integer0);
      String string0 = "";
      identityHashingStrategy1.equals(string0, string0);
      IdentityHashingStrategy<Object> identityHashingStrategy3 = new IdentityHashingStrategy<Object>();
      String string1 = "";
      identityHashingStrategy1.computeHashCode(string1);
      IdentityHashingStrategy<Object> identityHashingStrategy4 = new IdentityHashingStrategy<Object>();
      IdentityHashingStrategy<Object> identityHashingStrategy5 = new IdentityHashingStrategy<Object>();
      String string2 = "m6|/1b<";
      Integer integer1 = null;
      identityHashingStrategy0.equals(integer1, integer1);
      Object object0 = new Object();
      identityHashingStrategy5.equals(object0, object0);
      identityHashingStrategy5.computeHashCode(object0);
      int int0 = identityHashingStrategy4.computeHashCode(object0);
      IdentityHashingStrategy<Integer> identityHashingStrategy6 = new IdentityHashingStrategy<Integer>();
      IdentityHashingStrategy<Object> identityHashingStrategy7 = new IdentityHashingStrategy<Object>();
      identityHashingStrategy5.computeHashCode(object0);
      identityHashingStrategy5.computeHashCode((Object) string2);
      Object object1 = new Object();
      int int1 = identityHashingStrategy5.computeHashCode(object1);
      identityHashingStrategy5.equals((Object) string2, object1);
      identityHashingStrategy0.equals((Integer) int0, (Integer) int0);
      IdentityHashingStrategy<Integer> identityHashingStrategy8 = new IdentityHashingStrategy<Integer>();
      IdentityHashingStrategy<Integer> identityHashingStrategy9 = new IdentityHashingStrategy<Integer>();
      identityHashingStrategy5.equals(object0, object1);
      identityHashingStrategy8.equals((Integer) int1, (Integer) int1);
      IdentityHashingStrategy<Object> identityHashingStrategy10 = new IdentityHashingStrategy<Object>();
      assertFalse(identityHashingStrategy10.equals(identityHashingStrategy3));
  }

//   @Test
//   public void test8()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       IdentityHashingStrategy<Integer> identityHashingStrategy1 = new IdentityHashingStrategy<Integer>();
//       Integer integer0 = null;
//       identityHashingStrategy1.equals(integer0, integer0);
//       IdentityHashingStrategy<String> identityHashingStrategy2 = new IdentityHashingStrategy<String>();
//       IdentityHashingStrategy<Integer> identityHashingStrategy3 = new IdentityHashingStrategy<Integer>();
//       String string0 = "";
//       Object object0 = new Object();
//       identityHashingStrategy0.equals(object0, object0);
//       IdentityHashingStrategy<Integer> identityHashingStrategy4 = new IdentityHashingStrategy<Integer>();
//       int int0 = identityHashingStrategy0.computeHashCode(object0);
//       assertEquals(231270534, int0);
//       
//       IdentityHashingStrategy<Integer> identityHashingStrategy5 = new IdentityHashingStrategy<Integer>();
//       identityHashingStrategy3.equals((Integer) int0, integer0);
//       IdentityHashingStrategy<Object> identityHashingStrategy6 = new IdentityHashingStrategy<Object>();
//       identityHashingStrategy2.computeHashCode(string0);
//       IdentityHashingStrategy<Object> identityHashingStrategy7 = new IdentityHashingStrategy<Object>();
//       IdentityHashingStrategy<Object> identityHashingStrategy8 = new IdentityHashingStrategy<Object>();
//       String string1 = "U>1p";
//       IdentityHashingStrategy<Object> identityHashingStrategy9 = new IdentityHashingStrategy<Object>();
//       identityHashingStrategy2.computeHashCode(string0);
//       boolean boolean0 = identityHashingStrategy2.equals(string1, string1);
//       assertEquals(true, boolean0);
//   }

  @Test
  public void test9()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      IdentityHashingStrategy<Object> identityHashingStrategy1 = new IdentityHashingStrategy<Object>();
      String string0 = "u%7G KVBa-ZPUl|";
      Object object0 = new Object();
      identityHashingStrategy1.equals((Object) string0, object0);
      IdentityHashingStrategy<Integer> identityHashingStrategy2 = new IdentityHashingStrategy<Integer>();
      String string1 = "8RGXO]to8?O";
      IdentityHashingStrategy<Object> identityHashingStrategy3 = new IdentityHashingStrategy<Object>();
      String string2 = "";
      identityHashingStrategy0.computeHashCode(string2);
      identityHashingStrategy0.equals(string1, string2);
      Object object1 = new Object();
      identityHashingStrategy3.equals(object1, object1);
      identityHashingStrategy3.computeHashCode((Object) string1);
      identityHashingStrategy0.equals(string1, string1);
      identityHashingStrategy3.equals((Object) string1, (Object) string1);
      Object object2 = new Object();
      identityHashingStrategy3.equals(object2, object2);
      IdentityHashingStrategy<Object> identityHashingStrategy4 = new IdentityHashingStrategy<Object>();
      int int0 = identityHashingStrategy3.computeHashCode(object2);
      int int1 = identityHashingStrategy4.computeHashCode(object2);
      identityHashingStrategy3.equals(object2, object2);
      IdentityHashingStrategy<Integer> identityHashingStrategy5 = new IdentityHashingStrategy<Integer>();
      int int2 = identityHashingStrategy5.computeHashCode((Integer) int1);
      identityHashingStrategy3.computeHashCode(object2);
      identityHashingStrategy0.equals(string1, string2);
      identityHashingStrategy0.equals(string1, string1);
      identityHashingStrategy2.computeHashCode((Integer) int2);
      IdentityHashingStrategy<Integer> identityHashingStrategy6 = new IdentityHashingStrategy<Integer>();
      IdentityHashingStrategy<Integer> identityHashingStrategy7 = new IdentityHashingStrategy<Integer>();
      identityHashingStrategy7.computeHashCode((Integer) int0);
      IdentityHashingStrategy<Object> identityHashingStrategy8 = new IdentityHashingStrategy<Object>();
      IdentityHashingStrategy<Integer> identityHashingStrategy9 = new IdentityHashingStrategy<Integer>();
      assertFalse(identityHashingStrategy9.equals(identityHashingStrategy7));
  }

  @Test
  public void test10()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      Object object0 = new Object();
      identityHashingStrategy0.computeHashCode(object0);
      IdentityHashingStrategy<Integer> identityHashingStrategy1 = new IdentityHashingStrategy<Integer>();
  }

  @Test
  public void test11()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      Object object0 = new Object();
      identityHashingStrategy0.equals(object0, object0);
      IdentityHashingStrategy<Integer> identityHashingStrategy1 = new IdentityHashingStrategy<Integer>();
      IdentityHashingStrategy<Object> identityHashingStrategy2 = new IdentityHashingStrategy<Object>();
      identityHashingStrategy2.equals(object0, object0);
      boolean boolean0 = identityHashingStrategy0.equals(object0, object0);
      assertEquals(true, boolean0);
  }

//   @Test
//   public void test12()  throws Throwable  {
//       IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
//       IdentityHashingStrategy<Object> identityHashingStrategy1 = new IdentityHashingStrategy<Object>();
//       Object object0 = new Object();
//       identityHashingStrategy1.computeHashCode(object0);
//       Object object1 = new Object();
//       identityHashingStrategy1.equals(object1, object1);
//       identityHashingStrategy1.computeHashCode(object1);
//       int int0 = identityHashingStrategy1.computeHashCode(object1);
//       assertEquals(137843880, int0);
//   }

  @Test
  public void test13()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      IdentityHashingStrategy<Object> identityHashingStrategy1 = new IdentityHashingStrategy<Object>();
  }

//   @Test
//   public void test14()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       Object object0 = new Object();
//       identityHashingStrategy0.equals(object0, object0);
//       IdentityHashingStrategy<Object> identityHashingStrategy1 = new IdentityHashingStrategy<Object>();
//       String string0 = "";
//       int int0 = identityHashingStrategy1.computeHashCode((Object) string0);
//       assertEquals(91703008, int0);
//       
//       IdentityHashingStrategy<Integer> identityHashingStrategy2 = new IdentityHashingStrategy<Integer>();
//       Integer integer0 = null;
//       int int1 = identityHashingStrategy2.computeHashCode(integer0);
//       IdentityHashingStrategy<Integer> identityHashingStrategy3 = new IdentityHashingStrategy<Integer>();
//       identityHashingStrategy3.equals((Integer) int1, (Integer) int1);
//       Object object1 = null;
//       identityHashingStrategy1.equals(object1, object1);
//       IdentityHashingStrategy<Integer> identityHashingStrategy4 = new IdentityHashingStrategy<Integer>();
//       Integer integer1 = null;
//       identityHashingStrategy4.equals(integer1, integer1);
//       boolean boolean0 = identityHashingStrategy3.equals(integer0, integer1);
//       assertEquals(true, boolean0);
//   }

  @Test
  public void test15()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      String string0 = "";
      Object object0 = new Object();
      identityHashingStrategy0.equals((Object) string0, object0);
      Object object1 = new Object();
      int int0 = identityHashingStrategy0.computeHashCode(object1);
      identityHashingStrategy0.equals(object1, object1);
      IdentityHashingStrategy<String> identityHashingStrategy1 = new IdentityHashingStrategy<String>();
      IdentityHashingStrategy<Integer> identityHashingStrategy2 = new IdentityHashingStrategy<Integer>();
      identityHashingStrategy2.computeHashCode((Integer) int0);
      IdentityHashingStrategy<Integer> identityHashingStrategy3 = new IdentityHashingStrategy<Integer>();
      assertFalse(identityHashingStrategy3.equals(identityHashingStrategy2));
  }

//   @Test
//   public void test16()  throws Throwable  {
//       IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
//       IdentityHashingStrategy<Object> identityHashingStrategy1 = new IdentityHashingStrategy<Object>();
//       IdentityHashingStrategy<String> identityHashingStrategy2 = new IdentityHashingStrategy<String>();
//       String string0 = "6bHxhR+ah>Eq";
//       identityHashingStrategy0.computeHashCode(string0);
//       identityHashingStrategy0.equals(string0, string0);
//       String string1 = ";IjJ";
//       identityHashingStrategy2.computeHashCode(string0);
//       String string2 = "";
//       identityHashingStrategy1.equals((Object) string1, (Object) string2);
//       Object object0 = new Object();
//       identityHashingStrategy1.computeHashCode(object0);
//       String string3 = "";
//       identityHashingStrategy1.computeHashCode((Object) string3);
//       String string4 = "";
//       identityHashingStrategy2.equals(string4, string3);
//       identityHashingStrategy2.computeHashCode(string4);
//       IdentityHashingStrategy<String> identityHashingStrategy3 = new IdentityHashingStrategy<String>();
//       Object object1 = new Object();
//       identityHashingStrategy2.equals(string4, string4);
//       identityHashingStrategy3.computeHashCode(string4);
//       identityHashingStrategy1.computeHashCode(object1);
//       int int0 = identityHashingStrategy1.computeHashCode(object1);
//       assertEquals(1906058326, int0);
//       
//       String string5 = "";
//       String string6 = "7?tBq&UC1";
//       identityHashingStrategy2.equals(string4, string6);
//       String string7 = "";
//       identityHashingStrategy2.equals(string5, string7);
//       identityHashingStrategy1.equals(object1, object1);
//       boolean boolean0 = identityHashingStrategy2.equals(string5, string5);
//       assertEquals(true, boolean0);
//   }

  @Test
  public void test17()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      Object object0 = null;
      identityHashingStrategy0.equals(object0, object0);
      IdentityHashingStrategy<String> identityHashingStrategy1 = new IdentityHashingStrategy<String>();
      String string0 = "=nwh$U=LN0(4+Qa1+?";
      int int0 = identityHashingStrategy1.computeHashCode(string0);
      IdentityHashingStrategy<Integer> identityHashingStrategy2 = new IdentityHashingStrategy<Integer>();
      identityHashingStrategy2.computeHashCode((Integer) int0);
      IdentityHashingStrategy<Integer> identityHashingStrategy3 = new IdentityHashingStrategy<Integer>();
      IdentityHashingStrategy<Integer> identityHashingStrategy4 = new IdentityHashingStrategy<Integer>();
      identityHashingStrategy3.equals((Integer) int0, (Integer) int0);
      IdentityHashingStrategy<Integer> identityHashingStrategy5 = new IdentityHashingStrategy<Integer>();
      assertFalse(identityHashingStrategy5.equals(identityHashingStrategy3));
  }

  @Test
  public void test18()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      String string0 = "";
      identityHashingStrategy0.equals(string0, string0);
      IdentityHashingStrategy<Integer> identityHashingStrategy1 = new IdentityHashingStrategy<Integer>();
      IdentityHashingStrategy<Object> identityHashingStrategy2 = new IdentityHashingStrategy<Object>();
      IdentityHashingStrategy<Integer> identityHashingStrategy3 = new IdentityHashingStrategy<Integer>();
      IdentityHashingStrategy<Object> identityHashingStrategy4 = new IdentityHashingStrategy<Object>();
      Object object0 = new Object();
      IdentityHashingStrategy<Object> identityHashingStrategy5 = new IdentityHashingStrategy<Object>();
      identityHashingStrategy4.equals(object0, object0);
      Object object1 = new Object();
      identityHashingStrategy4.equals(object1, object1);
      identityHashingStrategy4.equals(object0, object0);
      identityHashingStrategy5.computeHashCode(object1);
      IdentityHashingStrategy<Object> identityHashingStrategy6 = new IdentityHashingStrategy<Object>();
      identityHashingStrategy4.equals(object1, object1);
      identityHashingStrategy6.equals(object1, object1);
      IdentityHashingStrategy<Object> identityHashingStrategy7 = new IdentityHashingStrategy<Object>();
      int int0 = identityHashingStrategy7.computeHashCode(object1);
      IdentityHashingStrategy<Integer> identityHashingStrategy8 = new IdentityHashingStrategy<Integer>();
      identityHashingStrategy4.equals(object1, object1);
      identityHashingStrategy8.equals((Integer) int0, (Integer) int0);
      identityHashingStrategy4.equals(object1, object1);
      identityHashingStrategy6.equals(object1, object0);
      IdentityHashingStrategy<Integer> identityHashingStrategy9 = new IdentityHashingStrategy<Integer>();
      assertFalse(identityHashingStrategy9.equals(identityHashingStrategy3));
  }

//   @Test
//   public void test19()  throws Throwable  {
//       IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
//       IdentityHashingStrategy<Object> identityHashingStrategy1 = new IdentityHashingStrategy<Object>();
//       Object object0 = new Object();
//       IdentityHashingStrategy<Integer> identityHashingStrategy2 = new IdentityHashingStrategy<Integer>();
//       identityHashingStrategy1.equals(object0, object0);
//       String string0 = "";
//       IdentityHashingStrategy<Object> identityHashingStrategy3 = new IdentityHashingStrategy<Object>();
//       Object object1 = new Object();
//       identityHashingStrategy3.computeHashCode(object1);
//       IdentityHashingStrategy<Object> identityHashingStrategy4 = new IdentityHashingStrategy<Object>();
//       identityHashingStrategy4.computeHashCode(object1);
//       int int0 = identityHashingStrategy4.computeHashCode(object1);
//       assertEquals(846019562, int0);
//       
//       identityHashingStrategy0.equals(string0, string0);
//       identityHashingStrategy0.equals(string0, string0);
//       IdentityHashingStrategy<Integer> identityHashingStrategy5 = new IdentityHashingStrategy<Integer>();
//       int int1 = identityHashingStrategy0.computeHashCode(string0);
//       assertEquals(91703008, int1);
//   }
}

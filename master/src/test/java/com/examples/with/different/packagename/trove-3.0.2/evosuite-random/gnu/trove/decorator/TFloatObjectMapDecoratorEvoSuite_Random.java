/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TFloatObjectMapDecorator;
import gnu.trove.map.TFloatObjectMap;
import gnu.trove.map.hash.TFloatObjectHashMap;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.OutputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.AbstractMap;
import java.util.Locale;
import java.util.StringTokenizer;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TFloatObjectMapDecoratorEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      String string0 = "";
      TFloatObjectMapDecorator<Object> tFloatObjectMapDecorator0 = new TFloatObjectMapDecorator<Object>();
      Object object0 = null;
      // Undeclared exception!
      try {
        tFloatObjectMapDecorator0.containsValue(object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TFloatObjectHashMap<Float> tFloatObjectHashMap0 = new TFloatObjectHashMap<Float>();
      TFloatObjectMapDecorator<Float> tFloatObjectMapDecorator0 = new TFloatObjectMapDecorator<Float>((TFloatObjectMap<Float>) tFloatObjectHashMap0);
      tFloatObjectMapDecorator0.hashCode();
      TFloatObjectMapDecorator<Float> tFloatObjectMapDecorator1 = new TFloatObjectMapDecorator<Float>();
      String string0 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: :#
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TFloatObjectMap<AbstractMap.SimpleEntry<Object, Integer>> tFloatObjectMap0 = null;
      TFloatObjectMapDecorator<AbstractMap.SimpleEntry<Object, Integer>> tFloatObjectMapDecorator0 = new TFloatObjectMapDecorator<AbstractMap.SimpleEntry<Object, Integer>>(tFloatObjectMap0);
      OutputStream outputStream0 = null;
      TFloatObjectMapDecorator<Float> tFloatObjectMapDecorator1 = new TFloatObjectMapDecorator<Float>();
      ObjectOutput objectOutput0 = null;
      // Undeclared exception!
      try {
        tFloatObjectMapDecorator1.writeExternal(objectOutput0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TFloatObjectMapDecorator<Object> tFloatObjectMapDecorator0 = new TFloatObjectMapDecorator<Object>();
      String string0 = "%CdG< J";
      Locale locale0 = Locale.FRENCH;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale locale1 = Locale.getDefault(locale_Category0);
      String string1 = locale0.getDisplayCountry(locale1);
      // Undeclared exception!
      try {
        tFloatObjectMapDecorator0.containsValue((Object) string1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TFloatObjectMapDecorator<Integer> tFloatObjectMapDecorator0 = new TFloatObjectMapDecorator<Integer>();
      float float0 = 0.0F;
      Float float1 = new Float(float0);
      Integer integer0 = null;
      // Undeclared exception!
      try {
        tFloatObjectMapDecorator0.put(float1, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TFloatObjectMap<Float> tFloatObjectMap0 = null;
      TFloatObjectMapDecorator<Float> tFloatObjectMapDecorator0 = new TFloatObjectMapDecorator<Float>(tFloatObjectMap0);
      Locale locale0 = Locale.GERMANY;
      String string0 = locale0.getDisplayCountry();
      tFloatObjectMapDecorator0.get((Object) string0);
  }

  @Test
  public void test6()  throws Throwable  {
      TFloatObjectMapDecorator<Float> tFloatObjectMapDecorator0 = new TFloatObjectMapDecorator<Float>();
      double double0 = (-1045.7099955777878);
      Float float0 = new Float(double0);
      // Undeclared exception!
      try {
        tFloatObjectMapDecorator0.put(float0, float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = 1041;
      float float0 = 1650.8788F;
      TFloatObjectHashMap<Object> tFloatObjectHashMap0 = new TFloatObjectHashMap<Object>(int0, float0, float0);
      TFloatObjectMapDecorator<Object> tFloatObjectMapDecorator0 = new TFloatObjectMapDecorator<Object>((TFloatObjectMap<Object>) tFloatObjectHashMap0);
      String string0 = "begin index ";
      String string1 = "";
      boolean boolean0 = true;
      StringTokenizer stringTokenizer0 = new StringTokenizer(string0, string1, boolean0);
      String string2 = stringTokenizer0.nextToken(string0);
      tFloatObjectMapDecorator0.remove((Object) string2);
      TFloatObjectMapDecorator<Float> tFloatObjectMapDecorator1 = new TFloatObjectMapDecorator<Float>();
      TFloatObjectMap<Object> tFloatObjectMap0 = null;
      TFloatObjectMapDecorator<Object> tFloatObjectMapDecorator2 = new TFloatObjectMapDecorator<Object>(tFloatObjectMap0);
      Float float1 = null;
      String string3 = "v/qv<W";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string3, string3, string3, string3);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: v/qv<W://v/qv<Wv/qv%3CW#v/qv%3CW
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TFloatObjectMapDecorator<Object> tFloatObjectMapDecorator0 = new TFloatObjectMapDecorator<Object>();
      String string0 = "";
      TFloatObjectMapDecorator<Integer> tFloatObjectMapDecorator1 = new TFloatObjectMapDecorator<Integer>();
      // Undeclared exception!
      try {
        tFloatObjectMapDecorator1.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TFloatObjectMap<TFloatObjectHashMap<Object>> tFloatObjectMap0 = null;
      TFloatObjectMapDecorator<TFloatObjectHashMap<Object>> tFloatObjectMapDecorator0 = new TFloatObjectMapDecorator<TFloatObjectHashMap<Object>>(tFloatObjectMap0);
      String string0 = "";
      float float0 = 0.0F;
      Float float1 = new Float(float0);
      int int0 = 0;
      TFloatObjectHashMap<Object> tFloatObjectHashMap0 = new TFloatObjectHashMap<Object>(int0);
      // Undeclared exception!
      try {
        tFloatObjectMapDecorator0.put(float1, tFloatObjectHashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TFloatObjectMapDecorator<TFloatObjectHashMap<Float>> tFloatObjectMapDecorator0 = new TFloatObjectMapDecorator<TFloatObjectHashMap<Float>>();
      // Undeclared exception!
      try {
        tFloatObjectMapDecorator0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 1192;
      TFloatObjectMapDecorator<Object> tFloatObjectMapDecorator0 = new TFloatObjectMapDecorator<Object>();
      // Undeclared exception!
      try {
        tFloatObjectMapDecorator0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TFloatObjectMapDecorator<TFloatObjectHashMap<Float>> tFloatObjectMapDecorator0 = new TFloatObjectMapDecorator<TFloatObjectHashMap<Float>>();
      // Undeclared exception!
      try {
        tFloatObjectMapDecorator0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = 0;
      int int1 = 1;
      float float0 = 0.0F;
      TFloatObjectHashMap<AbstractMap.SimpleImmutableEntry<Object, Object>> tFloatObjectHashMap0 = new TFloatObjectHashMap<AbstractMap.SimpleImmutableEntry<Object, Object>>(int1, float0, (float) int0);
      TFloatObjectMapDecorator<AbstractMap.SimpleImmutableEntry<Object, Object>> tFloatObjectMapDecorator0 = new TFloatObjectMapDecorator<AbstractMap.SimpleImmutableEntry<Object, Object>>((TFloatObjectMap<AbstractMap.SimpleImmutableEntry<Object, Object>>) tFloatObjectHashMap0);
      TFloatObjectHashMap<Object> tFloatObjectHashMap1 = new TFloatObjectHashMap<Object>(int0);
      TFloatObjectMapDecorator<Object> tFloatObjectMapDecorator1 = new TFloatObjectMapDecorator<Object>((TFloatObjectMap<Object>) tFloatObjectHashMap1);
      Float float1 = new Float((double) int0);
      Float float2 = new Float(float0);
      tFloatObjectMapDecorator0.containsKey((Object) float2);
      String string0 = "}";
      TFloatObjectHashMap<TFloatObjectHashMap<Object>> tFloatObjectHashMap2 = new TFloatObjectHashMap<TFloatObjectHashMap<Object>>();
      TFloatObjectHashMap<Float> tFloatObjectHashMap3 = new TFloatObjectHashMap<Float>();
      TFloatObjectMapDecorator<Integer> tFloatObjectMapDecorator2 = new TFloatObjectMapDecorator<Integer>();
      Locale locale0 = Locale.CHINA;
      String string1 = locale0.toString();
      tFloatObjectMapDecorator2.get((Object) string1);
      TFloatObjectMapDecorator<Float> tFloatObjectMapDecorator3 = new TFloatObjectMapDecorator<Float>((TFloatObjectMap<Float>) tFloatObjectHashMap3);
      tFloatObjectMapDecorator3.values();
      TFloatObjectMapDecorator<TFloatObjectHashMap<Object>> tFloatObjectMapDecorator4 = new TFloatObjectMapDecorator<TFloatObjectHashMap<Object>>((TFloatObjectMap<TFloatObjectHashMap<Object>>) tFloatObjectHashMap2);
      int int2 = (-165);
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, int2, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: }://%7D@}:-165%7D?%7D#%7D
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 0;
      TFloatObjectHashMap<Integer> tFloatObjectHashMap0 = new TFloatObjectHashMap<Integer>(int0);
      TFloatObjectMapDecorator<Integer> tFloatObjectMapDecorator0 = new TFloatObjectMapDecorator<Integer>((TFloatObjectMap<Integer>) tFloatObjectHashMap0);
      tFloatObjectMapDecorator0.keySet();
      String string0 = "";
      String string1 = "D,1F#!]v-|NRYE";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string1, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://?D,1%7FF%23!]v-%7CNRYE#
         //
      }
  }
}

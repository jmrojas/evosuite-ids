/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TDoubleFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatSet;
import gnu.trove.map.TFloatDoubleMap;
import gnu.trove.map.hash.TFloatDoubleHashMap;
import gnu.trove.procedure.TDoubleProcedure;
import gnu.trove.procedure.TFloatDoubleProcedure;
import gnu.trove.procedure.TFloatProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableFloatDoubleMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap$1.value()D: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap$1.hasNext()Z: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap$1.advance()V: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap$1.key()F: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableFloatDoubleMap;)V: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.size()I: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.iterator()Lgnu/trove/iterator/TFloatDoubleIterator;: root-Branch
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.<init>(Lgnu/trove/map/TFloatDoubleMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      float[] floatArray0 = new float[8];
      double[] doubleArray0 = new double[5];
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(floatArray0, doubleArray0);
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      TFloatDoubleHashMap tFloatDoubleHashMap1 = new TFloatDoubleHashMap((TFloatDoubleMap) tUnmodifiableFloatDoubleMap0);
      assertEquals(1, tUnmodifiableFloatDoubleMap0.size());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.increment(F)Z: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap();
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatDoubleMap0.increment((float) (-12));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.getNoEntryValue()D: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap();
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      double double0 = tUnmodifiableFloatDoubleMap0.getNoEntryValue();
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.containsKey(F)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap();
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      boolean boolean0 = tUnmodifiableFloatDoubleMap0.containsKey(32.687725F);
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.hashCode()I: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap((-1732), (-1539.4977F), (float) (-1732), (double) (-1539.4977F));
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      int int0 = tUnmodifiableFloatDoubleMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap();
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      HashMap<Float, Double> hashMap0 = new HashMap<Float, Double>();
      // Undeclared exception!
      try {
        tUnmodifiableFloatDoubleMap0.putAll((Map<? extends Float, ? extends Double>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.getNoEntryKey()F: root-Branch
   */

//   @Test
//   public void test6()  throws Throwable  {
//       TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap();
//       TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
//       float float0 = tUnmodifiableFloatDoubleMap0.getNoEntryKey();
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.remove(F)D: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap((-717), (-717), (-717), (-717));
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatDoubleMap0.remove((float) (-717));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap();
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      boolean boolean0 = tUnmodifiableFloatDoubleMap0.forEachValue((TDoubleProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.adjustOrPutValue(FDD)D: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap((-21));
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatDoubleMap0.adjustOrPutValue((float) (-21), (double) (-21), (double) (-21));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap();
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      boolean boolean0 = tUnmodifiableFloatDoubleMap0.forEachKey((TFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap();
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      boolean boolean0 = tUnmodifiableFloatDoubleMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.values()[D: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap();
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      double[] doubleArray0 = tUnmodifiableFloatDoubleMap0.values();
      assertNotNull(doubleArray0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.adjustValue(FD)Z: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap();
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatDoubleMap0.adjustValue((float) (-1778), (double) (-1778));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.keys()[F: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap();
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      float[] floatArray0 = tUnmodifiableFloatDoubleMap0.keys();
      assertNotNull(floatArray0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.containsValue(D)Z: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap((-1732), (-1539.4977F), (float) (-1732), (double) (-1539.4977F));
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      boolean boolean0 = tUnmodifiableFloatDoubleMap0.containsValue((double) 0);
      assertEquals(false, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.keys([F)[F: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap((-717), (-717), (-717), (-717));
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      float[] floatArray0 = tUnmodifiableFloatDoubleMap0.keys(tFloatDoubleHashMap0._set);
      assertNotNull(floatArray0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap();
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      String string0 = tUnmodifiableFloatDoubleMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.putIfAbsent(FD)D: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(1, 0.0F, 0.0F, (double) 1);
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatDoubleMap0.putIfAbsent((float) 1, (double) 1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.put(FD)D: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      float[] floatArray0 = new float[8];
      double[] doubleArray0 = new double[5];
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(floatArray0, doubleArray0);
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatDoubleMap0.put((float) 1893, (double) 0.0F);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.retainEntries(Lgnu/trove/procedure/TFloatDoubleProcedure;)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap();
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatDoubleMap0.retainEntries((TFloatDoubleProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.values([D)[D: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap();
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      double[] doubleArray0 = new double[5];
      double[] doubleArray1 = tUnmodifiableFloatDoubleMap0.values(doubleArray0);
      assertSame(doubleArray1, doubleArray0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.forEachEntry(Lgnu/trove/procedure/TFloatDoubleProcedure;)Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap();
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      boolean boolean0 = tUnmodifiableFloatDoubleMap0.forEachEntry((TFloatDoubleProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.putAll(Lgnu/trove/map/TFloatDoubleMap;)V: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap((-1177), 7.056556F, 7.056556F, (double) 7.056556F);
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatDoubleMap0.putAll((TFloatDoubleMap) tFloatDoubleHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.get(F)D: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap();
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      double double0 = tUnmodifiableFloatDoubleMap0.get((float) (-12));
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(19, 19);
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatDoubleMap0.transformValues((TDoubleFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.clear()V: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap();
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatDoubleMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.<init>(Lgnu/trove/map/TFloatDoubleMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = null;
      try {
        tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.keySet()Lgnu/trove/set/TFloatSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.keySet()Lgnu/trove/set/TFloatSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap();
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      TUnmodifiableFloatSet tUnmodifiableFloatSet0 = (TUnmodifiableFloatSet)tUnmodifiableFloatDoubleMap0.keySet();
      assertNotNull(tUnmodifiableFloatSet0);
      
      TUnmodifiableFloatSet tUnmodifiableFloatSet1 = (TUnmodifiableFloatSet)tUnmodifiableFloatDoubleMap0.keySet();
      assertSame(tUnmodifiableFloatSet1, tUnmodifiableFloatSet0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap((-717), (-717), (-717), (-717));
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      TUnmodifiableDoubleCollection tUnmodifiableDoubleCollection0 = (TUnmodifiableDoubleCollection)tUnmodifiableFloatDoubleMap0.valueCollection();
      assertNotNull(tUnmodifiableDoubleCollection0);
      
      TUnmodifiableDoubleCollection tUnmodifiableDoubleCollection1 = (TUnmodifiableDoubleCollection)tUnmodifiableFloatDoubleMap0.valueCollection();
      assertSame(tUnmodifiableDoubleCollection1, tUnmodifiableDoubleCollection0);
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - false
   */

  @Test
  public void test30()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap((-1732), (-1539.4977F), (float) (-1732), (double) (-1539.4977F));
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      boolean boolean0 = tUnmodifiableFloatDoubleMap0.equals((Object) tFloatDoubleHashMap0);
      assertEquals(true, boolean0);
  }

  //Test case number: 31
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap.<init>(Lgnu/trove/map/TFloatDoubleMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(1, 0.0F, 0.0F, (double) 1);
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = new TUnmodifiableFloatDoubleMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      boolean boolean0 = tUnmodifiableFloatDoubleMap0.equals((Object) "");
      assertEquals(false, boolean0);
  }
}

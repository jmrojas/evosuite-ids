/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TCharFunction;
import gnu.trove.impl.sync.TSynchronizedByteCharMap;
import gnu.trove.impl.sync.TSynchronizedByteSet;
import gnu.trove.impl.sync.TSynchronizedCharCollection;
import gnu.trove.map.TByteCharMap;
import gnu.trove.map.hash.TByteCharHashMap;
import gnu.trove.procedure.TByteCharProcedure;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TCharProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedByteCharMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 4 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.size()I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedByteCharMap.iterator()Lgnu/trove/iterator/TByteCharIterator;: root-Branch
   * 3 gnu.trove.impl.sync.TSynchronizedByteCharMap.putAll(Lgnu/trove/map/TByteCharMap;)V: root-Branch
   * 4 gnu.trove.impl.sync.TSynchronizedByteCharMap.<init>(Lgnu/trove/map/TByteCharMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      tSynchronizedByteCharMap0.putAll((TByteCharMap) tSynchronizedByteCharMap0);
      assertEquals("{}", tSynchronizedByteCharMap0.toString());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.keys([B)[B: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      byte[] byteArray0 = tSynchronizedByteCharMap0.keys(tByteCharHashMap0._set);
      assertNotNull(byteArray0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tSynchronizedByteCharMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.getNoEntryKey()B: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(19, 19);
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      byte byte0 = tSynchronizedByteCharMap0.getNoEntryKey();
      assertEquals((byte)0, byte0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.transformValues(Lgnu/trove/function/TCharFunction;)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      tSynchronizedByteCharMap0.transformValues((TCharFunction) null);
      assertEquals("{}", tSynchronizedByteCharMap0.toString());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.containsKey(B)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[28];
      char[] charArray0 = new char[1];
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tSynchronizedByteCharMap0.containsKey((byte)0);
      assertEquals(true, boolean0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.putIfAbsent(BC)C: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[28];
      char[] charArray0 = new char[1];
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      tSynchronizedByteCharMap0.putIfAbsent((byte)0, '/');
      assertEquals("{0=\u0000}", tByteCharHashMap0.toString());
      assertEquals("{0=\u0000}", tSynchronizedByteCharMap0.toString());
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.putAll(Ljava/util/Map;)V: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedByteCharMap.<init>(Lgnu/trove/map/TByteCharMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) null, (Object) "US");
      HashMap<Byte, Character> hashMap0 = new HashMap<Byte, Character>();
      // Undeclared exception!
      try {
        tSynchronizedByteCharMap0.putAll((Map<? extends Byte, ? extends Character>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 8
  /*
   * 5 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.get(B)C: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedByteCharMap.getNoEntryValue()C: root-Branch
   * 3 gnu.trove.impl.sync.TSynchronizedByteCharMap.put(BC)C: root-Branch
   * 4 gnu.trove.impl.sync.TSynchronizedByteCharMap.equals(Ljava/lang/Object;)Z: root-Branch
   * 5 gnu.trove.impl.sync.TSynchronizedByteCharMap.size()I: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      tSynchronizedByteCharMap0.put((byte)39, '\u0000');
      boolean boolean0 = tSynchronizedByteCharMap0.equals((Object) tSynchronizedByteCharMap0);
      assertEquals(1, tByteCharHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.clear()V: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(41, 41);
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      tSynchronizedByteCharMap0.clear();
      assertEquals("{}", tSynchronizedByteCharMap0.toString());
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.values([C)[C: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(1260);
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      char[] charArray0 = new char[9];
      char[] charArray1 = tSynchronizedByteCharMap0.values(charArray0);
      assertSame(charArray1, charArray0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.keys()[B: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      byte[] byteArray0 = tSynchronizedByteCharMap0.keys();
      assertNotNull(byteArray0);
  }

  //Test case number: 12
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedByteCharMap.<init>(Lgnu/trove/map/TByteCharMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(458);
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0, (Object) "French (Canada)");
      boolean boolean0 = tSynchronizedByteCharMap0.forEachValue((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustValue(BC)Z: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(19, 19);
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tSynchronizedByteCharMap0.adjustValue((byte) (-77), '\u0000');
      assertEquals(false, boolean0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.values()[C: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(19, 19);
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      char[] charArray0 = tSynchronizedByteCharMap0.values();
      assertNotNull(charArray0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.hashCode()I: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[28];
      char[] charArray0 = new char[1];
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      int int0 = tSynchronizedByteCharMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.containsValue(C)Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(19, 19);
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tSynchronizedByteCharMap0.containsValue('\u0000');
      assertEquals(false, boolean0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(19, 19);
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tSynchronizedByteCharMap0.forEachKey((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(1260);
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      String string0 = tSynchronizedByteCharMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.increment(B)Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(1260);
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tSynchronizedByteCharMap0.increment((byte)49);
      assertEquals(false, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.forEachEntry(Lgnu/trove/procedure/TByteCharProcedure;)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(41, 41);
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tSynchronizedByteCharMap0.forEachEntry((TByteCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.remove(B)C: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      char char0 = tSynchronizedByteCharMap0.remove((byte)39);
      assertEquals('\u0000', char0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      char char0 = tSynchronizedByteCharMap0.adjustOrPutValue((byte) (-16), '\uFFF8', '\uFFF8');
      assertEquals(1, tByteCharHashMap0.size());
      assertEquals('\uFFF8', char0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.retainEntries(Lgnu/trove/procedure/TByteCharProcedure;)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(19, 19);
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tSynchronizedByteCharMap0.retainEntries((TByteCharProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.<init>(Lgnu/trove/map/TByteCharMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test24()  throws Throwable  {
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = null;
      try {
        tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.keySet()Lgnu/trove/set/TByteSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedByteCharMap.keySet()Lgnu/trove/set/TByteSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test25()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      TSynchronizedByteSet tSynchronizedByteSet0 = (TSynchronizedByteSet)tSynchronizedByteCharMap0.keySet();
      assertNotNull(tSynchronizedByteSet0);
      
      TSynchronizedByteSet tSynchronizedByteSet1 = (TSynchronizedByteSet)tSynchronizedByteCharMap0.keySet();
      assertSame(tSynchronizedByteSet1, tSynchronizedByteSet0);
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.valueCollection()Lgnu/trove/TCharCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 gnu.trove.impl.sync.TSynchronizedByteCharMap.valueCollection()Lgnu/trove/TCharCollection;: I11 Branch 3 IFNONNULL L121 - false
   * 3 gnu.trove.impl.sync.TSynchronizedByteCharMap.<init>(Lgnu/trove/map/TByteCharMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test26()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      TSynchronizedCharCollection tSynchronizedCharCollection0 = (TSynchronizedCharCollection)tSynchronizedByteCharMap0.valueCollection();
      assertNotNull(tSynchronizedCharCollection0);
      
      TSynchronizedCharCollection tSynchronizedCharCollection1 = (TSynchronizedCharCollection)tSynchronizedByteCharMap0.valueCollection();
      assertSame(tSynchronizedCharCollection1, tSynchronizedCharCollection0);
  }
}

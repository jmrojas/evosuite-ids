/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TFloatFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntSet;
import gnu.trove.map.TIntFloatMap;
import gnu.trove.map.hash.TIntFloatHashMap;
import gnu.trove.procedure.TFloatProcedure;
import gnu.trove.procedure.TIntFloatProcedure;
import gnu.trove.procedure.TIntProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableIntFloatMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap$1.advance()V: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap$1.key()I: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap$1.value()F: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableIntFloatMap;)V: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap$1.hasNext()Z: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.size()I: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.iterator()Lgnu/trove/iterator/TIntFloatIterator;: root-Branch
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.<init>(Lgnu/trove/map/TIntFloatMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[3];
      float[] floatArray0 = new float[8];
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap(intArray0, floatArray0);
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      TIntFloatHashMap tIntFloatHashMap1 = new TIntFloatHashMap((TIntFloatMap) tUnmodifiableIntFloatMap0);
      assertEquals(1, tUnmodifiableIntFloatMap0.size());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.containsKey(I)Z: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap((-343));
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      boolean boolean0 = tUnmodifiableIntFloatMap0.containsKey((-343));
      assertEquals(false, boolean0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.adjustOrPutValue(IFF)F: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      int[] intArray0 = new int[1];
      float[] floatArray0 = new float[3];
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap(intArray0, floatArray0);
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntFloatMap0.adjustOrPutValue(9, 9, 9);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.getNoEntryKey()I: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap((-5), (-5), (-5), (-5));
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      int int0 = tUnmodifiableIntFloatMap0.getNoEntryKey();
      assertEquals((-5), int0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.forEachEntry(Lgnu/trove/procedure/TIntFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap((-1222), (-1222));
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      boolean boolean0 = tUnmodifiableIntFloatMap0.forEachEntry((TIntFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.increment(I)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap();
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntFloatMap0.increment(173);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.getNoEntryValue()F: root-Branch
   */

//   @Test
//   public void test6()  throws Throwable  {
//       TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap((-8), (-8));
//       TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
//       float float0 = tUnmodifiableIntFloatMap0.getNoEntryValue();
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.putAll(Lgnu/trove/map/TIntFloatMap;)V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap((-343));
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntFloatMap0.putAll((TIntFloatMap) tIntFloatHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.values()[F: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap((-343));
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      float[] floatArray0 = tUnmodifiableIntFloatMap0.values();
      assertNotNull(floatArray0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.hashCode()I: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap((-8), (-8));
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      int int0 = tUnmodifiableIntFloatMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap((-850), (-850), (-850), (-850));
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      String string0 = tUnmodifiableIntFloatMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.put(IF)F: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap((-5), (-5), (-5), (-5));
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntFloatMap0.put((-5), (-5));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.retainEntries(Lgnu/trove/procedure/TIntFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap();
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntFloatMap0.retainEntries((TIntFloatProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.transformValues(Lgnu/trove/function/TFloatFunction;)V: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[26];
      float[] floatArray0 = new float[12];
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap(intArray0, floatArray0);
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntFloatMap0.transformValues((TFloatFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.containsValue(F)Z: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap(10);
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      boolean boolean0 = tUnmodifiableIntFloatMap0.containsValue((float) 10);
      assertEquals(false, boolean0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.values([F)[F: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap(10);
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      float[] floatArray0 = new float[5];
      float[] floatArray1 = tUnmodifiableIntFloatMap0.values(floatArray0);
      assertSame(floatArray1, floatArray0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap((-850), (-850), (-850), (-850));
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      boolean boolean0 = tUnmodifiableIntFloatMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.adjustValue(IF)Z: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap(10);
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntFloatMap0.adjustValue(10, 0.0F);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap();
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      HashMap<Integer, Float> hashMap0 = new HashMap<Integer, Float>();
      // Undeclared exception!
      try {
        tUnmodifiableIntFloatMap0.putAll((Map<? extends Integer, ? extends Float>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.forEachKey(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap((-343));
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      boolean boolean0 = tUnmodifiableIntFloatMap0.forEachKey((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.putIfAbsent(IF)F: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap();
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntFloatMap0.putIfAbsent((-652), (-652));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.keys([I)[I: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap((-850), (-850), (-850), (-850));
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      int[] intArray0 = tUnmodifiableIntFloatMap0.keys(tIntFloatHashMap0._set);
      assertNotNull(intArray0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.keys()[I: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap((-343));
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      int[] intArray0 = tUnmodifiableIntFloatMap0.keys();
      assertNotNull(intArray0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap((-365), (-365));
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      boolean boolean0 = tUnmodifiableIntFloatMap0.forEachValue((TFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.clear()V: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap((-8), (-8));
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntFloatMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.remove(I)F: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap();
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntFloatMap0.remove((-1635));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.get(I)F: root-Branch
   */

//   @Test
//   public void test26()  throws Throwable  {
//       TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap((-8), (-8));
//       TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
//       float float0 = tUnmodifiableIntFloatMap0.get(0);
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.<init>(Lgnu/trove/map/TIntFloatMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = null;
      try {
        tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.keySet()Lgnu/trove/set/TIntSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.keySet()Lgnu/trove/set/TIntSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap();
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = (TUnmodifiableIntSet)tUnmodifiableIntFloatMap0.keySet();
      assertNotNull(tUnmodifiableIntSet0);
      
      TUnmodifiableIntSet tUnmodifiableIntSet1 = (TUnmodifiableIntSet)tUnmodifiableIntFloatMap0.keySet();
      assertSame(tUnmodifiableIntSet1, tUnmodifiableIntSet0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap((-8), (-8));
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = (TUnmodifiableFloatCollection)tUnmodifiableIntFloatMap0.valueCollection();
      assertNotNull(tUnmodifiableFloatCollection0);
      
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection1 = (TUnmodifiableFloatCollection)tUnmodifiableIntFloatMap0.valueCollection();
      assertSame(tUnmodifiableFloatCollection1, tUnmodifiableFloatCollection0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap.<init>(Lgnu/trove/map/TIntFloatMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap((-365), (-365));
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = new TUnmodifiableIntFloatMap((TIntFloatMap) tIntFloatHashMap0);
      boolean boolean0 = tUnmodifiableIntFloatMap0.equals((Object) "{}");
      assertEquals(false, boolean0);
  }
}

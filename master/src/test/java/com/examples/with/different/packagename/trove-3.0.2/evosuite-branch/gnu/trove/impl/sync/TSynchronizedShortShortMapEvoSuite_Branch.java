/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TShortFunction;
import gnu.trove.impl.sync.TSynchronizedShortCollection;
import gnu.trove.impl.sync.TSynchronizedShortSet;
import gnu.trove.impl.sync.TSynchronizedShortShortMap;
import gnu.trove.map.TShortShortMap;
import gnu.trove.map.hash.TShortShortHashMap;
import gnu.trove.procedure.TShortProcedure;
import gnu.trove.procedure.TShortShortProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedShortShortMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.toString()Ljava/lang/String;: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedShortShortMap.<init>(Lgnu/trove/map/TShortShortMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(414);
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      String string0 = tSynchronizedShortShortMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.putAll(Lgnu/trove/map/TShortShortMap;)V: root-Branch
   */

//   @Test
//   public void test1()  throws Throwable  {
//       TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
//       TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
//       tSynchronizedShortShortMap0.putAll((TShortShortMap) tShortShortHashMap0);
//       assertEquals(0, tSynchronizedShortShortMap0.getNoEntryValue());
//   }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.remove(S)S: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      short[] shortArray0 = new short[1];
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(shortArray0, shortArray0);
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      short short0 = tSynchronizedShortShortMap0.remove((short) (-24532));
      assertEquals((short)0, short0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.adjustValue(SS)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      boolean boolean0 = tSynchronizedShortShortMap0.adjustValue((short) (-748), (short) (-748));
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.retainEntries(Lgnu/trove/procedure/TShortShortProcedure;)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      boolean boolean0 = tSynchronizedShortShortMap0.retainEntries((TShortShortProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(414);
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      boolean boolean0 = tSynchronizedShortShortMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.clear()V: root-Branch
   */

//   @Test
//   public void test6()  throws Throwable  {
//       TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
//       TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
//       tSynchronizedShortShortMap0.clear();
//       assertEquals(0, tSynchronizedShortShortMap0.getNoEntryValue());
//   }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.increment(S)Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      boolean boolean0 = tSynchronizedShortShortMap0.increment((short)0);
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.get(S)S: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(414);
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      short short0 = tSynchronizedShortShortMap0.get((short)1716);
      assertEquals((short)0, short0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      boolean boolean0 = tSynchronizedShortShortMap0.equals((Object) "-748");
      assertEquals(false, boolean0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.transformValues(Lgnu/trove/function/TShortFunction;)V: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      tSynchronizedShortShortMap0.transformValues((TShortFunction) null);
      assertEquals("{}", tSynchronizedShortShortMap0.toString());
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.containsKey(S)Z: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(27, (float) (short)15);
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      boolean boolean0 = tSynchronizedShortShortMap0.containsKey((short)15);
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.hashCode()I: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(414);
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      int int0 = tSynchronizedShortShortMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.getNoEntryKey()S: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      short short0 = tSynchronizedShortShortMap0.getNoEntryKey();
      assertEquals((short)0, short0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.values([S)[S: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(414);
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      short[] shortArray0 = tSynchronizedShortShortMap0.values(tShortShortHashMap0._set);
      assertNotNull(shortArray0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.putIfAbsent(SS)S: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(414);
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      tSynchronizedShortShortMap0.putIfAbsent((short)0, (short)1716);
      assertEquals(1, tShortShortHashMap0.size());
      assertEquals("{0=1716}", tSynchronizedShortShortMap0.toString());
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      boolean boolean0 = tSynchronizedShortShortMap0.forEachKey((TShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.size()I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedShortShortMap.iterator()Lgnu/trove/iterator/TShortShortIterator;: root-Branch
   */

//   @Test
//   public void test17()  throws Throwable  {
//       TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(27, (float) (short)15);
//       TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
//       TShortShortHashMap tShortShortHashMap1 = new TShortShortHashMap((TShortShortMap) tSynchronizedShortShortMap0);
//       assertEquals(0, tShortShortHashMap1.getNoEntryKey());
//   }

  //Test case number: 18
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.values()[S: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedShortShortMap.<init>(Lgnu/trove/map/TShortShortMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0, (Object) ":");
      short[] shortArray0 = tSynchronizedShortShortMap0.values();
      assertNotNull(shortArray0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.getNoEntryValue()S: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(27, (float) (short)15);
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      short short0 = tSynchronizedShortShortMap0.getNoEntryValue();
      assertEquals((short)0, short0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      boolean boolean0 = tSynchronizedShortShortMap0.forEachValue((TShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.adjustOrPutValue(SSS)S: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      short short0 = tSynchronizedShortShortMap0.adjustOrPutValue((short)0, (short)0, (short)0);
      assertEquals(1, tShortShortHashMap0.size());
      assertEquals((short)0, short0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      HashMap<Short, Short> hashMap0 = new HashMap<Short, Short>();
      tSynchronizedShortShortMap0.putAll((Map<? extends Short, ? extends Short>) hashMap0);
      assertEquals("{}", tSynchronizedShortShortMap0.toString());
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.containsValue(S)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      boolean boolean0 = tSynchronizedShortShortMap0.containsValue((short) (-748));
      assertEquals(false, boolean0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.forEachEntry(Lgnu/trove/procedure/TShortShortProcedure;)Z: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      boolean boolean0 = tSynchronizedShortShortMap0.forEachEntry((TShortShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.keys()[S: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      short[] shortArray0 = tSynchronizedShortShortMap0.keys();
      assertNotNull(shortArray0);
  }

  //Test case number: 26
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.keys([S)[S: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedShortShortMap.<init>(Lgnu/trove/map/TShortShortMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0, (Object) ":");
      short[] shortArray0 = tSynchronizedShortShortMap0.keys(tShortShortHashMap0._set);
      assertNotNull(shortArray0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.put(SS)S: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      tSynchronizedShortShortMap0.put((short)0, (short)0);
      assertEquals("{0=0}", tShortShortHashMap0.toString());
      assertEquals(false, tShortShortHashMap0.isEmpty());
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.<init>(Lgnu/trove/map/TShortShortMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = null;
      try {
        tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.keySet()Lgnu/trove/set/TShortSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedShortShortMap.keySet()Lgnu/trove/set/TShortSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(414);
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      TSynchronizedShortSet tSynchronizedShortSet0 = (TSynchronizedShortSet)tSynchronizedShortShortMap0.keySet();
      assertNotNull(tSynchronizedShortSet0);
      
      TSynchronizedShortSet tSynchronizedShortSet1 = (TSynchronizedShortSet)tSynchronizedShortShortMap0.keySet();
      assertSame(tSynchronizedShortSet1, tSynchronizedShortSet0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedShortShortMap.valueCollection()Lgnu/trove/TShortCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 gnu.trove.impl.sync.TSynchronizedShortShortMap.valueCollection()Lgnu/trove/TShortCollection;: I11 Branch 3 IFNONNULL L121 - false
   * 3 gnu.trove.impl.sync.TSynchronizedShortShortMap.<init>(Lgnu/trove/map/TShortShortMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(414);
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = new TSynchronizedShortShortMap((TShortShortMap) tShortShortHashMap0);
      TSynchronizedShortCollection tSynchronizedShortCollection0 = (TSynchronizedShortCollection)tSynchronizedShortShortMap0.valueCollection();
      assertNotNull(tSynchronizedShortCollection0);
      
      TSynchronizedShortCollection tSynchronizedShortCollection1 = (TSynchronizedShortCollection)tSynchronizedShortShortMap0.valueCollection();
      assertSame(tSynchronizedShortCollection1, tSynchronizedShortCollection0);
  }
}

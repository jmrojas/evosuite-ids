/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TCharCharMapDecorator;
import gnu.trove.map.TCharCharMap;
import gnu.trove.map.hash.TCharCharHashMap;
import java.io.BufferedInputStream;
import java.io.FileDescriptor;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Locale;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TCharCharMapDecoratorEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TCharCharMapDecorator tCharCharMapDecorator0 = new TCharCharMapDecorator();
      String string0 = ")(aX& oN1C1\"!]@";
      int int0 = 0;
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, int0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: )(aX& oN1C1\"!]@://)(aX&%20oN1C1%22!%5D%40@)(aX& oN1C1\"!]@:0)(aX&%20oN1C1%22!%5D@?)(aX&%20oN1C1%22!]@#)(aX&%20oN1C1%22!]@
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TCharCharMapDecorator tCharCharMapDecorator0 = new TCharCharMapDecorator();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TCharCharMapDecorator tCharCharMapDecorator0 = new TCharCharMapDecorator();
      // Undeclared exception!
      try {
        tCharCharMapDecorator0.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TCharCharMap tCharCharMap0 = null;
      TCharCharMapDecorator tCharCharMapDecorator0 = new TCharCharMapDecorator(tCharCharMap0);
      String string0 = "";
      // Undeclared exception!
      try {
        tCharCharMapDecorator0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TCharCharMap tCharCharMap0 = null;
      TCharCharMapDecorator tCharCharMapDecorator0 = new TCharCharMapDecorator();
      tCharCharMapDecorator0.entrySet();
      Locale locale0 = Locale.UK;
      String string0 = locale0.getVariant();
      Character character0 = tCharCharMapDecorator0.remove((Object) string0);
      // Undeclared exception!
      try {
        tCharCharMapDecorator0.put(character0, character0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      char[] charArray0 = new char[6];
      char char0 = 'F';
      charArray0[0] = char0;
      char char1 = 'u';
      charArray0[1] = char1;
      char char2 = 'Y';
      charArray0[2] = char2;
      char char3 = 'y';
      charArray0[3] = char3;
      char char4 = '*';
      charArray0[4] = char4;
      char char5 = 'N';
      charArray0[5] = char5;
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap(charArray0, charArray0);
      TCharCharMapDecorator tCharCharMapDecorator0 = new TCharCharMapDecorator((TCharCharMap) tCharCharHashMap0);
      tCharCharMapDecorator0.clear();
      assertEquals("{}", tCharCharHashMap0.toString());
      assertEquals("{}", tCharCharMapDecorator0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = 0;
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap(int0);
      TCharCharMapDecorator tCharCharMapDecorator0 = new TCharCharMapDecorator((TCharCharMap) tCharCharHashMap0);
      tCharCharMapDecorator0.values();
      TCharCharMapDecorator tCharCharMapDecorator1 = new TCharCharMapDecorator();
      char char0 = '&';
      // Undeclared exception!
      try {
        tCharCharMapDecorator1.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TCharCharMapDecorator tCharCharMapDecorator0 = new TCharCharMapDecorator();
      tCharCharMapDecorator0.keySet();
      TCharCharMapDecorator tCharCharMapDecorator1 = new TCharCharMapDecorator();
      // Undeclared exception!
      try {
        tCharCharMapDecorator1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = (-453);
      TCharCharMapDecorator tCharCharMapDecorator0 = new TCharCharMapDecorator();
      FileDescriptor fileDescriptor0 = FileDescriptor.out;
      FileInputStream fileInputStream0 = new FileInputStream(fileDescriptor0);
      int int1 = 0;
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream((InputStream) fileInputStream0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 0;
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap(int0, int0);
      TCharCharMapDecorator tCharCharMapDecorator0 = new TCharCharMapDecorator((TCharCharMap) tCharCharHashMap0);
      String string0 = "";
      String string1 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string1, string0, string1);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://#
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TCharCharMapDecorator tCharCharMapDecorator0 = new TCharCharMapDecorator();
      tCharCharMapDecorator0.keySet();
      char char0 = 'u';
      Character character0 = Character.valueOf(char0);
      // Undeclared exception!
      try {
        tCharCharMapDecorator0.put(character0, (Character) char0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TCharCharMapDecorator tCharCharMapDecorator0 = new TCharCharMapDecorator();
      Locale locale0 = Locale.GERMAN;
      String string0 = locale0.getCountry();
      Character character0 = tCharCharMapDecorator0.remove((Object) string0);
      // Undeclared exception!
      try {
        tCharCharMapDecorator0.put(character0, character0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      char[] charArray0 = new char[6];
      char char0 = 'h';
      charArray0[0] = char0;
      char char1 = '_';
      charArray0[1] = char1;
      char char2 = 'a';
      charArray0[2] = char2;
      char char3 = 'L';
      charArray0[3] = char3;
      char char4 = 'G';
      charArray0[4] = char4;
      char char5 = 'Y';
      charArray0[5] = char5;
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap(charArray0, charArray0);
      TCharCharMapDecorator tCharCharMapDecorator0 = new TCharCharMapDecorator((TCharCharMap) tCharCharHashMap0);
      Locale locale0 = Locale.FRENCH;
      String string0 = locale0.getCountry();
      tCharCharMapDecorator0.containsKey((Object) string0);
      TCharCharMapDecorator tCharCharMapDecorator1 = new TCharCharMapDecorator((TCharCharMap) tCharCharHashMap0);
      assertEquals(false, tCharCharMapDecorator1.isEmpty());
  }

  @Test
  public void test13()  throws Throwable  {
      TCharCharMapDecorator tCharCharMapDecorator0 = new TCharCharMapDecorator();
      char char0 = 'T';
      Character character0 = Character.valueOf(char0);
      // Undeclared exception!
      try {
        tCharCharMapDecorator0.remove((Object) character0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

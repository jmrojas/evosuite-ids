/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TLongCollection;
import gnu.trove.function.TLongFunction;
import gnu.trove.map.TDoubleLongMap;
import gnu.trove.map.hash.TDoubleLongHashMap;
import gnu.trove.procedure.TDoubleLongProcedure;
import gnu.trove.procedure.TDoubleProcedure;
import gnu.trove.procedure.TLongProcedure;
import gnu.trove.set.TDoubleSet;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TDoubleLongHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.<init>(IF)V: root-Branch
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.setUp(I)I: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap((-608), (float) (-511L));
      assertEquals("{}", tDoubleLongHashMap0.toString());
  }

  //Test case number: 1
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.valueCollection()Lgnu/trove/TLongCollection;: root-Branch
   * 2 gnu.trove.map.hash.TDoubleLongHashMap$TValueView.<init>(Lgnu/trove/map/hash/TDoubleLongHashMap;)V: root-Branch
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.put(DJ)J: root-Branch
   * 4 gnu.trove.map.hash.TDoubleLongHashMap.doPut(DJI)J: I12 Branch 40 IFGE L214 - true
   * 5 gnu.trove.map.hash.TDoubleLongHashMap.doPut(DJI)J: I12 Branch 40 IFGE L214 - false
   * 6 gnu.trove.map.hash.TDoubleLongHashMap.doPut(DJI)J: I41 Branch 41 IFEQ L221 - true
   * 7 gnu.trove.map.hash.TDoubleLongHashMap.doPut(DJI)J: I41 Branch 41 IFEQ L221 - false
   * 8 gnu.trove.map.hash.TDoubleLongHashMap.<init>([D[J)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 9 gnu.trove.map.hash.TDoubleLongHashMap.<init>([D[J)V: I24 Branch 33 IF_ICMPGE L119 - false
   */

  @Test
  public void test1()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      long[] longArray0 = new long[7];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      TLongCollection tLongCollection0 = tDoubleLongHashMap0.valueCollection();
      assertEquals(1, tDoubleLongHashMap0.size());
      assertEquals(17, tDoubleLongHashMap0.capacity());
      assertEquals("{0.0=0}", tDoubleLongHashMap0.toString());
      assertEquals(false, tLongCollection0.isEmpty());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.removeAt(I)V: root-Branch
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.remove(D)J: I14 Branch 46 IFLT L276 - false
   */

  @Test
  public void test2()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      long[] longArray0 = new long[8];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      assertEquals(false, tDoubleLongHashMap0.isEmpty());
      
      long long0 = tDoubleLongHashMap0.remove(0.0);
      assertEquals(true, tDoubleLongHashMap0.isEmpty());
      assertEquals(0L, long0);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.containsKey(D)Z: root-Branch
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.<init>(I)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(1110);
      tDoubleLongHashMap0.containsKey((double) (-1650));
      assertEquals(2237, tDoubleLongHashMap0.capacity());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.forEachKey(Lgnu/trove/procedure/TDoubleProcedure;)Z: root-Branch
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.<init>(IFDJ)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(1, (float) 1, (double) 1, (-5L));
      boolean boolean0 = tDoubleLongHashMap0.forEachKey((TDoubleProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.keySet()Lgnu/trove/set/TDoubleSet;: root-Branch
   * 2 gnu.trove.map.hash.TDoubleLongHashMap$TKeyView.<init>(Lgnu/trove/map/hash/TDoubleLongHashMap;)V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(1, (float) 1, (double) 1, (-5L));
      TDoubleSet tDoubleSet0 = tDoubleLongHashMap0.keySet();
      assertEquals(true, tDoubleSet0.isEmpty());
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.increment(D)Z: root-Branch
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.adjustValue(DJ)Z: I9 Branch 71 IFGE L477 - false
   */

  @Test
  public void test6()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap((-1694));
      boolean boolean0 = tDoubleLongHashMap0.increment((double) (-1694));
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.iterator()Lgnu/trove/iterator/TDoubleLongIterator;: root-Branch
   * 2 gnu.trove.map.hash.TDoubleLongHashMap$TDoubleLongHashIterator.<init>(Lgnu/trove/map/hash/TDoubleLongHashMap;Lgnu/trove/map/hash/TDoubleLongHashMap;)V: root-Branch
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.<init>(Lgnu/trove/map/TDoubleLongMap;)V: I10 Branch 34 IFEQ L133 - false
   * 4 gnu.trove.map.hash.TDoubleLongHashMap.<init>(Lgnu/trove/map/TDoubleLongMap;)V: I40 Branch 35 IFEQ L139 - false
   * 5 gnu.trove.map.hash.TDoubleLongHashMap.<init>(Lgnu/trove/map/TDoubleLongMap;)V: I54 Branch 36 IFEQ L143 - false
   * 6 gnu.trove.map.hash.TDoubleLongHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 7 gnu.trove.map.hash.TDoubleLongHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 8 gnu.trove.map.hash.TDoubleLongHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 9 gnu.trove.map.hash.TDoubleLongHashMap.putAll(Lgnu/trove/map/TDoubleLongMap;)V: I15 Branch 43 IFEQ L243 - true
   */

  @Test
  public void test7()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap((-1918), (-1918), (-1918), (-1918));
      TDoubleLongHashMap tDoubleLongHashMap1 = new TDoubleLongHashMap((TDoubleLongMap) tDoubleLongHashMap0);
      assertEquals((-1918L), tDoubleLongHashMap1.getNoEntryValue());
      assertEquals((-1918.0), tDoubleLongHashMap1.getNoEntryKey(), 0.01D);
      assertEquals(3, tDoubleLongHashMap1.capacity());
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.clear()V: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap((-1918), (-1918), (-1918), (-1918));
      tDoubleLongHashMap0.clear();
      assertEquals("{}", tDoubleLongHashMap0.toString());
  }

  //Test case number: 9
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap$TDoubleLongHashIterator.key()D: root-Branch
   * 2 gnu.trove.map.hash.TDoubleLongHashMap$TDoubleLongHashIterator.advance()V: root-Branch
   * 3 gnu.trove.map.hash.TDoubleLongHashMap$TDoubleLongHashIterator.value()J: root-Branch
   * 4 gnu.trove.map.hash.TDoubleLongHashMap.<init>(Lgnu/trove/map/TDoubleLongMap;)V: I40 Branch 35 IFEQ L139 - true
   * 5 gnu.trove.map.hash.TDoubleLongHashMap.<init>(Lgnu/trove/map/TDoubleLongMap;)V: I54 Branch 36 IFEQ L143 - true
   * 6 gnu.trove.map.hash.TDoubleLongHashMap.putAll(Lgnu/trove/map/TDoubleLongMap;)V: I15 Branch 43 IFEQ L243 - false
   * 7 gnu.trove.map.hash.TDoubleLongHashMap.iterator()Lgnu/trove/iterator/TDoubleLongIterator;: root-Branch
   * 8 gnu.trove.map.hash.TDoubleLongHashMap.putAll(Lgnu/trove/map/TDoubleLongMap;)V: I15 Branch 43 IFEQ L243 - true
   * 9 gnu.trove.map.hash.TDoubleLongHashMap.<init>(Lgnu/trove/map/TDoubleLongMap;)V: I10 Branch 34 IFEQ L133 - false
   * 10 gnu.trove.map.hash.TDoubleLongHashMap$TDoubleLongHashIterator.<init>(Lgnu/trove/map/hash/TDoubleLongHashMap;Lgnu/trove/map/hash/TDoubleLongHashMap;)V: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      long[] longArray0 = new long[8];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      TDoubleLongHashMap tDoubleLongHashMap1 = new TDoubleLongHashMap((TDoubleLongMap) tDoubleLongHashMap0);
      assertEquals(23, tDoubleLongHashMap1.capacity());
      assertEquals(0L, tDoubleLongHashMap1.getNoEntryValue());
      assertEquals(1, tDoubleLongHashMap0.size());
      assertEquals("{0.0=0}", tDoubleLongHashMap0.toString());
      assertEquals(false, tDoubleLongHashMap1.isEmpty());
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.putIfAbsent(DJ)J: I9 Branch 39 IFGE L205 - false
   */

  @Test
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      long[] longArray0 = new long[8];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      long long0 = tDoubleLongHashMap0.putIfAbsent((double) 0L, 0L);
      assertEquals("{0.0=0}", tDoubleLongHashMap0.toString());
      assertEquals(17, tDoubleLongHashMap0.capacity());
      assertEquals(1, tDoubleLongHashMap0.size());
      assertEquals(0L, long0);
  }

  //Test case number: 11
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.get(D)J: I9 Branch 44 IFGE L253 - true
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 4 gnu.trove.map.hash.TDoubleLongHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 5 gnu.trove.map.hash.TDoubleLongHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 6 gnu.trove.map.hash.TDoubleLongHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 7 gnu.trove.map.hash.TDoubleLongHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 8 gnu.trove.map.hash.TDoubleLongHashMap.equals(Ljava/lang/Object;)Z: I85 Branch 78 IFEQ L1200 - true
   */

  @Test
  public void test11()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap((-1700));
      long[] longArray0 = new long[8];
      TDoubleLongHashMap tDoubleLongHashMap1 = new TDoubleLongHashMap(tDoubleLongHashMap0._set, longArray0);
      boolean boolean0 = tDoubleLongHashMap1.equals((Object) tDoubleLongHashMap1);
      assertEquals("{0.0=0}", tDoubleLongHashMap1.toString());
      assertEquals(true, boolean0);
      assertFalse(tDoubleLongHashMap1.equals(tDoubleLongHashMap0));
      assertEquals(1, tDoubleLongHashMap1.size());
      assertFalse(tDoubleLongHashMap0.equals(tDoubleLongHashMap1));
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.get(D)J: I9 Branch 44 IFGE L253 - false
   */

  @Test
  public void test12()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(1, (float) 1, (double) 1, (-5L));
      long long0 = tDoubleLongHashMap0.get((double) (-5L));
      assertEquals((-5L), long0);
  }

  //Test case number: 13
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - true
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.putIfAbsent(DJ)J: I9 Branch 39 IFGE L205 - true
   */

  @Test
  public void test13()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(1110);
      tDoubleLongHashMap0.putIfAbsent((double) 1110, (long) (-1650));
      boolean boolean0 = tDoubleLongHashMap0.isEmpty();
      assertEquals("{1110.0=-1650}", tDoubleLongHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - false
   */

  @Test
  public void test14()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(0, (float) 409L, (double) 409L, 0L);
      boolean boolean0 = tDoubleLongHashMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.remove(D)J: I14 Branch 46 IFLT L276 - true
   */

  @Test
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      long[] longArray0 = new long[8];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      long long0 = tDoubleLongHashMap0.remove(359.98616845108825);
      assertEquals(0L, long0);
      assertEquals(17, tDoubleLongHashMap0.capacity());
      assertEquals("{0.0=0}", tDoubleLongHashMap0.toString());
      assertEquals(1, tDoubleLongHashMap0.size());
  }

  //Test case number: 16
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.keys()[D: I34 Branch 48 IF_ICMPNE L304 - false
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.<init>()V: root-Branch
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.keys()[D: I27 Branch 47 IFLE L303 - true
   * 4 gnu.trove.map.hash.TDoubleLongHashMap.keys()[D: I27 Branch 47 IFLE L303 - false
   * 5 gnu.trove.map.hash.TDoubleLongHashMap.keys()[D: I34 Branch 48 IF_ICMPNE L304 - true
   */

  @Test
  public void test16()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      tDoubleLongHashMap0.put(0.0, (long) (-244));
      tDoubleLongHashMap0.keys();
      assertEquals("{0.0=-244}", tDoubleLongHashMap0.toString());
      assertEquals(1, tDoubleLongHashMap0.size());
  }

  //Test case number: 17
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.keys([D)[D: I10 Branch 49 IF_ICMPGE L315 - true
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.keys([D)[D: I37 Branch 50 IFLE L322 - true
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.keys([D)[D: I37 Branch 50 IFLE L322 - false
   * 4 gnu.trove.map.hash.TDoubleLongHashMap.keys([D)[D: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test17()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(1110);
      double[] doubleArray0 = tDoubleLongHashMap0.keys(tDoubleLongHashMap0._set);
      assertEquals(2237, tDoubleLongHashMap0.capacity());
      assertNotNull(doubleArray0);
  }

  //Test case number: 18
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.keys([D)[D: I10 Branch 49 IF_ICMPGE L315 - false
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.keys([D)[D: I44 Branch 51 IF_ICMPNE L323 - false
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.adjustOrPutValue(DJJ)J: I9 Branch 72 IFGE L491 - true
   * 4 gnu.trove.map.hash.TDoubleLongHashMap.adjustOrPutValue(DJJ)J: I58 Branch 73 IFEQ L502 - false
   * 5 gnu.trove.map.hash.TDoubleLongHashMap.keys([D)[D: I37 Branch 50 IFLE L322 - true
   * 6 gnu.trove.map.hash.TDoubleLongHashMap.keys([D)[D: I37 Branch 50 IFLE L322 - false
   * 7 gnu.trove.map.hash.TDoubleLongHashMap.keys([D)[D: I44 Branch 51 IF_ICMPNE L323 - true
   * 8 gnu.trove.map.hash.TDoubleLongHashMap.keys()[D: I27 Branch 47 IFLE L303 - true
   * 9 gnu.trove.map.hash.TDoubleLongHashMap.keys()[D: I27 Branch 47 IFLE L303 - false
   * 10 gnu.trove.map.hash.TDoubleLongHashMap.keys()[D: I34 Branch 48 IF_ICMPNE L304 - true
   */

  @Test
  public void test18()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      double[] doubleArray0 = tDoubleLongHashMap0.keys();
      tDoubleLongHashMap0.adjustOrPutValue((double) (-6.2534013F), (long) 0, (-1L));
      tDoubleLongHashMap0.keys(doubleArray0);
      assertEquals("{-6.253401279449463=-1}", tDoubleLongHashMap0.toString());
      assertEquals(1, tDoubleLongHashMap0.size());
  }

  //Test case number: 19
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.values()[J: I34 Branch 53 IF_ICMPNE L344 - false
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.adjustOrPutValue(DJJ)J: I9 Branch 72 IFGE L491 - true
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.adjustOrPutValue(DJJ)J: I58 Branch 73 IFEQ L502 - false
   * 4 gnu.trove.map.hash.TDoubleLongHashMap.values()[J: I27 Branch 52 IFLE L343 - true
   * 5 gnu.trove.map.hash.TDoubleLongHashMap.values()[J: I27 Branch 52 IFLE L343 - false
   * 6 gnu.trove.map.hash.TDoubleLongHashMap.values()[J: I34 Branch 53 IF_ICMPNE L344 - true
   */

  @Test
  public void test19()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      tDoubleLongHashMap0.adjustOrPutValue((double) (-6.2534013F), (long) 0, (-1L));
      tDoubleLongHashMap0.values();
      assertEquals(false, tDoubleLongHashMap0.isEmpty());
      assertEquals("{-6.253401279449463=-1}", tDoubleLongHashMap0.toString());
  }

  //Test case number: 20
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.values([J)[J: I10 Branch 54 IF_ICMPGE L355 - true
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.values([J)[J: I37 Branch 55 IFLE L362 - true
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.values([J)[J: I37 Branch 55 IFLE L362 - false
   * 4 gnu.trove.map.hash.TDoubleLongHashMap.values([J)[J: I44 Branch 56 IF_ICMPNE L363 - true
   * 5 gnu.trove.map.hash.TDoubleLongHashMap.values([J)[J: I44 Branch 56 IF_ICMPNE L363 - false
   */

  @Test
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      long[] longArray0 = new long[8];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      long[] longArray1 = tDoubleLongHashMap0.values(longArray0);
      assertEquals(1, tDoubleLongHashMap0.size());
      assertEquals(17, tDoubleLongHashMap0.capacity());
      assertSame(longArray0, longArray1);
      assertNotNull(longArray1);
      assertEquals("{0.0=0}", tDoubleLongHashMap0.toString());
  }

  //Test case number: 21
  /*
   * 12 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.values([J)[J: I10 Branch 54 IF_ICMPGE L355 - false
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.values()[J: I27 Branch 52 IFLE L343 - true
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.values()[J: I27 Branch 52 IFLE L343 - false
   * 4 gnu.trove.map.hash.TDoubleLongHashMap.values()[J: I34 Branch 53 IF_ICMPNE L344 - true
   * 5 gnu.trove.map.hash.TDoubleLongHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 6 gnu.trove.map.hash.TDoubleLongHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 7 gnu.trove.map.hash.TDoubleLongHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 8 gnu.trove.map.hash.TDoubleLongHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 9 gnu.trove.map.hash.TDoubleLongHashMap.values([J)[J: I37 Branch 55 IFLE L362 - true
   * 10 gnu.trove.map.hash.TDoubleLongHashMap.values([J)[J: I37 Branch 55 IFLE L362 - false
   * 11 gnu.trove.map.hash.TDoubleLongHashMap.values([J)[J: I44 Branch 56 IF_ICMPNE L363 - true
   * 12 gnu.trove.map.hash.TDoubleLongHashMap.values([J)[J: I44 Branch 56 IF_ICMPNE L363 - false
   */

  @Test
  public void test21()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap((-1918), (-1918), (-1918), (-1918));
      long[] longArray0 = tDoubleLongHashMap0.values();
      tDoubleLongHashMap0.put((double) (-1918), (long) (-1918));
      tDoubleLongHashMap0.values(longArray0);
      assertEquals(7, tDoubleLongHashMap0.capacity());
      assertEquals("{-1918.0=-1918}", tDoubleLongHashMap0.toString());
  }

  //Test case number: 22
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.containsValue(J)Z: I18 Branch 57 IFLE L376 - true
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.containsValue(J)Z: I18 Branch 57 IFLE L376 - false
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.containsValue(J)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 4 gnu.trove.map.hash.TDoubleLongHashMap.containsValue(J)Z: I25 Branch 58 IF_ICMPNE L377 - false
   * 5 gnu.trove.map.hash.TDoubleLongHashMap.containsValue(J)Z: I31 Branch 59 IFNE L377 - true
   */

  @Test
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      long[] longArray0 = new long[21];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      boolean boolean0 = tDoubleLongHashMap0.containsValue(409L);
      assertEquals(false, boolean0);
      assertEquals("{0.0=0}", tDoubleLongHashMap0.toString());
      assertEquals(1, tDoubleLongHashMap0.size());
      assertEquals(43, tDoubleLongHashMap0.capacity());
  }

  //Test case number: 23
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.containsValue(J)Z: I31 Branch 59 IFNE L377 - false
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.containsValue(J)Z: I18 Branch 57 IFLE L376 - false
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.containsValue(J)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 4 gnu.trove.map.hash.TDoubleLongHashMap.containsValue(J)Z: I25 Branch 58 IF_ICMPNE L377 - false
   */

  @Test
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[4] = (double) (-608);
      long[] longArray0 = new long[8];
      longArray0[4] = (long) (-608);
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      boolean boolean0 = tDoubleLongHashMap0.containsValue((long) (-608));
      assertEquals("{-608.0=-608, 0.0=0}", tDoubleLongHashMap0.toString());
      assertEquals(true, boolean0);
      assertEquals(2, tDoubleLongHashMap0.size());
      assertEquals(17, tDoubleLongHashMap0.capacity());
  }

  //Test case number: 24
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 60 IFLE L407 - true
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test24()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap((-1700));
      boolean boolean0 = tDoubleLongHashMap0.forEachValue((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 25
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - false
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test25()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      tDoubleLongHashMap0.put(0.0, (long) (-244));
      // Undeclared exception!
      try {
        tDoubleLongHashMap0.forEachValue((TLongProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I18 Branch 66 IFLE L434 - true
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I18 Branch 66 IFLE L434 - false
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test26()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      tDoubleLongHashMap0.transformValues((TLongFunction) null);
      assertEquals(23, tDoubleLongHashMap0.capacity());
  }

  //Test case number: 27
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I25 Branch 67 IF_ICMPNE L435 - false
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - true
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - false
   * 4 gnu.trove.map.hash.TDoubleLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I18 Branch 66 IFLE L434 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap((-1700));
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      hashMap0.put((Double) 2005.5127836104139, (Long) 0L);
      tDoubleLongHashMap0.putAll((Map<? extends Double, ? extends Long>) hashMap0);
      // Undeclared exception!
      try {
        tDoubleLongHashMap0.transformValues((TLongFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.retainEntries(Lgnu/trove/procedure/TDoubleLongProcedure;)Z: I31 Branch 68 IFLE L453 - true
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.retainEntries(Lgnu/trove/procedure/TDoubleLongProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.retainEntries(Lgnu/trove/procedure/TDoubleLongProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test28()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      boolean boolean0 = tDoubleLongHashMap0.retainEntries((TDoubleLongProcedure) null);
      assertEquals(23, tDoubleLongHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 29
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.retainEntries(Lgnu/trove/procedure/TDoubleLongProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - false
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.retainEntries(Lgnu/trove/procedure/TDoubleLongProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.retainEntries(Lgnu/trove/procedure/TDoubleLongProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test29()  throws Throwable  {
      long[] longArray0 = new long[1];
      double[] doubleArray0 = new double[2];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      // Undeclared exception!
      try {
        tDoubleLongHashMap0.retainEntries((TDoubleLongProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.adjustValue(DJ)Z: I9 Branch 71 IFGE L477 - true
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.increment(D)Z: root-Branch
   */

  @Test
  public void test30()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      long[] longArray0 = new long[21];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      boolean boolean0 = tDoubleLongHashMap0.increment((double) 0);
      assertEquals("{0.0=1}", tDoubleLongHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 31
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.adjustOrPutValue(DJJ)J: I9 Branch 72 IFGE L491 - false
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.adjustOrPutValue(DJJ)J: I58 Branch 73 IFEQ L502 - true
   */

  @Test
  public void test31()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      long[] longArray0 = new long[2];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      long long0 = tDoubleLongHashMap0.adjustOrPutValue(0.0, (-1L), 0L);
      assertEquals("{0.0=-1}", tDoubleLongHashMap0.toString());
      assertEquals((-1L), long0);
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - false
   */

  @Test
  public void test32()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(1, (float) 1, (double) 1, (-5L));
      boolean boolean0 = tDoubleLongHashMap0.equals((Object) 1);
      assertEquals(false, boolean0);
  }

  //Test case number: 33
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - false
   */

  @Test
  public void test33()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap((-1694));
      long[] longArray0 = new long[6];
      TDoubleLongHashMap tDoubleLongHashMap1 = new TDoubleLongHashMap(tDoubleLongHashMap0._set, longArray0);
      boolean boolean0 = tDoubleLongHashMap0.equals((Object) tDoubleLongHashMap1);
      assertFalse(tDoubleLongHashMap1.equals(tDoubleLongHashMap0));
      assertEquals(1, tDoubleLongHashMap1.size());
      assertEquals("{0.0=0}", tDoubleLongHashMap1.toString());
      assertEquals(false, boolean0);
      assertEquals(17, tDoubleLongHashMap1.capacity());
  }

  //Test case number: 34
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.equals(Ljava/lang/Object;)Z: I85 Branch 78 IFEQ L1200 - false
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.equals(Ljava/lang/Object;)Z: I89 Branch 79 IFEQ L1200 - false
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.equals(Ljava/lang/Object;)Z: I93 Branch 80 IFEQ L1200 - true
   */

  @Test
  public void test34()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      long[] longArray0 = new long[8];
      longArray0[5] = (-511L);
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      long[] longArray1 = new long[6];
      TDoubleLongHashMap tDoubleLongHashMap1 = new TDoubleLongHashMap(doubleArray0, longArray1);
      boolean boolean0 = tDoubleLongHashMap0.equals((Object) tDoubleLongHashMap1);
      assertTrue(tDoubleLongHashMap1.equals(tDoubleLongHashMap0));
      assertEquals(17, tDoubleLongHashMap1.capacity());
      assertEquals("{0.0=-511}", tDoubleLongHashMap0.toString());
      assertEquals(1, tDoubleLongHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 35
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.equals(Ljava/lang/Object;)Z: I89 Branch 79 IFEQ L1200 - true
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.<init>(I)V: root-Branch
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   */

  @Test
  public void test35()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap((-1700));
      long[] longArray0 = new long[8];
      TDoubleLongHashMap tDoubleLongHashMap1 = new TDoubleLongHashMap(tDoubleLongHashMap0._set, longArray0);
      long[] longArray1 = new long[6];
      longArray1[2] = (-608L);
      TDoubleLongHashMap tDoubleLongHashMap2 = new TDoubleLongHashMap(tDoubleLongHashMap0._set, longArray1);
      boolean boolean0 = tDoubleLongHashMap1.equals((Object) tDoubleLongHashMap2);
      assertEquals(1, tDoubleLongHashMap1.size());
      assertEquals(17, tDoubleLongHashMap2.capacity());
      assertEquals(true, boolean0);
      assertFalse(tDoubleLongHashMap0.equals(tDoubleLongHashMap2));
      assertEquals("{0.0=-608}", tDoubleLongHashMap2.toString());
  }

  //Test case number: 36
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.equals(Ljava/lang/Object;)Z: I93 Branch 80 IFEQ L1200 - false
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 4 gnu.trove.map.hash.TDoubleLongHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 5 gnu.trove.map.hash.TDoubleLongHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 6 gnu.trove.map.hash.TDoubleLongHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 7 gnu.trove.map.hash.TDoubleLongHashMap.equals(Ljava/lang/Object;)Z: I85 Branch 78 IFEQ L1200 - false
   * 8 gnu.trove.map.hash.TDoubleLongHashMap.equals(Ljava/lang/Object;)Z: I89 Branch 79 IFEQ L1200 - false
   * 9 gnu.trove.map.hash.TDoubleLongHashMap.get(D)J: I9 Branch 44 IFGE L253 - true
   */

  @Test
  public void test36()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[4] = (double) (-608);
      long[] longArray0 = new long[8];
      longArray0[4] = (long) (-608);
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      long[] longArray1 = new long[6];
      longArray1[4] = (-511L);
      TDoubleLongHashMap tDoubleLongHashMap1 = new TDoubleLongHashMap(doubleArray0, longArray1);
      boolean boolean0 = tDoubleLongHashMap0.equals((Object) tDoubleLongHashMap1);
      assertEquals(17, tDoubleLongHashMap1.capacity());
      assertEquals(2, tDoubleLongHashMap0.size());
      assertEquals(false, boolean0);
      assertEquals("{-608.0=-608, 0.0=0}", tDoubleLongHashMap0.toString());
      assertFalse(tDoubleLongHashMap1.equals(tDoubleLongHashMap0));
  }

  //Test case number: 37
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   * 4 gnu.trove.map.hash.TDoubleLongHashMap.<init>()V: root-Branch
   */

  @Test
  public void test37()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      int int0 = tDoubleLongHashMap0.hashCode();
      assertEquals(23, tDoubleLongHashMap0.capacity());
      assertEquals(0, int0);
  }

  //Test case number: 38
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - false
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.<init>(IFDJ)V: root-Branch
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.putIfAbsent(DJ)J: I9 Branch 39 IFGE L205 - true
   * 4 gnu.trove.map.hash.TDoubleLongHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 5 gnu.trove.map.hash.TDoubleLongHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 6 gnu.trove.map.hash.TDoubleLongHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   */

  @Test
  public void test38()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(1, (float) 1, (double) 1, (-5L));
      tDoubleLongHashMap0.putIfAbsent((-915.8641482036737), (long) 1);
      int int0 = tDoubleLongHashMap0.hashCode();
      assertEquals(false, tDoubleLongHashMap0.isEmpty());
      assertEquals(100930432, int0);
  }

  //Test case number: 39
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap$1.execute(DJ)Z: I4 Branch 115 IFEQ L1233 - true
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.toString()Ljava/lang/String;: root-Branch
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleLongProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 4 gnu.trove.map.hash.TDoubleLongHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleLongProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 5 gnu.trove.map.hash.TDoubleLongHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleLongProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 6 gnu.trove.map.hash.TDoubleLongHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleLongProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 7 gnu.trove.map.hash.TDoubleLongHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleLongProcedure;)Z: I39 Branch 65 IFNE L422 - true
   * 8 gnu.trove.map.hash.TDoubleLongHashMap$1.<init>(Lgnu/trove/map/hash/TDoubleLongHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 9 gnu.trove.map.hash.TDoubleLongHashMap$1.execute(DJ)Z: I4 Branch 115 IFEQ L1233 - false
   */

  @Test
  public void test39()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[5] = Double.NEGATIVE_INFINITY;
      long[] longArray0 = new long[21];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      String string0 = tDoubleLongHashMap0.toString();
      assertNotNull(string0);
      assertEquals(2, tDoubleLongHashMap0.size());
      assertEquals("{-Infinity=0, 0.0=0}", string0);
      assertEquals(43, tDoubleLongHashMap0.capacity());
  }

  //Test case number: 40
  /*
   * 12 covered goals:
   * 1 gnu.trove.map.hash.TDoubleLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - true
   * 2 gnu.trove.map.hash.TDoubleLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - false
   * 3 gnu.trove.map.hash.TDoubleLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - true
   * 4 gnu.trove.map.hash.TDoubleLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - false
   * 5 gnu.trove.map.hash.TDoubleLongHashMap.put(DJ)J: root-Branch
   * 6 gnu.trove.map.hash.TDoubleLongHashMap.setUp(I)I: root-Branch
   * 7 gnu.trove.map.hash.TDoubleLongHashMap.doPut(DJI)J: I12 Branch 40 IFGE L214 - true
   * 8 gnu.trove.map.hash.TDoubleLongHashMap.doPut(DJI)J: I12 Branch 40 IFGE L214 - false
   * 9 gnu.trove.map.hash.TDoubleLongHashMap.doPut(DJI)J: I41 Branch 41 IFEQ L221 - true
   * 10 gnu.trove.map.hash.TDoubleLongHashMap.doPut(DJI)J: I41 Branch 41 IFEQ L221 - false
   * 11 gnu.trove.map.hash.TDoubleLongHashMap.<init>([D[J)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 12 gnu.trove.map.hash.TDoubleLongHashMap.<init>([D[J)V: I24 Branch 33 IF_ICMPGE L119 - false
   */

  @Test
  public void test40()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      long[] longArray0 = new long[7];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tDoubleLongHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(17, tDoubleLongHashMap0.capacity());
      assertEquals("{0.0=0}", tDoubleLongHashMap0.toString());
      assertEquals(1, tDoubleLongHashMap0.size());
      assertEquals(false, tDoubleLongHashMap0.isEmpty());
  }
}

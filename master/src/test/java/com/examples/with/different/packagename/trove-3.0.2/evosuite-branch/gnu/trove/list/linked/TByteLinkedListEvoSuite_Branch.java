/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.list.linked;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TByteCollection;
import gnu.trove.impl.sync.TSynchronizedRandomAccessByteList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessByteList;
import gnu.trove.list.TByteList;
import gnu.trove.list.array.TByteArrayList;
import gnu.trove.list.linked.TByteLinkedList;
import gnu.trove.procedure.TByteProcedure;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Random;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TByteLinkedListEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 24 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList$TByteLink.getNext()Lgnu/trove/list/linked/TByteLinkedList$TByteLink;: root-Branch
   * 2 gnu.trove.list.linked.TByteLinkedList$TByteLink.setNext(Lgnu/trove/list/linked/TByteLinkedList$TByteLink;)V: root-Branch
   * 3 gnu.trove.list.linked.TByteLinkedList$TByteLink.<init>(B)V: root-Branch
   * 4 gnu.trove.list.linked.TByteLinkedList$TByteLink.getValue()B: root-Branch
   * 5 gnu.trove.list.linked.TByteLinkedList$TByteLink.setPrevious(Lgnu/trove/list/linked/TByteLinkedList$TByteLink;)V: root-Branch
   * 6 gnu.trove.list.linked.TByteLinkedList.size()I: root-Branch
   * 7 gnu.trove.list.linked.TByteLinkedList.<init>()V: root-Branch
   * 8 gnu.trove.list.linked.TByteLinkedList.isEmpty()Z: I4 Branch 4 IFNE L81 - true
   * 9 gnu.trove.list.linked.TByteLinkedList.add(B)Z: I12 Branch 5 IFEQ L87 - true
   * 10 gnu.trove.list.linked.TByteLinkedList.add(B)Z: I12 Branch 5 IFEQ L87 - false
   * 11 gnu.trove.list.linked.TByteLinkedList.containsAll([B)Z: I4 Branch 35 IFEQ L369 - true
   * 12 gnu.trove.list.linked.TByteLinkedList.containsAll([B)Z: I23 Branch 36 IF_ICMPGE L372 - true
   * 13 gnu.trove.list.linked.TByteLinkedList.containsAll([B)Z: I23 Branch 36 IF_ICMPGE L372 - false
   * 14 gnu.trove.list.linked.TByteLinkedList.containsAll([B)Z: I33 Branch 37 IFNE L373 - true
   * 15 gnu.trove.list.linked.TByteLinkedList.addAll([B)Z: I18 Branch 42 IF_ICMPGE L405 - true
   * 16 gnu.trove.list.linked.TByteLinkedList.addAll([B)Z: I18 Branch 42 IF_ICMPGE L405 - false
   * 17 gnu.trove.list.linked.TByteLinkedList.addAll([B)Z: I28 Branch 43 IFEQ L406 - false
   * 18 gnu.trove.list.linked.TByteLinkedList.contains(B)Z: I4 Branch 93 IFEQ L801 - true
   * 19 gnu.trove.list.linked.TByteLinkedList.contains(B)Z: I17 Branch 94 IFEQ L804 - false
   * 20 gnu.trove.list.linked.TByteLinkedList.contains(B)Z: I23 Branch 95 IF_ICMPNE L805 - true
   * 21 gnu.trove.list.linked.TByteLinkedList.contains(B)Z: I23 Branch 95 IF_ICMPNE L805 - false
   * 22 gnu.trove.list.linked.TByteLinkedList.got(Ljava/lang/Object;)Z: I3 Branch 109 IFNULL L1000 - false
   * 23 gnu.trove.list.linked.TByteLinkedList.no(Ljava/lang/Object;)Z: I3 Branch 110 IFNONNULL L1004 - true
   * 24 gnu.trove.list.linked.TByteLinkedList.no(Ljava/lang/Object;)Z: I3 Branch 110 IFNONNULL L1004 - false
   */

  @Test
  public void test0()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-1);
      tByteLinkedList0.addAll(byteArray0);
      boolean boolean0 = tByteLinkedList0.containsAll(byteArray0);
      assertEquals(10, tByteLinkedList0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TByteLinkedList.clear()V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      tByteLinkedList0.clear();
      assertEquals(true, tByteLinkedList0.isEmpty());
      assertEquals(0, tByteLinkedList0.size());
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.insert(I[B)V: root-Branch
   * 2 gnu.trove.list.linked.TByteLinkedList.insert(ILgnu/trove/list/linked/TByteLinkedList;)V: I20 Branch 8 IF_ACMPNE L138 - false
   * 3 gnu.trove.list.linked.TByteLinkedList.link([BII)Lgnu/trove/list/linked/TByteLinkedList;: I13 Branch 11 IF_ICMPGE L173 - true
   * 4 gnu.trove.list.linked.TByteLinkedList.link([BII)Lgnu/trove/list/linked/TByteLinkedList;: I13 Branch 11 IF_ICMPGE L173 - false
   * 5 gnu.trove.list.linked.TByteLinkedList.getLinkAt(I)Lgnu/trove/list/linked/TByteLinkedList$TByteLink;: I5 Branch 14 IF_ICMPLT L204 - false
   */

  @Test
  public void test2()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      byte[] byteArray0 = new byte[29];
      // Undeclared exception!
      try {
        tByteLinkedList0.insert((int) (byte)0, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TByteLinkedList.indexOf(B)I: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      // Undeclared exception!
      try {
        tByteLinkedList0.indexOf((byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 4
  /*
   * 6 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.insert(IB)V: root-Branch
   * 2 gnu.trove.list.linked.TByteLinkedList.getLinkAt(I)Lgnu/trove/list/linked/TByteLinkedList$TByteLink;: I5 Branch 14 IF_ICMPLT L204 - true
   * 3 gnu.trove.list.linked.TByteLinkedList.getLinkAt(I)Lgnu/trove/list/linked/TByteLinkedList$TByteLink;: I17 Branch 15 IF_ICMPGT L207 - false
   * 4 gnu.trove.list.linked.TByteLinkedList.getLink(Lgnu/trove/list/linked/TByteLinkedList$TByteLink;IIZ)Lgnu/trove/list/linked/TByteLinkedList$TByteLink;: I8 Branch 16 IFEQ L236 - true
   * 5 gnu.trove.list.linked.TByteLinkedList.insert(ILgnu/trove/list/linked/TByteLinkedList;)V: I20 Branch 8 IF_ACMPNE L138 - false
   * 6 gnu.trove.list.linked.TByteLinkedList.got(Ljava/lang/Object;)Z: I3 Branch 109 IFNULL L1000 - true
   */

  @Test
  public void test4()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessByteList0.insert((int) (byte) (-13), (byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 10 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.insert(I[BII)V: root-Branch
   * 2 gnu.trove.list.linked.TByteLinkedList.<init>(Lgnu/trove/list/TByteList;)V: I29 Branch 3 IFEQ L63 - true
   * 3 gnu.trove.list.linked.TByteLinkedList.<init>(Lgnu/trove/list/TByteList;)V: I29 Branch 3 IFEQ L63 - false
   * 4 gnu.trove.list.linked.TByteLinkedList.insert(ILgnu/trove/list/linked/TByteLinkedList;)V: I20 Branch 8 IF_ACMPNE L138 - true
   * 5 gnu.trove.list.linked.TByteLinkedList.insert(ILgnu/trove/list/linked/TByteLinkedList;)V: I48 Branch 9 IFEQ L147 - false
   * 6 gnu.trove.list.linked.TByteLinkedList.insert(ILgnu/trove/list/linked/TByteLinkedList;)V: I53 Branch 10 IFNE L148 - true
   * 7 gnu.trove.list.linked.TByteLinkedList.getLink(Lgnu/trove/list/linked/TByteLinkedList$TByteLink;IIZ)Lgnu/trove/list/linked/TByteLinkedList$TByteLink;: I8 Branch 16 IFEQ L236 - false
   * 8 gnu.trove.list.linked.TByteLinkedList.getLink(Lgnu/trove/list/linked/TByteLinkedList$TByteLink;IIZ)Lgnu/trove/list/linked/TByteLinkedList$TByteLink;: I13 Branch 17 IF_ICMPNE L237 - true
   * 9 gnu.trove.list.linked.TByteLinkedList.getLink(Lgnu/trove/list/linked/TByteLinkedList$TByteLink;IIZ)Lgnu/trove/list/linked/TByteLinkedList$TByteLink;: I22 Branch 18 IFEQ L241 - false
   * 10 gnu.trove.list.linked.TByteLinkedList.getLink(Lgnu/trove/list/linked/TByteLinkedList$TByteLink;IIZ)Lgnu/trove/list/linked/TByteLinkedList$TByteLink;: I33 Branch 19 IFEQ L242 - false
   */

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, (byte)113);
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList((TByteList) tByteArrayList0);
      // Undeclared exception!
      try {
        tByteLinkedList0.insert((int) (byte) (-73), byteArray0, (int) (byte)0, (int) (byte) (-10));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.toArray([BII)[B: root-Branch
   * 2 gnu.trove.list.linked.TByteLinkedList.toArray([B)[B: root-Branch
   * 3 gnu.trove.list.linked.TByteLinkedList.toArray([BIII)[B: I3 Branch 69 IFNE L639 - false
   */

  @Test
  public void test6()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      byte[] byteArray0 = new byte[7];
      byte[] byteArray1 = tByteLinkedList0.toArray(byteArray0);
      assertSame(byteArray0, byteArray1);
  }

  //Test case number: 7
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.binarySearch(B)I: root-Branch
   * 2 gnu.trove.list.linked.TByteLinkedList.binarySearch(BII)I: I3 Branch 82 IFGE L723 - true
   * 3 gnu.trove.list.linked.TByteLinkedList.binarySearch(BII)I: I16 Branch 83 IF_ICMPLE L727 - true
   * 4 gnu.trove.list.linked.TByteLinkedList.binarySearch(BII)I: I40 Branch 84 IF_ICMPGE L732 - true
   * 5 gnu.trove.list.linked.TByteLinkedList.binarySearch(BII)I: I66 Branch 85 IF_ICMPGE L742 - true
   */

  @Test
  public void test7()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      int int0 = tByteLinkedList0.binarySearch((byte) (-27));
      assertEquals((-1), int0);
      assertEquals(true, tByteLinkedList0.isEmpty());
  }

  //Test case number: 8
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.set(I[B)V: root-Branch
   * 2 gnu.trove.list.linked.TByteLinkedList.set(IB)B: I5 Branch 20 IF_ICMPLE L251 - true
   * 3 gnu.trove.list.linked.TByteLinkedList.set(IB)B: I35 Branch 21 IFEQ L256 - false
   * 4 gnu.trove.list.linked.TByteLinkedList.set(I[BII)V: I7 Branch 22 IF_ICMPGE L271 - false
   */

  @Test
  public void test8()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try {
        tByteLinkedList0.set((int) (byte)0, byteArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // at offset 0
         //
      }
  }

  //Test case number: 9
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.lastIndexOf(B)I: root-Branch
   * 2 gnu.trove.list.linked.TByteLinkedList.isEmpty()Z: I4 Branch 4 IFNE L81 - false
   * 3 gnu.trove.list.linked.TByteLinkedList.lastIndexOf(IB)I: I4 Branch 90 IFEQ L784 - false
   */

  @Test
  public void test9()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      int int0 = tByteLinkedList0.lastIndexOf((byte)0);
      assertEquals((-1), int0);
      assertEquals(true, tByteLinkedList0.isEmpty());
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.fill(B)V: root-Branch
   * 2 gnu.trove.list.linked.TByteLinkedList.fill(IIB)V: I3 Branch 77 IFGE L693 - true
   * 3 gnu.trove.list.linked.TByteLinkedList.fill(IIB)V: I22 Branch 78 IF_ICMPLE L699 - true
   * 4 gnu.trove.list.linked.TByteLinkedList.fill(IIB)V: I74 Branch 81 IF_ICMPGE L708 - true
   * 5 gnu.trove.list.linked.TByteLinkedList.<init>(B)V: root-Branch
   */

//   @Test
//   public void test10()  throws Throwable  {
//       TByteLinkedList tByteLinkedList0 = new TByteLinkedList((byte) (-15));
//       tByteLinkedList0.fill((byte)44);
//       assertEquals(-15, tByteLinkedList0.getNoEntryValue());
//       assertEquals(0, tByteLinkedList0.size());
//       assertEquals(true, tByteLinkedList0.isEmpty());
//   }

  //Test case number: 11
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.toArray(II)[B: root-Branch
   * 2 gnu.trove.list.linked.TByteLinkedList.toArray([BIII)[B: I3 Branch 69 IFNE L639 - false
   */

//   @Test
//   public void test11()  throws Throwable  {
//       TByteLinkedList tByteLinkedList0 = new TByteLinkedList((byte) (-15));
//       byte[] byteArray0 = tByteLinkedList0.toArray((int) (byte)0, 0);
//       assertEquals(-15, tByteLinkedList0.getNoEntryValue());
//       assertNotNull(byteArray0);
//   }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TByteLinkedList.add([BII)V: I7 Branch 7 IF_ICMPGE L110 - true
   */

  @Test
  public void test12()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      byte[] byteArray0 = new byte[2];
      tByteLinkedList0.add(byteArray0, 1651, (int) (byte) (-49));
      assertEquals("{}", tByteLinkedList0.toString());
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TByteLinkedList.add([BII)V: I7 Branch 7 IF_ICMPGE L110 - false
   */

  @Test
  public void test13()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try {
        tByteLinkedList0.add(byteArray0, (-1), (int) (byte)78);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
      }
  }

  //Test case number: 14
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.get(I)B: I5 Branch 12 IF_ICMPLE L182 - true
   * 2 gnu.trove.list.linked.TByteLinkedList.get(I)B: I35 Branch 13 IFEQ L187 - false
   * 3 gnu.trove.list.linked.TByteLinkedList.getLink(Lgnu/trove/list/linked/TByteLinkedList$TByteLink;IIZ)Lgnu/trove/list/linked/TByteLinkedList$TByteLink;: I8 Branch 16 IFEQ L236 - true
   */

  @Test
  public void test14()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      tByteLinkedList0.get((int) (byte) (-27));
      assertEquals(0, tByteLinkedList0.size());
      assertEquals(true, tByteLinkedList0.isEmpty());
  }

  //Test case number: 15
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.remove(B)Z: I12 Branch 23 IFEQ L293 - false
   * 2 gnu.trove.list.linked.TByteLinkedList.remove(B)Z: I18 Branch 24 IF_ICMPNE L295 - true
   * 3 gnu.trove.list.linked.TByteLinkedList.remove(B)Z: I12 Branch 23 IFEQ L293 - true
   */

  @Test
  public void test15()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      tByteLinkedList0.add((byte) (-14));
      boolean boolean0 = tByteLinkedList0.remove((byte)10);
      assertEquals(false, tByteLinkedList0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 16
  /*
   * 20 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.removeLink(Lgnu/trove/list/linked/TByteLinkedList$TByteLink;)V: I30 Branch 26 IFEQ L319 - false
   * 2 gnu.trove.list.linked.TByteLinkedList.retainAll([B)Z: I17 Branch 48 IFEQ L445 - true
   * 3 gnu.trove.list.linked.TByteLinkedList.retainAll([B)Z: I17 Branch 48 IFEQ L445 - false
   * 4 gnu.trove.list.linked.TByteLinkedList.retainAll([B)Z: I24 Branch 49 IFGE L446 - true
   * 5 gnu.trove.list.linked.TByteLinkedList.removeAll([B)Z: I24 Branch 55 IFLT L487 - true
   * 6 gnu.trove.list.linked.TByteLinkedList.removeAll([B)Z: I17 Branch 54 IFEQ L486 - true
   * 7 gnu.trove.list.linked.TByteLinkedList.removeAll([B)Z: I17 Branch 54 IFEQ L486 - false
   * 8 gnu.trove.list.linked.TByteLinkedList.removeAll([B)Z: I24 Branch 55 IFLT L487 - false
   * 9 gnu.trove.list.linked.TByteLinkedList$TByteLink.getPrevious()Lgnu/trove/list/linked/TByteLinkedList$TByteLink;: root-Branch
   * 10 gnu.trove.list.linked.TByteLinkedList$1.hasNext()Z: root-Branch
   * 11 gnu.trove.list.linked.TByteLinkedList$1.<init>(Lgnu/trove/list/linked/TByteLinkedList;)V: root-Branch
   * 12 gnu.trove.list.linked.TByteLinkedList$1.remove()V: I4 Branch 2 IFNONNULL L834 - true
   * 13 gnu.trove.list.linked.TByteLinkedList$1.next()B: I5 Branch 1 IFEQ L819 - true
   * 14 gnu.trove.list.linked.TByteLinkedList.iterator()Lgnu/trove/iterator/TByteIterator;: root-Branch
   * 15 gnu.trove.list.linked.TByteLinkedList.removeLink(Lgnu/trove/list/linked/TByteLinkedList$TByteLink;)V: I4 Branch 25 IFEQ L311 - true
   * 16 gnu.trove.list.linked.TByteLinkedList.removeLink(Lgnu/trove/list/linked/TByteLinkedList$TByteLink;)V: I30 Branch 26 IFEQ L319 - true
   * 17 gnu.trove.list.linked.TByteLinkedList.removeLink(Lgnu/trove/list/linked/TByteLinkedList$TByteLink;)V: I46 Branch 27 IFEQ L326 - true
   * 18 gnu.trove.list.linked.TByteLinkedList.removeLink(Lgnu/trove/list/linked/TByteLinkedList$TByteLink;)V: I46 Branch 27 IFEQ L326 - false
   * 19 gnu.trove.list.linked.TByteLinkedList.add([B)V: I14 Branch 6 IF_ICMPGE L103 - true
   * 20 gnu.trove.list.linked.TByteLinkedList.add([B)V: I14 Branch 6 IF_ICMPGE L103 - false
   */

  @Test
  public void test16()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0);
      byte[] byteArray0 = new byte[10];
      byteArray0[3] = (byte)63;
      tSynchronizedRandomAccessByteList0.add(byteArray0);
      tByteLinkedList0.retainAll(byteArray0);
      byteArray0[9] = (byte) (-1);
      boolean boolean0 = tSynchronizedRandomAccessByteList0.removeAll(byteArray0);
      assertEquals(1, tByteLinkedList0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.containsAll(Ljava/util/Collection;)Z: I4 Branch 28 IFEQ L339 - true
   * 2 gnu.trove.list.linked.TByteLinkedList.containsAll(Ljava/util/Collection;)Z: I17 Branch 29 IFEQ L342 - true
   */

  @Test
  public void test17()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0);
      byte[] byteArray0 = new byte[29];
      tSynchronizedRandomAccessByteList0.add(byteArray0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      boolean boolean0 = tByteLinkedList0.containsAll((Collection<?>) linkedList0);
      assertEquals(29, tByteLinkedList0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TByteLinkedList.containsAll(Ljava/util/Collection;)Z: I4 Branch 28 IFEQ L339 - false
   */

  @Test
  public void test18()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      boolean boolean0 = tByteLinkedList0.containsAll((Collection<?>) linkedList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TByteLinkedList.containsAll(Lgnu/trove/TByteCollection;)Z: I4 Branch 32 IFEQ L356 - false
   */

  @Test
  public void test19()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0);
      boolean boolean0 = tByteLinkedList0.containsAll((TByteCollection) tSynchronizedRandomAccessByteList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TByteLinkedList.addAll(Ljava/util/Collection;)Z: I12 Branch 38 IFEQ L382 - true
   */

  @Test
  public void test20()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      LinkedList<Byte> linkedList0 = new LinkedList<Byte>();
      boolean boolean0 = tByteLinkedList0.addAll((Collection<? extends Byte>) linkedList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TByteLinkedList.addAll(Lgnu/trove/TByteCollection;)Z: I12 Branch 40 IFEQ L393 - true
   */

  @Test
  public void test21()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      boolean boolean0 = tByteLinkedList0.addAll((TByteCollection) tByteLinkedList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 22
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.retainAll(Ljava/util/Collection;)Z: I13 Branch 44 IFEQ L417 - true
   * 2 gnu.trove.list.linked.TByteLinkedList.link([BII)Lgnu/trove/list/linked/TByteLinkedList;: I13 Branch 11 IF_ICMPGE L173 - true
   */

  @Test
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TByteLinkedList tByteLinkedList0 = TByteLinkedList.link(byteArray0, 11, 0);
      assertNotNull(tByteLinkedList0);
      
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      boolean boolean0 = tByteLinkedList0.retainAll((Collection<?>) linkedList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.retainAll(Lgnu/trove/TByteCollection;)Z: I13 Branch 46 IFEQ L430 - false
   * 2 gnu.trove.list.linked.TByteLinkedList.retainAll(Lgnu/trove/TByteCollection;)Z: I20 Branch 47 IFNE L431 - true
   * 3 gnu.trove.list.linked.TByteLinkedList.retainAll(Lgnu/trove/TByteCollection;)Z: I13 Branch 46 IFEQ L430 - true
   */

  @Test
  public void test23()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0);
      byte[] byteArray0 = new byte[29];
      tSynchronizedRandomAccessByteList0.add(byteArray0);
      boolean boolean0 = tByteLinkedList0.retainAll((TByteCollection) tByteLinkedList0);
      assertEquals(29, tByteLinkedList0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 24
  /*
   * 14 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.retainAll(Lgnu/trove/TByteCollection;)Z: I20 Branch 47 IFNE L431 - false
   * 2 gnu.trove.list.linked.TByteLinkedList.contains(B)Z: I4 Branch 93 IFEQ L801 - false
   * 3 gnu.trove.list.linked.TByteLinkedList.getLink(Lgnu/trove/list/linked/TByteLinkedList$TByteLink;IIZ)Lgnu/trove/list/linked/TByteLinkedList$TByteLink;: I8 Branch 16 IFEQ L236 - false
   * 4 gnu.trove.list.linked.TByteLinkedList.getLink(Lgnu/trove/list/linked/TByteLinkedList$TByteLink;IIZ)Lgnu/trove/list/linked/TByteLinkedList$TByteLink;: I13 Branch 17 IF_ICMPNE L237 - false
   * 5 gnu.trove.list.linked.TByteLinkedList.getLinkAt(I)Lgnu/trove/list/linked/TByteLinkedList$TByteLink;: I5 Branch 14 IF_ICMPLT L204 - true
   * 6 gnu.trove.list.linked.TByteLinkedList.getLinkAt(I)Lgnu/trove/list/linked/TByteLinkedList$TByteLink;: I17 Branch 15 IF_ICMPGT L207 - false
   * 7 gnu.trove.list.linked.TByteLinkedList.isEmpty()Z: I4 Branch 4 IFNE L81 - false
   * 8 gnu.trove.list.linked.TByteLinkedList.retainAll(Lgnu/trove/TByteCollection;)Z: I13 Branch 46 IFEQ L430 - true
   * 9 gnu.trove.list.linked.TByteLinkedList.retainAll(Lgnu/trove/TByteCollection;)Z: I13 Branch 46 IFEQ L430 - false
   * 10 gnu.trove.list.linked.TByteLinkedList.subList(II)Lgnu/trove/list/TByteList;: I4 Branch 64 IF_ICMPGE L592 - true
   * 11 gnu.trove.list.linked.TByteLinkedList.subList(II)Lgnu/trove/list/TByteList;: I28 Branch 65 IF_ICMPGE L596 - true
   * 12 gnu.trove.list.linked.TByteLinkedList.subList(II)Lgnu/trove/list/TByteList;: I51 Branch 66 IFGE L600 - true
   * 13 gnu.trove.list.linked.TByteLinkedList.subList(II)Lgnu/trove/list/TByteList;: I64 Branch 67 IF_ICMPLE L603 - true
   * 14 gnu.trove.list.linked.TByteLinkedList.subList(II)Lgnu/trove/list/TByteList;: I99 Branch 68 IF_ICMPGE L609 - true
   */

  @Test
  public void test24()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0);
      byte[] byteArray0 = new byte[29];
      tSynchronizedRandomAccessByteList0.add(byteArray0);
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList1 = (TSynchronizedRandomAccessByteList)tSynchronizedRandomAccessByteList0.subList(0, (int) (byte)0);
      assertEquals(false, tSynchronizedRandomAccessByteList0.isEmpty());
      
      boolean boolean0 = tByteLinkedList0.retainAll((TByteCollection) tSynchronizedRandomAccessByteList1);
      assertEquals(true, boolean0);
  }

  //Test case number: 25
  /*
   * 7 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.removeAll(Ljava/util/Collection;)Z: I13 Branch 50 IFEQ L458 - false
   * 2 gnu.trove.list.linked.TByteLinkedList.removeAll(Ljava/util/Collection;)Z: I21 Branch 51 IFLE L459 - true
   * 3 gnu.trove.list.linked.TByteLinkedList.fill(IIB)V: I22 Branch 78 IF_ICMPLE L699 - false
   * 4 gnu.trove.list.linked.TByteLinkedList.fill(IIB)V: I31 Branch 79 IF_ICMPGE L700 - true
   * 5 gnu.trove.list.linked.TByteLinkedList.fill(IIB)V: I54 Branch 80 IF_ICMPGE L704 - true
   * 6 gnu.trove.list.linked.TByteLinkedList.fill(IIB)V: I54 Branch 80 IF_ICMPGE L704 - false
   * 7 gnu.trove.list.linked.TByteLinkedList.removeAll(Ljava/util/Collection;)Z: I13 Branch 50 IFEQ L458 - true
   */

  @Test
  public void test25()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      tByteLinkedList0.fill(1480, 16, (byte)78);
      LinkedList<Byte> linkedList0 = new LinkedList<Byte>();
      boolean boolean0 = tByteLinkedList0.removeAll((Collection<?>) linkedList0);
      assertEquals(16, tByteLinkedList0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 26
  /*
   * 15 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.removeAll(Lgnu/trove/TByteCollection;)Z: I13 Branch 52 IFEQ L471 - false
   * 2 gnu.trove.list.linked.TByteLinkedList.removeAll(Lgnu/trove/TByteCollection;)Z: I20 Branch 53 IFEQ L472 - false
   * 3 gnu.trove.list.linked.TByteLinkedList$TByteLink.getPrevious()Lgnu/trove/list/linked/TByteLinkedList$TByteLink;: root-Branch
   * 4 gnu.trove.list.linked.TByteLinkedList$1.remove()V: I4 Branch 2 IFNONNULL L834 - true
   * 5 gnu.trove.list.linked.TByteLinkedList$1.next()B: I5 Branch 1 IFEQ L819 - true
   * 6 gnu.trove.list.linked.TByteLinkedList.removeLink(Lgnu/trove/list/linked/TByteLinkedList$TByteLink;)V: I4 Branch 25 IFEQ L311 - true
   * 7 gnu.trove.list.linked.TByteLinkedList.removeLink(Lgnu/trove/list/linked/TByteLinkedList$TByteLink;)V: I30 Branch 26 IFEQ L319 - true
   * 8 gnu.trove.list.linked.TByteLinkedList.removeLink(Lgnu/trove/list/linked/TByteLinkedList$TByteLink;)V: I46 Branch 27 IFEQ L326 - true
   * 9 gnu.trove.list.linked.TByteLinkedList.removeLink(Lgnu/trove/list/linked/TByteLinkedList$TByteLink;)V: I46 Branch 27 IFEQ L326 - false
   * 10 gnu.trove.list.linked.TByteLinkedList.removeAll(Lgnu/trove/TByteCollection;)Z: I13 Branch 52 IFEQ L471 - true
   * 11 gnu.trove.list.linked.TByteLinkedList.contains(B)Z: I4 Branch 93 IFEQ L801 - true
   * 12 gnu.trove.list.linked.TByteLinkedList.contains(B)Z: I17 Branch 94 IFEQ L804 - false
   * 13 gnu.trove.list.linked.TByteLinkedList.contains(B)Z: I23 Branch 95 IF_ICMPNE L805 - false
   * 14 gnu.trove.list.linked.TByteLinkedList.add([B)V: I14 Branch 6 IF_ICMPGE L103 - true
   * 15 gnu.trove.list.linked.TByteLinkedList.add([B)V: I14 Branch 6 IF_ICMPGE L103 - false
   */

  @Test
  public void test26()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0);
      byte[] byteArray0 = new byte[29];
      tSynchronizedRandomAccessByteList0.add(byteArray0);
      assertEquals(29, tByteLinkedList0.size());
      
      boolean boolean0 = tSynchronizedRandomAccessByteList0.removeAll((TByteCollection) tByteLinkedList0);
      assertEquals(true, boolean0);
  }

  //Test case number: 27
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.removeAt(I)B: I10 Branch 56 IFEQ L498 - false
   * 2 gnu.trove.list.linked.TByteLinkedList.remove(II)V: I7 Branch 57 IF_ICMPGE L508 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList((byte) (-15));
      // Undeclared exception!
      try {
        tByteLinkedList0.remove(566, 566);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no elemenet at 566
         //
      }
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TByteLinkedList.remove(II)V: I7 Branch 57 IF_ICMPGE L508 - true
   */

  @Test
  public void test28()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      tByteLinkedList0.remove((int) (byte)0, (-128));
      assertEquals(0, tByteLinkedList0.size());
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TByteLinkedList.reverse()V: I19 Branch 59 IFEQ L531 - true
   */

  @Test
  public void test29()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      tByteLinkedList0.reverse();
      assertEquals(true, tByteLinkedList0.isEmpty());
  }

  //Test case number: 30
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TByteLinkedList.reverse(II)V: I4 Branch 60 IF_ICMPLE L549 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList((byte)31);
      // Undeclared exception!
      try {
        tByteLinkedList0.reverse(0, 1323);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TByteLinkedList.shuffle(Ljava/util/Random;)V: I8 Branch 63 IF_ICMPGE L583 - true
   */

//   @Test
//   public void test31()  throws Throwable  {
//       TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
//       Random random0 = new Random();
//       tByteLinkedList0.shuffle(random0);
//       assertEquals(0.7046983049195309, random0.nextDouble(), 0.01D);
//       assertEquals(920474799, random0.nextInt());
//   }

  //Test case number: 32
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TByteLinkedList.subList(II)Lgnu/trove/list/TByteList;: I4 Branch 64 IF_ICMPGE L592 - false
   */

  @Test
  public void test32()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessByteList0.subList(11, (int) (byte) (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 11 greater than end index -1
         //
      }
  }

  //Test case number: 33
  /*
   * 7 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.lastIndexOf(IB)I: I4 Branch 90 IFEQ L784 - true
   * 2 gnu.trove.list.linked.TByteLinkedList.fill(IIB)V: I3 Branch 77 IFGE L693 - true
   * 3 gnu.trove.list.linked.TByteLinkedList.fill(IIB)V: I22 Branch 78 IF_ICMPLE L699 - false
   * 4 gnu.trove.list.linked.TByteLinkedList.fill(IIB)V: I31 Branch 79 IF_ICMPGE L700 - true
   * 5 gnu.trove.list.linked.TByteLinkedList.fill(IIB)V: I54 Branch 80 IF_ICMPGE L704 - true
   * 6 gnu.trove.list.linked.TByteLinkedList.fill(IIB)V: I54 Branch 80 IF_ICMPGE L704 - false
   * 7 gnu.trove.list.linked.TByteLinkedList.getLinkAt(I)Lgnu/trove/list/linked/TByteLinkedList$TByteLink;: I5 Branch 14 IF_ICMPLT L204 - false
   */

  @Test
  public void test33()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      tByteLinkedList0.fill(1480, 16, (byte)78);
      // Undeclared exception!
      try {
        tByteLinkedList0.lastIndexOf((int) (byte)78, (byte)78);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 34
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TByteLinkedList.grep(Lgnu/trove/procedure/TByteProcedure;)Lgnu/trove/list/TByteList;: I14 Branch 96 IFEQ L846 - true
   */

  @Test
  public void test34()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0);
      TUnmodifiableRandomAccessByteList tUnmodifiableRandomAccessByteList0 = new TUnmodifiableRandomAccessByteList((TByteList) tSynchronizedRandomAccessByteList0);
      TByteLinkedList tByteLinkedList1 = (TByteLinkedList)tUnmodifiableRandomAccessByteList0.grep((TByteProcedure) null);
      assertTrue(tByteLinkedList1.equals(tByteLinkedList0));
  }

  //Test case number: 35
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TByteLinkedList.inverseGrep(Lgnu/trove/procedure/TByteProcedure;)Lgnu/trove/list/TByteList;: I14 Branch 98 IFEQ L856 - true
   */

  @Test
  public void test35()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0);
      TByteLinkedList tByteLinkedList1 = (TByteLinkedList)tSynchronizedRandomAccessByteList0.inverseGrep((TByteProcedure) null);
      assertTrue(tByteLinkedList1.equals(tByteLinkedList0));
  }

  //Test case number: 36
  /*
   * 20 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.min()B: I8 Branch 103 IFEQ L882 - true
   * 2 gnu.trove.list.linked.TByteLinkedList.min()B: I23 Branch 104 IFEQ L885 - true
   * 3 gnu.trove.list.linked.TByteLinkedList.min()B: I23 Branch 104 IFEQ L885 - false
   * 4 gnu.trove.list.linked.TByteLinkedList.min()B: I29 Branch 105 IF_ICMPLE L886 - true
   * 5 gnu.trove.list.linked.TByteLinkedList.min()B: I29 Branch 105 IF_ICMPLE L886 - false
   * 6 gnu.trove.list.linked.TByteLinkedList$TByteLink.getNext()Lgnu/trove/list/linked/TByteLinkedList$TByteLink;: root-Branch
   * 7 gnu.trove.list.linked.TByteLinkedList$TByteLink.setNext(Lgnu/trove/list/linked/TByteLinkedList$TByteLink;)V: root-Branch
   * 8 gnu.trove.list.linked.TByteLinkedList$TByteLink.<init>(B)V: root-Branch
   * 9 gnu.trove.list.linked.TByteLinkedList$TByteLink.getValue()B: root-Branch
   * 10 gnu.trove.list.linked.TByteLinkedList$TByteLink.setPrevious(Lgnu/trove/list/linked/TByteLinkedList$TByteLink;)V: root-Branch
   * 11 gnu.trove.list.linked.TByteLinkedList.size()I: root-Branch
   * 12 gnu.trove.list.linked.TByteLinkedList.addAll([B)Z: I18 Branch 42 IF_ICMPGE L405 - true
   * 13 gnu.trove.list.linked.TByteLinkedList.addAll([B)Z: I18 Branch 42 IF_ICMPGE L405 - false
   * 14 gnu.trove.list.linked.TByteLinkedList.addAll([B)Z: I28 Branch 43 IFEQ L406 - false
   * 15 gnu.trove.list.linked.TByteLinkedList.isEmpty()Z: I4 Branch 4 IFNE L81 - true
   * 16 gnu.trove.list.linked.TByteLinkedList.add(B)Z: I12 Branch 5 IFEQ L87 - true
   * 17 gnu.trove.list.linked.TByteLinkedList.add(B)Z: I12 Branch 5 IFEQ L87 - false
   * 18 gnu.trove.list.linked.TByteLinkedList.no(Ljava/lang/Object;)Z: I3 Branch 110 IFNONNULL L1004 - true
   * 19 gnu.trove.list.linked.TByteLinkedList.no(Ljava/lang/Object;)Z: I3 Branch 110 IFNONNULL L1004 - false
   * 20 gnu.trove.list.linked.TByteLinkedList.got(Ljava/lang/Object;)Z: I3 Branch 109 IFNULL L1000 - false
   */

  @Test
  public void test36()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      byte[] byteArray0 = new byte[10];
      tByteLinkedList0.addAll(byteArray0);
      byte byte0 = tByteLinkedList0.min();
      assertEquals(10, tByteLinkedList0.size());
      assertEquals((byte)0, byte0);
  }

  //Test case number: 37
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TByteLinkedList.sum()B: I12 Branch 106 IFEQ L897 - true
   */

//   @Test
//   public void test37()  throws Throwable  {
//       TByteLinkedList tByteLinkedList0 = new TByteLinkedList((byte) (-15));
//       byte byte0 = tByteLinkedList0.sum();
//       assertEquals(-15, tByteLinkedList0.getNoEntryValue());
//       assertEquals((byte)0, byte0);
//   }

  //Test case number: 38
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.equals(Ljava/lang/Object;)Z: I4 Branch 111 IF_ACMPNE L1009 - true
   * 2 gnu.trove.list.linked.TByteLinkedList.equals(Ljava/lang/Object;)Z: I10 Branch 112 IFNULL L1010 - true
   * 3 gnu.trove.list.linked.TByteLinkedList.<init>(B)V: root-Branch
   */

//   @Test
//   public void test38()  throws Throwable  {
//       TByteLinkedList tByteLinkedList0 = new TByteLinkedList((byte) (-15));
//       boolean boolean0 = tByteLinkedList0.equals((Object) null);
//       assertEquals(false, boolean0);
//       assertEquals(-15, tByteLinkedList0.getNoEntryValue());
//   }

  //Test case number: 39
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.equals(Ljava/lang/Object;)Z: I10 Branch 112 IFNULL L1010 - false
   * 2 gnu.trove.list.linked.TByteLinkedList.equals(Ljava/lang/Object;)Z: I15 Branch 113 IF_ACMPEQ L1010 - false
   * 3 gnu.trove.list.linked.TByteLinkedList.getNoEntryValue()B: root-Branch
   * 4 gnu.trove.list.linked.TByteLinkedList.equals(Ljava/lang/Object;)Z: I4 Branch 111 IF_ACMPNE L1009 - true
   */

  @Test
  public void test39()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      byte byte0 = tByteLinkedList0.getNoEntryValue();
      boolean boolean0 = tByteLinkedList0.equals((Object) byte0);
      assertEquals(false, boolean0);
  }

  //Test case number: 40
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TByteLinkedList.hashCode()I: I23 Branch 119 IFEQ L1034 - true
   */

  @Test
  public void test40()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      int int0 = tByteLinkedList0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 41
  /*
   * 6 covered goals:
   * 1 gnu.trove.list.linked.TByteLinkedList.toString()Ljava/lang/String;: I16 Branch 120 IFEQ L1045 - true
   * 2 gnu.trove.list.linked.TByteLinkedList$1.hasNext()Z: root-Branch
   * 3 gnu.trove.list.linked.TByteLinkedList$1.<init>(Lgnu/trove/list/linked/TByteLinkedList;)V: root-Branch
   * 4 gnu.trove.list.linked.TByteLinkedList.<init>()V: root-Branch
   * 5 gnu.trove.list.linked.TByteLinkedList.iterator()Lgnu/trove/iterator/TByteIterator;: root-Branch
   * 6 gnu.trove.list.linked.TByteLinkedList.got(Ljava/lang/Object;)Z: I3 Branch 109 IFNULL L1000 - true
   */

  @Test
  public void test41()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0);
      String string0 = tSynchronizedRandomAccessByteList0.toString();
      assertNotNull(string0);
      assertEquals("{}", string0);
  }
}

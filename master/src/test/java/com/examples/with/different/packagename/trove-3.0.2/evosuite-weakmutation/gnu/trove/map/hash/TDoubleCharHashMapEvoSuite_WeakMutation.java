/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TCharFunction;
import gnu.trove.map.TDoubleCharMap;
import gnu.trove.map.hash.TDoubleCharHashMap;
import gnu.trove.procedure.TCharProcedure;
import gnu.trove.procedure.TDoubleCharProcedure;
import gnu.trove.procedure.TDoubleProcedure;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TDoubleCharHashMapEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 105 covered goals:
   * 1 Weak Mutation 292: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:133 - ReplaceComparisonOperator == -> !=
   * 2 Weak Mutation 293: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:135 - ReplaceVariable hashmap -> this
   * 3 Weak Mutation 294: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:135 - InsertUnaryOp Negation
   * 4 Weak Mutation 295: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:135 - DeleteField: _loadFactorF
   * 5 Weak Mutation 296: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:136 - ReplaceVariable hashmap -> this
   * 6 Weak Mutation 297: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:136 - InsertUnaryOp Negation
   * 7 Weak Mutation 298: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:136 - DeleteField: no_entry_keyD
   * 8 Weak Mutation 299: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:137 - ReplaceVariable hashmap -> this
   * 9 Weak Mutation 300: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:137 - DeleteField: no_entry_valueC
   * 10 Weak Mutation 305: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:139 - DeleteStatement: doubleSub(DD)I
   * 11 Weak Mutation 304: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:139 - ReplaceConstant - 0.0 -> -1.0
   * 12 Weak Mutation 307: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:139 - ReplaceComparisonOperator == -> <=
   * 13 Weak Mutation 301: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:139 - InsertUnaryOp Negation
   * 14 Weak Mutation 302: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:139 - DeleteField: no_entry_keyD
   * 15 Weak Mutation 303: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:139 - ReplaceConstant - 0.0 -> 1.0
   * 16 Weak Mutation 309: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:140 - DeleteField: _set[D
   * 17 Weak Mutation 311: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:140 - DeleteField: no_entry_keyD
   * 18 Weak Mutation 310: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:140 - InsertUnaryOp Negation
   * 19 Weak Mutation 312: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:140 - DeleteStatement: fill([DD)V
   * 20 Weak Mutation 313: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:143 - DeleteField: no_entry_valueC
   * 21 Weak Mutation 314: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:143 - ReplaceComparisonOperator == -> >=
   * 22 Weak Mutation 317: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:144 - DeleteField: _values[C
   * 23 Weak Mutation 319: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:144 - DeleteStatement: fill([CC)V
   * 24 Weak Mutation 318: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:144 - DeleteField: no_entry_valueC
   * 25 Weak Mutation 326: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - DeleteField: _loadFactorF
   * 26 Weak Mutation 327: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceArithmeticOperator / -> -
   * 27 Weak Mutation 324: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceConstant - 10.0 -> 11.0
   * 28 Weak Mutation 325: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - InsertUnaryOp Negation
   * 29 Weak Mutation 322: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceConstant - 10.0 -> -1.0
   * 30 Weak Mutation 323: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceConstant - 10.0 -> 9.0
   * 31 Weak Mutation 320: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceConstant - 10.0 -> 0.0
   * 32 Weak Mutation 321: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceConstant - 10.0 -> 1.0
   * 33 Weak Mutation 332: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - DeleteStatement: setUp(I)I
   * 34 Weak Mutation 330: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceArithmeticOperator / -> *
   * 35 Weak Mutation 331: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - DeleteStatement: ceil(D)D
   * 36 Weak Mutation 328: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceArithmeticOperator / -> +
   * 37 Weak Mutation 329: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceArithmeticOperator / -> %
   * 38 Weak Mutation 333: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:148 - DeleteStatement: putAll(Lgnu/trove/map/TDoubleCharMap;)V
   * 39 Weak Mutation 481: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:241 - DeleteStatement: size()I
   * 40 Weak Mutation 482: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:241 - DeleteStatement: ensureCapacity(I)V
   * 41 Weak Mutation 483: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:242 - DeleteStatement: iterator()Lgnu/trove/iterator/TDoubleCharIterator;
   * 42 Weak Mutation 485: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:243 - ReplaceComparisonOperator == -> !=
   * 43 Weak Mutation 484: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:243 - DeleteStatement: hasNext()Z
   * 44 gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.<init>(Lgnu/trove/map/hash/TDoubleCharHashMap;Lgnu/trove/map/hash/TDoubleCharHashMap;)V: root-Branch
   * 45 gnu.trove.map.hash.TDoubleCharHashMap.<init>(IFDC)V: root-Branch
   * 46 gnu.trove.map.hash.TDoubleCharHashMap.iterator()Lgnu/trove/iterator/TDoubleCharIterator;: root-Branch
   * 47 gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V: I10 Branch 34 IFEQ L133 - false
   * 48 gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V: I40 Branch 35 IFEQ L139 - false
   * 49 gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V: I52 Branch 36 IFEQ L143 - false
   * 50 gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V: I15 Branch 43 IFEQ L243 - true
   * 51 Weak Mutation 305: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:139 - DeleteStatement: doubleSub(DD)I
   * 52 Weak Mutation 304: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:139 - ReplaceConstant - 0.0 -> -1.0
   * 53 Weak Mutation 307: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:139 - ReplaceComparisonOperator == -> <=
   * 54 Weak Mutation 309: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:140 - DeleteField: _set[D
   * 55 Weak Mutation 311: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:140 - DeleteField: no_entry_keyD
   * 56 Weak Mutation 310: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:140 - InsertUnaryOp Negation
   * 57 Weak Mutation 313: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:143 - DeleteField: no_entry_valueC
   * 58 Weak Mutation 312: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:140 - DeleteStatement: fill([DD)V
   * 59 Weak Mutation 314: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:143 - ReplaceComparisonOperator == -> >=
   * 60 Weak Mutation 317: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:144 - DeleteField: _values[C
   * 61 Weak Mutation 319: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:144 - DeleteStatement: fill([CC)V
   * 62 Weak Mutation 318: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:144 - DeleteField: no_entry_valueC
   * 63 Weak Mutation 292: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:133 - ReplaceComparisonOperator == -> !=
   * 64 Weak Mutation 293: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:135 - ReplaceVariable hashmap -> this
   * 65 Weak Mutation 294: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:135 - InsertUnaryOp Negation
   * 66 Weak Mutation 295: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:135 - DeleteField: _loadFactorF
   * 67 Weak Mutation 296: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:136 - ReplaceVariable hashmap -> this
   * 68 Weak Mutation 297: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:136 - InsertUnaryOp Negation
   * 69 Weak Mutation 298: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:136 - DeleteField: no_entry_keyD
   * 70 Weak Mutation 299: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:137 - ReplaceVariable hashmap -> this
   * 71 Weak Mutation 300: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:137 - DeleteField: no_entry_valueC
   * 72 Weak Mutation 301: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:139 - InsertUnaryOp Negation
   * 73 Weak Mutation 302: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:139 - DeleteField: no_entry_keyD
   * 74 Weak Mutation 303: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:139 - ReplaceConstant - 0.0 -> 1.0
   * 75 Weak Mutation 343: gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I:164 - InsertUnaryOp IINC 1 capacity
   * 76 Weak Mutation 342: gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I:164 - InsertUnaryOp Negation of capacity
   * 77 Weak Mutation 341: gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I:164 - ReplaceVariable capacity -> initialCapacity
   * 78 Weak Mutation 340: gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I:163 - InsertUnaryOp IINC -1 capacity
   * 79 Weak Mutation 339: gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I:163 - InsertUnaryOp IINC 1 capacity
   * 80 Weak Mutation 338: gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I:163 - InsertUnaryOp Negation of capacity
   * 81 Weak Mutation 337: gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I:163 - ReplaceVariable capacity -> initialCapacity
   * 82 Weak Mutation 336: gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I:162 - InsertUnaryOp IINC -1 initialCapacity
   * 83 Weak Mutation 344: gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I:164 - InsertUnaryOp IINC -1 capacity
   * 84 Weak Mutation 326: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - DeleteField: _loadFactorF
   * 85 Weak Mutation 327: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceArithmeticOperator / -> -
   * 86 Weak Mutation 324: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceConstant - 10.0 -> 11.0
   * 87 Weak Mutation 325: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - InsertUnaryOp Negation
   * 88 Weak Mutation 322: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceConstant - 10.0 -> -1.0
   * 89 Weak Mutation 323: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceConstant - 10.0 -> 9.0
   * 90 Weak Mutation 320: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceConstant - 10.0 -> 0.0
   * 91 Weak Mutation 321: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceConstant - 10.0 -> 1.0
   * 92 Weak Mutation 334: gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I:162 - InsertUnaryOp Negation of initialCapacity
   * 93 Weak Mutation 335: gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I:162 - InsertUnaryOp IINC 1 initialCapacity
   * 94 Weak Mutation 332: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - DeleteStatement: setUp(I)I
   * 95 Weak Mutation 333: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:148 - DeleteStatement: putAll(Lgnu/trove/map/TDoubleCharMap;)V
   * 96 Weak Mutation 330: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceArithmeticOperator / -> *
   * 97 Weak Mutation 331: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - DeleteStatement: ceil(D)D
   * 98 Weak Mutation 328: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceArithmeticOperator / -> +
   * 99 Weak Mutation 329: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceArithmeticOperator / -> %
   * 100 Weak Mutation 485: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:243 - ReplaceComparisonOperator == -> !=
   * 101 Weak Mutation 484: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:243 - DeleteStatement: hasNext()Z
   * 102 Weak Mutation 481: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:241 - DeleteStatement: size()I
   * 103 Weak Mutation 483: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:242 - DeleteStatement: iterator()Lgnu/trove/iterator/TDoubleCharIterator;
   * 104 Weak Mutation 482: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:241 - DeleteStatement: ensureCapacity(I)V
   * 105 gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap((-1268), 568.76984F, (double) (-1268), 'J');
      TDoubleCharHashMap tDoubleCharHashMap1 = new TDoubleCharHashMap((TDoubleCharMap) tDoubleCharHashMap0);
      assertEquals(3, tDoubleCharHashMap1.capacity());
      assertEquals('J', tDoubleCharHashMap1.getNoEntryValue());
      assertEquals((-1268.0), tDoubleCharHashMap1.getNoEntryKey(), 0.01D);
  }

  //Test case number: 1
  /*
   * 14 covered goals:
   * 1 Weak Mutation 306: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:139 - ReplaceComparisonOperator == -> >=
   * 2 Weak Mutation 309: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:140 - DeleteField: _set[D
   * 3 Weak Mutation 311: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:140 - DeleteField: no_entry_keyD
   * 4 Weak Mutation 310: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:140 - InsertUnaryOp Negation
   * 5 Weak Mutation 313: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:143 - DeleteField: no_entry_valueC
   * 6 Weak Mutation 312: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:140 - DeleteStatement: fill([DD)V
   * 7 Weak Mutation 314: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:143 - ReplaceComparisonOperator == -> >=
   * 8 Weak Mutation 317: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:144 - DeleteField: _values[C
   * 9 Weak Mutation 319: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:144 - DeleteStatement: fill([CC)V
   * 10 Weak Mutation 318: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:144 - DeleteField: no_entry_valueC
   * 11 Weak Mutation 298: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:136 - DeleteField: no_entry_keyD
   * 12 Weak Mutation 300: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:137 - DeleteField: no_entry_valueC
   * 13 Weak Mutation 302: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:139 - DeleteField: no_entry_keyD
   * 14 Weak Mutation 306: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:139 - ReplaceComparisonOperator == -> >=
   */

  @Test
  public void test1()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(2, 0.0F, 1411.6893092532755, '4');
      TDoubleCharHashMap tDoubleCharHashMap1 = null;
      try {
        tDoubleCharHashMap1 = new TDoubleCharHashMap((TDoubleCharMap) tDoubleCharHashMap0);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  //Test case number: 2
  /*
   * 56 covered goals:
   * 1 Weak Mutation 420: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:205 - ReplaceComparisonOperator >= -> -1
   * 2 Weak Mutation 425: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:206 - ReplaceConstant - 1 -> 0
   * 3 Weak Mutation 424: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:206 - InsertUnaryOp IINC -1 index
   * 4 Weak Mutation 427: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:206 - ReplaceArithmeticOperator - -> %
   * 5 Weak Mutation 426: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:206 - ReplaceArithmeticOperator - -> +
   * 6 Weak Mutation 429: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:206 - ReplaceArithmeticOperator - -> *
   * 7 Weak Mutation 428: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:206 - ReplaceArithmeticOperator - -> /
   * 8 Weak Mutation 421: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:206 - DeleteField: _values[C
   * 9 Weak Mutation 423: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:206 - InsertUnaryOp IINC 1 index
   * 10 Weak Mutation 422: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:206 - InsertUnaryOp Negation of index
   * 11 gnu.trove.map.hash.TDoubleCharHashMap.<init>(I)V: root-Branch
   * 12 gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C: I9 Branch 39 IFGE L205 - false
   * 13 Weak Mutation 414: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:204 - DeleteStatement: insertKey(D)I
   * 14 Weak Mutation 415: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:205 - InsertUnaryOp Negation of index
   * 15 Weak Mutation 413: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:204 - InsertUnaryOp Negation of key
   * 16 Weak Mutation 440: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:214 - ReplaceComparisonOperator >= -> ==
   * 17 Weak Mutation 432: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:207 - InsertUnaryOp IINC 1 value
   * 18 Weak Mutation 433: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:207 - InsertUnaryOp IINC -1 value
   * 19 Weak Mutation 434: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:207 - InsertUnaryOp Negation of index
   * 20 Weak Mutation 435: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:207 - InsertUnaryOp IINC 1 index
   * 21 Weak Mutation 436: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:207 - InsertUnaryOp IINC -1 index
   * 22 Weak Mutation 438: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:213 - ReplaceConstant - 1 -> 0
   * 23 Weak Mutation 439: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:214 - InsertUnaryOp Negation of index
   * 24 Weak Mutation 425: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:206 - ReplaceConstant - 1 -> 0
   * 25 Weak Mutation 424: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:206 - InsertUnaryOp IINC -1 index
   * 26 Weak Mutation 427: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:206 - ReplaceArithmeticOperator - -> %
   * 27 Weak Mutation 426: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:206 - ReplaceArithmeticOperator - -> +
   * 28 Weak Mutation 429: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:206 - ReplaceArithmeticOperator - -> *
   * 29 Weak Mutation 428: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:206 - ReplaceArithmeticOperator - -> /
   * 30 Weak Mutation 431: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:207 - InsertUnaryOp Negation of value
   * 31 Weak Mutation 430: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:207 - InsertUnaryOp Negation of key
   * 32 Weak Mutation 417: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:205 - InsertUnaryOp IINC -1 index
   * 33 Weak Mutation 416: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:205 - InsertUnaryOp IINC 1 index
   * 34 Weak Mutation 418: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:205 - ReplaceComparisonOperator >= -> ==
   * 35 Weak Mutation 421: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:206 - DeleteField: _values[C
   * 36 Weak Mutation 420: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:205 - ReplaceComparisonOperator >= -> -1
   * 37 Weak Mutation 423: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:206 - InsertUnaryOp IINC 1 index
   * 38 Weak Mutation 422: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:206 - InsertUnaryOp Negation of index
   * 39 Weak Mutation 468: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:225 - InsertUnaryOp Negation of previous
   * 40 Weak Mutation 466: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:222 - DeleteStatement: postInsertHook(Z)V
   * 41 Weak Mutation 467: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:225 - ReplaceVariable previous -> value
   * 42 Weak Mutation 464: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:222 - InsertUnaryOp Negation
   * 43 Weak Mutation 465: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:222 - DeleteField: consumeFreeSlotZ
   * 44 Weak Mutation 463: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:221 - ReplaceComparisonOperator == -> !=
   * 45 Weak Mutation 462: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:221 - InsertUnaryOp Negation of isNewMapping
   * 46 Weak Mutation 461: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:219 - InsertUnaryOp IINC -1 value
   * 47 Weak Mutation 460: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:219 - InsertUnaryOp IINC 1 value
   * 48 Weak Mutation 459: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:219 - InsertUnaryOp Negation of value
   * 49 Weak Mutation 458: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:219 - ReplaceVariable value -> previous
   * 50 Weak Mutation 457: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:219 - InsertUnaryOp IINC -1 index
   * 51 Weak Mutation 456: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:219 - InsertUnaryOp IINC 1 index
   * 52 Weak Mutation 455: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:219 - InsertUnaryOp Negation of index
   * 53 Weak Mutation 454: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:219 - DeleteField: _values[C
   * 54 gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C: I12 Branch 40 IFGE L214 - true
   * 55 gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C: I41 Branch 41 IFEQ L221 - false
   * 56 gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C: I9 Branch 39 IFGE L205 - true
   */

  @Test
  public void test2()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(17);
      tDoubleCharHashMap0.putIfAbsent((double) 17, '@');
      char char0 = tDoubleCharHashMap0.putIfAbsent((double) 17, 'Z');
      assertEquals(1, tDoubleCharHashMap0.size());
      assertEquals('@', char0);
  }

  //Test case number: 3
  /*
   * 52 covered goals:
   * 1 Weak Mutation 446: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:215 - ReplaceArithmeticOperator - -> %
   * 2 Weak Mutation 275: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - InsertUnaryOp Negation of size
   * 3 Weak Mutation 274: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - ReplaceVariable size -> i
   * 4 Weak Mutation 273: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - InsertUnaryOp IINC -1 i
   * 5 Weak Mutation 272: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - InsertUnaryOp IINC 1 i
   * 6 Weak Mutation 279: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - ReplaceComparisonOperator >= -> >
   * 7 Weak Mutation 277: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - InsertUnaryOp IINC -1 size
   * 8 Weak Mutation 276: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - InsertUnaryOp IINC 1 size
   * 9 Weak Mutation 283: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:120 - InsertUnaryOp Negation of i
   * 10 Weak Mutation 282: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:120 - ReplaceVariable i -> size
   * 11 Weak Mutation 281: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:120 - ReplaceVariable keys -> _set
   * 12 Weak Mutation 280: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - ReplaceComparisonOperator >= -> -1
   * 13 Weak Mutation 287: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:120 - InsertUnaryOp Negation of i
   * 14 Weak Mutation 286: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:120 - ReplaceVariable i -> size
   * 15 Weak Mutation 285: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:120 - InsertUnaryOp IINC -1 i
   * 16 Weak Mutation 284: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:120 - InsertUnaryOp IINC 1 i
   * 17 Weak Mutation 267: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:118 - ReplaceVariable keys -> _set
   * 18 Weak Mutation 270: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - ReplaceVariable i -> size
   * 19 Weak Mutation 271: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - InsertUnaryOp Negation of i
   * 20 Weak Mutation 268: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:118 - DeleteStatement: min(II)I
   * 21 Weak Mutation 269: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - ReplaceConstant - 0 -> 1
   * 22 Weak Mutation 288: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:120 - InsertUnaryOp IINC 1 i
   * 23 Weak Mutation 289: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:120 - InsertUnaryOp IINC -1 i
   * 24 Weak Mutation 290: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:120 - DeleteStatement: put(DC)C
   * 25 Weak Mutation 291: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - ReplaceVariable i -> size
   * 26 Weak Mutation 410: gnu.trove.map.hash.TDoubleCharHashMap.put(DC)C:198 - InsertUnaryOp Negation of index
   * 27 Weak Mutation 411: gnu.trove.map.hash.TDoubleCharHashMap.put(DC)C:198 - InsertUnaryOp IINC 1 index
   * 28 Weak Mutation 408: gnu.trove.map.hash.TDoubleCharHashMap.put(DC)C:198 - InsertUnaryOp IINC 1 value
   * 29 Weak Mutation 409: gnu.trove.map.hash.TDoubleCharHashMap.put(DC)C:198 - InsertUnaryOp IINC -1 value
   * 30 Weak Mutation 412: gnu.trove.map.hash.TDoubleCharHashMap.put(DC)C:198 - InsertUnaryOp IINC -1 index
   * 31 Weak Mutation 406: gnu.trove.map.hash.TDoubleCharHashMap.put(DC)C:198 - InsertUnaryOp Negation of key
   * 32 Weak Mutation 407: gnu.trove.map.hash.TDoubleCharHashMap.put(DC)C:198 - InsertUnaryOp Negation of value
   * 33 Weak Mutation 404: gnu.trove.map.hash.TDoubleCharHashMap.put(DC)C:197 - InsertUnaryOp Negation of key
   * 34 Weak Mutation 405: gnu.trove.map.hash.TDoubleCharHashMap.put(DC)C:197 - DeleteStatement: insertKey(D)I
   * 35 Weak Mutation 441: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:214 - ReplaceComparisonOperator >= -> >
   * 36 Weak Mutation 442: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:214 - ReplaceComparisonOperator >= -> -1
   * 37 Weak Mutation 443: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:215 - InsertUnaryOp Negation of index
   * 38 Weak Mutation 444: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:215 - ReplaceConstant - 1 -> 0
   * 39 Weak Mutation 445: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:215 - ReplaceArithmeticOperator - -> +
   * 40 Weak Mutation 446: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:215 - ReplaceArithmeticOperator - -> %
   * 41 Weak Mutation 447: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:215 - ReplaceArithmeticOperator - -> /
   * 42 Weak Mutation 453: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:217 - ReplaceConstant - 0 -> 1
   * 43 Weak Mutation 452: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:216 - InsertUnaryOp IINC -1 index
   * 44 Weak Mutation 451: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:216 - InsertUnaryOp IINC 1 index
   * 45 Weak Mutation 450: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:216 - InsertUnaryOp Negation of index
   * 46 Weak Mutation 449: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:216 - DeleteField: _values[C
   * 47 Weak Mutation 448: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:215 - ReplaceArithmeticOperator - -> *
   * 48 gnu.trove.map.hash.TDoubleCharHashMap.put(DC)C: root-Branch
   * 49 gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 50 gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 51 gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C: I12 Branch 40 IFGE L214 - false
   * 52 gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C: I41 Branch 41 IFEQ L221 - true
   */

  @Test
  public void test3()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 1990;
      doubleArray0[1] = (double) 1990;
      char[] charArray0 = new char[9];
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      assertEquals("{1990.0=\u0000, 0.0=\u0000}", tDoubleCharHashMap0.toString());
      assertEquals(2, tDoubleCharHashMap0.size());
      assertEquals(23, tDoubleCharHashMap0.capacity());
  }

  //Test case number: 4
  /*
   * 10 covered goals:
   * 1 Weak Mutation 498: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:253 - DeleteField: no_entry_valueC
   * 2 Weak Mutation 497: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:253 - ReplaceComparisonOperator >= -> -1
   * 3 Weak Mutation 497: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:253 - ReplaceComparisonOperator >= -> -1
   * 4 Weak Mutation 498: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:253 - DeleteField: no_entry_valueC
   * 5 Weak Mutation 493: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:253 - InsertUnaryOp IINC 1 index
   * 6 Weak Mutation 492: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:253 - InsertUnaryOp Negation of index
   * 7 Weak Mutation 494: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:253 - InsertUnaryOp IINC -1 index
   * 8 Weak Mutation 491: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:252 - DeleteStatement: index(D)I
   * 9 Weak Mutation 490: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:252 - InsertUnaryOp Negation of key
   * 10 gnu.trove.map.hash.TDoubleCharHashMap.get(D)C: I9 Branch 44 IFGE L253 - false
   */

  @Test
  public void test4()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(0, (float) 0, 0.0, 'H');
      char char0 = tDoubleCharHashMap0.get(0.0);
      assertEquals('H', char0);
  }

  //Test case number: 5
  /*
   * 33 covered goals:
   * 1 Weak Mutation 507: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:260 - DeleteField: no_entry_keyD
   * 2 Weak Mutation 512: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:261 - DeleteField: no_entry_valueC
   * 3 Weak Mutation 508: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:260 - DeleteStatement: fill([DIID)V
   * 4 Weak Mutation 509: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:261 - DeleteField: _values[C
   * 5 Weak Mutation 510: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:261 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 511: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:261 - DeleteField: _values[C
   * 7 Weak Mutation 504: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:260 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 505: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:260 - DeleteField: _set[D
   * 9 Weak Mutation 506: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:260 - InsertUnaryOp Negation
   * 10 Weak Mutation 503: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:260 - DeleteField: _set[D
   * 11 Weak Mutation 516: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:262 - DeleteField: _states[B
   * 12 Weak Mutation 517: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:262 - ReplaceConstant - 0 -> 1
   * 13 Weak Mutation 518: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:262 - DeleteStatement: fill([BIIB)V
   * 14 Weak Mutation 513: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:261 - DeleteStatement: fill([CIIC)V
   * 15 Weak Mutation 514: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:262 - DeleteField: _states[B
   * 16 Weak Mutation 515: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:262 - ReplaceConstant - 0 -> 1
   * 17 Weak Mutation 508: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:260 - DeleteStatement: fill([DIID)V
   * 18 Weak Mutation 509: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:261 - DeleteField: _values[C
   * 19 Weak Mutation 510: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:261 - ReplaceConstant - 0 -> 1
   * 20 Weak Mutation 511: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:261 - DeleteField: _values[C
   * 21 Weak Mutation 504: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:260 - ReplaceConstant - 0 -> 1
   * 22 Weak Mutation 505: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:260 - DeleteField: _set[D
   * 23 Weak Mutation 506: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:260 - InsertUnaryOp Negation
   * 24 Weak Mutation 507: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:260 - DeleteField: no_entry_keyD
   * 25 Weak Mutation 503: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:260 - DeleteField: _set[D
   * 26 Weak Mutation 516: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:262 - DeleteField: _states[B
   * 27 Weak Mutation 517: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:262 - ReplaceConstant - 0 -> 1
   * 28 Weak Mutation 518: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:262 - DeleteStatement: fill([BIIB)V
   * 29 Weak Mutation 512: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:261 - DeleteField: no_entry_valueC
   * 30 Weak Mutation 513: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:261 - DeleteStatement: fill([CIIC)V
   * 31 Weak Mutation 514: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:262 - DeleteField: _states[B
   * 32 Weak Mutation 515: gnu.trove.map.hash.TDoubleCharHashMap.clear()V:262 - ReplaceConstant - 0 -> 1
   * 33 gnu.trove.map.hash.TDoubleCharHashMap.clear()V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap((-143), (float) (-143), (double) (-143), '*');
      tDoubleCharHashMap0.clear();
      assertEquals("{}", tDoubleCharHashMap0.toString());
  }

  //Test case number: 6
  /*
   * 14 covered goals:
   * 1 Weak Mutation 519: gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z:268 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 526: gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z:268 - ReplaceComparisonOperator != -> -1
   * 3 Weak Mutation 527: gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z:268 - ReplaceConstant - 1 -> 0
   * 4 Weak Mutation 520: gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z:268 - InsertUnaryOp Negation
   * 5 Weak Mutation 521: gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z:268 - InsertUnaryOp +1
   * 6 Weak Mutation 522: gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z:268 - InsertUnaryOp -1
   * 7 gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - false
   * 8 Weak Mutation 519: gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z:268 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 526: gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z:268 - ReplaceComparisonOperator != -> -1
   * 10 Weak Mutation 527: gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z:268 - ReplaceConstant - 1 -> 0
   * 11 Weak Mutation 520: gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z:268 - InsertUnaryOp Negation
   * 12 Weak Mutation 521: gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z:268 - InsertUnaryOp +1
   * 13 Weak Mutation 522: gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z:268 - InsertUnaryOp -1
   * 14 gnu.trove.map.hash.TDoubleCharHashMap.<init>()V: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap();
      boolean boolean0 = tDoubleCharHashMap0.isEmpty();
      assertEquals(true, boolean0);
      assertEquals(23, tDoubleCharHashMap0.capacity());
  }

  //Test case number: 7
  /*
   * 11 covered goals:
   * 1 Weak Mutation 524: gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z:268 - ReplaceComparisonOperator != -> >
   * 2 Weak Mutation 523: gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z:268 - DeleteField: _sizeI
   * 3 Weak Mutation 528: gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z:268 - ReplaceConstant - 0 -> 1
   * 4 gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - true
   * 5 Weak Mutation 519: gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z:268 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 520: gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z:268 - InsertUnaryOp Negation
   * 7 Weak Mutation 521: gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z:268 - InsertUnaryOp +1
   * 8 Weak Mutation 522: gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z:268 - InsertUnaryOp -1
   * 9 Weak Mutation 524: gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z:268 - ReplaceComparisonOperator != -> >
   * 10 Weak Mutation 523: gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z:268 - DeleteField: _sizeI
   * 11 Weak Mutation 528: gnu.trove.map.hash.TDoubleCharHashMap.isEmpty()Z:268 - ReplaceConstant - 0 -> 1
   */

  @Test
  public void test7()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap();
      tDoubleCharHashMap0.putIfAbsent(195.8382055631386, 'C');
      boolean boolean0 = tDoubleCharHashMap0.isEmpty();
      assertEquals(1, tDoubleCharHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 21 covered goals:
   * 1 Weak Mutation 529: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:274 - DeleteField: no_entry_valueC
   * 2 Weak Mutation 531: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:275 - DeleteStatement: index(D)I
   * 3 Weak Mutation 530: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:275 - InsertUnaryOp Negation of key
   * 4 Weak Mutation 533: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:276 - InsertUnaryOp IINC 1 index
   * 5 Weak Mutation 532: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:276 - InsertUnaryOp Negation of index
   * 6 Weak Mutation 534: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:276 - InsertUnaryOp IINC -1 index
   * 7 Weak Mutation 537: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:276 - ReplaceComparisonOperator < -> -2
   * 8 Weak Mutation 548: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:280 - InsertUnaryOp IINC -1 prev
   * 9 Weak Mutation 546: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:280 - InsertUnaryOp Negation of prev
   * 10 Weak Mutation 547: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:280 - InsertUnaryOp IINC 1 prev
   * 11 gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C: I14 Branch 46 IFLT L276 - true
   * 12 Weak Mutation 548: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:280 - InsertUnaryOp IINC -1 prev
   * 13 Weak Mutation 546: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:280 - InsertUnaryOp Negation of prev
   * 14 Weak Mutation 547: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:280 - InsertUnaryOp IINC 1 prev
   * 15 Weak Mutation 533: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:276 - InsertUnaryOp IINC 1 index
   * 16 Weak Mutation 532: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:276 - InsertUnaryOp Negation of index
   * 17 Weak Mutation 534: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:276 - InsertUnaryOp IINC -1 index
   * 18 Weak Mutation 529: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:274 - DeleteField: no_entry_valueC
   * 19 Weak Mutation 531: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:275 - DeleteStatement: index(D)I
   * 20 Weak Mutation 530: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:275 - InsertUnaryOp Negation of key
   * 21 Weak Mutation 537: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:276 - ReplaceComparisonOperator < -> -2
   */

  @Test
  public void test8()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap((-143), (float) (-143), (double) (-143), '*');
      char char0 = tDoubleCharHashMap0.remove((double) '*');
      assertEquals('*', char0);
  }

  //Test case number: 9
  /*
   * 42 covered goals:
   * 1 Weak Mutation 535: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:276 - ReplaceComparisonOperator < -> !=
   * 2 Weak Mutation 541: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:277 - InsertUnaryOp IINC -1 index
   * 3 Weak Mutation 540: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:277 - InsertUnaryOp IINC 1 index
   * 4 Weak Mutation 539: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:277 - InsertUnaryOp Negation of index
   * 5 Weak Mutation 538: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:277 - DeleteField: _values[C
   * 6 Weak Mutation 544: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:278 - InsertUnaryOp IINC -1 index
   * 7 Weak Mutation 545: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:278 - DeleteStatement: removeAt(I)V
   * 8 Weak Mutation 543: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:278 - InsertUnaryOp IINC 1 index
   * 9 Weak Mutation 542: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:278 - InsertUnaryOp Negation of index
   * 10 Weak Mutation 550: gnu.trove.map.hash.TDoubleCharHashMap.removeAt(I)V:286 - InsertUnaryOp Negation of index
   * 11 Weak Mutation 551: gnu.trove.map.hash.TDoubleCharHashMap.removeAt(I)V:286 - InsertUnaryOp IINC 1 index
   * 12 Weak Mutation 549: gnu.trove.map.hash.TDoubleCharHashMap.removeAt(I)V:286 - DeleteField: _values[C
   * 13 Weak Mutation 552: gnu.trove.map.hash.TDoubleCharHashMap.removeAt(I)V:286 - InsertUnaryOp IINC -1 index
   * 14 Weak Mutation 556: gnu.trove.map.hash.TDoubleCharHashMap.removeAt(I)V:287 - InsertUnaryOp IINC -1 index
   * 15 Weak Mutation 554: gnu.trove.map.hash.TDoubleCharHashMap.removeAt(I)V:287 - InsertUnaryOp Negation of index
   * 16 Weak Mutation 555: gnu.trove.map.hash.TDoubleCharHashMap.removeAt(I)V:287 - InsertUnaryOp IINC 1 index
   * 17 gnu.trove.map.hash.TDoubleCharHashMap.removeAt(I)V: root-Branch
   * 18 gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C: I14 Branch 46 IFLT L276 - false
   * 19 Weak Mutation 548: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:280 - InsertUnaryOp IINC -1 prev
   * 20 Weak Mutation 546: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:280 - InsertUnaryOp Negation of prev
   * 21 Weak Mutation 547: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:280 - InsertUnaryOp IINC 1 prev
   * 22 Weak Mutation 533: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:276 - InsertUnaryOp IINC 1 index
   * 23 Weak Mutation 532: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:276 - InsertUnaryOp Negation of index
   * 24 Weak Mutation 534: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:276 - InsertUnaryOp IINC -1 index
   * 25 Weak Mutation 531: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:275 - DeleteStatement: index(D)I
   * 26 Weak Mutation 530: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:275 - InsertUnaryOp Negation of key
   * 27 Weak Mutation 550: gnu.trove.map.hash.TDoubleCharHashMap.removeAt(I)V:286 - InsertUnaryOp Negation of index
   * 28 Weak Mutation 551: gnu.trove.map.hash.TDoubleCharHashMap.removeAt(I)V:286 - InsertUnaryOp IINC 1 index
   * 29 Weak Mutation 549: gnu.trove.map.hash.TDoubleCharHashMap.removeAt(I)V:286 - DeleteField: _values[C
   * 30 Weak Mutation 544: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:278 - InsertUnaryOp IINC -1 index
   * 31 Weak Mutation 545: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:278 - DeleteStatement: removeAt(I)V
   * 32 Weak Mutation 556: gnu.trove.map.hash.TDoubleCharHashMap.removeAt(I)V:287 - InsertUnaryOp IINC -1 index
   * 33 Weak Mutation 554: gnu.trove.map.hash.TDoubleCharHashMap.removeAt(I)V:287 - InsertUnaryOp Negation of index
   * 34 Weak Mutation 555: gnu.trove.map.hash.TDoubleCharHashMap.removeAt(I)V:287 - InsertUnaryOp IINC 1 index
   * 35 Weak Mutation 552: gnu.trove.map.hash.TDoubleCharHashMap.removeAt(I)V:286 - InsertUnaryOp IINC -1 index
   * 36 Weak Mutation 535: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:276 - ReplaceComparisonOperator < -> !=
   * 37 Weak Mutation 541: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:277 - InsertUnaryOp IINC -1 index
   * 38 Weak Mutation 540: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:277 - InsertUnaryOp IINC 1 index
   * 39 Weak Mutation 543: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:278 - InsertUnaryOp IINC 1 index
   * 40 Weak Mutation 542: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:278 - InsertUnaryOp Negation of index
   * 41 Weak Mutation 539: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:277 - InsertUnaryOp Negation of index
   * 42 Weak Mutation 538: gnu.trove.map.hash.TDoubleCharHashMap.remove(D)C:277 - DeleteField: _values[C
   */

  @Test
  public void test9()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[4] = 2.0;
      char[] charArray0 = new char[9];
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      assertEquals("{2.0=\u0000, 0.0=\u0000}", tDoubleCharHashMap0.toString());
      
      char char0 = tDoubleCharHashMap0.remove(2.0);
      assertEquals("{0.0=\u0000}", tDoubleCharHashMap0.toString());
      assertEquals('\u0000', char0);
  }

  //Test case number: 10
  /*
   * 100 covered goals:
   * 1 Weak Mutation 580: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - ReplaceVariable j -> i
   * 2 Weak Mutation 889: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:491 - ReplaceComparisonOperator >= -> ==
   * 3 gnu.trove.map.hash.TDoubleCharHashMap.<init>(IF)V: root-Branch
   * 4 Weak Mutation 558: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:300 - DeleteField: _set[D
   * 5 Weak Mutation 559: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:301 - DeleteField: _states[B
   * 6 Weak Mutation 557: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:299 - DeleteStatement: size()I
   * 7 Weak Mutation 567: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:303 - ReplaceVariable i -> j
   * 8 Weak Mutation 566: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:303 - InsertUnaryOp IINC -1 i
   * 9 Weak Mutation 565: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:303 - InsertUnaryOp IINC 1 i
   * 10 Weak Mutation 564: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:303 - InsertUnaryOp Negation of i
   * 11 Weak Mutation 563: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:303 - ReplaceVariable i -> j
   * 12 Weak Mutation 562: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:303 - ReplaceConstant - 0 -> 1
   * 13 Weak Mutation 560: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:303 - ReplaceVariable k -> keys
   * 14 Weak Mutation 575: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:304 - InsertUnaryOp IINC -1 i
   * 15 Weak Mutation 574: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:304 - InsertUnaryOp IINC 1 i
   * 16 Weak Mutation 573: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:304 - InsertUnaryOp Negation of i
   * 17 Weak Mutation 572: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:304 - ReplaceVariable i -> j
   * 18 Weak Mutation 570: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:303 - ReplaceComparisonOperator <= -> -1
   * 19 Weak Mutation 569: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:303 - ReplaceComparisonOperator <= -> <
   * 20 Weak Mutation 576: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:304 - ReplaceConstant - 1 -> 0
   * 21 Weak Mutation 577: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:304 - ReplaceComparisonOperator != -> ==
   * 22 Weak Mutation 578: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - ReplaceVariable keys -> _set
   * 23 Weak Mutation 579: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - ReplaceVariable keys -> k
   * 24 Weak Mutation 581: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - InsertUnaryOp Negation of j
   * 25 Weak Mutation 582: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - InsertUnaryOp IINC 1 j
   * 26 Weak Mutation 583: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - InsertUnaryOp IINC -1 j
   * 27 Weak Mutation 584: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - ReplaceVariable j -> i
   * 28 Weak Mutation 585: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - ReplaceVariable k -> keys
   * 29 Weak Mutation 587: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - ReplaceVariable i -> j
   * 30 Weak Mutation 588: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - InsertUnaryOp Negation of i
   * 31 Weak Mutation 589: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - InsertUnaryOp IINC 1 i
   * 32 Weak Mutation 590: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - InsertUnaryOp IINC -1 i
   * 33 Weak Mutation 591: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:308 - ReplaceVariable keys -> _set
   * 34 Weak Mutation 592: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:308 - ReplaceVariable keys -> k
   * 35 Weak Mutation 558: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:300 - DeleteField: _set[D
   * 36 Weak Mutation 559: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:301 - DeleteField: _states[B
   * 37 Weak Mutation 557: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:299 - DeleteStatement: size()I
   * 38 Weak Mutation 567: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:303 - ReplaceVariable i -> j
   * 39 Weak Mutation 566: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:303 - InsertUnaryOp IINC -1 i
   * 40 Weak Mutation 565: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:303 - InsertUnaryOp IINC 1 i
   * 41 Weak Mutation 564: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:303 - InsertUnaryOp Negation of i
   * 42 Weak Mutation 563: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:303 - ReplaceVariable i -> j
   * 43 Weak Mutation 562: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:303 - ReplaceConstant - 0 -> 1
   * 44 Weak Mutation 560: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:303 - ReplaceVariable k -> keys
   * 45 Weak Mutation 575: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:304 - InsertUnaryOp IINC -1 i
   * 46 Weak Mutation 574: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:304 - InsertUnaryOp IINC 1 i
   * 47 Weak Mutation 573: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:304 - InsertUnaryOp Negation of i
   * 48 Weak Mutation 572: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:304 - ReplaceVariable i -> j
   * 49 Weak Mutation 570: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:303 - ReplaceComparisonOperator <= -> -1
   * 50 Weak Mutation 569: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:303 - ReplaceComparisonOperator <= -> <
   * 51 Weak Mutation 576: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:304 - ReplaceConstant - 1 -> 0
   * 52 Weak Mutation 577: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:304 - ReplaceComparisonOperator != -> ==
   * 53 Weak Mutation 578: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - ReplaceVariable keys -> _set
   * 54 Weak Mutation 579: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - ReplaceVariable keys -> k
   * 55 Weak Mutation 580: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - ReplaceVariable j -> i
   * 56 Weak Mutation 581: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - InsertUnaryOp Negation of j
   * 57 Weak Mutation 582: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - InsertUnaryOp IINC 1 j
   * 58 Weak Mutation 583: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - InsertUnaryOp IINC -1 j
   * 59 Weak Mutation 584: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - ReplaceVariable j -> i
   * 60 Weak Mutation 585: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - ReplaceVariable k -> keys
   * 61 Weak Mutation 587: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - ReplaceVariable i -> j
   * 62 Weak Mutation 588: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - InsertUnaryOp Negation of i
   * 63 Weak Mutation 589: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - InsertUnaryOp IINC 1 i
   * 64 Weak Mutation 590: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:305 - InsertUnaryOp IINC -1 i
   * 65 Weak Mutation 591: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:308 - ReplaceVariable keys -> _set
   * 66 Weak Mutation 592: gnu.trove.map.hash.TDoubleCharHashMap.keys()[D:308 - ReplaceVariable keys -> k
   * 67 Weak Mutation 885: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:488 - DeleteStatement: insertKey(D)I
   * 68 Weak Mutation 884: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:488 - InsertUnaryOp Negation of key
   * 69 Weak Mutation 887: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:491 - InsertUnaryOp IINC 1 index
   * 70 Weak Mutation 886: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:491 - InsertUnaryOp Negation of index
   * 71 Weak Mutation 889: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:491 - ReplaceComparisonOperator >= -> ==
   * 72 Weak Mutation 888: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:491 - InsertUnaryOp IINC -1 index
   * 73 Weak Mutation 937: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:506 - InsertUnaryOp IINC -1 newValue
   * 74 Weak Mutation 936: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:506 - InsertUnaryOp IINC 1 newValue
   * 75 Weak Mutation 932: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:503 - DeleteStatement: postInsertHook(Z)V
   * 76 Weak Mutation 935: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:506 - InsertUnaryOp Negation of newValue
   * 77 Weak Mutation 929: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:502 - ReplaceComparisonOperator == -> !=
   * 78 Weak Mutation 928: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:502 - InsertUnaryOp IINC -1 isNewMapping
   * 79 Weak Mutation 931: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:503 - DeleteField: consumeFreeSlotZ
   * 80 Weak Mutation 930: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:503 - InsertUnaryOp Negation
   * 81 Weak Mutation 926: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:502 - InsertUnaryOp Negation of isNewMapping
   * 82 Weak Mutation 927: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:502 - InsertUnaryOp IINC 1 isNewMapping
   * 83 Weak Mutation 924: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:500 - InsertUnaryOp IINC 1 index
   * 84 Weak Mutation 925: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:500 - InsertUnaryOp IINC -1 index
   * 85 Weak Mutation 922: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:500 - DeleteField: _states[B
   * 86 Weak Mutation 923: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:500 - InsertUnaryOp Negation of index
   * 87 Weak Mutation 920: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:496 - InsertUnaryOp IINC -1 put_amount
   * 88 Weak Mutation 921: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:497 - ReplaceConstant - 1 -> 0
   * 89 Weak Mutation 918: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:496 - InsertUnaryOp Negation of put_amount
   * 90 Weak Mutation 919: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:496 - InsertUnaryOp IINC 1 put_amount
   * 91 Weak Mutation 916: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:496 - InsertUnaryOp IINC -1 index
   * 92 Weak Mutation 914: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:496 - InsertUnaryOp Negation of index
   * 93 Weak Mutation 915: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:496 - InsertUnaryOp IINC 1 index
   * 94 Weak Mutation 913: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:496 - DeleteField: _values[C
   * 95 gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C: I9 Branch 72 IFGE L491 - true
   * 96 gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C: I59 Branch 73 IFEQ L502 - false
   * 97 gnu.trove.map.hash.TDoubleCharHashMap.keys()[D: I27 Branch 47 IFLE L303 - true
   * 98 gnu.trove.map.hash.TDoubleCharHashMap.keys()[D: I27 Branch 47 IFLE L303 - false
   * 99 gnu.trove.map.hash.TDoubleCharHashMap.keys()[D: I34 Branch 48 IF_ICMPNE L304 - true
   * 100 gnu.trove.map.hash.TDoubleCharHashMap.keys()[D: I34 Branch 48 IF_ICMPNE L304 - false
   */

  @Test
  public void test10()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(0, 798.77985F);
      tDoubleCharHashMap0.adjustOrPutValue((-1798.6062245113583), '3', '3');
      tDoubleCharHashMap0.keys();
      assertEquals("{-1798.6062245113583=3}", tDoubleCharHashMap0.toString());
      assertEquals(false, tDoubleCharHashMap0.isEmpty());
  }

  //Test case number: 11
  /*
   * 37 covered goals:
   * 1 Weak Mutation 594: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:315 - ReplaceVariable array -> _set
   * 2 Weak Mutation 607: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - ReplaceVariable keys -> array
   * 3 Weak Mutation 644: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:327 - ReplaceVariable array -> _set
   * 4 Weak Mutation 643: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:327 - ReplaceVariable array -> keys
   * 5 Weak Mutation 598: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:315 - ReplaceComparisonOperator >= -> ==
   * 6 Weak Mutation 610: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - ReplaceVariable i -> size
   * 7 Weak Mutation 611: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - InsertUnaryOp Negation of i
   * 8 Weak Mutation 608: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 609: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - ReplaceVariable i -> j
   * 10 Weak Mutation 614: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - ReplaceVariable i -> j
   * 11 Weak Mutation 615: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - ReplaceVariable i -> size
   * 12 Weak Mutation 612: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - InsertUnaryOp IINC 1 i
   * 13 Weak Mutation 613: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - InsertUnaryOp IINC -1 i
   * 14 Weak Mutation 618: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - ReplaceComparisonOperator <= -> -1
   * 15 Weak Mutation 617: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - ReplaceComparisonOperator <= -> <
   * 16 Weak Mutation 622: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:323 - InsertUnaryOp Negation of i
   * 17 Weak Mutation 623: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:323 - InsertUnaryOp IINC 1 i
   * 18 Weak Mutation 620: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:323 - ReplaceVariable i -> j
   * 19 Weak Mutation 621: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:323 - ReplaceVariable i -> size
   * 20 Weak Mutation 626: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:323 - ReplaceComparisonOperator != -> ==
   * 21 Weak Mutation 625: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:323 - ReplaceConstant - 1 -> 0
   * 22 Weak Mutation 624: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:323 - InsertUnaryOp IINC -1 i
   * 23 Weak Mutation 593: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:314 - DeleteStatement: size()I
   * 24 Weak Mutation 595: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:315 - InsertUnaryOp Negation of size
   * 25 Weak Mutation 594: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:315 - ReplaceVariable array -> _set
   * 26 Weak Mutation 597: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:315 - InsertUnaryOp IINC -1 size
   * 27 Weak Mutation 596: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:315 - InsertUnaryOp IINC 1 size
   * 28 Weak Mutation 598: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:315 - ReplaceComparisonOperator >= -> ==
   * 29 Weak Mutation 605: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:320 - DeleteField: _states[B
   * 30 Weak Mutation 604: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:319 - DeleteField: _set[D
   * 31 Weak Mutation 607: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - ReplaceVariable keys -> array
   * 32 Weak Mutation 644: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:327 - ReplaceVariable array -> _set
   * 33 Weak Mutation 643: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:327 - ReplaceVariable array -> keys
   * 34 gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D: I10 Branch 49 IF_ICMPGE L315 - true
   * 35 gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D: I37 Branch 50 IFLE L322 - true
   * 36 gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D: I37 Branch 50 IFLE L322 - false
   * 37 gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test11()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(0, 10.0F, (-1.0), '');
      char[] charArray0 = new char[7];
      TDoubleCharHashMap tDoubleCharHashMap1 = new TDoubleCharHashMap(tDoubleCharHashMap0._set, charArray0);
      double[] doubleArray0 = tDoubleCharHashMap0.keys(tDoubleCharHashMap1._set);
      assertEquals("{0.0=\u0000}", tDoubleCharHashMap1.toString());
      assertEquals(1, tDoubleCharHashMap1.size());
      assertEquals(17, tDoubleCharHashMap1.capacity());
      assertNotNull(doubleArray0);
  }

  //Test case number: 12
  /*
   * 67 covered goals:
   * 1 Weak Mutation 600: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:315 - ReplaceComparisonOperator >= -> -1
   * 2 Weak Mutation 601: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:316 - InsertUnaryOp Negation of size
   * 3 Weak Mutation 603: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:316 - InsertUnaryOp IINC -1 size
   * 4 Weak Mutation 602: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:316 - InsertUnaryOp IINC 1 size
   * 5 Weak Mutation 627: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - ReplaceVariable array -> keys
   * 6 Weak Mutation 631: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - InsertUnaryOp Negation of j
   * 7 Weak Mutation 630: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - ReplaceVariable j -> size
   * 8 Weak Mutation 629: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - ReplaceVariable j -> i
   * 9 Weak Mutation 628: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - ReplaceVariable array -> _set
   * 10 Weak Mutation 635: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - ReplaceVariable j -> size
   * 11 Weak Mutation 634: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - ReplaceVariable j -> i
   * 12 Weak Mutation 633: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - InsertUnaryOp IINC -1 j
   * 13 Weak Mutation 632: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - InsertUnaryOp IINC 1 j
   * 14 Weak Mutation 639: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - ReplaceVariable i -> size
   * 15 Weak Mutation 638: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - ReplaceVariable i -> j
   * 16 Weak Mutation 637: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - ReplaceVariable keys -> array
   * 17 Weak Mutation 641: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - InsertUnaryOp IINC 1 i
   * 18 Weak Mutation 640: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - InsertUnaryOp Negation of i
   * 19 Weak Mutation 642: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - InsertUnaryOp IINC -1 i
   * 20 gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D: I10 Branch 49 IF_ICMPGE L315 - false
   * 21 gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D: I44 Branch 51 IF_ICMPNE L323 - false
   * 22 Weak Mutation 610: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - ReplaceVariable i -> size
   * 23 Weak Mutation 611: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - InsertUnaryOp Negation of i
   * 24 Weak Mutation 608: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - ReplaceConstant - 0 -> 1
   * 25 Weak Mutation 609: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - ReplaceVariable i -> j
   * 26 Weak Mutation 614: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - ReplaceVariable i -> j
   * 27 Weak Mutation 615: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - ReplaceVariable i -> size
   * 28 Weak Mutation 612: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - InsertUnaryOp IINC 1 i
   * 29 Weak Mutation 613: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - InsertUnaryOp IINC -1 i
   * 30 Weak Mutation 618: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - ReplaceComparisonOperator <= -> -1
   * 31 Weak Mutation 617: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - ReplaceComparisonOperator <= -> <
   * 32 Weak Mutation 622: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:323 - InsertUnaryOp Negation of i
   * 33 Weak Mutation 623: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:323 - InsertUnaryOp IINC 1 i
   * 34 Weak Mutation 620: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:323 - ReplaceVariable i -> j
   * 35 Weak Mutation 621: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:323 - ReplaceVariable i -> size
   * 36 Weak Mutation 626: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:323 - ReplaceComparisonOperator != -> ==
   * 37 Weak Mutation 625: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:323 - ReplaceConstant - 1 -> 0
   * 38 Weak Mutation 624: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:323 - InsertUnaryOp IINC -1 i
   * 39 Weak Mutation 593: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:314 - DeleteStatement: size()I
   * 40 Weak Mutation 595: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:315 - InsertUnaryOp Negation of size
   * 41 Weak Mutation 594: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:315 - ReplaceVariable array -> _set
   * 42 Weak Mutation 597: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:315 - InsertUnaryOp IINC -1 size
   * 43 Weak Mutation 596: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:315 - InsertUnaryOp IINC 1 size
   * 44 Weak Mutation 605: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:320 - DeleteField: _states[B
   * 45 Weak Mutation 604: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:319 - DeleteField: _set[D
   * 46 Weak Mutation 607: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:322 - ReplaceVariable keys -> array
   * 47 Weak Mutation 644: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:327 - ReplaceVariable array -> _set
   * 48 Weak Mutation 643: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:327 - ReplaceVariable array -> keys
   * 49 Weak Mutation 627: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - ReplaceVariable array -> keys
   * 50 Weak Mutation 631: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - InsertUnaryOp Negation of j
   * 51 Weak Mutation 630: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - ReplaceVariable j -> size
   * 52 Weak Mutation 629: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - ReplaceVariable j -> i
   * 53 Weak Mutation 628: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - ReplaceVariable array -> _set
   * 54 Weak Mutation 635: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - ReplaceVariable j -> size
   * 55 Weak Mutation 634: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - ReplaceVariable j -> i
   * 56 Weak Mutation 633: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - InsertUnaryOp IINC -1 j
   * 57 Weak Mutation 632: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - InsertUnaryOp IINC 1 j
   * 58 Weak Mutation 639: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - ReplaceVariable i -> size
   * 59 Weak Mutation 638: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - ReplaceVariable i -> j
   * 60 Weak Mutation 637: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - ReplaceVariable keys -> array
   * 61 Weak Mutation 601: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:316 - InsertUnaryOp Negation of size
   * 62 Weak Mutation 600: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:315 - ReplaceComparisonOperator >= -> -1
   * 63 Weak Mutation 603: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:316 - InsertUnaryOp IINC -1 size
   * 64 Weak Mutation 602: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:316 - InsertUnaryOp IINC 1 size
   * 65 Weak Mutation 641: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - InsertUnaryOp IINC 1 i
   * 66 Weak Mutation 640: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - InsertUnaryOp Negation of i
   * 67 Weak Mutation 642: gnu.trove.map.hash.TDoubleCharHashMap.keys([D)[D:324 - InsertUnaryOp IINC -1 i
   */

  @Test
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[1] = Double.POSITIVE_INFINITY;
      doubleArray0[3] = 1.0;
      doubleArray0[0] = (-1447.4635501819707);
      char[] charArray0 = new char[6];
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      double[] doubleArray1 = new double[3];
      double[] doubleArray2 = tDoubleCharHashMap0.keys(doubleArray1);
      assertEquals("{1.0=\u0000, Infinity=\u0000, -1447.4635501819707=\u0000, 0.0=\u0000}", tDoubleCharHashMap0.toString());
      assertNotNull(doubleArray2);
      assertNotSame(doubleArray1, doubleArray2);
  }

  //Test case number: 13
  /*
   * 45 covered goals:
   * 1 Weak Mutation 675: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - InsertUnaryOp IINC -1 i
   * 2 Weak Mutation 674: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - InsertUnaryOp IINC 1 i
   * 3 Weak Mutation 673: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - InsertUnaryOp Negation of i
   * 4 Weak Mutation 672: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - ReplaceVariable i -> j
   * 5 Weak Mutation 668: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - InsertUnaryOp IINC 1 j
   * 6 Weak Mutation 669: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - InsertUnaryOp IINC -1 j
   * 7 Weak Mutation 670: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - ReplaceVariable j -> i
   * 8 Weak Mutation 671: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - ReplaceVariable v -> vals
   * 9 Weak Mutation 665: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - ReplaceVariable vals -> v
   * 10 Weak Mutation 666: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - ReplaceVariable j -> i
   * 11 Weak Mutation 667: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - InsertUnaryOp Negation of j
   * 12 gnu.trove.map.hash.TDoubleCharHashMap.values()[C: I34 Branch 53 IF_ICMPNE L344 - false
   * 13 Weak Mutation 676: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:348 - ReplaceVariable vals -> v
   * 14 Weak Mutation 675: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - InsertUnaryOp IINC -1 i
   * 15 Weak Mutation 674: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - InsertUnaryOp IINC 1 i
   * 16 Weak Mutation 673: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - InsertUnaryOp Negation of i
   * 17 Weak Mutation 672: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - ReplaceVariable i -> j
   * 18 Weak Mutation 653: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:343 - InsertUnaryOp IINC -1 i
   * 19 Weak Mutation 652: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:343 - InsertUnaryOp IINC 1 i
   * 20 Weak Mutation 654: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:343 - ReplaceVariable i -> j
   * 21 Weak Mutation 649: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:343 - ReplaceConstant - 0 -> 1
   * 22 Weak Mutation 648: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:343 - ReplaceVariable v -> vals
   * 23 Weak Mutation 651: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:343 - InsertUnaryOp Negation of i
   * 24 Weak Mutation 650: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:343 - ReplaceVariable i -> j
   * 25 Weak Mutation 645: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:339 - DeleteStatement: size()I
   * 26 Weak Mutation 647: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:341 - DeleteField: _states[B
   * 27 Weak Mutation 646: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:340 - DeleteField: _values[C
   * 28 Weak Mutation 668: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - InsertUnaryOp IINC 1 j
   * 29 Weak Mutation 669: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - InsertUnaryOp IINC -1 j
   * 30 Weak Mutation 670: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - ReplaceVariable j -> i
   * 31 Weak Mutation 671: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - ReplaceVariable v -> vals
   * 32 Weak Mutation 664: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:344 - ReplaceComparisonOperator != -> ==
   * 33 Weak Mutation 665: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - ReplaceVariable vals -> v
   * 34 Weak Mutation 666: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - ReplaceVariable j -> i
   * 35 Weak Mutation 667: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - InsertUnaryOp Negation of j
   * 36 Weak Mutation 660: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:344 - InsertUnaryOp Negation of i
   * 37 Weak Mutation 661: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:344 - InsertUnaryOp IINC 1 i
   * 38 Weak Mutation 662: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:344 - InsertUnaryOp IINC -1 i
   * 39 Weak Mutation 663: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:344 - ReplaceConstant - 1 -> 0
   * 40 Weak Mutation 656: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:343 - ReplaceComparisonOperator <= -> <
   * 41 Weak Mutation 657: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:343 - ReplaceComparisonOperator <= -> -1
   * 42 Weak Mutation 659: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:344 - ReplaceVariable i -> j
   * 43 gnu.trove.map.hash.TDoubleCharHashMap.values()[C: I27 Branch 52 IFLE L343 - true
   * 44 gnu.trove.map.hash.TDoubleCharHashMap.values()[C: I27 Branch 52 IFLE L343 - false
   * 45 gnu.trove.map.hash.TDoubleCharHashMap.values()[C: I34 Branch 53 IF_ICMPNE L344 - true
   */

  @Test
  public void test13()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(17);
      tDoubleCharHashMap0.putIfAbsent((double) 17, '@');
      tDoubleCharHashMap0.values();
      assertEquals(false, tDoubleCharHashMap0.isEmpty());
      assertEquals("{17.0=@}", tDoubleCharHashMap0.toString());
  }

  //Test case number: 14
  /*
   * 87 covered goals:
   * 1 Weak Mutation 682: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:355 - ReplaceComparisonOperator >= -> >
   * 2 Weak Mutation 713: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - InsertUnaryOp IINC 1 j
   * 3 Weak Mutation 712: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - InsertUnaryOp Negation of j
   * 4 Weak Mutation 715: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable j -> i
   * 5 Weak Mutation 714: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - InsertUnaryOp IINC -1 j
   * 6 Weak Mutation 717: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable v -> array
   * 7 Weak Mutation 716: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable j -> size
   * 8 Weak Mutation 719: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable i -> size
   * 9 Weak Mutation 718: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable i -> j
   * 10 Weak Mutation 709: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable array -> v
   * 11 Weak Mutation 711: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable j -> size
   * 12 Weak Mutation 720: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - InsertUnaryOp Negation of i
   * 13 Weak Mutation 721: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - InsertUnaryOp IINC 1 i
   * 14 Weak Mutation 722: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - InsertUnaryOp IINC -1 i
   * 15 gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C: I44 Branch 56 IF_ICMPNE L363 - false
   * 16 Weak Mutation 676: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:348 - ReplaceVariable vals -> v
   * 17 Weak Mutation 675: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - InsertUnaryOp IINC -1 i
   * 18 Weak Mutation 674: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - InsertUnaryOp IINC 1 i
   * 19 Weak Mutation 673: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - InsertUnaryOp Negation of i
   * 20 Weak Mutation 672: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - ReplaceVariable i -> j
   * 21 Weak Mutation 653: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:343 - InsertUnaryOp IINC -1 i
   * 22 Weak Mutation 652: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:343 - InsertUnaryOp IINC 1 i
   * 23 Weak Mutation 654: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:343 - ReplaceVariable i -> j
   * 24 Weak Mutation 649: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:343 - ReplaceConstant - 0 -> 1
   * 25 Weak Mutation 648: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:343 - ReplaceVariable v -> vals
   * 26 Weak Mutation 651: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:343 - InsertUnaryOp Negation of i
   * 27 Weak Mutation 650: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:343 - ReplaceVariable i -> j
   * 28 Weak Mutation 645: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:339 - DeleteStatement: size()I
   * 29 Weak Mutation 647: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:341 - DeleteField: _states[B
   * 30 Weak Mutation 646: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:340 - DeleteField: _values[C
   * 31 Weak Mutation 668: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - InsertUnaryOp IINC 1 j
   * 32 Weak Mutation 669: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - InsertUnaryOp IINC -1 j
   * 33 Weak Mutation 670: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - ReplaceVariable j -> i
   * 34 Weak Mutation 671: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - ReplaceVariable v -> vals
   * 35 Weak Mutation 664: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:344 - ReplaceComparisonOperator != -> ==
   * 36 Weak Mutation 665: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - ReplaceVariable vals -> v
   * 37 Weak Mutation 667: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:345 - InsertUnaryOp Negation of j
   * 38 Weak Mutation 660: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:344 - InsertUnaryOp Negation of i
   * 39 Weak Mutation 661: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:344 - InsertUnaryOp IINC 1 i
   * 40 Weak Mutation 662: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:344 - InsertUnaryOp IINC -1 i
   * 41 Weak Mutation 663: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:344 - ReplaceConstant - 1 -> 0
   * 42 Weak Mutation 656: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:343 - ReplaceComparisonOperator <= -> <
   * 43 Weak Mutation 657: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:343 - ReplaceComparisonOperator <= -> -1
   * 44 Weak Mutation 659: gnu.trove.map.hash.TDoubleCharHashMap.values()[C:344 - ReplaceVariable i -> j
   * 45 Weak Mutation 687: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:359 - DeleteField: _values[C
   * 46 Weak Mutation 682: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:355 - ReplaceComparisonOperator >= -> >
   * 47 Weak Mutation 680: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:355 - InsertUnaryOp IINC -1 size
   * 48 Weak Mutation 679: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:355 - InsertUnaryOp IINC 1 size
   * 49 Weak Mutation 678: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:355 - InsertUnaryOp Negation of size
   * 50 Weak Mutation 677: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:354 - DeleteStatement: size()I
   * 51 Weak Mutation 702: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:363 - ReplaceVariable i -> j
   * 52 Weak Mutation 703: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:363 - ReplaceVariable i -> size
   * 53 Weak Mutation 700: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:362 - ReplaceComparisonOperator <= -> -1
   * 54 Weak Mutation 699: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:362 - ReplaceComparisonOperator <= -> <
   * 55 Weak Mutation 696: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:362 - ReplaceVariable i -> j
   * 56 Weak Mutation 697: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:362 - ReplaceVariable i -> size
   * 57 Weak Mutation 694: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:362 - InsertUnaryOp IINC 1 i
   * 58 Weak Mutation 695: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:362 - InsertUnaryOp IINC -1 i
   * 59 Weak Mutation 692: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:362 - ReplaceVariable i -> size
   * 60 Weak Mutation 693: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:362 - InsertUnaryOp Negation of i
   * 61 Weak Mutation 690: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:362 - ReplaceConstant - 0 -> 1
   * 62 Weak Mutation 691: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:362 - ReplaceVariable i -> j
   * 63 Weak Mutation 688: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:360 - DeleteField: _states[B
   * 64 Weak Mutation 689: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:362 - ReplaceVariable v -> array
   * 65 Weak Mutation 713: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - InsertUnaryOp IINC 1 j
   * 66 Weak Mutation 712: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - InsertUnaryOp Negation of j
   * 67 Weak Mutation 715: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable j -> i
   * 68 Weak Mutation 714: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - InsertUnaryOp IINC -1 j
   * 69 Weak Mutation 717: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable v -> array
   * 70 Weak Mutation 716: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable j -> size
   * 71 Weak Mutation 719: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable i -> size
   * 72 Weak Mutation 718: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable i -> j
   * 73 Weak Mutation 705: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:363 - InsertUnaryOp IINC 1 i
   * 74 Weak Mutation 704: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:363 - InsertUnaryOp Negation of i
   * 75 Weak Mutation 707: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:363 - ReplaceConstant - 1 -> 0
   * 76 Weak Mutation 706: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:363 - InsertUnaryOp IINC -1 i
   * 77 Weak Mutation 709: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable array -> v
   * 78 Weak Mutation 708: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:363 - ReplaceComparisonOperator != -> ==
   * 79 Weak Mutation 711: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable j -> size
   * 80 Weak Mutation 720: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - InsertUnaryOp Negation of i
   * 81 Weak Mutation 721: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - InsertUnaryOp IINC 1 i
   * 82 Weak Mutation 722: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - InsertUnaryOp IINC -1 i
   * 83 Weak Mutation 723: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:367 - ReplaceVariable array -> v
   * 84 gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C: I10 Branch 54 IF_ICMPGE L355 - true
   * 85 gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C: I37 Branch 55 IFLE L362 - true
   * 86 gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C: I37 Branch 55 IFLE L362 - false
   * 87 gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C: I44 Branch 56 IF_ICMPNE L363 - true
   */

  @Test
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      char[] charArray0 = new char[7];
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      char[] charArray1 = tDoubleCharHashMap0.values();
      assertNotNull(charArray1);
      
      char[] charArray2 = tDoubleCharHashMap0.values(charArray1);
      assertEquals("{0.0=\u0000}", tDoubleCharHashMap0.toString());
      assertSame(charArray2, charArray1);
      assertNotNull(charArray2);
  }

  //Test case number: 15
  /*
   * 42 covered goals:
   * 1 Weak Mutation 710: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable j -> i
   * 2 Weak Mutation 687: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:359 - DeleteField: _values[C
   * 3 Weak Mutation 681: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:355 - ReplaceComparisonOperator >= -> ==
   * 4 Weak Mutation 680: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:355 - InsertUnaryOp IINC -1 size
   * 5 Weak Mutation 679: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:355 - InsertUnaryOp IINC 1 size
   * 6 Weak Mutation 678: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:355 - InsertUnaryOp Negation of size
   * 7 Weak Mutation 677: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:354 - DeleteStatement: size()I
   * 8 Weak Mutation 702: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:363 - ReplaceVariable i -> j
   * 9 Weak Mutation 703: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:363 - ReplaceVariable i -> size
   * 10 Weak Mutation 700: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:362 - ReplaceComparisonOperator <= -> -1
   * 11 Weak Mutation 699: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:362 - ReplaceComparisonOperator <= -> <
   * 12 Weak Mutation 696: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:362 - ReplaceVariable i -> j
   * 13 Weak Mutation 697: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:362 - ReplaceVariable i -> size
   * 14 Weak Mutation 694: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:362 - InsertUnaryOp IINC 1 i
   * 15 Weak Mutation 695: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:362 - InsertUnaryOp IINC -1 i
   * 16 Weak Mutation 692: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:362 - ReplaceVariable i -> size
   * 17 Weak Mutation 693: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:362 - InsertUnaryOp Negation of i
   * 18 Weak Mutation 690: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:362 - ReplaceConstant - 0 -> 1
   * 19 Weak Mutation 691: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:362 - ReplaceVariable i -> j
   * 20 Weak Mutation 688: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:360 - DeleteField: _states[B
   * 21 Weak Mutation 689: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:362 - ReplaceVariable v -> array
   * 22 Weak Mutation 713: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - InsertUnaryOp IINC 1 j
   * 23 Weak Mutation 712: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - InsertUnaryOp Negation of j
   * 24 Weak Mutation 715: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable j -> i
   * 25 Weak Mutation 714: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - InsertUnaryOp IINC -1 j
   * 26 Weak Mutation 717: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable v -> array
   * 27 Weak Mutation 716: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable j -> size
   * 28 Weak Mutation 719: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable i -> size
   * 29 Weak Mutation 718: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable i -> j
   * 30 Weak Mutation 705: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:363 - InsertUnaryOp IINC 1 i
   * 31 Weak Mutation 704: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:363 - InsertUnaryOp Negation of i
   * 32 Weak Mutation 707: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:363 - ReplaceConstant - 1 -> 0
   * 33 Weak Mutation 706: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:363 - InsertUnaryOp IINC -1 i
   * 34 Weak Mutation 709: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable array -> v
   * 35 Weak Mutation 708: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:363 - ReplaceComparisonOperator != -> ==
   * 36 Weak Mutation 711: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable j -> size
   * 37 Weak Mutation 720: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - InsertUnaryOp Negation of i
   * 38 Weak Mutation 721: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - InsertUnaryOp IINC 1 i
   * 39 Weak Mutation 722: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - InsertUnaryOp IINC -1 i
   * 40 Weak Mutation 723: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:367 - ReplaceVariable array -> v
   * 41 Weak Mutation 681: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:355 - ReplaceComparisonOperator >= -> ==
   * 42 Weak Mutation 710: gnu.trove.map.hash.TDoubleCharHashMap.values([C)[C:364 - ReplaceVariable j -> i
   */

  @Test
  public void test15()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap();
      tDoubleCharHashMap0.adjustOrPutValue((double) (-663), '!', '!');
      char[] charArray0 = new char[4];
      tDoubleCharHashMap0.values(charArray0);
      assertEquals(false, tDoubleCharHashMap0.isEmpty());
      assertEquals("{-663.0=!}", tDoubleCharHashMap0.toString());
  }

  //Test case number: 16
  /*
   * 31 covered goals:
   * 1 Weak Mutation 746: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - ReplaceComparisonOperator != -> -1
   * 2 Weak Mutation 739: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp IINC 1 val
   * 3 Weak Mutation 738: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp Negation of val
   * 4 Weak Mutation 743: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp IINC -1 i
   * 5 Weak Mutation 742: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp IINC 1 i
   * 6 Weak Mutation 741: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp Negation of i
   * 7 Weak Mutation 740: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp IINC -1 val
   * 8 Weak Mutation 747: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:378 - ReplaceConstant - 1 -> 0
   * 9 gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z: I25 Branch 58 IF_ICMPNE L377 - false
   * 10 gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z: I30 Branch 59 IF_ICMPNE L377 - false
   * 11 Weak Mutation 747: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:378 - ReplaceConstant - 1 -> 0
   * 12 Weak Mutation 746: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - ReplaceComparisonOperator != -> -1
   * 13 Weak Mutation 739: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp IINC 1 val
   * 14 Weak Mutation 738: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp Negation of val
   * 15 Weak Mutation 737: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - ReplaceComparisonOperator != -> ==
   * 16 Weak Mutation 736: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - ReplaceConstant - 1 -> 0
   * 17 Weak Mutation 743: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp IINC -1 i
   * 18 Weak Mutation 742: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp IINC 1 i
   * 19 Weak Mutation 741: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp Negation of i
   * 20 Weak Mutation 740: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp IINC -1 val
   * 21 Weak Mutation 728: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:376 - InsertUnaryOp IINC -1 i
   * 22 Weak Mutation 731: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:376 - ReplaceComparisonOperator <= -> -1
   * 23 Weak Mutation 733: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp Negation of i
   * 24 Weak Mutation 734: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp IINC 1 i
   * 25 Weak Mutation 735: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp IINC -1 i
   * 26 Weak Mutation 724: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:373 - DeleteField: _states[B
   * 27 Weak Mutation 725: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:374 - DeleteField: _values[C
   * 28 Weak Mutation 726: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:376 - InsertUnaryOp Negation of i
   * 29 Weak Mutation 727: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:376 - InsertUnaryOp IINC 1 i
   * 30 gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z: I18 Branch 57 IFLE L376 - false
   * 31 gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z: I25 Branch 58 IF_ICMPNE L377 - true
   */

  @Test
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[10];
      char[] charArray0 = new char[7];
      charArray0[6] = 'D';
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      boolean boolean0 = tDoubleCharHashMap0.containsValue('D');
      assertEquals(1, tDoubleCharHashMap0.size());
      assertEquals(true, boolean0);
      assertEquals("{0.0=D}", tDoubleCharHashMap0.toString());
      assertEquals(23, tDoubleCharHashMap0.capacity());
  }

  //Test case number: 17
  /*
   * 6 covered goals:
   * 1 Weak Mutation 745: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - ReplaceComparisonOperator != -> <
   * 2 gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z: I30 Branch 59 IF_ICMPNE L377 - true
   * 3 Weak Mutation 745: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - ReplaceComparisonOperator != -> <
   * 4 Weak Mutation 748: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:381 - ReplaceConstant - 0 -> 1
   * 5 Weak Mutation 730: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:376 - ReplaceComparisonOperator <= -> <
   * 6 gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z: I18 Branch 57 IFLE L376 - true
   */

  @Test
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[10];
      char[] charArray0 = new char[7];
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      boolean boolean0 = tDoubleCharHashMap0.containsValue('D');
      assertEquals(23, tDoubleCharHashMap0.capacity());
      assertEquals(1, tDoubleCharHashMap0.size());
      assertEquals(false, boolean0);
      assertEquals("{0.0=\u0000}", tDoubleCharHashMap0.toString());
  }

  //Test case number: 18
  /*
   * 27 covered goals:
   * 1 Weak Mutation 744: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - ReplaceComparisonOperator != -> >
   * 2 Weak Mutation 748: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:381 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 739: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp IINC 1 val
   * 4 Weak Mutation 738: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp Negation of val
   * 5 Weak Mutation 737: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - ReplaceComparisonOperator != -> ==
   * 6 Weak Mutation 736: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - ReplaceConstant - 1 -> 0
   * 7 Weak Mutation 743: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp IINC -1 i
   * 8 Weak Mutation 742: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp IINC 1 i
   * 9 Weak Mutation 741: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp Negation of i
   * 10 Weak Mutation 740: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp IINC -1 val
   * 11 Weak Mutation 728: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:376 - InsertUnaryOp IINC -1 i
   * 12 Weak Mutation 730: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:376 - ReplaceComparisonOperator <= -> <
   * 13 Weak Mutation 731: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:376 - ReplaceComparisonOperator <= -> -1
   * 14 Weak Mutation 733: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp Negation of i
   * 15 Weak Mutation 734: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp IINC 1 i
   * 16 Weak Mutation 735: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - InsertUnaryOp IINC -1 i
   * 17 Weak Mutation 724: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:373 - DeleteField: _states[B
   * 18 Weak Mutation 725: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:374 - DeleteField: _values[C
   * 19 Weak Mutation 726: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:376 - InsertUnaryOp Negation of i
   * 20 Weak Mutation 727: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:376 - InsertUnaryOp IINC 1 i
   * 21 Weak Mutation 890: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:491 - ReplaceComparisonOperator >= -> >
   * 22 Weak Mutation 933: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:506 - ReplaceVariable newValue -> adjust_amount
   * 23 Weak Mutation 917: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:496 - ReplaceVariable put_amount -> adjust_amount
   * 24 Weak Mutation 744: gnu.trove.map.hash.TDoubleCharHashMap.containsValue(C)Z:377 - ReplaceComparisonOperator != -> >
   * 25 Weak Mutation 890: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:491 - ReplaceComparisonOperator >= -> >
   * 26 Weak Mutation 933: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:506 - ReplaceVariable newValue -> adjust_amount
   * 27 Weak Mutation 917: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:496 - ReplaceVariable put_amount -> adjust_amount
   */

  @Test
  public void test18()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(1924, 1897.231F);
      tDoubleCharHashMap0.adjustOrPutValue(0.0, '~', 'b');
      boolean boolean0 = tDoubleCharHashMap0.containsValue('_');
      assertEquals("{0.0=b}", tDoubleCharHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 19
  /*
   * 5 covered goals:
   * 1 Weak Mutation 750: gnu.trove.map.hash.TDoubleCharHashMap.containsKey(D)Z:387 - DeleteStatement: contains(D)Z
   * 2 Weak Mutation 749: gnu.trove.map.hash.TDoubleCharHashMap.containsKey(D)Z:387 - InsertUnaryOp Negation of key
   * 3 gnu.trove.map.hash.TDoubleCharHashMap.containsKey(D)Z: root-Branch
   * 4 Weak Mutation 750: gnu.trove.map.hash.TDoubleCharHashMap.containsKey(D)Z:387 - DeleteStatement: contains(D)Z
   * 5 Weak Mutation 749: gnu.trove.map.hash.TDoubleCharHashMap.containsKey(D)Z:387 - InsertUnaryOp Negation of key
   */

  @Test
  public void test19()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap((-1268), 568.76984F, (double) (-1268), 'J');
      boolean boolean0 = tDoubleCharHashMap0.containsKey(1205.2877231150103);
      assertEquals(false, boolean0);
  }

  //Test case number: 20
  /*
   * 3 covered goals:
   * 1 Weak Mutation 751: gnu.trove.map.hash.TDoubleCharHashMap.forEachKey(Lgnu/trove/procedure/TDoubleProcedure;)Z:399 - DeleteStatement: forEach(Lgnu/trove/procedure/TDoubleProcedure;)Z
   * 2 gnu.trove.map.hash.TDoubleCharHashMap.forEachKey(Lgnu/trove/procedure/TDoubleProcedure;)Z: root-Branch
   * 3 Weak Mutation 751: gnu.trove.map.hash.TDoubleCharHashMap.forEachKey(Lgnu/trove/procedure/TDoubleProcedure;)Z:399 - DeleteStatement: forEach(Lgnu/trove/procedure/TDoubleProcedure;)Z
   */

  @Test
  public void test20()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(0, 10.0F, (-1.0), '');
      boolean boolean0 = tDoubleCharHashMap0.forEachKey((TDoubleProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 29 covered goals:
   * 1 Weak Mutation 752: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:405 - DeleteField: _states[B
   * 2 Weak Mutation 753: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:406 - DeleteField: _values[C
   * 3 Weak Mutation 754: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:407 - InsertUnaryOp Negation of i
   * 4 Weak Mutation 755: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:407 - InsertUnaryOp IINC 1 i
   * 5 Weak Mutation 758: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:407 - ReplaceComparisonOperator <= -> <
   * 6 Weak Mutation 759: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:407 - ReplaceComparisonOperator <= -> -1
   * 7 Weak Mutation 756: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:407 - InsertUnaryOp IINC -1 i
   * 8 Weak Mutation 762: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:408 - InsertUnaryOp IINC 1 i
   * 9 Weak Mutation 763: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:408 - InsertUnaryOp IINC -1 i
   * 10 Weak Mutation 761: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:408 - InsertUnaryOp Negation of i
   * 11 Weak Mutation 764: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:408 - ReplaceConstant - 1 -> 0
   * 12 Weak Mutation 765: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:408 - ReplaceComparisonOperator != -> ==
   * 13 Weak Mutation 772: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:412 - ReplaceConstant - 1 -> 0
   * 14 gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: I18 Branch 60 IFLE L407 - true
   * 15 gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 16 gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   * 17 Weak Mutation 762: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:408 - InsertUnaryOp IINC 1 i
   * 18 Weak Mutation 763: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:408 - InsertUnaryOp IINC -1 i
   * 19 Weak Mutation 761: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:408 - InsertUnaryOp Negation of i
   * 20 Weak Mutation 764: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:408 - ReplaceConstant - 1 -> 0
   * 21 Weak Mutation 765: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:408 - ReplaceComparisonOperator != -> ==
   * 22 Weak Mutation 754: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:407 - InsertUnaryOp Negation of i
   * 23 Weak Mutation 755: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:407 - InsertUnaryOp IINC 1 i
   * 24 Weak Mutation 752: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:405 - DeleteField: _states[B
   * 25 Weak Mutation 753: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:406 - DeleteField: _values[C
   * 26 Weak Mutation 758: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:407 - ReplaceComparisonOperator <= -> <
   * 27 Weak Mutation 759: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:407 - ReplaceComparisonOperator <= -> -1
   * 28 Weak Mutation 756: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:407 - InsertUnaryOp IINC -1 i
   * 29 Weak Mutation 772: gnu.trove.map.hash.TDoubleCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:412 - ReplaceConstant - 1 -> 0
   */

  @Test
  public void test21()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(1924, 1897.231F);
      boolean boolean0 = tDoubleCharHashMap0.forEachValue((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 22
  /*
   * 27 covered goals:
   * 1 Weak Mutation 800: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:432 - DeleteField: _states[B
   * 2 Weak Mutation 801: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:433 - DeleteField: _values[C
   * 3 Weak Mutation 804: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:434 - InsertUnaryOp IINC -1 i
   * 4 Weak Mutation 806: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:434 - ReplaceComparisonOperator <= -> <
   * 5 Weak Mutation 807: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:434 - ReplaceComparisonOperator <= -> -1
   * 6 Weak Mutation 802: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:434 - InsertUnaryOp Negation of i
   * 7 Weak Mutation 803: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:434 - InsertUnaryOp IINC 1 i
   * 8 Weak Mutation 812: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:435 - ReplaceConstant - 1 -> 0
   * 9 Weak Mutation 813: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:435 - ReplaceComparisonOperator != -> ==
   * 10 Weak Mutation 809: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:435 - InsertUnaryOp Negation of i
   * 11 Weak Mutation 810: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:435 - InsertUnaryOp IINC 1 i
   * 12 Weak Mutation 811: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:435 - InsertUnaryOp IINC -1 i
   * 13 gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V: I18 Branch 66 IFLE L434 - true
   * 14 gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V: I18 Branch 66 IFLE L434 - false
   * 15 gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   * 16 Weak Mutation 804: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:434 - InsertUnaryOp IINC -1 i
   * 17 Weak Mutation 806: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:434 - ReplaceComparisonOperator <= -> <
   * 18 Weak Mutation 807: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:434 - ReplaceComparisonOperator <= -> -1
   * 19 Weak Mutation 800: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:432 - DeleteField: _states[B
   * 20 Weak Mutation 801: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:433 - DeleteField: _values[C
   * 21 Weak Mutation 802: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:434 - InsertUnaryOp Negation of i
   * 22 Weak Mutation 803: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:434 - InsertUnaryOp IINC 1 i
   * 23 Weak Mutation 812: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:435 - ReplaceConstant - 1 -> 0
   * 24 Weak Mutation 813: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:435 - ReplaceComparisonOperator != -> ==
   * 25 Weak Mutation 809: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:435 - InsertUnaryOp Negation of i
   * 26 Weak Mutation 810: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:435 - InsertUnaryOp IINC 1 i
   * 27 Weak Mutation 811: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:435 - InsertUnaryOp IINC -1 i
   */

  @Test
  public void test22()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap();
      tDoubleCharHashMap0.transformValues((TCharFunction) null);
      assertEquals(23, tDoubleCharHashMap0.capacity());
  }

  //Test case number: 23
  /*
   * 27 covered goals:
   * 1 Weak Mutation 820: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:436 - DeleteStatement: execute(C)C
   * 2 Weak Mutation 817: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:436 - InsertUnaryOp Negation of i
   * 3 Weak Mutation 816: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:436 - InsertUnaryOp IINC -1 i
   * 4 Weak Mutation 819: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:436 - InsertUnaryOp IINC -1 i
   * 5 Weak Mutation 818: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:436 - InsertUnaryOp IINC 1 i
   * 6 Weak Mutation 814: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:436 - InsertUnaryOp Negation of i
   * 7 Weak Mutation 815: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:436 - InsertUnaryOp IINC 1 i
   * 8 gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V: I25 Branch 67 IF_ICMPNE L435 - false
   * 9 Weak Mutation 804: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:434 - InsertUnaryOp IINC -1 i
   * 10 Weak Mutation 807: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:434 - ReplaceComparisonOperator <= -> -1
   * 11 Weak Mutation 800: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:432 - DeleteField: _states[B
   * 12 Weak Mutation 801: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:433 - DeleteField: _values[C
   * 13 Weak Mutation 802: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:434 - InsertUnaryOp Negation of i
   * 14 Weak Mutation 803: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:434 - InsertUnaryOp IINC 1 i
   * 15 Weak Mutation 812: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:435 - ReplaceConstant - 1 -> 0
   * 16 Weak Mutation 813: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:435 - ReplaceComparisonOperator != -> ==
   * 17 Weak Mutation 809: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:435 - InsertUnaryOp Negation of i
   * 18 Weak Mutation 810: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:435 - InsertUnaryOp IINC 1 i
   * 19 Weak Mutation 811: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:435 - InsertUnaryOp IINC -1 i
   * 20 Weak Mutation 419: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:205 - ReplaceComparisonOperator >= -> >
   * 21 Weak Mutation 820: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:436 - DeleteStatement: execute(C)C
   * 22 Weak Mutation 817: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:436 - InsertUnaryOp Negation of i
   * 23 Weak Mutation 816: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:436 - InsertUnaryOp IINC -1 i
   * 24 Weak Mutation 819: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:436 - InsertUnaryOp IINC -1 i
   * 25 Weak Mutation 818: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:436 - InsertUnaryOp IINC 1 i
   * 26 Weak Mutation 814: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:436 - InsertUnaryOp Negation of i
   * 27 Weak Mutation 815: gnu.trove.map.hash.TDoubleCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V:436 - InsertUnaryOp IINC 1 i
   */

  @Test
  public void test23()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap();
      tDoubleCharHashMap0.putIfAbsent(0.0, 'o');
      // Undeclared exception!
      try {
        tDoubleCharHashMap0.transformValues((TCharFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 43 covered goals:
   * 1 Weak Mutation 821: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:444 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 822: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:445 - DeleteField: _states[B
   * 3 Weak Mutation 823: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:446 - DeleteField: _set[D
   * 4 Weak Mutation 824: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:447 - DeleteField: _values[C
   * 5 Weak Mutation 825: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:451 - DeleteStatement: tempDisableAutoCompaction()V
   * 6 Weak Mutation 829: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:453 - InsertUnaryOp IINC -1 i
   * 7 Weak Mutation 828: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:453 - InsertUnaryOp IINC 1 i
   * 8 Weak Mutation 831: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:453 - ReplaceComparisonOperator <= -> <
   * 9 Weak Mutation 827: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:453 - InsertUnaryOp Negation of i
   * 10 Weak Mutation 832: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:453 - ReplaceComparisonOperator <= -> -1
   * 11 Weak Mutation 834: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - InsertUnaryOp Negation of i
   * 12 Weak Mutation 835: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - InsertUnaryOp IINC 1 i
   * 13 Weak Mutation 838: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - ReplaceComparisonOperator != -> ==
   * 14 Weak Mutation 836: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - InsertUnaryOp IINC -1 i
   * 15 Weak Mutation 837: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - ReplaceConstant - 1 -> 0
   * 16 Weak Mutation 854: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:461 - DeleteStatement: reenableAutoCompaction(Z)V
   * 17 Weak Mutation 853: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:461 - ReplaceConstant - 1 -> 0
   * 18 Weak Mutation 859: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:464 - InsertUnaryOp IINC -1 modified
   * 19 Weak Mutation 858: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:464 - InsertUnaryOp IINC 1 modified
   * 20 Weak Mutation 857: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:464 - InsertUnaryOp Negation of modified
   * 21 gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z: I31 Branch 68 IFLE L453 - true
   * 22 gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 23 gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   * 24 Weak Mutation 821: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:444 - ReplaceConstant - 0 -> 1
   * 25 Weak Mutation 823: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:446 - DeleteField: _set[D
   * 26 Weak Mutation 822: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:445 - DeleteField: _states[B
   * 27 Weak Mutation 829: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:453 - InsertUnaryOp IINC -1 i
   * 28 Weak Mutation 828: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:453 - InsertUnaryOp IINC 1 i
   * 29 Weak Mutation 831: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:453 - ReplaceComparisonOperator <= -> <
   * 30 Weak Mutation 825: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:451 - DeleteStatement: tempDisableAutoCompaction()V
   * 31 Weak Mutation 824: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:447 - DeleteField: _values[C
   * 32 Weak Mutation 827: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:453 - InsertUnaryOp Negation of i
   * 33 Weak Mutation 854: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:461 - DeleteStatement: reenableAutoCompaction(Z)V
   * 34 Weak Mutation 853: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:461 - ReplaceConstant - 1 -> 0
   * 35 Weak Mutation 859: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:464 - InsertUnaryOp IINC -1 modified
   * 36 Weak Mutation 858: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:464 - InsertUnaryOp IINC 1 modified
   * 37 Weak Mutation 857: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:464 - InsertUnaryOp Negation of modified
   * 38 Weak Mutation 834: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - InsertUnaryOp Negation of i
   * 39 Weak Mutation 835: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - InsertUnaryOp IINC 1 i
   * 40 Weak Mutation 832: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:453 - ReplaceComparisonOperator <= -> -1
   * 41 Weak Mutation 838: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - ReplaceComparisonOperator != -> ==
   * 42 Weak Mutation 836: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - InsertUnaryOp IINC -1 i
   * 43 Weak Mutation 837: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - ReplaceConstant - 1 -> 0
   */

  @Test
  public void test24()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap();
      boolean boolean0 = tDoubleCharHashMap0.retainEntries((TDoubleCharProcedure) null);
      assertEquals(23, tDoubleCharHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 25
  /*
   * 33 covered goals:
   * 1 Weak Mutation 842: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - InsertUnaryOp IINC -1 i
   * 2 Weak Mutation 843: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - InsertUnaryOp Negation of i
   * 3 Weak Mutation 840: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - InsertUnaryOp Negation of i
   * 4 Weak Mutation 841: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - InsertUnaryOp IINC 1 i
   * 5 Weak Mutation 846: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - DeleteStatement: execute(DC)Z
   * 6 Weak Mutation 844: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - InsertUnaryOp IINC 1 i
   * 7 Weak Mutation 845: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - InsertUnaryOp IINC -1 i
   * 8 Weak Mutation 855: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:461 - ReplaceConstant - 1 -> 0
   * 9 Weak Mutation 856: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:461 - DeleteStatement: reenableAutoCompaction(Z)V
   * 10 gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - false
   * 11 Weak Mutation 821: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:444 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 823: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:446 - DeleteField: _set[D
   * 13 Weak Mutation 822: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:445 - DeleteField: _states[B
   * 14 Weak Mutation 829: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:453 - InsertUnaryOp IINC -1 i
   * 15 Weak Mutation 828: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:453 - InsertUnaryOp IINC 1 i
   * 16 Weak Mutation 825: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:451 - DeleteStatement: tempDisableAutoCompaction()V
   * 17 Weak Mutation 824: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:447 - DeleteField: _values[C
   * 18 Weak Mutation 827: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:453 - InsertUnaryOp Negation of i
   * 19 Weak Mutation 834: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - InsertUnaryOp Negation of i
   * 20 Weak Mutation 835: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - InsertUnaryOp IINC 1 i
   * 21 Weak Mutation 832: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:453 - ReplaceComparisonOperator <= -> -1
   * 22 Weak Mutation 838: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - ReplaceComparisonOperator != -> ==
   * 23 Weak Mutation 836: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - InsertUnaryOp IINC -1 i
   * 24 Weak Mutation 837: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - ReplaceConstant - 1 -> 0
   * 25 Weak Mutation 855: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:461 - ReplaceConstant - 1 -> 0
   * 26 Weak Mutation 856: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:461 - DeleteStatement: reenableAutoCompaction(Z)V
   * 27 Weak Mutation 842: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - InsertUnaryOp IINC -1 i
   * 28 Weak Mutation 843: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - InsertUnaryOp Negation of i
   * 29 Weak Mutation 840: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - InsertUnaryOp Negation of i
   * 30 Weak Mutation 841: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - InsertUnaryOp IINC 1 i
   * 31 Weak Mutation 846: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - DeleteStatement: execute(DC)Z
   * 32 Weak Mutation 844: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - InsertUnaryOp IINC 1 i
   * 33 Weak Mutation 845: gnu.trove.map.hash.TDoubleCharHashMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:454 - InsertUnaryOp IINC -1 i
   */

  @Test
  public void test25()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(485);
      tDoubleCharHashMap0.adjustOrPutValue((double) 485, '~', '~');
      // Undeclared exception!
      try {
        tDoubleCharHashMap0.retainEntries((TDoubleCharProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 22 covered goals:
   * 1 Weak Mutation 862: gnu.trove.map.hash.TDoubleCharHashMap.increment(D)Z:470 - DeleteStatement: adjustValue(DC)Z
   * 2 Weak Mutation 861: gnu.trove.map.hash.TDoubleCharHashMap.increment(D)Z:470 - ReplaceConstant - 1 -> 0
   * 3 Weak Mutation 860: gnu.trove.map.hash.TDoubleCharHashMap.increment(D)Z:470 - InsertUnaryOp Negation of key
   * 4 Weak Mutation 864: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:476 - DeleteStatement: index(D)I
   * 5 Weak Mutation 863: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:476 - InsertUnaryOp Negation of key
   * 6 Weak Mutation 865: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:477 - InsertUnaryOp Negation of index
   * 7 Weak Mutation 866: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:477 - InsertUnaryOp IINC 1 index
   * 8 Weak Mutation 867: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:477 - InsertUnaryOp IINC -1 index
   * 9 Weak Mutation 870: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:477 - ReplaceComparisonOperator >= -> -1
   * 10 Weak Mutation 871: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:478 - ReplaceConstant - 0 -> 1
   * 11 gnu.trove.map.hash.TDoubleCharHashMap.increment(D)Z: root-Branch
   * 12 gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z: I9 Branch 71 IFGE L477 - false
   * 13 Weak Mutation 864: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:476 - DeleteStatement: index(D)I
   * 14 Weak Mutation 865: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:477 - InsertUnaryOp Negation of index
   * 15 Weak Mutation 866: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:477 - InsertUnaryOp IINC 1 index
   * 16 Weak Mutation 867: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:477 - InsertUnaryOp IINC -1 index
   * 17 Weak Mutation 870: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:477 - ReplaceComparisonOperator >= -> -1
   * 18 Weak Mutation 871: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:478 - ReplaceConstant - 0 -> 1
   * 19 Weak Mutation 863: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:476 - InsertUnaryOp Negation of key
   * 20 Weak Mutation 862: gnu.trove.map.hash.TDoubleCharHashMap.increment(D)Z:470 - DeleteStatement: adjustValue(DC)Z
   * 21 Weak Mutation 861: gnu.trove.map.hash.TDoubleCharHashMap.increment(D)Z:470 - ReplaceConstant - 1 -> 0
   * 22 Weak Mutation 860: gnu.trove.map.hash.TDoubleCharHashMap.increment(D)Z:470 - InsertUnaryOp Negation of key
   */

  @Test
  public void test26()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap();
      boolean boolean0 = tDoubleCharHashMap0.increment(1322.8984599199352);
      assertEquals(23, tDoubleCharHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 27
  /*
   * 27 covered goals:
   * 1 Weak Mutation 868: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:477 - ReplaceComparisonOperator >= -> ==
   * 2 Weak Mutation 881: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - ReplaceArithmeticOperator + -> /
   * 3 Weak Mutation 880: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - ReplaceArithmeticOperator + -> %
   * 4 Weak Mutation 882: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - ReplaceArithmeticOperator + -> *
   * 5 Weak Mutation 872: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - DeleteField: _values[C
   * 6 Weak Mutation 873: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - InsertUnaryOp Negation of index
   * 7 Weak Mutation 874: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - InsertUnaryOp IINC 1 index
   * 8 Weak Mutation 875: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - InsertUnaryOp IINC -1 index
   * 9 Weak Mutation 876: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - InsertUnaryOp Negation of amount
   * 10 Weak Mutation 877: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - InsertUnaryOp IINC 1 amount
   * 11 Weak Mutation 878: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - InsertUnaryOp IINC -1 amount
   * 12 Weak Mutation 879: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - ReplaceArithmeticOperator + -> -
   * 13 Weak Mutation 883: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:481 - ReplaceConstant - 1 -> 0
   * 14 gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z: I9 Branch 71 IFGE L477 - true
   * 15 Weak Mutation 881: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - ReplaceArithmeticOperator + -> /
   * 16 Weak Mutation 880: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - ReplaceArithmeticOperator + -> %
   * 17 Weak Mutation 883: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:481 - ReplaceConstant - 1 -> 0
   * 18 Weak Mutation 882: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - ReplaceArithmeticOperator + -> *
   * 19 Weak Mutation 868: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:477 - ReplaceComparisonOperator >= -> ==
   * 20 Weak Mutation 872: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - DeleteField: _values[C
   * 21 Weak Mutation 873: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - InsertUnaryOp Negation of index
   * 22 Weak Mutation 874: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - InsertUnaryOp IINC 1 index
   * 23 Weak Mutation 875: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - InsertUnaryOp IINC -1 index
   * 24 Weak Mutation 876: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - InsertUnaryOp Negation of amount
   * 25 Weak Mutation 877: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - InsertUnaryOp IINC 1 amount
   * 26 Weak Mutation 878: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - InsertUnaryOp IINC -1 amount
   * 27 Weak Mutation 879: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - ReplaceArithmeticOperator + -> -
   */

  @Test
  public void test27()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[3] = 353.72005335520174;
      char[] charArray0 = new char[9];
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      boolean boolean0 = tDoubleCharHashMap0.adjustValue(353.72005335520174, 'P');
      assertEquals("{353.72005335520174=P, 0.0=\u0000}", tDoubleCharHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 28
  /*
   * 17 covered goals:
   * 1 Weak Mutation 869: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:477 - ReplaceComparisonOperator >= -> >
   * 2 Weak Mutation 881: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - ReplaceArithmeticOperator + -> /
   * 3 Weak Mutation 880: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - ReplaceArithmeticOperator + -> %
   * 4 Weak Mutation 883: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:481 - ReplaceConstant - 1 -> 0
   * 5 Weak Mutation 864: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:476 - DeleteStatement: index(D)I
   * 6 Weak Mutation 865: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:477 - InsertUnaryOp Negation of index
   * 7 Weak Mutation 866: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:477 - InsertUnaryOp IINC 1 index
   * 8 Weak Mutation 867: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:477 - InsertUnaryOp IINC -1 index
   * 9 Weak Mutation 872: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - DeleteField: _values[C
   * 10 Weak Mutation 873: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - InsertUnaryOp Negation of index
   * 11 Weak Mutation 874: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - InsertUnaryOp IINC 1 index
   * 12 Weak Mutation 875: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - InsertUnaryOp IINC -1 index
   * 13 Weak Mutation 876: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - InsertUnaryOp Negation of amount
   * 14 Weak Mutation 877: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - InsertUnaryOp IINC 1 amount
   * 15 Weak Mutation 878: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:480 - InsertUnaryOp IINC -1 amount
   * 16 Weak Mutation 863: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:476 - InsertUnaryOp Negation of key
   * 17 Weak Mutation 869: gnu.trove.map.hash.TDoubleCharHashMap.adjustValue(DC)Z:477 - ReplaceComparisonOperator >= -> >
   */

  @Test
  public void test28()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      char[] charArray0 = new char[7];
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      boolean boolean0 = tDoubleCharHashMap0.adjustValue((double) '\u0000', '\u0000');
      assertEquals(17, tDoubleCharHashMap0.capacity());
      assertEquals("{0.0=\u0000}", tDoubleCharHashMap0.toString());
      assertEquals(1, tDoubleCharHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 29
  /*
   * 48 covered goals:
   * 1 Weak Mutation 891: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:491 - ReplaceComparisonOperator >= -> -1
   * 2 Weak Mutation 893: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:492 - InsertUnaryOp IINC 1 index
   * 3 Weak Mutation 892: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:492 - InsertUnaryOp Negation of index
   * 4 Weak Mutation 895: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:492 - ReplaceConstant - 1 -> 0
   * 5 Weak Mutation 894: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:492 - InsertUnaryOp IINC -1 index
   * 6 Weak Mutation 899: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:492 - ReplaceArithmeticOperator - -> *
   * 7 Weak Mutation 898: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:492 - ReplaceArithmeticOperator - -> /
   * 8 Weak Mutation 897: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:492 - ReplaceArithmeticOperator - -> %
   * 9 Weak Mutation 896: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:492 - ReplaceArithmeticOperator - -> +
   * 10 Weak Mutation 911: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - ReplaceArithmeticOperator + -> *
   * 11 Weak Mutation 910: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - ReplaceArithmeticOperator + -> /
   * 12 Weak Mutation 909: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - ReplaceArithmeticOperator + -> %
   * 13 Weak Mutation 908: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - ReplaceArithmeticOperator + -> -
   * 14 Weak Mutation 907: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - InsertUnaryOp IINC -1 adjust_amount
   * 15 Weak Mutation 906: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - InsertUnaryOp IINC 1 adjust_amount
   * 16 Weak Mutation 905: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - InsertUnaryOp Negation of adjust_amount
   * 17 Weak Mutation 904: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - ReplaceVariable adjust_amount -> put_amount
   * 18 Weak Mutation 903: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - InsertUnaryOp IINC -1 index
   * 19 Weak Mutation 902: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - InsertUnaryOp IINC 1 index
   * 20 Weak Mutation 901: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - InsertUnaryOp Negation of index
   * 21 Weak Mutation 900: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - DeleteField: _values[C
   * 22 Weak Mutation 912: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:494 - ReplaceConstant - 0 -> 1
   * 23 Weak Mutation 934: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:506 - ReplaceVariable newValue -> put_amount
   * 24 gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C: I9 Branch 72 IFGE L491 - false
   * 25 gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C: I59 Branch 73 IFEQ L502 - true
   * 26 Weak Mutation 891: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:491 - ReplaceComparisonOperator >= -> -1
   * 27 Weak Mutation 893: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:492 - InsertUnaryOp IINC 1 index
   * 28 Weak Mutation 892: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:492 - InsertUnaryOp Negation of index
   * 29 Weak Mutation 895: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:492 - ReplaceConstant - 1 -> 0
   * 30 Weak Mutation 894: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:492 - InsertUnaryOp IINC -1 index
   * 31 Weak Mutation 934: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:506 - ReplaceVariable newValue -> put_amount
   * 32 Weak Mutation 912: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:494 - ReplaceConstant - 0 -> 1
   * 33 Weak Mutation 911: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - ReplaceArithmeticOperator + -> *
   * 34 Weak Mutation 910: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - ReplaceArithmeticOperator + -> /
   * 35 Weak Mutation 909: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - ReplaceArithmeticOperator + -> %
   * 36 Weak Mutation 908: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - ReplaceArithmeticOperator + -> -
   * 37 Weak Mutation 907: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - InsertUnaryOp IINC -1 adjust_amount
   * 38 Weak Mutation 906: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - InsertUnaryOp IINC 1 adjust_amount
   * 39 Weak Mutation 905: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - InsertUnaryOp Negation of adjust_amount
   * 40 Weak Mutation 904: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - ReplaceVariable adjust_amount -> put_amount
   * 41 Weak Mutation 903: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - InsertUnaryOp IINC -1 index
   * 42 Weak Mutation 902: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - InsertUnaryOp IINC 1 index
   * 43 Weak Mutation 901: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - InsertUnaryOp Negation of index
   * 44 Weak Mutation 900: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:493 - DeleteField: _values[C
   * 45 Weak Mutation 899: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:492 - ReplaceArithmeticOperator - -> *
   * 46 Weak Mutation 898: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:492 - ReplaceArithmeticOperator - -> /
   * 47 Weak Mutation 897: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:492 - ReplaceArithmeticOperator - -> %
   * 48 Weak Mutation 896: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:492 - ReplaceArithmeticOperator - -> +
   */

  @Test
  public void test29()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[2] = (double) 1990;
      char[] charArray0 = new char[9];
      doubleArray0[2] = (double) 'V';
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      char char0 = tDoubleCharHashMap0.adjustOrPutValue((double) 'V', 'Q', ']');
      assertEquals("{86.0=Q, 0.0=\u0000}", tDoubleCharHashMap0.toString());
      assertEquals('Q', char0);
  }

  //Test case number: 30
  /*
   * 74 covered goals:
   * 1 Weak Mutation 1348: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.key()D:1148 - DeleteField: _indexI
   * 2 Weak Mutation 1354: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.value()C:1153 - DeleteField: _indexI
   * 3 Weak Mutation 305: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:139 - DeleteStatement: doubleSub(DD)I
   * 4 Weak Mutation 304: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:139 - ReplaceConstant - 0.0 -> -1.0
   * 5 Weak Mutation 308: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:139 - ReplaceComparisonOperator == -> -2
   * 6 Weak Mutation 316: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:143 - ReplaceComparisonOperator == -> -2
   * 7 Weak Mutation 292: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:133 - ReplaceComparisonOperator == -> !=
   * 8 Weak Mutation 293: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:135 - ReplaceVariable hashmap -> this
   * 9 Weak Mutation 294: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:135 - InsertUnaryOp Negation
   * 10 Weak Mutation 295: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:135 - DeleteField: _loadFactorF
   * 11 Weak Mutation 296: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:136 - ReplaceVariable hashmap -> this
   * 12 Weak Mutation 297: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:136 - InsertUnaryOp Negation
   * 13 Weak Mutation 299: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:137 - ReplaceVariable hashmap -> this
   * 14 Weak Mutation 301: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:139 - InsertUnaryOp Negation
   * 15 Weak Mutation 303: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:139 - ReplaceConstant - 0.0 -> 1.0
   * 16 Weak Mutation 326: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - DeleteField: _loadFactorF
   * 17 Weak Mutation 327: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceArithmeticOperator / -> -
   * 18 Weak Mutation 324: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceConstant - 10.0 -> 11.0
   * 19 Weak Mutation 325: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - InsertUnaryOp Negation
   * 20 Weak Mutation 322: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceConstant - 10.0 -> -1.0
   * 21 Weak Mutation 323: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceConstant - 10.0 -> 9.0
   * 22 Weak Mutation 320: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceConstant - 10.0 -> 0.0
   * 23 Weak Mutation 321: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceConstant - 10.0 -> 1.0
   * 24 Weak Mutation 332: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - DeleteStatement: setUp(I)I
   * 25 Weak Mutation 333: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:148 - DeleteStatement: putAll(Lgnu/trove/map/TDoubleCharMap;)V
   * 26 Weak Mutation 330: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceArithmeticOperator / -> *
   * 27 Weak Mutation 331: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - DeleteStatement: ceil(D)D
   * 28 Weak Mutation 328: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceArithmeticOperator / -> +
   * 29 Weak Mutation 329: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:146 - ReplaceArithmeticOperator / -> %
   * 30 Weak Mutation 489: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:245 - DeleteStatement: put(DC)C
   * 31 Weak Mutation 488: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:245 - DeleteStatement: value()C
   * 32 Weak Mutation 485: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:243 - ReplaceComparisonOperator == -> !=
   * 33 Weak Mutation 484: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:243 - DeleteStatement: hasNext()Z
   * 34 Weak Mutation 487: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:245 - DeleteStatement: key()D
   * 35 Weak Mutation 486: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:244 - DeleteStatement: advance()V
   * 36 Weak Mutation 481: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:241 - DeleteStatement: size()I
   * 37 Weak Mutation 483: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:242 - DeleteStatement: iterator()Lgnu/trove/iterator/TDoubleCharIterator;
   * 38 Weak Mutation 482: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:241 - DeleteStatement: ensureCapacity(I)V
   * 39 Weak Mutation 1352: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.value()C:1153 - InsertUnaryOp +1
   * 40 Weak Mutation 1353: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.value()C:1153 - InsertUnaryOp -1
   * 41 Weak Mutation 1350: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.value()C:1153 - DeleteField: _values[C
   * 42 Weak Mutation 1351: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.value()C:1153 - InsertUnaryOp Negation
   * 43 Weak Mutation 1349: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.value()C:1153 - DeleteField: this$0Lgnu/trove/map/hash/TDoubleCharHashMap;
   * 44 Weak Mutation 1346: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.key()D:1148 - InsertUnaryOp +1
   * 45 Weak Mutation 1347: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.key()D:1148 - InsertUnaryOp -1
   * 46 Weak Mutation 1344: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.key()D:1148 - DeleteField: _set[D
   * 47 Weak Mutation 1345: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.key()D:1148 - InsertUnaryOp Negation
   * 48 Weak Mutation 1343: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.key()D:1148 - DeleteField: this$0Lgnu/trove/map/hash/TDoubleCharHashMap;
   * 49 Weak Mutation 1342: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.advance()V:1143 - DeleteStatement: moveToNextIndex()V
   * 50 Weak Mutation 308: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:139 - ReplaceComparisonOperator == -> -2
   * 51 Weak Mutation 316: gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V:143 - ReplaceComparisonOperator == -> -2
   * 52 Weak Mutation 489: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:245 - DeleteStatement: put(DC)C
   * 53 Weak Mutation 488: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:245 - DeleteStatement: value()C
   * 54 Weak Mutation 487: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:245 - DeleteStatement: key()D
   * 55 Weak Mutation 486: gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V:244 - DeleteStatement: advance()V
   * 56 Weak Mutation 1354: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.value()C:1153 - DeleteField: _indexI
   * 57 Weak Mutation 1352: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.value()C:1153 - InsertUnaryOp +1
   * 58 Weak Mutation 1353: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.value()C:1153 - InsertUnaryOp -1
   * 59 Weak Mutation 1350: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.value()C:1153 - DeleteField: _values[C
   * 60 Weak Mutation 1351: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.value()C:1153 - InsertUnaryOp Negation
   * 61 Weak Mutation 1348: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.key()D:1148 - DeleteField: _indexI
   * 62 Weak Mutation 1349: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.value()C:1153 - DeleteField: this$0Lgnu/trove/map/hash/TDoubleCharHashMap;
   * 63 Weak Mutation 1346: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.key()D:1148 - InsertUnaryOp +1
   * 64 Weak Mutation 1347: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.key()D:1148 - InsertUnaryOp -1
   * 65 Weak Mutation 1344: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.key()D:1148 - DeleteField: _set[D
   * 66 Weak Mutation 1345: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.key()D:1148 - InsertUnaryOp Negation
   * 67 Weak Mutation 1343: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.key()D:1148 - DeleteField: this$0Lgnu/trove/map/hash/TDoubleCharHashMap;
   * 68 Weak Mutation 1342: gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.advance()V:1143 - DeleteStatement: moveToNextIndex()V
   * 69 gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.key()D: root-Branch
   * 70 gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.advance()V: root-Branch
   * 71 gnu.trove.map.hash.TDoubleCharHashMap$TDoubleCharHashIterator.value()C: root-Branch
   * 72 gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V: I40 Branch 35 IFEQ L139 - true
   * 73 gnu.trove.map.hash.TDoubleCharHashMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V: I52 Branch 36 IFEQ L143 - true
   * 74 gnu.trove.map.hash.TDoubleCharHashMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V: I15 Branch 43 IFEQ L243 - false
   */

  @Test
  public void test30()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 1990;
      char[] charArray0 = new char[9];
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      TDoubleCharHashMap tDoubleCharHashMap1 = new TDoubleCharHashMap((TDoubleCharMap) tDoubleCharHashMap0);
      assertEquals(0.0, tDoubleCharHashMap1.getNoEntryKey(), 0.01D);
      assertEquals(2, tDoubleCharHashMap1.size());
      assertEquals(23, tDoubleCharHashMap1.capacity());
      assertEquals("{1990.0=\u0000, 0.0=\u0000}", tDoubleCharHashMap0.toString());
      assertEquals(2, tDoubleCharHashMap0.size());
      assertEquals(23, tDoubleCharHashMap0.capacity());
  }

  //Test case number: 31
  /*
   * 5 covered goals:
   * 1 Weak Mutation 938: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1184 - ReplaceComparisonOperator != -> ==
   * 2 Weak Mutation 939: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1185 - ReplaceConstant - 0 -> 1
   * 3 gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - false
   * 4 Weak Mutation 939: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1185 - ReplaceConstant - 0 -> 1
   * 5 Weak Mutation 938: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1184 - ReplaceComparisonOperator != -> ==
   */

  @Test
  public void test31()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(0);
      boolean boolean0 = tDoubleCharHashMap0.equals((Object) "French");
      assertEquals(false, boolean0);
  }

  //Test case number: 32
  /*
   * 134 covered goals:
   * 1 Weak Mutation 941: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1188 - DeleteStatement: size()I
   * 2 Weak Mutation 940: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1188 - DeleteStatement: size()I
   * 3 Weak Mutation 943: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1188 - ReplaceComparisonOperator == -> -2
   * 4 Weak Mutation 946: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1191 - DeleteField: _values[C
   * 5 Weak Mutation 947: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1192 - DeleteField: _states[B
   * 6 Weak Mutation 948: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1193 - DeleteStatement: getNoEntryValue()C
   * 7 Weak Mutation 949: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1194 - DeleteStatement: getNoEntryValue()C
   * 8 Weak Mutation 952: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1195 - InsertUnaryOp IINC -1 i
   * 9 Weak Mutation 954: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1195 - ReplaceComparisonOperator <= -> <
   * 10 Weak Mutation 955: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1195 - ReplaceComparisonOperator <= -> -1
   * 11 Weak Mutation 950: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1195 - InsertUnaryOp Negation of i
   * 12 Weak Mutation 951: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1195 - InsertUnaryOp IINC 1 i
   * 13 Weak Mutation 957: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1196 - InsertUnaryOp Negation of i
   * 14 Weak Mutation 958: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1196 - InsertUnaryOp IINC 1 i
   * 15 Weak Mutation 959: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1196 - InsertUnaryOp IINC -1 i
   * 16 Weak Mutation 961: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1196 - ReplaceComparisonOperator != -> ==
   * 17 Weak Mutation 960: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1196 - ReplaceConstant - 1 -> 0
   * 18 Weak Mutation 963: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1197 - InsertUnaryOp Negation of i
   * 19 Weak Mutation 962: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1197 - DeleteField: _set[D
   * 20 Weak Mutation 965: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1197 - InsertUnaryOp IINC -1 i
   * 21 Weak Mutation 964: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1197 - InsertUnaryOp IINC 1 i
   * 22 Weak Mutation 967: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1198 - DeleteStatement: get(D)C
   * 23 Weak Mutation 966: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1198 - InsertUnaryOp Negation of key
   * 24 Weak Mutation 970: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1199 - InsertUnaryOp IINC -1 i
   * 25 Weak Mutation 969: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1199 - InsertUnaryOp IINC 1 i
   * 26 Weak Mutation 968: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1199 - InsertUnaryOp Negation of i
   * 27 Weak Mutation 984: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceComparisonOperator == -> -2
   * 28 Weak Mutation 976: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp IINC -1 this_value
   * 29 Weak Mutation 982: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp IINC -1 that_value
   * 30 Weak Mutation 980: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp Negation of that_value
   * 31 Weak Mutation 981: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp IINC 1 that_value
   * 32 Weak Mutation 975: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp IINC 1 this_value
   * 33 Weak Mutation 974: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp Negation of this_value
   * 34 gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 35 gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 36 gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 37 gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 38 gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 39 gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 40 gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z: I84 Branch 78 IF_ICMPEQ L1200 - true
   * 41 Weak Mutation 275: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - InsertUnaryOp Negation of size
   * 42 Weak Mutation 274: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - ReplaceVariable size -> i
   * 43 Weak Mutation 273: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - InsertUnaryOp IINC -1 i
   * 44 Weak Mutation 272: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - InsertUnaryOp IINC 1 i
   * 45 Weak Mutation 279: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - ReplaceComparisonOperator >= -> >
   * 46 Weak Mutation 277: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - InsertUnaryOp IINC -1 size
   * 47 Weak Mutation 276: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - InsertUnaryOp IINC 1 size
   * 48 Weak Mutation 283: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:120 - InsertUnaryOp Negation of i
   * 49 Weak Mutation 282: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:120 - ReplaceVariable i -> size
   * 50 Weak Mutation 281: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:120 - ReplaceVariable keys -> _set
   * 51 Weak Mutation 280: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - ReplaceComparisonOperator >= -> -1
   * 52 Weak Mutation 287: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:120 - InsertUnaryOp Negation of i
   * 53 Weak Mutation 286: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:120 - ReplaceVariable i -> size
   * 54 Weak Mutation 285: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:120 - InsertUnaryOp IINC -1 i
   * 55 Weak Mutation 284: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:120 - InsertUnaryOp IINC 1 i
   * 56 Weak Mutation 267: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:118 - ReplaceVariable keys -> _set
   * 57 Weak Mutation 270: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - ReplaceVariable i -> size
   * 58 Weak Mutation 271: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - InsertUnaryOp Negation of i
   * 59 Weak Mutation 268: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:118 - DeleteStatement: min(II)I
   * 60 Weak Mutation 269: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - ReplaceConstant - 0 -> 1
   * 61 Weak Mutation 288: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:120 - InsertUnaryOp IINC 1 i
   * 62 Weak Mutation 289: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:120 - InsertUnaryOp IINC -1 i
   * 63 Weak Mutation 290: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:120 - DeleteStatement: put(DC)C
   * 64 Weak Mutation 291: gnu.trove.map.hash.TDoubleCharHashMap.<init>([D[C)V:119 - ReplaceVariable i -> size
   * 65 Weak Mutation 410: gnu.trove.map.hash.TDoubleCharHashMap.put(DC)C:198 - InsertUnaryOp Negation of index
   * 66 Weak Mutation 411: gnu.trove.map.hash.TDoubleCharHashMap.put(DC)C:198 - InsertUnaryOp IINC 1 index
   * 67 Weak Mutation 408: gnu.trove.map.hash.TDoubleCharHashMap.put(DC)C:198 - InsertUnaryOp IINC 1 value
   * 68 Weak Mutation 409: gnu.trove.map.hash.TDoubleCharHashMap.put(DC)C:198 - InsertUnaryOp IINC -1 value
   * 69 Weak Mutation 412: gnu.trove.map.hash.TDoubleCharHashMap.put(DC)C:198 - InsertUnaryOp IINC -1 index
   * 70 Weak Mutation 406: gnu.trove.map.hash.TDoubleCharHashMap.put(DC)C:198 - InsertUnaryOp Negation of key
   * 71 Weak Mutation 407: gnu.trove.map.hash.TDoubleCharHashMap.put(DC)C:198 - InsertUnaryOp Negation of value
   * 72 Weak Mutation 404: gnu.trove.map.hash.TDoubleCharHashMap.put(DC)C:197 - InsertUnaryOp Negation of key
   * 73 Weak Mutation 405: gnu.trove.map.hash.TDoubleCharHashMap.put(DC)C:197 - DeleteStatement: insertKey(D)I
   * 74 Weak Mutation 442: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:214 - ReplaceComparisonOperator >= -> -1
   * 75 Weak Mutation 443: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:215 - InsertUnaryOp Negation of index
   * 76 Weak Mutation 444: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:215 - ReplaceConstant - 1 -> 0
   * 77 Weak Mutation 445: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:215 - ReplaceArithmeticOperator - -> +
   * 78 Weak Mutation 447: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:215 - ReplaceArithmeticOperator - -> /
   * 79 Weak Mutation 453: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:217 - ReplaceConstant - 0 -> 1
   * 80 Weak Mutation 452: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:216 - InsertUnaryOp IINC -1 index
   * 81 Weak Mutation 451: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:216 - InsertUnaryOp IINC 1 index
   * 82 Weak Mutation 450: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:216 - InsertUnaryOp Negation of index
   * 83 Weak Mutation 449: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:216 - DeleteField: _values[C
   * 84 Weak Mutation 448: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:215 - ReplaceArithmeticOperator - -> *
   * 85 Weak Mutation 500: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:253 - InsertUnaryOp Negation of index
   * 86 Weak Mutation 501: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:253 - InsertUnaryOp IINC 1 index
   * 87 Weak Mutation 502: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:253 - InsertUnaryOp IINC -1 index
   * 88 Weak Mutation 496: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:253 - ReplaceComparisonOperator >= -> >
   * 89 Weak Mutation 499: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:253 - DeleteField: _values[C
   * 90 Weak Mutation 493: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:253 - InsertUnaryOp IINC 1 index
   * 91 Weak Mutation 492: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:253 - InsertUnaryOp Negation of index
   * 92 Weak Mutation 494: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:253 - InsertUnaryOp IINC -1 index
   * 93 Weak Mutation 491: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:252 - DeleteStatement: index(D)I
   * 94 Weak Mutation 490: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:252 - InsertUnaryOp Negation of key
   * 95 Weak Mutation 938: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1184 - ReplaceComparisonOperator != -> ==
   * 96 Weak Mutation 500: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:253 - InsertUnaryOp Negation of index
   * 97 Weak Mutation 501: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:253 - InsertUnaryOp IINC 1 index
   * 98 Weak Mutation 502: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:253 - InsertUnaryOp IINC -1 index
   * 99 Weak Mutation 496: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:253 - ReplaceComparisonOperator >= -> >
   * 100 Weak Mutation 499: gnu.trove.map.hash.TDoubleCharHashMap.get(D)C:253 - DeleteField: _values[C
   * 101 Weak Mutation 957: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1196 - InsertUnaryOp Negation of i
   * 102 Weak Mutation 958: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1196 - InsertUnaryOp IINC 1 i
   * 103 Weak Mutation 959: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1196 - InsertUnaryOp IINC -1 i
   * 104 Weak Mutation 952: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1195 - InsertUnaryOp IINC -1 i
   * 105 Weak Mutation 954: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1195 - ReplaceComparisonOperator <= -> <
   * 106 Weak Mutation 955: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1195 - ReplaceComparisonOperator <= -> -1
   * 107 Weak Mutation 948: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1193 - DeleteStatement: getNoEntryValue()C
   * 108 Weak Mutation 949: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1194 - DeleteStatement: getNoEntryValue()C
   * 109 Weak Mutation 950: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1195 - InsertUnaryOp Negation of i
   * 110 Weak Mutation 951: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1195 - InsertUnaryOp IINC 1 i
   * 111 Weak Mutation 946: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1191 - DeleteField: _values[C
   * 112 Weak Mutation 947: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1192 - DeleteField: _states[B
   * 113 Weak Mutation 941: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1188 - DeleteStatement: size()I
   * 114 Weak Mutation 940: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1188 - DeleteStatement: size()I
   * 115 Weak Mutation 943: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1188 - ReplaceComparisonOperator == -> -2
   * 116 Weak Mutation 984: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceComparisonOperator == -> -2
   * 117 Weak Mutation 976: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp IINC -1 this_value
   * 118 Weak Mutation 982: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp IINC -1 that_value
   * 119 Weak Mutation 980: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp Negation of that_value
   * 120 Weak Mutation 981: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp IINC 1 that_value
   * 121 Weak Mutation 970: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1199 - InsertUnaryOp IINC -1 i
   * 122 Weak Mutation 969: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1199 - InsertUnaryOp IINC 1 i
   * 123 Weak Mutation 968: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1199 - InsertUnaryOp Negation of i
   * 124 Weak Mutation 975: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp IINC 1 this_value
   * 125 Weak Mutation 974: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp Negation of this_value
   * 126 Weak Mutation 963: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1197 - InsertUnaryOp Negation of i
   * 127 Weak Mutation 962: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1197 - DeleteField: _set[D
   * 128 Weak Mutation 961: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1196 - ReplaceComparisonOperator != -> ==
   * 129 Weak Mutation 960: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1196 - ReplaceConstant - 1 -> 0
   * 130 Weak Mutation 967: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1198 - DeleteStatement: get(D)C
   * 131 Weak Mutation 966: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1198 - InsertUnaryOp Negation of key
   * 132 Weak Mutation 965: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1197 - InsertUnaryOp IINC -1 i
   * 133 Weak Mutation 964: gnu.trove.map.hash.TDoubleCharHashMap.equals(Ljava/lang/Object;)Z:1197 - InsertUnaryOp IINC 1 i
   * 134 gnu.trove.map.hash.TDoubleCharHashMap.get(D)C: I9 Branch 44 IFGE L253 - true
   */

  @Test
  public void test32()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      char[] charArray0 = new char[3];
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      boolean boolean0 = tDoubleCharHashMap0.equals((Object) tDoubleCharHashMap0);
      assertEquals(1, tDoubleCharHashMap0.size());
      assertEquals(true, boolean0);
      assertEquals(17, tDoubleCharHashMap0.capacity());
      assertEquals("{0.0=\u0000}", tDoubleCharHashMap0.toString());
  }

  //Test case number: 33
  /*
   * 206 covered goals:
   * 1 Weak Mutation 1019: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - ReplaceVariable hashcode -> i
   * 2 Weak Mutation 1020: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - InsertUnaryOp Negation of hashcode
   * 3 Weak Mutation 1021: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - InsertUnaryOp IINC 1 hashcode
   * 4 Weak Mutation 1022: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - InsertUnaryOp IINC -1 hashcode
   * 5 Weak Mutation 1023: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - DeleteField: _set[D
   * 6 Weak Mutation 1032: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - InsertUnaryOp IINC 1 i
   * 7 Weak Mutation 1033: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - InsertUnaryOp IINC -1 i
   * 8 Weak Mutation 1034: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - DeleteStatement: hash(I)I
   * 9 Weak Mutation 1035: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - ReplaceBitwiseOperator ^ -> &
   * 10 Weak Mutation 1037: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> -
   * 11 Weak Mutation 1038: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> %
   * 12 Weak Mutation 1039: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> /
   * 13 Weak Mutation 1024: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - ReplaceVariable i -> hashcode
   * 14 Weak Mutation 1025: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - InsertUnaryOp Negation of i
   * 15 Weak Mutation 1026: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - InsertUnaryOp IINC 1 i
   * 16 Weak Mutation 1027: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - InsertUnaryOp IINC -1 i
   * 17 Weak Mutation 1028: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - DeleteStatement: hash(D)I
   * 18 Weak Mutation 1029: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - DeleteField: _values[C
   * 19 Weak Mutation 1030: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - ReplaceVariable i -> hashcode
   * 20 Weak Mutation 1031: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - InsertUnaryOp Negation of i
   * 21 Weak Mutation 1040: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> *
   * 22 gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - false
   * 23 Weak Mutation 351: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:181 - InsertUnaryOp IINC 1 newCapacity
   * 24 Weak Mutation 350: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:181 - InsertUnaryOp Negation of newCapacity
   * 25 Weak Mutation 349: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:181 - ReplaceVariable newCapacity -> oldCapacity
   * 26 Weak Mutation 348: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:179 - DeleteField: _states[B
   * 27 Weak Mutation 347: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:178 - DeleteField: _values[C
   * 28 Weak Mutation 346: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:177 - DeleteField: _set[D
   * 29 Weak Mutation 345: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:175 - DeleteField: _set[D
   * 30 Weak Mutation 373: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - ReplaceComparisonOperator <= -> <
   * 31 Weak Mutation 375: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:186 - ReplaceVariable oldStates -> _states
   * 32 Weak Mutation 374: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - ReplaceComparisonOperator <= -> -1
   * 33 Weak Mutation 369: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - InsertUnaryOp IINC -1 i
   * 34 Weak Mutation 368: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - InsertUnaryOp IINC 1 i
   * 35 Weak Mutation 371: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - ReplaceVariable i -> oldCapacity
   * 36 Weak Mutation 370: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - ReplaceVariable i -> newCapacity
   * 37 Weak Mutation 381: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:186 - ReplaceConstant - 1 -> 0
   * 38 Weak Mutation 380: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:186 - InsertUnaryOp IINC -1 i
   * 39 Weak Mutation 383: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:187 - ReplaceVariable oldKeys -> _set
   * 40 Weak Mutation 382: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:186 - ReplaceComparisonOperator != -> ==
   * 41 Weak Mutation 377: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:186 - ReplaceVariable i -> oldCapacity
   * 42 Weak Mutation 376: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:186 - ReplaceVariable i -> newCapacity
   * 43 Weak Mutation 379: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:186 - InsertUnaryOp IINC 1 i
   * 44 Weak Mutation 378: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:186 - InsertUnaryOp Negation of i
   * 45 Weak Mutation 356: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:182 - InsertUnaryOp IINC -1 newCapacity
   * 46 Weak Mutation 357: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:183 - ReplaceVariable newCapacity -> oldCapacity
   * 47 Weak Mutation 358: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:183 - InsertUnaryOp Negation of newCapacity
   * 48 Weak Mutation 359: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:183 - InsertUnaryOp IINC 1 newCapacity
   * 49 Weak Mutation 352: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:181 - InsertUnaryOp IINC -1 newCapacity
   * 50 Weak Mutation 353: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:182 - ReplaceVariable newCapacity -> oldCapacity
   * 51 Weak Mutation 354: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:182 - InsertUnaryOp Negation of newCapacity
   * 52 Weak Mutation 355: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:182 - InsertUnaryOp IINC 1 newCapacity
   * 53 Weak Mutation 364: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - InsertUnaryOp IINC -1 oldCapacity
   * 54 Weak Mutation 365: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - ReplaceVariable i -> newCapacity
   * 55 Weak Mutation 366: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - ReplaceVariable i -> oldCapacity
   * 56 Weak Mutation 367: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - InsertUnaryOp Negation of i
   * 57 Weak Mutation 360: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:183 - InsertUnaryOp IINC -1 newCapacity
   * 58 Weak Mutation 361: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - ReplaceVariable oldCapacity -> newCapacity
   * 59 Weak Mutation 362: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - InsertUnaryOp Negation of oldCapacity
   * 60 Weak Mutation 363: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - InsertUnaryOp IINC 1 oldCapacity
   * 61 Weak Mutation 402: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - InsertUnaryOp IINC 1 i
   * 62 Weak Mutation 403: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - InsertUnaryOp IINC -1 i
   * 63 Weak Mutation 400: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - ReplaceVariable i -> oldCapacity
   * 64 Weak Mutation 401: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - InsertUnaryOp Negation of i
   * 65 Weak Mutation 395: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - InsertUnaryOp Negation of index
   * 66 Weak Mutation 394: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - ReplaceVariable index -> i
   * 67 Weak Mutation 393: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - ReplaceVariable index -> oldCapacity
   * 68 Weak Mutation 392: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - ReplaceVariable index -> newCapacity
   * 69 Weak Mutation 399: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - ReplaceVariable i -> newCapacity
   * 70 Weak Mutation 398: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - ReplaceVariable i -> index
   * 71 Weak Mutation 397: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - InsertUnaryOp IINC -1 index
   * 72 Weak Mutation 396: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - InsertUnaryOp IINC 1 index
   * 73 Weak Mutation 387: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:187 - InsertUnaryOp IINC 1 i
   * 74 Weak Mutation 386: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:187 - InsertUnaryOp Negation of i
   * 75 Weak Mutation 385: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:187 - ReplaceVariable i -> oldCapacity
   * 76 Weak Mutation 384: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:187 - ReplaceVariable i -> newCapacity
   * 77 Weak Mutation 391: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - DeleteField: _values[C
   * 78 Weak Mutation 390: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:188 - DeleteStatement: insertKey(D)I
   * 79 Weak Mutation 389: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:188 - InsertUnaryOp Negation of o
   * 80 Weak Mutation 388: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:187 - InsertUnaryOp IINC -1 i
   * 81 Weak Mutation 437: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:212 - DeleteField: no_entry_valueC
   * 82 Weak Mutation 1016: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1217 - InsertUnaryOp IINC -1 i
   * 83 Weak Mutation 1017: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1217 - ReplaceConstant - 1 -> 0
   * 84 Weak Mutation 1018: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1217 - ReplaceComparisonOperator != -> ==
   * 85 Weak Mutation 1008: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1216 - ReplaceVariable i -> hashcode
   * 86 Weak Mutation 1010: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1216 - ReplaceComparisonOperator <= -> <
   * 87 Weak Mutation 1011: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1216 - ReplaceComparisonOperator <= -> -1
   * 88 Weak Mutation 1013: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1217 - ReplaceVariable i -> hashcode
   * 89 Weak Mutation 1014: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1217 - InsertUnaryOp Negation of i
   * 90 Weak Mutation 1015: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1217 - InsertUnaryOp IINC 1 i
   * 91 Weak Mutation 1001: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1214 - ReplaceConstant - 0 -> 1
   * 92 Weak Mutation 1003: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1216 - DeleteField: _values[C
   * 93 Weak Mutation 1002: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1215 - DeleteField: _states[B
   * 94 Weak Mutation 1005: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1216 - InsertUnaryOp Negation of i
   * 95 Weak Mutation 1004: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1216 - ReplaceVariable i -> hashcode
   * 96 Weak Mutation 1007: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1216 - InsertUnaryOp IINC -1 i
   * 97 Weak Mutation 1006: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1216 - InsertUnaryOp IINC 1 i
   * 98 Weak Mutation 1041: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1222 - InsertUnaryOp Negation of hashcode
   * 99 Weak Mutation 1043: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1222 - InsertUnaryOp IINC -1 hashcode
   * 100 Weak Mutation 1042: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1222 - InsertUnaryOp IINC 1 hashcode
   * 101 Weak Mutation 351: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:181 - InsertUnaryOp IINC 1 newCapacity
   * 102 Weak Mutation 350: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:181 - InsertUnaryOp Negation of newCapacity
   * 103 Weak Mutation 349: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:181 - ReplaceVariable newCapacity -> oldCapacity
   * 104 Weak Mutation 348: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:179 - DeleteField: _states[B
   * 105 Weak Mutation 347: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:178 - DeleteField: _values[C
   * 106 Weak Mutation 346: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:177 - DeleteField: _set[D
   * 107 Weak Mutation 345: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:175 - DeleteField: _set[D
   * 108 Weak Mutation 373: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - ReplaceComparisonOperator <= -> <
   * 109 Weak Mutation 375: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:186 - ReplaceVariable oldStates -> _states
   * 110 Weak Mutation 374: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - ReplaceComparisonOperator <= -> -1
   * 111 Weak Mutation 369: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - InsertUnaryOp IINC -1 i
   * 112 Weak Mutation 368: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - InsertUnaryOp IINC 1 i
   * 113 Weak Mutation 371: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - ReplaceVariable i -> oldCapacity
   * 114 Weak Mutation 370: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - ReplaceVariable i -> newCapacity
   * 115 Weak Mutation 381: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:186 - ReplaceConstant - 1 -> 0
   * 116 Weak Mutation 380: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:186 - InsertUnaryOp IINC -1 i
   * 117 Weak Mutation 383: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:187 - ReplaceVariable oldKeys -> _set
   * 118 Weak Mutation 382: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:186 - ReplaceComparisonOperator != -> ==
   * 119 Weak Mutation 377: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:186 - ReplaceVariable i -> oldCapacity
   * 120 Weak Mutation 376: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:186 - ReplaceVariable i -> newCapacity
   * 121 Weak Mutation 379: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:186 - InsertUnaryOp IINC 1 i
   * 122 Weak Mutation 378: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:186 - InsertUnaryOp Negation of i
   * 123 Weak Mutation 356: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:182 - InsertUnaryOp IINC -1 newCapacity
   * 124 Weak Mutation 357: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:183 - ReplaceVariable newCapacity -> oldCapacity
   * 125 Weak Mutation 358: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:183 - InsertUnaryOp Negation of newCapacity
   * 126 Weak Mutation 359: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:183 - InsertUnaryOp IINC 1 newCapacity
   * 127 Weak Mutation 352: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:181 - InsertUnaryOp IINC -1 newCapacity
   * 128 Weak Mutation 353: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:182 - ReplaceVariable newCapacity -> oldCapacity
   * 129 Weak Mutation 354: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:182 - InsertUnaryOp Negation of newCapacity
   * 130 Weak Mutation 355: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:182 - InsertUnaryOp IINC 1 newCapacity
   * 131 Weak Mutation 364: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - InsertUnaryOp IINC -1 oldCapacity
   * 132 Weak Mutation 365: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - ReplaceVariable i -> newCapacity
   * 133 Weak Mutation 366: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - ReplaceVariable i -> oldCapacity
   * 134 Weak Mutation 367: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - InsertUnaryOp Negation of i
   * 135 Weak Mutation 360: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:183 - InsertUnaryOp IINC -1 newCapacity
   * 136 Weak Mutation 361: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - ReplaceVariable oldCapacity -> newCapacity
   * 137 Weak Mutation 362: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - InsertUnaryOp Negation of oldCapacity
   * 138 Weak Mutation 363: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:185 - InsertUnaryOp IINC 1 oldCapacity
   * 139 Weak Mutation 402: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - InsertUnaryOp IINC 1 i
   * 140 Weak Mutation 403: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - InsertUnaryOp IINC -1 i
   * 141 Weak Mutation 400: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - ReplaceVariable i -> oldCapacity
   * 142 Weak Mutation 401: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - InsertUnaryOp Negation of i
   * 143 Weak Mutation 395: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - InsertUnaryOp Negation of index
   * 144 Weak Mutation 394: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - ReplaceVariable index -> i
   * 145 Weak Mutation 393: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - ReplaceVariable index -> oldCapacity
   * 146 Weak Mutation 392: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - ReplaceVariable index -> newCapacity
   * 147 Weak Mutation 399: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - ReplaceVariable i -> newCapacity
   * 148 Weak Mutation 398: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - ReplaceVariable i -> index
   * 149 Weak Mutation 397: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - InsertUnaryOp IINC -1 index
   * 150 Weak Mutation 396: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - InsertUnaryOp IINC 1 index
   * 151 Weak Mutation 387: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:187 - InsertUnaryOp IINC 1 i
   * 152 Weak Mutation 386: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:187 - InsertUnaryOp Negation of i
   * 153 Weak Mutation 385: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:187 - ReplaceVariable i -> oldCapacity
   * 154 Weak Mutation 384: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:187 - ReplaceVariable i -> newCapacity
   * 155 Weak Mutation 391: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:189 - DeleteField: _values[C
   * 156 Weak Mutation 390: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:188 - DeleteStatement: insertKey(D)I
   * 157 Weak Mutation 389: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:188 - InsertUnaryOp Negation of o
   * 158 Weak Mutation 388: gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V:187 - InsertUnaryOp IINC -1 i
   * 159 Weak Mutation 437: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:212 - DeleteField: no_entry_valueC
   * 160 Weak Mutation 1016: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1217 - InsertUnaryOp IINC -1 i
   * 161 Weak Mutation 1017: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1217 - ReplaceConstant - 1 -> 0
   * 162 Weak Mutation 1018: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1217 - ReplaceComparisonOperator != -> ==
   * 163 Weak Mutation 1019: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - ReplaceVariable hashcode -> i
   * 164 Weak Mutation 1020: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - InsertUnaryOp Negation of hashcode
   * 165 Weak Mutation 1021: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - InsertUnaryOp IINC 1 hashcode
   * 166 Weak Mutation 1022: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - InsertUnaryOp IINC -1 hashcode
   * 167 Weak Mutation 1023: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - DeleteField: _set[D
   * 168 Weak Mutation 1008: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1216 - ReplaceVariable i -> hashcode
   * 169 Weak Mutation 1010: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1216 - ReplaceComparisonOperator <= -> <
   * 170 Weak Mutation 1011: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1216 - ReplaceComparisonOperator <= -> -1
   * 171 Weak Mutation 1013: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1217 - ReplaceVariable i -> hashcode
   * 172 Weak Mutation 1014: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1217 - InsertUnaryOp Negation of i
   * 173 Weak Mutation 1015: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1217 - InsertUnaryOp IINC 1 i
   * 174 Weak Mutation 1001: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1214 - ReplaceConstant - 0 -> 1
   * 175 Weak Mutation 1003: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1216 - DeleteField: _values[C
   * 176 Weak Mutation 1002: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1215 - DeleteField: _states[B
   * 177 Weak Mutation 1005: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1216 - InsertUnaryOp Negation of i
   * 178 Weak Mutation 1004: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1216 - ReplaceVariable i -> hashcode
   * 179 Weak Mutation 1007: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1216 - InsertUnaryOp IINC -1 i
   * 180 Weak Mutation 1006: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1216 - InsertUnaryOp IINC 1 i
   * 181 Weak Mutation 1032: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - InsertUnaryOp IINC 1 i
   * 182 Weak Mutation 1033: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - InsertUnaryOp IINC -1 i
   * 183 Weak Mutation 1034: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - DeleteStatement: hash(I)I
   * 184 Weak Mutation 1035: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - ReplaceBitwiseOperator ^ -> &
   * 185 Weak Mutation 1037: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> -
   * 186 Weak Mutation 1038: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> %
   * 187 Weak Mutation 1039: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> /
   * 188 Weak Mutation 1024: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - ReplaceVariable i -> hashcode
   * 189 Weak Mutation 1025: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - InsertUnaryOp Negation of i
   * 190 Weak Mutation 1026: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - InsertUnaryOp IINC 1 i
   * 191 Weak Mutation 1027: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - InsertUnaryOp IINC -1 i
   * 192 Weak Mutation 1028: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - DeleteStatement: hash(D)I
   * 193 Weak Mutation 1029: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - DeleteField: _values[C
   * 194 Weak Mutation 1030: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - ReplaceVariable i -> hashcode
   * 195 Weak Mutation 1031: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - InsertUnaryOp Negation of i
   * 196 Weak Mutation 1041: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1222 - InsertUnaryOp Negation of hashcode
   * 197 Weak Mutation 1040: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> *
   * 198 Weak Mutation 1043: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1222 - InsertUnaryOp IINC -1 hashcode
   * 199 Weak Mutation 1042: gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I:1222 - InsertUnaryOp IINC 1 hashcode
   * 200 gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 201 gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 202 gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 203 gnu.trove.map.hash.TDoubleCharHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 204 gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 205 gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 206 gnu.trove.map.hash.TDoubleCharHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   */

  @Test
  public void test33()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap((-905), (float) (-905), (-1.0), 'i');
      tDoubleCharHashMap0.putIfAbsent((double) (-905), 'J');
      int int0 = tDoubleCharHashMap0.hashCode();
      assertEquals(1, tDoubleCharHashMap0.size());
      assertEquals((-1064548278), int0);
  }

  //Test case number: 34
  /*
   * 131 covered goals:
   * 1 Weak Mutation 1407: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1234 - ReplaceConstant - ,  -> 
   * 2 Weak Mutation 1406: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1234 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 3 Weak Mutation 1408: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1234 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 4 gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z: I4 Branch 115 IFEQ L1233 - true
   * 5 Weak Mutation 441: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:214 - ReplaceComparisonOperator >= -> >
   * 6 Weak Mutation 419: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:205 - ReplaceComparisonOperator >= -> >
   * 7 Weak Mutation 791: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - InsertUnaryOp IINC 1 i
   * 8 Weak Mutation 790: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - InsertUnaryOp Negation of i
   * 9 Weak Mutation 788: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - ReplaceComparisonOperator != -> ==
   * 10 Weak Mutation 787: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - ReplaceConstant - 1 -> 0
   * 11 Weak Mutation 786: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - InsertUnaryOp IINC -1 i
   * 12 Weak Mutation 785: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - InsertUnaryOp IINC 1 i
   * 13 Weak Mutation 784: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - InsertUnaryOp Negation of i
   * 14 Weak Mutation 799: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:426 - ReplaceConstant - 1 -> 0
   * 15 Weak Mutation 797: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - ReplaceComparisonOperator != -> ==
   * 16 Weak Mutation 796: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - DeleteStatement: execute(DC)Z
   * 17 Weak Mutation 795: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - InsertUnaryOp IINC -1 i
   * 18 Weak Mutation 794: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - InsertUnaryOp IINC 1 i
   * 19 Weak Mutation 793: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - InsertUnaryOp Negation of i
   * 20 Weak Mutation 792: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - InsertUnaryOp IINC -1 i
   * 21 Weak Mutation 774: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:419 - DeleteField: _set[D
   * 22 Weak Mutation 775: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:420 - DeleteField: _values[C
   * 23 Weak Mutation 773: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:418 - DeleteField: _states[B
   * 24 Weak Mutation 782: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:421 - ReplaceComparisonOperator <= -> -1
   * 25 Weak Mutation 781: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:421 - ReplaceComparisonOperator <= -> <
   * 26 Weak Mutation 778: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:421 - InsertUnaryOp IINC 1 i
   * 27 Weak Mutation 779: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:421 - InsertUnaryOp IINC -1 i
   * 28 Weak Mutation 777: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:421 - InsertUnaryOp Negation of i
   * 29 Weak Mutation 885: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:488 - DeleteStatement: insertKey(D)I
   * 30 Weak Mutation 884: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:488 - InsertUnaryOp Negation of key
   * 31 Weak Mutation 887: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:491 - InsertUnaryOp IINC 1 index
   * 32 Weak Mutation 886: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:491 - InsertUnaryOp Negation of index
   * 33 Weak Mutation 889: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:491 - ReplaceComparisonOperator >= -> ==
   * 34 Weak Mutation 888: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:491 - InsertUnaryOp IINC -1 index
   * 35 Weak Mutation 937: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:506 - InsertUnaryOp IINC -1 newValue
   * 36 Weak Mutation 936: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:506 - InsertUnaryOp IINC 1 newValue
   * 37 Weak Mutation 932: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:503 - DeleteStatement: postInsertHook(Z)V
   * 38 Weak Mutation 935: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:506 - InsertUnaryOp Negation of newValue
   * 39 Weak Mutation 929: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:502 - ReplaceComparisonOperator == -> !=
   * 40 Weak Mutation 928: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:502 - InsertUnaryOp IINC -1 isNewMapping
   * 41 Weak Mutation 931: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:503 - DeleteField: consumeFreeSlotZ
   * 42 Weak Mutation 930: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:503 - InsertUnaryOp Negation
   * 43 Weak Mutation 926: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:502 - InsertUnaryOp Negation of isNewMapping
   * 44 Weak Mutation 927: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:502 - InsertUnaryOp IINC 1 isNewMapping
   * 45 Weak Mutation 924: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:500 - InsertUnaryOp IINC 1 index
   * 46 Weak Mutation 925: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:500 - InsertUnaryOp IINC -1 index
   * 47 Weak Mutation 922: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:500 - DeleteField: _states[B
   * 48 Weak Mutation 923: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:500 - InsertUnaryOp Negation of index
   * 49 Weak Mutation 920: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:496 - InsertUnaryOp IINC -1 put_amount
   * 50 Weak Mutation 921: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:497 - ReplaceConstant - 1 -> 0
   * 51 Weak Mutation 918: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:496 - InsertUnaryOp Negation of put_amount
   * 52 Weak Mutation 919: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:496 - InsertUnaryOp IINC 1 put_amount
   * 53 Weak Mutation 916: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:496 - InsertUnaryOp IINC -1 index
   * 54 Weak Mutation 914: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:496 - InsertUnaryOp Negation of index
   * 55 Weak Mutation 915: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:496 - InsertUnaryOp IINC 1 index
   * 56 Weak Mutation 913: gnu.trove.map.hash.TDoubleCharHashMap.adjustOrPutValue(DCC)C:496 - DeleteField: _values[C
   * 57 Weak Mutation 1048: gnu.trove.map.hash.TDoubleCharHashMap.toString()Ljava/lang/String;:1243 - DeleteStatement: toString()Ljava/lang/String;
   * 58 Weak Mutation 1045: gnu.trove.map.hash.TDoubleCharHashMap.toString()Ljava/lang/String;:1230 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z
   * 59 Weak Mutation 1044: gnu.trove.map.hash.TDoubleCharHashMap.toString()Ljava/lang/String;:1229 - ReplaceConstant - { -> 
   * 60 Weak Mutation 1047: gnu.trove.map.hash.TDoubleCharHashMap.toString()Ljava/lang/String;:1242 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 61 Weak Mutation 1046: gnu.trove.map.hash.TDoubleCharHashMap.toString()Ljava/lang/String;:1242 - ReplaceConstant - } -> 
   * 62 Weak Mutation 1405: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1233 - ReplaceConstant - 0 -> 1
   * 63 Weak Mutation 1404: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1233 - ReplaceComparisonOperator == -> !=
   * 64 Weak Mutation 1403: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1233 - DeleteField: firstZ
   * 65 Weak Mutation 1402: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1233 - InsertUnaryOp Negation
   * 66 Weak Mutation 1411: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1236 - DeleteStatement: append(D)Ljava/lang/StringBuilder;
   * 67 Weak Mutation 1410: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1236 - InsertUnaryOp Negation of key
   * 68 Weak Mutation 1409: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1236 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 69 Weak Mutation 1415: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1238 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 70 Weak Mutation 1414: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1237 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 71 Weak Mutation 1413: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1237 - ReplaceConstant - = -> 
   * 72 Weak Mutation 1412: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1237 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 73 Weak Mutation 1419: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1238 - DeleteStatement: append(C)Ljava/lang/StringBuilder;
   * 74 Weak Mutation 1418: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1238 - InsertUnaryOp IINC -1 value
   * 75 Weak Mutation 1417: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1238 - InsertUnaryOp IINC 1 value
   * 76 Weak Mutation 1416: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1238 - InsertUnaryOp Negation of value
   * 77 Weak Mutation 1420: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1239 - ReplaceConstant - 1 -> 0
   * 78 Weak Mutation 791: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - InsertUnaryOp IINC 1 i
   * 79 Weak Mutation 790: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - InsertUnaryOp Negation of i
   * 80 Weak Mutation 788: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - ReplaceComparisonOperator != -> ==
   * 81 Weak Mutation 787: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - ReplaceConstant - 1 -> 0
   * 82 Weak Mutation 786: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - InsertUnaryOp IINC -1 i
   * 83 Weak Mutation 785: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - InsertUnaryOp IINC 1 i
   * 84 Weak Mutation 784: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - InsertUnaryOp Negation of i
   * 85 Weak Mutation 799: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:426 - ReplaceConstant - 1 -> 0
   * 86 Weak Mutation 797: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - ReplaceComparisonOperator != -> ==
   * 87 Weak Mutation 796: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - DeleteStatement: execute(DC)Z
   * 88 Weak Mutation 795: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - InsertUnaryOp IINC -1 i
   * 89 Weak Mutation 794: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - InsertUnaryOp IINC 1 i
   * 90 Weak Mutation 793: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - InsertUnaryOp Negation of i
   * 91 Weak Mutation 792: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:422 - InsertUnaryOp IINC -1 i
   * 92 Weak Mutation 774: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:419 - DeleteField: _set[D
   * 93 Weak Mutation 775: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:420 - DeleteField: _values[C
   * 94 Weak Mutation 773: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:418 - DeleteField: _states[B
   * 95 Weak Mutation 782: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:421 - ReplaceComparisonOperator <= -> -1
   * 96 Weak Mutation 781: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:421 - ReplaceComparisonOperator <= -> <
   * 97 Weak Mutation 778: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:421 - InsertUnaryOp IINC 1 i
   * 98 Weak Mutation 779: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:421 - InsertUnaryOp IINC -1 i
   * 99 Weak Mutation 777: gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z:421 - InsertUnaryOp Negation of i
   * 100 Weak Mutation 1048: gnu.trove.map.hash.TDoubleCharHashMap.toString()Ljava/lang/String;:1243 - DeleteStatement: toString()Ljava/lang/String;
   * 101 Weak Mutation 1045: gnu.trove.map.hash.TDoubleCharHashMap.toString()Ljava/lang/String;:1230 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z
   * 102 Weak Mutation 1044: gnu.trove.map.hash.TDoubleCharHashMap.toString()Ljava/lang/String;:1229 - ReplaceConstant - { -> 
   * 103 Weak Mutation 1047: gnu.trove.map.hash.TDoubleCharHashMap.toString()Ljava/lang/String;:1242 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 104 Weak Mutation 1046: gnu.trove.map.hash.TDoubleCharHashMap.toString()Ljava/lang/String;:1242 - ReplaceConstant - } -> 
   * 105 Weak Mutation 1405: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1233 - ReplaceConstant - 0 -> 1
   * 106 Weak Mutation 1404: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1233 - ReplaceComparisonOperator == -> !=
   * 107 Weak Mutation 1407: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1234 - ReplaceConstant - ,  -> 
   * 108 Weak Mutation 1406: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1234 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 109 Weak Mutation 1403: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1233 - DeleteField: firstZ
   * 110 Weak Mutation 1402: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1233 - InsertUnaryOp Negation
   * 111 Weak Mutation 1411: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1236 - DeleteStatement: append(D)Ljava/lang/StringBuilder;
   * 112 Weak Mutation 1410: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1236 - InsertUnaryOp Negation of key
   * 113 Weak Mutation 1409: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1236 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 114 Weak Mutation 1408: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1234 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 115 Weak Mutation 1415: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1238 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 116 Weak Mutation 1414: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1237 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 117 Weak Mutation 1413: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1237 - ReplaceConstant - = -> 
   * 118 Weak Mutation 1412: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1237 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 119 Weak Mutation 1419: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1238 - DeleteStatement: append(C)Ljava/lang/StringBuilder;
   * 120 Weak Mutation 1418: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1238 - InsertUnaryOp IINC -1 value
   * 121 Weak Mutation 1417: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1238 - InsertUnaryOp IINC 1 value
   * 122 Weak Mutation 1416: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1238 - InsertUnaryOp Negation of value
   * 123 Weak Mutation 1420: gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z:1239 - ReplaceConstant - 1 -> 0
   * 124 gnu.trove.map.hash.TDoubleCharHashMap.toString()Ljava/lang/String;: root-Branch
   * 125 gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 126 gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 127 gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 128 gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 129 gnu.trove.map.hash.TDoubleCharHashMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z: I39 Branch 65 IFNE L422 - true
   * 130 gnu.trove.map.hash.TDoubleCharHashMap$1.<init>(Lgnu/trove/map/hash/TDoubleCharHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 131 gnu.trove.map.hash.TDoubleCharHashMap$1.execute(DC)Z: I4 Branch 115 IFEQ L1233 - false
   */

  @Test
  public void test34()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(485);
      tDoubleCharHashMap0.adjustOrPutValue((double) 485, '~', '~');
      tDoubleCharHashMap0.putIfAbsent(0.0, 'z');
      String string0 = tDoubleCharHashMap0.toString();
      assertEquals(2, tDoubleCharHashMap0.size());
      assertEquals("{485.0=~, 0.0=z}", string0);
  }

  //Test case number: 35
  /*
   * 93 covered goals:
   * 1 Weak Mutation 1054: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - DeleteField: _sizeI
   * 2 Weak Mutation 1070: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - InsertUnaryOp Negation of i
   * 3 Weak Mutation 1071: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - InsertUnaryOp IINC 1 i
   * 4 Weak Mutation 1069: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - DeleteField: _set[D
   * 5 Weak Mutation 1073: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - DeleteStatement: writeDouble(D)V
   * 6 Weak Mutation 1072: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - InsertUnaryOp IINC -1 i
   * 7 Weak Mutation 1075: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - InsertUnaryOp Negation of i
   * 8 Weak Mutation 1074: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - DeleteField: _values[C
   * 9 Weak Mutation 1078: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - DeleteStatement: writeChar(I)V
   * 10 Weak Mutation 1077: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - InsertUnaryOp IINC -1 i
   * 11 Weak Mutation 1076: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - InsertUnaryOp IINC 1 i
   * 12 gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - false
   * 13 Weak Mutation 414: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:204 - DeleteStatement: insertKey(D)I
   * 14 Weak Mutation 415: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:205 - InsertUnaryOp Negation of index
   * 15 Weak Mutation 413: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:204 - InsertUnaryOp Negation of key
   * 16 Weak Mutation 440: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:214 - ReplaceComparisonOperator >= -> ==
   * 17 Weak Mutation 432: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:207 - InsertUnaryOp IINC 1 value
   * 18 Weak Mutation 433: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:207 - InsertUnaryOp IINC -1 value
   * 19 Weak Mutation 434: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:207 - InsertUnaryOp Negation of index
   * 20 Weak Mutation 435: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:207 - InsertUnaryOp IINC 1 index
   * 21 Weak Mutation 436: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:207 - InsertUnaryOp IINC -1 index
   * 22 Weak Mutation 438: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:213 - ReplaceConstant - 1 -> 0
   * 23 Weak Mutation 439: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:214 - InsertUnaryOp Negation of index
   * 24 Weak Mutation 431: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:207 - InsertUnaryOp Negation of value
   * 25 Weak Mutation 430: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:207 - InsertUnaryOp Negation of key
   * 26 Weak Mutation 417: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:205 - InsertUnaryOp IINC -1 index
   * 27 Weak Mutation 416: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:205 - InsertUnaryOp IINC 1 index
   * 28 Weak Mutation 418: gnu.trove.map.hash.TDoubleCharHashMap.putIfAbsent(DC)C:205 - ReplaceComparisonOperator >= -> ==
   * 29 Weak Mutation 468: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:225 - InsertUnaryOp Negation of previous
   * 30 Weak Mutation 466: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:222 - DeleteStatement: postInsertHook(Z)V
   * 31 Weak Mutation 467: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:225 - ReplaceVariable previous -> value
   * 32 Weak Mutation 464: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:222 - InsertUnaryOp Negation
   * 33 Weak Mutation 465: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:222 - DeleteField: consumeFreeSlotZ
   * 34 Weak Mutation 463: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:221 - ReplaceComparisonOperator == -> !=
   * 35 Weak Mutation 462: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:221 - InsertUnaryOp Negation of isNewMapping
   * 36 Weak Mutation 461: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:219 - InsertUnaryOp IINC -1 value
   * 37 Weak Mutation 460: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:219 - InsertUnaryOp IINC 1 value
   * 38 Weak Mutation 459: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:219 - InsertUnaryOp Negation of value
   * 39 Weak Mutation 458: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:219 - ReplaceVariable value -> previous
   * 40 Weak Mutation 457: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:219 - InsertUnaryOp IINC -1 index
   * 41 Weak Mutation 456: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:219 - InsertUnaryOp IINC 1 index
   * 42 Weak Mutation 455: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:219 - InsertUnaryOp Negation of index
   * 43 Weak Mutation 454: gnu.trove.map.hash.TDoubleCharHashMap.doPut(DCI)C:219 - DeleteField: _values[C
   * 44 Weak Mutation 1049: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1250 - ReplaceConstant - 0 -> 1
   * 45 Weak Mutation 1051: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - InsertUnaryOp Negation
   * 46 Weak Mutation 1050: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1250 - DeleteStatement: writeByte(I)V
   * 47 Weak Mutation 1053: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - InsertUnaryOp -1
   * 48 Weak Mutation 1052: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - InsertUnaryOp +1
   * 49 Weak Mutation 1055: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - DeleteStatement: writeInt(I)V
   * 50 Weak Mutation 1066: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - InsertUnaryOp IINC -1 i
   * 51 Weak Mutation 1067: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - ReplaceConstant - 1 -> 0
   * 52 Weak Mutation 1064: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - InsertUnaryOp Negation of i
   * 53 Weak Mutation 1065: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - InsertUnaryOp IINC 1 i
   * 54 Weak Mutation 1068: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - ReplaceComparisonOperator != -> ==
   * 55 Weak Mutation 1058: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - InsertUnaryOp IINC 1 i
   * 56 Weak Mutation 1059: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - InsertUnaryOp IINC -1 i
   * 57 Weak Mutation 1056: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - DeleteField: _states[B
   * 58 Weak Mutation 1057: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - InsertUnaryOp Negation of i
   * 59 Weak Mutation 1062: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - ReplaceComparisonOperator <= -> -1
   * 60 Weak Mutation 1063: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - DeleteField: _states[B
   * 61 Weak Mutation 1061: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - ReplaceComparisonOperator <= -> <
   * 62 Weak Mutation 1049: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1250 - ReplaceConstant - 0 -> 1
   * 63 Weak Mutation 1051: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - InsertUnaryOp Negation
   * 64 Weak Mutation 1050: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1250 - DeleteStatement: writeByte(I)V
   * 65 Weak Mutation 1053: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - InsertUnaryOp -1
   * 66 Weak Mutation 1052: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - InsertUnaryOp +1
   * 67 Weak Mutation 1055: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - DeleteStatement: writeInt(I)V
   * 68 Weak Mutation 1054: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - DeleteField: _sizeI
   * 69 Weak Mutation 1066: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - InsertUnaryOp IINC -1 i
   * 70 Weak Mutation 1067: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - ReplaceConstant - 1 -> 0
   * 71 Weak Mutation 1064: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - InsertUnaryOp Negation of i
   * 72 Weak Mutation 1065: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - InsertUnaryOp IINC 1 i
   * 73 Weak Mutation 1070: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - InsertUnaryOp Negation of i
   * 74 Weak Mutation 1071: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - InsertUnaryOp IINC 1 i
   * 75 Weak Mutation 1068: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - ReplaceComparisonOperator != -> ==
   * 76 Weak Mutation 1069: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - DeleteField: _set[D
   * 77 Weak Mutation 1058: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - InsertUnaryOp IINC 1 i
   * 78 Weak Mutation 1059: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - InsertUnaryOp IINC -1 i
   * 79 Weak Mutation 1056: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - DeleteField: _states[B
   * 80 Weak Mutation 1057: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - InsertUnaryOp Negation of i
   * 81 Weak Mutation 1062: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - ReplaceComparisonOperator <= -> -1
   * 82 Weak Mutation 1063: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - DeleteField: _states[B
   * 83 Weak Mutation 1061: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - ReplaceComparisonOperator <= -> <
   * 84 Weak Mutation 1075: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - InsertUnaryOp Negation of i
   * 85 Weak Mutation 1074: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - DeleteField: _values[C
   * 86 Weak Mutation 1073: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - DeleteStatement: writeDouble(D)V
   * 87 Weak Mutation 1072: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - InsertUnaryOp IINC -1 i
   * 88 Weak Mutation 1078: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - DeleteStatement: writeChar(I)V
   * 89 Weak Mutation 1077: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - InsertUnaryOp IINC -1 i
   * 90 Weak Mutation 1076: gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - InsertUnaryOp IINC 1 i
   * 91 gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - true
   * 92 gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - false
   * 93 gnu.trove.map.hash.TDoubleCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - true
   */

  @Test
  public void test35()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap();
      tDoubleCharHashMap0.putIfAbsent(195.8382055631386, 'C');
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tDoubleCharHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(1, tDoubleCharHashMap0.size());
      assertEquals("{195.8382055631386=C}", tDoubleCharHashMap0.toString());
  }

  //Test case number: 36
  /*
   * 2 covered goals:
   * 1 Weak Mutation 1079: gnu.trove.map.hash.TDoubleCharHashMap.readExternal(Ljava/io/ObjectInput;)V:1271 - DeleteStatement: readByte()B
   * 2 Weak Mutation 1079: gnu.trove.map.hash.TDoubleCharHashMap.readExternal(Ljava/io/ObjectInput;)V:1271 - DeleteStatement: readByte()B
   */

  @Test
  public void test36()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap();
      // Undeclared exception!
      try {
        tDoubleCharHashMap0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 37
  /*
   * 13 covered goals:
   * 1 gnu.trove.map.hash.TDoubleCharHashMap.valueCollection()Lgnu/trove/TCharCollection;: root-Branch
   * 2 gnu.trove.map.hash.TDoubleCharHashMap$TValueView.<init>(Lgnu/trove/map/hash/TDoubleCharHashMap;)V: root-Branch
   * 3 Weak Mutation 343: gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I:164 - InsertUnaryOp IINC 1 capacity
   * 4 Weak Mutation 342: gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I:164 - InsertUnaryOp Negation of capacity
   * 5 Weak Mutation 341: gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I:164 - ReplaceVariable capacity -> initialCapacity
   * 6 Weak Mutation 340: gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I:163 - InsertUnaryOp IINC -1 capacity
   * 7 Weak Mutation 339: gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I:163 - InsertUnaryOp IINC 1 capacity
   * 8 Weak Mutation 338: gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I:163 - InsertUnaryOp Negation of capacity
   * 9 Weak Mutation 337: gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I:163 - ReplaceVariable capacity -> initialCapacity
   * 10 Weak Mutation 336: gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I:162 - InsertUnaryOp IINC -1 initialCapacity
   * 11 Weak Mutation 344: gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I:164 - InsertUnaryOp IINC -1 capacity
   * 12 Weak Mutation 334: gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I:162 - InsertUnaryOp Negation of initialCapacity
   * 13 Weak Mutation 335: gnu.trove.map.hash.TDoubleCharHashMap.setUp(I)I:162 - InsertUnaryOp IINC 1 initialCapacity
   */

  @Test
  public void test37()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap();
      tDoubleCharHashMap0.valueCollection();
      assertEquals(23, tDoubleCharHashMap0.capacity());
  }
}

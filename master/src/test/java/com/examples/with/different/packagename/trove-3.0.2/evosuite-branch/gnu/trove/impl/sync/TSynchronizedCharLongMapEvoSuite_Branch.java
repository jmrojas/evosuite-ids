/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TLongFunction;
import gnu.trove.impl.sync.TSynchronizedCharLongMap;
import gnu.trove.impl.sync.TSynchronizedCharSet;
import gnu.trove.impl.sync.TSynchronizedLongCollection;
import gnu.trove.map.TCharLongMap;
import gnu.trove.map.hash.TCharLongHashMap;
import gnu.trove.procedure.TCharLongProcedure;
import gnu.trove.procedure.TCharProcedure;
import gnu.trove.procedure.TLongProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedCharLongMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.toString()Ljava/lang/String;: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedCharLongMap.<init>(Lgnu/trove/map/TCharLongMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap((-909));
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      String string0 = tSynchronizedCharLongMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.containsValue(J)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedCharLongMap.<init>(Lgnu/trove/map/TCharLongMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0, (Object) "Canada");
      boolean boolean0 = tSynchronizedCharLongMap0.containsValue(0L);
      assertEquals(false, boolean0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.increment(C)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      boolean boolean0 = tSynchronizedCharLongMap0.increment('\u0082');
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      boolean boolean0 = tSynchronizedCharLongMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.size()I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedCharLongMap.iterator()Lgnu/trove/iterator/TCharLongIterator;: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0, (Object) "Canada");
      tCharLongHashMap0.putAll((TCharLongMap) tSynchronizedCharLongMap0);
      assertEquals("{}", tSynchronizedCharLongMap0.toString());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      HashMap<Character, Long> hashMap0 = new HashMap<Character, Long>();
      tSynchronizedCharLongMap0.putAll((Map<? extends Character, ? extends Long>) hashMap0);
      assertEquals("{}", tSynchronizedCharLongMap0.toString());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.clear()V: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      tSynchronizedCharLongMap0.clear();
      assertEquals(0L, tSynchronizedCharLongMap0.getNoEntryValue());
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.values([J)[J: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap((-5), (float) (-5), '@', (long) (-5));
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      long[] longArray0 = new long[28];
      long[] longArray1 = tSynchronizedCharLongMap0.values(longArray0);
      assertSame(longArray1, longArray0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.putAll(Lgnu/trove/map/TCharLongMap;)V: root-Branch
   */

//   @Test
//   public void test8()  throws Throwable  {
//       TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap((-909));
//       TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
//       tSynchronizedCharLongMap0.putAll((TCharLongMap) tCharLongHashMap0);
//       assertEquals(0.5F, tCharLongHashMap0.getAutoCompactionFactor(), 0.01F);
//   }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      boolean boolean0 = tSynchronizedCharLongMap0.equals((Object) "0");
      assertEquals(false, boolean0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.hashCode()I: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      int int0 = tSynchronizedCharLongMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.keys()[C: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(1556);
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      char[] charArray0 = tSynchronizedCharLongMap0.keys();
      assertNotNull(charArray0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      boolean boolean0 = tSynchronizedCharLongMap0.forEachValue((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.adjustOrPutValue(CJJ)J: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0, (Object) "Canada");
      long long0 = tSynchronizedCharLongMap0.adjustOrPutValue('\"', 0L, (long) (-1));
      assertEquals(false, tCharLongHashMap0.isEmpty());
      assertEquals((-1L), long0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.keys([C)[C: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0, (Object) "Canada");
      char[] charArray0 = tSynchronizedCharLongMap0.keys(tCharLongHashMap0._set);
      assertNotNull(charArray0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.transformValues(Lgnu/trove/function/TLongFunction;)V: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0, (Object) "Canada");
      tSynchronizedCharLongMap0.transformValues((TLongFunction) null);
      assertEquals('\u0000', tSynchronizedCharLongMap0.getNoEntryKey());
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.values()[J: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0, (Object) "Canada");
      long[] longArray0 = tSynchronizedCharLongMap0.values();
      assertNotNull(longArray0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.getNoEntryKey()C: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap((-909));
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      char char0 = tSynchronizedCharLongMap0.getNoEntryKey();
      assertEquals('\u0000', char0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      boolean boolean0 = tSynchronizedCharLongMap0.forEachKey((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.adjustValue(CJ)Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(1556);
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      boolean boolean0 = tSynchronizedCharLongMap0.adjustValue('Q', (long) 1556);
      assertEquals(false, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.forEachEntry(Lgnu/trove/procedure/TCharLongProcedure;)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(1455, 1455);
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      boolean boolean0 = tSynchronizedCharLongMap0.forEachEntry((TCharLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.putIfAbsent(CJ)J: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedCharLongMap.<init>(Lgnu/trove/map/TCharLongMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0, (Object) "Canada");
      tSynchronizedCharLongMap0.putIfAbsent('\"', '\"');
      assertEquals(false, tCharLongHashMap0.isEmpty());
      assertEquals("{\"=34}", tSynchronizedCharLongMap0.toString());
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.retainEntries(Lgnu/trove/procedure/TCharLongProcedure;)Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(1556);
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      boolean boolean0 = tSynchronizedCharLongMap0.retainEntries((TCharLongProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.getNoEntryValue()J: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(1455, 1455);
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      long long0 = tSynchronizedCharLongMap0.getNoEntryValue();
      assertEquals(0L, long0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.remove(C)J: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap((-909));
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      long long0 = tSynchronizedCharLongMap0.remove('\u0000');
      assertEquals(0L, long0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.get(C)J: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap((-909));
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      long long0 = tSynchronizedCharLongMap0.get('\u0000');
      assertEquals(0L, long0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.put(CJ)J: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap((-5), (float) (-5), '@', (long) (-5));
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      long long0 = tSynchronizedCharLongMap0.put('@', (long) (-5));
      assertEquals("{@=-5}", tCharLongHashMap0.toString());
      assertEquals((-5L), long0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.containsKey(C)Z: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(1556);
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      boolean boolean0 = tSynchronizedCharLongMap0.containsKey('Q');
      assertEquals(false, boolean0);
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.<init>(Lgnu/trove/map/TCharLongMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = null;
      try {
        tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.keySet()Lgnu/trove/set/TCharSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedCharLongMap.keySet()Lgnu/trove/set/TCharSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap((-909));
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      TSynchronizedCharSet tSynchronizedCharSet0 = (TSynchronizedCharSet)tSynchronizedCharLongMap0.keySet();
      assertNotNull(tSynchronizedCharSet0);
      
      TSynchronizedCharSet tSynchronizedCharSet1 = (TSynchronizedCharSet)tSynchronizedCharLongMap0.keySet();
      assertSame(tSynchronizedCharSet1, tSynchronizedCharSet0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharLongMap.valueCollection()Lgnu/trove/TLongCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 gnu.trove.impl.sync.TSynchronizedCharLongMap.valueCollection()Lgnu/trove/TLongCollection;: I11 Branch 3 IFNONNULL L121 - false
   * 3 gnu.trove.impl.sync.TSynchronizedCharLongMap.<init>(Lgnu/trove/map/TCharLongMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      TSynchronizedLongCollection tSynchronizedLongCollection0 = (TSynchronizedLongCollection)tSynchronizedCharLongMap0.valueCollection();
      assertNotNull(tSynchronizedLongCollection0);
      
      TSynchronizedLongCollection tSynchronizedLongCollection1 = (TSynchronizedLongCollection)tSynchronizedCharLongMap0.valueCollection();
      assertSame(tSynchronizedLongCollection1, tSynchronizedLongCollection0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TIntFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection;
import gnu.trove.map.TFloatIntMap;
import gnu.trove.map.hash.TFloatIntHashMap;
import gnu.trove.procedure.TFloatIntProcedure;
import gnu.trove.procedure.TFloatProcedure;
import gnu.trove.procedure.TIntProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableFloatIntMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.putIfAbsent(FI)I: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.<init>(Lgnu/trove/map/TFloatIntMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      float[] floatArray0 = new float[4];
      int[] intArray0 = new int[19];
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap(floatArray0, intArray0);
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatIntMap0.putIfAbsent((float) 0, 0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.hashCode()I: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap((-29), (-29));
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      int int0 = tUnmodifiableFloatIntMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.adjustOrPutValue(FII)I: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap();
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatIntMap0.adjustOrPutValue(7.7797203F, 0, (-5));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap();
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      HashMap<Float, Integer> hashMap0 = new HashMap<Float, Integer>();
      // Undeclared exception!
      try {
        tUnmodifiableFloatIntMap0.putAll((Map<? extends Float, ? extends Integer>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap(12853, 12853);
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      boolean boolean0 = tUnmodifiableFloatIntMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.getNoEntryValue()I: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap(12853, 12853);
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      int int0 = tUnmodifiableFloatIntMap0.getNoEntryValue();
      assertEquals(0, int0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.putAll(Lgnu/trove/map/TFloatIntMap;)V: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      float[] floatArray0 = new float[17];
      int[] intArray0 = new int[16];
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap(floatArray0, intArray0);
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatIntMap0.putAll((TFloatIntMap) tFloatIntHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.getNoEntryKey()F: root-Branch
   */

//   @Test
//   public void test7()  throws Throwable  {
//       TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap();
//       TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
//       float float0 = tUnmodifiableFloatIntMap0.getNoEntryKey();
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.adjustValue(FI)Z: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap((-874));
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatIntMap0.adjustValue((float) (-874), (-874));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.containsValue(I)Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap(12853, 12853);
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      boolean boolean0 = tUnmodifiableFloatIntMap0.containsValue(0);
      assertEquals(false, boolean0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.forEachEntry(Lgnu/trove/procedure/TFloatIntProcedure;)Z: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap((-874));
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      boolean boolean0 = tUnmodifiableFloatIntMap0.forEachEntry((TFloatIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.keys()[F: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap();
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      float[] floatArray0 = tUnmodifiableFloatIntMap0.keys();
      assertNotNull(floatArray0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.keys([F)[F: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap(12853, 12853);
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      float[] floatArray0 = tUnmodifiableFloatIntMap0.keys(tFloatIntHashMap0._set);
      assertNotNull(floatArray0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.put(FI)I: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap(12853, 12853);
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatIntMap0.put((float) 12853, 12853);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.increment(F)Z: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap((-29), (-29));
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatIntMap0.increment((float) (-29));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap();
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      boolean boolean0 = tUnmodifiableFloatIntMap0.forEachKey((TFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap(12853, 12853);
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      String string0 = tUnmodifiableFloatIntMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.values([I)[I: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap();
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      int[] intArray0 = new int[17];
      int[] intArray1 = tUnmodifiableFloatIntMap0.values(intArray0);
      assertSame(intArray1, intArray0);
  }

  //Test case number: 18
  /*
   * 7 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.iterator()Lgnu/trove/iterator/TFloatIntIterator;: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap$1.advance()V: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap$1.hasNext()Z: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap$1.key()F: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap$1.value()I: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableFloatIntMap;)V: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.size()I: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      float[] floatArray0 = new float[17];
      int[] intArray0 = new int[16];
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap(floatArray0, intArray0);
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      TFloatIntHashMap tFloatIntHashMap1 = new TFloatIntHashMap((TFloatIntMap) tUnmodifiableFloatIntMap0);
      assertEquals(1, tUnmodifiableFloatIntMap0.size());
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.values()[I: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap(12853, 12853);
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      int[] intArray0 = tUnmodifiableFloatIntMap0.values();
      assertNotNull(intArray0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.clear()V: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap();
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatIntMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.containsKey(F)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap();
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      boolean boolean0 = tUnmodifiableFloatIntMap0.containsKey((float) (-5));
      assertEquals(false, boolean0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.remove(F)I: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap(61, 61);
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatIntMap0.remove((float) 61);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap(1814);
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      boolean boolean0 = tUnmodifiableFloatIntMap0.forEachValue((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.transformValues(Lgnu/trove/function/TIntFunction;)V: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap((-906), (-906));
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatIntMap0.transformValues((TIntFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.get(F)I: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap(12853, 12853);
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      int int0 = tUnmodifiableFloatIntMap0.get((float) 12853);
      assertEquals(0, int0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.retainEntries(Lgnu/trove/procedure/TFloatIntProcedure;)Z: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap();
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatIntMap0.retainEntries((TFloatIntProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.<init>(Lgnu/trove/map/TFloatIntMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = null;
      try {
        tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.keySet()Lgnu/trove/set/TFloatSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.keySet()Lgnu/trove/set/TFloatSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap((-29), (-29));
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      TUnmodifiableFloatSet tUnmodifiableFloatSet0 = (TUnmodifiableFloatSet)tUnmodifiableFloatIntMap0.keySet();
      assertNotNull(tUnmodifiableFloatSet0);
      
      TUnmodifiableFloatSet tUnmodifiableFloatSet1 = (TUnmodifiableFloatSet)tUnmodifiableFloatIntMap0.keySet();
      assertSame(tUnmodifiableFloatSet1, tUnmodifiableFloatSet0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.valueCollection()Lgnu/trove/TIntCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.valueCollection()Lgnu/trove/TIntCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap();
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      TUnmodifiableIntCollection tUnmodifiableIntCollection0 = (TUnmodifiableIntCollection)tUnmodifiableFloatIntMap0.valueCollection();
      assertNotNull(tUnmodifiableIntCollection0);
      
      TUnmodifiableIntCollection tUnmodifiableIntCollection1 = (TUnmodifiableIntCollection)tUnmodifiableFloatIntMap0.valueCollection();
      assertSame(tUnmodifiableIntCollection1, tUnmodifiableIntCollection0);
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - false
   */

  @Test
  public void test30()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap(61, 61);
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      boolean boolean0 = tUnmodifiableFloatIntMap0.equals((Object) tFloatIntHashMap0);
      assertEquals(true, boolean0);
  }

  //Test case number: 31
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatIntMap.<init>(Lgnu/trove/map/TFloatIntMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap();
      TUnmodifiableFloatIntMap tUnmodifiableFloatIntMap0 = new TUnmodifiableFloatIntMap((TFloatIntMap) tFloatIntHashMap0);
      boolean boolean0 = tUnmodifiableFloatIntMap0.equals((Object) "en");
      assertEquals(false, boolean0);
  }
}

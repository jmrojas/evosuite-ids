/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TCharFunction;
import gnu.trove.map.TLongCharMap;
import gnu.trove.map.hash.TLongCharHashMap;
import gnu.trove.procedure.TCharProcedure;
import gnu.trove.procedure.TLongCharProcedure;
import gnu.trove.procedure.TLongProcedure;
import gnu.trove.set.TLongSet;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TLongCharHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap$TValueView.<init>(Lgnu/trove/map/hash/TLongCharHashMap;)V: root-Branch
   * 2 gnu.trove.map.hash.TLongCharHashMap.<init>()V: root-Branch
   * 3 gnu.trove.map.hash.TLongCharHashMap.valueCollection()Lgnu/trove/TCharCollection;: root-Branch
   * 4 gnu.trove.map.hash.TLongCharHashMap.setUp(I)I: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap();
      tLongCharHashMap0.valueCollection();
      assertEquals(23, tLongCharHashMap0.capacity());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.clear()V: root-Branch
   * 2 gnu.trove.map.hash.TLongCharHashMap.<init>(IF)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap((-1562), (-1859));
      tLongCharHashMap0.clear();
      assertEquals("{}", tLongCharHashMap0.toString());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongCharHashMap.forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(388, 388);
      boolean boolean0 = tLongCharHashMap0.forEachKey((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.keySet()Lgnu/trove/set/TLongSet;: root-Branch
   * 2 gnu.trove.map.hash.TLongCharHashMap$TKeyView.<init>(Lgnu/trove/map/hash/TLongCharHashMap;)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(388, 388);
      TLongSet tLongSet0 = tLongCharHashMap0.keySet();
      assertEquals(0L, tLongSet0.getNoEntryValue());
  }

  //Test case number: 4
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.iterator()Lgnu/trove/iterator/TLongCharIterator;: root-Branch
   * 2 gnu.trove.map.hash.TLongCharHashMap$TLongCharHashIterator.<init>(Lgnu/trove/map/hash/TLongCharHashMap;Lgnu/trove/map/hash/TLongCharHashMap;)V: root-Branch
   * 3 gnu.trove.map.hash.TLongCharHashMap.<init>(Lgnu/trove/map/TLongCharMap;)V: I10 Branch 34 IFEQ L133 - false
   * 4 gnu.trove.map.hash.TLongCharHashMap.<init>(Lgnu/trove/map/TLongCharMap;)V: I40 Branch 35 IFEQ L139 - true
   * 5 gnu.trove.map.hash.TLongCharHashMap.<init>(Lgnu/trove/map/TLongCharMap;)V: I52 Branch 36 IFEQ L143 - true
   * 6 gnu.trove.map.hash.TLongCharHashMap.putAll(Lgnu/trove/map/TLongCharMap;)V: I15 Branch 43 IFEQ L243 - true
   */

  @Test
  public void test4()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(60, 893.84875F);
      TLongCharHashMap tLongCharHashMap1 = new TLongCharHashMap((TLongCharMap) tLongCharHashMap0);
      assertEquals(0L, tLongCharHashMap1.getNoEntryKey());
      assertEquals(3, tLongCharHashMap1.capacity());
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.increment(J)Z: root-Branch
   * 2 gnu.trove.map.hash.TLongCharHashMap.<init>(IFJC)V: root-Branch
   * 3 gnu.trove.map.hash.TLongCharHashMap.adjustValue(JC)Z: I9 Branch 71 IFGE L477 - false
   */

  @Test
  public void test5()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(31, (float) 0, 1426L, '?');
      boolean boolean0 = tLongCharHashMap0.increment(1426L);
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.removeAt(I)V: root-Branch
   * 2 gnu.trove.map.hash.TLongCharHashMap.putIfAbsent(JC)C: I9 Branch 39 IFGE L205 - true
   * 3 gnu.trove.map.hash.TLongCharHashMap.doPut(JCI)C: I12 Branch 40 IFGE L214 - true
   * 4 gnu.trove.map.hash.TLongCharHashMap.doPut(JCI)C: I41 Branch 41 IFEQ L221 - false
   * 5 gnu.trove.map.hash.TLongCharHashMap.remove(J)C: I14 Branch 46 IFLT L276 - false
   */

  @Test
  public void test6()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap();
      tLongCharHashMap0.putIfAbsent((long) 'S', 'S');
      assertEquals(false, tLongCharHashMap0.isEmpty());
      
      char char0 = tLongCharHashMap0.remove((long) 'S');
      assertEquals('S', char0);
  }

  //Test case number: 7
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.put(JC)C: root-Branch
   * 2 gnu.trove.map.hash.TLongCharHashMap$TLongCharHashIterator.advance()V: root-Branch
   * 3 gnu.trove.map.hash.TLongCharHashMap$TLongCharHashIterator.key()J: root-Branch
   * 4 gnu.trove.map.hash.TLongCharHashMap$TLongCharHashIterator.value()C: root-Branch
   * 5 gnu.trove.map.hash.TLongCharHashMap.doPut(JCI)C: I12 Branch 40 IFGE L214 - false
   * 6 gnu.trove.map.hash.TLongCharHashMap.doPut(JCI)C: I41 Branch 41 IFEQ L221 - true
   * 7 gnu.trove.map.hash.TLongCharHashMap.putAll(Lgnu/trove/map/TLongCharMap;)V: I15 Branch 43 IFEQ L243 - false
   * 8 gnu.trove.map.hash.TLongCharHashMap.adjustOrPutValue(JCC)C: I9 Branch 72 IFGE L491 - true
   * 9 gnu.trove.map.hash.TLongCharHashMap.adjustOrPutValue(JCC)C: I59 Branch 73 IFEQ L502 - false
   */

  @Test
  public void test7()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap();
      tLongCharHashMap0.adjustOrPutValue((-1036L), 'S', 'S');
      tLongCharHashMap0.putAll((TLongCharMap) tLongCharHashMap0);
      assertEquals(false, tLongCharHashMap0.isEmpty());
      assertEquals("{-1036=S}", tLongCharHashMap0.toString());
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongCharHashMap.containsKey(J)Z: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap();
      tLongCharHashMap0.containsKey((long) 1946);
      assertEquals(23, tLongCharHashMap0.capacity());
  }

  //Test case number: 9
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.<init>(Lgnu/trove/map/TLongCharMap;)V: I40 Branch 35 IFEQ L139 - false
   * 2 gnu.trove.map.hash.TLongCharHashMap.<init>(Lgnu/trove/map/TLongCharMap;)V: I52 Branch 36 IFEQ L143 - false
   * 3 gnu.trove.map.hash.TLongCharHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 4 gnu.trove.map.hash.TLongCharHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 5 gnu.trove.map.hash.TLongCharHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 6 gnu.trove.map.hash.TLongCharHashMap.iterator()Lgnu/trove/iterator/TLongCharIterator;: root-Branch
   * 7 gnu.trove.map.hash.TLongCharHashMap.<init>(Lgnu/trove/map/TLongCharMap;)V: I10 Branch 34 IFEQ L133 - false
   * 8 gnu.trove.map.hash.TLongCharHashMap.putAll(Lgnu/trove/map/TLongCharMap;)V: I15 Branch 43 IFEQ L243 - true
   * 9 gnu.trove.map.hash.TLongCharHashMap$TLongCharHashIterator.<init>(Lgnu/trove/map/hash/TLongCharHashMap;Lgnu/trove/map/hash/TLongCharHashMap;)V: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(36, (float) (-1098L), (-1098L), ')');
      TLongCharHashMap tLongCharHashMap1 = new TLongCharHashMap((TLongCharMap) tLongCharHashMap0);
      assertEquals(3, tLongCharHashMap1.capacity());
      assertEquals((-1098L), tLongCharHashMap1.getNoEntryKey());
      assertEquals(')', tLongCharHashMap1.getNoEntryValue());
  }

  //Test case number: 10
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.putIfAbsent(JC)C: I9 Branch 39 IFGE L205 - false
   * 2 gnu.trove.map.hash.TLongCharHashMap.<init>([J[C)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 3 gnu.trove.map.hash.TLongCharHashMap.<init>([J[C)V: I24 Branch 33 IF_ICMPGE L119 - false
   */

  @Test
  public void test10()  throws Throwable  {
      long[] longArray0 = new long[6];
      char[] charArray0 = new char[10];
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(longArray0, charArray0);
      char char0 = tLongCharHashMap0.putIfAbsent(0L, '\'');
      assertEquals(1, tLongCharHashMap0.size());
      assertEquals(23, tLongCharHashMap0.capacity());
      assertEquals("{0=\u0000}", tLongCharHashMap0.toString());
      assertEquals('\u0000', char0);
  }

  //Test case number: 11
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - true
   * 2 gnu.trove.map.hash.TLongCharHashMap.<init>(I)V: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(1);
      HashMap<Long, Character> hashMap0 = new HashMap<Long, Character>();
      tLongCharHashMap0.putAll((Map<? extends Long, ? extends Character>) hashMap0);
      assertEquals(true, hashMap0.isEmpty());
  }

  //Test case number: 12
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.get(J)C: I9 Branch 44 IFGE L253 - true
   * 2 gnu.trove.map.hash.TLongCharHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 3 gnu.trove.map.hash.TLongCharHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 4 gnu.trove.map.hash.TLongCharHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 5 gnu.trove.map.hash.TLongCharHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 6 gnu.trove.map.hash.TLongCharHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 7 gnu.trove.map.hash.TLongCharHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 8 gnu.trove.map.hash.TLongCharHashMap.equals(Ljava/lang/Object;)Z: I84 Branch 78 IF_ICMPEQ L1200 - true
   */

  @Test
  public void test12()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(169, (float) 169, (-495L), ' ');
      tLongCharHashMap0.adjustOrPutValue(0L, 'r', 'l');
      boolean boolean0 = tLongCharHashMap0.equals((Object) tLongCharHashMap0);
      assertEquals("{0=l}", tLongCharHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongCharHashMap.get(J)C: I9 Branch 44 IFGE L253 - false
   */

  @Test
  public void test13()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap((-1562), (-1859));
      char char0 = tLongCharHashMap0.get((long) (-1562));
      assertEquals('\u0000', char0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongCharHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - true
   */

  @Test
  public void test14()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap();
      tLongCharHashMap0.adjustOrPutValue((-1036L), 'S', 'S');
      boolean boolean0 = tLongCharHashMap0.isEmpty();
      assertEquals("{-1036=S}", tLongCharHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongCharHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - false
   */

  @Test
  public void test15()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(1);
      boolean boolean0 = tLongCharHashMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongCharHashMap.remove(J)C: I14 Branch 46 IFLT L276 - true
   */

  @Test
  public void test16()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap((-1562), (-1859));
      char char0 = tLongCharHashMap0.remove((long) (-1562));
      assertEquals('\u0000', char0);
      assertEquals(true, tLongCharHashMap0.isEmpty());
  }

  //Test case number: 17
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.keys()[J: I34 Branch 48 IF_ICMPNE L304 - false
   * 2 gnu.trove.map.hash.TLongCharHashMap.keys()[J: I27 Branch 47 IFLE L303 - true
   * 3 gnu.trove.map.hash.TLongCharHashMap.keys()[J: I27 Branch 47 IFLE L303 - false
   * 4 gnu.trove.map.hash.TLongCharHashMap.keys()[J: I34 Branch 48 IF_ICMPNE L304 - true
   */

  @Test
  public void test17()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap();
      tLongCharHashMap0.adjustOrPutValue((-1036L), 'S', 'S');
      tLongCharHashMap0.keys();
      assertEquals(false, tLongCharHashMap0.isEmpty());
      assertEquals("{-1036=S}", tLongCharHashMap0.toString());
  }

  //Test case number: 18
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.keys([J)[J: I10 Branch 49 IF_ICMPGE L315 - true
   * 2 gnu.trove.map.hash.TLongCharHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - true
   * 3 gnu.trove.map.hash.TLongCharHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - false
   * 4 gnu.trove.map.hash.TLongCharHashMap.keys([J)[J: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test18()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(1);
      long[] longArray0 = tLongCharHashMap0.keys(tLongCharHashMap0._set);
      assertNotNull(longArray0);
  }

  //Test case number: 19
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.keys([J)[J: I10 Branch 49 IF_ICMPGE L315 - false
   * 2 gnu.trove.map.hash.TLongCharHashMap.keys([J)[J: I44 Branch 51 IF_ICMPNE L323 - false
   * 3 gnu.trove.map.hash.TLongCharHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - true
   * 4 gnu.trove.map.hash.TLongCharHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - false
   * 5 gnu.trove.map.hash.TLongCharHashMap.keys([J)[J: I44 Branch 51 IF_ICMPNE L323 - true
   * 6 gnu.trove.map.hash.TLongCharHashMap.keys()[J: I27 Branch 47 IFLE L303 - true
   * 7 gnu.trove.map.hash.TLongCharHashMap.keys()[J: I27 Branch 47 IFLE L303 - false
   * 8 gnu.trove.map.hash.TLongCharHashMap.keys()[J: I34 Branch 48 IF_ICMPNE L304 - true
   */

  @Test
  public void test19()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(1);
      long[] longArray0 = tLongCharHashMap0.keys();
      tLongCharHashMap0.put((long) '&', '_');
      tLongCharHashMap0.keys(longArray0);
      assertEquals(false, tLongCharHashMap0.isEmpty());
      assertEquals("{38=_}", tLongCharHashMap0.toString());
  }

  //Test case number: 20
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.values()[C: I34 Branch 53 IF_ICMPNE L344 - false
   * 2 gnu.trove.map.hash.TLongCharHashMap.values()[C: I27 Branch 52 IFLE L343 - true
   * 3 gnu.trove.map.hash.TLongCharHashMap.values()[C: I27 Branch 52 IFLE L343 - false
   * 4 gnu.trove.map.hash.TLongCharHashMap.values()[C: I34 Branch 53 IF_ICMPNE L344 - true
   */

  @Test
  public void test20()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap();
      tLongCharHashMap0.adjustOrPutValue((-1036L), 'S', 'S');
      tLongCharHashMap0.values();
      assertEquals(false, tLongCharHashMap0.isEmpty());
      assertEquals("{-1036=S}", tLongCharHashMap0.toString());
  }

  //Test case number: 21
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.values([C)[C: I10 Branch 54 IF_ICMPGE L355 - true
   * 2 gnu.trove.map.hash.TLongCharHashMap.values([C)[C: I37 Branch 55 IFLE L362 - true
   * 3 gnu.trove.map.hash.TLongCharHashMap.values([C)[C: I37 Branch 55 IFLE L362 - false
   * 4 gnu.trove.map.hash.TLongCharHashMap.values([C)[C: I44 Branch 56 IF_ICMPNE L363 - true
   */

  @Test
  public void test21()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap();
      char[] charArray0 = new char[6];
      char[] charArray1 = tLongCharHashMap0.values(charArray0);
      assertEquals(23, tLongCharHashMap0.capacity());
      assertNotNull(charArray1);
      assertSame(charArray0, charArray1);
  }

  //Test case number: 22
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.values([C)[C: I10 Branch 54 IF_ICMPGE L355 - false
   * 2 gnu.trove.map.hash.TLongCharHashMap.values([C)[C: I44 Branch 56 IF_ICMPNE L363 - false
   * 3 gnu.trove.map.hash.TLongCharHashMap.values([C)[C: I37 Branch 55 IFLE L362 - true
   * 4 gnu.trove.map.hash.TLongCharHashMap.values([C)[C: I37 Branch 55 IFLE L362 - false
   * 5 gnu.trove.map.hash.TLongCharHashMap.values([C)[C: I44 Branch 56 IF_ICMPNE L363 - true
   * 6 gnu.trove.map.hash.TLongCharHashMap.values()[C: I27 Branch 52 IFLE L343 - true
   * 7 gnu.trove.map.hash.TLongCharHashMap.values()[C: I27 Branch 52 IFLE L343 - false
   * 8 gnu.trove.map.hash.TLongCharHashMap.values()[C: I34 Branch 53 IF_ICMPNE L344 - true
   */

  @Test
  public void test22()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap();
      char[] charArray0 = tLongCharHashMap0.values();
      tLongCharHashMap0.putIfAbsent((long) '\u0000', 'E');
      tLongCharHashMap0.values(charArray0);
      assertEquals(1, tLongCharHashMap0.size());
      assertEquals("{0=E}", tLongCharHashMap0.toString());
  }

  //Test case number: 23
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.containsValue(C)Z: I25 Branch 58 IF_ICMPNE L377 - false
   * 2 gnu.trove.map.hash.TLongCharHashMap.containsValue(C)Z: I30 Branch 59 IF_ICMPNE L377 - false
   * 3 gnu.trove.map.hash.TLongCharHashMap.containsValue(C)Z: I18 Branch 57 IFLE L376 - false
   * 4 gnu.trove.map.hash.TLongCharHashMap.containsValue(C)Z: I25 Branch 58 IF_ICMPNE L377 - true
   */

  @Test
  public void test23()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap();
      tLongCharHashMap0.adjustOrPutValue((-1036L), 'S', 'S');
      boolean boolean0 = tLongCharHashMap0.containsValue('S');
      assertEquals("{-1036=S}", tLongCharHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.containsValue(C)Z: I30 Branch 59 IF_ICMPNE L377 - true
   * 2 gnu.trove.map.hash.TLongCharHashMap.containsValue(C)Z: I18 Branch 57 IFLE L376 - true
   * 3 gnu.trove.map.hash.TLongCharHashMap.containsValue(C)Z: I18 Branch 57 IFLE L376 - false
   * 4 gnu.trove.map.hash.TLongCharHashMap.containsValue(C)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 5 gnu.trove.map.hash.TLongCharHashMap.containsValue(C)Z: I25 Branch 58 IF_ICMPNE L377 - false
   */

  @Test
  public void test24()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap();
      tLongCharHashMap0.putIfAbsent((long) '\u0000', 'E');
      boolean boolean0 = tLongCharHashMap0.containsValue('S');
      assertEquals(1, tLongCharHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 25
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: I18 Branch 60 IFLE L407 - true
   * 2 gnu.trove.map.hash.TLongCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TLongCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test25()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap((-1562), (-1859));
      boolean boolean0 = tLongCharHashMap0.forEachValue((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V: I18 Branch 66 IFLE L434 - true
   * 2 gnu.trove.map.hash.TLongCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V: I18 Branch 66 IFLE L434 - false
   * 3 gnu.trove.map.hash.TLongCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test26()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(1331);
      tLongCharHashMap0.transformValues((TCharFunction) null);
      assertEquals(2729, tLongCharHashMap0.capacity());
  }

  //Test case number: 27
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V: I25 Branch 67 IF_ICMPNE L435 - false
   * 2 gnu.trove.map.hash.TLongCharHashMap.<init>(IFJC)V: root-Branch
   * 3 gnu.trove.map.hash.TLongCharHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 4 gnu.trove.map.hash.TLongCharHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 5 gnu.trove.map.hash.TLongCharHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 6 gnu.trove.map.hash.TLongCharHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 7 gnu.trove.map.hash.TLongCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V: I18 Branch 66 IFLE L434 - false
   * 8 gnu.trove.map.hash.TLongCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test27()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(31, (float) 0, 1426L, '?');
      tLongCharHashMap0.put((long) 31, '?');
      // Undeclared exception!
      try {
        tLongCharHashMap0.transformValues((TCharFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.retainEntries(Lgnu/trove/procedure/TLongCharProcedure;)Z: I31 Branch 68 IFLE L453 - true
   * 2 gnu.trove.map.hash.TLongCharHashMap.retainEntries(Lgnu/trove/procedure/TLongCharProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TLongCharHashMap.retainEntries(Lgnu/trove/procedure/TLongCharProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test28()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(1);
      boolean boolean0 = tLongCharHashMap0.retainEntries((TLongCharProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 29
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.retainEntries(Lgnu/trove/procedure/TLongCharProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - false
   * 2 gnu.trove.map.hash.TLongCharHashMap.retainEntries(Lgnu/trove/procedure/TLongCharProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TLongCharHashMap.retainEntries(Lgnu/trove/procedure/TLongCharProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test29()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(1434, 1434);
      tLongCharHashMap0.adjustOrPutValue((long) 1434, 'x', 'f');
      // Undeclared exception!
      try {
        tLongCharHashMap0.retainEntries((TLongCharProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.adjustValue(JC)Z: I9 Branch 71 IFGE L477 - true
   * 2 gnu.trove.map.hash.TLongCharHashMap.increment(J)Z: root-Branch
   */

  @Test
  public void test30()  throws Throwable  {
      long[] longArray0 = new long[3];
      char[] charArray0 = new char[9];
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(longArray0, charArray0);
      boolean boolean0 = tLongCharHashMap0.increment((long) 0);
      assertEquals("{0=\u0001}", tLongCharHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 31
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.adjustOrPutValue(JCC)C: I9 Branch 72 IFGE L491 - false
   * 2 gnu.trove.map.hash.TLongCharHashMap.adjustOrPutValue(JCC)C: I59 Branch 73 IFEQ L502 - true
   * 3 gnu.trove.map.hash.TLongCharHashMap.putIfAbsent(JC)C: I9 Branch 39 IFGE L205 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(1);
      tLongCharHashMap0.putIfAbsent((long) 0, '_');
      char char0 = tLongCharHashMap0.adjustOrPutValue((long) 0, '&', '&');
      assertEquals(false, tLongCharHashMap0.isEmpty());
      assertEquals('\u0085', char0);
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongCharHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - false
   */

  @Test
  public void test32()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap();
      boolean boolean0 = tLongCharHashMap0.equals((Object) null);
      assertEquals(false, boolean0);
      assertEquals(23, tLongCharHashMap0.capacity());
  }

  //Test case number: 33
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - false
   * 2 gnu.trove.map.hash.TLongCharHashMap.<init>()V: root-Branch
   * 3 gnu.trove.map.hash.TLongCharHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   */

  @Test
  public void test33()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap();
      tLongCharHashMap0.adjustOrPutValue((-1036L), 'S', 'S');
      TLongCharHashMap tLongCharHashMap1 = new TLongCharHashMap(1946);
      boolean boolean0 = tLongCharHashMap1.equals((Object) tLongCharHashMap0);
      assertEquals("{-1036=S}", tLongCharHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 34
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 2 gnu.trove.map.hash.TLongCharHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 3 gnu.trove.map.hash.TLongCharHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   * 4 gnu.trove.map.hash.TLongCharHashMap.<init>(I)V: root-Branch
   */

  @Test
  public void test34()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(1331);
      int int0 = tLongCharHashMap0.hashCode();
      assertEquals(2729, tLongCharHashMap0.capacity());
      assertEquals(0, int0);
  }

  //Test case number: 35
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - false
   * 2 gnu.trove.map.hash.TLongCharHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 3 gnu.trove.map.hash.TLongCharHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 4 gnu.trove.map.hash.TLongCharHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   */

  @Test
  public void test35()  throws Throwable  {
      long[] longArray0 = new long[3];
      char[] charArray0 = new char[9];
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(longArray0, charArray0);
      int int0 = tLongCharHashMap0.hashCode();
      assertEquals(0, int0);
      assertEquals(1, tLongCharHashMap0.size());
      assertEquals(23, tLongCharHashMap0.capacity());
  }

  //Test case number: 36
  /*
   * 16 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap$1.execute(JC)Z: I4 Branch 115 IFEQ L1233 - true
   * 2 gnu.trove.map.hash.TLongCharHashMap$1.<init>(Lgnu/trove/map/hash/TLongCharHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 3 gnu.trove.map.hash.TLongCharHashMap$1.execute(JC)Z: I4 Branch 115 IFEQ L1233 - false
   * 4 gnu.trove.map.hash.TLongCharHashMap.put(JC)C: root-Branch
   * 5 gnu.trove.map.hash.TLongCharHashMap.toString()Ljava/lang/String;: root-Branch
   * 6 gnu.trove.map.hash.TLongCharHashMap.doPut(JCI)C: I12 Branch 40 IFGE L214 - true
   * 7 gnu.trove.map.hash.TLongCharHashMap.doPut(JCI)C: I12 Branch 40 IFGE L214 - false
   * 8 gnu.trove.map.hash.TLongCharHashMap.doPut(JCI)C: I41 Branch 41 IFEQ L221 - true
   * 9 gnu.trove.map.hash.TLongCharHashMap.doPut(JCI)C: I41 Branch 41 IFEQ L221 - false
   * 10 gnu.trove.map.hash.TLongCharHashMap.<init>([J[C)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 11 gnu.trove.map.hash.TLongCharHashMap.<init>([J[C)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 12 gnu.trove.map.hash.TLongCharHashMap.forEachEntry(Lgnu/trove/procedure/TLongCharProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 13 gnu.trove.map.hash.TLongCharHashMap.forEachEntry(Lgnu/trove/procedure/TLongCharProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 14 gnu.trove.map.hash.TLongCharHashMap.forEachEntry(Lgnu/trove/procedure/TLongCharProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 15 gnu.trove.map.hash.TLongCharHashMap.forEachEntry(Lgnu/trove/procedure/TLongCharProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 16 gnu.trove.map.hash.TLongCharHashMap.forEachEntry(Lgnu/trove/procedure/TLongCharProcedure;)Z: I39 Branch 65 IFNE L422 - true
   */

  @Test
  public void test36()  throws Throwable  {
      long[] longArray0 = new long[3];
      longArray0[0] = 1911L;
      char[] charArray0 = new char[9];
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(longArray0, charArray0);
      String string0 = tLongCharHashMap0.toString();
      assertEquals(2, tLongCharHashMap0.size());
      assertNotNull(string0);
      assertEquals(23, tLongCharHashMap0.capacity());
      assertEquals("{1911=\u0000, 0=\u0000}", string0);
  }

  //Test case number: 37
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TLongCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - false
   * 2 gnu.trove.map.hash.TLongCharHashMap.<init>(IF)V: root-Branch
   * 3 gnu.trove.map.hash.TLongCharHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.hash.TLongCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - true
   * 5 gnu.trove.map.hash.TLongCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - false
   * 6 gnu.trove.map.hash.TLongCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - true
   * 7 gnu.trove.map.hash.TLongCharHashMap.adjustOrPutValue(JCC)C: I9 Branch 72 IFGE L491 - true
   * 8 gnu.trove.map.hash.TLongCharHashMap.adjustOrPutValue(JCC)C: I59 Branch 73 IFEQ L502 - false
   */

  @Test
  public void test37()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(60, 893.84875F);
      tLongCharHashMap0.adjustOrPutValue((long) 60, '?', '\\');
      tLongCharHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(1, tLongCharHashMap0.size());
      assertEquals("{60=\\}", tLongCharHashMap0.toString());
  }
}

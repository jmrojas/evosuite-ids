/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortObjectMap;
import gnu.trove.map.TShortObjectMap;
import gnu.trove.map.hash.TShortObjectHashMap;
import java.io.File;
import java.net.URI;
import java.net.URISyntaxException;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableShortObjectMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TShortObjectHashMap<Object> tShortObjectHashMap0 = new TShortObjectHashMap<Object>();
      TUnmodifiableShortObjectMap<Object> tUnmodifiableShortObjectMap0 = new TUnmodifiableShortObjectMap<Object>((TShortObjectMap<Object>) tShortObjectHashMap0);
      TUnmodifiableShortObjectMap<Object> tUnmodifiableShortObjectMap1 = new TUnmodifiableShortObjectMap<Object>((TShortObjectMap<Object>) tUnmodifiableShortObjectMap0);
      short short0 = (short)1478;
      tUnmodifiableShortObjectMap1.containsKey(short0);
      int int0 = (-1496);
      TShortObjectHashMap<Short> tShortObjectHashMap1 = new TShortObjectHashMap<Short>(int0);
      TUnmodifiableShortObjectMap<Short> tUnmodifiableShortObjectMap2 = new TUnmodifiableShortObjectMap<Short>((TShortObjectMap<Short>) tShortObjectHashMap1);
      short short1 = (short) (-272);
      tUnmodifiableShortObjectMap2.containsKey(short1);
      TUnmodifiableShortObjectMap<Short> tUnmodifiableShortObjectMap3 = new TUnmodifiableShortObjectMap<Short>((TShortObjectMap<Short>) tShortObjectHashMap1);
      tUnmodifiableShortObjectMap3.hashCode();
      short short2 = (short)1230;
      // Undeclared exception!
      try {
        tUnmodifiableShortObjectMap3.put(short2, (Short) short2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TShortObjectHashMap<Short> tShortObjectHashMap0 = new TShortObjectHashMap<Short>();
      TUnmodifiableShortObjectMap<Short> tUnmodifiableShortObjectMap0 = new TUnmodifiableShortObjectMap<Short>((TShortObjectMap<Short>) tShortObjectHashMap0);
      tUnmodifiableShortObjectMap0.keySet();
      TUnmodifiableShortObjectMap<Short> tUnmodifiableShortObjectMap1 = new TUnmodifiableShortObjectMap<Short>((TShortObjectMap<Short>) tShortObjectHashMap0);
      int int0 = 181;
      tUnmodifiableShortObjectMap1.keySet();
      int int1 = 0;
      TShortObjectHashMap<Object> tShortObjectHashMap1 = new TShortObjectHashMap<Object>(int1);
      TUnmodifiableShortObjectMap<Object> tUnmodifiableShortObjectMap2 = new TUnmodifiableShortObjectMap<Object>((TShortObjectMap<Object>) tShortObjectHashMap1);
      TUnmodifiableShortObjectMap<Object> tUnmodifiableShortObjectMap3 = new TUnmodifiableShortObjectMap<Object>((TShortObjectMap<Object>) tUnmodifiableShortObjectMap2);
      tUnmodifiableShortObjectMap3.keys();
      float float0 = 1.17549435E-38F;
      TShortObjectHashMap<Object> tShortObjectHashMap2 = new TShortObjectHashMap<Object>(int0, float0);
      int int2 = 287;
      short short0 = (short) (-6771);
      TShortObjectHashMap<String> tShortObjectHashMap3 = new TShortObjectHashMap<String>(int2, (float) int2, short0);
      TUnmodifiableShortObjectMap<String> tUnmodifiableShortObjectMap4 = new TUnmodifiableShortObjectMap<String>((TShortObjectMap<String>) tShortObjectHashMap3);
      tUnmodifiableShortObjectMap2.containsKey(short0);
      short short1 = (short) (-1);
      tShortObjectHashMap0.remove(short1);
      TUnmodifiableShortObjectMap<Object> tUnmodifiableShortObjectMap5 = new TUnmodifiableShortObjectMap<Object>((TShortObjectMap<Object>) tShortObjectHashMap2);
      assertNotSame(tUnmodifiableShortObjectMap5, tUnmodifiableShortObjectMap3);
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = 0;
      float float0 = 0.0F;
      TShortObjectHashMap<Object> tShortObjectHashMap0 = new TShortObjectHashMap<Object>();
      TUnmodifiableShortObjectMap<Object> tUnmodifiableShortObjectMap0 = new TUnmodifiableShortObjectMap<Object>((TShortObjectMap<Object>) tShortObjectHashMap0);
      tUnmodifiableShortObjectMap0.keys(tShortObjectHashMap0._set);
      TShortObjectHashMap<Object> tShortObjectHashMap1 = new TShortObjectHashMap<Object>(int0, float0);
      TUnmodifiableShortObjectMap<Object> tUnmodifiableShortObjectMap1 = new TUnmodifiableShortObjectMap<Object>((TShortObjectMap<Object>) tShortObjectHashMap1);
      short short0 = (short)1359;
      String string0 = File.separator;
      // Undeclared exception!
      try {
        tUnmodifiableShortObjectMap1.put(short0, (Object) string0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = 1;
      short short0 = (short) (-1990);
      TShortObjectHashMap<Integer> tShortObjectHashMap0 = new TShortObjectHashMap<Integer>(int0, (float) int0, short0);
      TUnmodifiableShortObjectMap<Integer> tUnmodifiableShortObjectMap0 = new TUnmodifiableShortObjectMap<Integer>((TShortObjectMap<Integer>) tShortObjectHashMap0);
      TUnmodifiableShortObjectMap<Integer> tUnmodifiableShortObjectMap1 = new TUnmodifiableShortObjectMap<Integer>((TShortObjectMap<Integer>) tUnmodifiableShortObjectMap0);
      String string0 = "*um@";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, int0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: *um@://*um%40@*um@:1*um@?*um@#*um@
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TShortObjectMap<Object> tShortObjectMap0 = null;
      TUnmodifiableShortObjectMap<Object> tUnmodifiableShortObjectMap0 = null;
      try {
        tUnmodifiableShortObjectMap0 = new TUnmodifiableShortObjectMap<Object>(tShortObjectMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TShortObjectMap<Object> tShortObjectMap0 = null;
      TShortObjectHashMap<Object> tShortObjectHashMap0 = null;
      try {
        tShortObjectHashMap0 = new TShortObjectHashMap<Object>(tShortObjectMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = (-753);
      float float0 = (-257.0485F);
      short short0 = (short) (-1180);
      int int1 = 15;
      TShortObjectHashMap<Short> tShortObjectHashMap0 = new TShortObjectHashMap<Short>(int1, float0);
      TUnmodifiableShortObjectMap<Short> tUnmodifiableShortObjectMap0 = new TUnmodifiableShortObjectMap<Short>((TShortObjectMap<Short>) tShortObjectHashMap0);
      tUnmodifiableShortObjectMap0.size();
      TShortObjectHashMap<Short> tShortObjectHashMap1 = new TShortObjectHashMap<Short>(int0, float0, short0);
      TShortObjectHashMap<Short> tShortObjectHashMap2 = new TShortObjectHashMap<Short>((TShortObjectMap<? extends Short>) tShortObjectHashMap1);
      TUnmodifiableShortObjectMap<Short> tUnmodifiableShortObjectMap1 = new TUnmodifiableShortObjectMap<Short>((TShortObjectMap<Short>) tShortObjectHashMap2);
      String string0 = tUnmodifiableShortObjectMap1.toString();
      assertEquals("{}", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = 608;
      TShortObjectMap<Short> tShortObjectMap0 = null;
      TUnmodifiableShortObjectMap<Short> tUnmodifiableShortObjectMap0 = null;
      try {
        tUnmodifiableShortObjectMap0 = new TUnmodifiableShortObjectMap<Short>(tShortObjectMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = 965;
      short short0 = (short)199;
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>(int0, (float) int0, short0);
      TUnmodifiableShortObjectMap<String> tUnmodifiableShortObjectMap0 = new TUnmodifiableShortObjectMap<String>((TShortObjectMap<String>) tShortObjectHashMap0);
      TUnmodifiableShortObjectMap<String> tUnmodifiableShortObjectMap1 = new TUnmodifiableShortObjectMap<String>((TShortObjectMap<String>) tUnmodifiableShortObjectMap0);
      short short1 = (short)0;
      // Undeclared exception!
      try {
        tUnmodifiableShortObjectMap1.remove(short1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TShortObjectMap<Object> tShortObjectMap0 = null;
      int int0 = 0;
      TUnmodifiableShortObjectMap<Object> tUnmodifiableShortObjectMap0 = null;
      try {
        tUnmodifiableShortObjectMap0 = new TUnmodifiableShortObjectMap<Object>(tShortObjectMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>();
      TUnmodifiableShortObjectMap<String> tUnmodifiableShortObjectMap0 = new TUnmodifiableShortObjectMap<String>((TShortObjectMap<String>) tShortObjectHashMap0);
      tUnmodifiableShortObjectMap0.size();
      int int0 = 1201;
      tUnmodifiableShortObjectMap0.valueCollection();
      TShortObjectHashMap<Integer> tShortObjectHashMap1 = new TShortObjectHashMap<Integer>(int0, int0);
      TUnmodifiableShortObjectMap<Integer> tUnmodifiableShortObjectMap1 = new TUnmodifiableShortObjectMap<Integer>((TShortObjectMap<Integer>) tShortObjectHashMap1);
      tUnmodifiableShortObjectMap1.iterator();
      TUnmodifiableShortObjectMap<Integer> tUnmodifiableShortObjectMap2 = new TUnmodifiableShortObjectMap<Integer>((TShortObjectMap<Integer>) tUnmodifiableShortObjectMap1);
      float float0 = 0.5F;
      short short0 = (short) (-1947);
      TShortObjectHashMap<Object> tShortObjectHashMap2 = new TShortObjectHashMap<Object>(int0, float0, short0);
      TShortObjectMap<Short> tShortObjectMap0 = null;
      TUnmodifiableShortObjectMap<Object> tUnmodifiableShortObjectMap3 = new TUnmodifiableShortObjectMap<Object>((TShortObjectMap<Object>) tShortObjectHashMap2);
      tUnmodifiableShortObjectMap3.valueCollection();
      TUnmodifiableShortObjectMap<Short> tUnmodifiableShortObjectMap4 = null;
      try {
        tUnmodifiableShortObjectMap4 = new TUnmodifiableShortObjectMap<Short>(tShortObjectMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 1;
      TShortObjectHashMap<Object> tShortObjectHashMap0 = new TShortObjectHashMap<Object>();
      short short0 = (short) (-1428);
      tShortObjectHashMap0.get(short0);
      TUnmodifiableShortObjectMap<Object> tUnmodifiableShortObjectMap0 = new TUnmodifiableShortObjectMap<Object>((TShortObjectMap<Object>) tShortObjectHashMap0);
      short short1 = (short)0;
      TShortObjectHashMap<Short> tShortObjectHashMap1 = new TShortObjectHashMap<Short>();
      TUnmodifiableShortObjectMap<Short> tUnmodifiableShortObjectMap1 = new TUnmodifiableShortObjectMap<Short>((TShortObjectMap<Short>) tShortObjectHashMap1);
      TUnmodifiableShortObjectMap<Short> tUnmodifiableShortObjectMap2 = new TUnmodifiableShortObjectMap<Short>((TShortObjectMap<Short>) tShortObjectHashMap1);
      String string0 = tUnmodifiableShortObjectMap1.toString();
      // Undeclared exception!
      try {
        tUnmodifiableShortObjectMap0.putIfAbsent(short1, (Object) string0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 0;
      float float0 = 261.95227F;
      short short0 = (short) (-100);
      TShortObjectHashMap<Object> tShortObjectHashMap0 = new TShortObjectHashMap<Object>(int0, float0, short0);
      TUnmodifiableShortObjectMap<Object> tUnmodifiableShortObjectMap0 = new TUnmodifiableShortObjectMap<Object>((TShortObjectMap<Object>) tShortObjectHashMap0);
      tUnmodifiableShortObjectMap0.toString();
      int int1 = 1;
      short short1 = (short)130;
      TShortObjectHashMap<Short> tShortObjectHashMap1 = new TShortObjectHashMap<Short>(int1, (float) int1, short1);
      TUnmodifiableShortObjectMap<Short> tUnmodifiableShortObjectMap1 = new TUnmodifiableShortObjectMap<Short>((TShortObjectMap<Short>) tShortObjectHashMap1);
      TShortObjectHashMap<Object> tShortObjectHashMap2 = new TShortObjectHashMap<Object>((int) short1);
      TUnmodifiableShortObjectMap<Object> tUnmodifiableShortObjectMap2 = new TUnmodifiableShortObjectMap<Object>((TShortObjectMap<Object>) tShortObjectHashMap2);
      short short2 = (short) (-1239);
      tUnmodifiableShortObjectMap2.size();
      // Undeclared exception!
      try {
        tUnmodifiableShortObjectMap2.remove(short2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = (-1045);
      float float0 = 0.0F;
      short short0 = (short)1052;
      int int1 = 73;
      float float1 = 1.4E-45F;
      TShortObjectHashMap<String> tShortObjectHashMap0 = new TShortObjectHashMap<String>(int1, float1);
      TUnmodifiableShortObjectMap<String> tUnmodifiableShortObjectMap0 = new TUnmodifiableShortObjectMap<String>((TShortObjectMap<String>) tShortObjectHashMap0);
      TShortObjectHashMap<Short> tShortObjectHashMap1 = new TShortObjectHashMap<Short>(int0, float0, short0);
      TUnmodifiableShortObjectMap<Short> tUnmodifiableShortObjectMap1 = new TUnmodifiableShortObjectMap<Short>((TShortObjectMap<Short>) tShortObjectHashMap1);
      tUnmodifiableShortObjectMap1.iterator();
      TShortObjectHashMap<Object> tShortObjectHashMap2 = new TShortObjectHashMap<Object>();
      TUnmodifiableShortObjectMap<Object> tUnmodifiableShortObjectMap2 = new TUnmodifiableShortObjectMap<Object>((TShortObjectMap<Object>) tShortObjectHashMap2);
      // Undeclared exception!
      try {
        tUnmodifiableShortObjectMap2.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

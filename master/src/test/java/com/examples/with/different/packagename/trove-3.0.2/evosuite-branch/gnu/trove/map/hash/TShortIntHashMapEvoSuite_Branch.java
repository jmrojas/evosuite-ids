/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TIntFunction;
import gnu.trove.map.TShortIntMap;
import gnu.trove.map.hash.TShortIntHashMap;
import gnu.trove.procedure.TIntProcedure;
import gnu.trove.procedure.TShortIntProcedure;
import gnu.trove.procedure.TShortProcedure;
import gnu.trove.set.TShortSet;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TShortIntHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap$TValueView.<init>(Lgnu/trove/map/hash/TShortIntHashMap;)V: root-Branch
   * 2 gnu.trove.map.hash.TShortIntHashMap.<init>()V: root-Branch
   * 3 gnu.trove.map.hash.TShortIntHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.hash.TShortIntHashMap.valueCollection()Lgnu/trove/TIntCollection;: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
      tShortIntHashMap0.valueCollection();
      assertEquals(23, tShortIntHashMap0.capacity());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.clear()V: root-Branch
   * 2 gnu.trove.map.hash.TShortIntHashMap.<init>(I)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(0);
      tShortIntHashMap0.clear();
      assertEquals("{}", tShortIntHashMap0.toString());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortIntHashMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap((-992));
      boolean boolean0 = tShortIntHashMap0.forEachKey((TShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.increment(S)Z: root-Branch
   * 2 gnu.trove.map.hash.TShortIntHashMap.adjustValue(SI)Z: I9 Branch 71 IFGE L477 - false
   */

  @Test
  public void test3()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
      boolean boolean0 = tShortIntHashMap0.increment((short)0);
      assertEquals(23, tShortIntHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.removeAt(I)V: root-Branch
   * 2 gnu.trove.map.hash.TShortIntHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 3 gnu.trove.map.hash.TShortIntHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 4 gnu.trove.map.hash.TShortIntHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 5 gnu.trove.map.hash.TShortIntHashMap.putIfAbsent(SI)I: I9 Branch 39 IFGE L205 - true
   * 6 gnu.trove.map.hash.TShortIntHashMap.remove(S)I: I14 Branch 46 IFLT L276 - false
   * 7 gnu.trove.map.hash.TShortIntHashMap.doPut(SII)I: I12 Branch 40 IFGE L214 - true
   * 8 gnu.trove.map.hash.TShortIntHashMap.doPut(SII)I: I41 Branch 41 IFEQ L221 - false
   */

  @Test
  public void test4()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap((-992));
      tShortIntHashMap0.putIfAbsent((short)0, (-992));
      int int0 = tShortIntHashMap0.remove((short)0);
      assertEquals("{}", tShortIntHashMap0.toString());
      assertEquals((-992), int0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortIntHashMap.containsKey(S)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(0);
      boolean boolean0 = tShortIntHashMap0.containsKey((short) (-2036));
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.iterator()Lgnu/trove/iterator/TShortIntIterator;: root-Branch
   * 2 gnu.trove.map.hash.TShortIntHashMap$TShortIntHashIterator.<init>(Lgnu/trove/map/hash/TShortIntHashMap;Lgnu/trove/map/hash/TShortIntHashMap;)V: root-Branch
   * 3 gnu.trove.map.hash.TShortIntHashMap.<init>(Lgnu/trove/map/TShortIntMap;)V: I10 Branch 34 IFEQ L133 - false
   * 4 gnu.trove.map.hash.TShortIntHashMap.<init>(Lgnu/trove/map/TShortIntMap;)V: I38 Branch 35 IFEQ L139 - false
   * 5 gnu.trove.map.hash.TShortIntHashMap.<init>(Lgnu/trove/map/TShortIntMap;)V: I50 Branch 36 IFEQ L143 - false
   * 6 gnu.trove.map.hash.TShortIntHashMap.putAll(Lgnu/trove/map/TShortIntMap;)V: I15 Branch 43 IFEQ L243 - true
   * 7 gnu.trove.map.hash.TShortIntHashMap.<init>(IFSI)V: root-Branch
   */

//   @Test
//   public void test6()  throws Throwable  {
//       TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap((-808), (float) (-808), (short) (-1115), (int) (short) (-1115));
//       TShortIntHashMap tShortIntHashMap1 = new TShortIntHashMap((TShortIntMap) tShortIntHashMap0);
//       assertEquals(-1115, tShortIntHashMap1.getNoEntryKey());
//       assertEquals(3, tShortIntHashMap1.capacity());
//       assertEquals(-1115, tShortIntHashMap1.getNoEntryValue());
//   }

  //Test case number: 7
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.keySet()Lgnu/trove/set/TShortSet;: root-Branch
   * 2 gnu.trove.map.hash.TShortIntHashMap$TKeyView.<init>(Lgnu/trove/map/hash/TShortIntHashMap;)V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(0);
      TShortSet tShortSet0 = tShortIntHashMap0.keySet();
      assertEquals(true, tShortSet0.isEmpty());
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.<init>(Lgnu/trove/map/TShortIntMap;)V: I38 Branch 35 IFEQ L139 - true
   * 2 gnu.trove.map.hash.TShortIntHashMap.<init>(Lgnu/trove/map/TShortIntMap;)V: I50 Branch 36 IFEQ L143 - true
   * 3 gnu.trove.map.hash.TShortIntHashMap.<init>(Lgnu/trove/map/TShortIntMap;)V: I10 Branch 34 IFEQ L133 - false
   */

  @Test
  public void test8()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(0);
      TShortIntHashMap tShortIntHashMap1 = new TShortIntHashMap((TShortIntMap) tShortIntHashMap0);
      assertEquals(0, tShortIntHashMap1.getNoEntryValue());
      assertEquals(23, tShortIntHashMap1.capacity());
  }

  //Test case number: 9
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.putIfAbsent(SI)I: I9 Branch 39 IFGE L205 - false
   * 2 gnu.trove.map.hash.TShortIntHashMap.put(SI)I: root-Branch
   * 3 gnu.trove.map.hash.TShortIntHashMap.<init>([S[I)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 4 gnu.trove.map.hash.TShortIntHashMap.<init>([S[I)V: I24 Branch 33 IF_ICMPGE L119 - false
   */

  @Test
  public void test9()  throws Throwable  {
      short[] shortArray0 = new short[1];
      int[] intArray0 = new int[5];
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(shortArray0, intArray0);
      int int0 = tShortIntHashMap0.putIfAbsent((short)0, 0);
      assertEquals(0, int0);
      assertEquals(11, tShortIntHashMap0.capacity());
      assertEquals(1, tShortIntHashMap0.size());
  }

  //Test case number: 10
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - false
   * 2 gnu.trove.map.hash.TShortIntHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - true
   * 3 gnu.trove.map.hash.TShortIntHashMap.doPut(SII)I: I12 Branch 40 IFGE L214 - false
   * 4 gnu.trove.map.hash.TShortIntHashMap.doPut(SII)I: I41 Branch 41 IFEQ L221 - true
   */

  @Test
  public void test10()  throws Throwable  {
      short[] shortArray0 = new short[1];
      int[] intArray0 = new int[2];
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(shortArray0, intArray0);
      assertEquals(5, tShortIntHashMap0.capacity());
      
      HashMap<Short, Integer> hashMap0 = new HashMap<Short, Integer>();
      hashMap0.put((Short) (short)0, (Integer) 0);
      tShortIntHashMap0.putAll((Map<? extends Short, ? extends Integer>) hashMap0);
      assertEquals(1, tShortIntHashMap0.size());
      assertEquals("{0=0}", tShortIntHashMap0.toString());
  }

  //Test case number: 11
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - true
   * 2 gnu.trove.map.hash.TShortIntHashMap.<init>(IF)V: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(62, 62);
      tShortIntHashMap0.putIfAbsent((short) (-1130), 62);
      boolean boolean0 = tShortIntHashMap0.isEmpty();
      assertEquals(1, tShortIntHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortIntHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - false
   */

  @Test
  public void test12()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
      boolean boolean0 = tShortIntHashMap0.isEmpty();
      assertEquals(23, tShortIntHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortIntHashMap.remove(S)I: I14 Branch 46 IFLT L276 - true
   */

  @Test
  public void test13()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap((-973));
      int int0 = tShortIntHashMap0.remove((short)0);
      assertEquals(0, tShortIntHashMap0.size());
      assertEquals(0, int0);
  }

  //Test case number: 14
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.keys()[S: I34 Branch 48 IF_ICMPNE L304 - false
   * 2 gnu.trove.map.hash.TShortIntHashMap.keys()[S: I27 Branch 47 IFLE L303 - true
   * 3 gnu.trove.map.hash.TShortIntHashMap.keys()[S: I27 Branch 47 IFLE L303 - false
   * 4 gnu.trove.map.hash.TShortIntHashMap.keys()[S: I34 Branch 48 IF_ICMPNE L304 - true
   */

  @Test
  public void test14()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
      tShortIntHashMap0.put((short)1614, 64);
      tShortIntHashMap0.keys();
      assertEquals(1, tShortIntHashMap0.size());
      assertEquals("{1614=64}", tShortIntHashMap0.toString());
  }

  //Test case number: 15
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.keys([S)[S: I10 Branch 49 IF_ICMPGE L315 - true
   * 2 gnu.trove.map.hash.TShortIntHashMap.keys([S)[S: I37 Branch 50 IFLE L322 - true
   * 3 gnu.trove.map.hash.TShortIntHashMap.keys([S)[S: I37 Branch 50 IFLE L322 - false
   * 4 gnu.trove.map.hash.TShortIntHashMap.keys([S)[S: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test15()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
      short[] shortArray0 = tShortIntHashMap0.keys(tShortIntHashMap0._set);
      assertEquals(23, tShortIntHashMap0.capacity());
      assertNotNull(shortArray0);
  }

  //Test case number: 16
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.keys([S)[S: I10 Branch 49 IF_ICMPGE L315 - false
   * 2 gnu.trove.map.hash.TShortIntHashMap.keys([S)[S: I44 Branch 51 IF_ICMPNE L323 - false
   * 3 gnu.trove.map.hash.TShortIntHashMap.keys([S)[S: I37 Branch 50 IFLE L322 - true
   * 4 gnu.trove.map.hash.TShortIntHashMap.keys([S)[S: I37 Branch 50 IFLE L322 - false
   * 5 gnu.trove.map.hash.TShortIntHashMap.keys([S)[S: I44 Branch 51 IF_ICMPNE L323 - true
   * 6 gnu.trove.map.hash.TShortIntHashMap.keys()[S: I27 Branch 47 IFLE L303 - true
   * 7 gnu.trove.map.hash.TShortIntHashMap.keys()[S: I27 Branch 47 IFLE L303 - false
   * 8 gnu.trove.map.hash.TShortIntHashMap.keys()[S: I34 Branch 48 IF_ICMPNE L304 - true
   */

  @Test
  public void test16()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap((-409), (-409));
      short[] shortArray0 = tShortIntHashMap0.keys();
      assertNotNull(shortArray0);
      
      int[] intArray0 = new int[6];
      TShortIntHashMap tShortIntHashMap1 = new TShortIntHashMap(tShortIntHashMap0._set, intArray0);
      short[] shortArray1 = tShortIntHashMap1.keys(shortArray0);
      assertEquals(1, tShortIntHashMap1.size());
      assertNotNull(shortArray1);
      assertEquals(17, tShortIntHashMap1.capacity());
      assertNotSame(shortArray0, shortArray1);
      assertEquals("{0=0}", tShortIntHashMap1.toString());
  }

  //Test case number: 17
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.values()[I: I34 Branch 53 IF_ICMPNE L344 - false
   * 2 gnu.trove.map.hash.TShortIntHashMap.values()[I: I27 Branch 52 IFLE L343 - true
   * 3 gnu.trove.map.hash.TShortIntHashMap.values()[I: I27 Branch 52 IFLE L343 - false
   * 4 gnu.trove.map.hash.TShortIntHashMap.values()[I: I34 Branch 53 IF_ICMPNE L344 - true
   */

  @Test
  public void test17()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(0);
      tShortIntHashMap0.put((short)0, 173);
      tShortIntHashMap0.values();
      assertEquals("{0=173}", tShortIntHashMap0.toString());
      assertEquals(false, tShortIntHashMap0.isEmpty());
  }

  //Test case number: 18
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.values([I)[I: I10 Branch 54 IF_ICMPGE L355 - true
   * 2 gnu.trove.map.hash.TShortIntHashMap.values([I)[I: I37 Branch 55 IFLE L362 - true
   * 3 gnu.trove.map.hash.TShortIntHashMap.values([I)[I: I37 Branch 55 IFLE L362 - false
   * 4 gnu.trove.map.hash.TShortIntHashMap.values([I)[I: I44 Branch 56 IF_ICMPNE L363 - true
   */

  @Test
  public void test18()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(62, 62);
      int[] intArray0 = new int[7];
      int[] intArray1 = tShortIntHashMap0.values(intArray0);
      assertSame(intArray1, intArray0);
      assertNotNull(intArray1);
  }

  //Test case number: 19
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.values([I)[I: I10 Branch 54 IF_ICMPGE L355 - false
   * 2 gnu.trove.map.hash.TShortIntHashMap.values([I)[I: I44 Branch 56 IF_ICMPNE L363 - false
   * 3 gnu.trove.map.hash.TShortIntHashMap.values([I)[I: I37 Branch 55 IFLE L362 - true
   * 4 gnu.trove.map.hash.TShortIntHashMap.values([I)[I: I37 Branch 55 IFLE L362 - false
   * 5 gnu.trove.map.hash.TShortIntHashMap.values([I)[I: I44 Branch 56 IF_ICMPNE L363 - true
   * 6 gnu.trove.map.hash.TShortIntHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 7 gnu.trove.map.hash.TShortIntHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 8 gnu.trove.map.hash.TShortIntHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 9 gnu.trove.map.hash.TShortIntHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   */

  @Test
  public void test19()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(0);
      tShortIntHashMap0.putIfAbsent((short)1, 0);
      int[] intArray0 = new int[1];
      tShortIntHashMap0.put((short) (-2036), 0);
      tShortIntHashMap0.values(intArray0);
      assertEquals(false, tShortIntHashMap0.isEmpty());
      assertEquals(7, tShortIntHashMap0.capacity());
  }

  //Test case number: 20
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.containsValue(I)Z: I25 Branch 58 IF_ICMPNE L377 - false
   * 2 gnu.trove.map.hash.TShortIntHashMap.containsValue(I)Z: I30 Branch 59 IF_ICMPNE L377 - false
   * 3 gnu.trove.map.hash.TShortIntHashMap.containsValue(I)Z: I18 Branch 57 IFLE L376 - false
   * 4 gnu.trove.map.hash.TShortIntHashMap.containsValue(I)Z: I25 Branch 58 IF_ICMPNE L377 - true
   */

  @Test
  public void test20()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(62, 62);
      tShortIntHashMap0.putIfAbsent((short) (-1130), 62);
      boolean boolean0 = tShortIntHashMap0.containsValue(62);
      assertEquals(false, tShortIntHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.containsValue(I)Z: I30 Branch 59 IF_ICMPNE L377 - true
   * 2 gnu.trove.map.hash.TShortIntHashMap.containsValue(I)Z: I18 Branch 57 IFLE L376 - true
   * 3 gnu.trove.map.hash.TShortIntHashMap.containsValue(I)Z: I18 Branch 57 IFLE L376 - false
   * 4 gnu.trove.map.hash.TShortIntHashMap.containsValue(I)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 5 gnu.trove.map.hash.TShortIntHashMap.containsValue(I)Z: I25 Branch 58 IF_ICMPNE L377 - false
   */

  @Test
  public void test21()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(62, 62);
      int[] intArray0 = new int[7];
      TShortIntHashMap tShortIntHashMap1 = new TShortIntHashMap(tShortIntHashMap0._set, intArray0);
      boolean boolean0 = tShortIntHashMap1.containsValue(62);
      assertEquals(false, boolean0);
      assertEquals(17, tShortIntHashMap1.capacity());
      assertEquals("{0=0}", tShortIntHashMap1.toString());
      assertEquals(1, tShortIntHashMap1.size());
  }

  //Test case number: 22
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: I18 Branch 60 IFLE L407 - true
   * 2 gnu.trove.map.hash.TShortIntHashMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TShortIntHashMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test22()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(0);
      boolean boolean0 = tShortIntHashMap0.forEachValue((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - false
   * 2 gnu.trove.map.hash.TShortIntHashMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TShortIntHashMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test23()  throws Throwable  {
      short[] shortArray0 = new short[1];
      int[] intArray0 = new int[2];
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(shortArray0, intArray0);
      // Undeclared exception!
      try {
        tShortIntHashMap0.forEachValue((TIntProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.transformValues(Lgnu/trove/function/TIntFunction;)V: I18 Branch 66 IFLE L434 - true
   * 2 gnu.trove.map.hash.TShortIntHashMap.transformValues(Lgnu/trove/function/TIntFunction;)V: I18 Branch 66 IFLE L434 - false
   * 3 gnu.trove.map.hash.TShortIntHashMap.transformValues(Lgnu/trove/function/TIntFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test24()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
      tShortIntHashMap0.transformValues((TIntFunction) null);
      assertEquals(23, tShortIntHashMap0.capacity());
  }

  //Test case number: 25
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.transformValues(Lgnu/trove/function/TIntFunction;)V: I25 Branch 67 IF_ICMPNE L435 - false
   * 2 gnu.trove.map.hash.TShortIntHashMap.adjustOrPutValue(SII)I: I9 Branch 72 IFGE L491 - true
   * 3 gnu.trove.map.hash.TShortIntHashMap.adjustOrPutValue(SII)I: I58 Branch 73 IFEQ L502 - false
   * 4 gnu.trove.map.hash.TShortIntHashMap.transformValues(Lgnu/trove/function/TIntFunction;)V: I18 Branch 66 IFLE L434 - false
   * 5 gnu.trove.map.hash.TShortIntHashMap.transformValues(Lgnu/trove/function/TIntFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test25()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
      tShortIntHashMap0.adjustOrPutValue((short)0, (short)0, (short)0);
      // Undeclared exception!
      try {
        tShortIntHashMap0.transformValues((TIntFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.retainEntries(Lgnu/trove/procedure/TShortIntProcedure;)Z: I31 Branch 68 IFLE L453 - true
   * 2 gnu.trove.map.hash.TShortIntHashMap.retainEntries(Lgnu/trove/procedure/TShortIntProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TShortIntHashMap.retainEntries(Lgnu/trove/procedure/TShortIntProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test26()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
      boolean boolean0 = tShortIntHashMap0.retainEntries((TShortIntProcedure) null);
      assertEquals(false, boolean0);
      assertEquals(23, tShortIntHashMap0.capacity());
  }

  //Test case number: 27
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.retainEntries(Lgnu/trove/procedure/TShortIntProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - false
   * 2 gnu.trove.map.hash.TShortIntHashMap.retainEntries(Lgnu/trove/procedure/TShortIntProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TShortIntHashMap.retainEntries(Lgnu/trove/procedure/TShortIntProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test27()  throws Throwable  {
      short[] shortArray0 = new short[5];
      int[] intArray0 = new int[5];
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(shortArray0, intArray0);
      // Undeclared exception!
      try {
        tShortIntHashMap0.retainEntries((TShortIntProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.adjustValue(SI)Z: I9 Branch 71 IFGE L477 - true
   * 2 gnu.trove.map.hash.TShortIntHashMap.increment(S)Z: root-Branch
   */

  @Test
  public void test28()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(0);
      tShortIntHashMap0.put((short) (-2036), 0);
      boolean boolean0 = tShortIntHashMap0.increment((short) (-2036));
      assertEquals(1, tShortIntHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.adjustOrPutValue(SII)I: I9 Branch 72 IFGE L491 - false
   * 2 gnu.trove.map.hash.TShortIntHashMap.adjustOrPutValue(SII)I: I58 Branch 73 IFEQ L502 - true
   */

  @Test
  public void test29()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(0);
      tShortIntHashMap0.put((short)0, 173);
      int int0 = tShortIntHashMap0.adjustOrPutValue((short)0, (-1896), (int) (short)0);
      assertEquals(false, tShortIntHashMap0.isEmpty());
      assertEquals((-1723), int0);
  }

  //Test case number: 30
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortIntHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - false
   */

  @Test
  public void test30()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
      boolean boolean0 = tShortIntHashMap0.equals((Object) null);
      assertEquals(23, tShortIntHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 31
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - false
   * 2 gnu.trove.map.hash.TShortIntHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
      TShortIntHashMap tShortIntHashMap1 = new TShortIntHashMap();
      tShortIntHashMap0.putIfAbsent((short)1314, 0);
      boolean boolean0 = tShortIntHashMap0.equals((Object) tShortIntHashMap1);
      assertEquals("{1314=0}", tShortIntHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 32
  /*
   * 14 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.equals(Ljava/lang/Object;)Z: I84 Branch 78 IF_ICMPEQ L1200 - false
   * 2 gnu.trove.map.hash.TShortIntHashMap.equals(Ljava/lang/Object;)Z: I87 Branch 79 IF_ICMPEQ L1200 - true
   * 3 gnu.trove.map.hash.TShortIntHashMap.equals(Ljava/lang/Object;)Z: I84 Branch 78 IF_ICMPEQ L1200 - true
   * 4 gnu.trove.map.hash.TShortIntHashMap.get(S)I: I9 Branch 44 IFGE L253 - true
   * 5 gnu.trove.map.hash.TShortIntHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 6 gnu.trove.map.hash.TShortIntHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 7 gnu.trove.map.hash.TShortIntHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 8 gnu.trove.map.hash.TShortIntHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 9 gnu.trove.map.hash.TShortIntHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 10 gnu.trove.map.hash.TShortIntHashMap.get(S)I: I9 Branch 44 IFGE L253 - false
   * 11 gnu.trove.map.hash.TShortIntHashMap.putAll(Lgnu/trove/map/TShortIntMap;)V: I15 Branch 43 IFEQ L243 - false
   * 12 gnu.trove.map.hash.TShortIntHashMap$TShortIntHashIterator.value()I: root-Branch
   * 13 gnu.trove.map.hash.TShortIntHashMap$TShortIntHashIterator.advance()V: root-Branch
   * 14 gnu.trove.map.hash.TShortIntHashMap$TShortIntHashIterator.key()S: root-Branch
   */

  @Test
  public void test32()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(62, 62);
      tShortIntHashMap0.putIfAbsent((short) (-1130), 62);
      TShortIntHashMap tShortIntHashMap1 = new TShortIntHashMap();
      int[] intArray0 = new int[7];
      TShortIntHashMap tShortIntHashMap2 = new TShortIntHashMap(tShortIntHashMap0._set, intArray0);
      tShortIntHashMap1.putAll((TShortIntMap) tShortIntHashMap2);
      tShortIntHashMap0.putIfAbsent((short) (-300), (short) (-300));
      boolean boolean0 = tShortIntHashMap1.equals((Object) tShortIntHashMap0);
      assertEquals(false, tShortIntHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 33
  /*
   * 19 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.equals(Ljava/lang/Object;)Z: I87 Branch 79 IF_ICMPEQ L1200 - false
   * 2 gnu.trove.map.hash.TShortIntHashMap.equals(Ljava/lang/Object;)Z: I90 Branch 80 IF_ICMPEQ L1200 - true
   * 3 gnu.trove.map.hash.TShortIntHashMap.<init>(IF)V: root-Branch
   * 4 gnu.trove.map.hash.TShortIntHashMap.<init>()V: root-Branch
   * 5 gnu.trove.map.hash.TShortIntHashMap.iterator()Lgnu/trove/iterator/TShortIntIterator;: root-Branch
   * 6 gnu.trove.map.hash.TShortIntHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 7 gnu.trove.map.hash.TShortIntHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 8 gnu.trove.map.hash.TShortIntHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 9 gnu.trove.map.hash.TShortIntHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 10 gnu.trove.map.hash.TShortIntHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 11 gnu.trove.map.hash.TShortIntHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 12 gnu.trove.map.hash.TShortIntHashMap.equals(Ljava/lang/Object;)Z: I84 Branch 78 IF_ICMPEQ L1200 - false
   * 13 gnu.trove.map.hash.TShortIntHashMap.get(S)I: I9 Branch 44 IFGE L253 - false
   * 14 gnu.trove.map.hash.TShortIntHashMap.putAll(Lgnu/trove/map/TShortIntMap;)V: I15 Branch 43 IFEQ L243 - true
   * 15 gnu.trove.map.hash.TShortIntHashMap.putAll(Lgnu/trove/map/TShortIntMap;)V: I15 Branch 43 IFEQ L243 - false
   * 16 gnu.trove.map.hash.TShortIntHashMap$TShortIntHashIterator.value()I: root-Branch
   * 17 gnu.trove.map.hash.TShortIntHashMap$TShortIntHashIterator.advance()V: root-Branch
   * 18 gnu.trove.map.hash.TShortIntHashMap$TShortIntHashIterator.<init>(Lgnu/trove/map/hash/TShortIntHashMap;Lgnu/trove/map/hash/TShortIntHashMap;)V: root-Branch
   * 19 gnu.trove.map.hash.TShortIntHashMap$TShortIntHashIterator.key()S: root-Branch
   */

  @Test
  public void test33()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(62, 62);
      TShortIntHashMap tShortIntHashMap1 = new TShortIntHashMap();
      int[] intArray0 = new int[7];
      intArray0[2] = (int) (short) (-1130);
      TShortIntHashMap tShortIntHashMap2 = new TShortIntHashMap(tShortIntHashMap0._set, intArray0);
      tShortIntHashMap1.putAll((TShortIntMap) tShortIntHashMap2);
      tShortIntHashMap0.putIfAbsent((short) (-300), (short) (-300));
      boolean boolean0 = tShortIntHashMap1.equals((Object) tShortIntHashMap0);
      assertEquals(false, tShortIntHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 34
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - false
   * 2 gnu.trove.map.hash.TShortIntHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 3 gnu.trove.map.hash.TShortIntHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 4 gnu.trove.map.hash.TShortIntHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   */

  @Test
  public void test34()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(0);
      tShortIntHashMap0.put((short)0, 173);
      int int0 = tShortIntHashMap0.hashCode();
      assertEquals(1, tShortIntHashMap0.size());
      assertEquals(173, int0);
  }

  //Test case number: 35
  /*
   * 14 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap$1.execute(SI)Z: I4 Branch 115 IFEQ L1233 - true
   * 2 gnu.trove.map.hash.TShortIntHashMap$1.<init>(Lgnu/trove/map/hash/TShortIntHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 3 gnu.trove.map.hash.TShortIntHashMap$1.execute(SI)Z: I4 Branch 115 IFEQ L1233 - false
   * 4 gnu.trove.map.hash.TShortIntHashMap.toString()Ljava/lang/String;: root-Branch
   * 5 gnu.trove.map.hash.TShortIntHashMap.put(SI)I: root-Branch
   * 6 gnu.trove.map.hash.TShortIntHashMap.<init>([S[I)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 7 gnu.trove.map.hash.TShortIntHashMap.<init>([S[I)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 8 gnu.trove.map.hash.TShortIntHashMap.forEachEntry(Lgnu/trove/procedure/TShortIntProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 9 gnu.trove.map.hash.TShortIntHashMap.forEachEntry(Lgnu/trove/procedure/TShortIntProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 10 gnu.trove.map.hash.TShortIntHashMap.forEachEntry(Lgnu/trove/procedure/TShortIntProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 11 gnu.trove.map.hash.TShortIntHashMap.forEachEntry(Lgnu/trove/procedure/TShortIntProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 12 gnu.trove.map.hash.TShortIntHashMap.forEachEntry(Lgnu/trove/procedure/TShortIntProcedure;)Z: I39 Branch 65 IFNE L422 - true
   * 13 gnu.trove.map.hash.TShortIntHashMap.doPut(SII)I: I12 Branch 40 IFGE L214 - false
   * 14 gnu.trove.map.hash.TShortIntHashMap.doPut(SII)I: I41 Branch 41 IFEQ L221 - true
   */

  @Test
  public void test35()  throws Throwable  {
      short[] shortArray0 = new short[4];
      shortArray0[0] = (short)18;
      int[] intArray0 = new int[10];
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(shortArray0, intArray0);
      String string0 = tShortIntHashMap0.toString();
      assertEquals(2, tShortIntHashMap0.size());
      assertEquals(23, tShortIntHashMap0.capacity());
      assertEquals("{18=0, 0=0}", string0);
      assertNotNull(string0);
  }

  //Test case number: 36
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TShortIntHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - false
   * 2 gnu.trove.map.hash.TShortIntHashMap.<init>(I)V: root-Branch
   * 3 gnu.trove.map.hash.TShortIntHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.hash.TShortIntHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - true
   * 5 gnu.trove.map.hash.TShortIntHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - false
   * 6 gnu.trove.map.hash.TShortIntHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - true
   * 7 gnu.trove.map.hash.TShortIntHashMap.putIfAbsent(SI)I: I9 Branch 39 IFGE L205 - true
   * 8 gnu.trove.map.hash.TShortIntHashMap.doPut(SII)I: I12 Branch 40 IFGE L214 - true
   * 9 gnu.trove.map.hash.TShortIntHashMap.doPut(SII)I: I41 Branch 41 IFEQ L221 - false
   */

  @Test
  public void test36()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(0);
      tShortIntHashMap0.putIfAbsent((short)1, 0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PrintStream printStream0 = new PrintStream((OutputStream) pipedOutputStream0, false);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) printStream0);
      tShortIntHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
  }
}

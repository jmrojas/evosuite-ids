/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.procedure.array;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class ToObjectArrayProceedureEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[5] = object5;
      Object object6 = new Object();
      objectArray0[0] = object3;
      objectArray0[1] = object5;
      objectArray0[2] = object3;
      objectArray0[3] = object4;
      objectArray0[4] = object6;
      objectArray0[5] = object3;
      objectArray0[6] = object0;
      objectArray0[7] = object6;
      objectArray0[6] = object6;
      Object object7 = new Object();
      objectArray0[7] = object7;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
  }

  @Test
  public void test1()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
      Object object2 = new Object();
      objectArray0[2] = object2;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure1 = new ToObjectArrayProceedure<Object>(objectArray0);
      boolean boolean0 = toObjectArrayProceedure1.execute(objectArray0[0]);
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[5] = object5;
      Object object6 = new Object();
      objectArray0[6] = object6;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
      toObjectArrayProceedure0.execute(objectArray0[6]);
      Object[] objectArray1 = new Object[2];
      Object object7 = new Object();
      objectArray1[0] = object7;
      objectArray1[1] = object7;
      Object object8 = new Object();
      objectArray1[0] = object8;
      objectArray1[1] = object8;
      objectArray1[0] = object7;
      Object object9 = new Object();
      objectArray1[1] = object9;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure1 = new ToObjectArrayProceedure<Object>(objectArray1);
      ToObjectArrayProceedure<Object> toObjectArrayProceedure2 = new ToObjectArrayProceedure<Object>(objectArray1);
      toObjectArrayProceedure2.execute(object7);
      toObjectArrayProceedure2.execute(object7);
      // Undeclared exception!
      try {
        toObjectArrayProceedure2.execute(objectArray1[1]);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      String[] stringArray0 = new String[7];
      String string0 = ")f@_B28D'";
      stringArray0[0] = string0;
      String string1 = "8S=F=7%gl*IH";
      stringArray0[1] = string1;
      String string2 = "pJraV]s>'^";
      stringArray0[2] = string2;
      String string3 = "";
      stringArray0[3] = string3;
      String string4 = "fVz[<N1a]JRiID";
      stringArray0[4] = string4;
      String string5 = "";
      stringArray0[5] = string5;
      String string6 = "";
      stringArray0[6] = string6;
      ToObjectArrayProceedure<String> toObjectArrayProceedure1 = new ToObjectArrayProceedure<String>(stringArray0);
      toObjectArrayProceedure1.execute(string2);
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[5] = object5;
      Object object6 = new Object();
      objectArray0[6] = object6;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure2 = new ToObjectArrayProceedure<Object>(objectArray0);
      boolean boolean0 = toObjectArrayProceedure2.execute(objectArray0[1]);
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = "a LeW#6m,O";
      ToObjectArrayProceedure<String> toObjectArrayProceedure0 = new ToObjectArrayProceedure<String>(stringArray0);
      toObjectArrayProceedure0.execute(string0);
      stringArray0[0] = string0;
      String string1 = "C\"(V7/$eS GFRJ:OPI";
      String string2 = "";
      ToObjectArrayProceedure<Object> toObjectArrayProceedure1 = new ToObjectArrayProceedure<Object>((Object[]) stringArray0);
      Object object0 = new Object();
      // Undeclared exception!
      try {
        toObjectArrayProceedure1.execute(object0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
         //
         // java.lang.Object
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[0] = object0;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
      String[] stringArray0 = new String[10];
      String string0 = "5U\"0yj<3q>";
      stringArray0[0] = string0;
      String string1 = "z$";
      stringArray0[1] = string1;
      String string2 = "`@5cbsU\\i";
      stringArray0[2] = string2;
      String string3 = "";
      stringArray0[3] = string3;
      String string4 = ">]w\\";
      stringArray0[4] = string4;
      String string5 = "";
      stringArray0[5] = string5;
      String string6 = "\"p<nrHJmctf";
      stringArray0[6] = string6;
      String string7 = "";
      stringArray0[7] = string7;
      String string8 = "";
      stringArray0[8] = string8;
      String string9 = "GdgO`A";
      stringArray0[9] = string9;
      ToObjectArrayProceedure<String> toObjectArrayProceedure1 = new ToObjectArrayProceedure<String>(stringArray0);
      toObjectArrayProceedure0.execute(objectArray0[0]);
      objectArray0[0] = object0;
      objectArray0[1] = object0;
      objectArray0[2] = object0;
      objectArray0[3] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure2 = new ToObjectArrayProceedure<Object>(objectArray0);
      boolean boolean0 = toObjectArrayProceedure2.execute(object3);
      assertEquals(true, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[5] = object5;
      Object object6 = new Object();
      objectArray0[6] = object6;
      Object object7 = new Object();
      objectArray0[7] = object7;
      Object object8 = new Object();
      objectArray0[8] = object8;
      Object object9 = new Object();
      objectArray0[9] = object9;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
  }

  @Test
  public void test7()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
      toObjectArrayProceedure0.execute(object0);
      objectArray0[1] = object1;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure1 = new ToObjectArrayProceedure<Object>(objectArray0);
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      ToObjectArrayProceedure<Object> toObjectArrayProceedure2 = new ToObjectArrayProceedure<Object>(objectArray0);
      objectArray0[3] = object3;
      toObjectArrayProceedure1.execute(objectArray0[3]);
      ToObjectArrayProceedure<Object> toObjectArrayProceedure3 = new ToObjectArrayProceedure<Object>(objectArray0);
      toObjectArrayProceedure3.execute(objectArray0[1]);
      Object object4 = new Object();
      String[] stringArray0 = new String[4];
      String string0 = ">";
      stringArray0[0] = string0;
      String string1 = "L Y_jwH\\~zw-";
      stringArray0[1] = string1;
      String string2 = "]ZhZ*O}DWp}!4oRn3";
      stringArray0[2] = string2;
      String string3 = "}jL";
      stringArray0[3] = string3;
      ToObjectArrayProceedure<String> toObjectArrayProceedure4 = new ToObjectArrayProceedure<String>(stringArray0);
      objectArray0[4] = object4;
      Object object5 = new Object();
      toObjectArrayProceedure1.execute(object2);
      objectArray0[5] = object5;
      Object object6 = new Object();
      objectArray0[6] = object6;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure5 = new ToObjectArrayProceedure<Object>(objectArray0);
      assertNotSame(toObjectArrayProceedure5, toObjectArrayProceedure1);
  }

  @Test
  public void test8()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[5] = object5;
      Object object6 = new Object();
      objectArray0[6] = object6;
      Object object7 = new Object();
      objectArray0[7] = object7;
      Object object8 = new Object();
      objectArray0[8] = object8;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
      boolean boolean0 = toObjectArrayProceedure0.execute(objectArray0[7]);
      assertEquals(true, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      String[] stringArray0 = new String[2];
      String string0 = "~:R';V%zY+dLY";
      stringArray0[0] = string0;
      String string1 = "u^bf";
      stringArray0[1] = string1;
      Object[] objectArray1 = new Object[9];
      objectArray1[0] = object1;
      objectArray1[1] = (Object) string1;
      objectArray1[2] = object0;
      objectArray1[3] = (Object) string1;
      objectArray1[4] = (Object) stringArray0;
      objectArray1[5] = (Object) stringArray0;
      objectArray1[6] = object0;
      objectArray1[7] = object2;
      objectArray1[8] = (Object) string0;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray1);
      Object object3 = new Object();
      toObjectArrayProceedure0.execute(object3);
      ToObjectArrayProceedure<String> toObjectArrayProceedure1 = new ToObjectArrayProceedure<String>(stringArray0);
      objectArray0[2] = object2;
      Object object4 = new Object();
      objectArray0[3] = object4;
      Object object5 = new Object();
      objectArray0[4] = object5;
      Object object6 = new Object();
      objectArray0[5] = object6;
      Object object7 = new Object();
      Object[] objectArray2 = new Object[2];
      Object object8 = new Object();
      objectArray2[0] = object8;
      objectArray2[1] = (Object) string0;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure2 = new ToObjectArrayProceedure<Object>(objectArray2);
      toObjectArrayProceedure2.execute(object2);
      objectArray0[6] = object7;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure3 = new ToObjectArrayProceedure<Object>(objectArray0);
      assertNotSame(toObjectArrayProceedure3, toObjectArrayProceedure2);
  }

  @Test
  public void test10()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[0] = object3;
      objectArray0[1] = object3;
      objectArray0[2] = object0;
      objectArray0[3] = object1;
      objectArray0[4] = object1;
      objectArray0[5] = object2;
      objectArray0[6] = object2;
      Object object4 = new Object();
      objectArray0[3] = object4;
      Object object5 = new Object();
      objectArray0[4] = object5;
      Object object6 = new Object();
      objectArray0[5] = object6;
      Object object7 = new Object();
      objectArray0[6] = object7;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
      toObjectArrayProceedure0.execute(object4);
      Object[] objectArray1 = new Object[6];
      Object object8 = new Object();
      objectArray1[0] = object8;
      Object object9 = new Object();
      objectArray1[1] = object9;
      Object object10 = new Object();
      objectArray1[2] = object10;
      Object object11 = new Object();
      objectArray1[3] = object11;
      Object object12 = new Object();
      objectArray1[4] = object12;
      Object object13 = new Object();
      objectArray1[5] = object13;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure1 = new ToObjectArrayProceedure<Object>(objectArray1);
      boolean boolean0 = toObjectArrayProceedure1.execute(objectArray1[3]);
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = "+5K:`w)pSTFGqjYBwx}";
      stringArray0[0] = string0;
      String string1 = "";
      stringArray0[1] = string1;
      ToObjectArrayProceedure<String> toObjectArrayProceedure0 = new ToObjectArrayProceedure<String>(stringArray0);
  }

  @Test
  public void test12()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[5] = object5;
      Object object6 = new Object();
      objectArray0[6] = object6;
      Object object7 = new Object();
      objectArray0[7] = object7;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
  }

  @Test
  public void test13()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      objectArray0[0] = object0;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
  }

  @Test
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[8];
      String string0 = "ItB01#j/&w\"";
      stringArray0[0] = string0;
      String string1 = "";
      stringArray0[1] = string1;
      String string2 = "(LyDursezel";
      stringArray0[2] = string2;
      String string3 = "";
      stringArray0[3] = string3;
      String string4 = "y.w\"{+?n#2L";
      stringArray0[4] = string4;
      String string5 = "TbtRw\\J";
      stringArray0[5] = string5;
      String string6 = "";
      stringArray0[6] = string6;
      String string7 = "";
      stringArray0[7] = string7;
      ToObjectArrayProceedure<String> toObjectArrayProceedure0 = new ToObjectArrayProceedure<String>(stringArray0);
      boolean boolean0 = toObjectArrayProceedure0.execute(stringArray0[2]);
      assertEquals(true, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[5] = object5;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
  }

  @Test
  public void test16()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      Object[] objectArray1 = new Object[1];
      objectArray1[0] = object1;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray1);
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[5] = object5;
      Object object6 = new Object();
      objectArray0[6] = object6;
      Object object7 = new Object();
      String[] stringArray0 = new String[9];
      String string0 = "";
      stringArray0[0] = string0;
      String string1 = "";
      stringArray0[1] = string1;
      String string2 = ",OR*hP'";
      stringArray0[2] = string2;
      String string3 = "B(+V<!";
      stringArray0[3] = string3;
      String string4 = "BN'LK'@ce";
      stringArray0[4] = string4;
      String string5 = "";
      stringArray0[5] = string5;
      String string6 = "'i9rKF%uX\"g#@w9FC_";
      stringArray0[6] = string6;
      String string7 = ">j#[q?M\\;B7U60:7o";
      stringArray0[7] = string7;
      String string8 = "";
      stringArray0[8] = string8;
      ToObjectArrayProceedure<String> toObjectArrayProceedure1 = new ToObjectArrayProceedure<String>(stringArray0);
      objectArray0[7] = object7;
      Object object8 = new Object();
      objectArray0[8] = object8;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure2 = new ToObjectArrayProceedure<Object>(objectArray0);
      assertNotSame(toObjectArrayProceedure2, toObjectArrayProceedure0);
  }

  @Test
  public void test17()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      Object object0 = new Object();
      Object[] objectArray1 = new Object[6];
      objectArray1[0] = object0;
      Object object1 = new Object();
      objectArray1[1] = object1;
      objectArray1[2] = object0;
      Object object2 = new Object();
      objectArray1[3] = object2;
      objectArray1[4] = object0;
      objectArray1[5] = object0;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray1);
      ToObjectArrayProceedure<Object> toObjectArrayProceedure1 = new ToObjectArrayProceedure<Object>(objectArray0);
      toObjectArrayProceedure1.execute(object0);
      ToObjectArrayProceedure<Object> toObjectArrayProceedure2 = new ToObjectArrayProceedure<Object>(objectArray0);
      String string0 = "y\"ok.kTl\\}p4";
      toObjectArrayProceedure2.execute((Object) string0);
      objectArray0[0] = (Object) toObjectArrayProceedure2;
      objectArray0[1] = object0;
      objectArray0[2] = object0;
      objectArray0[3] = (Object) toObjectArrayProceedure2;
      objectArray0[4] = (Object) toObjectArrayProceedure2;
      objectArray0[5] = (Object) toObjectArrayProceedure2;
      toObjectArrayProceedure2.execute(object0);
      objectArray0[0] = object0;
      Object object3 = new Object();
      toObjectArrayProceedure2.execute(objectArray0[2]);
      toObjectArrayProceedure2.execute(object0);
      objectArray0[1] = object3;
      Object object4 = new Object();
      objectArray0[2] = object4;
      Object object5 = new Object();
      objectArray0[3] = object5;
      Object object6 = new Object();
      objectArray0[4] = object6;
      Object object7 = new Object();
      ToObjectArrayProceedure<Object> toObjectArrayProceedure3 = new ToObjectArrayProceedure<Object>(objectArray0);
      objectArray0[5] = object7;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure4 = new ToObjectArrayProceedure<Object>(objectArray0);
      assertNotSame(toObjectArrayProceedure4, toObjectArrayProceedure1);
  }

  @Test
  public void test18()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
      toObjectArrayProceedure0.execute(object1);
      objectArray0[2] = object2;
      Object object3 = new Object();
      String[] stringArray0 = new String[7];
      String string0 = "";
      stringArray0[0] = string0;
      String string1 = "";
      stringArray0[1] = string1;
      String string2 = "2+Z3:=";
      stringArray0[2] = string2;
      String string3 = "";
      stringArray0[3] = string3;
      String string4 = "";
      stringArray0[4] = string4;
      String string5 = "'Q6xFGR";
      stringArray0[5] = string5;
      String string6 = "[mjwlaiSPh2;9:jF2";
      stringArray0[6] = string6;
      ToObjectArrayProceedure<String> toObjectArrayProceedure1 = new ToObjectArrayProceedure<String>(stringArray0);
      toObjectArrayProceedure1.execute(string3);
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[5] = object5;
      Object object6 = new Object();
      objectArray0[6] = object6;
      Object object7 = new Object();
      objectArray0[7] = object7;
      Object object8 = new Object();
      objectArray0[8] = object8;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure2 = new ToObjectArrayProceedure<Object>(objectArray0);
      assertNotSame(toObjectArrayProceedure2, toObjectArrayProceedure0);
  }

  @Test
  public void test19()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[5] = object5;
      Object object6 = new Object();
      objectArray0[6] = object6;
      Object object7 = new Object();
      objectArray0[7] = object7;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
      boolean boolean0 = toObjectArrayProceedure0.execute(object4);
      assertEquals(true, boolean0);
  }
}

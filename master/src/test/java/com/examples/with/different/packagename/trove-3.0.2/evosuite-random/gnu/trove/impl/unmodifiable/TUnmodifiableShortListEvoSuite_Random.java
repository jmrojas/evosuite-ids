/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TShortCollection;
import gnu.trove.impl.sync.TSynchronizedRandomAccessShortList;
import gnu.trove.impl.sync.TSynchronizedShortList;
import gnu.trove.impl.sync.TSynchronizedShortSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessShortList;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortList;
import gnu.trove.list.TShortList;
import gnu.trove.list.array.TShortArrayList;
import gnu.trove.list.linked.TShortLinkedList;
import gnu.trove.procedure.TShortProcedure;
import gnu.trove.set.TShortSet;
import gnu.trove.set.hash.TShortHashSet;
import java.util.Collection;
import java.util.Vector;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableShortListEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = (-216);
      short short0 = (short)0;
      TShortLinkedList tShortLinkedList0 = new TShortLinkedList(short0);
      // Undeclared exception!
      try {
        tShortLinkedList0.subList(int0, int0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      short[] shortArray0 = new short[1];
      short short0 = (short)1250;
      shortArray0[0] = short0;
      TShortList tShortList0 = null;
      TShortLinkedList tShortLinkedList0 = null;
      try {
        tShortLinkedList0 = new TShortLinkedList(tShortList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      short[] shortArray0 = new short[4];
      short short0 = (short)0;
      shortArray0[0] = short0;
      short short1 = (short)1;
      shortArray0[1] = short1;
      short short2 = (short) (-1653);
      shortArray0[2] = short2;
      short short3 = (short) (-813);
      TShortList tShortList0 = null;
      TSynchronizedRandomAccessShortList tSynchronizedRandomAccessShortList0 = null;
      try {
        tSynchronizedRandomAccessShortList0 = new TSynchronizedRandomAccessShortList(tShortList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = 2;
      short short0 = (short)0;
      TShortList tShortList0 = null;
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = null;
      try {
        tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList(tShortList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TShortSet tShortSet0 = null;
      TSynchronizedShortSet tSynchronizedShortSet0 = null;
      try {
        tSynchronizedShortSet0 = new TSynchronizedShortSet(tShortSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      short[] shortArray0 = new short[4];
      short short0 = (short) (-1);
      shortArray0[0] = short0;
      short short1 = (short) (-1);
      shortArray0[1] = short1;
      short short2 = (short)0;
      TShortList tShortList0 = null;
      TUnmodifiableShortList tUnmodifiableShortList0 = null;
      try {
        tUnmodifiableShortList0 = new TUnmodifiableShortList(tShortList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      short[] shortArray0 = new short[9];
      short short0 = (short) (-640);
      shortArray0[0] = short0;
      short short1 = (short) (-549);
      shortArray0[1] = short1;
      short short2 = (short)0;
      shortArray0[2] = short2;
      short short3 = (short)873;
      shortArray0[3] = short3;
      short short4 = (short)261;
      shortArray0[4] = short4;
      short short5 = (short)320;
      shortArray0[5] = short5;
      short short6 = (short)0;
      shortArray0[6] = short6;
      short short7 = (short)0;
      shortArray0[7] = short7;
      short short8 = (short)0;
      shortArray0[8] = short8;
      TShortArrayList tShortArrayList0 = TShortArrayList.wrap(shortArray0);
      TShortProcedure tShortProcedure0 = null;
      // Undeclared exception!
      try {
        tShortArrayList0.inverseGrep(tShortProcedure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TShortLinkedList tShortLinkedList0 = new TShortLinkedList();
      TSynchronizedRandomAccessShortList tSynchronizedRandomAccessShortList0 = new TSynchronizedRandomAccessShortList((TShortList) tShortLinkedList0);
      TShortProcedure tShortProcedure0 = null;
      TShortLinkedList tShortLinkedList1 = (TShortLinkedList)tSynchronizedRandomAccessShortList0.grep(tShortProcedure0);
      TUnmodifiableShortList tUnmodifiableShortList0 = new TUnmodifiableShortList((TShortList) tShortLinkedList1);
      short short0 = (short)0;
      tShortLinkedList0.lastIndexOf(short0);
      int int0 = tUnmodifiableShortList0.size();
      short[] shortArray0 = new short[1];
      short short1 = (short) (-1425);
      shortArray0[0] = short1;
      short short2 = (short)1615;
      shortArray0[0] = short2;
      int int1 = 0;
      tUnmodifiableShortList0.toArray(shortArray0, (int) short2, int1, int0);
      short short3 = (short) (-972);
      // Undeclared exception!
      try {
        tUnmodifiableShortList0.remove(short3);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TShortList tShortList0 = null;
      TUnmodifiableShortList tUnmodifiableShortList0 = null;
      try {
        tUnmodifiableShortList0 = new TUnmodifiableShortList(tShortList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 0;
      float float0 = 0.0F;
      short short0 = (short) (-1496);
      TShortHashSet tShortHashSet0 = new TShortHashSet(int0, float0, short0);
      TShortArrayList tShortArrayList0 = new TShortArrayList((TShortCollection) tShortHashSet0);
      TUnmodifiableShortList tUnmodifiableShortList0 = new TUnmodifiableShortList((TShortList) tShortArrayList0);
      tUnmodifiableShortList0.toString();
      TShortList tShortList0 = null;
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = null;
      try {
        tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList(tShortList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TShortLinkedList tShortLinkedList0 = new TShortLinkedList();
      TSynchronizedRandomAccessShortList tSynchronizedRandomAccessShortList0 = new TSynchronizedRandomAccessShortList((TShortList) tShortLinkedList0);
      int int0 = 1946;
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessShortList0.subList(int0, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 1946 greater than last index 0
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      short short0 = (short) (-1765);
      TShortLinkedList tShortLinkedList0 = new TShortLinkedList(short0);
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortLinkedList0);
      Vector<Vector<Integer>> vector0 = new Vector<Vector<Integer>>();
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessShortList0.retainAll((Collection<?>) vector0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TShortList tShortList0 = null;
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = null;
      try {
        tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList(tShortList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = 106;
      TShortHashSet tShortHashSet0 = new TShortHashSet(int0);
      TShortArrayList tShortArrayList0 = new TShortArrayList((TShortCollection) tShortHashSet0);
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      tShortHashSet0.size();
      int int1 = (-768);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessShortList0.set(int1, tShortHashSet0._set);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TShortList tShortList0 = null;
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = null;
      try {
        tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList(tShortList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TShortList tShortList0 = null;
      TSynchronizedShortList tSynchronizedShortList0 = null;
      try {
        tSynchronizedShortList0 = new TSynchronizedShortList(tShortList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = 0;
      TShortArrayList tShortArrayList0 = new TShortArrayList(int0);
      // Undeclared exception!
      try {
        tShortArrayList0.getQuick(int0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      short[] shortArray0 = new short[8];
      short short0 = (short) (-637);
      shortArray0[0] = short0;
      short short1 = (short) (-1060);
      shortArray0[1] = short1;
      short short2 = (short)0;
      shortArray0[2] = short2;
      short short3 = (short)0;
      shortArray0[3] = short3;
      short short4 = (short) (-209);
      shortArray0[4] = short4;
      short short5 = (short) (-746);
      shortArray0[5] = short5;
      short short6 = (short)228;
      shortArray0[6] = short6;
      short short7 = (short)1907;
      shortArray0[7] = short7;
      TShortArrayList tShortArrayList0 = new TShortArrayList(shortArray0);
      TShortProcedure tShortProcedure0 = null;
      // Undeclared exception!
      try {
        tShortArrayList0.inverseGrep(tShortProcedure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      TShortList tShortList0 = null;
      TSynchronizedRandomAccessShortList tSynchronizedRandomAccessShortList0 = null;
      try {
        tSynchronizedRandomAccessShortList0 = new TSynchronizedRandomAccessShortList(tShortList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test19()  throws Throwable  {
      short short0 = (short)9;
      TShortLinkedList tShortLinkedList0 = new TShortLinkedList(short0);
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortLinkedList0);
      short[] shortArray0 = new short[4];
      shortArray0[0] = short0;
      shortArray0[1] = short0;
      short short1 = (short) (-1458);
      shortArray0[2] = short1;
      short short2 = (short)0;
      shortArray0[3] = short2;
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessShortList0.removeAll(shortArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

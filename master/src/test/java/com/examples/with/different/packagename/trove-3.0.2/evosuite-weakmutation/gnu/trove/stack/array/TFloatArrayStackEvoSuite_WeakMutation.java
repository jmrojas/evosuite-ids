/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.stack.array;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.stack.TFloatStack;
import gnu.trove.stack.array.TFloatArrayStack;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TFloatArrayStackEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 11 covered goals:
   * 1 Weak Mutation 4: gnu.trove.stack.array.TFloatArrayStack.<init>(IF)V:79 - ReplaceVariable capacity -> DEFAULT_CAPACITY
   * 2 Weak Mutation 5: gnu.trove.stack.array.TFloatArrayStack.<init>(IF)V:79 - InsertUnaryOp Negation of capacity
   * 3 Weak Mutation 6: gnu.trove.stack.array.TFloatArrayStack.<init>(IF)V:79 - InsertUnaryOp IINC 1 capacity
   * 4 Weak Mutation 7: gnu.trove.stack.array.TFloatArrayStack.<init>(IF)V:79 - InsertUnaryOp IINC -1 capacity
   * 5 Weak Mutation 8: gnu.trove.stack.array.TFloatArrayStack.<init>(IF)V:79 - InsertUnaryOp Negation of no_entry_value
   * 6 gnu.trove.stack.array.TFloatArrayStack.<init>(IF)V: root-Branch
   * 7 Weak Mutation 4: gnu.trove.stack.array.TFloatArrayStack.<init>(IF)V:79 - ReplaceVariable capacity -> DEFAULT_CAPACITY
   * 8 Weak Mutation 5: gnu.trove.stack.array.TFloatArrayStack.<init>(IF)V:79 - InsertUnaryOp Negation of capacity
   * 9 Weak Mutation 6: gnu.trove.stack.array.TFloatArrayStack.<init>(IF)V:79 - InsertUnaryOp IINC 1 capacity
   * 10 Weak Mutation 7: gnu.trove.stack.array.TFloatArrayStack.<init>(IF)V:79 - InsertUnaryOp IINC -1 capacity
   * 11 Weak Mutation 8: gnu.trove.stack.array.TFloatArrayStack.<init>(IF)V:79 - InsertUnaryOp Negation of no_entry_value
   */

//   @Test
//   public void test0()  throws Throwable  {
//       TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack(0, 0);
//       assertEquals(0.0F, tFloatArrayStack0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 1
  /*
   * 5 covered goals:
   * 1 Weak Mutation 9: gnu.trove.stack.array.TFloatArrayStack.<init>(Lgnu/trove/stack/TFloatStack;)V:90 - ReplaceComparisonOperator == -> !=
   * 2 Weak Mutation 12: gnu.trove.stack.array.TFloatArrayStack.<init>(Lgnu/trove/stack/TFloatStack;)V:94 - ReplaceConstant - Only support TFloatArrayStack -> 
   * 3 gnu.trove.stack.array.TFloatArrayStack.<init>(Lgnu/trove/stack/TFloatStack;)V: I8 Branch 1 IFEQ L90 - true
   * 4 Weak Mutation 9: gnu.trove.stack.array.TFloatArrayStack.<init>(Lgnu/trove/stack/TFloatStack;)V:90 - ReplaceComparisonOperator == -> !=
   * 5 Weak Mutation 12: gnu.trove.stack.array.TFloatArrayStack.<init>(Lgnu/trove/stack/TFloatStack;)V:94 - ReplaceConstant - Only support TFloatArrayStack -> 
   */

  @Test
  public void test1()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = null;
      try {
        tFloatArrayStack0 = new TFloatArrayStack((TFloatStack) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Only support TFloatArrayStack
         //
      }
  }

  //Test case number: 2
  /*
   * 11 covered goals:
   * 1 Weak Mutation 10: gnu.trove.stack.array.TFloatArrayStack.<init>(Lgnu/trove/stack/TFloatStack;)V:92 - ReplaceVariable array_stack -> this
   * 2 Weak Mutation 11: gnu.trove.stack.array.TFloatArrayStack.<init>(Lgnu/trove/stack/TFloatStack;)V:92 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 3 gnu.trove.stack.array.TFloatArrayStack.<init>(Lgnu/trove/stack/TFloatStack;)V: I8 Branch 1 IFEQ L90 - false
   * 4 Weak Mutation 9: gnu.trove.stack.array.TFloatArrayStack.<init>(Lgnu/trove/stack/TFloatStack;)V:90 - ReplaceComparisonOperator == -> !=
   * 5 Weak Mutation 0: gnu.trove.stack.array.TFloatArrayStack.<init>(I)V:67 - ReplaceVariable capacity -> DEFAULT_CAPACITY
   * 6 Weak Mutation 1: gnu.trove.stack.array.TFloatArrayStack.<init>(I)V:67 - InsertUnaryOp Negation of capacity
   * 7 Weak Mutation 2: gnu.trove.stack.array.TFloatArrayStack.<init>(I)V:67 - InsertUnaryOp IINC 1 capacity
   * 8 Weak Mutation 3: gnu.trove.stack.array.TFloatArrayStack.<init>(I)V:67 - InsertUnaryOp IINC -1 capacity
   * 9 Weak Mutation 10: gnu.trove.stack.array.TFloatArrayStack.<init>(Lgnu/trove/stack/TFloatStack;)V:92 - ReplaceVariable array_stack -> this
   * 10 Weak Mutation 11: gnu.trove.stack.array.TFloatArrayStack.<init>(Lgnu/trove/stack/TFloatStack;)V:92 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 11 gnu.trove.stack.array.TFloatArrayStack.<init>(I)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack(1066);
      TFloatArrayStack tFloatArrayStack1 = new TFloatArrayStack((TFloatStack) tFloatArrayStack0);
      assertTrue(tFloatArrayStack1.equals(tFloatArrayStack0));
  }

  //Test case number: 3
  /*
   * 6 covered goals:
   * 1 Weak Mutation 13: gnu.trove.stack.array.TFloatArrayStack.getNoEntryValue()F:107 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 2 Weak Mutation 14: gnu.trove.stack.array.TFloatArrayStack.getNoEntryValue()F:107 - DeleteStatement: getNoEntryValue()F
   * 3 gnu.trove.stack.array.TFloatArrayStack.<init>()V: root-Branch
   * 4 gnu.trove.stack.array.TFloatArrayStack.getNoEntryValue()F: root-Branch
   * 5 Weak Mutation 13: gnu.trove.stack.array.TFloatArrayStack.getNoEntryValue()F:107 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 6 Weak Mutation 14: gnu.trove.stack.array.TFloatArrayStack.getNoEntryValue()F:107 - DeleteStatement: getNoEntryValue()F
   */

//   @Test
//   public void test3()  throws Throwable  {
//       TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
//       float float0 = tFloatArrayStack0.getNoEntryValue();
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 4
  /*
   * 19 covered goals:
   * 1 Weak Mutation 19: gnu.trove.stack.array.TFloatArrayStack.pop()F:127 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 2 Weak Mutation 18: gnu.trove.stack.array.TFloatArrayStack.pop()F:127 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 3 Weak Mutation 21: gnu.trove.stack.array.TFloatArrayStack.pop()F:127 - ReplaceConstant - 1 -> 0
   * 4 Weak Mutation 20: gnu.trove.stack.array.TFloatArrayStack.pop()F:127 - DeleteStatement: size()I
   * 5 Weak Mutation 23: gnu.trove.stack.array.TFloatArrayStack.pop()F:127 - ReplaceArithmeticOperator - -> %
   * 6 Weak Mutation 22: gnu.trove.stack.array.TFloatArrayStack.pop()F:127 - ReplaceArithmeticOperator - -> +
   * 7 Weak Mutation 25: gnu.trove.stack.array.TFloatArrayStack.pop()F:127 - ReplaceArithmeticOperator - -> *
   * 8 Weak Mutation 24: gnu.trove.stack.array.TFloatArrayStack.pop()F:127 - ReplaceArithmeticOperator - -> /
   * 9 Weak Mutation 26: gnu.trove.stack.array.TFloatArrayStack.pop()F:127 - DeleteStatement: removeAt(I)F
   * 10 gnu.trove.stack.array.TFloatArrayStack.pop()F: root-Branch
   * 11 Weak Mutation 19: gnu.trove.stack.array.TFloatArrayStack.pop()F:127 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 12 Weak Mutation 18: gnu.trove.stack.array.TFloatArrayStack.pop()F:127 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 13 Weak Mutation 21: gnu.trove.stack.array.TFloatArrayStack.pop()F:127 - ReplaceConstant - 1 -> 0
   * 14 Weak Mutation 20: gnu.trove.stack.array.TFloatArrayStack.pop()F:127 - DeleteStatement: size()I
   * 15 Weak Mutation 23: gnu.trove.stack.array.TFloatArrayStack.pop()F:127 - ReplaceArithmeticOperator - -> %
   * 16 Weak Mutation 22: gnu.trove.stack.array.TFloatArrayStack.pop()F:127 - ReplaceArithmeticOperator - -> +
   * 17 Weak Mutation 25: gnu.trove.stack.array.TFloatArrayStack.pop()F:127 - ReplaceArithmeticOperator - -> *
   * 18 Weak Mutation 24: gnu.trove.stack.array.TFloatArrayStack.pop()F:127 - ReplaceArithmeticOperator - -> /
   * 19 Weak Mutation 26: gnu.trove.stack.array.TFloatArrayStack.pop()F:127 - DeleteStatement: removeAt(I)F
   */

  @Test
  public void test4()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack(1561);
      // Undeclared exception!
      try {
        tFloatArrayStack0.pop();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
      }
  }

  //Test case number: 5
  /*
   * 19 covered goals:
   * 1 Weak Mutation 27: gnu.trove.stack.array.TFloatArrayStack.peek()F:137 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 2 Weak Mutation 29: gnu.trove.stack.array.TFloatArrayStack.peek()F:137 - DeleteStatement: size()I
   * 3 Weak Mutation 28: gnu.trove.stack.array.TFloatArrayStack.peek()F:137 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 4 Weak Mutation 31: gnu.trove.stack.array.TFloatArrayStack.peek()F:137 - ReplaceArithmeticOperator - -> +
   * 5 Weak Mutation 30: gnu.trove.stack.array.TFloatArrayStack.peek()F:137 - ReplaceConstant - 1 -> 0
   * 6 Weak Mutation 34: gnu.trove.stack.array.TFloatArrayStack.peek()F:137 - ReplaceArithmeticOperator - -> *
   * 7 Weak Mutation 35: gnu.trove.stack.array.TFloatArrayStack.peek()F:137 - DeleteStatement: get(I)F
   * 8 Weak Mutation 32: gnu.trove.stack.array.TFloatArrayStack.peek()F:137 - ReplaceArithmeticOperator - -> %
   * 9 Weak Mutation 33: gnu.trove.stack.array.TFloatArrayStack.peek()F:137 - ReplaceArithmeticOperator - -> /
   * 10 gnu.trove.stack.array.TFloatArrayStack.peek()F: root-Branch
   * 11 Weak Mutation 27: gnu.trove.stack.array.TFloatArrayStack.peek()F:137 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 12 Weak Mutation 29: gnu.trove.stack.array.TFloatArrayStack.peek()F:137 - DeleteStatement: size()I
   * 13 Weak Mutation 28: gnu.trove.stack.array.TFloatArrayStack.peek()F:137 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 14 Weak Mutation 31: gnu.trove.stack.array.TFloatArrayStack.peek()F:137 - ReplaceArithmeticOperator - -> +
   * 15 Weak Mutation 30: gnu.trove.stack.array.TFloatArrayStack.peek()F:137 - ReplaceConstant - 1 -> 0
   * 16 Weak Mutation 34: gnu.trove.stack.array.TFloatArrayStack.peek()F:137 - ReplaceArithmeticOperator - -> *
   * 17 Weak Mutation 35: gnu.trove.stack.array.TFloatArrayStack.peek()F:137 - DeleteStatement: get(I)F
   * 18 Weak Mutation 32: gnu.trove.stack.array.TFloatArrayStack.peek()F:137 - ReplaceArithmeticOperator - -> %
   * 19 Weak Mutation 33: gnu.trove.stack.array.TFloatArrayStack.peek()F:137 - ReplaceArithmeticOperator - -> /
   */

  @Test
  public void test5()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      // Undeclared exception!
      try {
        tFloatArrayStack0.peek();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
      }
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 Weak Mutation 38: gnu.trove.stack.array.TFloatArrayStack.clear()V:153 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 2 Weak Mutation 39: gnu.trove.stack.array.TFloatArrayStack.clear()V:153 - DeleteStatement: clear()V
   * 3 gnu.trove.stack.array.TFloatArrayStack.clear()V: root-Branch
   * 4 Weak Mutation 38: gnu.trove.stack.array.TFloatArrayStack.clear()V:153 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 5 Weak Mutation 39: gnu.trove.stack.array.TFloatArrayStack.clear()V:153 - DeleteStatement: clear()V
   */

  @Test
  public void test6()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      tFloatArrayStack0.clear();
      assertEquals(0, tFloatArrayStack0.size());
  }

  //Test case number: 7
  /*
   * 90 covered goals:
   * 1 Weak Mutation 44: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:182 - DeleteStatement: size()I
   * 2 Weak Mutation 46: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:183 - InsertUnaryOp Negation of size
   * 3 Weak Mutation 47: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:183 - InsertUnaryOp IINC 1 size
   * 4 Weak Mutation 45: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:183 - ReplaceVariable size -> DEFAULT_CAPACITY
   * 5 Weak Mutation 51: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:183 - ReplaceArithmeticOperator - -> /
   * 6 Weak Mutation 50: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:183 - ReplaceArithmeticOperator - -> %
   * 7 Weak Mutation 48: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:183 - InsertUnaryOp IINC -1 size
   * 8 Weak Mutation 55: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:184 - InsertUnaryOp Negation of start
   * 9 Weak Mutation 53: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:184 - ReplaceVariable start -> DEFAULT_CAPACITY
   * 10 Weak Mutation 59: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:184 - ReplaceComparisonOperator >= -> >
   * 11 Weak Mutation 57: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:184 - InsertUnaryOp IINC -1 start
   * 12 Weak Mutation 56: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:184 - InsertUnaryOp IINC 1 start
   * 13 Weak Mutation 63: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:188 - ReplaceVariable size -> DEFAULT_CAPACITY
   * 14 Weak Mutation 64: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:188 - InsertUnaryOp Negation of size
   * 15 Weak Mutation 65: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:188 - InsertUnaryOp IINC 1 size
   * 16 Weak Mutation 66: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:188 - InsertUnaryOp IINC -1 size
   * 17 Weak Mutation 67: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:188 - DeleteStatement: min(II)I
   * 18 Weak Mutation 68: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 19 Weak Mutation 70: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - ReplaceVariable start -> DEFAULT_CAPACITY
   * 20 Weak Mutation 76: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - ReplaceVariable length -> DEFAULT_CAPACITY
   * 21 Weak Mutation 78: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - InsertUnaryOp Negation of length
   * 22 Weak Mutation 79: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - InsertUnaryOp IINC 1 length
   * 23 Weak Mutation 72: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - InsertUnaryOp Negation of start
   * 24 Weak Mutation 73: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - InsertUnaryOp IINC 1 start
   * 25 Weak Mutation 74: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - InsertUnaryOp IINC -1 start
   * 26 Weak Mutation 81: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - DeleteStatement: toArray([FII)[F
   * 27 Weak Mutation 80: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - InsertUnaryOp IINC -1 length
   * 28 Weak Mutation 84: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:190 - ReplaceVariable length -> DEFAULT_CAPACITY
   * 29 Weak Mutation 86: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:190 - InsertUnaryOp Negation of length
   * 30 Weak Mutation 82: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:190 - ReplaceConstant - 0 -> 1
   * 31 Weak Mutation 92: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - InsertUnaryOp IINC -1 size
   * 32 Weak Mutation 94: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - ReplaceComparisonOperator <= -> <
   * 33 Weak Mutation 89: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - ReplaceVariable size -> DEFAULT_CAPACITY
   * 34 Weak Mutation 91: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - InsertUnaryOp IINC 1 size
   * 35 Weak Mutation 90: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - InsertUnaryOp Negation of size
   * 36 gnu.trove.stack.array.TFloatArrayStack.toArray([F)V: I15 Branch 2 IFGE L184 - true
   * 37 gnu.trove.stack.array.TFloatArrayStack.toArray([F)V: I48 Branch 3 IF_ICMPLE L191 - true
   * 38 Weak Mutation 36: gnu.trove.stack.array.TFloatArrayStack.size()I:145 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 39 Weak Mutation 37: gnu.trove.stack.array.TFloatArrayStack.size()I:145 - DeleteStatement: size()I
   * 40 Weak Mutation 42: gnu.trove.stack.array.TFloatArrayStack.toArray()[F:165 - ReplaceConstant - 0 -> 1
   * 41 Weak Mutation 43: gnu.trove.stack.array.TFloatArrayStack.toArray()[F:165 - DeleteStatement: size()I
   * 42 Weak Mutation 40: gnu.trove.stack.array.TFloatArrayStack.toArray()[F:164 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 43 Weak Mutation 41: gnu.trove.stack.array.TFloatArrayStack.toArray()[F:164 - DeleteStatement: toArray()[F
   * 44 Weak Mutation 46: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:183 - InsertUnaryOp Negation of size
   * 45 Weak Mutation 47: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:183 - InsertUnaryOp IINC 1 size
   * 46 Weak Mutation 44: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:182 - DeleteStatement: size()I
   * 47 Weak Mutation 45: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:183 - ReplaceVariable size -> DEFAULT_CAPACITY
   * 48 Weak Mutation 51: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:183 - ReplaceArithmeticOperator - -> /
   * 49 Weak Mutation 50: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:183 - ReplaceArithmeticOperator - -> %
   * 50 Weak Mutation 48: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:183 - InsertUnaryOp IINC -1 size
   * 51 Weak Mutation 55: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:184 - InsertUnaryOp Negation of start
   * 52 Weak Mutation 53: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:184 - ReplaceVariable start -> DEFAULT_CAPACITY
   * 53 Weak Mutation 59: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:184 - ReplaceComparisonOperator >= -> >
   * 54 Weak Mutation 57: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:184 - InsertUnaryOp IINC -1 start
   * 55 Weak Mutation 56: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:184 - InsertUnaryOp IINC 1 start
   * 56 Weak Mutation 63: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:188 - ReplaceVariable size -> DEFAULT_CAPACITY
   * 57 Weak Mutation 68: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 58 Weak Mutation 70: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - ReplaceVariable start -> DEFAULT_CAPACITY
   * 59 Weak Mutation 64: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:188 - InsertUnaryOp Negation of size
   * 60 Weak Mutation 65: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:188 - InsertUnaryOp IINC 1 size
   * 61 Weak Mutation 66: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:188 - InsertUnaryOp IINC -1 size
   * 62 Weak Mutation 67: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:188 - DeleteStatement: min(II)I
   * 63 Weak Mutation 76: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - ReplaceVariable length -> DEFAULT_CAPACITY
   * 64 Weak Mutation 78: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - InsertUnaryOp Negation of length
   * 65 Weak Mutation 79: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - InsertUnaryOp IINC 1 length
   * 66 Weak Mutation 72: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - InsertUnaryOp Negation of start
   * 67 Weak Mutation 73: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - InsertUnaryOp IINC 1 start
   * 68 Weak Mutation 74: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - InsertUnaryOp IINC -1 start
   * 69 Weak Mutation 84: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:190 - ReplaceVariable length -> DEFAULT_CAPACITY
   * 70 Weak Mutation 86: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:190 - InsertUnaryOp Negation of length
   * 71 Weak Mutation 81: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - DeleteStatement: toArray([FII)[F
   * 72 Weak Mutation 80: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - InsertUnaryOp IINC -1 length
   * 73 Weak Mutation 82: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:190 - ReplaceConstant - 0 -> 1
   * 74 Weak Mutation 92: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - InsertUnaryOp IINC -1 size
   * 75 Weak Mutation 94: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - ReplaceComparisonOperator <= -> <
   * 76 Weak Mutation 89: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - ReplaceVariable size -> DEFAULT_CAPACITY
   * 77 Weak Mutation 91: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - InsertUnaryOp IINC 1 size
   * 78 Weak Mutation 90: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - InsertUnaryOp Negation of size
   * 79 Weak Mutation 110: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - ReplaceVariable to -> DEFAULT_CAPACITY
   * 80 Weak Mutation 111: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - InsertUnaryOp Negation of to
   * 81 Weak Mutation 108: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - InsertUnaryOp IINC -1 from
   * 82 Weak Mutation 106: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - InsertUnaryOp Negation of from
   * 83 Weak Mutation 107: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - InsertUnaryOp IINC 1 from
   * 84 Weak Mutation 105: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - ReplaceVariable from -> DEFAULT_CAPACITY
   * 85 Weak Mutation 116: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - ReplaceComparisonOperator != -> -1
   * 86 Weak Mutation 113: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - InsertUnaryOp IINC -1 to
   * 87 Weak Mutation 112: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - InsertUnaryOp IINC 1 to
   * 88 gnu.trove.stack.array.TFloatArrayStack.size()I: root-Branch
   * 89 gnu.trove.stack.array.TFloatArrayStack.toArray()[F: root-Branch
   * 90 gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V: I4 Branch 4 IF_ICMPNE L205 - false
   */

  @Test
  public void test7()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      float[] floatArray0 = tFloatArrayStack0.toArray();
      tFloatArrayStack0.toArray(floatArray0);
      assertEquals("{}", tFloatArrayStack0.toString());
  }

  //Test case number: 8
  /*
   * 21 covered goals:
   * 1 Weak Mutation 58: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:184 - ReplaceComparisonOperator >= -> ==
   * 2 Weak Mutation 69: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - ReplaceVariable start -> length
   * 3 Weak Mutation 77: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - ReplaceVariable length -> size
   * 4 Weak Mutation 75: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - ReplaceVariable length -> start
   * 5 Weak Mutation 85: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:190 - ReplaceVariable length -> size
   * 6 Weak Mutation 83: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:190 - ReplaceVariable length -> start
   * 7 Weak Mutation 93: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - ReplaceComparisonOperator <= -> ==
   * 8 Weak Mutation 88: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - ReplaceVariable size -> length
   * 9 Weak Mutation 116: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - ReplaceComparisonOperator != -> -1
   * 10 Weak Mutation 15: gnu.trove.stack.array.TFloatArrayStack.push(F)V:117 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 11 Weak Mutation 17: gnu.trove.stack.array.TFloatArrayStack.push(F)V:117 - DeleteStatement: add(F)Z
   * 12 Weak Mutation 16: gnu.trove.stack.array.TFloatArrayStack.push(F)V:117 - InsertUnaryOp Negation of val
   * 13 Weak Mutation 58: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:184 - ReplaceComparisonOperator >= -> ==
   * 14 Weak Mutation 69: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - ReplaceVariable start -> length
   * 15 Weak Mutation 77: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - ReplaceVariable length -> size
   * 16 Weak Mutation 75: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - ReplaceVariable length -> start
   * 17 Weak Mutation 85: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:190 - ReplaceVariable length -> size
   * 18 Weak Mutation 83: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:190 - ReplaceVariable length -> start
   * 19 Weak Mutation 93: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - ReplaceComparisonOperator <= -> ==
   * 20 Weak Mutation 88: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - ReplaceVariable size -> length
   * 21 gnu.trove.stack.array.TFloatArrayStack.push(F)V: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack(1561);
      float[] floatArray0 = tFloatArrayStack0.toArray();
      assertNotNull(floatArray0);
      
      tFloatArrayStack0.push(0.0F);
      tFloatArrayStack0.toArray(floatArray0);
      assertEquals(1, tFloatArrayStack0.size());
      assertEquals("{0.0}", tFloatArrayStack0.toString());
  }

  //Test case number: 9
  /*
   * 105 covered goals:
   * 1 Weak Mutation 62: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:188 - ReplaceVariable size -> start
   * 2 Weak Mutation 71: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - ReplaceVariable start -> size
   * 3 Weak Mutation 87: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - ReplaceVariable size -> start
   * 4 Weak Mutation 96: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:192 - ReplaceVariable size -> start
   * 5 Weak Mutation 109: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - ReplaceVariable to -> from
   * 6 Weak Mutation 104: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - ReplaceVariable from -> to
   * 7 Weak Mutation 114: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - ReplaceComparisonOperator != -> >
   * 8 Weak Mutation 119: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - InsertUnaryOp Negation of from
   * 9 Weak Mutation 118: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - ReplaceVariable from -> DEFAULT_CAPACITY
   * 10 Weak Mutation 117: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - ReplaceVariable from -> to
   * 11 Weak Mutation 127: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - ReplaceComparisonOperator <= -> ==
   * 12 Weak Mutation 126: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - InsertUnaryOp IINC -1 to
   * 13 Weak Mutation 125: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - InsertUnaryOp IINC 1 to
   * 14 Weak Mutation 124: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - InsertUnaryOp Negation of to
   * 15 Weak Mutation 123: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - ReplaceVariable to -> DEFAULT_CAPACITY
   * 16 Weak Mutation 122: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - ReplaceVariable to -> from
   * 17 Weak Mutation 121: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - InsertUnaryOp IINC -1 from
   * 18 Weak Mutation 120: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - InsertUnaryOp IINC 1 from
   * 19 Weak Mutation 137: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable to -> DEFAULT_CAPACITY
   * 20 Weak Mutation 136: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable to -> from
   * 21 Weak Mutation 139: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp Negation of to
   * 22 Weak Mutation 138: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable to -> i
   * 23 Weak Mutation 141: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC -1 to
   * 24 Weak Mutation 140: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC 1 to
   * 25 Weak Mutation 143: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceArithmeticOperator - -> +
   * 26 Weak Mutation 142: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceConstant - 1 -> 0
   * 27 Weak Mutation 131: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable from -> to
   * 28 Weak Mutation 133: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp Negation of from
   * 29 Weak Mutation 132: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable from -> DEFAULT_CAPACITY
   * 30 Weak Mutation 135: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC -1 from
   * 31 Weak Mutation 134: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC 1 from
   * 32 Weak Mutation 152: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC 1 i
   * 33 Weak Mutation 153: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC -1 i
   * 34 Weak Mutation 154: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable j -> to
   * 35 Weak Mutation 156: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable j -> DEFAULT_CAPACITY
   * 36 Weak Mutation 158: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp Negation of j
   * 37 Weak Mutation 159: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC 1 j
   * 38 Weak Mutation 145: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceArithmeticOperator - -> /
   * 39 Weak Mutation 146: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceArithmeticOperator - -> *
   * 40 Weak Mutation 147: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable i -> to
   * 41 Weak Mutation 149: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable i -> DEFAULT_CAPACITY
   * 42 Weak Mutation 151: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp Negation of i
   * 43 Weak Mutation 162: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceComparisonOperator >= -> >
   * 44 Weak Mutation 160: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC -1 j
   * 45 gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V: I4 Branch 4 IF_ICMPNE L205 - true
   * 46 gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V: I12 Branch 5 IF_ICMPLE L208 - true
   * 47 gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V: I32 Branch 6 IF_ICMPGE L211 - true
   * 48 Weak Mutation 49: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:183 - ReplaceArithmeticOperator - -> +
   * 49 Weak Mutation 54: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:184 - ReplaceVariable start -> size
   * 50 Weak Mutation 52: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:183 - ReplaceArithmeticOperator - -> *
   * 51 Weak Mutation 62: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:188 - ReplaceVariable size -> start
   * 52 Weak Mutation 61: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:185 - ReplaceConstant - 0 -> 1
   * 53 Weak Mutation 60: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:184 - ReplaceComparisonOperator >= -> -1
   * 54 Weak Mutation 71: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - ReplaceVariable start -> size
   * 55 Weak Mutation 87: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - ReplaceVariable size -> start
   * 56 Weak Mutation 95: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - ReplaceComparisonOperator <= -> -1
   * 57 Weak Mutation 102: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:192 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 58 Weak Mutation 103: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:192 - DeleteStatement: getNoEntryValue()F
   * 59 Weak Mutation 100: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:192 - InsertUnaryOp IINC 1 size
   * 60 Weak Mutation 101: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:192 - InsertUnaryOp IINC -1 size
   * 61 Weak Mutation 98: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:192 - ReplaceVariable size -> DEFAULT_CAPACITY
   * 62 Weak Mutation 99: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:192 - InsertUnaryOp Negation of size
   * 63 Weak Mutation 96: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:192 - ReplaceVariable size -> start
   * 64 Weak Mutation 109: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - ReplaceVariable to -> from
   * 65 Weak Mutation 104: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - ReplaceVariable from -> to
   * 66 Weak Mutation 119: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - InsertUnaryOp Negation of from
   * 67 Weak Mutation 118: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - ReplaceVariable from -> DEFAULT_CAPACITY
   * 68 Weak Mutation 117: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - ReplaceVariable from -> to
   * 69 Weak Mutation 114: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - ReplaceComparisonOperator != -> >
   * 70 Weak Mutation 127: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - ReplaceComparisonOperator <= -> ==
   * 71 Weak Mutation 126: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - InsertUnaryOp IINC -1 to
   * 72 Weak Mutation 125: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - InsertUnaryOp IINC 1 to
   * 73 Weak Mutation 124: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - InsertUnaryOp Negation of to
   * 74 Weak Mutation 123: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - ReplaceVariable to -> DEFAULT_CAPACITY
   * 75 Weak Mutation 122: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - ReplaceVariable to -> from
   * 76 Weak Mutation 121: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - InsertUnaryOp IINC -1 from
   * 77 Weak Mutation 120: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - InsertUnaryOp IINC 1 from
   * 78 Weak Mutation 137: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable to -> DEFAULT_CAPACITY
   * 79 Weak Mutation 136: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable to -> from
   * 80 Weak Mutation 139: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp Negation of to
   * 81 Weak Mutation 138: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable to -> i
   * 82 Weak Mutation 141: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC -1 to
   * 83 Weak Mutation 140: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC 1 to
   * 84 Weak Mutation 143: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceArithmeticOperator - -> +
   * 85 Weak Mutation 142: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceConstant - 1 -> 0
   * 86 Weak Mutation 131: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable from -> to
   * 87 Weak Mutation 133: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp Negation of from
   * 88 Weak Mutation 132: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable from -> DEFAULT_CAPACITY
   * 89 Weak Mutation 135: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC -1 from
   * 90 Weak Mutation 134: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC 1 from
   * 91 Weak Mutation 152: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC 1 i
   * 92 Weak Mutation 153: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC -1 i
   * 93 Weak Mutation 154: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable j -> to
   * 94 Weak Mutation 156: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable j -> DEFAULT_CAPACITY
   * 95 Weak Mutation 158: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp Negation of j
   * 96 Weak Mutation 159: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC 1 j
   * 97 Weak Mutation 145: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceArithmeticOperator - -> /
   * 98 Weak Mutation 146: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceArithmeticOperator - -> *
   * 99 Weak Mutation 147: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable i -> to
   * 100 Weak Mutation 149: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable i -> DEFAULT_CAPACITY
   * 101 Weak Mutation 151: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp Negation of i
   * 102 Weak Mutation 162: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceComparisonOperator >= -> >
   * 103 Weak Mutation 160: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC -1 j
   * 104 gnu.trove.stack.array.TFloatArrayStack.toArray([F)V: I15 Branch 2 IFGE L184 - false
   * 105 gnu.trove.stack.array.TFloatArrayStack.toArray([F)V: I48 Branch 3 IF_ICMPLE L191 - false
   */

//   @Test
//   public void test9()  throws Throwable  {
//       TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack(1561);
//       tFloatArrayStack0.push((float) 1561);
//       float[] floatArray0 = new float[8];
//       tFloatArrayStack0.toArray(floatArray0);
//       assertEquals(1, tFloatArrayStack0.size());
//       assertEquals(1561.0F, tFloatArrayStack0.peek(), 0.01F);
//   }

  //Test case number: 10
  /*
   * 100 covered goals:
   * 1 Weak Mutation 155: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable j -> from
   * 2 Weak Mutation 157: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable j -> i
   * 3 Weak Mutation 144: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceArithmeticOperator - -> %
   * 4 Weak Mutation 148: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable i -> from
   * 5 Weak Mutation 150: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable i -> j
   * 6 Weak Mutation 163: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceComparisonOperator >= -> -1
   * 7 Weak Mutation 161: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceComparisonOperator >= -> ==
   * 8 Weak Mutation 178: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable i -> to
   * 9 Weak Mutation 179: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable i -> from
   * 10 Weak Mutation 182: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable j -> from
   * 11 Weak Mutation 183: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable j -> i
   * 12 Weak Mutation 180: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable i -> j
   * 13 Weak Mutation 181: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable j -> to
   * 14 Weak Mutation 171: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable j -> to
   * 15 Weak Mutation 170: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - InsertUnaryOp IINC -1 i
   * 16 Weak Mutation 169: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - InsertUnaryOp IINC 1 i
   * 17 Weak Mutation 168: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - InsertUnaryOp Negation of i
   * 18 Weak Mutation 175: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - InsertUnaryOp Negation of j
   * 19 Weak Mutation 174: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable j -> i
   * 20 Weak Mutation 173: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable j -> DEFAULT_CAPACITY
   * 21 Weak Mutation 172: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable j -> from
   * 22 Weak Mutation 167: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable i -> j
   * 23 Weak Mutation 166: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable i -> DEFAULT_CAPACITY
   * 24 Weak Mutation 164: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable i -> to
   * 25 Weak Mutation 176: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - InsertUnaryOp IINC 1 j
   * 26 Weak Mutation 177: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - InsertUnaryOp IINC -1 j
   * 27 Weak Mutation 186: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:225 - InsertUnaryOp Negation of i
   * 28 Weak Mutation 187: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:225 - InsertUnaryOp IINC 1 i
   * 29 Weak Mutation 184: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:225 - ReplaceVariable i -> DEFAULT_CAPACITY
   * 30 Weak Mutation 185: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:225 - ReplaceVariable i -> j
   * 31 Weak Mutation 188: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:225 - InsertUnaryOp IINC -1 i
   * 32 Weak Mutation 190: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - ReplaceVariable i -> j
   * 33 Weak Mutation 191: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - InsertUnaryOp Negation of i
   * 34 Weak Mutation 189: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - ReplaceVariable i -> DEFAULT_CAPACITY
   * 35 Weak Mutation 197: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - InsertUnaryOp IINC 1 j
   * 36 Weak Mutation 196: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - InsertUnaryOp Negation of j
   * 37 Weak Mutation 198: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - InsertUnaryOp IINC -1 j
   * 38 Weak Mutation 193: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - InsertUnaryOp IINC -1 i
   * 39 Weak Mutation 192: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - InsertUnaryOp IINC 1 i
   * 40 Weak Mutation 195: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - ReplaceVariable j -> i
   * 41 Weak Mutation 194: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - ReplaceVariable j -> DEFAULT_CAPACITY
   * 42 Weak Mutation 204: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:227 - InsertUnaryOp Negation of tmp
   * 43 Weak Mutation 201: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:227 - InsertUnaryOp Negation of j
   * 44 Weak Mutation 200: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:227 - ReplaceVariable j -> i
   * 45 Weak Mutation 203: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:227 - InsertUnaryOp IINC -1 j
   * 46 Weak Mutation 202: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:227 - InsertUnaryOp IINC 1 j
   * 47 Weak Mutation 199: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:227 - ReplaceVariable j -> DEFAULT_CAPACITY
   * 48 gnu.trove.stack.array.TFloatArrayStack.swap([FII)V: root-Branch
   * 49 gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V: I32 Branch 6 IF_ICMPGE L211 - false
   * 50 Weak Mutation 42: gnu.trove.stack.array.TFloatArrayStack.toArray()[F:165 - ReplaceConstant - 0 -> 1
   * 51 Weak Mutation 43: gnu.trove.stack.array.TFloatArrayStack.toArray()[F:165 - DeleteStatement: size()I
   * 52 Weak Mutation 40: gnu.trove.stack.array.TFloatArrayStack.toArray()[F:164 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 53 Weak Mutation 41: gnu.trove.stack.array.TFloatArrayStack.toArray()[F:164 - DeleteStatement: toArray()[F
   * 54 Weak Mutation 155: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable j -> from
   * 55 Weak Mutation 157: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable j -> i
   * 56 Weak Mutation 144: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceArithmeticOperator - -> %
   * 57 Weak Mutation 148: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable i -> from
   * 58 Weak Mutation 150: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable i -> j
   * 59 Weak Mutation 171: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable j -> to
   * 60 Weak Mutation 170: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - InsertUnaryOp IINC -1 i
   * 61 Weak Mutation 169: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - InsertUnaryOp IINC 1 i
   * 62 Weak Mutation 168: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - InsertUnaryOp Negation of i
   * 63 Weak Mutation 175: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - InsertUnaryOp Negation of j
   * 64 Weak Mutation 174: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable j -> i
   * 65 Weak Mutation 173: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable j -> DEFAULT_CAPACITY
   * 66 Weak Mutation 172: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable j -> from
   * 67 Weak Mutation 163: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceComparisonOperator >= -> -1
   * 68 Weak Mutation 161: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceComparisonOperator >= -> ==
   * 69 Weak Mutation 167: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable i -> j
   * 70 Weak Mutation 166: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable i -> DEFAULT_CAPACITY
   * 71 Weak Mutation 164: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable i -> to
   * 72 Weak Mutation 186: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:225 - InsertUnaryOp Negation of i
   * 73 Weak Mutation 187: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:225 - InsertUnaryOp IINC 1 i
   * 74 Weak Mutation 184: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:225 - ReplaceVariable i -> DEFAULT_CAPACITY
   * 75 Weak Mutation 185: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:225 - ReplaceVariable i -> j
   * 76 Weak Mutation 190: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - ReplaceVariable i -> j
   * 77 Weak Mutation 191: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - InsertUnaryOp Negation of i
   * 78 Weak Mutation 188: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:225 - InsertUnaryOp IINC -1 i
   * 79 Weak Mutation 189: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - ReplaceVariable i -> DEFAULT_CAPACITY
   * 80 Weak Mutation 178: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable i -> to
   * 81 Weak Mutation 179: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable i -> from
   * 82 Weak Mutation 176: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - InsertUnaryOp IINC 1 j
   * 83 Weak Mutation 177: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - InsertUnaryOp IINC -1 j
   * 84 Weak Mutation 182: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable j -> from
   * 85 Weak Mutation 183: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable j -> i
   * 86 Weak Mutation 180: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable i -> j
   * 87 Weak Mutation 181: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable j -> to
   * 88 Weak Mutation 204: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:227 - InsertUnaryOp Negation of tmp
   * 89 Weak Mutation 201: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:227 - InsertUnaryOp Negation of j
   * 90 Weak Mutation 200: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:227 - ReplaceVariable j -> i
   * 91 Weak Mutation 203: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:227 - InsertUnaryOp IINC -1 j
   * 92 Weak Mutation 202: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:227 - InsertUnaryOp IINC 1 j
   * 93 Weak Mutation 197: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - InsertUnaryOp IINC 1 j
   * 94 Weak Mutation 196: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - InsertUnaryOp Negation of j
   * 95 Weak Mutation 199: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:227 - ReplaceVariable j -> DEFAULT_CAPACITY
   * 96 Weak Mutation 198: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - InsertUnaryOp IINC -1 j
   * 97 Weak Mutation 193: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - InsertUnaryOp IINC -1 i
   * 98 Weak Mutation 192: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - InsertUnaryOp IINC 1 i
   * 99 Weak Mutation 195: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - ReplaceVariable j -> i
   * 100 Weak Mutation 194: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - ReplaceVariable j -> DEFAULT_CAPACITY
   */

  @Test
  public void test10()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack(1561);
      tFloatArrayStack0.push((float) 1561);
      tFloatArrayStack0.push((float) 1561);
      float[] floatArray0 = tFloatArrayStack0.toArray();
      assertNotNull(floatArray0);
      assertEquals("{1561.0, 1561.0}", tFloatArrayStack0.toString());
      assertEquals(2, tFloatArrayStack0.size());
  }

  //Test case number: 11
  /*
   * 148 covered goals:
   * 1 Weak Mutation 165: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable i -> from
   * 2 Weak Mutation 46: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:183 - InsertUnaryOp Negation of size
   * 3 Weak Mutation 47: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:183 - InsertUnaryOp IINC 1 size
   * 4 Weak Mutation 44: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:182 - DeleteStatement: size()I
   * 5 Weak Mutation 45: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:183 - ReplaceVariable size -> DEFAULT_CAPACITY
   * 6 Weak Mutation 51: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:183 - ReplaceArithmeticOperator - -> /
   * 7 Weak Mutation 50: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:183 - ReplaceArithmeticOperator - -> %
   * 8 Weak Mutation 49: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:183 - ReplaceArithmeticOperator - -> +
   * 9 Weak Mutation 48: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:183 - InsertUnaryOp IINC -1 size
   * 10 Weak Mutation 55: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:184 - InsertUnaryOp Negation of start
   * 11 Weak Mutation 54: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:184 - ReplaceVariable start -> size
   * 12 Weak Mutation 53: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:184 - ReplaceVariable start -> DEFAULT_CAPACITY
   * 13 Weak Mutation 52: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:183 - ReplaceArithmeticOperator - -> *
   * 14 Weak Mutation 57: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:184 - InsertUnaryOp IINC -1 start
   * 15 Weak Mutation 56: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:184 - InsertUnaryOp IINC 1 start
   * 16 Weak Mutation 63: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:188 - ReplaceVariable size -> DEFAULT_CAPACITY
   * 17 Weak Mutation 62: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:188 - ReplaceVariable size -> start
   * 18 Weak Mutation 61: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:185 - ReplaceConstant - 0 -> 1
   * 19 Weak Mutation 60: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:184 - ReplaceComparisonOperator >= -> -1
   * 20 Weak Mutation 68: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 21 Weak Mutation 69: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - ReplaceVariable start -> length
   * 22 Weak Mutation 70: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - ReplaceVariable start -> DEFAULT_CAPACITY
   * 23 Weak Mutation 71: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - ReplaceVariable start -> size
   * 24 Weak Mutation 64: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:188 - InsertUnaryOp Negation of size
   * 25 Weak Mutation 65: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:188 - InsertUnaryOp IINC 1 size
   * 26 Weak Mutation 66: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:188 - InsertUnaryOp IINC -1 size
   * 27 Weak Mutation 67: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:188 - DeleteStatement: min(II)I
   * 28 Weak Mutation 76: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - ReplaceVariable length -> DEFAULT_CAPACITY
   * 29 Weak Mutation 78: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - InsertUnaryOp Negation of length
   * 30 Weak Mutation 79: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - InsertUnaryOp IINC 1 length
   * 31 Weak Mutation 72: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - InsertUnaryOp Negation of start
   * 32 Weak Mutation 73: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - InsertUnaryOp IINC 1 start
   * 33 Weak Mutation 74: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - InsertUnaryOp IINC -1 start
   * 34 Weak Mutation 75: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - ReplaceVariable length -> start
   * 35 Weak Mutation 84: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:190 - ReplaceVariable length -> DEFAULT_CAPACITY
   * 36 Weak Mutation 87: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - ReplaceVariable size -> start
   * 37 Weak Mutation 86: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:190 - InsertUnaryOp Negation of length
   * 38 Weak Mutation 81: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - DeleteStatement: toArray([FII)[F
   * 39 Weak Mutation 80: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:189 - InsertUnaryOp IINC -1 length
   * 40 Weak Mutation 83: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:190 - ReplaceVariable length -> start
   * 41 Weak Mutation 82: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:190 - ReplaceConstant - 0 -> 1
   * 42 Weak Mutation 92: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - InsertUnaryOp IINC -1 size
   * 43 Weak Mutation 95: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - ReplaceComparisonOperator <= -> -1
   * 44 Weak Mutation 89: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - ReplaceVariable size -> DEFAULT_CAPACITY
   * 45 Weak Mutation 91: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - InsertUnaryOp IINC 1 size
   * 46 Weak Mutation 90: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:191 - InsertUnaryOp Negation of size
   * 47 Weak Mutation 102: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:192 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 48 Weak Mutation 103: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:192 - DeleteStatement: getNoEntryValue()F
   * 49 Weak Mutation 100: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:192 - InsertUnaryOp IINC 1 size
   * 50 Weak Mutation 101: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:192 - InsertUnaryOp IINC -1 size
   * 51 Weak Mutation 98: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:192 - ReplaceVariable size -> DEFAULT_CAPACITY
   * 52 Weak Mutation 99: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:192 - InsertUnaryOp Negation of size
   * 53 Weak Mutation 96: gnu.trove.stack.array.TFloatArrayStack.toArray([F)V:192 - ReplaceVariable size -> start
   * 54 Weak Mutation 110: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - ReplaceVariable to -> DEFAULT_CAPACITY
   * 55 Weak Mutation 111: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - InsertUnaryOp Negation of to
   * 56 Weak Mutation 108: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - InsertUnaryOp IINC -1 from
   * 57 Weak Mutation 109: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - ReplaceVariable to -> from
   * 58 Weak Mutation 106: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - InsertUnaryOp Negation of from
   * 59 Weak Mutation 107: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - InsertUnaryOp IINC 1 from
   * 60 Weak Mutation 104: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - ReplaceVariable from -> to
   * 61 Weak Mutation 105: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - ReplaceVariable from -> DEFAULT_CAPACITY
   * 62 Weak Mutation 119: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - InsertUnaryOp Negation of from
   * 63 Weak Mutation 118: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - ReplaceVariable from -> DEFAULT_CAPACITY
   * 64 Weak Mutation 117: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - ReplaceVariable from -> to
   * 65 Weak Mutation 114: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - ReplaceComparisonOperator != -> >
   * 66 Weak Mutation 113: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - InsertUnaryOp IINC -1 to
   * 67 Weak Mutation 112: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:205 - InsertUnaryOp IINC 1 to
   * 68 Weak Mutation 127: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - ReplaceComparisonOperator <= -> ==
   * 69 Weak Mutation 126: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - InsertUnaryOp IINC -1 to
   * 70 Weak Mutation 125: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - InsertUnaryOp IINC 1 to
   * 71 Weak Mutation 124: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - InsertUnaryOp Negation of to
   * 72 Weak Mutation 123: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - ReplaceVariable to -> DEFAULT_CAPACITY
   * 73 Weak Mutation 122: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - ReplaceVariable to -> from
   * 74 Weak Mutation 121: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - InsertUnaryOp IINC -1 from
   * 75 Weak Mutation 120: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:208 - InsertUnaryOp IINC 1 from
   * 76 Weak Mutation 137: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable to -> DEFAULT_CAPACITY
   * 77 Weak Mutation 136: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable to -> from
   * 78 Weak Mutation 139: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp Negation of to
   * 79 Weak Mutation 138: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable to -> i
   * 80 Weak Mutation 141: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC -1 to
   * 81 Weak Mutation 140: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC 1 to
   * 82 Weak Mutation 143: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceArithmeticOperator - -> +
   * 83 Weak Mutation 142: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceConstant - 1 -> 0
   * 84 Weak Mutation 131: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable from -> to
   * 85 Weak Mutation 133: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp Negation of from
   * 86 Weak Mutation 132: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable from -> DEFAULT_CAPACITY
   * 87 Weak Mutation 135: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC -1 from
   * 88 Weak Mutation 134: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC 1 from
   * 89 Weak Mutation 152: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC 1 i
   * 90 Weak Mutation 153: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC -1 i
   * 91 Weak Mutation 154: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable j -> to
   * 92 Weak Mutation 155: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable j -> from
   * 93 Weak Mutation 156: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable j -> DEFAULT_CAPACITY
   * 94 Weak Mutation 157: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable j -> i
   * 95 Weak Mutation 158: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp Negation of j
   * 96 Weak Mutation 159: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC 1 j
   * 97 Weak Mutation 144: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceArithmeticOperator - -> %
   * 98 Weak Mutation 145: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceArithmeticOperator - -> /
   * 99 Weak Mutation 146: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceArithmeticOperator - -> *
   * 100 Weak Mutation 147: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable i -> to
   * 101 Weak Mutation 148: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable i -> from
   * 102 Weak Mutation 149: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable i -> DEFAULT_CAPACITY
   * 103 Weak Mutation 150: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable i -> j
   * 104 Weak Mutation 151: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp Negation of i
   * 105 Weak Mutation 171: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable j -> to
   * 106 Weak Mutation 170: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - InsertUnaryOp IINC -1 i
   * 107 Weak Mutation 169: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - InsertUnaryOp IINC 1 i
   * 108 Weak Mutation 168: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - InsertUnaryOp Negation of i
   * 109 Weak Mutation 175: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - InsertUnaryOp Negation of j
   * 110 Weak Mutation 174: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable j -> i
   * 111 Weak Mutation 173: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable j -> DEFAULT_CAPACITY
   * 112 Weak Mutation 172: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable j -> from
   * 113 Weak Mutation 163: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceComparisonOperator >= -> -1
   * 114 Weak Mutation 161: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceComparisonOperator >= -> ==
   * 115 Weak Mutation 160: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - InsertUnaryOp IINC -1 j
   * 116 Weak Mutation 167: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable i -> j
   * 117 Weak Mutation 166: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable i -> DEFAULT_CAPACITY
   * 118 Weak Mutation 164: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable i -> to
   * 119 Weak Mutation 186: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:225 - InsertUnaryOp Negation of i
   * 120 Weak Mutation 187: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:225 - InsertUnaryOp IINC 1 i
   * 121 Weak Mutation 184: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:225 - ReplaceVariable i -> DEFAULT_CAPACITY
   * 122 Weak Mutation 185: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:225 - ReplaceVariable i -> j
   * 123 Weak Mutation 190: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - ReplaceVariable i -> j
   * 124 Weak Mutation 191: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - InsertUnaryOp Negation of i
   * 125 Weak Mutation 188: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:225 - InsertUnaryOp IINC -1 i
   * 126 Weak Mutation 189: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - ReplaceVariable i -> DEFAULT_CAPACITY
   * 127 Weak Mutation 178: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable i -> to
   * 128 Weak Mutation 179: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable i -> from
   * 129 Weak Mutation 176: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - InsertUnaryOp IINC 1 j
   * 130 Weak Mutation 177: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - InsertUnaryOp IINC -1 j
   * 131 Weak Mutation 182: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable j -> from
   * 132 Weak Mutation 183: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable j -> i
   * 133 Weak Mutation 180: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable i -> j
   * 134 Weak Mutation 181: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:211 - ReplaceVariable j -> to
   * 135 Weak Mutation 204: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:227 - InsertUnaryOp Negation of tmp
   * 136 Weak Mutation 201: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:227 - InsertUnaryOp Negation of j
   * 137 Weak Mutation 200: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:227 - ReplaceVariable j -> i
   * 138 Weak Mutation 203: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:227 - InsertUnaryOp IINC -1 j
   * 139 Weak Mutation 202: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:227 - InsertUnaryOp IINC 1 j
   * 140 Weak Mutation 197: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - InsertUnaryOp IINC 1 j
   * 141 Weak Mutation 196: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - InsertUnaryOp Negation of j
   * 142 Weak Mutation 199: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:227 - ReplaceVariable j -> DEFAULT_CAPACITY
   * 143 Weak Mutation 198: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - InsertUnaryOp IINC -1 j
   * 144 Weak Mutation 193: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - InsertUnaryOp IINC -1 i
   * 145 Weak Mutation 192: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - InsertUnaryOp IINC 1 i
   * 146 Weak Mutation 195: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - ReplaceVariable j -> i
   * 147 Weak Mutation 194: gnu.trove.stack.array.TFloatArrayStack.swap([FII)V:226 - ReplaceVariable j -> DEFAULT_CAPACITY
   * 148 Weak Mutation 165: gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V:212 - ReplaceVariable i -> from
   */

//   @Test
//   public void test11()  throws Throwable  {
//       TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack(1561);
//       tFloatArrayStack0.push((float) 1561);
//       tFloatArrayStack0.push((float) 1561);
//       float[] floatArray0 = new float[8];
//       tFloatArrayStack0.push(0.0F);
//       tFloatArrayStack0.push(0.0F);
//       tFloatArrayStack0.toArray(floatArray0);
//       assertEquals(4, tFloatArrayStack0.size());
//       assertEquals(0.0F, tFloatArrayStack0.peek(), 0.01F);
//   }

  //Test case number: 12
  /*
   * 38 covered goals:
   * 1 Weak Mutation 205: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:237 - ReplaceConstant - { -> 
   * 2 Weak Mutation 207: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - DeleteStatement: size()I
   * 3 Weak Mutation 206: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 4 Weak Mutation 216: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - InsertUnaryOp IINC -1 i
   * 5 Weak Mutation 217: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceComparisonOperator <= -> ==
   * 6 Weak Mutation 212: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceArithmeticOperator - -> *
   * 7 Weak Mutation 213: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceVariable i -> DEFAULT_CAPACITY
   * 8 Weak Mutation 214: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - InsertUnaryOp Negation of i
   * 9 Weak Mutation 215: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - InsertUnaryOp IINC 1 i
   * 10 Weak Mutation 208: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceConstant - 1 -> 0
   * 11 Weak Mutation 209: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceArithmeticOperator - -> +
   * 12 Weak Mutation 210: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceArithmeticOperator - -> %
   * 13 Weak Mutation 211: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceArithmeticOperator - -> /
   * 14 Weak Mutation 231: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:242 - ReplaceComparisonOperator <= -> <
   * 15 Weak Mutation 229: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:242 - DeleteStatement: size()I
   * 16 Weak Mutation 238: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:245 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 17 Weak Mutation 237: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:245 - ReplaceConstant - } -> 
   * 18 Weak Mutation 239: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:246 - DeleteStatement: toString()Ljava/lang/String;
   * 19 gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;: I17 Branch 7 IFLE L238 - true
   * 20 gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;: I41 Branch 8 IFLE L242 - true
   * 21 Weak Mutation 205: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:237 - ReplaceConstant - { -> 
   * 22 Weak Mutation 207: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - DeleteStatement: size()I
   * 23 Weak Mutation 206: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 24 Weak Mutation 216: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - InsertUnaryOp IINC -1 i
   * 25 Weak Mutation 217: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceComparisonOperator <= -> ==
   * 26 Weak Mutation 212: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceArithmeticOperator - -> *
   * 27 Weak Mutation 213: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceVariable i -> DEFAULT_CAPACITY
   * 28 Weak Mutation 214: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - InsertUnaryOp Negation of i
   * 29 Weak Mutation 215: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - InsertUnaryOp IINC 1 i
   * 30 Weak Mutation 208: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceConstant - 1 -> 0
   * 31 Weak Mutation 209: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceArithmeticOperator - -> +
   * 32 Weak Mutation 210: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceArithmeticOperator - -> %
   * 33 Weak Mutation 211: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceArithmeticOperator - -> /
   * 34 Weak Mutation 239: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:246 - DeleteStatement: toString()Ljava/lang/String;
   * 35 Weak Mutation 238: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:245 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 36 Weak Mutation 237: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:245 - ReplaceConstant - } -> 
   * 37 Weak Mutation 231: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:242 - ReplaceComparisonOperator <= -> <
   * 38 Weak Mutation 229: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:242 - DeleteStatement: size()I
   */

  @Test
  public void test12()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      String string0 = tFloatArrayStack0.toString();
      assertEquals("{}", string0);
      assertNotNull(string0);
  }

  //Test case number: 13
  /*
   * 55 covered goals:
   * 1 Weak Mutation 219: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceComparisonOperator <= -> -1
   * 2 Weak Mutation 220: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:239 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 3 Weak Mutation 221: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:239 - ReplaceVariable i -> DEFAULT_CAPACITY
   * 4 Weak Mutation 222: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:239 - InsertUnaryOp Negation of i
   * 5 Weak Mutation 223: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:239 - InsertUnaryOp IINC 1 i
   * 6 Weak Mutation 226: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:239 - DeleteStatement: append(F)Ljava/lang/StringBuilder;
   * 7 Weak Mutation 225: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:239 - DeleteStatement: get(I)F
   * 8 Weak Mutation 224: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:239 - InsertUnaryOp IINC -1 i
   * 9 Weak Mutation 228: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:240 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 10 Weak Mutation 227: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:240 - ReplaceConstant - ,  -> 
   * 11 gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;: I17 Branch 7 IFLE L238 - false
   * 12 Weak Mutation 15: gnu.trove.stack.array.TFloatArrayStack.push(F)V:117 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 13 Weak Mutation 17: gnu.trove.stack.array.TFloatArrayStack.push(F)V:117 - DeleteStatement: add(F)Z
   * 14 Weak Mutation 16: gnu.trove.stack.array.TFloatArrayStack.push(F)V:117 - InsertUnaryOp Negation of val
   * 15 Weak Mutation 36: gnu.trove.stack.array.TFloatArrayStack.size()I:145 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 16 Weak Mutation 37: gnu.trove.stack.array.TFloatArrayStack.size()I:145 - DeleteStatement: size()I
   * 17 Weak Mutation 205: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:237 - ReplaceConstant - { -> 
   * 18 Weak Mutation 207: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - DeleteStatement: size()I
   * 19 Weak Mutation 206: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 20 Weak Mutation 216: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - InsertUnaryOp IINC -1 i
   * 21 Weak Mutation 218: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceComparisonOperator <= -> <
   * 22 Weak Mutation 212: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceArithmeticOperator - -> *
   * 23 Weak Mutation 213: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceVariable i -> DEFAULT_CAPACITY
   * 24 Weak Mutation 214: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - InsertUnaryOp Negation of i
   * 25 Weak Mutation 215: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - InsertUnaryOp IINC 1 i
   * 26 Weak Mutation 208: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceConstant - 1 -> 0
   * 27 Weak Mutation 209: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceArithmeticOperator - -> +
   * 28 Weak Mutation 210: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceArithmeticOperator - -> %
   * 29 Weak Mutation 211: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceArithmeticOperator - -> /
   * 30 Weak Mutation 239: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:246 - DeleteStatement: toString()Ljava/lang/String;
   * 31 Weak Mutation 238: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:245 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 32 Weak Mutation 237: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:245 - ReplaceConstant - } -> 
   * 33 Weak Mutation 236: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:243 - DeleteStatement: append(F)Ljava/lang/StringBuilder;
   * 34 Weak Mutation 235: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:243 - DeleteStatement: get(I)F
   * 35 Weak Mutation 234: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:243 - ReplaceConstant - 0 -> 1
   * 36 Weak Mutation 233: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:243 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 37 Weak Mutation 232: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:242 - ReplaceComparisonOperator <= -> -1
   * 38 Weak Mutation 229: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:242 - DeleteStatement: size()I
   * 39 Weak Mutation 220: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:239 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 40 Weak Mutation 221: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:239 - ReplaceVariable i -> DEFAULT_CAPACITY
   * 41 Weak Mutation 222: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:239 - InsertUnaryOp Negation of i
   * 42 Weak Mutation 223: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:239 - InsertUnaryOp IINC 1 i
   * 43 Weak Mutation 218: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceComparisonOperator <= -> <
   * 44 Weak Mutation 219: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:238 - ReplaceComparisonOperator <= -> -1
   * 45 Weak Mutation 236: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:243 - DeleteStatement: append(F)Ljava/lang/StringBuilder;
   * 46 Weak Mutation 235: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:243 - DeleteStatement: get(I)F
   * 47 Weak Mutation 234: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:243 - ReplaceConstant - 0 -> 1
   * 48 Weak Mutation 233: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:243 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 49 Weak Mutation 232: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:242 - ReplaceComparisonOperator <= -> -1
   * 50 Weak Mutation 228: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:240 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 51 Weak Mutation 227: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:240 - ReplaceConstant - ,  -> 
   * 52 Weak Mutation 226: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:239 - DeleteStatement: append(F)Ljava/lang/StringBuilder;
   * 53 Weak Mutation 225: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:239 - DeleteStatement: get(I)F
   * 54 Weak Mutation 224: gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;:239 - InsertUnaryOp IINC -1 i
   * 55 gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;: I41 Branch 8 IFLE L242 - false
   */

  @Test
  public void test13()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack(1066);
      tFloatArrayStack0.push((float) 1066);
      tFloatArrayStack0.push((float) 1066);
      String string0 = tFloatArrayStack0.toString();
      assertEquals(2, tFloatArrayStack0.size());
      assertNotNull(string0);
      assertEquals("{1066.0, 1066.0}", string0);
  }

  //Test case number: 14
  /*
   * 5 covered goals:
   * 1 Weak Mutation 240: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:251 - ReplaceComparisonOperator != -> ==
   * 2 Weak Mutation 241: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:252 - ReplaceConstant - 1 -> 0
   * 3 gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z: I4 Branch 9 IF_ACMPNE L251 - false
   * 4 Weak Mutation 240: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:251 - ReplaceComparisonOperator != -> ==
   * 5 Weak Mutation 241: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:252 - ReplaceConstant - 1 -> 0
   */

  @Test
  public void test14()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      boolean boolean0 = tFloatArrayStack0.equals((Object) tFloatArrayStack0);
      assertEquals(true, boolean0);
  }

  //Test case number: 15
  /*
   * 18 covered goals:
   * 1 Weak Mutation 250: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:260 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 2 Weak Mutation 248: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:260 - ReplaceVariable that -> this
   * 3 Weak Mutation 249: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:260 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 4 Weak Mutation 247: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:260 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 5 gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z: I17 Branch 11 IF_ACMPEQ L254 - true
   * 6 Weak Mutation 0: gnu.trove.stack.array.TFloatArrayStack.<init>(I)V:67 - ReplaceVariable capacity -> DEFAULT_CAPACITY
   * 7 Weak Mutation 244: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:254 - DeleteStatement: getClass()Ljava/lang/Class;
   * 8 Weak Mutation 245: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:254 - ReplaceComparisonOperator == -> !=
   * 9 Weak Mutation 243: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:254 - DeleteStatement: getClass()Ljava/lang/Class;
   * 10 Weak Mutation 250: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:260 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 11 Weak Mutation 248: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:260 - ReplaceVariable that -> this
   * 12 Weak Mutation 249: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:260 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 13 Weak Mutation 247: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:260 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 14 Weak Mutation 244: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:254 - DeleteStatement: getClass()Ljava/lang/Class;
   * 15 Weak Mutation 245: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:254 - ReplaceComparisonOperator == -> !=
   * 16 Weak Mutation 242: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:254 - ReplaceComparisonOperator = null -> != null
   * 17 Weak Mutation 243: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:254 - DeleteStatement: getClass()Ljava/lang/Class;
   * 18 gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z: I12 Branch 10 IFNULL L254 - false
   */

  @Test
  public void test15()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      TFloatArrayStack tFloatArrayStack1 = new TFloatArrayStack(0);
      boolean boolean0 = tFloatArrayStack0.equals((Object) tFloatArrayStack1);
      assertEquals(true, boolean0);
  }

  //Test case number: 16
  /*
   * 5 covered goals:
   * 1 Weak Mutation 252: gnu.trove.stack.array.TFloatArrayStack.hashCode()I:265 - DeleteStatement: hashCode()I
   * 2 Weak Mutation 251: gnu.trove.stack.array.TFloatArrayStack.hashCode()I:265 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 3 gnu.trove.stack.array.TFloatArrayStack.hashCode()I: root-Branch
   * 4 Weak Mutation 252: gnu.trove.stack.array.TFloatArrayStack.hashCode()I:265 - DeleteStatement: hashCode()I
   * 5 Weak Mutation 251: gnu.trove.stack.array.TFloatArrayStack.hashCode()I:265 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   */

  @Test
  public void test16()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      int int0 = tFloatArrayStack0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 17
  /*
   * 9 covered goals:
   * 1 Weak Mutation 254: gnu.trove.stack.array.TFloatArrayStack.writeExternal(Ljava/io/ObjectOutput;)V:271 - DeleteStatement: writeByte(I)V
   * 2 Weak Mutation 253: gnu.trove.stack.array.TFloatArrayStack.writeExternal(Ljava/io/ObjectOutput;)V:271 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 255: gnu.trove.stack.array.TFloatArrayStack.writeExternal(Ljava/io/ObjectOutput;)V:274 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 4 Weak Mutation 256: gnu.trove.stack.array.TFloatArrayStack.writeExternal(Ljava/io/ObjectOutput;)V:274 - DeleteStatement: writeObject(Ljava/lang/Object;)V
   * 5 gnu.trove.stack.array.TFloatArrayStack.writeExternal(Ljava/io/ObjectOutput;)V: root-Branch
   * 6 Weak Mutation 254: gnu.trove.stack.array.TFloatArrayStack.writeExternal(Ljava/io/ObjectOutput;)V:271 - DeleteStatement: writeByte(I)V
   * 7 Weak Mutation 255: gnu.trove.stack.array.TFloatArrayStack.writeExternal(Ljava/io/ObjectOutput;)V:274 - DeleteField: _listLgnu/trove/list/array/TFloatArrayList;
   * 8 Weak Mutation 253: gnu.trove.stack.array.TFloatArrayStack.writeExternal(Ljava/io/ObjectOutput;)V:271 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 256: gnu.trove.stack.array.TFloatArrayStack.writeExternal(Ljava/io/ObjectOutput;)V:274 - DeleteStatement: writeObject(Ljava/lang/Object;)V
   */

  @Test
  public void test17()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tFloatArrayStack0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(116, byteArrayOutputStream0.size());
      assertEquals("\uFFFD\uFFFD\u0000\u0005w\u0001\u0000sr\u0000$gnu.trove.list.array.TFloatArrayList\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\f\u0000\u0000xpw5\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000x", byteArrayOutputStream0.toString());
  }

  //Test case number: 18
  /*
   * 3 covered goals:
   * 1 Weak Mutation 257: gnu.trove.stack.array.TFloatArrayStack.readExternal(Ljava/io/ObjectInput;)V:282 - DeleteStatement: readByte()B
   * 2 gnu.trove.stack.array.TFloatArrayStack.readExternal(Ljava/io/ObjectInput;)V: root-Branch
   * 3 Weak Mutation 257: gnu.trove.stack.array.TFloatArrayStack.readExternal(Ljava/io/ObjectInput;)V:282 - DeleteStatement: readByte()B
   */

  @Test
  public void test18()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      // Undeclared exception!
      try {
        tFloatArrayStack0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 9 covered goals:
   * 1 gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z: I12 Branch 10 IFNULL L254 - true
   * 2 Weak Mutation 1: gnu.trove.stack.array.TFloatArrayStack.<init>(I)V:67 - InsertUnaryOp Negation of capacity
   * 3 Weak Mutation 2: gnu.trove.stack.array.TFloatArrayStack.<init>(I)V:67 - InsertUnaryOp IINC 1 capacity
   * 4 Weak Mutation 3: gnu.trove.stack.array.TFloatArrayStack.<init>(I)V:67 - InsertUnaryOp IINC -1 capacity
   * 5 Weak Mutation 246: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:255 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 242: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:254 - ReplaceComparisonOperator = null -> != null
   * 7 Weak Mutation 240: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:251 - ReplaceComparisonOperator != -> ==
   * 8 Weak Mutation 246: gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z:255 - ReplaceConstant - 0 -> 1
   * 9 gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z: I4 Branch 9 IF_ACMPNE L251 - true
   */

  @Test
  public void test19()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      boolean boolean0 = tFloatArrayStack0.equals((Object) null);
      assertEquals(false, boolean0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedLongObjectMap;
import gnu.trove.map.TLongObjectMap;
import gnu.trove.map.hash.TLongObjectHashMap;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.RandomAccessFile;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Collection;
import java.util.Locale;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedLongObjectMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


//   @Test
//   public void test0()  throws Throwable  {
//       int int0 = 1111;
//       long long0 = 0L;
//       TLongObjectHashMap<Long> tLongObjectHashMap0 = new TLongObjectHashMap<Long>(int0, (float) int0, long0);
//       TSynchronizedLongObjectMap<Long> tSynchronizedLongObjectMap0 = new TSynchronizedLongObjectMap<Long>((TLongObjectMap<Long>) tLongObjectHashMap0);
//       tSynchronizedLongObjectMap0.putAll((TLongObjectMap<? extends Long>) tLongObjectHashMap0);
//       assertEquals(0.5F, tLongObjectHashMap0.getAutoCompactionFactor(), 0.01F);
//   }

  @Test
  public void test1()  throws Throwable  {
      int int0 = 0;
      float float0 = 1.0F;
      TLongObjectHashMap<Long> tLongObjectHashMap0 = new TLongObjectHashMap<Long>(int0, float0);
      String string0 = "";
      TLongObjectHashMap<Object> tLongObjectHashMap1 = new TLongObjectHashMap<Object>((TLongObjectMap<?>) tLongObjectHashMap0);
      URI uRI0 = new URI(string0);
      URI uRI1 = uRI0.parseServerAuthority();
      URI uRI2 = uRI1.relativize(uRI0);
      String string1 = uRI2.getHost();
      TSynchronizedLongObjectMap<Object> tSynchronizedLongObjectMap0 = new TSynchronizedLongObjectMap<Object>((TLongObjectMap<Object>) tLongObjectHashMap1, (Object) string1);
      Locale locale0 = Locale.KOREA;
      String string2 = locale0.toString();
      // Undeclared exception!
      try {
        tSynchronizedLongObjectMap0.putIfAbsent((long) int0, (Object) string2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TLongObjectMap<Long> tLongObjectMap0 = null;
      String string0 = "@yCIm_0]lTk\"}L.";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: @yCIm_0]lTk\"}L.://@yCIm_0]lTk%22%7DL.@yCIm_0%5DlTk%22%7DL.?@yCIm_0]lTk%22%7DL.#@yCIm_0]lTk%22%7DL.
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>();
      TLongObjectHashMap<Long> tLongObjectHashMap1 = new TLongObjectHashMap<Long>();
      TSynchronizedLongObjectMap<Long> tSynchronizedLongObjectMap0 = new TSynchronizedLongObjectMap<Long>((TLongObjectMap<Long>) tLongObjectHashMap1);
      tSynchronizedLongObjectMap0.size();
      URI uRI0 = null;
      File file0 = null;
      try {
        file0 = new File(uRI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 0;
      int int1 = 1;
      TLongObjectHashMap<Object> tLongObjectHashMap0 = new TLongObjectHashMap<Object>(int1);
      TSynchronizedLongObjectMap<Object> tSynchronizedLongObjectMap0 = new TSynchronizedLongObjectMap<Object>((TLongObjectMap<Object>) tLongObjectHashMap0);
      tSynchronizedLongObjectMap0.size();
      TLongObjectHashMap<String> tLongObjectHashMap1 = new TLongObjectHashMap<String>(int0, int0);
      TSynchronizedLongObjectMap<String> tSynchronizedLongObjectMap1 = new TSynchronizedLongObjectMap<String>((TLongObjectMap<String>) tLongObjectHashMap1);
      Collection<String> collection0 = tSynchronizedLongObjectMap1.valueCollection();
      assertEquals(true, collection0.isEmpty());
  }

  @Test
  public void test5()  throws Throwable  {
      TLongObjectMap<Long> tLongObjectMap0 = null;
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>();
      String string0 = "pLp";
      String string1 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string1);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: pLp://pLppLp#
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TLongObjectMap<Long> tLongObjectMap0 = null;
      TSynchronizedLongObjectMap<Long> tSynchronizedLongObjectMap0 = null;
      try {
        tSynchronizedLongObjectMap0 = new TSynchronizedLongObjectMap<Long>(tLongObjectMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = 1;
      TLongObjectHashMap<Object> tLongObjectHashMap0 = new TLongObjectHashMap<Object>(int0);
      TSynchronizedLongObjectMap<Object> tSynchronizedLongObjectMap0 = new TSynchronizedLongObjectMap<Object>((TLongObjectMap<Object>) tLongObjectHashMap0);
      Object object0 = null;
      int int1 = (-1331);
      long long0 = (-1L);
      tLongObjectHashMap0.get(long0);
      TLongObjectHashMap<String> tLongObjectHashMap1 = new TLongObjectHashMap<String>(int1, int0, int1);
      TSynchronizedLongObjectMap<String> tSynchronizedLongObjectMap1 = new TSynchronizedLongObjectMap<String>((TLongObjectMap<String>) tLongObjectHashMap1, object0);
      TSynchronizedLongObjectMap<String> tSynchronizedLongObjectMap2 = new TSynchronizedLongObjectMap<String>((TLongObjectMap<String>) tSynchronizedLongObjectMap1, object0);
      TSynchronizedLongObjectMap<Object> tSynchronizedLongObjectMap3 = new TSynchronizedLongObjectMap<Object>((TLongObjectMap<Object>) tLongObjectHashMap0, object0);
      // Undeclared exception!
      try {
        tSynchronizedLongObjectMap3.keys();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = 0;
      long long0 = 939L;
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>(int0, (float) int0, long0);
      String string0 = File.pathSeparator;
      TSynchronizedLongObjectMap<Integer> tSynchronizedLongObjectMap0 = new TSynchronizedLongObjectMap<Integer>((TLongObjectMap<Integer>) tLongObjectHashMap0, (Object) string0);
      long long1 = 1118L;
      tSynchronizedLongObjectMap0.remove(long1);
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 1916;
      TLongObjectHashMap<Long> tLongObjectHashMap0 = new TLongObjectHashMap<Long>(int0);
      Locale locale0 = Locale.JAPAN;
      String string0 = locale0.getCountry();
      TSynchronizedLongObjectMap<Long> tSynchronizedLongObjectMap0 = new TSynchronizedLongObjectMap<Long>((TLongObjectMap<Long>) tLongObjectHashMap0, (Object) string0);
      int int1 = tSynchronizedLongObjectMap0.size();
      assertFalse(int0 == int1);
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = 0;
      float float0 = (-1985.1315F);
      TLongObjectMap<Long> tLongObjectMap0 = null;
      String string0 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, int0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://@:0?#
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TLongObjectHashMap<Long> tLongObjectHashMap0 = new TLongObjectHashMap<Long>();
      Long[] longArray0 = new Long[4];
      long long0 = 0L;
      Long long1 = new Long(long0);
      longArray0[0] = long1;
      int int0 = 0;
      float float0 = 409.37027F;
      TSynchronizedLongObjectMap<Long> tSynchronizedLongObjectMap0 = new TSynchronizedLongObjectMap<Long>((TLongObjectMap<Long>) tLongObjectHashMap0);
      tSynchronizedLongObjectMap0.values(longArray0);
      TLongObjectHashMap<Object> tLongObjectHashMap1 = new TLongObjectHashMap<Object>(int0, float0, long0);
      TSynchronizedLongObjectMap<Object> tSynchronizedLongObjectMap1 = new TSynchronizedLongObjectMap<Object>((TLongObjectMap<Object>) tLongObjectHashMap1);
      TSynchronizedLongObjectMap<Object> tSynchronizedLongObjectMap2 = new TSynchronizedLongObjectMap<Object>((TLongObjectMap<Object>) tSynchronizedLongObjectMap1);
      long long2 = 0L;
      Long long3 = new Long(long2);
      longArray0[1] = long3;
      Long long4 = new Long(long0);
      long long5 = (-222L);
      Long.numberOfLeadingZeros(long5);
      tSynchronizedLongObjectMap0.size();
      Long.reverseBytes((long) long4);
      longArray0[2] = long4;
      Long long6 = new Long(long0);
      longArray0[3] = long6;
      tLongObjectHashMap0.values(longArray0);
      String string0 = "p-LA}U";
      int int1 = 0;
      Long.numberOfTrailingZeros(long0);
      try {
        Long.parseLong(string0, int1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // radix 0 less than Character.MIN_RADIX
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 0;
      TLongObjectHashMap<Object> tLongObjectHashMap0 = new TLongObjectHashMap<Object>(int0);
      String string0 = "";
      RandomAccessFile randomAccessFile0 = null;
      try {
        randomAccessFile0 = new RandomAccessFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TLongObjectMap<Object> tLongObjectMap0 = null;
      TLongObjectHashMap<Object> tLongObjectHashMap0 = null;
      try {
        tLongObjectHashMap0 = new TLongObjectHashMap<Object>(tLongObjectMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

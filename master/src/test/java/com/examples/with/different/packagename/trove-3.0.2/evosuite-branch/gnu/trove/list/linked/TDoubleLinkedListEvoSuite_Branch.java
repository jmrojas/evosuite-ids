/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.list.linked;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TDoubleCollection;
import gnu.trove.function.TDoubleFunction;
import gnu.trove.impl.sync.TSynchronizedRandomAccessDoubleList;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessDoubleList;
import gnu.trove.list.TDoubleList;
import gnu.trove.list.array.TDoubleArrayList;
import gnu.trove.list.linked.TDoubleLinkedList;
import gnu.trove.procedure.TDoubleProcedure;
import gnu.trove.set.hash.TDoubleHashSet;
import java.io.BufferedOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.Collection;
import java.util.LinkedList;
import org.evosuite.runtime.Random;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TDoubleLinkedListEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.insert(I[DII)V: root-Branch
   * 2 gnu.trove.list.linked.TDoubleLinkedList.<init>()V: root-Branch
   * 3 gnu.trove.list.linked.TDoubleLinkedList.link([DII)Lgnu/trove/list/linked/TDoubleLinkedList;: I13 Branch 11 IF_ICMPGE L173 - false
   */

  @Test
  public void test0()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(1936, 1936);
      // Undeclared exception!
      try {
        tDoubleLinkedList0.insert(0, tDoubleHashSet0._set, 1936, Integer.MAX_VALUE);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1936
         //
      }
  }

  //Test case number: 1
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.lastIndexOf(D)I: root-Branch
   * 2 gnu.trove.list.linked.TDoubleLinkedList.<init>(D)V: root-Branch
   * 3 gnu.trove.list.linked.TDoubleLinkedList.isEmpty()Z: I4 Branch 4 IFNE L81 - false
   * 4 gnu.trove.list.linked.TDoubleLinkedList.lastIndexOf(ID)I: I4 Branch 90 IFEQ L784 - false
   * 5 gnu.trove.list.linked.TDoubleLinkedList.size()I: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((-93.38697207814513));
      int int0 = tDoubleLinkedList0.lastIndexOf((-1818.6940291001265));
      assertEquals((-1), int0);
      assertEquals((-93.38697207814513), tDoubleLinkedList0.getNoEntryValue(), 0.01D);
      assertEquals(true, tDoubleLinkedList0.isEmpty());
  }

  //Test case number: 2
  /*
   * 9 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.replace(ID)D: root-Branch
   * 2 gnu.trove.list.linked.TDoubleLinkedList.link([DII)Lgnu/trove/list/linked/TDoubleLinkedList;: I13 Branch 11 IF_ICMPGE L173 - true
   * 3 gnu.trove.list.linked.TDoubleLinkedList.getLinkAt(I)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: I5 Branch 14 IF_ICMPLT L204 - true
   * 4 gnu.trove.list.linked.TDoubleLinkedList.getLinkAt(I)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: I17 Branch 15 IF_ICMPGT L207 - false
   * 5 gnu.trove.list.linked.TDoubleLinkedList.getLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;IIZ)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: I8 Branch 16 IFEQ L236 - true
   * 6 gnu.trove.list.linked.TDoubleLinkedList.set(ID)D: I5 Branch 20 IF_ICMPLE L251 - true
   * 7 gnu.trove.list.linked.TDoubleLinkedList.set(ID)D: I35 Branch 21 IFEQ L256 - false
   * 8 gnu.trove.list.linked.TDoubleLinkedList.got(Ljava/lang/Object;)Z: I3 Branch 109 IFNULL L1000 - true
   * 9 gnu.trove.list.linked.TDoubleLinkedList.no(Ljava/lang/Object;)Z: I3 Branch 110 IFNONNULL L1004 - false
   */

  @Test
  public void test2()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      TDoubleLinkedList tDoubleLinkedList0 = TDoubleLinkedList.link(doubleArray0, 0, 0);
      assertNotNull(tDoubleLinkedList0);
      
      // Undeclared exception!
      try {
        tDoubleLinkedList0.replace((-1856), (-1856));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // at offset -1856
         //
      }
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.toArray([D)[D: root-Branch
   * 2 gnu.trove.list.linked.TDoubleLinkedList.toArray([DII)[D: root-Branch
   * 3 gnu.trove.list.linked.TDoubleLinkedList.toArray([DIII)[D: I3 Branch 69 IFNE L639 - false
   */

  @Test
  public void test3()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((-1.0));
      double[] doubleArray0 = new double[3];
      double[] doubleArray1 = tDoubleLinkedList0.toArray(doubleArray0);
      assertEquals((-1.0), tDoubleLinkedList0.getNoEntryValue(), 0.01D);
      assertNotNull(doubleArray1);
  }

  //Test case number: 4
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.getNoEntryValue()D: root-Branch
   * 2 gnu.trove.list.linked.TDoubleLinkedList.iterator()Lgnu/trove/iterator/TDoubleIterator;: root-Branch
   * 3 gnu.trove.list.linked.TDoubleLinkedList$1.hasNext()Z: root-Branch
   * 4 gnu.trove.list.linked.TDoubleLinkedList$1.<init>(Lgnu/trove/list/linked/TDoubleLinkedList;)V: root-Branch
   * 5 gnu.trove.list.linked.TDoubleLinkedList.<init>(Lgnu/trove/list/TDoubleList;)V: I29 Branch 3 IFEQ L63 - true
   */

  @Test
  public void test4()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      TDoubleLinkedList tDoubleLinkedList0 = TDoubleLinkedList.link(doubleArray0, (-515), 0);
      assertNotNull(tDoubleLinkedList0);
      
      TDoubleLinkedList tDoubleLinkedList1 = new TDoubleLinkedList((TDoubleList) tDoubleLinkedList0);
      assertEquals(0.0, tDoubleLinkedList0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.toArray(II)[D: root-Branch
   * 2 gnu.trove.list.linked.TDoubleLinkedList.toArray([DIII)[D: I3 Branch 69 IFNE L639 - false
   */

  @Test
  public void test5()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      double[] doubleArray0 = tDoubleLinkedList0.toArray((-1980), 0);
      assertNotNull(doubleArray0);
  }

  //Test case number: 6
  /*
   * 8 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.insert(I[D)V: root-Branch
   * 2 gnu.trove.list.linked.TDoubleLinkedList$TDoubleLink.setPrevious(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;)V: root-Branch
   * 3 gnu.trove.list.linked.TDoubleLinkedList.add(D)Z: I12 Branch 5 IFEQ L87 - true
   * 4 gnu.trove.list.linked.TDoubleLinkedList.no(Ljava/lang/Object;)Z: I3 Branch 110 IFNONNULL L1004 - true
   * 5 gnu.trove.list.linked.TDoubleLinkedList.insert(ILgnu/trove/list/linked/TDoubleLinkedList;)V: I20 Branch 8 IF_ACMPNE L138 - false
   * 6 gnu.trove.list.linked.TDoubleLinkedList.add(D)Z: I12 Branch 5 IFEQ L87 - false
   * 7 gnu.trove.list.linked.TDoubleLinkedList$TDoubleLink.setNext(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;)V: root-Branch
   * 8 gnu.trove.list.linked.TDoubleLinkedList$TDoubleLink.<init>(D)V: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((-1.0));
      double[] doubleArray0 = new double[9];
      // Undeclared exception!
      try {
        tDoubleLinkedList0.insert((-947), doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 18 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.binarySearch(D)I: root-Branch
   * 2 gnu.trove.list.linked.TDoubleLinkedList.getLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;II)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: root-Branch
   * 3 gnu.trove.list.linked.TDoubleLinkedList$TDoubleLink.getValue()D: root-Branch
   * 4 gnu.trove.list.linked.TDoubleLinkedList$TDoubleLink.getNext()Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: root-Branch
   * 5 gnu.trove.list.linked.TDoubleLinkedList.<init>(Lgnu/trove/list/TDoubleList;)V: I29 Branch 3 IFEQ L63 - false
   * 6 gnu.trove.list.linked.TDoubleLinkedList.getLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;IIZ)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: I8 Branch 16 IFEQ L236 - false
   * 7 gnu.trove.list.linked.TDoubleLinkedList.getLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;IIZ)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: I13 Branch 17 IF_ICMPNE L237 - true
   * 8 gnu.trove.list.linked.TDoubleLinkedList.getLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;IIZ)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: I13 Branch 17 IF_ICMPNE L237 - false
   * 9 gnu.trove.list.linked.TDoubleLinkedList.getLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;IIZ)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: I22 Branch 18 IFEQ L241 - false
   * 10 gnu.trove.list.linked.TDoubleLinkedList.getLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;IIZ)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: I33 Branch 19 IFEQ L242 - false
   * 11 gnu.trove.list.linked.TDoubleLinkedList.binarySearch(DII)I: I3 Branch 82 IFGE L723 - true
   * 12 gnu.trove.list.linked.TDoubleLinkedList.binarySearch(DII)I: I16 Branch 83 IF_ICMPLE L727 - true
   * 13 gnu.trove.list.linked.TDoubleLinkedList.binarySearch(DII)I: I40 Branch 84 IF_ICMPGE L732 - true
   * 14 gnu.trove.list.linked.TDoubleLinkedList.binarySearch(DII)I: I66 Branch 85 IF_ICMPGE L742 - true
   * 15 gnu.trove.list.linked.TDoubleLinkedList.binarySearch(DII)I: I66 Branch 85 IF_ICMPGE L742 - false
   * 16 gnu.trove.list.linked.TDoubleLinkedList.binarySearch(DII)I: I88 Branch 86 IFNE L745 - true
   * 17 gnu.trove.list.linked.TDoubleLinkedList.binarySearch(DII)I: I99 Branch 87 IFGE L748 - false
   * 18 gnu.trove.list.linked.TDoubleLinkedList.got(Ljava/lang/Object;)Z: I3 Branch 109 IFNULL L1000 - false
   */

  @Test
  public void test7()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0);
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((TDoubleList) tDoubleArrayList0);
      int int0 = tDoubleLinkedList0.binarySearch(1.0);
      assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}", tDoubleLinkedList0.toString());
      assertEquals((-9), int0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.clear()V: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((double) (-1299));
      tDoubleLinkedList0.clear();
      assertEquals((-1299.0), tDoubleLinkedList0.getNoEntryValue(), 0.01D);
      assertEquals(0, tDoubleLinkedList0.size());
  }

  //Test case number: 9
  /*
   * 27 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList$TDoubleLink.setValue(D)V: root-Branch
   * 2 gnu.trove.list.linked.TDoubleLinkedList$TDoubleLink.getPrevious()Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: root-Branch
   * 3 gnu.trove.list.linked.TDoubleLinkedList.getLinkAt(I)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: I17 Branch 15 IF_ICMPGT L207 - true
   * 4 gnu.trove.list.linked.TDoubleLinkedList.getLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;IIZ)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: I22 Branch 18 IFEQ L241 - true
   * 5 gnu.trove.list.linked.TDoubleLinkedList.getLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;IIZ)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: I33 Branch 19 IFEQ L242 - true
   * 6 gnu.trove.list.linked.TDoubleLinkedList.set(ID)D: I35 Branch 21 IFEQ L256 - true
   * 7 gnu.trove.list.linked.TDoubleLinkedList.set(I[DII)V: I7 Branch 22 IF_ICMPGE L271 - false
   * 8 gnu.trove.list.linked.TDoubleLinkedList.addAll([D)Z: I18 Branch 42 IF_ICMPGE L405 - true
   * 9 gnu.trove.list.linked.TDoubleLinkedList.addAll([D)Z: I18 Branch 42 IF_ICMPGE L405 - false
   * 10 gnu.trove.list.linked.TDoubleLinkedList.addAll([D)Z: I28 Branch 43 IFEQ L406 - false
   * 11 gnu.trove.list.linked.TDoubleLinkedList.subList(II)Lgnu/trove/list/TDoubleList;: I99 Branch 68 IF_ICMPGE L609 - false
   * 12 gnu.trove.list.linked.TDoubleLinkedList.toArray([DIII)[D: I3 Branch 69 IFNE L639 - true
   * 13 gnu.trove.list.linked.TDoubleLinkedList.toArray([DIII)[D: I11 Branch 70 IFLT L642 - false
   * 14 gnu.trove.list.linked.TDoubleLinkedList.toArray([DIII)[D: I15 Branch 71 IF_ICMPLT L642 - true
   * 15 gnu.trove.list.linked.TDoubleLinkedList.toArray([DIII)[D: I36 Branch 72 IF_ICMPGE L647 - true
   * 16 gnu.trove.list.linked.TDoubleLinkedList.toArray([DIII)[D: I36 Branch 72 IF_ICMPGE L647 - false
   * 17 gnu.trove.list.linked.TDoubleLinkedList.set(I[D)V: root-Branch
   * 18 gnu.trove.list.linked.TDoubleLinkedList.toArray()[D: root-Branch
   * 19 gnu.trove.list.linked.TDoubleLinkedList.sort()V: root-Branch
   * 20 gnu.trove.list.linked.TDoubleLinkedList.set(I[DII)V: I7 Branch 22 IF_ICMPGE L271 - true
   * 21 gnu.trove.list.linked.TDoubleLinkedList.subList(II)Lgnu/trove/list/TDoubleList;: I64 Branch 67 IF_ICMPLE L603 - true
   * 22 gnu.trove.list.linked.TDoubleLinkedList.subList(II)Lgnu/trove/list/TDoubleList;: I99 Branch 68 IF_ICMPGE L609 - true
   * 23 gnu.trove.list.linked.TDoubleLinkedList.set(ID)D: I5 Branch 20 IF_ICMPLE L251 - true
   * 24 gnu.trove.list.linked.TDoubleLinkedList.sort(II)V: root-Branch
   * 25 gnu.trove.list.linked.TDoubleLinkedList.subList(II)Lgnu/trove/list/TDoubleList;: I4 Branch 64 IF_ICMPGE L592 - true
   * 26 gnu.trove.list.linked.TDoubleLinkedList.subList(II)Lgnu/trove/list/TDoubleList;: I28 Branch 65 IF_ICMPGE L596 - true
   * 27 gnu.trove.list.linked.TDoubleLinkedList.subList(II)Lgnu/trove/list/TDoubleList;: I51 Branch 66 IFGE L600 - true
   */

  @Test
  public void test9()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((-93.38697207814513));
      double[] doubleArray0 = new double[7];
      tDoubleLinkedList0.addAll(doubleArray0);
      tDoubleLinkedList0.sort();
      assertEquals(false, tDoubleLinkedList0.isEmpty());
      assertEquals(7, tDoubleLinkedList0.size());
  }

  //Test case number: 10
  /*
   * 9 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.isEmpty()Z: I4 Branch 4 IFNE L81 - true
   * 2 gnu.trove.list.linked.TDoubleLinkedList.containsAll(Lgnu/trove/TDoubleCollection;)Z: I4 Branch 32 IFEQ L356 - true
   * 3 gnu.trove.list.linked.TDoubleLinkedList.containsAll(Lgnu/trove/TDoubleCollection;)Z: I17 Branch 33 IFEQ L359 - true
   * 4 gnu.trove.list.linked.TDoubleLinkedList.containsAll(Lgnu/trove/TDoubleCollection;)Z: I17 Branch 33 IFEQ L359 - false
   * 5 gnu.trove.list.linked.TDoubleLinkedList.containsAll(Lgnu/trove/TDoubleCollection;)Z: I28 Branch 34 IFNE L361 - true
   * 6 gnu.trove.list.linked.TDoubleLinkedList.contains(D)Z: I4 Branch 93 IFEQ L801 - true
   * 7 gnu.trove.list.linked.TDoubleLinkedList.contains(D)Z: I17 Branch 94 IFEQ L804 - false
   * 8 gnu.trove.list.linked.TDoubleLinkedList.contains(D)Z: I24 Branch 95 IFNE L805 - false
   * 9 gnu.trove.list.linked.TDoubleLinkedList$1.next()D: I5 Branch 1 IFEQ L819 - true
   */

  @Test
  public void test10()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      TUnmodifiableDoubleCollection tUnmodifiableDoubleCollection0 = new TUnmodifiableDoubleCollection((TDoubleCollection) tDoubleLinkedList0);
      tDoubleLinkedList0.add(4.9E-324);
      boolean boolean0 = tUnmodifiableDoubleCollection0.containsAll((TDoubleCollection) tDoubleLinkedList0);
      assertEquals(1, tDoubleLinkedList0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.add([DII)V: I7 Branch 7 IF_ICMPGE L110 - true
   */

  @Test
  public void test11()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      double[] doubleArray0 = new double[5];
      tDoubleLinkedList0.add(doubleArray0, 0, 0);
      assertEquals(0, tDoubleLinkedList0.size());
      assertEquals("{}", tDoubleLinkedList0.toString());
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.add([DII)V: I7 Branch 7 IF_ICMPGE L110 - false
   */

  @Test
  public void test12()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      double[] doubleArray0 = new double[9];
      // Undeclared exception!
      try {
        tDoubleLinkedList0.add(doubleArray0, (-1), 192);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
      }
  }

  //Test case number: 13
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.insert(ILgnu/trove/list/linked/TDoubleLinkedList;)V: I20 Branch 8 IF_ACMPNE L138 - true
   * 2 gnu.trove.list.linked.TDoubleLinkedList.insert(ILgnu/trove/list/linked/TDoubleLinkedList;)V: I48 Branch 9 IFEQ L147 - false
   * 3 gnu.trove.list.linked.TDoubleLinkedList.insert(ILgnu/trove/list/linked/TDoubleLinkedList;)V: I53 Branch 10 IFNE L148 - true
   * 4 gnu.trove.list.linked.TDoubleLinkedList.insert(I[D)V: root-Branch
   * 5 gnu.trove.list.linked.TDoubleLinkedList.link([DII)Lgnu/trove/list/linked/TDoubleLinkedList;: I13 Branch 11 IF_ICMPGE L173 - false
   */

  @Test
  public void test13()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((-1.0));
      tDoubleLinkedList0.add(0.0);
      double[] doubleArray0 = new double[9];
      tDoubleLinkedList0.insert((-947), doubleArray0);
      assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}", tDoubleLinkedList0.toString());
      assertEquals(10, tDoubleLinkedList0.size());
  }

  //Test case number: 14
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.insert(ILgnu/trove/list/linked/TDoubleLinkedList;)V: I48 Branch 9 IFEQ L147 - true
   * 2 gnu.trove.list.linked.TDoubleLinkedList.insert(ID)V: root-Branch
   * 3 gnu.trove.list.linked.TDoubleLinkedList.insert(ILgnu/trove/list/linked/TDoubleLinkedList;)V: I20 Branch 8 IF_ACMPNE L138 - true
   */

  @Test
  public void test14()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((-93.38697207814513));
      double[] doubleArray0 = new double[7];
      tDoubleLinkedList0.addAll(doubleArray0);
      tDoubleLinkedList0.insert(1, 1);
      assertEquals(false, tDoubleLinkedList0.isEmpty());
      assertEquals((-93.38697207814513), tDoubleLinkedList0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 15
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.get(I)D: I5 Branch 12 IF_ICMPLE L182 - true
   * 2 gnu.trove.list.linked.TDoubleLinkedList.get(I)D: I35 Branch 13 IFEQ L187 - false
   * 3 gnu.trove.list.linked.TDoubleLinkedList.getLinkAt(I)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: I5 Branch 14 IF_ICMPLT L204 - false
   */

  @Test
  public void test15()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((double) 0);
      double double0 = tDoubleLinkedList0.get(0);
      assertEquals(0.0, double0, 0.01D);
      assertEquals(0, tDoubleLinkedList0.size());
  }

  //Test case number: 16
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.set(ID)D: I5 Branch 20 IF_ICMPLE L251 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.replace(ID)D: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      // Undeclared exception!
      try {
        tDoubleLinkedList0.replace(1, (-1533.142705749645));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // index 1 exceeds size 0
         //
      }
  }

  //Test case number: 17
  /*
   * 7 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.remove(D)Z: I19 Branch 24 IFNE L295 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.removeLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;)V: I4 Branch 25 IFEQ L311 - true
   * 3 gnu.trove.list.linked.TDoubleLinkedList.removeLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;)V: I30 Branch 26 IFEQ L319 - false
   * 4 gnu.trove.list.linked.TDoubleLinkedList.removeLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;)V: I46 Branch 27 IFEQ L326 - false
   * 5 gnu.trove.list.linked.TDoubleLinkedList.remove(D)Z: I12 Branch 23 IFEQ L293 - true
   * 6 gnu.trove.list.linked.TDoubleLinkedList.remove(D)Z: I12 Branch 23 IFEQ L293 - false
   * 7 gnu.trove.list.linked.TDoubleLinkedList.remove(D)Z: I19 Branch 24 IFNE L295 - true
   */

  @Test
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[6] = 1717.7234207931722;
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0);
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((TDoubleList) tDoubleArrayList0);
      boolean boolean0 = tDoubleLinkedList0.remove(1717.7234207931722);
      assertEquals(7, tDoubleLinkedList0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 18
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.removeLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;)V: I4 Branch 25 IFEQ L311 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.shuffle(Ljava/util/Random;)V: I8 Branch 63 IF_ICMPGE L583 - false
   * 3 gnu.trove.list.linked.TDoubleLinkedList.getLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;IIZ)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: I8 Branch 16 IFEQ L236 - true
   */

//   @Test
//   public void test18()  throws Throwable  {
//       double[] doubleArray0 = new double[6];
//       TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
//       TUnmodifiableRandomAccessDoubleList tUnmodifiableRandomAccessDoubleList0 = new TUnmodifiableRandomAccessDoubleList((TDoubleList) tDoubleArrayList0);
//       TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((TDoubleList) tUnmodifiableRandomAccessDoubleList0);
//       Random.setNextRandom((-49));
//       java.util.Random random0 = new java.util.Random();
//       // Undeclared exception!
//       try {
//         tDoubleLinkedList0.shuffle(random0);
//         fail("Expecting exception: NullPointerException");
//       
//       } catch(NullPointerException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//       }
//   }

  //Test case number: 19
  /*
   * 6 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.removeLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;)V: I30 Branch 26 IFEQ L319 - true
   * 2 gnu.trove.list.linked.TDoubleLinkedList.removeLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;)V: I46 Branch 27 IFEQ L326 - true
   * 3 gnu.trove.list.linked.TDoubleLinkedList.retainAll(Ljava/util/Collection;)Z: I13 Branch 44 IFEQ L417 - true
   * 4 gnu.trove.list.linked.TDoubleLinkedList.retainAll(Ljava/util/Collection;)Z: I13 Branch 44 IFEQ L417 - false
   * 5 gnu.trove.list.linked.TDoubleLinkedList.retainAll(Ljava/util/Collection;)Z: I21 Branch 45 IFGT L418 - false
   * 6 gnu.trove.list.linked.TDoubleLinkedList$1.remove()V: I4 Branch 2 IFNONNULL L834 - true
   */

  @Test
  public void test19()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      tDoubleLinkedList0.add(4.9E-324);
      assertEquals(false, tDoubleLinkedList0.isEmpty());
      
      LinkedList<String> linkedList0 = new LinkedList<String>();
      boolean boolean0 = tDoubleLinkedList0.retainAll((Collection<?>) linkedList0);
      assertEquals(true, boolean0);
  }

  //Test case number: 20
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.containsAll(Ljava/util/Collection;)Z: I4 Branch 28 IFEQ L339 - true
   * 2 gnu.trove.list.linked.TDoubleLinkedList.containsAll(Ljava/util/Collection;)Z: I17 Branch 29 IFEQ L342 - true
   */

  @Test
  public void test20()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      TUnmodifiableDoubleCollection tUnmodifiableDoubleCollection0 = new TUnmodifiableDoubleCollection((TDoubleCollection) tDoubleLinkedList0);
      tDoubleLinkedList0.add(4.9E-324);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      boolean boolean0 = tUnmodifiableDoubleCollection0.containsAll((Collection<?>) linkedList0);
      assertEquals(1, tDoubleLinkedList0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.containsAll(Ljava/util/Collection;)Z: I4 Branch 28 IFEQ L339 - false
   */

  @Test
  public void test21()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList(0.0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      boolean boolean0 = tDoubleLinkedList0.containsAll((Collection<?>) linkedList0);
      assertEquals(false, boolean0);
      assertEquals(0.0, tDoubleLinkedList0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.containsAll(Lgnu/trove/TDoubleCollection;)Z: I4 Branch 32 IFEQ L356 - false
   */

  @Test
  public void test22()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((-93.38697207814513));
      boolean boolean0 = tDoubleLinkedList0.containsAll((TDoubleCollection) tDoubleLinkedList0);
      assertEquals((-93.38697207814513), tDoubleLinkedList0.getNoEntryValue(), 0.01D);
      assertEquals(false, boolean0);
  }

  //Test case number: 23
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.containsAll([D)Z: I4 Branch 35 IFEQ L369 - true
   * 2 gnu.trove.list.linked.TDoubleLinkedList.containsAll([D)Z: I23 Branch 36 IF_ICMPGE L372 - true
   * 3 gnu.trove.list.linked.TDoubleLinkedList.containsAll([D)Z: I23 Branch 36 IF_ICMPGE L372 - false
   * 4 gnu.trove.list.linked.TDoubleLinkedList.containsAll([D)Z: I33 Branch 37 IFNE L373 - true
   */

  @Test
  public void test23()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((-1.0));
      tDoubleLinkedList0.add(0.0);
      double[] doubleArray0 = new double[9];
      boolean boolean0 = tDoubleLinkedList0.containsAll(doubleArray0);
      assertEquals("{0.0}", tDoubleLinkedList0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.containsAll([D)Z: I4 Branch 35 IFEQ L369 - false
   */

  @Test
  public void test24()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      double[] doubleArray0 = new double[6];
      boolean boolean0 = tDoubleLinkedList0.containsAll(doubleArray0);
      assertEquals(true, tDoubleLinkedList0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 25
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.containsAll([D)Z: I33 Branch 37 IFNE L373 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.contains(D)Z: I17 Branch 94 IFEQ L804 - true
   * 3 gnu.trove.list.linked.TDoubleLinkedList.contains(D)Z: I24 Branch 95 IFNE L805 - true
   * 4 gnu.trove.list.linked.TDoubleLinkedList.containsAll([D)Z: I4 Branch 35 IFEQ L369 - true
   * 5 gnu.trove.list.linked.TDoubleLinkedList.containsAll([D)Z: I23 Branch 36 IF_ICMPGE L372 - false
   */

  @Test
  public void test25()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((-1.0));
      tDoubleLinkedList0.add(0.0);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-1.0);
      boolean boolean0 = tDoubleLinkedList0.containsAll(doubleArray0);
      assertEquals(1, tDoubleLinkedList0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.addAll(Ljava/util/Collection;)Z: I12 Branch 38 IFEQ L382 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.addAll(Ljava/util/Collection;)Z: I23 Branch 39 IFEQ L383 - false
   * 3 gnu.trove.list.linked.TDoubleLinkedList.addAll(Ljava/util/Collection;)Z: I12 Branch 38 IFEQ L382 - true
   */

  @Test
  public void test26()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      linkedList0.add((Double) 1256.0556446275175);
      boolean boolean0 = tDoubleLinkedList0.addAll((Collection<? extends Double>) linkedList0);
      assertEquals("{1256.0556446275175}", tDoubleLinkedList0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 27
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.addAll(Lgnu/trove/TDoubleCollection;)Z: I12 Branch 40 IFEQ L393 - true
   * 2 gnu.trove.list.linked.TDoubleLinkedList.addAll(Lgnu/trove/TDoubleCollection;)Z: I12 Branch 40 IFEQ L393 - false
   * 3 gnu.trove.list.linked.TDoubleLinkedList.addAll(Lgnu/trove/TDoubleCollection;)Z: I23 Branch 41 IFEQ L395 - false
   */

  @Test
  public void test27()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      TDoubleLinkedList tDoubleLinkedList0 = TDoubleLinkedList.link(doubleArray0, (-515), 0);
      assertNotNull(tDoubleLinkedList0);
      
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0);
      boolean boolean0 = tDoubleLinkedList0.addAll((TDoubleCollection) tDoubleArrayList0);
      assertEquals(false, tDoubleLinkedList0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 28
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.retainAll(Lgnu/trove/TDoubleCollection;)Z: I13 Branch 46 IFEQ L430 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.retainAll(Lgnu/trove/TDoubleCollection;)Z: I20 Branch 47 IFNE L431 - false
   * 3 gnu.trove.list.linked.TDoubleLinkedList.retainAll(Lgnu/trove/TDoubleCollection;)Z: I13 Branch 46 IFEQ L430 - true
   */

  @Test
  public void test28()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(0);
      TSynchronizedRandomAccessDoubleList tSynchronizedRandomAccessDoubleList0 = new TSynchronizedRandomAccessDoubleList((TDoubleList) tDoubleArrayList0, (Object) "/");
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((TDoubleList) tSynchronizedRandomAccessDoubleList0);
      tDoubleLinkedList0.add(3527.0);
      assertEquals(false, tDoubleLinkedList0.isEmpty());
      
      boolean boolean0 = tDoubleLinkedList0.retainAll((TDoubleCollection) tSynchronizedRandomAccessDoubleList0);
      assertEquals(true, boolean0);
  }

  //Test case number: 29
  /*
   * 6 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.retainAll(Lgnu/trove/TDoubleCollection;)Z: I20 Branch 47 IFNE L431 - true
   * 2 gnu.trove.list.linked.TDoubleLinkedList.contains(D)Z: I4 Branch 93 IFEQ L801 - true
   * 3 gnu.trove.list.linked.TDoubleLinkedList.contains(D)Z: I17 Branch 94 IFEQ L804 - false
   * 4 gnu.trove.list.linked.TDoubleLinkedList.contains(D)Z: I24 Branch 95 IFNE L805 - false
   * 5 gnu.trove.list.linked.TDoubleLinkedList.retainAll(Lgnu/trove/TDoubleCollection;)Z: I13 Branch 46 IFEQ L430 - true
   * 6 gnu.trove.list.linked.TDoubleLinkedList.retainAll(Lgnu/trove/TDoubleCollection;)Z: I13 Branch 46 IFEQ L430 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      TUnmodifiableDoubleCollection tUnmodifiableDoubleCollection0 = new TUnmodifiableDoubleCollection((TDoubleCollection) tDoubleLinkedList0);
      double[] doubleArray0 = new double[6];
      tDoubleLinkedList0.addAll(doubleArray0);
      boolean boolean0 = tDoubleLinkedList0.retainAll((TDoubleCollection) tUnmodifiableDoubleCollection0);
      assertEquals(6, tUnmodifiableDoubleCollection0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.retainAll([D)Z: I17 Branch 48 IFEQ L445 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.retainAll([D)Z: I24 Branch 49 IFGE L446 - false
   * 3 gnu.trove.list.linked.TDoubleLinkedList.retainAll([D)Z: I17 Branch 48 IFEQ L445 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((-1.0));
      tDoubleLinkedList0.add(1336.292592951101);
      assertEquals(1, tDoubleLinkedList0.size());
      
      double[] doubleArray0 = new double[3];
      boolean boolean0 = tDoubleLinkedList0.retainAll(doubleArray0);
      assertEquals(true, boolean0);
  }

  //Test case number: 31
  /*
   * 8 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.retainAll([D)Z: I24 Branch 49 IFGE L446 - true
   * 2 gnu.trove.list.linked.TDoubleLinkedList.retainAll([D)Z: I17 Branch 48 IFEQ L445 - true
   * 3 gnu.trove.list.linked.TDoubleLinkedList.retainAll([D)Z: I17 Branch 48 IFEQ L445 - false
   * 4 gnu.trove.list.linked.TDoubleLinkedList.fill(IID)V: I22 Branch 78 IF_ICMPLE L699 - false
   * 5 gnu.trove.list.linked.TDoubleLinkedList.fill(IID)V: I31 Branch 79 IF_ICMPGE L700 - true
   * 6 gnu.trove.list.linked.TDoubleLinkedList.fill(IID)V: I54 Branch 80 IF_ICMPGE L704 - true
   * 7 gnu.trove.list.linked.TDoubleLinkedList.fill(IID)V: I54 Branch 80 IF_ICMPGE L704 - false
   * 8 gnu.trove.list.linked.TDoubleLinkedList.fill(IID)V: I3 Branch 77 IFGE L693 - true
   */

  @Test
  public void test31()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      TDoubleLinkedList tDoubleLinkedList0 = TDoubleLinkedList.link(doubleArray0, 0, 0);
      assertNotNull(tDoubleLinkedList0);
      
      tDoubleLinkedList0.fill(796, 796, 0.0);
      boolean boolean0 = tDoubleLinkedList0.retainAll(doubleArray0);
      assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}", tDoubleLinkedList0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 32
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.removeAll(Ljava/util/Collection;)Z: I13 Branch 50 IFEQ L458 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.removeAll(Ljava/util/Collection;)Z: I21 Branch 51 IFLE L459 - true
   * 3 gnu.trove.list.linked.TDoubleLinkedList.removeAll(Ljava/util/Collection;)Z: I13 Branch 50 IFEQ L458 - true
   * 4 gnu.trove.list.linked.TDoubleLinkedList.add([D)V: I14 Branch 6 IF_ICMPGE L103 - true
   * 5 gnu.trove.list.linked.TDoubleLinkedList.add([D)V: I14 Branch 6 IF_ICMPGE L103 - false
   */

  @Test
  public void test32()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      tDoubleLinkedList0.add(doubleArray0);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      boolean boolean0 = tDoubleLinkedList0.removeAll((Collection<?>) linkedList0);
      assertEquals(false, tDoubleLinkedList0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 33
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.removeAll(Lgnu/trove/TDoubleCollection;)Z: I13 Branch 52 IFEQ L471 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.removeAll(Lgnu/trove/TDoubleCollection;)Z: I20 Branch 53 IFEQ L472 - true
   * 3 gnu.trove.list.linked.TDoubleLinkedList.removeAll(Lgnu/trove/TDoubleCollection;)Z: I13 Branch 52 IFEQ L471 - true
   */

  @Test
  public void test33()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      double[] doubleArray0 = new double[3];
      tDoubleLinkedList0.add(doubleArray0);
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(0, (-1));
      boolean boolean0 = tDoubleLinkedList0.removeAll((TDoubleCollection) tDoubleHashSet0);
      assertEquals(3, tDoubleLinkedList0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 34
  /*
   * 7 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.removeAll([D)Z: I24 Branch 55 IFLT L487 - true
   * 2 gnu.trove.list.linked.TDoubleLinkedList.removeAll([D)Z: I17 Branch 54 IFEQ L486 - true
   * 3 gnu.trove.list.linked.TDoubleLinkedList.removeAll([D)Z: I17 Branch 54 IFEQ L486 - false
   * 4 gnu.trove.list.linked.TDoubleLinkedList.removeAll([D)Z: I24 Branch 55 IFLT L487 - false
   * 5 gnu.trove.list.linked.TDoubleLinkedList.removeLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;)V: I30 Branch 26 IFEQ L319 - false
   * 6 gnu.trove.list.linked.TDoubleLinkedList.removeLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;)V: I46 Branch 27 IFEQ L326 - false
   * 7 gnu.trove.list.linked.TDoubleLinkedList$1.remove()V: I4 Branch 2 IFNONNULL L834 - true
   */

  @Test
  public void test34()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 853.3163046655523;
      tDoubleLinkedList0.addAll(doubleArray0);
      doubleArray0[0] = (double) 167;
      boolean boolean0 = tDoubleLinkedList0.removeAll(doubleArray0);
      assertEquals(853.3163046655523, tDoubleLinkedList0.sum(), 0.01D);
      assertEquals(true, boolean0);
  }

  //Test case number: 35
  /*
   * 6 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.removeAt(I)D: I10 Branch 56 IFEQ L498 - true
   * 2 gnu.trove.list.linked.TDoubleLinkedList.removeAt(I)D: I10 Branch 56 IFEQ L498 - false
   * 3 gnu.trove.list.linked.TDoubleLinkedList.remove(II)V: I7 Branch 57 IF_ICMPGE L508 - false
   * 4 gnu.trove.list.linked.TDoubleLinkedList.removeLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;)V: I4 Branch 25 IFEQ L311 - true
   * 5 gnu.trove.list.linked.TDoubleLinkedList.removeLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;)V: I30 Branch 26 IFEQ L319 - true
   * 6 gnu.trove.list.linked.TDoubleLinkedList.removeLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;)V: I46 Branch 27 IFEQ L326 - true
   */

  @Test
  public void test35()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      tDoubleLinkedList0.add(1.0);
      assertEquals(1, tDoubleLinkedList0.size());
      
      // Undeclared exception!
      try {
        tDoubleLinkedList0.remove(0, 1763);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no elemenet at 0
         //
      }
  }

  //Test case number: 36
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.remove(II)V: I7 Branch 57 IF_ICMPGE L508 - true
   */

  @Test
  public void test36()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      tDoubleLinkedList0.remove((-1374), 0);
      assertEquals(0.0, tDoubleLinkedList0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 37
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.transformValues(Lgnu/trove/function/TDoubleFunction;)V: I8 Branch 58 IFEQ L515 - true
   */

  @Test
  public void test37()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      tDoubleLinkedList0.transformValues((TDoubleFunction) null);
      assertEquals(0.0, tDoubleLinkedList0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 38
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.transformValues(Lgnu/trove/function/TDoubleFunction;)V: I8 Branch 58 IFEQ L515 - false
   */

  @Test
  public void test38()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      tDoubleLinkedList0.add((-1.0));
      // Undeclared exception!
      try {
        tDoubleLinkedList0.transformValues((TDoubleFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 39
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.reverse()V: I19 Branch 59 IFEQ L531 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.reverse()V: I19 Branch 59 IFEQ L531 - true
   */

  @Test
  public void test39()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      double[] doubleArray0 = new double[6];
      tDoubleLinkedList0.addAll(doubleArray0);
      tDoubleLinkedList0.reverse();
      assertEquals(false, tDoubleLinkedList0.isEmpty());
      assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}", tDoubleLinkedList0.toString());
  }

  //Test case number: 40
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.reverse(II)V: I4 Branch 60 IF_ICMPLE L549 - false
   */

  @Test
  public void test40()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList(0.0);
      // Undeclared exception!
      try {
        tDoubleLinkedList0.reverse(47, 9);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // from > to : 47>9
         //
      }
  }

  //Test case number: 41
  /*
   * 6 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.reverse(II)V: I52 Branch 61 IF_ACMPEQ L561 - true
   * 2 gnu.trove.list.linked.TDoubleLinkedList.reverse(II)V: I52 Branch 61 IF_ACMPEQ L561 - false
   * 3 gnu.trove.list.linked.TDoubleLinkedList.reverse(II)V: I87 Branch 62 IFEQ L573 - false
   * 4 gnu.trove.list.linked.TDoubleLinkedList.reverse(II)V: I4 Branch 60 IF_ICMPLE L549 - true
   * 5 gnu.trove.list.linked.TDoubleLinkedList.getLinkAt(I)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: I5 Branch 14 IF_ICMPLT L204 - false
   * 6 gnu.trove.list.linked.TDoubleLinkedList$TDoubleLink.getPrevious()Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: root-Branch
   */

  @Test
  public void test41()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      double[] doubleArray0 = new double[9];
      tDoubleLinkedList0.add(doubleArray0);
      // Undeclared exception!
      try {
        tDoubleLinkedList0.reverse(0, 1731);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 42
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.shuffle(Ljava/util/Random;)V: I8 Branch 63 IF_ICMPGE L583 - true
   */

//   @Test
//   public void test42()  throws Throwable  {
//       TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
//       java.util.Random random0 = new java.util.Random();
//       tDoubleLinkedList0.shuffle(random0);
//       assertEquals(1.0132260186515518, random0.nextGaussian(), 0.01D);
//       assertEquals(0.6096537388071951, random0.nextDouble(), 0.01D);
//   }

  //Test case number: 43
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.subList(II)Lgnu/trove/list/TDoubleList;: I4 Branch 64 IF_ICMPGE L592 - false
   */

  @Test
  public void test43()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((double) 0);
      // Undeclared exception!
      try {
        tDoubleLinkedList0.sort(36, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 36 greater than end index 0
         //
      }
  }

  //Test case number: 44
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.subList(II)Lgnu/trove/list/TDoubleList;: I28 Branch 65 IF_ICMPGE L596 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.sort(II)V: root-Branch
   */

  @Test
  public void test44()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      // Undeclared exception!
      try {
        tDoubleLinkedList0.sort(31, 31);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 31 greater than last index 0
         //
      }
  }

  //Test case number: 45
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.subList(II)Lgnu/trove/list/TDoubleList;: I51 Branch 66 IFGE L600 - false
   */

  @Test
  public void test45()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((-93.38697207814513));
      // Undeclared exception!
      try {
        tDoubleLinkedList0.subList((-1790), 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  //Test case number: 46
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.subList(II)Lgnu/trove/list/TDoubleList;: I64 Branch 67 IF_ICMPLE L603 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.subList(II)Lgnu/trove/list/TDoubleList;: I4 Branch 64 IF_ICMPGE L592 - true
   * 3 gnu.trove.list.linked.TDoubleLinkedList.subList(II)Lgnu/trove/list/TDoubleList;: I28 Branch 65 IF_ICMPGE L596 - true
   * 4 gnu.trove.list.linked.TDoubleLinkedList.subList(II)Lgnu/trove/list/TDoubleList;: I51 Branch 66 IFGE L600 - true
   */

  @Test
  public void test46()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList(0.0);
      // Undeclared exception!
      try {
        tDoubleLinkedList0.subList(0, 724);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index < 0
         //
      }
  }

  //Test case number: 47
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.toArray([DIII)[D: I11 Branch 70 IFLT L642 - true
   * 2 gnu.trove.list.linked.TDoubleLinkedList.toArray([DII)[D: root-Branch
   */

  @Test
  public void test47()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList(0.0);
      double[] doubleArray0 = new double[1];
      // Undeclared exception!
      try {
        tDoubleLinkedList0.toArray(doubleArray0, (-1), (-3));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -1
         //
      }
  }

  //Test case number: 48
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.toArray([DIII)[D: I15 Branch 71 IF_ICMPLT L642 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.toArray([DIII)[D: I3 Branch 69 IFNE L639 - true
   * 3 gnu.trove.list.linked.TDoubleLinkedList.toArray([DIII)[D: I11 Branch 70 IFLT L642 - false
   */

  @Test
  public void test48()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0);
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((TDoubleList) tDoubleArrayList0);
      // Undeclared exception!
      try {
        tDoubleLinkedList0.toArray(doubleArray0, 26339969, 878, 878);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 26339969
         //
      }
  }

  //Test case number: 49
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.forEach(Lgnu/trove/procedure/TDoubleProcedure;)Z: I8 Branch 73 IFEQ L657 - true
   */

  @Test
  public void test49()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      boolean boolean0 = tDoubleLinkedList0.forEach((TDoubleProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 50
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.forEachDescending(Lgnu/trove/procedure/TDoubleProcedure;)Z: I8 Branch 75 IFEQ L666 - true
   */

  @Test
  public void test50()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      boolean boolean0 = tDoubleLinkedList0.forEachDescending((TDoubleProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 51
  /*
   * 6 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.fill(IID)V: I74 Branch 81 IF_ICMPGE L708 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.fill(D)V: root-Branch
   * 3 gnu.trove.list.linked.TDoubleLinkedList.fill(IID)V: I3 Branch 77 IFGE L693 - true
   * 4 gnu.trove.list.linked.TDoubleLinkedList.fill(IID)V: I22 Branch 78 IF_ICMPLE L699 - true
   * 5 gnu.trove.list.linked.TDoubleLinkedList.fill(IID)V: I74 Branch 81 IF_ICMPGE L708 - true
   * 6 gnu.trove.list.linked.TDoubleLinkedList$TDoubleLink.setValue(D)V: root-Branch
   */

  @Test
  public void test51()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      double[] doubleArray0 = new double[6];
      tDoubleLinkedList0.addAll(doubleArray0);
      tDoubleLinkedList0.fill(0.0);
      assertEquals(false, tDoubleLinkedList0.isEmpty());
      assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}", tDoubleLinkedList0.toString());
  }

  //Test case number: 52
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.binarySearch(DII)I: I40 Branch 84 IF_ICMPGE L732 - false
   */

  @Test
  public void test52()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      int int0 = tDoubleLinkedList0.binarySearch(Double.POSITIVE_INFINITY, 0, (-1334));
      assertEquals((-1), int0);
  }

  //Test case number: 53
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.binarySearch(DII)I: I88 Branch 86 IFNE L745 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.getLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;IIZ)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: I13 Branch 17 IF_ICMPNE L237 - true
   * 3 gnu.trove.list.linked.TDoubleLinkedList.getLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;IIZ)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: I22 Branch 18 IFEQ L241 - false
   * 4 gnu.trove.list.linked.TDoubleLinkedList.getLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;IIZ)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: I33 Branch 19 IFEQ L242 - false
   */

  @Test
  public void test53()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0);
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((TDoubleList) tDoubleArrayList0);
      int int0 = tDoubleLinkedList0.binarySearch(0.0);
      assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}", tDoubleLinkedList0.toString());
      assertEquals(4, int0);
      assertEquals(8, tDoubleLinkedList0.size());
  }

  //Test case number: 54
  /*
   * 9 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.binarySearch(DII)I: I99 Branch 87 IFGE L748 - true
   * 2 gnu.trove.list.linked.TDoubleLinkedList.binarySearch(D)I: root-Branch
   * 3 gnu.trove.list.linked.TDoubleLinkedList.getLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;II)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: root-Branch
   * 4 gnu.trove.list.linked.TDoubleLinkedList.binarySearch(DII)I: I3 Branch 82 IFGE L723 - true
   * 5 gnu.trove.list.linked.TDoubleLinkedList.binarySearch(DII)I: I16 Branch 83 IF_ICMPLE L727 - true
   * 6 gnu.trove.list.linked.TDoubleLinkedList.binarySearch(DII)I: I40 Branch 84 IF_ICMPGE L732 - true
   * 7 gnu.trove.list.linked.TDoubleLinkedList.binarySearch(DII)I: I66 Branch 85 IF_ICMPGE L742 - true
   * 8 gnu.trove.list.linked.TDoubleLinkedList.binarySearch(DII)I: I66 Branch 85 IF_ICMPGE L742 - false
   * 9 gnu.trove.list.linked.TDoubleLinkedList.binarySearch(DII)I: I88 Branch 86 IFNE L745 - true
   */

  @Test
  public void test54()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((-1.0));
      tDoubleLinkedList0.add(0.0);
      int int0 = tDoubleLinkedList0.binarySearch((-1.0));
      assertEquals("{0.0}", tDoubleLinkedList0.toString());
      assertEquals((-1), int0);
  }

  //Test case number: 55
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.indexOf(ID)I: I14 Branch 88 IFEQ L767 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.indexOf(ID)I: I21 Branch 89 IFNE L768 - true
   * 3 gnu.trove.list.linked.TDoubleLinkedList.indexOf(ID)I: I14 Branch 88 IFEQ L767 - true
   * 4 gnu.trove.list.linked.TDoubleLinkedList.indexOf(D)I: root-Branch
   */

  @Test
  public void test55()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      TUnmodifiableRandomAccessDoubleList tUnmodifiableRandomAccessDoubleList0 = new TUnmodifiableRandomAccessDoubleList((TDoubleList) tDoubleArrayList0);
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((TDoubleList) tUnmodifiableRandomAccessDoubleList0);
      int int0 = tDoubleLinkedList0.indexOf(3527.0);
      assertEquals((-1), int0);
      assertEquals(6, tDoubleLinkedList0.size());
      assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}", tDoubleLinkedList0.toString());
  }

  //Test case number: 56
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.indexOf(ID)I: I21 Branch 89 IFNE L768 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.indexOf(D)I: root-Branch
   * 3 gnu.trove.list.linked.TDoubleLinkedList.indexOf(ID)I: I14 Branch 88 IFEQ L767 - false
   */

  @Test
  public void test56()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 3527;
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      TUnmodifiableRandomAccessDoubleList tUnmodifiableRandomAccessDoubleList0 = new TUnmodifiableRandomAccessDoubleList((TDoubleList) tDoubleArrayList0);
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((TDoubleList) tUnmodifiableRandomAccessDoubleList0);
      int int0 = tDoubleLinkedList0.indexOf(3527.0);
      assertEquals(6, tDoubleLinkedList0.size());
      assertEquals(0, int0);
      assertEquals("{3527.0, 0.0, 0.0, 0.0, 0.0, 0.0}", tDoubleLinkedList0.toString());
  }

  //Test case number: 57
  /*
   * 10 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.lastIndexOf(ID)I: I34 Branch 92 IFNE L790 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.lastIndexOf(D)I: root-Branch
   * 3 gnu.trove.list.linked.TDoubleLinkedList.lastIndexOf(ID)I: I4 Branch 90 IFEQ L784 - true
   * 4 gnu.trove.list.linked.TDoubleLinkedList.lastIndexOf(ID)I: I27 Branch 91 IFEQ L789 - true
   * 5 gnu.trove.list.linked.TDoubleLinkedList.lastIndexOf(ID)I: I27 Branch 91 IFEQ L789 - false
   * 6 gnu.trove.list.linked.TDoubleLinkedList.lastIndexOf(ID)I: I34 Branch 92 IFNE L790 - true
   * 7 gnu.trove.list.linked.TDoubleLinkedList.getLinkAt(I)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: I5 Branch 14 IF_ICMPLT L204 - true
   * 8 gnu.trove.list.linked.TDoubleLinkedList.getLinkAt(I)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: I17 Branch 15 IF_ICMPGT L207 - false
   * 9 gnu.trove.list.linked.TDoubleLinkedList.getLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;IIZ)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: I8 Branch 16 IFEQ L236 - false
   * 10 gnu.trove.list.linked.TDoubleLinkedList.getLink(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;IIZ)Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: I13 Branch 17 IF_ICMPNE L237 - false
   */

  @Test
  public void test57()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((-93.38697207814513));
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-1818.6940291001265);
      tDoubleLinkedList0.addAll(doubleArray0);
      int int0 = tDoubleLinkedList0.lastIndexOf((-1818.6940291001265));
      assertEquals(7, tDoubleLinkedList0.size());
      assertEquals(0, int0);
  }

  //Test case number: 58
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.contains(D)Z: I4 Branch 93 IFEQ L801 - false
   */

  @Test
  public void test58()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      boolean boolean0 = tDoubleLinkedList0.contains(721.6446778995364);
      assertEquals(true, tDoubleLinkedList0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 59
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.grep(Lgnu/trove/procedure/TDoubleProcedure;)Lgnu/trove/list/TDoubleList;: I14 Branch 96 IFEQ L846 - true
   */

  @Test
  public void test59()  throws Throwable  {
      double[] doubleArray0 = new double[10];
      TDoubleLinkedList tDoubleLinkedList0 = TDoubleLinkedList.link(doubleArray0, 0, 0);
      assertNotNull(tDoubleLinkedList0);
      
      TDoubleLinkedList tDoubleLinkedList1 = (TDoubleLinkedList)tDoubleLinkedList0.grep((TDoubleProcedure) null);
      assertNotNull(tDoubleLinkedList1);
      assertEquals("{}", tDoubleLinkedList0.toString());
  }

  //Test case number: 60
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.grep(Lgnu/trove/procedure/TDoubleProcedure;)Lgnu/trove/list/TDoubleList;: I14 Branch 96 IFEQ L846 - false
   */

  @Test
  public void test60()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((TDoubleList) tDoubleArrayList0);
      // Undeclared exception!
      try {
        tDoubleLinkedList0.grep((TDoubleProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 61
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.inverseGrep(Lgnu/trove/procedure/TDoubleProcedure;)Lgnu/trove/list/TDoubleList;: I14 Branch 98 IFEQ L856 - true
   * 2 gnu.trove.list.linked.TDoubleLinkedList.link([DII)Lgnu/trove/list/linked/TDoubleLinkedList;: I13 Branch 11 IF_ICMPGE L173 - true
   */

  @Test
  public void test61()  throws Throwable  {
      double[] doubleArray0 = new double[10];
      TDoubleLinkedList tDoubleLinkedList0 = TDoubleLinkedList.link(doubleArray0, 0, 0);
      assertNotNull(tDoubleLinkedList0);
      
      TDoubleLinkedList tDoubleLinkedList1 = (TDoubleLinkedList)tDoubleLinkedList0.inverseGrep((TDoubleProcedure) null);
      assertNotNull(tDoubleLinkedList1);
      assertEquals(0, tDoubleLinkedList0.size());
  }

  //Test case number: 62
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.max()D: I8 Branch 100 IFEQ L867 - true
   * 2 gnu.trove.list.linked.TDoubleLinkedList.max()D: I23 Branch 101 IFEQ L870 - true
   * 3 gnu.trove.list.linked.TDoubleLinkedList.max()D: I23 Branch 101 IFEQ L870 - false
   * 4 gnu.trove.list.linked.TDoubleLinkedList.max()D: I30 Branch 102 IFGE L871 - true
   * 5 gnu.trove.list.linked.TDoubleLinkedList.isEmpty()Z: I4 Branch 4 IFNE L81 - true
   */

//   @Test
//   public void test62()  throws Throwable  {
//       TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(0);
//       TSynchronizedRandomAccessDoubleList tSynchronizedRandomAccessDoubleList0 = new TSynchronizedRandomAccessDoubleList((TDoubleList) tDoubleArrayList0, (Object) "/");
//       TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((TDoubleList) tSynchronizedRandomAccessDoubleList0);
//       tDoubleLinkedList0.add(3527.0);
//       double double0 = tDoubleLinkedList0.max();
//       assertEquals(1, tDoubleLinkedList0.size());
//       assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01D);
//   }

  //Test case number: 63
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.max()D: I8 Branch 100 IFEQ L867 - false
   */

  @Test
  public void test63()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((-1981.7462444094174));
      // Undeclared exception!
      try {
        tDoubleLinkedList0.max();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 64
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.min()D: I8 Branch 103 IFEQ L882 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.size()I: root-Branch
   * 3 gnu.trove.list.linked.TDoubleLinkedList.isEmpty()Z: I4 Branch 4 IFNE L81 - false
   */

  @Test
  public void test64()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList(1.7976931348623157E308);
      // Undeclared exception!
      try {
        tDoubleLinkedList0.min();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 65
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.sum()D: I12 Branch 106 IFEQ L897 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.addAll([D)Z: I18 Branch 42 IF_ICMPGE L405 - true
   * 3 gnu.trove.list.linked.TDoubleLinkedList.addAll([D)Z: I18 Branch 42 IF_ICMPGE L405 - false
   * 4 gnu.trove.list.linked.TDoubleLinkedList.addAll([D)Z: I28 Branch 43 IFEQ L406 - false
   * 5 gnu.trove.list.linked.TDoubleLinkedList.sum()D: I12 Branch 106 IFEQ L897 - true
   */

  @Test
  public void test65()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((-93.38697207814513));
      double[] doubleArray0 = new double[7];
      tDoubleLinkedList0.addAll(doubleArray0);
      double double0 = tDoubleLinkedList0.sum();
      assertEquals(false, tDoubleLinkedList0.isEmpty());
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 66
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 107 IFEQ L975 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 107 IFEQ L975 - true
   */

  @Test
  public void test66()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList(856.6867945272775);
      tDoubleLinkedList0.add(856.6867945272775);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null);
      PrintStream printStream0 = new PrintStream((OutputStream) bufferedOutputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) printStream0);
      tDoubleLinkedList0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(false, tDoubleLinkedList0.isEmpty());
      assertEquals("{856.6867945272775}", tDoubleLinkedList0.toString());
  }

  //Test case number: 67
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.equals(Ljava/lang/Object;)Z: I4 Branch 111 IF_ACMPNE L1009 - true
   * 2 gnu.trove.list.linked.TDoubleLinkedList.equals(Ljava/lang/Object;)Z: I10 Branch 112 IFNULL L1010 - false
   * 3 gnu.trove.list.linked.TDoubleLinkedList.equals(Ljava/lang/Object;)Z: I15 Branch 113 IF_ACMPEQ L1010 - false
   */

  @Test
  public void test67()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      boolean boolean0 = tDoubleLinkedList0.equals((Object) "pTU_?/");
      assertEquals(false, boolean0);
  }

  //Test case number: 68
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.equals(Ljava/lang/Object;)Z: I10 Branch 112 IFNULL L1010 - true
   * 2 gnu.trove.list.linked.TDoubleLinkedList.equals(Ljava/lang/Object;)Z: I4 Branch 111 IF_ACMPNE L1009 - true
   */

  @Test
  public void test68()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      boolean boolean0 = tDoubleLinkedList0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 69
  /*
   * 6 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.equals(Ljava/lang/Object;)Z: I15 Branch 113 IF_ACMPEQ L1010 - true
   * 2 gnu.trove.list.linked.TDoubleLinkedList.equals(Ljava/lang/Object;)Z: I31 Branch 114 IFEQ L1014 - true
   * 3 gnu.trove.list.linked.TDoubleLinkedList.equals(Ljava/lang/Object;)Z: I40 Branch 115 IF_ICMPEQ L1015 - true
   * 4 gnu.trove.list.linked.TDoubleLinkedList.equals(Ljava/lang/Object;)Z: I57 Branch 116 IFEQ L1019 - true
   * 5 gnu.trove.list.linked.TDoubleLinkedList.equals(Ljava/lang/Object;)Z: I4 Branch 111 IF_ACMPNE L1009 - false
   * 6 gnu.trove.list.linked.TDoubleLinkedList.equals(Ljava/lang/Object;)Z: I10 Branch 112 IFNULL L1010 - false
   */

  @Test
  public void test69()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList(0.0);
      TDoubleLinkedList tDoubleLinkedList1 = new TDoubleLinkedList(0.0);
      boolean boolean0 = tDoubleLinkedList0.equals((Object) tDoubleLinkedList1);
      assertEquals(0.0, tDoubleLinkedList1.getNoEntryValue(), 0.01D);
      assertEquals(true, boolean0);
  }

  //Test case number: 70
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.hashCode()I: I23 Branch 119 IFEQ L1034 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.<init>()V: root-Branch
   * 3 gnu.trove.list.linked.TDoubleLinkedList.hashCode()I: I23 Branch 119 IFEQ L1034 - true
   * 4 gnu.trove.list.linked.TDoubleLinkedList.add([D)V: I14 Branch 6 IF_ICMPGE L103 - true
   * 5 gnu.trove.list.linked.TDoubleLinkedList.add([D)V: I14 Branch 6 IF_ICMPGE L103 - false
   */

  @Test
  public void test70()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      double[] doubleArray0 = new double[3];
      tDoubleLinkedList0.add(doubleArray0);
      int int0 = tDoubleLinkedList0.hashCode();
      assertEquals(false, tDoubleLinkedList0.isEmpty());
      assertEquals(89373, int0);
  }

  //Test case number: 71
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.toString()Ljava/lang/String;: I16 Branch 120 IFEQ L1045 - true
   * 2 gnu.trove.list.linked.TDoubleLinkedList.<init>(D)V: root-Branch
   */

  @Test
  public void test71()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((double) 0);
      String string0 = tDoubleLinkedList0.toString();
      assertEquals("{}", string0);
      assertNotNull(string0);
      assertEquals(0.0, tDoubleLinkedList0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 72
  /*
   * 21 covered goals:
   * 1 gnu.trove.list.linked.TDoubleLinkedList.toString()Ljava/lang/String;: I32 Branch 121 IFEQ L1048 - false
   * 2 gnu.trove.list.linked.TDoubleLinkedList.iterator()Lgnu/trove/iterator/TDoubleIterator;: root-Branch
   * 3 gnu.trove.list.linked.TDoubleLinkedList.add(D)Z: I12 Branch 5 IFEQ L87 - true
   * 4 gnu.trove.list.linked.TDoubleLinkedList.add(D)Z: I12 Branch 5 IFEQ L87 - false
   * 5 gnu.trove.list.linked.TDoubleLinkedList.<init>(Lgnu/trove/list/TDoubleList;)V: I29 Branch 3 IFEQ L63 - true
   * 6 gnu.trove.list.linked.TDoubleLinkedList.<init>(Lgnu/trove/list/TDoubleList;)V: I29 Branch 3 IFEQ L63 - false
   * 7 gnu.trove.list.linked.TDoubleLinkedList.no(Ljava/lang/Object;)Z: I3 Branch 110 IFNONNULL L1004 - true
   * 8 gnu.trove.list.linked.TDoubleLinkedList.no(Ljava/lang/Object;)Z: I3 Branch 110 IFNONNULL L1004 - false
   * 9 gnu.trove.list.linked.TDoubleLinkedList.got(Ljava/lang/Object;)Z: I3 Branch 109 IFNULL L1000 - true
   * 10 gnu.trove.list.linked.TDoubleLinkedList.got(Ljava/lang/Object;)Z: I3 Branch 109 IFNULL L1000 - false
   * 11 gnu.trove.list.linked.TDoubleLinkedList.toString()Ljava/lang/String;: I16 Branch 120 IFEQ L1045 - true
   * 12 gnu.trove.list.linked.TDoubleLinkedList.toString()Ljava/lang/String;: I16 Branch 120 IFEQ L1045 - false
   * 13 gnu.trove.list.linked.TDoubleLinkedList.toString()Ljava/lang/String;: I32 Branch 121 IFEQ L1048 - true
   * 14 gnu.trove.list.linked.TDoubleLinkedList$TDoubleLink.setNext(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;)V: root-Branch
   * 15 gnu.trove.list.linked.TDoubleLinkedList$TDoubleLink.setPrevious(Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;)V: root-Branch
   * 16 gnu.trove.list.linked.TDoubleLinkedList$TDoubleLink.getValue()D: root-Branch
   * 17 gnu.trove.list.linked.TDoubleLinkedList$TDoubleLink.<init>(D)V: root-Branch
   * 18 gnu.trove.list.linked.TDoubleLinkedList$TDoubleLink.getNext()Lgnu/trove/list/linked/TDoubleLinkedList$TDoubleLink;: root-Branch
   * 19 gnu.trove.list.linked.TDoubleLinkedList$1.hasNext()Z: root-Branch
   * 20 gnu.trove.list.linked.TDoubleLinkedList$1.<init>(Lgnu/trove/list/linked/TDoubleLinkedList;)V: root-Branch
   * 21 gnu.trove.list.linked.TDoubleLinkedList$1.next()D: I5 Branch 1 IFEQ L819 - true
   */

  @Test
  public void test72()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      TUnmodifiableRandomAccessDoubleList tUnmodifiableRandomAccessDoubleList0 = new TUnmodifiableRandomAccessDoubleList((TDoubleList) tDoubleArrayList0);
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((TDoubleList) tUnmodifiableRandomAccessDoubleList0);
      String string0 = tDoubleLinkedList0.toString();
      assertEquals(6, tDoubleLinkedList0.size());
      assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}", string0);
      assertNotNull(string0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.set.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.hash.TObjectHash;
import gnu.trove.set.hash.TLinkedHashSet;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.NotSerializableException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.Collection;
import java.util.LinkedList;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TLinkedHashSetEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 18 covered goals:
   * 1 gnu.trove.set.hash.TLinkedHashSet$WriteProcedure.execute(I)Z: root-Branch
   * 2 gnu.trove.set.hash.TLinkedHashSet$WriteProcedure.getIoException()Ljava/io/IOException;: root-Branch
   * 3 gnu.trove.set.hash.TLinkedHashSet$WriteProcedure.<init>(Lgnu/trove/set/hash/TLinkedHashSet;Ljava/io/ObjectOutput;)V: root-Branch
   * 4 gnu.trove.set.hash.TLinkedHashSet.<init>(IF)V: root-Branch
   * 5 gnu.trove.set.hash.TLinkedHashSet.setUp(I)I: root-Branch
   * 6 gnu.trove.set.hash.TLinkedHashSet$1.<init>(Lgnu/trove/set/hash/TLinkedHashSet;I)V: root-Branch
   * 7 gnu.trove.set.hash.TLinkedHashSet$1.ensureCapacity(I)V: I6 Branch 1 IF_ICMPLE L83 - true
   * 8 gnu.trove.set.hash.TLinkedHashSet.add(Ljava/lang/Object;)Z: I9 Branch 4 IFGE L133 - true
   * 9 gnu.trove.set.hash.TLinkedHashSet.add(Ljava/lang/Object;)Z: I20 Branch 5 IFNE L137 - true
   * 10 gnu.trove.set.hash.TLinkedHashSet.rehash(I)V: I43 Branch 6 IFEQ L169 - true
   * 11 gnu.trove.set.hash.TLinkedHashSet.rehash(I)V: I43 Branch 6 IFEQ L169 - false
   * 12 gnu.trove.set.hash.TLinkedHashSet.rehash(I)V: I59 Branch 7 IF_ACMPEQ L172 - false
   * 13 gnu.trove.set.hash.TLinkedHashSet.rehash(I)V: I62 Branch 8 IF_ACMPNE L172 - true
   * 14 gnu.trove.set.hash.TLinkedHashSet.rehash(I)V: I74 Branch 9 IF_ACMPEQ L176 - false
   * 15 gnu.trove.set.hash.TLinkedHashSet.rehash(I)V: I77 Branch 10 IF_ACMPEQ L176 - false
   * 16 gnu.trove.set.hash.TLinkedHashSet.rehash(I)V: I87 Branch 11 IFGE L178 - true
   * 17 gnu.trove.set.hash.TLinkedHashSet.rehash(I)V: I110 Branch 12 IFNE L182 - true
   * 18 gnu.trove.set.hash.TLinkedHashSet.writeEntries(Ljava/io/ObjectOutput;)V: I14 Branch 13 IFNE L217 - false
   */

  @Test
  public void test0()  throws Throwable  {
      TLinkedHashSet<Object> tLinkedHashSet0 = new TLinkedHashSet<Object>((-641), (-641));
      Object object0 = new Object();
      tLinkedHashSet0.add(object0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      try {
        tLinkedHashSet0.writeExternal((ObjectOutput) objectOutputStream0);
        fail("Expecting exception: NotSerializableException");
      
      } catch(NotSerializableException e) {
         //
         // java.lang.Object
         //
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.set.hash.TLinkedHashSet.clear()V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TLinkedHashSet<Object> tLinkedHashSet0 = new TLinkedHashSet<Object>((-641), (-641));
      tLinkedHashSet0.clear();
      assertEquals("{}", tLinkedHashSet0.toString());
  }

  //Test case number: 2
  /*
   * 7 covered goals:
   * 1 gnu.trove.set.hash.TLinkedHashSet.removeAt(I)V: root-Branch
   * 2 gnu.trove.set.hash.TLinkedHashSet$2.remove()V: root-Branch
   * 3 gnu.trove.set.hash.TLinkedHashSet$2.next()Ljava/lang/Object;: root-Branch
   * 4 gnu.trove.set.hash.TLinkedHashSet.forEach(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   * 5 gnu.trove.set.hash.TLinkedHashSet.iterator()Lgnu/trove/iterator/hash/TObjectHashIterator;: root-Branch
   * 6 gnu.trove.set.hash.TLinkedHashSet$ForEachProcedure.<init>(Lgnu/trove/set/hash/TLinkedHashSet;[Ljava/lang/Object;Lgnu/trove/procedure/TObjectProcedure;)V: root-Branch
   * 7 gnu.trove.set.hash.TLinkedHashSet$2.<init>(Lgnu/trove/set/hash/TLinkedHashSet;Lgnu/trove/impl/hash/TObjectHash;)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TLinkedHashSet<Object> tLinkedHashSet0 = new TLinkedHashSet<Object>((-1650), (-1650));
      TLinkedHashSet<Object> tLinkedHashSet1 = new TLinkedHashSet<Object>((-1650), (-1650));
      tLinkedHashSet1.add((Object) tLinkedHashSet0);
      boolean boolean0 = tLinkedHashSet1.retainAll((Collection<?>) tLinkedHashSet0);
      assertEquals(7, tLinkedHashSet1.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 4 covered goals:
   * 1 gnu.trove.set.hash.TLinkedHashSet$ForEachProcedure.execute(I)Z: root-Branch
   * 2 gnu.trove.set.hash.TLinkedHashSet$1.ensureCapacity(I)V: I6 Branch 1 IF_ICMPLE L83 - false
   * 3 gnu.trove.set.hash.TLinkedHashSet.<init>(Ljava/util/Collection;)V: root-Branch
   * 4 gnu.trove.set.hash.TLinkedHashSet.<init>(I)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TLinkedHashSet<String> tLinkedHashSet0 = new TLinkedHashSet<String>(79);
      TLinkedHashSet<Object> tLinkedHashSet1 = new TLinkedHashSet<Object>((Collection<?>) tLinkedHashSet0);
      tLinkedHashSet1.add((Object) "{}");
      tLinkedHashSet1.toArray(tLinkedHashSet1._set);
      assertEquals(false, tLinkedHashSet1.isEmpty());
      assertEquals("{{}}", tLinkedHashSet1.toString());
  }

  //Test case number: 4
  /*
   * 9 covered goals:
   * 1 gnu.trove.set.hash.TLinkedHashSet.toString()Ljava/lang/String;: I23 Branch 3 IFEQ L110 - true
   * 2 gnu.trove.set.hash.TLinkedHashSet.iterator()Lgnu/trove/iterator/hash/TObjectHashIterator;: root-Branch
   * 3 gnu.trove.set.hash.TLinkedHashSet.toString()Ljava/lang/String;: I19 Branch 2 IFEQ L109 - true
   * 4 gnu.trove.set.hash.TLinkedHashSet.toString()Ljava/lang/String;: I19 Branch 2 IFEQ L109 - false
   * 5 gnu.trove.set.hash.TLinkedHashSet.toString()Ljava/lang/String;: I23 Branch 3 IFEQ L110 - false
   * 6 gnu.trove.set.hash.TLinkedHashSet$2.<init>(Lgnu/trove/set/hash/TLinkedHashSet;Lgnu/trove/impl/hash/TObjectHash;)V: root-Branch
   * 7 gnu.trove.set.hash.TLinkedHashSet$2.hasNext()Z: root-Branch
   * 8 gnu.trove.set.hash.TLinkedHashSet$2.next()Ljava/lang/Object;: root-Branch
   * 9 gnu.trove.set.hash.TLinkedHashSet.<init>()V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TLinkedHashSet<Object> tLinkedHashSet0 = new TLinkedHashSet<Object>();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      tLinkedHashSet0.add((Object) "[]");
      tLinkedHashSet0.add((Object) linkedList0);
      String string0 = tLinkedHashSet0.toString();
      assertEquals(false, tLinkedHashSet0.isEmpty());
      assertEquals("{[], []}", string0);
  }

  //Test case number: 5
  /*
   * 9 covered goals:
   * 1 gnu.trove.set.hash.TLinkedHashSet.add(Ljava/lang/Object;)Z: I9 Branch 4 IFGE L133 - false
   * 2 gnu.trove.set.hash.TLinkedHashSet.forEach(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   * 3 gnu.trove.set.hash.TLinkedHashSet.rehash(I)V: I43 Branch 6 IFEQ L169 - true
   * 4 gnu.trove.set.hash.TLinkedHashSet.rehash(I)V: I62 Branch 8 IF_ACMPNE L172 - true
   * 5 gnu.trove.set.hash.TLinkedHashSet.rehash(I)V: I74 Branch 9 IF_ACMPEQ L176 - false
   * 6 gnu.trove.set.hash.TLinkedHashSet.rehash(I)V: I77 Branch 10 IF_ACMPEQ L176 - false
   * 7 gnu.trove.set.hash.TLinkedHashSet.rehash(I)V: I87 Branch 11 IFGE L178 - true
   * 8 gnu.trove.set.hash.TLinkedHashSet.rehash(I)V: I110 Branch 12 IFNE L182 - true
   * 9 gnu.trove.set.hash.TLinkedHashSet$ForEachProcedure.<init>(Lgnu/trove/set/hash/TLinkedHashSet;[Ljava/lang/Object;Lgnu/trove/procedure/TObjectProcedure;)V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TLinkedHashSet<Object> tLinkedHashSet0 = new TLinkedHashSet<Object>((-1650), (-1650));
      TLinkedHashSet<Object> tLinkedHashSet1 = new TLinkedHashSet<Object>((-1650), (-1650));
      tLinkedHashSet1.add((Object) tLinkedHashSet0);
      boolean boolean0 = tLinkedHashSet1.add((Object) tLinkedHashSet0);
      assertEquals(false, tLinkedHashSet1.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * 1 gnu.trove.set.hash.TLinkedHashSet.rehash(I)V: I59 Branch 7 IF_ACMPEQ L172 - true
   * 2 gnu.trove.set.hash.TLinkedHashSet.<init>(IF)V: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TLinkedHashSet<Object> tLinkedHashSet0 = new TLinkedHashSet<Object>((-1650), (-1650));
      Object object0 = TObjectHash.FREE;
      // Undeclared exception!
      try {
        tLinkedHashSet0.add(object0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Iterating over empty location while rehashing
         //
      }
  }

  //Test case number: 7
  /*
   * 7 covered goals:
   * 1 gnu.trove.set.hash.TLinkedHashSet.rehash(I)V: I62 Branch 8 IF_ACMPNE L172 - false
   * 2 gnu.trove.set.hash.TLinkedHashSet.<init>()V: root-Branch
   * 3 gnu.trove.set.hash.TLinkedHashSet.rehash(I)V: I43 Branch 6 IFEQ L169 - false
   * 4 gnu.trove.set.hash.TLinkedHashSet.rehash(I)V: I59 Branch 7 IF_ACMPEQ L172 - false
   * 5 gnu.trove.set.hash.TLinkedHashSet.add(Ljava/lang/Object;)Z: I9 Branch 4 IFGE L133 - true
   * 6 gnu.trove.set.hash.TLinkedHashSet.add(Ljava/lang/Object;)Z: I20 Branch 5 IFNE L137 - true
   * 7 gnu.trove.set.hash.TLinkedHashSet$1.ensureCapacity(I)V: I6 Branch 1 IF_ICMPLE L83 - true
   */

  @Test
  public void test7()  throws Throwable  {
      TLinkedHashSet<Object> tLinkedHashSet0 = new TLinkedHashSet<Object>();
      Object object0 = TObjectHash.REMOVED;
      tLinkedHashSet0.add(object0);
      // Undeclared exception!
      try {
        tLinkedHashSet0.compact();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Iterating over empty location while rehashing
         //
      }
  }

  //Test case number: 8
  /*
   * 5 covered goals:
   * 1 gnu.trove.set.hash.TLinkedHashSet.writeEntries(Ljava/io/ObjectOutput;)V: I14 Branch 13 IFNE L217 - true
   * 2 gnu.trove.set.hash.TLinkedHashSet$WriteProcedure.<init>(Lgnu/trove/set/hash/TLinkedHashSet;Ljava/io/ObjectOutput;)V: root-Branch
   * 3 gnu.trove.set.hash.TLinkedHashSet.<init>(I)V: root-Branch
   * 4 gnu.trove.set.hash.TLinkedHashSet.setUp(I)I: root-Branch
   * 5 gnu.trove.set.hash.TLinkedHashSet$1.<init>(Lgnu/trove/set/hash/TLinkedHashSet;I)V: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TLinkedHashSet<String> tLinkedHashSet0 = new TLinkedHashSet<String>(79);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tLinkedHashSet0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(163, tLinkedHashSet0.capacity());
  }
}

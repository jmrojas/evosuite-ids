/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedLongList;
import gnu.trove.impl.sync.TSynchronizedRandomAccessLongList;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessLongList;
import gnu.trove.list.TLongList;
import gnu.trove.list.array.TLongArrayList;
import gnu.trove.list.linked.TLongLinkedList;
import gnu.trove.procedure.TLongProcedure;
import java.util.Random;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableLongListEvoSuite_StrongMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 9 covered goals:
   * 1 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.equals(Ljava/lang/Object;)Z:62 - DeleteField: listLgnu/trove/list/TLongList;
   * 2 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.<init>(Lgnu/trove/list/TLongList;)V:59 - ReplaceVariable list -> list
   * 3 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.equals(Ljava/lang/Object;)Z:62 - ReplaceComparisonOperator == -> !=
   * 4 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.equals(Ljava/lang/Object;)Z:62 - DeleteField: listLgnu/trove/list/TLongList;
   * 5 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.equals(Ljava/lang/Object;)Z:62 - ReplaceComparisonOperator == -> !=
   * 6 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.equals(Ljava/lang/Object;)Z:62 - ReplaceConstant - 0 -> 1
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableLongList.<init>(Lgnu/trove/list/TLongList;)V: root-Branch
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableLongList.equals(Ljava/lang/Object;)Z: I4 Branch 1 IF_ACMPEQ L62 - false
   * 9 gnu.trove.impl.unmodifiable.TUnmodifiableLongList.equals(Ljava/lang/Object;)Z: I9 Branch 2 IFEQ L62 - true
   */

  @Test
  public void test0()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[0] = 1L;
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList((TLongList) tLongArrayList0);
      tUnmodifiableRandomAccessLongList0.equals((Object) "TWN");
      longArray0[0] = (long) 0;
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.equals(Ljava/lang/Object;)Z:62 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 2 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.equals(Ljava/lang/Object;)Z:62 - DeleteStatement: equals(Ljava/lang/Object;)Z
   */

  @Test
  public void test1()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tLongArrayList0);
      boolean boolean0 = tUnmodifiableLongList0.equals((Object) null);
      assertEquals(false, boolean0);
      
      TUnmodifiableLongList tUnmodifiableLongList1 = new TUnmodifiableLongList((TLongList) tUnmodifiableLongList0);
      assertTrue(tUnmodifiableLongList1.equals(tUnmodifiableLongList0));
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.equals(Ljava/lang/Object;)Z:62 - ReplaceConstant - 0 -> 1
   * 2 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.equals(Ljava/lang/Object;)Z:62 - ReplaceComparisonOperator == -> !=
   * 3 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.equals(Ljava/lang/Object;)Z:62 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test2()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tLongArrayList0);
      boolean boolean0 = tUnmodifiableLongList0.equals((Object) "/mnt/fastdata/ac1gf/Experiments_Major/apps/trove-3.0.2/Lmy/Lmy");
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * 1 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.hashCode()I:63 - DeleteStatement: hashCode()I
   * 2 Strong Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.hashCode()I:63 - DeleteField: listLgnu/trove/list/TLongList;
   * 3 Strong Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.hashCode()I:63 - DeleteField: listLgnu/trove/list/TLongList;
   * 4 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.hashCode()I:63 - DeleteStatement: hashCode()I
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableLongList.hashCode()I: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tLongArrayList0);
      Random random0 = new Random();
      int int0 = tUnmodifiableLongList0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * 1 Strong Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.get(I)J:65 - InsertUnaryOp IINC 1 index
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableLongList.get(I)J: root-Branch
   * 3 Strong Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.get(I)J:65 - InsertUnaryOp IINC 1 index
   */

  @Test
  public void test4()  throws Throwable  {
      long[] longArray0 = new long[2];
      longArray0[0] = (-153L);
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      TSynchronizedRandomAccessLongList tSynchronizedRandomAccessLongList0 = new TSynchronizedRandomAccessLongList((TLongList) tLongArrayList0, (Object) (-153L));
      TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tSynchronizedRandomAccessLongList0);
      long long0 = tUnmodifiableLongList0.get(0);
      assertEquals((-153L), long0);
  }

  //Test case number: 5
  /*
   * 9 covered goals:
   * 1 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.indexOf(J)I:66 - InsertUnaryOp Negation of o
   * 2 Strong Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.indexOf(J)I:66 - DeleteField: listLgnu/trove/list/TLongList;
   * 3 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.indexOf(J)I:66 - ReplaceVariable o -> serialVersionUID
   * 4 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.indexOf(J)I:66 - DeleteStatement: indexOf(J)I
   * 5 Strong Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.indexOf(J)I:66 - DeleteField: listLgnu/trove/list/TLongList;
   * 6 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.indexOf(J)I:66 - ReplaceVariable o -> serialVersionUID
   * 7 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.indexOf(J)I:66 - DeleteStatement: indexOf(J)I
   * 8 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.indexOf(J)I:66 - InsertUnaryOp Negation of o
   * 9 gnu.trove.impl.unmodifiable.TUnmodifiableLongList.indexOf(J)I: root-Branch
   */

//   @Test
//   public void test5()  throws Throwable  {
//       TLongArrayList tLongArrayList0 = new TLongArrayList();
//       TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tLongArrayList0);
//       Random random0 = new Random();
//       assertEquals(0.44061482F, random0.nextFloat(), 0.01F);
//       
//       int int0 = tUnmodifiableLongList0.indexOf((-379L));
//       assertEquals((-1), int0);
//   }

  //Test case number: 6
  /*
   * 4 covered goals:
   * 1 Strong Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.lastIndexOf(J)I:67 - DeleteField: listLgnu/trove/list/TLongList;
   * 2 Strong Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.lastIndexOf(J)I:67 - DeleteField: listLgnu/trove/list/TLongList;
   * 3 Strong Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.lastIndexOf(J)I:67 - DeleteStatement: lastIndexOf(J)I
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableLongList.lastIndexOf(J)I: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[2] = 0L;
      TLongArrayList tLongArrayList0 = new TLongArrayList(500);
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList((TLongList) tLongArrayList0);
      tUnmodifiableRandomAccessLongList0.lastIndexOf((long) 500);
      longArray0[2] = (-1L);
  }

  //Test case number: 7
  /*
   * 5 covered goals:
   * 1 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.lastIndexOf(J)I:67 - InsertUnaryOp Negation of o
   * 2 Strong Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.lastIndexOf(J)I:67 - ReplaceVariable o -> serialVersionUID
   * 3 Strong Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.lastIndexOf(J)I:67 - DeleteStatement: lastIndexOf(J)I
   * 4 Strong Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.lastIndexOf(J)I:67 - ReplaceVariable o -> serialVersionUID
   * 5 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.lastIndexOf(J)I:67 - InsertUnaryOp Negation of o
   */

//   @Test
//   public void test7()  throws Throwable  {
//       TLongLinkedList tLongLinkedList0 = new TLongLinkedList();
//       TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList((TLongList) tLongLinkedList0);
//       tUnmodifiableRandomAccessLongList0.lastIndexOf((long) 0);
//       Random random0 = new Random();
//       assertEquals((-1.5353276555876079), random0.nextGaussian(), 0.01D);
//   }

  //Test case number: 8
  /*
   * 19 covered goals:
   * 1 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray(II)[J:70 - InsertUnaryOp IINC -1 len
   * 2 Strong Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray(II)[J:70 - ReplaceVariable offset -> len
   * 3 Strong Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray(II)[J:70 - DeleteField: listLgnu/trove/list/TLongList;
   * 4 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray(II)[J:70 - InsertUnaryOp IINC 1 offset
   * 5 Strong Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray(II)[J:70 - InsertUnaryOp Negation of offset
   * 6 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray(II)[J:70 - ReplaceVariable len -> offset
   * 7 Strong Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray(II)[J:70 - InsertUnaryOp IINC -1 offset
   * 8 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray(II)[J:70 - InsertUnaryOp IINC 1 len
   * 9 Strong Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray(II)[J:70 - InsertUnaryOp Negation of len
   * 10 Strong Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray(II)[J:70 - ReplaceVariable offset -> len
   * 11 Strong Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray(II)[J:70 - DeleteField: listLgnu/trove/list/TLongList;
   * 12 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray(II)[J:70 - InsertUnaryOp IINC 1 offset
   * 13 Strong Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray(II)[J:70 - InsertUnaryOp Negation of offset
   * 14 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray(II)[J:70 - ReplaceVariable len -> offset
   * 15 Strong Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray(II)[J:70 - InsertUnaryOp IINC -1 offset
   * 16 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray(II)[J:70 - InsertUnaryOp IINC 1 len
   * 17 Strong Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray(II)[J:70 - InsertUnaryOp Negation of len
   * 18 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray(II)[J:70 - InsertUnaryOp IINC -1 len
   * 19 gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray(II)[J: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList((TLongList) tLongArrayList0);
      Random random0 = new Random();
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessLongList0.toArray(272322373, (-591));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 6 covered goals:
   * 1 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JII)[J:73 - ReplaceVariable len -> offset
   * 2 Strong Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JII)[J:73 - DeleteField: listLgnu/trove/list/TLongList;
   * 3 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JII)[J:73 - InsertUnaryOp IINC 1 len
   * 4 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JII)[J:73 - ReplaceVariable len -> offset
   * 5 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JII)[J:73 - InsertUnaryOp IINC -1 len
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JII)[J: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(1735);
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList((TLongList) tLongArrayList0);
      long[] longArray0 = new long[8];
      long[] longArray1 = tUnmodifiableRandomAccessLongList0.toArray(longArray0, (-1940), 0);
      assertSame(longArray0, longArray1);
  }

  //Test case number: 10
  /*
   * 12 covered goals:
   * 1 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JII)[J:73 - DeleteStatement: toArray([JII)[J
   * 2 Strong Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JII)[J:73 - InsertUnaryOp Negation of offset
   * 3 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JII)[J:73 - InsertUnaryOp IINC 1 offset
   * 4 Strong Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JII)[J:73 - DeleteField: listLgnu/trove/list/TLongList;
   * 5 Strong Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JII)[J:73 - InsertUnaryOp Negation of len
   * 6 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JII)[J:73 - InsertUnaryOp IINC 1 len
   * 7 Strong Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JII)[J:73 - InsertUnaryOp IINC -1 offset
   * 8 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JII)[J:73 - InsertUnaryOp IINC -1 len
   * 9 Strong Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JII)[J:73 - InsertUnaryOp Negation of offset
   * 10 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JII)[J:73 - InsertUnaryOp IINC 1 offset
   * 11 Strong Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JII)[J:73 - InsertUnaryOp Negation of len
   * 12 Strong Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JII)[J:73 - InsertUnaryOp IINC -1 offset
   */

  @Test
  public void test10()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList((TLongList) tLongArrayList0);
      Random random0 = new Random();
      long[] longArray0 = new long[6];
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessLongList0.toArray(longArray0, 630, 630);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 630
         //
      }
  }

  //Test case number: 11
  /*
   * 3 covered goals:
   * 1 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JIII)[J:76 - ReplaceVariable source_pos -> len
   * 2 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JIII)[J:76 - ReplaceVariable source_pos -> dest_pos
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JIII)[J: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      long[] longArray0 = new long[10];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList((TLongList) tLongArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessLongList0.toArray(longArray0, 1991, 1, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1991
         //
      }
  }

  //Test case number: 12
  /*
   * 2 covered goals:
   * 1 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JIII)[J:76 - ReplaceVariable dest_pos -> len
   * 2 Strong Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JIII)[J:76 - ReplaceVariable dest_pos -> source_pos
   */

  @Test
  public void test12()  throws Throwable  {
      long[] longArray0 = new long[9];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0, 0L);
      TSynchronizedLongList tSynchronizedLongList0 = new TSynchronizedLongList((TLongList) tLongArrayList0);
      TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tSynchronizedLongList0);
      // Undeclared exception!
      try {
        tUnmodifiableLongList0.toArray(longArray0, 0, 1640, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 13
  /*
   * 5 covered goals:
   * 1 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JIII)[J:76 - ReplaceVariable len -> dest_pos
   * 2 Strong Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JIII)[J:76 - ReplaceVariable len -> source_pos
   * 3 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JIII)[J:76 - DeleteField: listLgnu/trove/list/TLongList;
   * 4 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JIII)[J:76 - ReplaceVariable len -> dest_pos
   * 5 Strong Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JIII)[J:76 - InsertUnaryOp IINC 1 len
   */

  @Test
  public void test13()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList((TLongList) tLongArrayList0);
      long[] longArray0 = new long[9];
      long[] longArray1 = tUnmodifiableRandomAccessLongList0.toArray(longArray0, Integer.MIN_VALUE, Integer.MIN_VALUE, 0);
      assertSame(longArray1, longArray0);
  }

  //Test case number: 14
  /*
   * 4 covered goals:
   * 1 Strong Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JIII)[J:76 - InsertUnaryOp IINC 1 len
   * 2 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JIII)[J:76 - DeleteField: listLgnu/trove/list/TLongList;
   * 3 Strong Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JIII)[J:76 - DeleteStatement: toArray([JIII)[J
   * 4 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.toArray([JIII)[J:76 - InsertUnaryOp IINC -1 len
   */

  @Test
  public void test14()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tLongArrayList0);
      long[] longArray0 = new long[6];
      long[] longArray1 = tUnmodifiableLongList0.toArray(longArray0, 0, 0, 0);
      assertSame(longArray1, longArray0);
  }

  //Test case number: 15
  /*
   * 3 covered goals:
   * 1 Strong Mutation 60: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.forEachDescending(Lgnu/trove/procedure/TLongProcedure;)Z:80 - DeleteStatement: forEachDescending(Lgnu/trove/procedure/TLongProcedure;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableLongList.forEachDescending(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   * 3 Strong Mutation 60: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.forEachDescending(Lgnu/trove/procedure/TLongProcedure;)Z:80 - DeleteStatement: forEachDescending(Lgnu/trove/procedure/TLongProcedure;)Z
   */

  @Test
  public void test15()  throws Throwable  {
      TLongLinkedList tLongLinkedList0 = new TLongLinkedList();
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList((TLongList) tLongLinkedList0);
      boolean boolean0 = tUnmodifiableRandomAccessLongList0.forEachDescending((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 16
  /*
   * 8 covered goals:
   * 1 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(J)I:83 - DeleteField: listLgnu/trove/list/TLongList;
   * 2 Strong Mutation 63: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(J)I:83 - InsertUnaryOp Negation of value
   * 3 Strong Mutation 62: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(J)I:83 - ReplaceVariable value -> serialVersionUID
   * 4 Strong Mutation 63: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(J)I:83 - InsertUnaryOp Negation of value
   * 5 Strong Mutation 62: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(J)I:83 - ReplaceVariable value -> serialVersionUID
   * 6 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(J)I:83 - DeleteField: listLgnu/trove/list/TLongList;
   * 7 Strong Mutation 64: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(J)I:83 - DeleteStatement: binarySearch(J)I
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(J)I: root-Branch
   */

//   @Test
//   public void test16()  throws Throwable  {
//       TLongArrayList tLongArrayList0 = new TLongArrayList();
//       TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tLongArrayList0);
//       Random random0 = new Random();
//       assertEquals(0.7597025F, random0.nextFloat(), 0.01F);
//       
//       int int0 = tUnmodifiableLongList0.binarySearch(0L);
//       assertEquals((-1), int0);
//   }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 Strong Mutation 64: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(J)I:83 - DeleteStatement: binarySearch(J)I
   */

  @Test
  public void test17()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tLongArrayList0);
      int int0 = tUnmodifiableLongList0.binarySearch(0L);
      assertEquals((-1), int0);
  }

  //Test case number: 18
  /*
   * 4 covered goals:
   * 1 Strong Mutation 68: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(JII)I:85 - ReplaceVariable fromIndex -> toIndex
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(JII)I: root-Branch
   * 3 Strong Mutation 68: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(JII)I:85 - ReplaceVariable fromIndex -> toIndex
   * 4 Strong Mutation 71: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(JII)I:85 - InsertUnaryOp IINC -1 fromIndex
   */

  @Test
  public void test18()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(742, 1878L);
      TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tLongArrayList0);
      int int0 = tUnmodifiableLongList0.binarySearch((long) 742, 742, 0);
      assertEquals((-743), int0);
  }

  //Test case number: 19
  /*
   * 6 covered goals:
   * 1 Strong Mutation 65: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(JII)I:85 - DeleteField: listLgnu/trove/list/TLongList;
   * 2 Strong Mutation 71: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(JII)I:85 - InsertUnaryOp IINC -1 fromIndex
   * 3 Strong Mutation 65: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(JII)I:85 - DeleteField: listLgnu/trove/list/TLongList;
   * 4 Strong Mutation 66: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(JII)I:85 - ReplaceVariable value -> serialVersionUID
   * 5 Strong Mutation 67: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(JII)I:85 - InsertUnaryOp Negation of value
   * 6 Strong Mutation 74: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(JII)I:85 - InsertUnaryOp IINC 1 toIndex
   */

  @Test
  public void test19()  throws Throwable  {
      long[] longArray0 = new long[8];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      Random random0 = new Random();
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList((TLongList) tLongArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessLongList0.binarySearch((-752L), 598, 598);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 598
         //
      }
  }

  //Test case number: 20
  /*
   * 4 covered goals:
   * 1 Strong Mutation 74: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(JII)I:85 - InsertUnaryOp IINC 1 toIndex
   * 2 Strong Mutation 70: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(JII)I:85 - InsertUnaryOp IINC 1 fromIndex
   * 3 Strong Mutation 66: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(JII)I:85 - ReplaceVariable value -> serialVersionUID
   * 4 Strong Mutation 67: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.binarySearch(JII)I:85 - InsertUnaryOp Negation of value
   */

//   @Test
//   public void test20()  throws Throwable  {
//       TLongArrayList tLongArrayList0 = new TLongArrayList();
//       TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList((TLongList) tLongArrayList0);
//       tUnmodifiableRandomAccessLongList0.binarySearch(535L, 0, (-550));
//       Random random0 = new Random();
//       assertEquals(0.80767685F, random0.nextFloat(), 0.01F);
//   }

  //Test case number: 21
  /*
   * 7 covered goals:
   * 1 Strong Mutation 80: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.indexOf(IJ)I:88 - InsertUnaryOp IINC -1 offset
   * 2 Strong Mutation 77: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.indexOf(IJ)I:88 - DeleteField: listLgnu/trove/list/TLongList;
   * 3 Strong Mutation 77: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.indexOf(IJ)I:88 - DeleteField: listLgnu/trove/list/TLongList;
   * 4 Strong Mutation 81: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.indexOf(IJ)I:88 - ReplaceVariable value -> serialVersionUID
   * 5 Strong Mutation 80: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.indexOf(IJ)I:88 - InsertUnaryOp IINC -1 offset
   * 6 Strong Mutation 82: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.indexOf(IJ)I:88 - InsertUnaryOp Negation of value
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableLongList.indexOf(IJ)I: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList((TLongList) tLongArrayList0);
      Random random0 = new Random();
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessLongList0.indexOf((-1), (-460L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
      }
  }

  //Test case number: 22
  /*
   * 4 covered goals:
   * 1 Strong Mutation 82: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.indexOf(IJ)I:88 - InsertUnaryOp Negation of value
   * 2 Strong Mutation 79: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.indexOf(IJ)I:88 - InsertUnaryOp IINC 1 offset
   * 3 Strong Mutation 81: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.indexOf(IJ)I:88 - ReplaceVariable value -> serialVersionUID
   * 4 Strong Mutation 83: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.indexOf(IJ)I:88 - DeleteStatement: indexOf(IJ)I
   */

//   @Test
//   public void test22()  throws Throwable  {
//       TLongArrayList tLongArrayList0 = new TLongArrayList();
//       TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tLongArrayList0);
//       tUnmodifiableLongList0.indexOf(0, 0);
//       Random random0 = new Random();
//       assertEquals((-3758426232482013459L), random0.nextLong());
//   }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 Strong Mutation 84: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.lastIndexOf(IJ)I:89 - DeleteField: listLgnu/trove/list/TLongList;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableLongList.lastIndexOf(IJ)I: root-Branch
   * 3 Strong Mutation 84: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.lastIndexOf(IJ)I:89 - DeleteField: listLgnu/trove/list/TLongList;
   */

  @Test
  public void test23()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[0] = 1L;
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList((TLongList) tLongArrayList0);
      tUnmodifiableRandomAccessLongList0.lastIndexOf(0, (-747L));
      longArray0[0] = (long) 0;
  }

  //Test case number: 24
  /*
   * 8 covered goals:
   * 1 Strong Mutation 88: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.lastIndexOf(IJ)I:89 - ReplaceVariable value -> serialVersionUID
   * 2 Strong Mutation 87: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.lastIndexOf(IJ)I:89 - InsertUnaryOp IINC -1 offset
   * 3 Strong Mutation 86: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.lastIndexOf(IJ)I:89 - InsertUnaryOp IINC 1 offset
   * 4 Strong Mutation 89: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.lastIndexOf(IJ)I:89 - InsertUnaryOp Negation of value
   * 5 Strong Mutation 87: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.lastIndexOf(IJ)I:89 - InsertUnaryOp IINC -1 offset
   * 6 Strong Mutation 86: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.lastIndexOf(IJ)I:89 - InsertUnaryOp IINC 1 offset
   * 7 Strong Mutation 89: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.lastIndexOf(IJ)I:89 - InsertUnaryOp Negation of value
   * 8 Strong Mutation 88: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.lastIndexOf(IJ)I:89 - ReplaceVariable value -> serialVersionUID
   */

//   @Test
//   public void test24()  throws Throwable  {
//       TLongArrayList tLongArrayList0 = new TLongArrayList();
//       TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tLongArrayList0);
//       tUnmodifiableLongList0.lastIndexOf(0, 908L);
//       Random random0 = new Random();
//       assertEquals(0.32004583F, random0.nextFloat(), 0.01F);
//   }

  //Test case number: 25
  /*
   * 5 covered goals:
   * 1 Strong Mutation 91: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.grep(Lgnu/trove/procedure/TLongProcedure;)Lgnu/trove/list/TLongList;:90 - DeleteField: listLgnu/trove/list/TLongList;
   * 2 Strong Mutation 92: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.grep(Lgnu/trove/procedure/TLongProcedure;)Lgnu/trove/list/TLongList;:90 - DeleteStatement: grep(Lgnu/trove/procedure/TLongProcedure;)Lgnu/trove/list/TLongList;
   * 3 Strong Mutation 92: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.grep(Lgnu/trove/procedure/TLongProcedure;)Lgnu/trove/list/TLongList;:90 - DeleteStatement: grep(Lgnu/trove/procedure/TLongProcedure;)Lgnu/trove/list/TLongList;
   * 4 Strong Mutation 91: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.grep(Lgnu/trove/procedure/TLongProcedure;)Lgnu/trove/list/TLongList;:90 - DeleteField: listLgnu/trove/list/TLongList;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableLongList.grep(Lgnu/trove/procedure/TLongProcedure;)Lgnu/trove/list/TLongList;: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList((TLongList) tLongArrayList0);
      TLongArrayList tLongArrayList1 = (TLongArrayList)tUnmodifiableRandomAccessLongList0.grep((TLongProcedure) null);
      assertEquals(true, tLongArrayList1.isEmpty());
  }

  //Test case number: 26
  /*
   * 5 covered goals:
   * 1 Strong Mutation 94: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.inverseGrep(Lgnu/trove/procedure/TLongProcedure;)Lgnu/trove/list/TLongList;:91 - DeleteStatement: inverseGrep(Lgnu/trove/procedure/TLongProcedure;)Lgnu/trove/list/TLongList;
   * 2 Strong Mutation 93: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.inverseGrep(Lgnu/trove/procedure/TLongProcedure;)Lgnu/trove/list/TLongList;:91 - DeleteField: listLgnu/trove/list/TLongList;
   * 3 Strong Mutation 93: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.inverseGrep(Lgnu/trove/procedure/TLongProcedure;)Lgnu/trove/list/TLongList;:91 - DeleteField: listLgnu/trove/list/TLongList;
   * 4 Strong Mutation 94: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.inverseGrep(Lgnu/trove/procedure/TLongProcedure;)Lgnu/trove/list/TLongList;:91 - DeleteStatement: inverseGrep(Lgnu/trove/procedure/TLongProcedure;)Lgnu/trove/list/TLongList;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableLongList.inverseGrep(Lgnu/trove/procedure/TLongProcedure;)Lgnu/trove/list/TLongList;: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tLongArrayList0);
      TLongArrayList tLongArrayList1 = (TLongArrayList)tUnmodifiableLongList0.inverseGrep((TLongProcedure) null);
      assertNotSame(tLongArrayList0, tLongArrayList1);
  }

  //Test case number: 27
  /*
   * 4 covered goals:
   * 1 Strong Mutation 96: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.max()J:93 - DeleteStatement: max()J
   * 2 Strong Mutation 95: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.max()J:93 - DeleteField: listLgnu/trove/list/TLongList;
   * 3 Strong Mutation 95: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.max()J:93 - DeleteField: listLgnu/trove/list/TLongList;
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableLongList.max()J: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList((TLongList) tLongArrayList0);
      Random random0 = new Random();
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessLongList0.max();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // cannot find maximum of an empty list
         //
      }
  }

  //Test case number: 28
  /*
   * 3 covered goals:
   * 1 Strong Mutation 98: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.min()J:94 - DeleteStatement: min()J
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableLongList.min()J: root-Branch
   * 3 Strong Mutation 98: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.min()J:94 - DeleteStatement: min()J
   */

  @Test
  public void test28()  throws Throwable  {
      long[] longArray0 = new long[7];
      longArray0[0] = (-9223372036854775808L);
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0, (-1773L));
      TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tLongArrayList0);
      long long0 = tUnmodifiableLongList0.min();
      assertEquals((-9223372036854775808L), long0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 Strong Mutation 97: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.min()J:94 - DeleteField: listLgnu/trove/list/TLongList;
   * 2 Strong Mutation 97: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.min()J:94 - DeleteField: listLgnu/trove/list/TLongList;
   */

  @Test
  public void test29()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[6] = 1635L;
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tLongArrayList0);
      tUnmodifiableLongList0.min();
      longArray0[6] = 0L;
  }

  //Test case number: 30
  /*
   * 5 covered goals:
   * 1 Strong Mutation 99: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.sum()J:95 - DeleteField: listLgnu/trove/list/TLongList;
   * 2 Strong Mutation 100: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.sum()J:95 - DeleteStatement: sum()J
   * 3 Strong Mutation 100: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.sum()J:95 - DeleteStatement: sum()J
   * 4 Strong Mutation 99: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.sum()J:95 - DeleteField: listLgnu/trove/list/TLongList;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableLongList.sum()J: root-Branch
   */

  @Test
  public void test30()  throws Throwable  {
      long[] longArray0 = new long[10];
      longArray0[1] = 1L;
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList((TLongList) tLongArrayList0);
      tUnmodifiableRandomAccessLongList0.sum();
      longArray0[1] = (-549L);
  }

  //Test case number: 31
  /*
   * 12 covered goals:
   * 1 Strong Mutation 107: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.subList(II)Lgnu/trove/list/TLongList;:98 - InsertUnaryOp Negation of toIndex
   * 2 Strong Mutation 102: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.subList(II)Lgnu/trove/list/TLongList;:98 - ReplaceVariable fromIndex -> toIndex
   * 3 Strong Mutation 103: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.subList(II)Lgnu/trove/list/TLongList;:98 - InsertUnaryOp Negation of fromIndex
   * 4 Strong Mutation 102: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.subList(II)Lgnu/trove/list/TLongList;:98 - ReplaceVariable fromIndex -> toIndex
   * 5 Strong Mutation 103: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.subList(II)Lgnu/trove/list/TLongList;:98 - InsertUnaryOp Negation of fromIndex
   * 6 Strong Mutation 101: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.subList(II)Lgnu/trove/list/TLongList;:98 - DeleteField: listLgnu/trove/list/TLongList;
   * 7 Strong Mutation 110: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.subList(II)Lgnu/trove/list/TLongList;:98 - DeleteStatement: subList(II)Lgnu/trove/list/TLongList;
   * 8 Strong Mutation 108: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.subList(II)Lgnu/trove/list/TLongList;:98 - InsertUnaryOp IINC 1 toIndex
   * 9 Strong Mutation 107: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.subList(II)Lgnu/trove/list/TLongList;:98 - InsertUnaryOp Negation of toIndex
   * 10 Strong Mutation 104: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.subList(II)Lgnu/trove/list/TLongList;:98 - InsertUnaryOp IINC 1 fromIndex
   * 11 Strong Mutation 105: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.subList(II)Lgnu/trove/list/TLongList;:98 - InsertUnaryOp IINC -1 fromIndex
   * 12 gnu.trove.impl.unmodifiable.TUnmodifiableLongList.subList(II)Lgnu/trove/list/TLongList;: root-Branch
   */

  @Test
  public void test31()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tLongArrayList0);
      Random random0 = new Random();
      // Undeclared exception!
      try {
        tUnmodifiableLongList0.subList((-1850), 1265);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  //Test case number: 32
  /*
   * 5 covered goals:
   * 1 Strong Mutation 105: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.subList(II)Lgnu/trove/list/TLongList;:98 - InsertUnaryOp IINC -1 fromIndex
   * 2 Strong Mutation 101: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.subList(II)Lgnu/trove/list/TLongList;:98 - DeleteField: listLgnu/trove/list/TLongList;
   * 3 Strong Mutation 110: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.subList(II)Lgnu/trove/list/TLongList;:98 - DeleteStatement: subList(II)Lgnu/trove/list/TLongList;
   * 4 Strong Mutation 108: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.subList(II)Lgnu/trove/list/TLongList;:98 - InsertUnaryOp IINC 1 toIndex
   * 5 Strong Mutation 104: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.subList(II)Lgnu/trove/list/TLongList;:98 - InsertUnaryOp IINC 1 fromIndex
   */

  @Test
  public void test32()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tLongArrayList0);
      TUnmodifiableLongList tUnmodifiableLongList1 = (TUnmodifiableLongList)tUnmodifiableLongList0.subList(0, 0);
      assertNotNull(tUnmodifiableLongList1);
      assertEquals(0, tUnmodifiableLongList1.size());
  }

  //Test case number: 33
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongList.shuffle(Ljava/util/Random;)V: root-Branch
   * 2 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableLongList.<init>(Lgnu/trove/list/TLongList;)V:59 - ReplaceVariable list -> list
   */

  @Test
  public void test33()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList((TLongList) tLongArrayList0);
      Random random0 = new Random();
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessLongList0.shuffle(random0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TShortCollection;
import gnu.trove.impl.sync.TSynchronizedShortSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessShortList;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortSet;
import gnu.trove.list.TShortList;
import gnu.trove.list.array.TShortArrayList;
import gnu.trove.list.linked.TShortLinkedList;
import gnu.trove.procedure.TShortProcedure;
import gnu.trove.set.TShortSet;
import gnu.trove.set.hash.TShortHashSet;
import java.util.Collection;
import java.util.LinkedList;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableShortCollectionEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 9 covered goals:
   * 1 Weak Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.isEmpty()Z:64 - DeleteField: cLgnu/trove/TShortCollection;
   * 2 Weak Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.isEmpty()Z: root-Branch
   * 4 Weak Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.<init>(Lgnu/trove/TShortCollection;)V:58 - ReplaceVariable c -> c
   * 5 Weak Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.<init>(Lgnu/trove/TShortCollection;)V:58 - ReplaceComparisonOperator != null -> = null
   * 6 Weak Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.<init>(Lgnu/trove/TShortCollection;)V:60 - ReplaceVariable c -> c
   * 7 Weak Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.isEmpty()Z:64 - DeleteField: cLgnu/trove/TShortCollection;
   * 8 Weak Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   * 9 gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.<init>(Lgnu/trove/TShortCollection;)V: I7 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList();
      TUnmodifiableShortCollection tUnmodifiableShortCollection0 = new TUnmodifiableShortCollection((TShortCollection) tShortArrayList0);
      boolean boolean0 = tUnmodifiableShortCollection0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 11 covered goals:
   * 1 Weak Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.contains(S)Z:65 - DeleteField: cLgnu/trove/TShortCollection;
   * 2 Weak Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.contains(S)Z:65 - InsertUnaryOp Negation of o
   * 3 Weak Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.contains(S)Z:65 - InsertUnaryOp IINC 1 o
   * 4 Weak Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.contains(S)Z:65 - InsertUnaryOp IINC -1 o
   * 5 Weak Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.contains(S)Z:65 - DeleteStatement: contains(S)Z
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.contains(S)Z: root-Branch
   * 7 Weak Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.contains(S)Z:65 - DeleteField: cLgnu/trove/TShortCollection;
   * 8 Weak Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.contains(S)Z:65 - InsertUnaryOp Negation of o
   * 9 Weak Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.contains(S)Z:65 - InsertUnaryOp IINC 1 o
   * 10 Weak Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.contains(S)Z:65 - InsertUnaryOp IINC -1 o
   * 11 Weak Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.contains(S)Z:65 - DeleteStatement: contains(S)Z
   */

  @Test
  public void test1()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList();
      TUnmodifiableShortCollection tUnmodifiableShortCollection0 = new TUnmodifiableShortCollection((TShortCollection) tShortArrayList0);
      boolean boolean0 = tUnmodifiableShortCollection0.contains((short) (-649));
      assertEquals(false, boolean0);
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * 1 Weak Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.toArray()[S:66 - DeleteStatement: toArray()[S
   * 2 Weak Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.toArray()[S:66 - DeleteField: cLgnu/trove/TShortCollection;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.toArray()[S: root-Branch
   * 4 Weak Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.toArray()[S:66 - DeleteStatement: toArray()[S
   * 5 Weak Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.toArray()[S:66 - DeleteField: cLgnu/trove/TShortCollection;
   */

  @Test
  public void test2()  throws Throwable  {
      short[] shortArray0 = new short[4];
      TShortArrayList tShortArrayList0 = TShortArrayList.wrap(shortArray0);
      TUnmodifiableShortCollection tUnmodifiableShortCollection0 = new TUnmodifiableShortCollection((TShortCollection) tShortArrayList0);
      short[] shortArray1 = tUnmodifiableShortCollection0.toArray();
      assertFalse(shortArray0.equals(shortArray1));
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * 1 Weak Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.toArray([S)[S:67 - DeleteStatement: toArray([S)[S
   * 2 Weak Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.toArray([S)[S:67 - DeleteField: cLgnu/trove/TShortCollection;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.toArray([S)[S: root-Branch
   * 4 Weak Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.toArray([S)[S:67 - DeleteStatement: toArray([S)[S
   * 5 Weak Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.toArray([S)[S:67 - DeleteField: cLgnu/trove/TShortCollection;
   */

  @Test
  public void test3()  throws Throwable  {
      TShortHashSet tShortHashSet0 = new TShortHashSet(650);
      TSynchronizedShortSet tSynchronizedShortSet0 = new TSynchronizedShortSet((TShortSet) tShortHashSet0);
      TUnmodifiableShortSet tUnmodifiableShortSet0 = new TUnmodifiableShortSet((TShortSet) tSynchronizedShortSet0);
      short[] shortArray0 = tUnmodifiableShortSet0.toArray(tShortHashSet0._set);
      assertNotNull(shortArray0);
  }

  //Test case number: 4
  /*
   * 5 covered goals:
   * 1 Weak Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.toString()Ljava/lang/String;:68 - DeleteStatement: toString()Ljava/lang/String;
   * 2 Weak Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.toString()Ljava/lang/String;:68 - DeleteField: cLgnu/trove/TShortCollection;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.toString()Ljava/lang/String;: root-Branch
   * 4 Weak Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.toString()Ljava/lang/String;:68 - DeleteStatement: toString()Ljava/lang/String;
   * 5 Weak Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.toString()Ljava/lang/String;:68 - DeleteField: cLgnu/trove/TShortCollection;
   */

  @Test
  public void test4()  throws Throwable  {
      TShortLinkedList tShortLinkedList0 = new TShortLinkedList();
      TShortArrayList tShortArrayList0 = new TShortArrayList((TShortCollection) tShortLinkedList0);
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      String string0 = tUnmodifiableRandomAccessShortList0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 Weak Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.getNoEntryValue()S:69 - DeleteStatement: getNoEntryValue()S
   * 2 Weak Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.getNoEntryValue()S:69 - DeleteField: cLgnu/trove/TShortCollection;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.getNoEntryValue()S: root-Branch
   * 4 Weak Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.getNoEntryValue()S:69 - DeleteStatement: getNoEntryValue()S
   * 5 Weak Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.getNoEntryValue()S:69 - DeleteField: cLgnu/trove/TShortCollection;
   */

  @Test
  public void test5()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList();
      TUnmodifiableShortCollection tUnmodifiableShortCollection0 = new TUnmodifiableShortCollection((TShortCollection) tShortArrayList0);
      short short0 = tUnmodifiableShortCollection0.getNoEntryValue();
      assertEquals((short)0, short0);
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 Weak Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.forEach(Lgnu/trove/procedure/TShortProcedure;)Z:70 - DeleteStatement: forEach(Lgnu/trove/procedure/TShortProcedure;)Z
   * 2 Weak Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.forEach(Lgnu/trove/procedure/TShortProcedure;)Z:70 - DeleteField: cLgnu/trove/TShortCollection;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.forEach(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   * 4 Weak Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.forEach(Lgnu/trove/procedure/TShortProcedure;)Z:70 - DeleteStatement: forEach(Lgnu/trove/procedure/TShortProcedure;)Z
   * 5 Weak Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.forEach(Lgnu/trove/procedure/TShortProcedure;)Z:70 - DeleteField: cLgnu/trove/TShortCollection;
   */

  @Test
  public void test6()  throws Throwable  {
      short[] shortArray0 = new short[3];
      TShortHashSet tShortHashSet0 = new TShortHashSet(shortArray0);
      TUnmodifiableShortCollection tUnmodifiableShortCollection0 = new TUnmodifiableShortCollection((TShortCollection) tShortHashSet0);
      // Undeclared exception!
      try {
        tUnmodifiableShortCollection0.forEach((TShortProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 17 covered goals:
   * 1 Weak Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection$1.next()S:77 - DeleteField: iLgnu/trove/iterator/TShortIterator;
   * 2 Weak Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection$1.next()S:77 - DeleteStatement: next()S
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection$1.next()S: root-Branch
   * 4 Weak Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection$1.hasNext()Z:76 - DeleteField: iLgnu/trove/iterator/TShortIterator;
   * 5 Weak Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection$1.hasNext()Z:76 - DeleteStatement: hasNext()Z
   * 6 Weak Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.size()I:63 - DeleteField: cLgnu/trove/TShortCollection;
   * 7 Weak Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.size()I:63 - DeleteStatement: size()I
   * 8 Weak Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection$1.hasNext()Z:76 - DeleteField: iLgnu/trove/iterator/TShortIterator;
   * 9 Weak Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection$1.hasNext()Z:76 - DeleteStatement: hasNext()Z
   * 10 Weak Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection$1.next()S:77 - DeleteField: iLgnu/trove/iterator/TShortIterator;
   * 11 Weak Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection$1.next()S:77 - DeleteStatement: next()S
   * 12 Weak Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.size()I:63 - DeleteField: cLgnu/trove/TShortCollection;
   * 13 Weak Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.size()I:63 - DeleteStatement: size()I
   * 14 gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableShortCollection;)V: root-Branch
   * 15 gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection$1.hasNext()Z: root-Branch
   * 16 gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.iterator()Lgnu/trove/iterator/TShortIterator;: root-Branch
   * 17 gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.size()I: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList(17, (short) (-19290));
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      tShortArrayList0.add((short) (-19290));
      TShortHashSet tShortHashSet0 = new TShortHashSet((TShortCollection) tUnmodifiableRandomAccessShortList0);
      assertEquals(1, tUnmodifiableRandomAccessShortList0.size());
      assertEquals("{-19290}", tShortHashSet0.toString());
  }

  //Test case number: 8
  /*
   * 5 covered goals:
   * 1 Weak Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.containsAll(Ljava/util/Collection;)Z:85 - DeleteStatement: containsAll(Ljava/util/Collection;)Z
   * 2 Weak Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.containsAll(Ljava/util/Collection;)Z:85 - DeleteField: cLgnu/trove/TShortCollection;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.containsAll(Ljava/util/Collection;)Z: root-Branch
   * 4 Weak Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.containsAll(Ljava/util/Collection;)Z:85 - DeleteStatement: containsAll(Ljava/util/Collection;)Z
   * 5 Weak Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.containsAll(Ljava/util/Collection;)Z:85 - DeleteField: cLgnu/trove/TShortCollection;
   */

  @Test
  public void test8()  throws Throwable  {
      TShortHashSet tShortHashSet0 = new TShortHashSet(650);
      TSynchronizedShortSet tSynchronizedShortSet0 = new TSynchronizedShortSet((TShortSet) tShortHashSet0);
      TUnmodifiableShortSet tUnmodifiableShortSet0 = new TUnmodifiableShortSet((TShortSet) tSynchronizedShortSet0);
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      boolean boolean0 = tUnmodifiableShortSet0.containsAll((Collection<?>) linkedList0);
      assertEquals(true, boolean0);
  }

  //Test case number: 9
  /*
   * 7 covered goals:
   * 1 Weak Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.containsAll(Lgnu/trove/TShortCollection;)Z:86 - ReplaceVariable coll -> c
   * 2 Weak Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.containsAll(Lgnu/trove/TShortCollection;)Z:86 - DeleteField: cLgnu/trove/TShortCollection;
   * 3 Weak Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.containsAll(Lgnu/trove/TShortCollection;)Z:86 - DeleteStatement: containsAll(Lgnu/trove/TShortCollection;)Z
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.containsAll(Lgnu/trove/TShortCollection;)Z: root-Branch
   * 5 Weak Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.containsAll(Lgnu/trove/TShortCollection;)Z:86 - ReplaceVariable coll -> c
   * 6 Weak Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.containsAll(Lgnu/trove/TShortCollection;)Z:86 - DeleteField: cLgnu/trove/TShortCollection;
   * 7 Weak Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.containsAll(Lgnu/trove/TShortCollection;)Z:86 - DeleteStatement: containsAll(Lgnu/trove/TShortCollection;)Z
   */

  @Test
  public void test9()  throws Throwable  {
      TShortLinkedList tShortLinkedList0 = new TShortLinkedList();
      TShortArrayList tShortArrayList0 = new TShortArrayList((TShortCollection) tShortLinkedList0);
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      boolean boolean0 = tUnmodifiableRandomAccessShortList0.containsAll((TShortCollection) tShortLinkedList0);
      assertEquals(true, boolean0);
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 Weak Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.containsAll([S)Z:87 - DeleteField: cLgnu/trove/TShortCollection;
   * 2 Weak Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.containsAll([S)Z:87 - DeleteStatement: containsAll([S)Z
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.containsAll([S)Z: root-Branch
   * 4 Weak Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.containsAll([S)Z:87 - DeleteField: cLgnu/trove/TShortCollection;
   * 5 Weak Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.containsAll([S)Z:87 - DeleteStatement: containsAll([S)Z
   */

  @Test
  public void test10()  throws Throwable  {
      TShortHashSet tShortHashSet0 = new TShortHashSet(650);
      TSynchronizedShortSet tSynchronizedShortSet0 = new TSynchronizedShortSet((TShortSet) tShortHashSet0);
      TUnmodifiableShortSet tUnmodifiableShortSet0 = new TUnmodifiableShortSet((TShortSet) tSynchronizedShortSet0);
      boolean boolean0 = tUnmodifiableShortSet0.containsAll(tShortHashSet0._set);
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.addAll(Ljava/util/Collection;)Z: root-Branch
   * 2 Weak Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.<init>(Lgnu/trove/TShortCollection;)V:58 - ReplaceVariable c -> c
   * 3 Weak Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.<init>(Lgnu/trove/TShortCollection;)V:60 - ReplaceVariable c -> c
   */

  @Test
  public void test11()  throws Throwable  {
      TShortHashSet tShortHashSet0 = new TShortHashSet(650);
      TSynchronizedShortSet tSynchronizedShortSet0 = new TSynchronizedShortSet((TShortSet) tShortHashSet0);
      TUnmodifiableShortSet tUnmodifiableShortSet0 = new TUnmodifiableShortSet((TShortSet) tSynchronizedShortSet0);
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      // Undeclared exception!
      try {
        tUnmodifiableShortSet0.addAll((Collection<? extends Short>) linkedList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.<init>(Lgnu/trove/TShortCollection;)V: I7 Branch 1 IFNONNULL L58 - false
   * 2 Weak Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection.<init>(Lgnu/trove/TShortCollection;)V:58 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test12()  throws Throwable  {
      TUnmodifiableShortCollection tUnmodifiableShortCollection0 = null;
      try {
        tUnmodifiableShortCollection0 = new TUnmodifiableShortCollection((TShortCollection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

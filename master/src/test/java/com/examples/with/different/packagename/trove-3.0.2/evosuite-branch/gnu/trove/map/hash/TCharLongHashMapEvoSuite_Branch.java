/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TLongCollection;
import gnu.trove.function.TLongFunction;
import gnu.trove.map.TCharLongMap;
import gnu.trove.map.hash.TCharLongHashMap;
import gnu.trove.procedure.TCharLongProcedure;
import gnu.trove.procedure.TCharProcedure;
import gnu.trove.procedure.TLongProcedure;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TCharLongHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap$TValueView.<init>(Lgnu/trove/map/hash/TCharLongHashMap;)V: root-Branch
   * 2 gnu.trove.map.hash.TCharLongHashMap.<init>(IF)V: root-Branch
   * 3 gnu.trove.map.hash.TCharLongHashMap.valueCollection()Lgnu/trove/TLongCollection;: root-Branch
   * 4 gnu.trove.map.hash.TCharLongHashMap.setUp(I)I: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap((int) '\u001E', (float) '\u001E');
      TLongCollection tLongCollection0 = tCharLongHashMap0.valueCollection();
      assertEquals(0L, tLongCollection0.getNoEntryValue());
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap$TKeyView.<init>(Lgnu/trove/map/hash/TCharLongHashMap;)V: root-Branch
   * 2 gnu.trove.map.hash.TCharLongHashMap.<init>()V: root-Branch
   * 3 gnu.trove.map.hash.TCharLongHashMap.keySet()Lgnu/trove/set/TCharSet;: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      tCharLongHashMap0.keySet();
      assertEquals(23, tCharLongHashMap0.capacity());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.clear()V: root-Branch
   * 2 gnu.trove.map.hash.TCharLongHashMap.<init>(I)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(581);
      tCharLongHashMap0.clear();
      assertEquals(1201, tCharLongHashMap0.capacity());
      assertEquals("{}", tCharLongHashMap0.toString());
  }

  //Test case number: 3
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.removeAt(I)V: root-Branch
   * 2 gnu.trove.map.hash.TCharLongHashMap.put(CJ)J: root-Branch
   * 3 gnu.trove.map.hash.TCharLongHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 4 gnu.trove.map.hash.TCharLongHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 5 gnu.trove.map.hash.TCharLongHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 6 gnu.trove.map.hash.TCharLongHashMap.doPut(CJI)J: I12 Branch 40 IFGE L214 - true
   * 7 gnu.trove.map.hash.TCharLongHashMap.doPut(CJI)J: I41 Branch 41 IFEQ L221 - false
   * 8 gnu.trove.map.hash.TCharLongHashMap.remove(C)J: I14 Branch 46 IFLT L276 - false
   */

  @Test
  public void test3()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap((int) '\u0000');
      tCharLongHashMap0.put('4', '\u0000');
      assertEquals(1, tCharLongHashMap0.size());
      
      long long0 = tCharLongHashMap0.remove('4');
      assertEquals(0L, long0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TCharLongHashMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(581);
      boolean boolean0 = tCharLongHashMap0.forEachKey((TCharProcedure) null);
      assertEquals(1201, tCharLongHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.increment(C)Z: root-Branch
   * 2 gnu.trove.map.hash.TCharLongHashMap.adjustValue(CJ)Z: I9 Branch 71 IFGE L477 - false
   */

  @Test
  public void test5()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      boolean boolean0 = tCharLongHashMap0.increment('M');
      assertEquals(23, tCharLongHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TCharLongHashMap.containsKey(C)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap((int) '\u001E', (float) '\u001E');
      boolean boolean0 = tCharLongHashMap0.containsKey('\u001E');
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 13 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap$TCharLongHashIterator.value()J: root-Branch
   * 2 gnu.trove.map.hash.TCharLongHashMap$TCharLongHashIterator.key()C: root-Branch
   * 3 gnu.trove.map.hash.TCharLongHashMap$TCharLongHashIterator.advance()V: root-Branch
   * 4 gnu.trove.map.hash.TCharLongHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - true
   * 5 gnu.trove.map.hash.TCharLongHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - false
   * 6 gnu.trove.map.hash.TCharLongHashMap.putAll(Lgnu/trove/map/TCharLongMap;)V: I15 Branch 43 IFEQ L243 - false
   * 7 gnu.trove.map.hash.TCharLongHashMap.<init>(Lgnu/trove/map/TCharLongMap;)V: I38 Branch 35 IFEQ L139 - false
   * 8 gnu.trove.map.hash.TCharLongHashMap.<init>(Lgnu/trove/map/TCharLongMap;)V: I52 Branch 36 IFEQ L143 - false
   * 9 gnu.trove.map.hash.TCharLongHashMap.<init>(IFCJ)V: root-Branch
   * 10 gnu.trove.map.hash.TCharLongHashMap.iterator()Lgnu/trove/iterator/TCharLongIterator;: root-Branch
   * 11 gnu.trove.map.hash.TCharLongHashMap.<init>(Lgnu/trove/map/TCharLongMap;)V: I10 Branch 34 IFEQ L133 - false
   * 12 gnu.trove.map.hash.TCharLongHashMap.putAll(Lgnu/trove/map/TCharLongMap;)V: I15 Branch 43 IFEQ L243 - true
   * 13 gnu.trove.map.hash.TCharLongHashMap$TCharLongHashIterator.<init>(Lgnu/trove/map/hash/TCharLongHashMap;Lgnu/trove/map/hash/TCharLongHashMap;)V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap((-1629), 1666.569F, ';', (long) (-1629));
      HashMap<Character, Long> hashMap0 = new HashMap<Character, Long>();
      hashMap0.put((Character) ';', (Long) 615L);
      tCharLongHashMap0.putAll((Map<? extends Character, ? extends Long>) hashMap0);
      TCharLongHashMap tCharLongHashMap1 = new TCharLongHashMap((TCharLongMap) tCharLongHashMap0);
      assertEquals(false, tCharLongHashMap0.isEmpty());
      assertEquals("{;=615}", tCharLongHashMap1.toString());
  }

  //Test case number: 8
  /*
   * 14 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.<init>(Lgnu/trove/map/TCharLongMap;)V: I38 Branch 35 IFEQ L139 - true
   * 2 gnu.trove.map.hash.TCharLongHashMap.<init>(Lgnu/trove/map/TCharLongMap;)V: I52 Branch 36 IFEQ L143 - true
   * 3 gnu.trove.map.hash.TCharLongHashMap.iterator()Lgnu/trove/iterator/TCharLongIterator;: root-Branch
   * 4 gnu.trove.map.hash.TCharLongHashMap.<init>(Lgnu/trove/map/TCharLongMap;)V: I10 Branch 34 IFEQ L133 - false
   * 5 gnu.trove.map.hash.TCharLongHashMap.putAll(Lgnu/trove/map/TCharLongMap;)V: I15 Branch 43 IFEQ L243 - true
   * 6 gnu.trove.map.hash.TCharLongHashMap.putAll(Lgnu/trove/map/TCharLongMap;)V: I15 Branch 43 IFEQ L243 - false
   * 7 gnu.trove.map.hash.TCharLongHashMap$TCharLongHashIterator.value()J: root-Branch
   * 8 gnu.trove.map.hash.TCharLongHashMap$TCharLongHashIterator.key()C: root-Branch
   * 9 gnu.trove.map.hash.TCharLongHashMap$TCharLongHashIterator.<init>(Lgnu/trove/map/hash/TCharLongHashMap;Lgnu/trove/map/hash/TCharLongHashMap;)V: root-Branch
   * 10 gnu.trove.map.hash.TCharLongHashMap$TCharLongHashIterator.advance()V: root-Branch
   * 11 gnu.trove.map.hash.TCharLongHashMap.doPut(CJI)J: I12 Branch 40 IFGE L214 - false
   * 12 gnu.trove.map.hash.TCharLongHashMap.doPut(CJI)J: I41 Branch 41 IFEQ L221 - true
   * 13 gnu.trove.map.hash.TCharLongHashMap.<init>([C[J)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 14 gnu.trove.map.hash.TCharLongHashMap.<init>([C[J)V: I24 Branch 33 IF_ICMPGE L119 - false
   */

  @Test
  public void test8()  throws Throwable  {
      char[] charArray0 = new char[17];
      long[] longArray0 = new long[6];
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(charArray0, longArray0);
      TCharLongHashMap tCharLongHashMap1 = new TCharLongHashMap((TCharLongMap) tCharLongHashMap0);
      assertEquals(0L, tCharLongHashMap1.getNoEntryValue());
      assertEquals(1, tCharLongHashMap0.size());
      assertEquals("{\u0000=0}", tCharLongHashMap1.toString());
      assertEquals(23, tCharLongHashMap1.capacity());
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.putIfAbsent(CJ)J: I9 Branch 39 IFGE L205 - false
   * 2 gnu.trove.map.hash.TCharLongHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   */

  @Test
  public void test9()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(0, (float) 0, '$', (long) 0);
      tCharLongHashMap0.put('$', (long) 0);
      long long0 = tCharLongHashMap0.putIfAbsent('$', (long) 0);
      assertEquals("{$=0}", tCharLongHashMap0.toString());
      assertEquals(0L, long0);
  }

  //Test case number: 10
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.get(C)J: I9 Branch 44 IFGE L253 - true
   * 2 gnu.trove.map.hash.TCharLongHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 3 gnu.trove.map.hash.TCharLongHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 4 gnu.trove.map.hash.TCharLongHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 5 gnu.trove.map.hash.TCharLongHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 6 gnu.trove.map.hash.TCharLongHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 7 gnu.trove.map.hash.TCharLongHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 8 gnu.trove.map.hash.TCharLongHashMap.equals(Ljava/lang/Object;)Z: I85 Branch 78 IFEQ L1200 - true
   */

  @Test
  public void test10()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      tCharLongHashMap0.put('`', 0L);
      boolean boolean0 = tCharLongHashMap0.equals((Object) tCharLongHashMap0);
      assertEquals(false, tCharLongHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 11
  /*
   * 15 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.get(C)J: I9 Branch 44 IFGE L253 - false
   * 2 gnu.trove.map.hash.TCharLongHashMap.equals(Ljava/lang/Object;)Z: I85 Branch 78 IFEQ L1200 - false
   * 3 gnu.trove.map.hash.TCharLongHashMap.equals(Ljava/lang/Object;)Z: I89 Branch 79 IFEQ L1200 - false
   * 4 gnu.trove.map.hash.TCharLongHashMap.equals(Ljava/lang/Object;)Z: I93 Branch 80 IFEQ L1200 - true
   * 5 gnu.trove.map.hash.TCharLongHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 6 gnu.trove.map.hash.TCharLongHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 7 gnu.trove.map.hash.TCharLongHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 8 gnu.trove.map.hash.TCharLongHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 9 gnu.trove.map.hash.TCharLongHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 10 gnu.trove.map.hash.TCharLongHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 11 gnu.trove.map.hash.TCharLongHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 12 gnu.trove.map.hash.TCharLongHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 13 gnu.trove.map.hash.TCharLongHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 14 gnu.trove.map.hash.TCharLongHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 15 gnu.trove.map.hash.TCharLongHashMap.putIfAbsent(CJ)J: I9 Branch 39 IFGE L205 - true
   */

  @Test
  public void test11()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      TCharLongHashMap tCharLongHashMap1 = new TCharLongHashMap((-1078), (-1078));
      tCharLongHashMap1.putIfAbsent('U', 9223372036854775807L);
      tCharLongHashMap0.putIfAbsent('M', (long) (-1078));
      boolean boolean0 = tCharLongHashMap0.equals((Object) tCharLongHashMap1);
      assertEquals(false, tCharLongHashMap1.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TCharLongHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - true
   */

  @Test
  public void test12()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap((-1629), 1666.569F, ';', (long) (-1629));
      tCharLongHashMap0.putIfAbsent(';', (long) (-1629));
      boolean boolean0 = tCharLongHashMap0.isEmpty();
      assertEquals("{;=-1629}", tCharLongHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TCharLongHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - false
   */

  @Test
  public void test13()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(581);
      boolean boolean0 = tCharLongHashMap0.isEmpty();
      assertEquals(true, boolean0);
      assertEquals(1201, tCharLongHashMap0.capacity());
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TCharLongHashMap.remove(C)J: I14 Branch 46 IFLT L276 - true
   */

  @Test
  public void test14()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      long long0 = tCharLongHashMap0.remove('V');
      assertEquals(23, tCharLongHashMap0.capacity());
      assertEquals(0, tCharLongHashMap0.size());
      assertEquals(0L, long0);
  }

  //Test case number: 15
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.keys()[C: I34 Branch 48 IF_ICMPNE L304 - false
   * 2 gnu.trove.map.hash.TCharLongHashMap.keys()[C: I27 Branch 47 IFLE L303 - true
   * 3 gnu.trove.map.hash.TCharLongHashMap.keys()[C: I27 Branch 47 IFLE L303 - false
   * 4 gnu.trove.map.hash.TCharLongHashMap.keys()[C: I34 Branch 48 IF_ICMPNE L304 - true
   */

  @Test
  public void test15()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      tCharLongHashMap0.putIfAbsent('V', 0L);
      tCharLongHashMap0.keys();
      assertEquals("{V=0}", tCharLongHashMap0.toString());
      assertEquals(1, tCharLongHashMap0.size());
  }

  //Test case number: 16
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.keys([C)[C: I10 Branch 49 IF_ICMPGE L315 - true
   * 2 gnu.trove.map.hash.TCharLongHashMap.keys([C)[C: I37 Branch 50 IFLE L322 - true
   * 3 gnu.trove.map.hash.TCharLongHashMap.keys([C)[C: I37 Branch 50 IFLE L322 - false
   * 4 gnu.trove.map.hash.TCharLongHashMap.keys([C)[C: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test16()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(0, (float) 0, '$', (long) 0);
      char[] charArray0 = tCharLongHashMap0.keys(tCharLongHashMap0._set);
      assertNotNull(charArray0);
  }

  //Test case number: 17
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.keys([C)[C: I10 Branch 49 IF_ICMPGE L315 - false
   * 2 gnu.trove.map.hash.TCharLongHashMap.keys([C)[C: I44 Branch 51 IF_ICMPNE L323 - false
   * 3 gnu.trove.map.hash.TCharLongHashMap.keys([C)[C: I37 Branch 50 IFLE L322 - true
   * 4 gnu.trove.map.hash.TCharLongHashMap.keys([C)[C: I37 Branch 50 IFLE L322 - false
   * 5 gnu.trove.map.hash.TCharLongHashMap.keys([C)[C: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[1];
      long[] longArray0 = new long[16];
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(charArray0, longArray0);
      tCharLongHashMap0.putIfAbsent('S', (long) 1);
      tCharLongHashMap0.keys(charArray0);
      assertEquals(2, tCharLongHashMap0.size());
      assertEquals("{S=1, \u0000=0}", tCharLongHashMap0.toString());
  }

  //Test case number: 18
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.values()[J: I34 Branch 53 IF_ICMPNE L344 - false
   * 2 gnu.trove.map.hash.TCharLongHashMap.values()[J: I27 Branch 52 IFLE L343 - true
   * 3 gnu.trove.map.hash.TCharLongHashMap.values()[J: I27 Branch 52 IFLE L343 - false
   * 4 gnu.trove.map.hash.TCharLongHashMap.values()[J: I34 Branch 53 IF_ICMPNE L344 - true
   */

  @Test
  public void test18()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      tCharLongHashMap0.putIfAbsent('M', (long) (-1078));
      tCharLongHashMap0.values();
      assertEquals(1, tCharLongHashMap0.size());
      assertEquals(23, tCharLongHashMap0.capacity());
  }

  //Test case number: 19
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.values([J)[J: I10 Branch 54 IF_ICMPGE L355 - true
   * 2 gnu.trove.map.hash.TCharLongHashMap.values([J)[J: I37 Branch 55 IFLE L362 - true
   * 3 gnu.trove.map.hash.TCharLongHashMap.values([J)[J: I37 Branch 55 IFLE L362 - false
   * 4 gnu.trove.map.hash.TCharLongHashMap.values([J)[J: I44 Branch 56 IF_ICMPNE L363 - true
   * 5 gnu.trove.map.hash.TCharLongHashMap.<init>(I)V: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(1);
      long[] longArray0 = new long[1];
      long[] longArray1 = tCharLongHashMap0.values(longArray0);
      assertSame(longArray0, longArray1);
      assertNotNull(longArray1);
  }

  //Test case number: 20
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.values([J)[J: I10 Branch 54 IF_ICMPGE L355 - false
   * 2 gnu.trove.map.hash.TCharLongHashMap.values([J)[J: I44 Branch 56 IF_ICMPNE L363 - false
   * 3 gnu.trove.map.hash.TCharLongHashMap.values()[J: I27 Branch 52 IFLE L343 - true
   * 4 gnu.trove.map.hash.TCharLongHashMap.values()[J: I27 Branch 52 IFLE L343 - false
   * 5 gnu.trove.map.hash.TCharLongHashMap.values()[J: I34 Branch 53 IF_ICMPNE L344 - true
   * 6 gnu.trove.map.hash.TCharLongHashMap.values([J)[J: I37 Branch 55 IFLE L362 - true
   * 7 gnu.trove.map.hash.TCharLongHashMap.values([J)[J: I37 Branch 55 IFLE L362 - false
   * 8 gnu.trove.map.hash.TCharLongHashMap.values([J)[J: I44 Branch 56 IF_ICMPNE L363 - true
   */

  @Test
  public void test20()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      long[] longArray0 = tCharLongHashMap0.values();
      tCharLongHashMap0.putIfAbsent('V', 0L);
      tCharLongHashMap0.values(longArray0);
      assertEquals("{V=0}", tCharLongHashMap0.toString());
      assertEquals(false, tCharLongHashMap0.isEmpty());
  }

  //Test case number: 21
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.containsValue(J)Z: I25 Branch 58 IF_ICMPNE L377 - false
   * 2 gnu.trove.map.hash.TCharLongHashMap.containsValue(J)Z: I31 Branch 59 IFNE L377 - true
   * 3 gnu.trove.map.hash.TCharLongHashMap.adjustOrPutValue(CJJ)J: I9 Branch 72 IFGE L491 - true
   * 4 gnu.trove.map.hash.TCharLongHashMap.adjustOrPutValue(CJJ)J: I58 Branch 73 IFEQ L502 - false
   * 5 gnu.trove.map.hash.TCharLongHashMap.containsValue(J)Z: I18 Branch 57 IFLE L376 - true
   * 6 gnu.trove.map.hash.TCharLongHashMap.containsValue(J)Z: I18 Branch 57 IFLE L376 - false
   * 7 gnu.trove.map.hash.TCharLongHashMap.containsValue(J)Z: I25 Branch 58 IF_ICMPNE L377 - true
   */

  @Test
  public void test21()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      tCharLongHashMap0.adjustOrPutValue('\\', (long) '\\', (-8L));
      boolean boolean0 = tCharLongHashMap0.containsValue(1750L);
      assertEquals("{\\=-8}", tCharLongHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 22
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.containsValue(J)Z: I31 Branch 59 IFNE L377 - false
   * 2 gnu.trove.map.hash.TCharLongHashMap.containsValue(J)Z: I18 Branch 57 IFLE L376 - false
   * 3 gnu.trove.map.hash.TCharLongHashMap.containsValue(J)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 4 gnu.trove.map.hash.TCharLongHashMap.containsValue(J)Z: I25 Branch 58 IF_ICMPNE L377 - false
   */

  @Test
  public void test22()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      tCharLongHashMap0.put('`', 0L);
      boolean boolean0 = tCharLongHashMap0.containsValue(0L);
      assertEquals("{`=0}", tCharLongHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 60 IFLE L407 - true
   * 2 gnu.trove.map.hash.TCharLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TCharLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test23()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap((-1629), 1666.569F, ';', (long) (-1629));
      boolean boolean0 = tCharLongHashMap0.forEachValue((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - false
   * 2 gnu.trove.map.hash.TCharLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TCharLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test24()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      tCharLongHashMap0.putIfAbsent('M', (long) (-1078));
      // Undeclared exception!
      try {
        tCharLongHashMap0.forEachValue((TLongProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I18 Branch 66 IFLE L434 - true
   * 2 gnu.trove.map.hash.TCharLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I18 Branch 66 IFLE L434 - false
   * 3 gnu.trove.map.hash.TCharLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test25()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(36, (float) '\u0000', 'n', (long) 'n');
      tCharLongHashMap0.transformValues((TLongFunction) null);
      assertEquals(0, tCharLongHashMap0.size());
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I25 Branch 67 IF_ICMPNE L435 - false
   * 2 gnu.trove.map.hash.TCharLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I18 Branch 66 IFLE L434 - false
   * 3 gnu.trove.map.hash.TCharLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[9];
      long[] longArray0 = new long[6];
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(charArray0, longArray0);
      // Undeclared exception!
      try {
        tCharLongHashMap0.transformValues((TLongFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.retainEntries(Lgnu/trove/procedure/TCharLongProcedure;)Z: I31 Branch 68 IFLE L453 - true
   * 2 gnu.trove.map.hash.TCharLongHashMap.retainEntries(Lgnu/trove/procedure/TCharLongProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TCharLongHashMap.retainEntries(Lgnu/trove/procedure/TCharLongProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test27()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      boolean boolean0 = tCharLongHashMap0.retainEntries((TCharLongProcedure) null);
      assertEquals(23, tCharLongHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 28
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.retainEntries(Lgnu/trove/procedure/TCharLongProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - false
   * 2 gnu.trove.map.hash.TCharLongHashMap.retainEntries(Lgnu/trove/procedure/TCharLongProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TCharLongHashMap.retainEntries(Lgnu/trove/procedure/TCharLongProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   * 4 gnu.trove.map.hash.TCharLongHashMap.adjustOrPutValue(CJJ)J: I9 Branch 72 IFGE L491 - true
   * 5 gnu.trove.map.hash.TCharLongHashMap.adjustOrPutValue(CJJ)J: I58 Branch 73 IFEQ L502 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      tCharLongHashMap0.adjustOrPutValue('\\', (long) '\\', (-8L));
      // Undeclared exception!
      try {
        tCharLongHashMap0.retainEntries((TCharLongProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 29
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.adjustValue(CJ)Z: I9 Branch 71 IFGE L477 - true
   * 2 gnu.trove.map.hash.TCharLongHashMap.<init>()V: root-Branch
   * 3 gnu.trove.map.hash.TCharLongHashMap.increment(C)Z: root-Branch
   * 4 gnu.trove.map.hash.TCharLongHashMap.putIfAbsent(CJ)J: I9 Branch 39 IFGE L205 - true
   */

  @Test
  public void test29()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      tCharLongHashMap0.putIfAbsent('M', 7L);
      boolean boolean0 = tCharLongHashMap0.increment('M');
      assertEquals(1, tCharLongHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.adjustOrPutValue(CJJ)J: I9 Branch 72 IFGE L491 - false
   * 2 gnu.trove.map.hash.TCharLongHashMap.adjustOrPutValue(CJJ)J: I58 Branch 73 IFEQ L502 - true
   */

  @Test
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[17];
      long[] longArray0 = new long[6];
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(charArray0, longArray0);
      long long0 = tCharLongHashMap0.adjustOrPutValue('\u0000', 0L, (long) '\u0000');
      assertEquals(37, tCharLongHashMap0.capacity());
      assertEquals(1, tCharLongHashMap0.size());
      assertEquals(0L, long0);
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TCharLongHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - false
   */

  @Test
  public void test31()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap((-1629), 1666.569F, ';', (long) (-1629));
      boolean boolean0 = tCharLongHashMap0.equals((Object) "{;=-1629}");
      assertEquals(false, boolean0);
  }

  //Test case number: 32
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - false
   * 2 gnu.trove.map.hash.TCharLongHashMap.<init>(IFCJ)V: root-Branch
   * 3 gnu.trove.map.hash.TCharLongHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - true
   * 4 gnu.trove.map.hash.TCharLongHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - false
   * 5 gnu.trove.map.hash.TCharLongHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 6 gnu.trove.map.hash.TCharLongHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 7 gnu.trove.map.hash.TCharLongHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   */

  @Test
  public void test32()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap((-1629), 1666.569F, ';', (long) (-1629));
      HashMap<Character, Long> hashMap0 = new HashMap<Character, Long>();
      hashMap0.put((Character) ';', (Long) 615L);
      tCharLongHashMap0.putAll((Map<? extends Character, ? extends Long>) hashMap0);
      int int0 = tCharLongHashMap0.hashCode();
      assertEquals(false, tCharLongHashMap0.isEmpty());
      assertEquals(604, int0);
  }

  //Test case number: 33
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap$1.execute(CJ)Z: I4 Branch 115 IFEQ L1233 - true
   * 2 gnu.trove.map.hash.TCharLongHashMap$1.<init>(Lgnu/trove/map/hash/TCharLongHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 3 gnu.trove.map.hash.TCharLongHashMap$1.execute(CJ)Z: I4 Branch 115 IFEQ L1233 - false
   * 4 gnu.trove.map.hash.TCharLongHashMap.<init>(IF)V: root-Branch
   * 5 gnu.trove.map.hash.TCharLongHashMap.toString()Ljava/lang/String;: root-Branch
   * 6 gnu.trove.map.hash.TCharLongHashMap.forEachEntry(Lgnu/trove/procedure/TCharLongProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 7 gnu.trove.map.hash.TCharLongHashMap.forEachEntry(Lgnu/trove/procedure/TCharLongProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 8 gnu.trove.map.hash.TCharLongHashMap.forEachEntry(Lgnu/trove/procedure/TCharLongProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 9 gnu.trove.map.hash.TCharLongHashMap.forEachEntry(Lgnu/trove/procedure/TCharLongProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 10 gnu.trove.map.hash.TCharLongHashMap.forEachEntry(Lgnu/trove/procedure/TCharLongProcedure;)Z: I39 Branch 65 IFNE L422 - true
   */

  @Test
  public void test33()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(0, 1.0F);
      tCharLongHashMap0.put('\u000F', (long) 0);
      long[] longArray0 = new long[6];
      TCharLongHashMap tCharLongHashMap1 = new TCharLongHashMap(tCharLongHashMap0._set, longArray0);
      String string0 = tCharLongHashMap1.toString();
      assertEquals(1, tCharLongHashMap0.size());
      assertEquals("{\u000F=0, \u0000=0}", string0);
  }

  //Test case number: 34
  /*
   * 12 covered goals:
   * 1 gnu.trove.map.hash.TCharLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - true
   * 2 gnu.trove.map.hash.TCharLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - false
   * 3 gnu.trove.map.hash.TCharLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - true
   * 4 gnu.trove.map.hash.TCharLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - false
   * 5 gnu.trove.map.hash.TCharLongHashMap.setUp(I)I: root-Branch
   * 6 gnu.trove.map.hash.TCharLongHashMap.put(CJ)J: root-Branch
   * 7 gnu.trove.map.hash.TCharLongHashMap.doPut(CJI)J: I12 Branch 40 IFGE L214 - true
   * 8 gnu.trove.map.hash.TCharLongHashMap.doPut(CJI)J: I12 Branch 40 IFGE L214 - false
   * 9 gnu.trove.map.hash.TCharLongHashMap.doPut(CJI)J: I41 Branch 41 IFEQ L221 - true
   * 10 gnu.trove.map.hash.TCharLongHashMap.doPut(CJI)J: I41 Branch 41 IFEQ L221 - false
   * 11 gnu.trove.map.hash.TCharLongHashMap.<init>([C[J)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 12 gnu.trove.map.hash.TCharLongHashMap.<init>([C[J)V: I24 Branch 33 IF_ICMPGE L119 - false
   */

  @Test
  public void test34()  throws Throwable  {
      char[] charArray0 = new char[9];
      long[] longArray0 = new long[9];
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(charArray0, longArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tCharLongHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(23, tCharLongHashMap0.capacity());
      assertEquals(1, tCharLongHashMap0.size());
      assertEquals("{\u0000=0}", tCharLongHashMap0.toString());
      assertEquals(false, tCharLongHashMap0.isEmpty());
  }
}

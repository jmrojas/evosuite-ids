/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TByteFunction;
import gnu.trove.impl.sync.TSynchronizedByteCollection;
import gnu.trove.impl.sync.TSynchronizedFloatByteMap;
import gnu.trove.impl.sync.TSynchronizedFloatSet;
import gnu.trove.iterator.TFloatByteIterator;
import gnu.trove.map.TFloatByteMap;
import gnu.trove.map.hash.TFloatByteHashMap;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TFloatByteProcedure;
import gnu.trove.procedure.TFloatProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedFloatByteMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedFloatByteMap.<init>(Lgnu/trove/map/TFloatByteMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(1754);
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0, (Object) "0x1.b68p10");
      boolean boolean0 = tSynchronizedFloatByteMap0.forEachValue((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.adjustValue(FB)Z: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0, (Object) "0x1.62d9dp10");
      boolean boolean0 = tSynchronizedFloatByteMap0.adjustValue((float) (byte)0, (byte)0);
      assertEquals(false, boolean0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.size()I: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0, (Object) "0x1.62d9dp10");
      int int0 = tSynchronizedFloatByteMap0.size();
      assertEquals(0, int0);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.toString()Ljava/lang/String;: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedFloatByteMap.<init>(Lgnu/trove/map/TFloatByteMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test3()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      String string0 = tSynchronizedFloatByteMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.keys()[F: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0, (Object) "\u4E2D\u6587");
      float[] floatArray0 = tSynchronizedFloatByteMap0.keys();
      assertNotNull(floatArray0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.forEachEntry(Lgnu/trove/procedure/TFloatByteProcedure;)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0, (Object) "\u4E2D\u6587");
      boolean boolean0 = tSynchronizedFloatByteMap0.forEachEntry((TFloatByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.containsValue(B)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(1754);
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0, (Object) "0x1.b68p10");
      boolean boolean0 = tSynchronizedFloatByteMap0.containsValue((byte)0);
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.get(F)B: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0, (Object) "\u4E2D\u6587");
      byte byte0 = tSynchronizedFloatByteMap0.get((-330.47345F));
      assertEquals((byte)0, byte0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      HashMap<Float, Byte> hashMap0 = new HashMap<Float, Byte>();
      tSynchronizedFloatByteMap0.putAll((Map<? extends Float, ? extends Byte>) hashMap0);
      assertEquals(true, hashMap0.isEmpty());
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.values()[B: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      byte[] byteArray0 = tSynchronizedFloatByteMap0.values();
      assertNotNull(byteArray0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.hashCode()I: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(807, 807);
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      int int0 = tSynchronizedFloatByteMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.iterator()Lgnu/trove/iterator/TFloatByteIterator;: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(807, 807);
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      TFloatByteIterator tFloatByteIterator0 = tSynchronizedFloatByteMap0.iterator();
      assertEquals(false, tFloatByteIterator0.hasNext());
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.getNoEntryKey()F: root-Branch
   */

//   @Test
//   public void test12()  throws Throwable  {
//       TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(807, 807);
//       TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
//       float float0 = tSynchronizedFloatByteMap0.getNoEntryKey();
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.retainEntries(Lgnu/trove/procedure/TFloatByteProcedure;)Z: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0, (Object) "\u4E2D\u6587");
      boolean boolean0 = tSynchronizedFloatByteMap0.retainEntries((TFloatByteProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.keys([F)[F: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(807, 807);
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      float[] floatArray0 = tSynchronizedFloatByteMap0.keys(tFloatByteHashMap0._set);
      assertNotNull(floatArray0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.putAll(Lgnu/trove/map/TFloatByteMap;)V: root-Branch
   */

//   @Test
//   public void test15()  throws Throwable  {
//       TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
//       TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
//       tSynchronizedFloatByteMap0.putAll((TFloatByteMap) tFloatByteHashMap0);
//       assertEquals(0.0F, tSynchronizedFloatByteMap0.getNoEntryKey(), 0.01F);
//   }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.transformValues(Lgnu/trove/function/TByteFunction;)V: root-Branch
   */

//   @Test
//   public void test16()  throws Throwable  {
//       TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
//       TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0, (Object) "0x1.62d9dp10");
//       tSynchronizedFloatByteMap0.transformValues((TByteFunction) null);
//       assertEquals(0, tSynchronizedFloatByteMap0.getNoEntryValue());
//   }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.containsKey(F)Z: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(807, 807);
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      boolean boolean0 = tSynchronizedFloatByteMap0.containsKey((float) 807);
      assertEquals(false, boolean0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.values([B)[B: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0, (Object) "0x1.62d9dp10");
      byte[] byteArray0 = tSynchronizedFloatByteMap0.values(tFloatByteHashMap0._states);
      assertNotNull(byteArray0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.getNoEntryValue()B: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0, (Object) "0x1.62d9dp10");
      byte byte0 = tSynchronizedFloatByteMap0.getNoEntryValue();
      assertEquals((byte)0, byte0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.putIfAbsent(FB)B: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0, (Object) "0x1.62d9dp10");
      tSynchronizedFloatByteMap0.putIfAbsent(1419.4033F, (byte)0);
      assertEquals(1, tFloatByteHashMap0.size());
      assertEquals("{1419.4033=0}", tSynchronizedFloatByteMap0.toString());
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.remove(F)B: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      byte byte0 = tSynchronizedFloatByteMap0.remove((float) (byte) (-97));
      assertEquals((byte)0, byte0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.increment(F)Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0, (Object) "\u4E2D\u6587");
      boolean boolean0 = tSynchronizedFloatByteMap0.increment((-330.47345F));
      assertEquals(false, boolean0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.put(FB)B: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(1754);
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0, (Object) "0x1.b68p10");
      tSynchronizedFloatByteMap0.put((float) 1754, (byte)50);
      assertEquals(false, tFloatByteHashMap0.isEmpty());
      assertEquals("{1754.0=50}", tFloatByteHashMap0.toString());
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.adjustOrPutValue(FBB)B: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      byte byte0 = tSynchronizedFloatByteMap0.adjustOrPutValue((-1607.396F), (byte)10, (byte)10);
      assertEquals(false, tFloatByteHashMap0.isEmpty());
      assertEquals((byte)10, byte0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      boolean boolean0 = tSynchronizedFloatByteMap0.equals((Object) (byte)0);
      assertEquals(false, boolean0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      boolean boolean0 = tSynchronizedFloatByteMap0.forEachKey((TFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      boolean boolean0 = tSynchronizedFloatByteMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.clear()V: root-Branch
   */

//   @Test
//   public void test28()  throws Throwable  {
//       TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(1754);
//       TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0, (Object) "0x1.b68p10");
//       tSynchronizedFloatByteMap0.clear();
//       assertEquals(0.0F, tSynchronizedFloatByteMap0.getNoEntryKey(), 0.01F);
//   }

  //Test case number: 29
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.<init>(Lgnu/trove/map/TFloatByteMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = null;
      try {
        tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.keySet()Lgnu/trove/set/TFloatSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedFloatByteMap.keySet()Lgnu/trove/set/TFloatSet;: I11 Branch 2 IFNONNULL L107 - false
   * 3 gnu.trove.impl.sync.TSynchronizedFloatByteMap.<init>(Lgnu/trove/map/TFloatByteMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      TSynchronizedFloatSet tSynchronizedFloatSet0 = (TSynchronizedFloatSet)tSynchronizedFloatByteMap0.keySet();
      assertNotNull(tSynchronizedFloatSet0);
      
      TSynchronizedFloatSet tSynchronizedFloatSet1 = (TSynchronizedFloatSet)tSynchronizedFloatByteMap0.keySet();
      assertSame(tSynchronizedFloatSet1, tSynchronizedFloatSet0);
  }

  //Test case number: 31
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatByteMap.valueCollection()Lgnu/trove/TByteCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 gnu.trove.impl.sync.TSynchronizedFloatByteMap.valueCollection()Lgnu/trove/TByteCollection;: I11 Branch 3 IFNONNULL L121 - false
   * 3 gnu.trove.impl.sync.TSynchronizedFloatByteMap.<init>(Lgnu/trove/map/TFloatByteMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test31()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = new TSynchronizedFloatByteMap((TFloatByteMap) tFloatByteHashMap0, (Object) "0x1.62d9dp10");
      TSynchronizedByteCollection tSynchronizedByteCollection0 = (TSynchronizedByteCollection)tSynchronizedFloatByteMap0.valueCollection();
      assertNotNull(tSynchronizedByteCollection0);
      
      TSynchronizedByteCollection tSynchronizedByteCollection1 = (TSynchronizedByteCollection)tSynchronizedFloatByteMap0.valueCollection();
      assertSame(tSynchronizedByteCollection1, tSynchronizedByteCollection0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap;
import gnu.trove.map.TDoubleFloatMap;
import gnu.trove.map.hash.TDoubleFloatHashMap;
import java.io.FileNotFoundException;
import java.io.RandomAccessFile;
import java.util.Locale;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableDoubleFloatMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      double double0 = 355.1575819919211;
      doubleArray0[0] = double0;
      double double1 = 1747.7153018471488;
      doubleArray0[1] = double1;
      double double2 = (-1.0);
      doubleArray0[2] = double2;
      float[] floatArray0 = new float[4];
      float float0 = 0.0F;
      floatArray0[0] = float0;
      float float1 = (-667.64294F);
      floatArray0[1] = float1;
      float float2 = (-744.3572F);
      floatArray0[2] = float2;
      float float3 = 2020.9668F;
      floatArray0[3] = float3;
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(doubleArray0, floatArray0);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      assertEquals(false, tUnmodifiableDoubleFloatMap0.isEmpty());
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = 0;
      float float0 = 1.0F;
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(int0, float0);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      TDoubleFloatHashMap tDoubleFloatHashMap1 = new TDoubleFloatHashMap((TDoubleFloatMap) tUnmodifiableDoubleFloatMap0);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap1 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap1);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleFloatMap1.putAll((TDoubleFloatMap) tUnmodifiableDoubleFloatMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = (-1);
      float float0 = 0.0F;
      float float1 = 6.6360896E8F;
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(int0, float0, (double) int0, float1);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      tUnmodifiableDoubleFloatMap0.size();
      float float2 = 0.0F;
      TDoubleFloatHashMap tDoubleFloatHashMap1 = new TDoubleFloatHashMap(int0, float0, (double) int0, float2);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap1 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap1);
      boolean boolean0 = tUnmodifiableDoubleFloatMap1.containsKey((double) int0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = 1055;
      double double0 = 1.0;
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(int0, (float) int0, double0, (float) int0);
      String string0 = "";
      String string1 = "";
      RandomAccessFile randomAccessFile0 = null;
      try {
        randomAccessFile0 = new RandomAccessFile(string0, string1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 2002;
      TDoubleFloatMap tDoubleFloatMap0 = null;
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = null;
      try {
        tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap(tDoubleFloatMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TDoubleFloatMap tDoubleFloatMap0 = null;
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = null;
      try {
        tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap(tDoubleFloatMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = 1079;
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(int0, int0);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      double double0 = 0.0;
      // Undeclared exception!
      try {
        tUnmodifiableDoubleFloatMap0.adjustOrPutValue(double0, (float) int0, (float) int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = 97649;
      float float0 = (-1357.3247F);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) int0;
      doubleArray0[1] = (double) int0;
      doubleArray0[2] = (double) float0;
      doubleArray0[3] = (double) float0;
      doubleArray0[4] = (double) float0;
      doubleArray0[5] = (double) int0;
      int int1 = 1769;
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(int1, (float) int0, doubleArray0[0], (float) int1);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      tUnmodifiableDoubleFloatMap0.iterator();
      float[] floatArray0 = new float[10];
      floatArray0[0] = float0;
      floatArray0[1] = float0;
      floatArray0[2] = float0;
      floatArray0[3] = float0;
      floatArray0[4] = float0;
      floatArray0[5] = (float) int0;
      floatArray0[6] = float0;
      floatArray0[7] = float0;
      floatArray0[8] = (float) int0;
      floatArray0[9] = float0;
      TDoubleFloatHashMap tDoubleFloatHashMap1 = new TDoubleFloatHashMap(doubleArray0, floatArray0);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap1 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap1);
      tUnmodifiableDoubleFloatMap1.getNoEntryKey();
      TDoubleFloatHashMap tDoubleFloatHashMap2 = new TDoubleFloatHashMap(int0, (float) int0, (double) int0, float0);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap2 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap2);
      Object object0 = null;
      boolean boolean0 = tUnmodifiableDoubleFloatMap2.equals(object0);
      assertEquals(false, boolean0);
      
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap3 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap2);
      double[] doubleArray1 = tUnmodifiableDoubleFloatMap3.keys();
      assertTrue(tUnmodifiableDoubleFloatMap3.equals(tUnmodifiableDoubleFloatMap2));
      assertNotNull(doubleArray1);
      assertEquals(97649.0, tUnmodifiableDoubleFloatMap3.getNoEntryKey(), 0.01D);
      assertFalse(tUnmodifiableDoubleFloatMap3.equals(tUnmodifiableDoubleFloatMap1));
  }

  @Test
  public void test8()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      double double0 = 0.0;
      doubleArray0[0] = double0;
      double double1 = (-1497.3698899102167);
      doubleArray0[1] = double1;
      double double2 = 0.0;
      doubleArray0[2] = double2;
      double double3 = Double.POSITIVE_INFINITY;
      doubleArray0[3] = double3;
      double double4 = 0.0;
      doubleArray0[4] = double4;
      double double5 = 1981.9792191345543;
      doubleArray0[5] = double5;
      double double6 = Double.NEGATIVE_INFINITY;
      doubleArray0[6] = double6;
      double double7 = 1.0;
      doubleArray0[7] = double7;
      float[] floatArray0 = new float[7];
      float float0 = (-1098.2916F);
      floatArray0[0] = float0;
      float float1 = 1323.4607F;
      floatArray0[1] = float1;
      float float2 = (-1506.8822F);
      floatArray0[2] = float2;
      float float3 = 0.0F;
      floatArray0[3] = float3;
      float float4 = 0.0F;
      floatArray0[4] = float4;
      float float5 = (-690.2315F);
      floatArray0[5] = float5;
      float float6 = 0.0F;
      floatArray0[6] = float6;
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(doubleArray0, floatArray0);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      double double8 = tUnmodifiableDoubleFloatMap0.getNoEntryKey();
      assertFalse(double8 == double6);
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 530;
      double double0 = 1441.3080916470944;
      float float0 = (-654.8782F);
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(int0, (float) int0, double0, float0);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      double double1 = 0.0;
      tUnmodifiableDoubleFloatMap0.get(double1);
      TDoubleFloatMap tDoubleFloatMap0 = null;
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap1 = null;
      try {
        tUnmodifiableDoubleFloatMap1 = new TUnmodifiableDoubleFloatMap(tDoubleFloatMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = (-1);
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(int0);
      tDoubleFloatHashMap0.compact();
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      tUnmodifiableDoubleFloatMap0.iterator();
      String string0 = "";
      Locale locale0 = new Locale(string0);
      String string1 = locale0.getDisplayLanguage();
      boolean boolean0 = tUnmodifiableDoubleFloatMap0.equals((Object) string1);
      assertEquals(false, boolean0);
      
      TDoubleFloatHashMap tDoubleFloatHashMap1 = new TDoubleFloatHashMap();
      tDoubleFloatHashMap1.values();
      String string2 = tUnmodifiableDoubleFloatMap0.toString();
      assertNotNull(string2);
      
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap1 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap1);
      tUnmodifiableDoubleFloatMap1.size();
      double double0 = 1716.655044329403;
      tUnmodifiableDoubleFloatMap1.get(double0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleFloatMap1.adjustOrPutValue(double0, (float) int0, (float) int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 1817;
      TDoubleFloatMap tDoubleFloatMap0 = null;
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = null;
      try {
        tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap(tDoubleFloatMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap();
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      tUnmodifiableDoubleFloatMap0.keys();
      int int0 = (-1754);
      TDoubleFloatMap tDoubleFloatMap0 = null;
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap1 = null;
      try {
        tUnmodifiableDoubleFloatMap1 = new TUnmodifiableDoubleFloatMap(tDoubleFloatMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      double double0 = (-276.4843816639655);
      doubleArray0[0] = double0;
      double double1 = 0.0;
      doubleArray0[1] = double1;
      double double2 = 1.0;
      doubleArray0[2] = double2;
      double double3 = 0.0;
      doubleArray0[3] = double3;
      float[] floatArray0 = new float[6];
      float float0 = (-1401.8628F);
      floatArray0[0] = float0;
      float float1 = (-329.62894F);
      floatArray0[1] = float1;
      float float2 = (-1483.9854F);
      floatArray0[2] = float2;
      float float3 = (-1.0F);
      floatArray0[3] = float3;
      float float4 = 1703.8438F;
      floatArray0[4] = float4;
      float float5 = 1755.6981F;
      floatArray0[5] = float5;
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(doubleArray0, floatArray0);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      float float6 = 6.6360896E8F;
      // Undeclared exception!
      try {
        tUnmodifiableDoubleFloatMap0.put((double) float1, float6);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 0;
      float float0 = (-1.0F);
      double double0 = 1288.9847202849774;
      float float1 = 1.0F;
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(int0, float0, double0, float1);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      double double1 = 1289.6628870162654;
      float float2 = (-1639.7777F);
      float float3 = 1657.6227F;
      // Undeclared exception!
      try {
        tUnmodifiableDoubleFloatMap0.adjustOrPutValue((double) float1, float2, float3);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = 0;
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(int0);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      double double0 = 0.0;
      // Undeclared exception!
      try {
        tUnmodifiableDoubleFloatMap0.adjustValue(double0, (float) int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      double double0 = 1.0;
      doubleArray0[0] = double0;
      double double1 = 0.0;
      doubleArray0[1] = double1;
      double double2 = (-484.97974852786825);
      doubleArray0[2] = double2;
      float[] floatArray0 = new float[10];
      float float0 = (-242.78989F);
      floatArray0[0] = float0;
      float float1 = Float.NEGATIVE_INFINITY;
      floatArray0[1] = float1;
      float float2 = (-831.2441F);
      floatArray0[2] = float2;
      float float3 = 0.0F;
      floatArray0[3] = float3;
      float float4 = (-1424.7855F);
      floatArray0[4] = float4;
      float float5 = 0.0F;
      floatArray0[5] = float5;
      float float6 = 1909.7996F;
      floatArray0[6] = float6;
      float float7 = 0.5F;
      floatArray0[7] = float7;
      float float8 = 0.5F;
      floatArray0[8] = float8;
      float float9 = (-278.0297F);
      floatArray0[9] = float9;
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(doubleArray0, floatArray0);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      TDoubleFloatHashMap tDoubleFloatHashMap1 = new TDoubleFloatHashMap((TDoubleFloatMap) tUnmodifiableDoubleFloatMap0);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap1 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap1);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleFloatMap1.increment((double) float8);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      int int0 = 204;
      float float0 = 140.35176F;
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(int0, float0);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap1 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tUnmodifiableDoubleFloatMap0);
      tUnmodifiableDoubleFloatMap1.hashCode();
      float float1 = 235.39276F;
      TDoubleFloatHashMap tDoubleFloatHashMap1 = new TDoubleFloatHashMap(int0, float1);
      tDoubleFloatHashMap1.compact();
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap2 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap1);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleFloatMap2.putAll((TDoubleFloatMap) tDoubleFloatHashMap1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

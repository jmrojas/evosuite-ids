/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TDoubleCollection;
import gnu.trove.function.TDoubleFunction;
import gnu.trove.map.TLongDoubleMap;
import gnu.trove.map.hash.TLongDoubleHashMap;
import gnu.trove.procedure.TDoubleProcedure;
import gnu.trove.procedure.TLongDoubleProcedure;
import gnu.trove.procedure.TLongProcedure;
import gnu.trove.set.TLongSet;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TLongDoubleHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.clear()V: root-Branch
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.<init>(IF)V: root-Branch
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.setUp(I)I: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap((-1), (-1));
      tLongDoubleHashMap0.clear();
      assertEquals("{}", tLongDoubleHashMap0.toString());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.containsKey(J)Z: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap((-1), (-1));
      boolean boolean0 = tLongDoubleHashMap0.containsKey(0L);
      assertEquals(false, boolean0);
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.keySet()Lgnu/trove/set/TLongSet;: root-Branch
   * 2 gnu.trove.map.hash.TLongDoubleHashMap$TKeyView.<init>(Lgnu/trove/map/hash/TLongDoubleHashMap;)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap((-1), (-1));
      TLongSet tLongSet0 = tLongDoubleHashMap0.keySet();
      assertEquals(true, tLongSet0.isEmpty());
  }

  //Test case number: 3
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.removeAt(I)V: root-Branch
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.putIfAbsent(JD)D: I9 Branch 39 IFGE L205 - true
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.remove(J)D: I14 Branch 46 IFLT L276 - false
   * 4 gnu.trove.map.hash.TLongDoubleHashMap.<init>()V: root-Branch
   * 5 gnu.trove.map.hash.TLongDoubleHashMap.doPut(JDI)D: I12 Branch 40 IFGE L214 - true
   * 6 gnu.trove.map.hash.TLongDoubleHashMap.doPut(JDI)D: I41 Branch 41 IFEQ L221 - false
   */

  @Test
  public void test3()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap();
      tLongDoubleHashMap0.putIfAbsent(296L, 296L);
      assertEquals("{296=296.0}", tLongDoubleHashMap0.toString());
      
      double double0 = tLongDoubleHashMap0.remove(296L);
      assertEquals(296.0, double0, 0.01D);
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.valueCollection()Lgnu/trove/TDoubleCollection;: root-Branch
   * 2 gnu.trove.map.hash.TLongDoubleHashMap$TValueView.<init>(Lgnu/trove/map/hash/TLongDoubleHashMap;)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap((-1), (-1));
      TDoubleCollection tDoubleCollection0 = tLongDoubleHashMap0.valueCollection();
      assertEquals(true, tDoubleCollection0.isEmpty());
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.increment(J)Z: root-Branch
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.adjustValue(JD)Z: I9 Branch 71 IFGE L477 - false
   */

  @Test
  public void test5()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap((-1), (-1));
      boolean boolean0 = tLongDoubleHashMap0.increment(1576L);
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.<init>(IFJD)V: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(162, (-1003.45483F), (long) 1, 0.0);
      boolean boolean0 = tLongDoubleHashMap0.forEachKey((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.<init>(Lgnu/trove/map/TLongDoubleMap;)V: I40 Branch 35 IFEQ L139 - false
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 4 gnu.trove.map.hash.TLongDoubleHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 5 gnu.trove.map.hash.TLongDoubleHashMap.<init>(Lgnu/trove/map/TLongDoubleMap;)V: I54 Branch 36 IFEQ L143 - true
   * 6 gnu.trove.map.hash.TLongDoubleHashMap$TLongDoubleHashIterator.<init>(Lgnu/trove/map/hash/TLongDoubleHashMap;Lgnu/trove/map/hash/TLongDoubleHashMap;)V: root-Branch
   * 7 gnu.trove.map.hash.TLongDoubleHashMap.iterator()Lgnu/trove/iterator/TLongDoubleIterator;: root-Branch
   * 8 gnu.trove.map.hash.TLongDoubleHashMap.<init>(Lgnu/trove/map/TLongDoubleMap;)V: I10 Branch 34 IFEQ L133 - false
   * 9 gnu.trove.map.hash.TLongDoubleHashMap.putAll(Lgnu/trove/map/TLongDoubleMap;)V: I15 Branch 43 IFEQ L243 - true
   */

  @Test
  public void test7()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(162, (-1003.45483F), (long) 1, 0.0);
      TLongDoubleHashMap tLongDoubleHashMap1 = new TLongDoubleHashMap((TLongDoubleMap) tLongDoubleHashMap0);
      assertEquals(1L, tLongDoubleHashMap1.getNoEntryKey());
      assertEquals(0.0, tLongDoubleHashMap1.getNoEntryValue(), 0.01D);
      assertEquals(3, tLongDoubleHashMap1.capacity());
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.<init>(Lgnu/trove/map/TLongDoubleMap;)V: I54 Branch 36 IFEQ L143 - false
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.<init>(Lgnu/trove/map/TLongDoubleMap;)V: I10 Branch 34 IFEQ L133 - false
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.<init>(Lgnu/trove/map/TLongDoubleMap;)V: I40 Branch 35 IFEQ L139 - true
   */

  @Test
  public void test8()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(0, 1218.3853F, (long) 0, 407.0072090304308);
      TLongDoubleHashMap tLongDoubleHashMap1 = new TLongDoubleHashMap((TLongDoubleMap) tLongDoubleHashMap0);
      assertEquals(407.0072090304308, tLongDoubleHashMap1.getNoEntryValue(), 0.01D);
      assertEquals(0L, tLongDoubleHashMap1.getNoEntryKey());
      assertEquals(3, tLongDoubleHashMap1.capacity());
  }

  //Test case number: 9
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.putIfAbsent(JD)D: I9 Branch 39 IFGE L205 - false
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.put(JD)D: root-Branch
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.doPut(JDI)D: I12 Branch 40 IFGE L214 - false
   * 4 gnu.trove.map.hash.TLongDoubleHashMap.doPut(JDI)D: I41 Branch 41 IFEQ L221 - true
   * 5 gnu.trove.map.hash.TLongDoubleHashMap.<init>([J[D)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 6 gnu.trove.map.hash.TLongDoubleHashMap.<init>([J[D)V: I24 Branch 33 IF_ICMPGE L119 - false
   */

  @Test
  public void test9()  throws Throwable  {
      long[] longArray0 = new long[8];
      double[] doubleArray0 = new double[10];
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(longArray0, doubleArray0);
      double double0 = tLongDoubleHashMap0.putIfAbsent(0L, 802.0018245698693);
      assertEquals(23, tLongDoubleHashMap0.capacity());
      assertEquals("{0=0.0}", tLongDoubleHashMap0.toString());
      assertEquals(1, tLongDoubleHashMap0.size());
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 10
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.get(J)D: I9 Branch 44 IFGE L253 - true
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 4 gnu.trove.map.hash.TLongDoubleHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 5 gnu.trove.map.hash.TLongDoubleHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 6 gnu.trove.map.hash.TLongDoubleHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 7 gnu.trove.map.hash.TLongDoubleHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 8 gnu.trove.map.hash.TLongDoubleHashMap.equals(Ljava/lang/Object;)Z: I85 Branch 78 IFEQ L1200 - true
   */

  @Test
  public void test10()  throws Throwable  {
      long[] longArray0 = new long[9];
      double[] doubleArray0 = new double[6];
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(longArray0, doubleArray0);
      boolean boolean0 = tLongDoubleHashMap0.equals((Object) tLongDoubleHashMap0);
      assertEquals("{0=0.0}", tLongDoubleHashMap0.toString());
      assertEquals(1, tLongDoubleHashMap0.size());
      assertEquals(23, tLongDoubleHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.get(J)D: I9 Branch 44 IFGE L253 - false
   */

  @Test
  public void test11()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap();
      double double0 = tLongDoubleHashMap0.get((long) 138);
      assertEquals(23, tLongDoubleHashMap0.capacity());
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 12
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - true
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.adjustOrPutValue(JDD)D: I9 Branch 72 IFGE L491 - true
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.adjustOrPutValue(JDD)D: I58 Branch 73 IFEQ L502 - false
   * 4 gnu.trove.map.hash.TLongDoubleHashMap.<init>(I)V: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(Integer.MAX_VALUE);
      tLongDoubleHashMap0.adjustOrPutValue((-1367L), 1.0, 0.0);
      boolean boolean0 = tLongDoubleHashMap0.isEmpty();
      assertEquals(1, tLongDoubleHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - false
   */

  @Test
  public void test13()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(Integer.MAX_VALUE);
      boolean boolean0 = tLongDoubleHashMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.remove(J)D: I14 Branch 46 IFLT L276 - true
   */

  @Test
  public void test14()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap();
      double double0 = tLongDoubleHashMap0.remove((long) 0);
      assertEquals(0.0, double0, 0.01D);
      assertEquals(0, tLongDoubleHashMap0.size());
      assertEquals(23, tLongDoubleHashMap0.capacity());
  }

  //Test case number: 15
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.keys()[J: I34 Branch 48 IF_ICMPNE L304 - false
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.keys()[J: I27 Branch 47 IFLE L303 - true
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.keys()[J: I27 Branch 47 IFLE L303 - false
   * 4 gnu.trove.map.hash.TLongDoubleHashMap.keys()[J: I34 Branch 48 IF_ICMPNE L304 - true
   */

  @Test
  public void test15()  throws Throwable  {
      long[] longArray0 = new long[9];
      double[] doubleArray0 = new double[10];
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(longArray0, doubleArray0);
      long[] longArray1 = tLongDoubleHashMap0.keys();
      assertEquals("{0=0.0}", tLongDoubleHashMap0.toString());
      assertNotNull(longArray1);
      assertEquals(1, tLongDoubleHashMap0.size());
      assertEquals(23, tLongDoubleHashMap0.capacity());
  }

  //Test case number: 16
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.keys([J)[J: I10 Branch 49 IF_ICMPGE L315 - true
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - true
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - false
   * 4 gnu.trove.map.hash.TLongDoubleHashMap.keys([J)[J: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test16()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap((-1), (-1));
      long[] longArray0 = tLongDoubleHashMap0.keys(tLongDoubleHashMap0._set);
      assertNotNull(longArray0);
  }

  //Test case number: 17
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.keys([J)[J: I10 Branch 49 IF_ICMPGE L315 - false
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.keys([J)[J: I44 Branch 51 IF_ICMPNE L323 - false
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - true
   * 4 gnu.trove.map.hash.TLongDoubleHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - false
   * 5 gnu.trove.map.hash.TLongDoubleHashMap.keys([J)[J: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test17()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[0] = (-1924L);
      longArray0[1] = (-170L);
      double[] doubleArray0 = new double[10];
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(longArray0, doubleArray0);
      long[] longArray1 = new long[2];
      long[] longArray2 = tLongDoubleHashMap0.keys(longArray1);
      assertEquals("{-1924=0.0, -170=0.0, 0=0.0}", tLongDoubleHashMap0.toString());
      assertEquals(3, tLongDoubleHashMap0.size());
      assertEquals(23, tLongDoubleHashMap0.capacity());
      assertNotNull(longArray2);
      assertNotSame(longArray2, longArray1);
  }

  //Test case number: 18
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.values()[D: I34 Branch 53 IF_ICMPNE L344 - false
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - true
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - false
   * 4 gnu.trove.map.hash.TLongDoubleHashMap.values()[D: I27 Branch 52 IFLE L343 - true
   * 5 gnu.trove.map.hash.TLongDoubleHashMap.values()[D: I27 Branch 52 IFLE L343 - false
   * 6 gnu.trove.map.hash.TLongDoubleHashMap.values()[D: I34 Branch 53 IF_ICMPNE L344 - true
   */

  @Test
  public void test18()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap();
      HashMap<Long, Double> hashMap0 = new HashMap<Long, Double>();
      Long long0 = new Long(1863L);
      Double double0 = new Double((double) long0);
      hashMap0.put(long0, double0);
      tLongDoubleHashMap0.putAll((Map<? extends Long, ? extends Double>) hashMap0);
      tLongDoubleHashMap0.values();
      assertEquals(false, tLongDoubleHashMap0.isEmpty());
      assertEquals("{1863=1863.0}", tLongDoubleHashMap0.toString());
  }

  //Test case number: 19
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.values([D)[D: I44 Branch 56 IF_ICMPNE L363 - false
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.values([D)[D: I10 Branch 54 IF_ICMPGE L355 - true
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.values([D)[D: I37 Branch 55 IFLE L362 - true
   * 4 gnu.trove.map.hash.TLongDoubleHashMap.values([D)[D: I37 Branch 55 IFLE L362 - false
   * 5 gnu.trove.map.hash.TLongDoubleHashMap.values([D)[D: I44 Branch 56 IF_ICMPNE L363 - true
   * 6 gnu.trove.map.hash.TLongDoubleHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   */

  @Test
  public void test19()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap((-1), (-1));
      double[] doubleArray0 = new double[4];
      tLongDoubleHashMap0.putIfAbsent(0L, 0L);
      tLongDoubleHashMap0.values(doubleArray0);
      assertEquals(false, tLongDoubleHashMap0.isEmpty());
      assertEquals(7, tLongDoubleHashMap0.capacity());
  }

  //Test case number: 20
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.containsValue(D)Z: I25 Branch 58 IF_ICMPNE L377 - false
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.containsValue(D)Z: I31 Branch 59 IFNE L377 - false
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.containsValue(D)Z: I18 Branch 57 IFLE L376 - false
   * 4 gnu.trove.map.hash.TLongDoubleHashMap.containsValue(D)Z: I25 Branch 58 IF_ICMPNE L377 - true
   */

  @Test
  public void test20()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap((-1), (-1));
      tLongDoubleHashMap0.putIfAbsent(885L, 0.0);
      boolean boolean0 = tLongDoubleHashMap0.containsValue(0.0);
      assertEquals("{885=0.0}", tLongDoubleHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.containsValue(D)Z: I31 Branch 59 IFNE L377 - true
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.containsValue(D)Z: I18 Branch 57 IFLE L376 - true
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.containsValue(D)Z: I18 Branch 57 IFLE L376 - false
   * 4 gnu.trove.map.hash.TLongDoubleHashMap.containsValue(D)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 5 gnu.trove.map.hash.TLongDoubleHashMap.containsValue(D)Z: I25 Branch 58 IF_ICMPNE L377 - false
   */

  @Test
  public void test21()  throws Throwable  {
      long[] longArray0 = new long[9];
      double[] doubleArray0 = new double[10];
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(longArray0, doubleArray0);
      boolean boolean0 = tLongDoubleHashMap0.containsValue(919.0454858628764);
      assertEquals(false, boolean0);
      assertEquals("{0=0.0}", tLongDoubleHashMap0.toString());
      assertEquals(23, tLongDoubleHashMap0.capacity());
      assertEquals(1, tLongDoubleHashMap0.size());
  }

  //Test case number: 22
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: I18 Branch 60 IFLE L407 - true
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test22()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(901);
      boolean boolean0 = tLongDoubleHashMap0.forEachValue((TDoubleProcedure) null);
      assertEquals(1907, tLongDoubleHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 11 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - false
   * 2 gnu.trove.map.hash.TLongDoubleHashMap$TLongDoubleHashIterator.value()D: root-Branch
   * 3 gnu.trove.map.hash.TLongDoubleHashMap$TLongDoubleHashIterator.<init>(Lgnu/trove/map/hash/TLongDoubleHashMap;Lgnu/trove/map/hash/TLongDoubleHashMap;)V: root-Branch
   * 4 gnu.trove.map.hash.TLongDoubleHashMap$TLongDoubleHashIterator.advance()V: root-Branch
   * 5 gnu.trove.map.hash.TLongDoubleHashMap$TLongDoubleHashIterator.key()J: root-Branch
   * 6 gnu.trove.map.hash.TLongDoubleHashMap.iterator()Lgnu/trove/iterator/TLongDoubleIterator;: root-Branch
   * 7 gnu.trove.map.hash.TLongDoubleHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 8 gnu.trove.map.hash.TLongDoubleHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   * 9 gnu.trove.map.hash.TLongDoubleHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 10 gnu.trove.map.hash.TLongDoubleHashMap.putAll(Lgnu/trove/map/TLongDoubleMap;)V: I15 Branch 43 IFEQ L243 - true
   * 11 gnu.trove.map.hash.TLongDoubleHashMap.putAll(Lgnu/trove/map/TLongDoubleMap;)V: I15 Branch 43 IFEQ L243 - false
   */

  @Test
  public void test23()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(57, (-256.6311F));
      double[] doubleArray0 = new double[6];
      TLongDoubleHashMap tLongDoubleHashMap1 = new TLongDoubleHashMap(tLongDoubleHashMap0._set, doubleArray0);
      tLongDoubleHashMap0.putAll((TLongDoubleMap) tLongDoubleHashMap1);
      // Undeclared exception!
      try {
        tLongDoubleHashMap0.forEachValue((TDoubleProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V: I18 Branch 66 IFLE L434 - true
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V: I18 Branch 66 IFLE L434 - false
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test24()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap();
      tLongDoubleHashMap0.transformValues((TDoubleFunction) null);
      assertEquals(23, tLongDoubleHashMap0.capacity());
  }

  //Test case number: 25
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.retainEntries(Lgnu/trove/procedure/TLongDoubleProcedure;)Z: I31 Branch 68 IFLE L453 - true
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.retainEntries(Lgnu/trove/procedure/TLongDoubleProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.retainEntries(Lgnu/trove/procedure/TLongDoubleProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   * 4 gnu.trove.map.hash.TLongDoubleHashMap.<init>(IFJD)V: root-Branch
   * 5 gnu.trove.map.hash.TLongDoubleHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 6 gnu.trove.map.hash.TLongDoubleHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 7 gnu.trove.map.hash.TLongDoubleHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   */

  @Test
  public void test25()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(0, (float) 0, (long) 0, (-1579.036251143137));
      boolean boolean0 = tLongDoubleHashMap0.retainEntries((TLongDoubleProcedure) null);
      assertEquals(false, boolean0);
      assertEquals("{}", tLongDoubleHashMap0.toString());
      assertEquals(3, tLongDoubleHashMap0.capacity());
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.retainEntries(Lgnu/trove/procedure/TLongDoubleProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - false
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.retainEntries(Lgnu/trove/procedure/TLongDoubleProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.retainEntries(Lgnu/trove/procedure/TLongDoubleProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test26()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap((-1844), 257.35486F);
      tLongDoubleHashMap0.putIfAbsent((-1895L), (-1895L));
      // Undeclared exception!
      try {
        tLongDoubleHashMap0.retainEntries((TLongDoubleProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.adjustValue(JD)Z: I9 Branch 71 IFGE L477 - true
   */

  @Test
  public void test27()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(Integer.MAX_VALUE);
      tLongDoubleHashMap0.adjustOrPutValue((-1367L), 1.0, 0.0);
      boolean boolean0 = tLongDoubleHashMap0.adjustValue((-1367L), (double) Integer.MAX_VALUE);
      assertEquals(false, tLongDoubleHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.adjustOrPutValue(JDD)D: I9 Branch 72 IFGE L491 - false
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.adjustOrPutValue(JDD)D: I58 Branch 73 IFEQ L502 - true
   */

  @Test
  public void test28()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(Integer.MAX_VALUE);
      tLongDoubleHashMap0.adjustOrPutValue((-1367L), 1.0, 0.0);
      double double0 = tLongDoubleHashMap0.adjustOrPutValue((-1367L), (double) (-1367L), 1.0);
      assertEquals(1, tLongDoubleHashMap0.size());
      assertEquals((-1367.0), double0, 0.01D);
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap();
      boolean boolean0 = tLongDoubleHashMap0.equals((Object) "1840");
      assertEquals(false, boolean0);
      assertEquals(23, tLongDoubleHashMap0.capacity());
  }

  //Test case number: 30
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - false
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.put(JD)D: root-Branch
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.doPut(JDI)D: I12 Branch 40 IFGE L214 - false
   * 4 gnu.trove.map.hash.TLongDoubleHashMap.doPut(JDI)D: I41 Branch 41 IFEQ L221 - true
   * 5 gnu.trove.map.hash.TLongDoubleHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 6 gnu.trove.map.hash.TLongDoubleHashMap.<init>([J[D)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 7 gnu.trove.map.hash.TLongDoubleHashMap.<init>([J[D)V: I24 Branch 33 IF_ICMPGE L119 - false
   */

  @Test
  public void test30()  throws Throwable  {
      long[] longArray0 = new long[9];
      double[] doubleArray0 = new double[6];
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(longArray0, doubleArray0);
      TLongDoubleHashMap tLongDoubleHashMap1 = new TLongDoubleHashMap();
      boolean boolean0 = tLongDoubleHashMap0.equals((Object) tLongDoubleHashMap1);
      assertEquals(23, tLongDoubleHashMap0.capacity());
      assertEquals(1, tLongDoubleHashMap0.size());
      assertFalse(tLongDoubleHashMap1.equals(tLongDoubleHashMap0));
      assertEquals(false, boolean0);
      assertEquals("{0=0.0}", tLongDoubleHashMap0.toString());
  }

  //Test case number: 31
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   * 4 gnu.trove.map.hash.TLongDoubleHashMap.<init>(IF)V: root-Branch
   */

  @Test
  public void test31()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap((-1), (-1));
      int int0 = tLongDoubleHashMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 32
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - false
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.<init>(I)V: root-Branch
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.doPut(JDI)D: I12 Branch 40 IFGE L214 - true
   * 4 gnu.trove.map.hash.TLongDoubleHashMap.doPut(JDI)D: I41 Branch 41 IFEQ L221 - false
   * 5 gnu.trove.map.hash.TLongDoubleHashMap.putIfAbsent(JD)D: I9 Branch 39 IFGE L205 - true
   * 6 gnu.trove.map.hash.TLongDoubleHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 7 gnu.trove.map.hash.TLongDoubleHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 8 gnu.trove.map.hash.TLongDoubleHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   */

  @Test
  public void test32()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap((-1108));
      tLongDoubleHashMap0.putIfAbsent(0L, 779.0912050112768);
      int int0 = tLongDoubleHashMap0.hashCode();
      assertEquals(1, tLongDoubleHashMap0.size());
      assertEquals((-1992737304), int0);
  }

  //Test case number: 33
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap$1.execute(JD)Z: I4 Branch 115 IFEQ L1233 - true
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.toString()Ljava/lang/String;: root-Branch
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TLongDoubleProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 4 gnu.trove.map.hash.TLongDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TLongDoubleProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 5 gnu.trove.map.hash.TLongDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TLongDoubleProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 6 gnu.trove.map.hash.TLongDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TLongDoubleProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 7 gnu.trove.map.hash.TLongDoubleHashMap.forEachEntry(Lgnu/trove/procedure/TLongDoubleProcedure;)Z: I39 Branch 65 IFNE L422 - true
   * 8 gnu.trove.map.hash.TLongDoubleHashMap$1.<init>(Lgnu/trove/map/hash/TLongDoubleHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 9 gnu.trove.map.hash.TLongDoubleHashMap$1.execute(JD)Z: I4 Branch 115 IFEQ L1233 - false
   */

  @Test
  public void test33()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap();
      tLongDoubleHashMap0.adjustOrPutValue((-957L), (double) (-957L), 0.0);
      tLongDoubleHashMap0.adjustOrPutValue(1L, (double) 0, (-718.6734763141343));
      String string0 = tLongDoubleHashMap0.toString();
      assertEquals(false, tLongDoubleHashMap0.isEmpty());
      assertEquals("{-957=0.0, 1=-718.6734763141343}", string0);
  }

  //Test case number: 34
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TLongDoubleHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - false
   * 2 gnu.trove.map.hash.TLongDoubleHashMap.<init>()V: root-Branch
   * 3 gnu.trove.map.hash.TLongDoubleHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.hash.TLongDoubleHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - true
   * 5 gnu.trove.map.hash.TLongDoubleHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - false
   * 6 gnu.trove.map.hash.TLongDoubleHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - true
   * 7 gnu.trove.map.hash.TLongDoubleHashMap.adjustOrPutValue(JDD)D: I9 Branch 72 IFGE L491 - true
   * 8 gnu.trove.map.hash.TLongDoubleHashMap.adjustOrPutValue(JDD)D: I58 Branch 73 IFEQ L502 - false
   */

  @Test
  public void test34()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap();
      tLongDoubleHashMap0.adjustOrPutValue((-957L), (double) (-957L), 0.0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tLongDoubleHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(1, tLongDoubleHashMap0.size());
      assertEquals(23, tLongDoubleHashMap0.capacity());
  }
}

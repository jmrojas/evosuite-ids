/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TFloatFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharSet;
import gnu.trove.map.TCharFloatMap;
import gnu.trove.map.hash.TCharFloatHashMap;
import gnu.trove.procedure.TCharFloatProcedure;
import java.util.Locale;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableCharFloatMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap();
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      tUnmodifiableCharFloatMap0.iterator();
      int int0 = (-1715);
      float float0 = (-1224.5454F);
      char char0 = ':';
      TCharFloatHashMap tCharFloatHashMap1 = new TCharFloatHashMap(int0, float0, char0, float0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap1 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap1);
      tUnmodifiableCharFloatMap1.size();
      tUnmodifiableCharFloatMap1.iterator();
      float float1 = 0.0F;
      tUnmodifiableCharFloatMap1.iterator();
      // Undeclared exception!
      try {
        tUnmodifiableCharFloatMap1.putIfAbsent(char0, float1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      char[] charArray0 = new char[6];
      char char0 = 'I';
      charArray0[0] = char0;
      char char1 = ']';
      charArray0[1] = char1;
      char char2 = '$';
      charArray0[2] = char2;
      char char3 = 'C';
      charArray0[3] = char3;
      char char4 = '(';
      charArray0[4] = char4;
      char char5 = 'q';
      charArray0[5] = char5;
      float[] floatArray0 = new float[2];
      floatArray0[0] = (float) charArray0[0];
      floatArray0[1] = (float) charArray0[1];
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(charArray0, floatArray0);
      TCharFloatHashMap tCharFloatHashMap1 = new TCharFloatHashMap((TCharFloatMap) tCharFloatHashMap0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap1);
      tUnmodifiableCharFloatMap0.iterator();
      // Undeclared exception!
      try {
        tUnmodifiableCharFloatMap0.remove(char5);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = (-1820);
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(int0);
      TCharFloatHashMap tCharFloatHashMap1 = new TCharFloatHashMap((TCharFloatMap) tCharFloatHashMap0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap1);
      char char0 = '!';
      // Undeclared exception!
      try {
        tUnmodifiableCharFloatMap0.adjustOrPutValue(char0, (float) int0, (float) char0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      char[] charArray0 = new char[4];
      char char0 = 'h';
      charArray0[0] = char0;
      char char1 = '{';
      charArray0[1] = char1;
      char char2 = '|';
      charArray0[2] = char2;
      char char3 = '\\';
      charArray0[3] = char3;
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) char2;
      float float0 = 1.0F;
      floatArray0[1] = float0;
      floatArray0[2] = (float) charArray0[0];
      float float1 = 0.0F;
      floatArray0[3] = float1;
      floatArray0[4] = (float) charArray0[0];
      floatArray0[5] = (float) char3;
      float float2 = (-1373.5573F);
      floatArray0[6] = float2;
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(charArray0, floatArray0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      TUnmodifiableCharSet tUnmodifiableCharSet0 = (TUnmodifiableCharSet)tUnmodifiableCharFloatMap0.keySet();
      assertEquals(4, tUnmodifiableCharSet0.size());
  }

  @Test
  public void test4()  throws Throwable  {
      TCharFloatMap tCharFloatMap0 = null;
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = null;
      try {
        tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap(tCharFloatMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      char[] charArray0 = new char[2];
      char char0 = 'v';
      charArray0[0] = char0;
      char char1 = 'D';
      charArray0[1] = char1;
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) char1;
      floatArray0[1] = (float) char0;
      float float0 = 1424.1685F;
      floatArray0[2] = float0;
      floatArray0[3] = (float) char1;
      floatArray0[4] = (float) char1;
      floatArray0[5] = (float) charArray0[1];
      floatArray0[6] = (float) charArray0[1];
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(charArray0, floatArray0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      TCharFloatProcedure tCharFloatProcedure0 = null;
      // Undeclared exception!
      try {
        tUnmodifiableCharFloatMap0.forEachEntry(tCharFloatProcedure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = 194;
      float float0 = 1.0F;
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(int0);
      char char0 = 'i';
      tCharFloatHashMap0.adjustValue(char0, float0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      tUnmodifiableCharFloatMap0.getNoEntryValue();
      tUnmodifiableCharFloatMap0.hashCode();
      TCharFloatHashMap tCharFloatHashMap1 = new TCharFloatHashMap(int0, float0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap1 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap1);
      tUnmodifiableCharFloatMap1.iterator();
      // Undeclared exception!
      try {
        tUnmodifiableCharFloatMap1.putAll((TCharFloatMap) tCharFloatHashMap1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      char[] charArray0 = new char[10];
      char char0 = '$';
      charArray0[0] = char0;
      char char1 = '2';
      charArray0[1] = char1;
      char char2 = 'a';
      charArray0[2] = char2;
      char char3 = '\'';
      charArray0[3] = char3;
      char char4 = '5';
      charArray0[4] = char4;
      char char5 = 'g';
      charArray0[5] = char5;
      char char6 = 'i';
      charArray0[6] = char6;
      char char7 = 'L';
      charArray0[7] = char7;
      char char8 = '5';
      charArray0[8] = char8;
      char char9 = 'v';
      charArray0[9] = char9;
      float[] floatArray0 = new float[8];
      floatArray0[0] = (float) char8;
      floatArray0[1] = (float) charArray0[4];
      floatArray0[2] = (float) char1;
      floatArray0[3] = (float) char5;
      floatArray0[4] = (float) char1;
      floatArray0[5] = (float) charArray0[4];
      floatArray0[6] = (float) char6;
      floatArray0[7] = (float) charArray0[6];
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(charArray0, floatArray0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      int int0 = tUnmodifiableCharFloatMap0.size();
      assertEquals(8, int0);
      
      TCharFloatHashMap tCharFloatHashMap1 = new TCharFloatHashMap();
      TCharFloatHashMap tCharFloatHashMap2 = new TCharFloatHashMap((TCharFloatMap) tCharFloatHashMap1);
      tCharFloatHashMap2.valueCollection();
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap1 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap2);
      char char10 = 'Y';
      // Undeclared exception!
      try {
        tUnmodifiableCharFloatMap1.putIfAbsent(char10, char10);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = 0;
      float float0 = 771.81366F;
      char char0 = '(';
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap();
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      tUnmodifiableCharFloatMap0.values();
      float float1 = (-1057.97F);
      TCharFloatMap tCharFloatMap0 = null;
      TCharFloatHashMap tCharFloatHashMap1 = null;
      try {
        tCharFloatHashMap1 = new TCharFloatHashMap(tCharFloatMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 0;
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(int0, int0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      Locale locale0 = Locale.UK;
      tCharFloatHashMap0.isEmpty();
      String string0 = locale0.getScript();
      tUnmodifiableCharFloatMap0.equals((Object) string0);
      int int1 = (-1513);
      char char0 = '*';
      float float0 = 0.0F;
      tCharFloatHashMap0.putIfAbsent(char0, (float) int1);
      Object object0 = null;
      tUnmodifiableCharFloatMap0.equals(object0);
      // Undeclared exception!
      try {
        tUnmodifiableCharFloatMap0.putIfAbsent(char0, float0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[6];
      char char0 = 'L';
      charArray0[0] = char0;
      char char1 = 'd';
      charArray0[1] = char1;
      char char2 = '5';
      charArray0[2] = char2;
      char char3 = '_';
      charArray0[3] = char3;
      char char4 = 'l';
      charArray0[4] = char4;
      char char5 = 'S';
      charArray0[5] = char5;
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) char3;
      floatArray0[1] = (float) charArray0[1];
      floatArray0[2] = (float) char4;
      floatArray0[3] = (float) charArray0[5];
      float float0 = (-1.0F);
      floatArray0[4] = float0;
      floatArray0[5] = (float) char4;
      floatArray0[6] = (float) char5;
      floatArray0[7] = (float) charArray0[5];
      floatArray0[8] = (float) charArray0[2];
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(charArray0, floatArray0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      int int0 = (-1865);
      char char6 = '?';
      float float1 = (-1.0F);
      TCharFloatHashMap tCharFloatHashMap1 = new TCharFloatHashMap(int0, (float) int0, char6, float1);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap1 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap1);
      // Undeclared exception!
      try {
        tUnmodifiableCharFloatMap1.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 19373;
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(int0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      char char0 = 'h';
      tUnmodifiableCharFloatMap0.containsKey(char0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap1 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      boolean boolean0 = tUnmodifiableCharFloatMap1.containsValue((float) int0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap();
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap1 = new TUnmodifiableCharFloatMap((TCharFloatMap) tUnmodifiableCharFloatMap0);
      TFloatFunction tFloatFunction0 = null;
      // Undeclared exception!
      try {
        tUnmodifiableCharFloatMap1.transformValues(tFloatFunction0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = (-44);
      char[] charArray0 = new char[1];
      char char0 = 'H';
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(int0, (float) int0, char0, (float) char0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      char char1 = 'X';
      // Undeclared exception!
      try {
        tUnmodifiableCharFloatMap0.increment(char1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 0;
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(int0, int0);
      TCharFloatHashMap tCharFloatHashMap1 = null;
      try {
        tCharFloatHashMap1 = new TCharFloatHashMap((TCharFloatMap) tCharFloatHashMap0);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[2];
      char char0 = 'H';
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) char0;
      floatArray0[1] = (float) char0;
      floatArray0[2] = (float) char0;
      floatArray0[3] = (float) char0;
      floatArray0[4] = (float) char0;
      floatArray0[5] = (float) char0;
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((int) char0);
      TCharFloatHashMap tCharFloatHashMap1 = new TCharFloatHashMap((TCharFloatMap) tCharFloatHashMap0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap1);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap1 = new TUnmodifiableCharFloatMap((TCharFloatMap) tUnmodifiableCharFloatMap0);
      tUnmodifiableCharFloatMap1.getNoEntryKey();
      floatArray0[6] = (float) char0;
      TCharFloatHashMap tCharFloatHashMap2 = new TCharFloatHashMap(charArray0, floatArray0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap2 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap2);
      char char1 = 'J';
      // Undeclared exception!
      try {
        tUnmodifiableCharFloatMap2.remove(char1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = 0;
      float float0 = 1.0F;
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(int0, float0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      assertEquals("{}", tUnmodifiableCharFloatMap0.toString());
  }

  @Test
  public void test17()  throws Throwable  {
      int int0 = 2020;
      float float0 = 471.22638F;
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(int0, float0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      char char0 = 'z';
      float float1 = 0.5F;
      // Undeclared exception!
      try {
        tUnmodifiableCharFloatMap0.put(char0, float1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      int int0 = 74;
      char[] charArray0 = new char[8];
      char char0 = 'B';
      charArray0[0] = char0;
      char char1 = 'J';
      charArray0[1] = char1;
      char char2 = '|';
      charArray0[2] = char2;
      char char3 = '$';
      charArray0[3] = char3;
      char char4 = 'q';
      charArray0[4] = char4;
      char char5 = '-';
      charArray0[5] = char5;
      char char6 = 'U';
      charArray0[6] = char6;
      char char7 = '2';
      charArray0[7] = char7;
      float[] floatArray0 = new float[8];
      floatArray0[0] = (float) char3;
      floatArray0[1] = (float) char4;
      float float0 = 0.0F;
      floatArray0[2] = float0;
      floatArray0[3] = (float) charArray0[7];
      floatArray0[4] = (float) char3;
      float float1 = 0.0F;
      floatArray0[5] = float1;
      floatArray0[6] = (float) char7;
      floatArray0[7] = (float) char5;
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(charArray0, floatArray0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap1 = new TUnmodifiableCharFloatMap((TCharFloatMap) tUnmodifiableCharFloatMap0);
      TCharFloatHashMap tCharFloatHashMap1 = new TCharFloatHashMap(int0);
      TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap2 = new TUnmodifiableCharFloatMap((TCharFloatMap) tCharFloatHashMap1);
      boolean boolean0 = tUnmodifiableCharFloatMap2.containsValue((float) int0);
      assertEquals(false, boolean0);
  }
}

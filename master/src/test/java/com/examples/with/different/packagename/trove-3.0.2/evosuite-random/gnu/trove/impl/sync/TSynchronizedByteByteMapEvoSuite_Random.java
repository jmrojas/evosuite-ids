/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedByteByteMap;
import gnu.trove.map.TByteByteMap;
import gnu.trove.map.hash.TByteByteHashMap;
import java.io.BufferedInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedByteByteMapEvoSuite_Random {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = 823117;
      float float0 = (-337.96396F);
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(int0);
      String string0 = "";
      File file0 = new File(string0, string0);
      file0.getCanonicalFile();
      File file1 = file0.getAbsoluteFile();
      String string1 = "+<eR9<Yyz4T<KN3TXh";
      File file2 = new File(file1, string1);
      String string2 = file2.getPath();
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0, (Object) string2);
      byte byte0 = (byte) (-108);
      byte byte1 = (byte) (-81);
      byte byte2 = (byte)0;
      tSynchronizedByteByteMap0.adjustOrPutValue(byte0, byte1, byte2);
      TSynchronizedByteByteMap tSynchronizedByteByteMap1 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      String string3 = "tw";
      String string4 = ", ";
      URI uRI0 = new URI(string3, string3, string4);
      String string5 = uRI0.getRawAuthority();
      TSynchronizedByteByteMap tSynchronizedByteByteMap2 = new TSynchronizedByteByteMap((TByteByteMap) tSynchronizedByteByteMap1, (Object) string5);
      uRI0.getAuthority();
      byte byte3 = (byte)0;
      // Undeclared exception!
      try {
        tSynchronizedByteByteMap2.containsKey(byte3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)108;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-61);
      byteArray0[3] = byte3;
      byte byte4 = (byte)82;
      byteArray0[4] = byte4;
      byte byte5 = (byte)106;
      byteArray0[5] = byte5;
      byte byte6 = (byte)1;
      byteArray0[6] = byte6;
      byte byte7 = (byte)32;
      byteArray0[7] = byte7;
      byte byte8 = (byte)0;
      byteArray0[8] = byte8;
      byte byte9 = (byte) (-1);
      byteArray0[9] = byte9;
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(byteArray0, byteArray0);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      assertEquals(false, tSynchronizedByteByteMap0.isEmpty());
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-1);
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-89);
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-34);
      byteArray0[2] = byte2;
      byte byte3 = (byte)17;
      byteArray0[3] = byte3;
      byte byte4 = (byte)77;
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-49);
      byteArray0[5] = byte5;
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(byteArray0, byteArray0);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte byte6 = (byte) (-50);
      byte byte7 = (byte)0;
      tSynchronizedByteByteMap0.put(byte6, byte7);
      TByteByteMap tByteByteMap0 = null;
      TSynchronizedByteByteMap tSynchronizedByteByteMap1 = null;
      try {
        tSynchronizedByteByteMap1 = new TSynchronizedByteByteMap(tByteByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-21);
      byteArray0[0] = byte0;
      byte byte1 = (byte)81;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-79);
      byteArray0[2] = byte2;
      byte byte3 = (byte)8;
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-53);
      byteArray0[4] = byte4;
      byte byte5 = (byte)0;
      byteArray0[5] = byte5;
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(byteArray0, byteArray0);
      String string0 = "kfrB%|3C5{1<VU";
      // Undeclared exception!
      try {
        URI.create(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in path at index 2: kfrB%|3C5{1<VU
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)1;
      byteArray0[0] = byte0;
      byte byte1 = (byte)1;
      byteArray0[1] = byte1;
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = byte1;
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(byteArray0, byteArray1);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      byteArray1[0] = byte0;
      String string0 = locale0.toString();
      TSynchronizedByteByteMap tSynchronizedByteByteMap1 = new TSynchronizedByteByteMap((TByteByteMap) tSynchronizedByteByteMap0, (Object) string0);
      byteArray1[0] = byte0;
      byte byte2 = (byte) (-86);
      byte byte3 = tSynchronizedByteByteMap1.adjustOrPutValue(byteArray0[1], byte2, byte2);
      assertEquals("{1=-85}", tByteByteHashMap0.toString());
      assertEquals((byte) (-85), byte3);
  }

  @Test
  public void test5()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      String string0 = "('?]&S~kG>-T'D+~p#R";
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      Locale locale0 = Locale.ROOT;
      char char0 = '<';
      // Undeclared exception!
      try {
        locale0.getExtension(char0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Ill-formed extension key: <
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = (-237);
      byte byte0 = (byte) (-93);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = byte0;
      byteArray0[1] = byte0;
      byte byte1 = (byte)0;
      byteArray0[2] = byte1;
      byte byte2 = (byte)1;
      byteArray0[0] = byte2;
      byteArray0[1] = byte0;
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap((int) byte1);
      Object object0 = null;
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0, object0);
      TSynchronizedByteByteMap tSynchronizedByteByteMap1 = new TSynchronizedByteByteMap((TByteByteMap) tSynchronizedByteByteMap0);
      TByteByteHashMap tByteByteHashMap1 = null;
      try {
        tByteByteHashMap1 = new TByteByteHashMap((TByteByteMap) tSynchronizedByteByteMap1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)115;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-52);
      byteArray0[4] = byte4;
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(byteArray0, byteArray0);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte byte5 = (byte) (-27);
      tSynchronizedByteByteMap0.remove(byte5);
      TByteByteMap tByteByteMap0 = null;
      TByteByteHashMap tByteByteHashMap1 = null;
      try {
        tByteByteHashMap1 = new TByteByteHashMap(tByteByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          int int0 = (-419);
          TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(int0, int0);
          String string0 = "1gOr|o";
          // Undeclared exception!
          try {
            File.createTempFile(string0, string0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Unable to create temporary file
             //
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test9()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      String string0 = "I";
      int int0 = 1475;
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, int0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: I://I@I:1475I?I#I
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = 0;
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-65);
      byteArray0[0] = byte0;
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(byteArray0, byteArray0);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      float float0 = (-1856.6896F);
      int int1 = 113;
      float float1 = (-1403.9364F);
      byte byte1 = (byte)0;
      TByteByteHashMap tByteByteHashMap1 = new TByteByteHashMap(int1, float1, byte1, byte1);
      TSynchronizedByteByteMap tSynchronizedByteByteMap1 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap1);
      tSynchronizedByteByteMap1.isEmpty();
      byte byte2 = (byte) (-8);
      byte byte3 = (byte) (-109);
      TByteByteHashMap tByteByteHashMap2 = new TByteByteHashMap(int0, float0, byte2, byte3);
      TSynchronizedByteByteMap tSynchronizedByteByteMap2 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap2);
      boolean boolean0 = tSynchronizedByteByteMap2.isEmpty();
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 0;
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(int0);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte byte0 = (byte) (-104);
      byte byte1 = (byte)22;
      tSynchronizedByteByteMap0.adjustOrPutValue(byte0, byte0, byte1);
      tByteByteHashMap0.size();
      boolean boolean0 = tSynchronizedByteByteMap0.isEmpty();
      assertEquals(false, tByteByteHashMap0.isEmpty());
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TByteByteHashMap tByteByteHashMap1 = new TByteByteHashMap((TByteByteMap) tByteByteHashMap0);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap1);
      int int0 = 2037;
      float float0 = 323.07172F;
      byte byte0 = (byte)91;
      TByteByteHashMap tByteByteHashMap2 = new TByteByteHashMap(int0, float0, byte0, byte0);
      TByteByteHashMap tByteByteHashMap3 = new TByteByteHashMap((TByteByteMap) tByteByteHashMap2);
      TSynchronizedByteByteMap tSynchronizedByteByteMap1 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap3);
      boolean boolean0 = tSynchronizedByteByteMap1.isEmpty();
      assertEquals(true, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = 0;
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(int0);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      Locale locale0 = Locale.ROOT;
      String string0 = locale0.getISO3Country();
      TSynchronizedByteByteMap tSynchronizedByteByteMap1 = new TSynchronizedByteByteMap((TByteByteMap) tSynchronizedByteByteMap0, (Object) string0);
      assertEquals(true, tSynchronizedByteByteMap1.isEmpty());
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 1436;
      TByteByteMap tByteByteMap0 = null;
      Object object0 = null;
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap(tByteByteMap0, object0);
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(int0, int0);
      TSynchronizedByteByteMap tSynchronizedByteByteMap1 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte byte0 = (byte) (-46);
      byte byte1 = (byte)0;
      tByteByteHashMap0.toString();
      tSynchronizedByteByteMap1.putIfAbsent(byte0, byte1);
      tSynchronizedByteByteMap1.hashCode();
      tSynchronizedByteByteMap1.getNoEntryValue();
      TByteByteMap tByteByteMap1 = null;
      TSynchronizedByteByteMap tSynchronizedByteByteMap2 = null;
      try {
        tSynchronizedByteByteMap2 = new TSynchronizedByteByteMap(tByteByteMap1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = (-199);
      int int1 = 18;
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(int1);
      Locale locale0 = Locale.ITALY;
      String string0 = locale0.getISO3Language();
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap((TByteByteMap) tByteByteHashMap0, (Object) string0);
      tSynchronizedByteByteMap0.size();
      InputStream inputStream0 = null;
      int int2 = 1042;
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(inputStream0, int2);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) bufferedInputStream0);
      try {
        dataInputStream0.readUTF();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = 188;
      float float0 = 0.0F;
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(int0, float0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(int0);
      String string0 = "{8gO_t]Zn2q_F*(NX\"8";
      try {
        byteArrayOutputStream0.toString(string0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
         //
         // {8gO_t]Zn2q_F*(NX\"8
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      TByteByteMap tByteByteMap0 = null;
      Locale locale0 = Locale.KOREAN;
      String string0 = locale0.getISO3Country();
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = new TSynchronizedByteByteMap(tByteByteMap0, (Object) string0);
      // Undeclared exception!
      try {
        tSynchronizedByteByteMap0.keySet();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

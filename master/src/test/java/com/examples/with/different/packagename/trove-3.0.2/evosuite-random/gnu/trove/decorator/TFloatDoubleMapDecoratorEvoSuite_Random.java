/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TFloatDoubleMapDecorator;
import gnu.trove.map.TFloatDoubleMap;
import gnu.trove.map.hash.TFloatDoubleHashMap;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InterruptedIOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutput;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.StreamCorruptedException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Locale;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.evosuite.testcase.TestCaseExecutor;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

public class TFloatDoubleMapDecoratorEvoSuite_Random {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      float[] floatArray0 = new float[3];
      float float0 = (-1.0F);
      floatArray0[0] = float0;
      float float1 = (-131.06966F);
      floatArray0[1] = float1;
      float float2 = 1784.2478F;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) float0;
      doubleArray0[1] = (double) float1;
      doubleArray0[2] = (double) float0;
      doubleArray0[3] = (double) floatArray0[1];
      double double0 = 1102.171318392543;
      doubleArray0[4] = double0;
      doubleArray0[5] = (double) float0;
      doubleArray0[6] = (double) float1;
      doubleArray0[7] = (double) float2;
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(floatArray0, doubleArray0);
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator0 = new TFloatDoubleMapDecorator((TFloatDoubleMap) tFloatDoubleHashMap0);
      floatArray0[2] = float2;
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) float0;
      double double1 = 0.0;
      doubleArray1[1] = double1;
      TFloatDoubleHashMap tFloatDoubleHashMap1 = new TFloatDoubleHashMap(floatArray0, doubleArray1);
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator1 = new TFloatDoubleMapDecorator((TFloatDoubleMap) tFloatDoubleHashMap1);
      TFloatDoubleHashMap tFloatDoubleHashMap2 = (TFloatDoubleHashMap)tFloatDoubleMapDecorator1.getMap();
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator2 = new TFloatDoubleMapDecorator((TFloatDoubleMap) tFloatDoubleHashMap2);
      assertEquals("{-1.0=-1.0, -131.06966=null}", tFloatDoubleMapDecorator2.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      TFloatDoubleMap tFloatDoubleMap0 = null;
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator0 = new TFloatDoubleMapDecorator(tFloatDoubleMap0);
      // Undeclared exception!
      try {
        tFloatDoubleMapDecorator0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

//   @Test
//   public void test2()  throws Throwable  {
//       int int0 = 927292699;
//       TFloatDoubleMapDecorator tFloatDoubleMapDecorator0 = new TFloatDoubleMapDecorator();
//       TFloatDoubleMap tFloatDoubleMap0 = tFloatDoubleMapDecorator0.getMap();
//       TFloatDoubleMapDecorator tFloatDoubleMapDecorator1 = new TFloatDoubleMapDecorator(tFloatDoubleMap0);
//       PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
//       PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
//       ObjectInputStream objectInputStream0 = null;
//       try {
//         objectInputStream0 = new ObjectInputStream((InputStream) pipedInputStream0);
//         fail("Expecting exception: InterruptedIOException");
//       
//       } catch(InterruptedIOException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//       }
//   }

  @Test
  public void test3()  throws Throwable  {
      TFloatDoubleMap tFloatDoubleMap0 = null;
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator0 = new TFloatDoubleMapDecorator();
      String string0 = "<u}~ U]9lmEhrJt+%T";
      Locale locale0 = new Locale(string0, string0, string0);
      Locale locale1 = Locale.JAPANESE;
      InputStream inputStream0 = null;
      DataInputStream dataInputStream0 = new DataInputStream(inputStream0);
      // Undeclared exception!
      try {
        dataInputStream0.readUTF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator0 = new TFloatDoubleMapDecorator();
      ObjectOutput objectOutput0 = null;
      // Undeclared exception!
      try {
        tFloatDoubleMapDecorator0.writeExternal(objectOutput0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TFloatDoubleMap tFloatDoubleMap0 = null;
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator0 = new TFloatDoubleMapDecorator(tFloatDoubleMap0);
      // Undeclared exception!
      try {
        tFloatDoubleMapDecorator0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator0 = new TFloatDoubleMapDecorator();
      Object object0 = new Object();
      boolean boolean0 = tFloatDoubleMapDecorator0.containsKey(object0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator0 = new TFloatDoubleMapDecorator();
      Locale locale0 = Locale.CANADA_FRENCH;
      String string0 = "Mo%{}LWD=6IPL&x}w";
      File file0 = new File(string0);
      FileInputStream fileInputStream0 = null;
      try {
        fileInputStream0 = new FileInputStream(file0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // Mo%{}LWD=6IPL&x}w (No such file or directory)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      float[] floatArray0 = new float[3];
      float float0 = 0.0F;
      floatArray0[0] = float0;
      float float1 = 1056.3745F;
      floatArray0[1] = float1;
      float float2 = 0.0F;
      floatArray0[2] = float2;
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) floatArray0[2];
      doubleArray0[1] = (double) float0;
      doubleArray0[2] = (double) float1;
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(floatArray0, doubleArray0);
      TFloatDoubleHashMap tFloatDoubleHashMap1 = new TFloatDoubleHashMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator0 = new TFloatDoubleMapDecorator((TFloatDoubleMap) tFloatDoubleHashMap1);
      tFloatDoubleMapDecorator0.put((Float) floatArray0[0], (Double) doubleArray0[0]);
      TFloatDoubleHashMap tFloatDoubleHashMap2 = new TFloatDoubleHashMap();
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator1 = new TFloatDoubleMapDecorator((TFloatDoubleMap) tFloatDoubleHashMap2);
      TFloatDoubleHashMap tFloatDoubleHashMap3 = (TFloatDoubleHashMap)tFloatDoubleMapDecorator1.getMap();
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator2 = new TFloatDoubleMapDecorator((TFloatDoubleMap) tFloatDoubleHashMap3);
      tFloatDoubleMapDecorator2.size();
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator3 = new TFloatDoubleMapDecorator();
      int int0 = 0;
      double double0 = (-1196.4317650723513);
      Float float3 = new Float(double0);
      Object object0 = new Object();
      tFloatDoubleMapDecorator3.containsKey(object0);
      Double double1 = new Double(double0);
      // Undeclared exception!
      try {
        tFloatDoubleMapDecorator3.put(float3, double1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = (-1486);
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(int0);
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator0 = new TFloatDoubleMapDecorator((TFloatDoubleMap) tFloatDoubleHashMap0);
      tFloatDoubleMapDecorator0.values();
      Float float0 = new Float((double) int0);
      double double0 = 1.0;
      Double double1 = new Double(double0);
      tFloatDoubleMapDecorator0.put(float0, double1);
      assertEquals(false, tFloatDoubleHashMap0.isEmpty());
      assertEquals("{-1486.0=1.0}", tFloatDoubleMapDecorator0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap();
          TFloatDoubleMapDecorator tFloatDoubleMapDecorator0 = new TFloatDoubleMapDecorator((TFloatDoubleMap) tFloatDoubleHashMap0);
          String string0 = "$Fx/7*QbecPK";
          File file0 = new File(string0, string0);
          // Undeclared exception!
          try {
            File.createTempFile(string0, string0, file0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.io.FilePermission\" \"$Fx/7*QbecPK/$Fx/7*QbecPK/$Fx/7*QbecPK7956669034197480510$Fx/7*QbecPK\" \"write\")
             // java.lang.Thread.getStackTrace(Thread.java:1567)
             // org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
             // java.io.File.createTempFile(File.java:1871)
             // sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             // sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:601)
             // org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:264)
             // org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:144)
             // org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             // org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             // org.evosuite.testcase.TestRunnable.call(TestRunnable.java:1)
             // java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
             // java.util.concurrent.FutureTask.run(FutureTask.java:166)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
             // java.lang.Thread.run(Thread.java:722)
             //
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test11()  throws Throwable  {
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator0 = new TFloatDoubleMapDecorator();
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)112;
      byteArray0[0] = byte0;
      byte byte1 = (byte)53;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      byteArray0[0] = byte2;
      byteArray0[1] = byte2;
      byte byte3 = (byte)113;
      byteArray0[2] = byte3;
      byteArray0[3] = byte2;
      byteArray0[4] = byte1;
      byte byte4 = (byte)0;
      byteArray0[3] = byte4;
      byte byte5 = (byte) (-3);
      byteArray0[4] = byte5;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) byteArrayInputStream0);
        fail("Expecting exception: StreamCorruptedException");
      
      } catch(StreamCorruptedException e) {
         //
         // invalid stream header: 00007100
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 16;
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(int0);
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator0 = new TFloatDoubleMapDecorator((TFloatDoubleMap) tFloatDoubleHashMap0);
      TFloatDoubleHashMap tFloatDoubleHashMap1 = (TFloatDoubleHashMap)tFloatDoubleMapDecorator0.getMap();
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator1 = new TFloatDoubleMapDecorator((TFloatDoubleMap) tFloatDoubleHashMap1);
      int int1 = 1;
      TFloatDoubleHashMap tFloatDoubleHashMap2 = new TFloatDoubleHashMap(int1, int1, int1, int1);
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator2 = new TFloatDoubleMapDecorator((TFloatDoubleMap) tFloatDoubleHashMap2);
      String string0 = "tb'zTx6@_";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: tb'zTx6@_://tb'zTx6@_tb'zTx6@_#tb'zTx6@_
         //
      }
  }

//   @Test
//   public void test13()  throws Throwable  {
//       TFloatDoubleMapDecorator tFloatDoubleMapDecorator0 = new TFloatDoubleMapDecorator();
//       Float float0 = null;
//       // Undeclared exception!
//       try {
//         Double.valueOf((double) float0);
//         fail("Expecting exception: IllegalArgumentException");
//       
//       } catch(IllegalArgumentException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//       }
//   }

  @Test
  public void test14()  throws Throwable  {
      int int0 = (-1372);
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(int0);
      // Undeclared exception!
      try {
        tFloatDoubleHashMap0.setAutoCompactionFactor((float) int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Factor must be >= 0: -1372.0
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = (-394);
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator0 = new TFloatDoubleMapDecorator();
      double double0 = 625.1437022785263;
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(int0, (float) int0, (float) int0, double0);
      TFloatDoubleHashMap tFloatDoubleHashMap1 = new TFloatDoubleHashMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      TFloatDoubleHashMap tFloatDoubleHashMap2 = new TFloatDoubleHashMap((TFloatDoubleMap) tFloatDoubleHashMap1);
      String string0 = tFloatDoubleHashMap2.toString();
      tFloatDoubleMapDecorator0.containsKey((Object) string0);
      double double1 = 1.0;
      TFloatDoubleHashMap tFloatDoubleHashMap3 = new TFloatDoubleHashMap(int0, (float) int0, (float) int0, double1);
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator1 = new TFloatDoubleMapDecorator((TFloatDoubleMap) tFloatDoubleHashMap3);
      tFloatDoubleMapDecorator1.entrySet();
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = double1;
      doubleArray0[1] = double1;
      double double2 = 0.0;
      doubleArray0[2] = double2;
      doubleArray0[3] = (double) int0;
      doubleArray0[4] = double1;
      doubleArray0[5] = double1;
      doubleArray0[6] = (double) int0;
      doubleArray0[7] = (double) int0;
      doubleArray0[8] = (double) int0;
      tFloatDoubleHashMap3.values(doubleArray0);
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator2 = new TFloatDoubleMapDecorator();
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator3 = new TFloatDoubleMapDecorator((TFloatDoubleMap) tFloatDoubleHashMap3);
      float float0 = 1139.1744F;
      Float float1 = new Float(float0);
      tFloatDoubleMapDecorator3.put(float1, (Double) double1);
      assertEquals(false, tFloatDoubleMapDecorator3.isEmpty());
      assertEquals("{1139.1744=1.0}", tFloatDoubleHashMap3.toString());
  }

  @Test
  public void test16()  throws Throwable  {
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator0 = new TFloatDoubleMapDecorator();
      TFloatDoubleMap tFloatDoubleMap0 = tFloatDoubleMapDecorator0.getMap();
      TFloatDoubleMapDecorator tFloatDoubleMapDecorator1 = new TFloatDoubleMapDecorator(tFloatDoubleMap0);
      Locale locale0 = Locale.US;
      String string0 = locale0.getDisplayScript();
      tFloatDoubleMapDecorator0.containsKey((Object) string0);
      float float0 = 0.0F;
      String string1 = "+!lY9(]I<ANa6F";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string1, string1, string1, string1, string1);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: +!lY9(]I<ANa6F://+!lY9(]I%3CANa6%7FF+!lY9(%5DI%3CANa6%7FF?+!lY9(]I%3CANa6%7FF#+!lY9(]I%3CANa6%7FF
         //
      }
  }
}

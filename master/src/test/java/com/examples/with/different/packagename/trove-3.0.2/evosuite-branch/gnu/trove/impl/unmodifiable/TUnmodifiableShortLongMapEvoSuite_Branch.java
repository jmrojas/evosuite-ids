/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TLongFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortSet;
import gnu.trove.map.TShortLongMap;
import gnu.trove.map.hash.TShortLongHashMap;
import gnu.trove.procedure.TLongProcedure;
import gnu.trove.procedure.TShortLongProcedure;
import gnu.trove.procedure.TShortProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableShortLongMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.remove(S)J: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.<init>(Lgnu/trove/map/TShortLongMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap((-673));
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortLongMap0.remove((short)227);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.forEachEntry(Lgnu/trove/procedure/TShortLongProcedure;)Z: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap((-729), (-729));
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      boolean boolean0 = tUnmodifiableShortLongMap0.forEachEntry((TShortLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.putIfAbsent(SJ)J: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(0);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortLongMap0.putIfAbsent((short)0, (long) 0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.put(SJ)J: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap();
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortLongMap0.put((short) (-1370), (short) (-1370));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 4
  /*
   * 7 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.iterator()Lgnu/trove/iterator/TShortLongIterator;: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.size()I: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.key()S: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.advance()V: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.value()J: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableShortLongMap;)V: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap$1.hasNext()Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      short[] shortArray0 = new short[10];
      long[] longArray0 = new long[6];
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(shortArray0, longArray0);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      TShortLongHashMap tShortLongHashMap1 = new TShortLongHashMap((TShortLongMap) tUnmodifiableShortLongMap0);
      assertEquals(1, tUnmodifiableShortLongMap0.size());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.clear()V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap((-389));
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortLongMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.get(S)J: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(Integer.MAX_VALUE);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      long long0 = tUnmodifiableShortLongMap0.get((short)1);
      assertEquals(0L, long0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(2);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      boolean boolean0 = tUnmodifiableShortLongMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.adjustOrPutValue(SJJ)J: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(Integer.MAX_VALUE);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortLongMap0.adjustOrPutValue((short)1, (long) Integer.MAX_VALUE, (long) Integer.MAX_VALUE);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.containsKey(S)Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(Integer.MAX_VALUE);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      boolean boolean0 = tUnmodifiableShortLongMap0.containsKey((short)1);
      assertEquals(false, boolean0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      short[] shortArray0 = new short[18];
      long[] longArray0 = new long[1];
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(shortArray0, longArray0);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      HashMap<Short, Long> hashMap0 = new HashMap<Short, Long>();
      // Undeclared exception!
      try {
        tUnmodifiableShortLongMap0.putAll((Map<? extends Short, ? extends Long>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.adjustValue(SJ)Z: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap((-1), (float) (-1), (short) (-729), (long) (-1));
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortLongMap0.adjustValue((short) (-729), (long) (-1));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.containsValue(J)Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(Integer.MAX_VALUE);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      boolean boolean0 = tUnmodifiableShortLongMap0.containsValue((long) Integer.MAX_VALUE);
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.retainEntries(Lgnu/trove/procedure/TShortLongProcedure;)Z: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap();
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortLongMap0.retainEntries((TShortLongProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.getNoEntryValue()J: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(13);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      long long0 = tUnmodifiableShortLongMap0.getNoEntryValue();
      assertEquals(0L, long0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keys([S)[S: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(Integer.MAX_VALUE);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      short[] shortArray0 = tUnmodifiableShortLongMap0.keys(tShortLongHashMap0._set);
      assertNotNull(shortArray0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.increment(S)Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(13);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortLongMap0.increment((short) (-155));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.getNoEntryKey()S: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(0);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      short short0 = tUnmodifiableShortLongMap0.getNoEntryKey();
      assertEquals((short)0, short0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.transformValues(Lgnu/trove/function/TLongFunction;)V: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(2);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortLongMap0.transformValues((TLongFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.values([J)[J: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap();
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      long[] longArray0 = new long[1];
      long[] longArray1 = tUnmodifiableShortLongMap0.values(longArray0);
      assertSame(longArray1, longArray0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(0);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      boolean boolean0 = tUnmodifiableShortLongMap0.forEachKey((TShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keys()[S: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(Integer.MAX_VALUE);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      short[] shortArray0 = tUnmodifiableShortLongMap0.keys();
      assertNotNull(shortArray0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(13);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      boolean boolean0 = tUnmodifiableShortLongMap0.forEachValue((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.putAll(Lgnu/trove/map/TShortLongMap;)V: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap((-64));
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortLongMap0.putAll((TShortLongMap) tUnmodifiableShortLongMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.hashCode()I: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(Integer.MAX_VALUE);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      int int0 = tUnmodifiableShortLongMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.values()[J: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap((-673));
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      long[] longArray0 = tUnmodifiableShortLongMap0.values();
      assertNotNull(longArray0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(13);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      String string0 = tUnmodifiableShortLongMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.<init>(Lgnu/trove/map/TShortLongMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = null;
      try {
        tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keySet()Lgnu/trove/set/TShortSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.keySet()Lgnu/trove/set/TShortSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      short[] shortArray0 = new short[10];
      long[] longArray0 = new long[6];
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(shortArray0, longArray0);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      TUnmodifiableShortSet tUnmodifiableShortSet0 = (TUnmodifiableShortSet)tUnmodifiableShortLongMap0.keySet();
      assertNotNull(tUnmodifiableShortSet0);
      
      TUnmodifiableShortSet tUnmodifiableShortSet1 = (TUnmodifiableShortSet)tUnmodifiableShortLongMap0.keySet();
      assertSame(tUnmodifiableShortSet1, tUnmodifiableShortSet0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.valueCollection()Lgnu/trove/TLongCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.valueCollection()Lgnu/trove/TLongCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(13);
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      TUnmodifiableLongCollection tUnmodifiableLongCollection0 = (TUnmodifiableLongCollection)tUnmodifiableShortLongMap0.valueCollection();
      assertNotNull(tUnmodifiableLongCollection0);
      
      TUnmodifiableLongCollection tUnmodifiableLongCollection1 = (TUnmodifiableLongCollection)tUnmodifiableShortLongMap0.valueCollection();
      assertSame(tUnmodifiableLongCollection1, tUnmodifiableLongCollection0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap.<init>(Lgnu/trove/map/TShortLongMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap((-389));
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = new TUnmodifiableShortLongMap((TShortLongMap) tShortLongHashMap0);
      boolean boolean0 = tUnmodifiableShortLongMap0.equals((Object) "/");
      assertEquals(false, boolean0);
  }
}

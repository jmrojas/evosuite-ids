/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TByteFunction;
import gnu.trove.impl.sync.TSynchronizedByteList;
import gnu.trove.impl.sync.TSynchronizedRandomAccessByteList;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteList;
import gnu.trove.list.TByteList;
import gnu.trove.list.array.TByteArrayList;
import gnu.trove.list.linked.TByteLinkedList;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.set.hash.TByteHashSet;
import java.util.Random;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedByteListEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.reverse(II)V: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedByteList.<init>(Lgnu/trove/list/TByteList;)V: root-Branch
   */

//   @Test
//   public void test0()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList();
//       TSynchronizedByteList tSynchronizedByteList0 = new TSynchronizedByteList((TByteList) tByteArrayList0);
//       tSynchronizedByteList0.reverse((-1051), (-1051));
//       assertEquals(0, tSynchronizedByteList0.sum());
//   }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.remove(II)V: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedByteList.<init>(Lgnu/trove/list/TByteList;Ljava/lang/Object;)V: root-Branch
   */

//   @Test
//   public void test1()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList();
//       TSynchronizedByteList tSynchronizedByteList0 = new TSynchronizedByteList((TByteList) tByteArrayList0, (Object) "");
//       tSynchronizedByteList0.remove(806, 0);
//       assertEquals(0, tSynchronizedByteList0.getNoEntryValue());
//   }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.toArray(II)[B: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedByteList tSynchronizedByteList0 = new TSynchronizedByteList((TByteList) tByteLinkedList0);
      // Undeclared exception!
      try {
        tSynchronizedByteList0.toArray((-1), (int) (byte)18);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -1
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.shuffle(Ljava/util/Random;)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0);
      tSynchronizedRandomAccessByteList0.shuffle((Random) null);
      assertEquals("{}", tSynchronizedRandomAccessByteList0.toString());
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.toArray([BIII)[B: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteArrayList0);
      byte[] byteArray0 = new byte[13];
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessByteList0.toArray(byteArray0, (int) (byte)0, 1, (int) (byte) (-97));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.removeAt(I)B: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0);
      TUnmodifiableByteList tUnmodifiableByteList0 = new TUnmodifiableByteList((TByteList) tByteArrayList0);
      TSynchronizedByteList tSynchronizedByteList0 = new TSynchronizedByteList((TByteList) tUnmodifiableByteList0);
      // Undeclared exception!
      try {
        tSynchronizedByteList0.removeAt((int) (byte)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.subList(II)Lgnu/trove/list/TByteList;: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList((int) (byte)29, (byte)29);
      TSynchronizedByteList tSynchronizedByteList0 = new TSynchronizedByteList((TByteList) tByteArrayList0, (Object) "fr");
      TSynchronizedByteList tSynchronizedByteList1 = (TSynchronizedByteList)tSynchronizedByteList0.subList((int) (byte)0, (int) (byte)0);
      assertEquals(true, tSynchronizedByteList1.isEmpty());
      assertNotNull(tSynchronizedByteList1);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.reverse()V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList();
      TSynchronizedByteList tSynchronizedByteList0 = new TSynchronizedByteList((TByteList) tByteArrayList0, (Object) "");
      tSynchronizedByteList0.reverse();
      assertEquals(0, tSynchronizedByteList0.size());
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.indexOf(B)I: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessByteList0.indexOf((byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.fill(IIB)V: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedByteList tSynchronizedByteList0 = new TSynchronizedByteList((TByteList) tByteLinkedList0, (Object) "zh");
      tSynchronizedByteList0.fill((int) (byte)0, (int) (byte)50, (byte)0);
      assertEquals("{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}", tByteLinkedList0.toString());
      assertEquals(50, tSynchronizedByteList0.size());
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.set(I[B)V: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList();
      TSynchronizedByteList tSynchronizedByteList0 = new TSynchronizedByteList((TByteList) tByteArrayList0);
      byte[] byteArray0 = new byte[12];
      // Undeclared exception!
      try {
        tSynchronizedByteList0.set((int) (byte)0, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
      }
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.forEachDescending(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteArrayList0, (Object) "");
      boolean boolean0 = tSynchronizedRandomAccessByteList0.forEachDescending((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.set(I[BII)V: root-Branch
   */

//   @Test
//   public void test12()  throws Throwable  {
//       TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
//       TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0);
//       byte[] byteArray0 = new byte[12];
//       tSynchronizedRandomAccessByteList0.set((int) (byte)0, byteArray0, (int) (byte)0, (int) (byte)0);
//       assertEquals(0, tSynchronizedRandomAccessByteList0.getNoEntryValue());
//   }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.replace(IB)B: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList((int) (byte)29, (byte)29);
      TSynchronizedByteList tSynchronizedByteList0 = new TSynchronizedByteList((TByteList) tByteArrayList0, (Object) "fr");
      // Undeclared exception!
      try {
        tSynchronizedByteList0.replace((int) (byte)0, (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.get(I)B: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TByteHashSet tByteHashSet0 = new TByteHashSet((-1377));
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0, (Object) tByteHashSet0);
      byte byte0 = tSynchronizedRandomAccessByteList0.get((-1377));
      assertEquals((byte)0, byte0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.add([B)V: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TByteHashSet tByteHashSet0 = new TByteHashSet((-1377));
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0, (Object) tByteHashSet0);
      tSynchronizedRandomAccessByteList0.add(tByteHashSet0._states);
      assertEquals(false, tSynchronizedRandomAccessByteList0.isEmpty());
      assertEquals(false, tByteLinkedList0.isEmpty());
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TByteHashSet tByteHashSet0 = new TByteHashSet((-1377));
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0, (Object) tByteHashSet0);
      boolean boolean0 = tSynchronizedRandomAccessByteList0.equals((Object) "");
      assertEquals(false, boolean0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.max()B: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0);
      TUnmodifiableByteList tUnmodifiableByteList0 = new TUnmodifiableByteList((TByteList) tByteArrayList0);
      TSynchronizedByteList tSynchronizedByteList0 = new TSynchronizedByteList((TByteList) tUnmodifiableByteList0);
      byte byte0 = tSynchronizedByteList0.max();
      assertEquals((byte)0, byte0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.grep(Lgnu/trove/procedure/TByteProcedure;)Lgnu/trove/list/TByteList;: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) null, (Object) "de");
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessByteList0.grep((TByteProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.lastIndexOf(IB)I: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteArrayList0, (Object) "");
      int int0 = tSynchronizedRandomAccessByteList0.lastIndexOf((int) (byte) (-6), (byte) (-6));
      assertEquals((-1), int0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.binarySearch(BII)I: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessByteList0.binarySearch((byte)0, (byte)50, (byte)50);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index > size: 50 > 0
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.insert(I[BII)V: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList();
      TSynchronizedByteList tSynchronizedByteList0 = new TSynchronizedByteList((TByteList) tByteArrayList0);
      byte[] byteArray0 = new byte[20];
      // Undeclared exception!
      try {
        tSynchronizedByteList0.insert((-1), byteArray0, (int) (byte)0, (int) (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.fill(B)V: root-Branch
   */

//   @Test
//   public void test22()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList();
//       TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteArrayList0, (Object) "");
//       tSynchronizedRandomAccessByteList0.fill((byte) (-6));
//       assertEquals(0, tSynchronizedRandomAccessByteList0.sum());
//   }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.lastIndexOf(B)I: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TByteHashSet tByteHashSet0 = new TByteHashSet((-1377));
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0, (Object) tByteHashSet0);
      int int0 = tSynchronizedRandomAccessByteList0.lastIndexOf((byte)0);
      assertEquals((-1), int0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.hashCode()I: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
      TSynchronizedByteList tSynchronizedByteList0 = new TSynchronizedByteList((TByteList) tByteArrayList0, (Object) "{0}");
      int int0 = tSynchronizedByteList0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.set(IB)B: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessByteList0.set((int) (byte)0, (byte)0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // at offset 0
         //
      }
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.insert(IB)V: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TByteHashSet tByteHashSet0 = new TByteHashSet((-1377));
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0, (Object) tByteHashSet0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessByteList0.insert((int) (byte)0, (byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.insert(I[B)V: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteArrayList0, (Object) "");
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessByteList0.insert(20, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.indexOf(IB)I: root-Branch
   */

  @Test
  public void test28()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList();
      TSynchronizedByteList tSynchronizedByteList0 = new TSynchronizedByteList((TByteList) tByteArrayList0, (Object) "");
      int int0 = tSynchronizedByteList0.indexOf(0, (byte) (-6));
      assertEquals((-1), int0);
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.toArray([BII)[B: root-Branch
   */

  @Test
  public void test29()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList((int) (byte)82, (byte)82);
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteArrayList0);
      byte[] byteArray0 = new byte[12];
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessByteList0.toArray(byteArray0, (int) (byte)0, (int) (byte)82);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
      }
  }

  //Test case number: 30
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.sum()B: root-Branch
   */

  @Test
  public void test30()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedByteList tSynchronizedByteList0 = new TSynchronizedByteList((TByteList) tByteLinkedList0, (Object) "zh");
      byte byte0 = tSynchronizedByteList0.sum();
      assertEquals((byte)0, byte0);
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.binarySearch(B)I: root-Branch
   */

  @Test
  public void test31()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedByteList tSynchronizedByteList0 = new TSynchronizedByteList((TByteList) tByteLinkedList0);
      int int0 = tSynchronizedByteList0.binarySearch((byte)18);
      assertEquals((-1), int0);
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.transformValues(Lgnu/trove/function/TByteFunction;)V: root-Branch
   */

//   @Test
//   public void test32()  throws Throwable  {
//       TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
//       TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0);
//       tSynchronizedRandomAccessByteList0.transformValues((TByteFunction) null);
//       assertEquals(0, tSynchronizedRandomAccessByteList0.getNoEntryValue());
//   }

  //Test case number: 33
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.sort()V: root-Branch
   */

//   @Test
//   public void test33()  throws Throwable  {
//       TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
//       TSynchronizedByteList tSynchronizedByteList0 = new TSynchronizedByteList((TByteList) tByteLinkedList0, (Object) "zh");
//       tSynchronizedByteList0.sort();
//       assertEquals(0, tSynchronizedByteList0.sum());
//   }

  //Test case number: 34
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.add([BII)V: root-Branch
   */

  @Test
  public void test34()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0);
      byte[] byteArray0 = new byte[12];
      tSynchronizedRandomAccessByteList0.add(byteArray0, (int) (byte)0, (int) (byte)0);
      assertEquals("{}", tSynchronizedRandomAccessByteList0.toString());
      assertEquals(true, tByteLinkedList0.isEmpty());
  }

  //Test case number: 35
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.sort(II)V: root-Branch
   */

  @Test
  public void test35()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessByteList0.sort(31, 31);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 31 greater than last index 0
         //
      }
  }

  //Test case number: 36
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.min()B: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedByteList.<init>(Lgnu/trove/list/TByteList;)V: root-Branch
   */

  @Test
  public void test36()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteLinkedList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessByteList0.min();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 37
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteList.inverseGrep(Lgnu/trove/procedure/TByteProcedure;)Lgnu/trove/list/TByteList;: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedByteList.<init>(Lgnu/trove/list/TByteList;Ljava/lang/Object;)V: root-Branch
   */

//   @Test
//   public void test37()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList();
//       TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteArrayList0, (Object) "");
//       TByteArrayList tByteArrayList1 = (TByteArrayList)tSynchronizedRandomAccessByteList0.inverseGrep((TByteProcedure) null);
//       assertEquals(0, tByteArrayList1.sum());
//   }
}

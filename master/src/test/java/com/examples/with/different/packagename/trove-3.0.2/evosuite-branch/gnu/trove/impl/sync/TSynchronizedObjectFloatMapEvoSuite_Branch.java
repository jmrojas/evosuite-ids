/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TFloatFunction;
import gnu.trove.impl.sync.TSynchronizedFloatCollection;
import gnu.trove.impl.sync.TSynchronizedObjectFloatMap;
import gnu.trove.iterator.TObjectFloatIterator;
import gnu.trove.map.TObjectFloatMap;
import gnu.trove.map.custom_hash.TObjectFloatCustomHashMap;
import gnu.trove.map.hash.TObjectFloatHashMap;
import gnu.trove.procedure.TFloatProcedure;
import gnu.trove.procedure.TObjectFloatProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedObjectFloatMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.isEmpty()Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.<init>(Lgnu/trove/map/TObjectFloatMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TObjectFloatHashMap<Integer> tObjectFloatHashMap0 = new TObjectFloatHashMap<Integer>();
      TSynchronizedObjectFloatMap<Integer> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Integer>((TObjectFloatMap<Integer>) tObjectFloatHashMap0, (Object) "Deutsch (Deutschland)");
      boolean boolean0 = tSynchronizedObjectFloatMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.putIfAbsent(Ljava/lang/Object;F)F: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TObjectFloatHashMap<Object> tObjectFloatHashMap0 = new TObjectFloatHashMap<Object>(0);
      TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatHashMap0, (Object) "/");
      tSynchronizedObjectFloatMap0.putIfAbsent((Object) "/", 0.0F);
      assertEquals("{/=0.0}", tObjectFloatHashMap0.toString());
      assertEquals(1, tObjectFloatHashMap0.size());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.adjustValue(Ljava/lang/Object;F)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TObjectFloatCustomHashMap<Float> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Float>();
      TSynchronizedObjectFloatMap<Float> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Float>((TObjectFloatMap<Float>) tObjectFloatCustomHashMap0, (Object) tObjectFloatCustomHashMap0);
      Float float0 = new Float((double) 884);
      // Undeclared exception!
      try {
        tSynchronizedObjectFloatMap0.adjustValue(float0, (float) 884);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.clear()V: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.<init>(Lgnu/trove/map/TObjectFloatMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test3()  throws Throwable  {
      TObjectFloatHashMap<Integer> tObjectFloatHashMap0 = new TObjectFloatHashMap<Integer>((-15), (-15), (-15));
      TSynchronizedObjectFloatMap<Integer> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Integer>((TObjectFloatMap<Integer>) tObjectFloatHashMap0);
      tSynchronizedObjectFloatMap0.clear();
      assertEquals(true, tSynchronizedObjectFloatMap0.isEmpty());
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TObjectFloatHashMap<Object> tObjectFloatHashMap0 = new TObjectFloatHashMap<Object>(0);
      TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatHashMap0, (Object) "/");
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<Float> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Float>((HashingStrategy<? super Float>) identityHashingStrategy0);
      Object[] objectArray0 = tSynchronizedObjectFloatMap0.keys(tObjectFloatCustomHashMap0._set);
      assertNotNull(objectArray0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.containsKey(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 4, (float) 4, (float) 4);
      TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatCustomHashMap0, (Object) "0x1.0p2");
      boolean boolean0 = tSynchronizedObjectFloatMap0.containsKey((Object) 4);
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.keys()[Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TObjectFloatHashMap<Object> tObjectFloatHashMap0 = new TObjectFloatHashMap<Object>((-1890), (-1890));
      TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatHashMap0);
      Object[] objectArray0 = tSynchronizedObjectFloatMap0.keys();
      assertNotNull(objectArray0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TObjectFloatHashMap<Object> tObjectFloatHashMap0 = new TObjectFloatHashMap<Object>(0);
      TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatHashMap0, (Object) "/");
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tObjectFloatHashMap0._set);
      boolean boolean0 = tSynchronizedObjectFloatMap0.forEachKey((TObjectProcedure<? super Object>) toObjectArrayProceedure0);
      assertEquals(true, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.putAll(Lgnu/trove/map/TObjectFloatMap;)V: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TObjectFloatHashMap<Float> tObjectFloatHashMap0 = new TObjectFloatHashMap<Float>((-1108), (-1108), (-1108));
      TSynchronizedObjectFloatMap<Float> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Float>((TObjectFloatMap<Float>) tObjectFloatHashMap0, (Object) "Deutsch (Deutschland)");
      tSynchronizedObjectFloatMap0.putAll((TObjectFloatMap<? extends Float>) tObjectFloatHashMap0);
      assertEquals(true, tSynchronizedObjectFloatMap0.isEmpty());
  }

  //Test case number: 9
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.forEachEntry(Lgnu/trove/procedure/TObjectFloatProcedure;)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.getNoEntryValue()F: root-Branch
   * 3 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.size()I: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      IdentityHashingStrategy<Float> identityHashingStrategy0 = new IdentityHashingStrategy<Float>();
      TObjectFloatCustomHashMap<Float> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Float>((HashingStrategy<? super Float>) identityHashingStrategy0, (-15));
      TSynchronizedObjectFloatMap<Float> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Float>((TObjectFloatMap<Float>) tObjectFloatCustomHashMap0);
      TObjectFloatHashMap<Object> tObjectFloatHashMap0 = new TObjectFloatHashMap<Object>((TObjectFloatMap<?>) tSynchronizedObjectFloatMap0);
      assertEquals(0, tObjectFloatHashMap0.size());
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.retainEntries(Lgnu/trove/procedure/TObjectFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TObjectFloatHashMap<Float> tObjectFloatHashMap0 = new TObjectFloatHashMap<Float>((-1108), (-1108), (-1108));
      TSynchronizedObjectFloatMap<Float> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Float>((TObjectFloatMap<Float>) tObjectFloatHashMap0, (Object) "Deutsch (Deutschland)");
      boolean boolean0 = tSynchronizedObjectFloatMap0.retainEntries((TObjectFloatProcedure<? super Float>) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.put(Ljava/lang/Object;F)F: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatCustomHashMap0);
      tSynchronizedObjectFloatMap0.put((Object) "1", (float) (-15));
      assertEquals("{1=-15.0}", tObjectFloatCustomHashMap0.toString());
      assertEquals(false, tObjectFloatCustomHashMap0.isEmpty());
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.adjustOrPutValue(Ljava/lang/Object;FF)F: root-Branch
   */

//   @Test
//   public void test12()  throws Throwable  {
//       TObjectFloatHashMap<Object> tObjectFloatHashMap0 = new TObjectFloatHashMap<Object>((-1923));
//       TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatHashMap0, (Object) "{}");
//       float float0 = tSynchronizedObjectFloatMap0.adjustOrPutValue((Object) false, (float) (-1923), (float) (-1923));
//       assertEquals(1, tObjectFloatHashMap0.size());
//       assertEquals((-1923.0F), float0, 0.01F);
//   }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.remove(Ljava/lang/Object;)F: root-Branch
   */

//   @Test
//   public void test13()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 4, (float) 4, (float) 4);
//       TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatCustomHashMap0, (Object) "0x1.0p2");
//       float float0 = tSynchronizedObjectFloatMap0.remove((Object) tObjectFloatCustomHashMap0);
//       assertEquals(4.0F, float0, 0.01F);
//   }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.get(Ljava/lang/Object;)F: root-Branch
   */

//   @Test
//   public void test14()  throws Throwable  {
//       TObjectFloatHashMap<Object> tObjectFloatHashMap0 = new TObjectFloatHashMap<Object>(0);
//       TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatHashMap0, (Object) "/");
//       float float0 = tSynchronizedObjectFloatMap0.get((Object) "/");
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.containsValue(F)Z: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<Integer> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 248, (float) 248);
      TSynchronizedObjectFloatMap<Integer> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Integer>((TObjectFloatMap<Integer>) tObjectFloatCustomHashMap0);
      boolean boolean0 = tSynchronizedObjectFloatMap0.containsValue((float) 248);
      assertEquals(false, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.iterator()Lgnu/trove/iterator/TObjectFloatIterator;: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>();
      TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatCustomHashMap0, (Object) null);
      TObjectFloatIterator<Object> tObjectFloatIterator0 = tSynchronizedObjectFloatMap0.iterator();
      assertEquals(false, tObjectFloatIterator0.hasNext());
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatCustomHashMap0);
      String string0 = tSynchronizedObjectFloatMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.values()[F: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<String> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 0, 0.0F, (float) 0);
      TSynchronizedObjectFloatMap<String> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<String>((TObjectFloatMap<String>) tObjectFloatCustomHashMap0);
      float[] floatArray0 = tSynchronizedObjectFloatMap0.values();
      assertNotNull(floatArray0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.transformValues(Lgnu/trove/function/TFloatFunction;)V: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TObjectFloatHashMap<Object> tObjectFloatHashMap0 = new TObjectFloatHashMap<Object>((-1890), (-1890));
      TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatHashMap0);
      // Undeclared exception!
      try {
        tSynchronizedObjectFloatMap0.transformValues((TFloatFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>();
      TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatCustomHashMap0, (Object) null);
      // Undeclared exception!
      try {
        tSynchronizedObjectFloatMap0.forEachValue((TFloatProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.hashCode()I: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatCustomHashMap0);
      int int0 = tSynchronizedObjectFloatMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TObjectFloatHashMap<Object> tObjectFloatHashMap0 = new TObjectFloatHashMap<Object>((-1923));
      TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatHashMap0, (Object) "{}");
      HashMap<Object, Float> hashMap0 = new HashMap<Object, Float>();
      tSynchronizedObjectFloatMap0.putAll((Map<?, ? extends Float>) hashMap0);
      assertEquals(0, hashMap0.size());
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TObjectFloatHashMap<Object> tObjectFloatHashMap0 = new TObjectFloatHashMap<Object>((-1923));
      TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatHashMap0, (Object) "{}");
      HashMap<Object, Float> hashMap0 = new HashMap<Object, Float>();
      boolean boolean0 = tSynchronizedObjectFloatMap0.equals((Object) hashMap0);
      assertEquals(false, boolean0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.values([F)[F: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<Float> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Float>((HashingStrategy<? super Float>) identityHashingStrategy0);
      TSynchronizedObjectFloatMap<Float> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Float>((TObjectFloatMap<Float>) tObjectFloatCustomHashMap0);
      float[] floatArray0 = new float[6];
      float[] floatArray1 = tSynchronizedObjectFloatMap0.values(floatArray0);
      assertSame(floatArray1, floatArray0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.increment(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatCustomHashMap0);
      boolean boolean0 = tSynchronizedObjectFloatMap0.increment((Object) "1");
      assertEquals(false, boolean0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.<init>(Lgnu/trove/map/TObjectFloatMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test26()  throws Throwable  {
      TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap0 = null;
      try {
        tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Object>((TObjectFloatMap<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.keySet()Ljava/util/Set;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.keySet()Ljava/util/Set;: I11 Branch 2 IFNONNULL L107 - false
   * 3 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.<init>(Lgnu/trove/map/TObjectFloatMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TObjectFloatHashMap<Object> tObjectFloatHashMap0 = new TObjectFloatHashMap<Object>((-1923));
      TSynchronizedObjectFloatMap<Object> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Object>((TObjectFloatMap<Object>) tObjectFloatHashMap0, (Object) "{}");
      Set<Object> set0 = tSynchronizedObjectFloatMap0.keySet();
      assertNotNull(set0);
      
      Set<Object> set1 = tSynchronizedObjectFloatMap0.keySet();
      assertSame(set1, set0);
  }

  //Test case number: 28
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I11 Branch 3 IFNONNULL L122 - true
   * 2 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I11 Branch 3 IFNONNULL L122 - false
   * 3 gnu.trove.impl.sync.TSynchronizedObjectFloatMap.<init>(Lgnu/trove/map/TObjectFloatMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test28()  throws Throwable  {
      IdentityHashingStrategy<Float> identityHashingStrategy0 = new IdentityHashingStrategy<Float>();
      TObjectFloatCustomHashMap<Float> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Float>((HashingStrategy<? super Float>) identityHashingStrategy0, (-15));
      TSynchronizedObjectFloatMap<Float> tSynchronizedObjectFloatMap0 = new TSynchronizedObjectFloatMap<Float>((TObjectFloatMap<Float>) tObjectFloatCustomHashMap0);
      TSynchronizedFloatCollection tSynchronizedFloatCollection0 = (TSynchronizedFloatCollection)tSynchronizedObjectFloatMap0.valueCollection();
      assertNotNull(tSynchronizedFloatCollection0);
      
      TSynchronizedFloatCollection tSynchronizedFloatCollection1 = (TSynchronizedFloatCollection)tSynchronizedObjectFloatMap0.valueCollection();
      assertSame(tSynchronizedFloatCollection1, tSynchronizedFloatCollection0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TObjectFunction;
import gnu.trove.impl.sync.TSynchronizedByteObjectMap;
import gnu.trove.impl.sync.TSynchronizedByteSet;
import gnu.trove.iterator.TByteObjectIterator;
import gnu.trove.map.TByteObjectMap;
import gnu.trove.map.hash.TByteObjectHashMap;
import gnu.trove.procedure.TByteObjectProcedure;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TObjectProcedure;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedByteObjectMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.values()[Ljava/lang/Object;: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedByteObjectMap.<init>(Lgnu/trove/map/TByteObjectMap;)V: I17 Branch 1 IFNONNULL L61 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TByteObjectHashMap<Object> tByteObjectHashMap0 = new TByteObjectHashMap<Object>();
      TSynchronizedByteObjectMap<Object> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<Object>((TByteObjectMap<Object>) tByteObjectHashMap0);
      Object[] objectArray0 = tSynchronizedByteObjectMap0.values();
      assertNotNull(objectArray0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.containsKey(B)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedByteObjectMap.<init>(Lgnu/trove/map/TByteObjectMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TByteObjectHashMap<String> tByteObjectHashMap0 = new TByteObjectHashMap<String>((-457), (float) (-457), (byte)125);
      TSynchronizedByteObjectMap<String> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<String>((TByteObjectMap<String>) tByteObjectHashMap0, (Object) "/");
      boolean boolean0 = tSynchronizedByteObjectMap0.containsKey((byte)125);
      assertEquals(false, boolean0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.get(B)Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TByteObjectHashMap<Integer> tByteObjectHashMap0 = new TByteObjectHashMap<Integer>(0, (float) 0, (byte)0);
      TSynchronizedByteObjectMap<Integer> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<Integer>((TByteObjectMap<Integer>) tByteObjectHashMap0);
      tSynchronizedByteObjectMap0.get((byte)0);
  }

  //Test case number: 3
  /*
   * 4 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedByteObjectMap.forEachEntry(Lgnu/trove/procedure/TByteObjectProcedure;)Z: root-Branch
   * 3 gnu.trove.impl.sync.TSynchronizedByteObjectMap.getNoEntryKey()B: root-Branch
   * 4 gnu.trove.impl.sync.TSynchronizedByteObjectMap.size()I: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TByteObjectHashMap<Byte> tByteObjectHashMap0 = new TByteObjectHashMap<Byte>();
      TSynchronizedByteObjectMap<Byte> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<Byte>((TByteObjectMap<Byte>) tByteObjectHashMap0, (Object) "");
      TByteObjectHashMap<Object> tByteObjectHashMap1 = new TByteObjectHashMap<Object>((TByteObjectMap<?>) tSynchronizedByteObjectMap0);
      TSynchronizedByteObjectMap<Object> tSynchronizedByteObjectMap1 = new TSynchronizedByteObjectMap<Object>((TByteObjectMap<Object>) tByteObjectHashMap1, (Object) "");
      boolean boolean0 = tSynchronizedByteObjectMap1.forEachKey((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 4 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.iterator()Lgnu/trove/iterator/TByteObjectIterator;: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedByteObjectMap.forEachEntry(Lgnu/trove/procedure/TByteObjectProcedure;)Z: root-Branch
   * 3 gnu.trove.impl.sync.TSynchronizedByteObjectMap.getNoEntryKey()B: root-Branch
   * 4 gnu.trove.impl.sync.TSynchronizedByteObjectMap.size()I: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TByteObjectHashMap<Byte> tByteObjectHashMap0 = new TByteObjectHashMap<Byte>();
      TSynchronizedByteObjectMap<Byte> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<Byte>((TByteObjectMap<Byte>) tByteObjectHashMap0, (Object) "");
      TByteObjectHashMap<Object> tByteObjectHashMap1 = new TByteObjectHashMap<Object>((TByteObjectMap<?>) tSynchronizedByteObjectMap0);
      TSynchronizedByteObjectMap<Object> tSynchronizedByteObjectMap1 = new TSynchronizedByteObjectMap<Object>((TByteObjectMap<Object>) tByteObjectHashMap1, (Object) "");
      TByteObjectIterator<Object> tByteObjectIterator0 = tSynchronizedByteObjectMap1.iterator();
      assertEquals(false, tByteObjectIterator0.hasNext());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.put(BLjava/lang/Object;)Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TByteObjectHashMap<Object> tByteObjectHashMap0 = new TByteObjectHashMap<Object>(18, 18);
      TSynchronizedByteObjectMap<Object> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<Object>((TByteObjectMap<Object>) tByteObjectHashMap0);
      tSynchronizedByteObjectMap0.put((byte) (-50), (Object) "/mnt/fastdata/ac1gf/Experiments_Major/apps/trove-3.0.2/T,>Z2-");
      assertEquals(false, tByteObjectHashMap0.isEmpty());
      assertEquals("{-50=/mnt/fastdata/ac1gf/Experiments_Major/apps/trove-3.0.2/T,>Z2-}", tSynchronizedByteObjectMap0.toString());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.retainEntries(Lgnu/trove/procedure/TByteObjectProcedure;)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TByteObjectHashMap<Integer> tByteObjectHashMap0 = new TByteObjectHashMap<Integer>();
      TSynchronizedByteObjectMap<Integer> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<Integer>((TByteObjectMap<Integer>) tByteObjectHashMap0, (Object) "");
      boolean boolean0 = tSynchronizedByteObjectMap0.retainEntries((TByteObjectProcedure<? super Integer>) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TSynchronizedByteObjectMap<String> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<String>((TByteObjectMap<String>) null, (Object) null);
      String[] stringArray0 = new String[8];
      // Undeclared exception!
      try {
        tSynchronizedByteObjectMap0.values(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.containsValue(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TByteObjectHashMap<Byte> tByteObjectHashMap0 = new TByteObjectHashMap<Byte>((-7), (-7));
      TSynchronizedByteObjectMap<Byte> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<Byte>((TByteObjectMap<Byte>) tByteObjectHashMap0);
      boolean boolean0 = tSynchronizedByteObjectMap0.containsValue((Object) "");
      assertEquals(false, boolean0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TByteObjectHashMap<Object> tByteObjectHashMap0 = new TByteObjectHashMap<Object>((-457), (float) (byte)125);
      TSynchronizedByteObjectMap<Object> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<Object>((TByteObjectMap<Object>) tByteObjectHashMap0);
      boolean boolean0 = tSynchronizedByteObjectMap0.forEachValue((TObjectProcedure<? super Object>) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TByteObjectHashMap<Integer> tByteObjectHashMap0 = new TByteObjectHashMap<Integer>(0, (float) 0, (byte)0);
      TSynchronizedByteObjectMap<Integer> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<Integer>((TByteObjectMap<Integer>) tByteObjectHashMap0);
      boolean boolean0 = tSynchronizedByteObjectMap0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.remove(B)Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TByteObjectHashMap<Integer> tByteObjectHashMap0 = new TByteObjectHashMap<Integer>(0, (float) 0, (byte)0);
      TSynchronizedByteObjectMap<Integer> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<Integer>((TByteObjectMap<Integer>) tByteObjectHashMap0);
      tSynchronizedByteObjectMap0.remove((byte)0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TByteObjectHashMap<String> tByteObjectHashMap0 = new TByteObjectHashMap<String>();
      TSynchronizedByteObjectMap<String> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<String>((TByteObjectMap<String>) tByteObjectHashMap0, (Object) "China");
      tSynchronizedByteObjectMap0.transformValues((TObjectFunction<String, String>) null);
      assertEquals(true, tSynchronizedByteObjectMap0.isEmpty());
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.clear()V: root-Branch
   */

//   @Test
//   public void test13()  throws Throwable  {
//       TByteObjectHashMap<Object> tByteObjectHashMap0 = new TByteObjectHashMap<Object>();
//       TSynchronizedByteObjectMap<Object> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<Object>((TByteObjectMap<Object>) tByteObjectHashMap0);
//       tSynchronizedByteObjectMap0.clear();
//       assertEquals(0, tSynchronizedByteObjectMap0.getNoEntryKey());
//   }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.hashCode()I: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TByteObjectHashMap<Object> tByteObjectHashMap0 = new TByteObjectHashMap<Object>(0);
      TSynchronizedByteObjectMap<Object> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<Object>((TByteObjectMap<Object>) tByteObjectHashMap0);
      int int0 = tSynchronizedByteObjectMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.keys([B)[B: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TByteObjectHashMap<Integer> tByteObjectHashMap0 = new TByteObjectHashMap<Integer>(0, 0);
      TSynchronizedByteObjectMap<Integer> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<Integer>((TByteObjectMap<Integer>) tByteObjectHashMap0);
      byte[] byteArray0 = tSynchronizedByteObjectMap0.keys(tByteObjectHashMap0._set);
      assertNotNull(byteArray0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.putAll(Lgnu/trove/map/TByteObjectMap;)V: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TByteObjectHashMap<String> tByteObjectHashMap0 = new TByteObjectHashMap<String>((-457), (float) (-457), (byte)125);
      TSynchronizedByteObjectMap<String> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<String>((TByteObjectMap<String>) tByteObjectHashMap0, (Object) "/");
      tSynchronizedByteObjectMap0.putAll((TByteObjectMap<? extends String>) tByteObjectHashMap0);
      assertEquals(3, tByteObjectHashMap0.capacity());
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TSynchronizedByteObjectMap<Object> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<Object>((TByteObjectMap<Object>) null, (Object) null);
      HashMap<Byte, Integer> hashMap0 = new HashMap<Byte, Integer>();
      // Undeclared exception!
      try {
        tSynchronizedByteObjectMap0.putAll((Map<? extends Byte, ?>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.keys()[B: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TByteObjectHashMap<Object> tByteObjectHashMap0 = new TByteObjectHashMap<Object>(0);
      TSynchronizedByteObjectMap<Object> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<Object>((TByteObjectMap<Object>) tByteObjectHashMap0);
      byte[] byteArray0 = tSynchronizedByteObjectMap0.keys();
      assertNotNull(byteArray0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TByteObjectHashMap<Object> tByteObjectHashMap0 = new TByteObjectHashMap<Object>(0);
      TSynchronizedByteObjectMap<Object> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<Object>((TByteObjectMap<Object>) tByteObjectHashMap0, (Object) "{}");
      boolean boolean0 = tSynchronizedByteObjectMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.putIfAbsent(BLjava/lang/Object;)Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TByteObjectHashMap<Byte> tByteObjectHashMap0 = new TByteObjectHashMap<Byte>((-7), (-7));
      TSynchronizedByteObjectMap<Byte> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<Byte>((TByteObjectMap<Byte>) tByteObjectHashMap0);
      tSynchronizedByteObjectMap0.putIfAbsent((byte)0, (Byte) (byte)0);
      assertEquals(false, tByteObjectHashMap0.isEmpty());
      assertEquals(1, tByteObjectHashMap0.size());
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TByteObjectHashMap<Object> tByteObjectHashMap0 = new TByteObjectHashMap<Object>(0);
      TSynchronizedByteObjectMap<Object> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<Object>((TByteObjectMap<Object>) tByteObjectHashMap0, (Object) "{}");
      String string0 = tSynchronizedByteObjectMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.<init>(Lgnu/trove/map/TByteObjectMap;)V: I17 Branch 1 IFNONNULL L61 - false
   */

  @Test
  public void test22()  throws Throwable  {
      TSynchronizedByteObjectMap<String> tSynchronizedByteObjectMap0 = null;
      try {
        tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<String>((TByteObjectMap<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.keySet()Lgnu/trove/set/TByteSet;: I11 Branch 2 IFNONNULL L109 - true
   * 2 gnu.trove.impl.sync.TSynchronizedByteObjectMap.keySet()Lgnu/trove/set/TByteSet;: I11 Branch 2 IFNONNULL L109 - false
   * 3 gnu.trove.impl.sync.TSynchronizedByteObjectMap.<init>(Lgnu/trove/map/TByteObjectMap;)V: I17 Branch 1 IFNONNULL L61 - true
   */

  @Test
  public void test23()  throws Throwable  {
      TByteObjectHashMap<Object> tByteObjectHashMap0 = new TByteObjectHashMap<Object>();
      TSynchronizedByteObjectMap<Object> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<Object>((TByteObjectMap<Object>) tByteObjectHashMap0);
      TSynchronizedByteSet tSynchronizedByteSet0 = (TSynchronizedByteSet)tSynchronizedByteObjectMap0.keySet();
      assertNotNull(tSynchronizedByteSet0);
      
      TSynchronizedByteSet tSynchronizedByteSet1 = (TSynchronizedByteSet)tSynchronizedByteObjectMap0.keySet();
      assertSame(tSynchronizedByteSet1, tSynchronizedByteSet0);
  }

  //Test case number: 24
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteObjectMap.valueCollection()Ljava/util/Collection;: I11 Branch 3 IFNONNULL L123 - true
   * 2 gnu.trove.impl.sync.TSynchronizedByteObjectMap.valueCollection()Ljava/util/Collection;: I11 Branch 3 IFNONNULL L123 - false
   * 3 gnu.trove.impl.sync.TSynchronizedByteObjectMap.<init>(Lgnu/trove/map/TByteObjectMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TByteObjectHashMap<Object> tByteObjectHashMap0 = new TByteObjectHashMap<Object>(0);
      TSynchronizedByteObjectMap<Object> tSynchronizedByteObjectMap0 = new TSynchronizedByteObjectMap<Object>((TByteObjectMap<Object>) tByteObjectHashMap0, (Object) "{}");
      Collection<Object> collection0 = tSynchronizedByteObjectMap0.valueCollection();
      assertNotNull(collection0);
      
      Collection<Object> collection1 = tSynchronizedByteObjectMap0.valueCollection();
      assertSame(collection1, collection0);
  }
}

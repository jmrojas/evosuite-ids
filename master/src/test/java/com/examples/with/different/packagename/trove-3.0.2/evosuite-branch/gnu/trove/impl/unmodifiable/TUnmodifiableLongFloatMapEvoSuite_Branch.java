/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TFloatFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongSet;
import gnu.trove.map.TLongFloatMap;
import gnu.trove.map.hash.TLongFloatHashMap;
import gnu.trove.procedure.TFloatProcedure;
import gnu.trove.procedure.TLongFloatProcedure;
import gnu.trove.procedure.TLongProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableLongFloatMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.putAll(Lgnu/trove/map/TLongFloatMap;)V: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.<init>(Lgnu/trove/map/TLongFloatMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(0);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableLongFloatMap0.putAll((TLongFloatMap) tUnmodifiableLongFloatMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.put(JF)F: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(42, 42);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableLongFloatMap0.put((long) 42, (float) 42);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.getNoEntryValue()F: root-Branch
   */

//   @Test
//   public void test2()  throws Throwable  {
//       TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(0);
//       TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
//       float float0 = tUnmodifiableLongFloatMap0.getNoEntryValue();
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.adjustValue(JF)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap((-16), (-16));
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableLongFloatMap0.adjustValue((long) (-16), (float) (-16));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.adjustOrPutValue(JFF)F: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(950);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableLongFloatMap0.adjustOrPutValue((long) 950, (float) 950, (float) 950);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.get(J)F: root-Branch
   */

//   @Test
//   public void test5()  throws Throwable  {
//       long[] longArray0 = new long[5];
//       float[] floatArray0 = new float[3];
//       TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(longArray0, floatArray0);
//       TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
//       float float0 = tUnmodifiableLongFloatMap0.get((long) 190);
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(0);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      String string0 = tUnmodifiableLongFloatMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.transformValues(Lgnu/trove/function/TFloatFunction;)V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      long[] longArray0 = new long[4];
      float[] floatArray0 = new float[7];
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(longArray0, floatArray0);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableLongFloatMap0.transformValues((TFloatFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.increment(J)Z: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      long[] longArray0 = new long[4];
      float[] floatArray0 = new float[17];
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(longArray0, floatArray0);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableLongFloatMap0.increment(0L);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap((-1906), (-1906), (-1906), (-1906));
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      HashMap<Long, Float> hashMap0 = new HashMap<Long, Float>();
      // Undeclared exception!
      try {
        tUnmodifiableLongFloatMap0.putAll((Map<? extends Long, ? extends Float>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.getNoEntryKey()J: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      long long0 = tUnmodifiableLongFloatMap0.getNoEntryKey();
      assertEquals(0L, long0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keys()[J: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(0);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      long[] longArray0 = tUnmodifiableLongFloatMap0.keys();
      assertNotNull(longArray0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.retainEntries(Lgnu/trove/procedure/TLongFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableLongFloatMap0.retainEntries((TLongFloatProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keys([J)[J: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(0, 0);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      long[] longArray0 = tUnmodifiableLongFloatMap0.keys(tLongFloatHashMap0._set);
      assertNotNull(longArray0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(0);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tUnmodifiableLongFloatMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.values([F)[F: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(177);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      float[] floatArray0 = new float[7];
      float[] floatArray1 = tUnmodifiableLongFloatMap0.values(floatArray0);
      assertSame(floatArray1, floatArray0);
  }

  //Test case number: 16
  /*
   * 7 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.size()I: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.iterator()Lgnu/trove/iterator/TLongFloatIterator;: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.hasNext()Z: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.advance()V: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.key()J: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.value()F: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableLongFloatMap;)V: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      long[] longArray0 = new long[5];
      float[] floatArray0 = new float[3];
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(longArray0, floatArray0);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      TLongFloatHashMap tLongFloatHashMap1 = new TLongFloatHashMap((TLongFloatMap) tUnmodifiableLongFloatMap0);
      assertEquals(1, tUnmodifiableLongFloatMap0.size());
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.putIfAbsent(JF)F: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableLongFloatMap0.putIfAbsent(0L, 0L);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.remove(J)F: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap((-2011), (float) 1L, 1L, (float) 0L);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableLongFloatMap0.remove(0L);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(950);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tUnmodifiableLongFloatMap0.forEachKey((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.forEachEntry(Lgnu/trove/procedure/TLongFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(177);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tUnmodifiableLongFloatMap0.forEachEntry((TLongFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.containsKey(J)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(950);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tUnmodifiableLongFloatMap0.containsKey((long) 950);
      assertEquals(false, boolean0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.values()[F: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(0);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      float[] floatArray0 = tUnmodifiableLongFloatMap0.values();
      assertNotNull(floatArray0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.clear()V: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(177);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableLongFloatMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(0, 0);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tUnmodifiableLongFloatMap0.forEachValue((TFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.containsValue(F)Z: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(0, 0);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tUnmodifiableLongFloatMap0.containsValue((float) 0);
      assertEquals(false, boolean0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.hashCode()I: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(0);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      int int0 = tUnmodifiableLongFloatMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.<init>(Lgnu/trove/map/TLongFloatMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = null;
      try {
        tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keySet()Lgnu/trove/set/TLongSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keySet()Lgnu/trove/set/TLongSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      TUnmodifiableLongSet tUnmodifiableLongSet0 = (TUnmodifiableLongSet)tUnmodifiableLongFloatMap0.keySet();
      assertNotNull(tUnmodifiableLongSet0);
      
      TUnmodifiableLongSet tUnmodifiableLongSet1 = (TUnmodifiableLongSet)tUnmodifiableLongFloatMap0.keySet();
      assertSame(tUnmodifiableLongSet1, tUnmodifiableLongSet0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(177);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = (TUnmodifiableFloatCollection)tUnmodifiableLongFloatMap0.valueCollection();
      assertNotNull(tUnmodifiableFloatCollection0);
      
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection1 = (TUnmodifiableFloatCollection)tUnmodifiableLongFloatMap0.valueCollection();
      assertSame(tUnmodifiableFloatCollection1, tUnmodifiableFloatCollection0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.<init>(Lgnu/trove/map/TLongFloatMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(0);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tUnmodifiableLongFloatMap0.equals((Object) "Japanese");
      assertEquals(false, boolean0);
  }
}

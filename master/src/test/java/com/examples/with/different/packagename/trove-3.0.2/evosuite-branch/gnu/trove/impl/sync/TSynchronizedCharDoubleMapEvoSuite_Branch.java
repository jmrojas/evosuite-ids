/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TDoubleFunction;
import gnu.trove.impl.sync.TSynchronizedCharDoubleMap;
import gnu.trove.impl.sync.TSynchronizedCharSet;
import gnu.trove.impl.sync.TSynchronizedDoubleCollection;
import gnu.trove.map.TCharDoubleMap;
import gnu.trove.map.hash.TCharDoubleHashMap;
import gnu.trove.procedure.TCharDoubleProcedure;
import gnu.trove.procedure.TCharProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedCharDoubleMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.adjustOrPutValue(CDD)D: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.<init>(Lgnu/trove/map/TCharDoubleMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(1189);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0, (Object) "s[P?Qwy8GW\"+C)(");
      double double0 = tSynchronizedCharDoubleMap0.adjustOrPutValue('(', (double) '(', 1189.0);
      assertEquals(false, tCharDoubleHashMap0.isEmpty());
      assertEquals(1189.0, double0, 0.01D);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.clear()V: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.<init>(Lgnu/trove/map/TCharDoubleMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test1()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(369);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      tSynchronizedCharDoubleMap0.clear();
      assertEquals(0.0, tSynchronizedCharDoubleMap0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap();
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      boolean boolean0 = tSynchronizedCharDoubleMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.keys()[C: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(1189);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0, (Object) "s[P?Qwy8GW\"+C)(");
      char[] charArray0 = tSynchronizedCharDoubleMap0.keys();
      assertNotNull(charArray0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.adjustValue(CD)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap();
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      boolean boolean0 = tSynchronizedCharDoubleMap0.adjustValue('\\', '\\');
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.put(CD)D: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      char[] charArray0 = new char[1];
      double[] doubleArray0 = new double[2];
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(charArray0, doubleArray0);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      tSynchronizedCharDoubleMap0.put('~', 0.0);
      assertEquals(2, tCharDoubleHashMap0.size());
      assertEquals("{~=0.0, \u0000=0.0}", tCharDoubleHashMap0.toString());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.values([D)[D: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(1189);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0, (Object) "s[P?Qwy8GW\"+C)(");
      double[] doubleArray0 = new double[10];
      double[] doubleArray1 = tSynchronizedCharDoubleMap0.values(doubleArray0);
      assertSame(doubleArray0, doubleArray1);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.forEachEntry(Lgnu/trove/procedure/TCharDoubleProcedure;)Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(1189);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0, (Object) "s[P?Qwy8GW\"+C)(");
      boolean boolean0 = tSynchronizedCharDoubleMap0.forEachEntry((TCharDoubleProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.keys([C)[C: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap((-1778), (-1778));
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      char[] charArray0 = tSynchronizedCharDoubleMap0.keys(tCharDoubleHashMap0._set);
      assertNotNull(charArray0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      char[] charArray0 = new char[3];
      double[] doubleArray0 = new double[3];
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(charArray0, doubleArray0);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0, (Object) "4");
      HashMap<Character, Double> hashMap0 = new HashMap<Character, Double>();
      tSynchronizedCharDoubleMap0.putAll((Map<? extends Character, ? extends Double>) hashMap0);
      assertEquals(0, hashMap0.size());
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.values()[D: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(369);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      double[] doubleArray0 = tSynchronizedCharDoubleMap0.values();
      assertNotNull(doubleArray0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.putAll(Lgnu/trove/map/TCharDoubleMap;)V: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap((-1778), (-1778));
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      tSynchronizedCharDoubleMap0.putAll((TCharDoubleMap) tCharDoubleHashMap0);
      assertEquals(3, tCharDoubleHashMap0.capacity());
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.increment(C)Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap((-1778), (-1778));
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      boolean boolean0 = tSynchronizedCharDoubleMap0.increment('5');
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.iterator()Lgnu/trove/iterator/TCharDoubleIterator;: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.size()I: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[3];
      double[] doubleArray0 = new double[3];
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(charArray0, doubleArray0);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0, (Object) "4");
      TCharDoubleHashMap tCharDoubleHashMap1 = new TCharDoubleHashMap((TCharDoubleMap) tSynchronizedCharDoubleMap0);
      assertEquals(1, tSynchronizedCharDoubleMap0.size());
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.containsValue(D)Z: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(205759);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0, (Object) "{}");
      boolean boolean0 = tSynchronizedCharDoubleMap0.containsValue((double) 205759);
      assertEquals(false, boolean0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(369);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      boolean boolean0 = tSynchronizedCharDoubleMap0.forEachKey((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(369);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      String string0 = tSynchronizedCharDoubleMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.get(C)D: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(1189);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0, (Object) "s[P?Qwy8GW\"+C)(");
      double double0 = tSynchronizedCharDoubleMap0.get('(');
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.getNoEntryKey()C: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap();
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      char char0 = tSynchronizedCharDoubleMap0.getNoEntryKey();
      assertEquals('\u0000', char0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(1189);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0, (Object) "s[P?Qwy8GW\"+C)(");
      boolean boolean0 = tSynchronizedCharDoubleMap0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.hashCode()I: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(205759);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0, (Object) "{}");
      int int0 = tSynchronizedCharDoubleMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.containsKey(C)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap();
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      boolean boolean0 = tSynchronizedCharDoubleMap0.containsKey('\\');
      assertEquals(false, boolean0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.putIfAbsent(CD)D: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap();
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      tSynchronizedCharDoubleMap0.putIfAbsent('\\', (double) 0);
      assertEquals(false, tCharDoubleHashMap0.isEmpty());
      assertEquals("{\\=0.0}", tSynchronizedCharDoubleMap0.toString());
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.getNoEntryValue()D: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) null, (Object) null);
      // Undeclared exception!
      try {
        tSynchronizedCharDoubleMap0.getNoEntryValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(0);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      tSynchronizedCharDoubleMap0.transformValues((TDoubleFunction) null);
      assertEquals(0, tSynchronizedCharDoubleMap0.size());
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.retainEntries(Lgnu/trove/procedure/TCharDoubleProcedure;)Z: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(1189);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0, (Object) "s[P?Qwy8GW\"+C)(");
      boolean boolean0 = tSynchronizedCharDoubleMap0.retainEntries((TCharDoubleProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.<init>(Lgnu/trove/map/TCharDoubleMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test26()  throws Throwable  {
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = null;
      try {
        tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.keySet()Lgnu/trove/set/TCharSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.keySet()Lgnu/trove/set/TCharSet;: I11 Branch 2 IFNONNULL L107 - false
   * 3 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.<init>(Lgnu/trove/map/TCharDoubleMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test27()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap((-1778), (-1778));
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      TSynchronizedCharSet tSynchronizedCharSet0 = (TSynchronizedCharSet)tSynchronizedCharDoubleMap0.keySet();
      assertNotNull(tSynchronizedCharSet0);
      
      TSynchronizedCharSet tSynchronizedCharSet1 = (TSynchronizedCharSet)tSynchronizedCharDoubleMap0.keySet();
      assertSame(tSynchronizedCharSet1, tSynchronizedCharSet0);
  }

  //Test case number: 28
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;: I11 Branch 3 IFNONNULL L121 - false
   * 3 gnu.trove.impl.sync.TSynchronizedCharDoubleMap.<init>(Lgnu/trove/map/TCharDoubleMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test28()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(1189);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0, (Object) "s[P?Qwy8GW\"+C)(");
      TSynchronizedDoubleCollection tSynchronizedDoubleCollection0 = (TSynchronizedDoubleCollection)tSynchronizedCharDoubleMap0.valueCollection();
      assertNotNull(tSynchronizedDoubleCollection0);
      
      TSynchronizedDoubleCollection tSynchronizedDoubleCollection1 = (TSynchronizedDoubleCollection)tSynchronizedCharDoubleMap0.valueCollection();
      assertSame(tSynchronizedDoubleCollection1, tSynchronizedDoubleCollection0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.map.TByteShortMap;
import gnu.trove.map.TDoubleDoubleMap;
import gnu.trove.map.custom_hash.TObjectLongCustomHashMap;
import gnu.trove.map.hash.TByteIntHashMap;
import gnu.trove.map.hash.TByteLongHashMap;
import gnu.trove.map.hash.TByteShortHashMap;
import gnu.trove.map.hash.TDoubleDoubleHashMap;
import gnu.trove.map.hash.TDoubleFloatHashMap;
import gnu.trove.map.hash.TFloatObjectHashMap;
import gnu.trove.map.hash.TIntIntHashMap;
import gnu.trove.map.hash.TIntObjectHashMap;
import gnu.trove.map.hash.TLongFloatHashMap;
import gnu.trove.map.hash.TObjectDoubleHashMap;
import gnu.trove.map.hash.TObjectIntHashMap;
import gnu.trove.map.hash.TShortDoubleHashMap;
import gnu.trove.set.hash.TDoubleHashSet;
import gnu.trove.set.hash.TLinkedHashSet;
import gnu.trove.set.hash.TShortHashSet;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.Collection;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class THashEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 166 covered goals:
   * 1 Weak Mutation 13: gnu.trove.impl.hash.THash.isEmpty()Z:147 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 14: gnu.trove.impl.hash.THash.isEmpty()Z:147 - InsertUnaryOp Negation
   * 3 Weak Mutation 15: gnu.trove.impl.hash.THash.isEmpty()Z:147 - InsertUnaryOp +1
   * 4 Weak Mutation 17: gnu.trove.impl.hash.THash.isEmpty()Z:147 - DeleteField: _sizeI
   * 5 Weak Mutation 16: gnu.trove.impl.hash.THash.isEmpty()Z:147 - InsertUnaryOp -1
   * 6 Weak Mutation 18: gnu.trove.impl.hash.THash.isEmpty()Z:147 - ReplaceComparisonOperator != -> >
   * 7 Weak Mutation 22: gnu.trove.impl.hash.THash.isEmpty()Z:147 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 258: gnu.trove.impl.hash.THash.postInsertHook(Z)V:377 - InsertUnaryOp Negation of usedFreeSlot
   * 9 Weak Mutation 259: gnu.trove.impl.hash.THash.postInsertHook(Z)V:377 - InsertUnaryOp IINC 1 usedFreeSlot
   * 10 Weak Mutation 260: gnu.trove.impl.hash.THash.postInsertHook(Z)V:377 - InsertUnaryOp IINC -1 usedFreeSlot
   * 11 Weak Mutation 261: gnu.trove.impl.hash.THash.postInsertHook(Z)V:377 - ReplaceComparisonOperator == -> !=
   * 12 Weak Mutation 262: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - InsertUnaryOp Negation
   * 13 Weak Mutation 263: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - InsertUnaryOp +1
   * 14 Weak Mutation 266: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - ReplaceConstant - 1 -> 0
   * 15 Weak Mutation 267: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - ReplaceArithmeticOperator - -> +
   * 16 Weak Mutation 264: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - InsertUnaryOp -1
   * 17 Weak Mutation 265: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - DeleteField: _freeI
   * 18 Weak Mutation 270: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - ReplaceArithmeticOperator - -> *
   * 19 Weak Mutation 268: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - ReplaceArithmeticOperator - -> %
   * 20 Weak Mutation 269: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - ReplaceArithmeticOperator - -> /
   * 21 Weak Mutation 275: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceConstant - 1 -> 0
   * 22 Weak Mutation 273: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp -1
   * 23 Weak Mutation 272: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp +1
   * 24 Weak Mutation 279: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceArithmeticOperator + -> *
   * 25 Weak Mutation 278: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceArithmeticOperator + -> /
   * 26 Weak Mutation 277: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceArithmeticOperator + -> %
   * 27 Weak Mutation 276: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceArithmeticOperator + -> -
   * 28 Weak Mutation 283: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - DeleteField: _maxSizeI
   * 29 Weak Mutation 282: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp -1
   * 30 Weak Mutation 281: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp +1
   * 31 Weak Mutation 280: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp Negation
   * 32 Weak Mutation 287: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp Negation
   * 33 Weak Mutation 285: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceComparisonOperator > -> !=
   * 34 Weak Mutation 271: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp Negation
   * 35 Weak Mutation 288: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp +1
   * 36 Weak Mutation 289: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp -1
   * 37 Weak Mutation 290: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - DeleteField: _freeI
   * 38 Weak Mutation 291: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceComparisonOperator != -> <
   * 39 gnu.trove.impl.hash.THash.<init>()V: root-Branch
   * 40 gnu.trove.impl.hash.THash.isEmpty()Z: I5 Branch 1 IF_ICMPNE L147 - true
   * 41 gnu.trove.impl.hash.THash.postInsertHook(Z)V: I3 Branch 12 IFEQ L377 - false
   * 42 gnu.trove.impl.hash.THash.postInsertHook(Z)V: I23 Branch 13 IF_ICMPGT L382 - false
   * 43 gnu.trove.impl.hash.THash.postInsertHook(Z)V: I26 Branch 14 IFNE L382 - true
   * 44 Weak Mutation 0: gnu.trove.impl.hash.THash.<init>(IF)V:96 - ReplaceConstant - 0 -> 1
   * 45 Weak Mutation 1: gnu.trove.impl.hash.THash.<init>(IF)V:131 - InsertUnaryOp Negation of loadFactor
   * 46 Weak Mutation 2: gnu.trove.impl.hash.THash.<init>(IF)V:135 - InsertUnaryOp Negation of loadFactor
   * 47 Weak Mutation 3: gnu.trove.impl.hash.THash.<init>(IF)V:137 - InsertUnaryOp Negation of initialCapacity
   * 48 Weak Mutation 4: gnu.trove.impl.hash.THash.<init>(IF)V:137 - InsertUnaryOp IINC 1 initialCapacity
   * 49 Weak Mutation 5: gnu.trove.impl.hash.THash.<init>(IF)V:137 - InsertUnaryOp IINC -1 initialCapacity
   * 50 Weak Mutation 6: gnu.trove.impl.hash.THash.<init>(IF)V:137 - InsertUnaryOp Negation of loadFactor
   * 51 Weak Mutation 7: gnu.trove.impl.hash.THash.<init>(IF)V:137 - ReplaceArithmeticOperator / -> -
   * 52 Weak Mutation 8: gnu.trove.impl.hash.THash.<init>(IF)V:137 - ReplaceArithmeticOperator / -> +
   * 53 Weak Mutation 9: gnu.trove.impl.hash.THash.<init>(IF)V:137 - ReplaceArithmeticOperator / -> %
   * 54 Weak Mutation 10: gnu.trove.impl.hash.THash.<init>(IF)V:137 - ReplaceArithmeticOperator / -> *
   * 55 Weak Mutation 11: gnu.trove.impl.hash.THash.<init>(IF)V:137 - DeleteStatement: fastCeil(F)I
   * 56 Weak Mutation 12: gnu.trove.impl.hash.THash.<init>(IF)V:137 - DeleteStatement: setUp(I)I
   * 57 Weak Mutation 13: gnu.trove.impl.hash.THash.isEmpty()Z:147 - ReplaceConstant - 0 -> 1
   * 58 Weak Mutation 14: gnu.trove.impl.hash.THash.isEmpty()Z:147 - InsertUnaryOp Negation
   * 59 Weak Mutation 15: gnu.trove.impl.hash.THash.isEmpty()Z:147 - InsertUnaryOp +1
   * 60 Weak Mutation 17: gnu.trove.impl.hash.THash.isEmpty()Z:147 - DeleteField: _sizeI
   * 61 Weak Mutation 16: gnu.trove.impl.hash.THash.isEmpty()Z:147 - InsertUnaryOp -1
   * 62 Weak Mutation 18: gnu.trove.impl.hash.THash.isEmpty()Z:147 - ReplaceComparisonOperator != -> >
   * 63 Weak Mutation 22: gnu.trove.impl.hash.THash.isEmpty()Z:147 - ReplaceConstant - 0 -> 1
   * 64 Weak Mutation 171: gnu.trove.impl.hash.THash.setUp(I)I:296 - InsertUnaryOp IINC 1 capacity
   * 65 Weak Mutation 170: gnu.trove.impl.hash.THash.setUp(I)I:296 - InsertUnaryOp Negation of capacity
   * 66 Weak Mutation 169: gnu.trove.impl.hash.THash.setUp(I)I:296 - ReplaceVariable capacity -> initialCapacity
   * 67 Weak Mutation 168: gnu.trove.impl.hash.THash.setUp(I)I:295 - DeleteStatement: nextPrime(I)I
   * 68 Weak Mutation 175: gnu.trove.impl.hash.THash.setUp(I)I:297 - InsertUnaryOp Negation of initialCapacity
   * 69 Weak Mutation 174: gnu.trove.impl.hash.THash.setUp(I)I:297 - ReplaceVariable initialCapacity -> capacity
   * 70 Weak Mutation 173: gnu.trove.impl.hash.THash.setUp(I)I:296 - DeleteStatement: computeMaxSize(I)V
   * 71 Weak Mutation 172: gnu.trove.impl.hash.THash.setUp(I)I:296 - InsertUnaryOp IINC -1 capacity
   * 72 Weak Mutation 167: gnu.trove.impl.hash.THash.setUp(I)I:295 - InsertUnaryOp IINC -1 initialCapacity
   * 73 Weak Mutation 166: gnu.trove.impl.hash.THash.setUp(I)I:295 - InsertUnaryOp IINC 1 initialCapacity
   * 74 Weak Mutation 165: gnu.trove.impl.hash.THash.setUp(I)I:295 - InsertUnaryOp Negation of initialCapacity
   * 75 Weak Mutation 178: gnu.trove.impl.hash.THash.setUp(I)I:297 - DeleteStatement: computeNextAutoCompactionAmount(I)V
   * 76 Weak Mutation 179: gnu.trove.impl.hash.THash.setUp(I)I:299 - ReplaceVariable capacity -> initialCapacity
   * 77 Weak Mutation 176: gnu.trove.impl.hash.THash.setUp(I)I:297 - InsertUnaryOp IINC 1 initialCapacity
   * 78 Weak Mutation 177: gnu.trove.impl.hash.THash.setUp(I)I:297 - InsertUnaryOp IINC -1 initialCapacity
   * 79 Weak Mutation 182: gnu.trove.impl.hash.THash.setUp(I)I:299 - InsertUnaryOp IINC -1 capacity
   * 80 Weak Mutation 180: gnu.trove.impl.hash.THash.setUp(I)I:299 - InsertUnaryOp Negation of capacity
   * 81 Weak Mutation 181: gnu.trove.impl.hash.THash.setUp(I)I:299 - InsertUnaryOp IINC 1 capacity
   * 82 Weak Mutation 205: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - InsertUnaryOp IINC -1 capacity
   * 83 Weak Mutation 204: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - InsertUnaryOp IINC 1 capacity
   * 84 Weak Mutation 207: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - ReplaceArithmeticOperator - -> +
   * 85 Weak Mutation 206: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - ReplaceConstant - 1 -> 0
   * 86 Weak Mutation 203: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - InsertUnaryOp Negation of capacity
   * 87 Weak Mutation 220: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - DeleteStatement: min(II)I
   * 88 Weak Mutation 221: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - InsertUnaryOp Negation of capacity
   * 89 Weak Mutation 222: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - InsertUnaryOp IINC 1 capacity
   * 90 Weak Mutation 223: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - InsertUnaryOp IINC -1 capacity
   * 91 Weak Mutation 216: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - ReplaceArithmeticOperator * -> -
   * 92 Weak Mutation 217: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - ReplaceArithmeticOperator * -> +
   * 93 Weak Mutation 218: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - ReplaceArithmeticOperator * -> %
   * 94 Weak Mutation 219: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - ReplaceArithmeticOperator * -> /
   * 95 Weak Mutation 212: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - InsertUnaryOp IINC 1 capacity
   * 96 Weak Mutation 213: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - InsertUnaryOp IINC -1 capacity
   * 97 Weak Mutation 214: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - InsertUnaryOp Negation
   * 98 Weak Mutation 215: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - DeleteField: _loadFactorF
   * 99 Weak Mutation 208: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - ReplaceArithmeticOperator - -> %
   * 100 Weak Mutation 209: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - ReplaceArithmeticOperator - -> /
   * 101 Weak Mutation 210: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - ReplaceArithmeticOperator - -> *
   * 102 Weak Mutation 211: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - InsertUnaryOp Negation of capacity
   * 103 Weak Mutation 237: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:361 - ReplaceComparisonOperator == -> >=
   * 104 Weak Mutation 236: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:361 - DeleteStatement: floatSub(FF)I
   * 105 Weak Mutation 235: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:361 - ReplaceConstant - 0.0 -> -1.0
   * 106 Weak Mutation 234: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:361 - ReplaceConstant - 0.0 -> 1.0
   * 107 Weak Mutation 233: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:361 - DeleteField: _autoCompactionFactorF
   * 108 Weak Mutation 232: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:361 - InsertUnaryOp Negation
   * 109 Weak Mutation 230: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - ReplaceArithmeticOperator - -> /
   * 110 Weak Mutation 229: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - ReplaceArithmeticOperator - -> %
   * 111 Weak Mutation 226: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - InsertUnaryOp -1
   * 112 Weak Mutation 225: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - InsertUnaryOp +1
   * 113 Weak Mutation 224: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - InsertUnaryOp Negation
   * 114 Weak Mutation 254: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceArithmeticOperator + -> -
   * 115 Weak Mutation 255: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceArithmeticOperator + -> %
   * 116 Weak Mutation 252: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceConstant - 0.5 -> -0.5
   * 117 Weak Mutation 253: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceConstant - 0.5 -> 1.5
   * 118 Weak Mutation 250: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceConstant - 0.5 -> 1.0
   * 119 Weak Mutation 251: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceConstant - 0.5 -> -1.0
   * 120 Weak Mutation 248: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceArithmeticOperator * -> /
   * 121 Weak Mutation 249: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceConstant - 0.5 -> 0.0
   * 122 Weak Mutation 246: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceArithmeticOperator * -> +
   * 123 Weak Mutation 247: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceArithmeticOperator * -> %
   * 124 Weak Mutation 244: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - DeleteField: _autoCompactionFactorF
   * 125 Weak Mutation 245: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceArithmeticOperator * -> -
   * 126 Weak Mutation 242: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - InsertUnaryOp IINC -1 size
   * 127 Weak Mutation 243: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - InsertUnaryOp Negation
   * 128 Weak Mutation 240: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - InsertUnaryOp Negation of size
   * 129 Weak Mutation 241: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - InsertUnaryOp IINC 1 size
   * 130 Weak Mutation 275: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceConstant - 1 -> 0
   * 131 Weak Mutation 273: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp -1
   * 132 Weak Mutation 272: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp +1
   * 133 Weak Mutation 279: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceArithmeticOperator + -> *
   * 134 Weak Mutation 278: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceArithmeticOperator + -> /
   * 135 Weak Mutation 277: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceArithmeticOperator + -> %
   * 136 Weak Mutation 276: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceArithmeticOperator + -> -
   * 137 Weak Mutation 283: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - DeleteField: _maxSizeI
   * 138 Weak Mutation 282: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp -1
   * 139 Weak Mutation 281: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp +1
   * 140 Weak Mutation 280: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp Negation
   * 141 Weak Mutation 287: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp Negation
   * 142 Weak Mutation 285: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceComparisonOperator > -> !=
   * 143 Weak Mutation 258: gnu.trove.impl.hash.THash.postInsertHook(Z)V:377 - InsertUnaryOp Negation of usedFreeSlot
   * 144 Weak Mutation 259: gnu.trove.impl.hash.THash.postInsertHook(Z)V:377 - InsertUnaryOp IINC 1 usedFreeSlot
   * 145 Weak Mutation 256: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceArithmeticOperator + -> /
   * 146 Weak Mutation 257: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceArithmeticOperator + -> *
   * 147 Weak Mutation 262: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - InsertUnaryOp Negation
   * 148 Weak Mutation 263: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - InsertUnaryOp +1
   * 149 Weak Mutation 260: gnu.trove.impl.hash.THash.postInsertHook(Z)V:377 - InsertUnaryOp IINC -1 usedFreeSlot
   * 150 Weak Mutation 261: gnu.trove.impl.hash.THash.postInsertHook(Z)V:377 - ReplaceComparisonOperator == -> !=
   * 151 Weak Mutation 266: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - ReplaceConstant - 1 -> 0
   * 152 Weak Mutation 267: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - ReplaceArithmeticOperator - -> +
   * 153 Weak Mutation 264: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - InsertUnaryOp -1
   * 154 Weak Mutation 265: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - DeleteField: _freeI
   * 155 Weak Mutation 270: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - ReplaceArithmeticOperator - -> *
   * 156 Weak Mutation 271: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp Negation
   * 157 Weak Mutation 268: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - ReplaceArithmeticOperator - -> %
   * 158 Weak Mutation 269: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - ReplaceArithmeticOperator - -> /
   * 159 Weak Mutation 288: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp +1
   * 160 Weak Mutation 289: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp -1
   * 161 Weak Mutation 290: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - DeleteField: _freeI
   * 162 Weak Mutation 291: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceComparisonOperator != -> <
   * 163 gnu.trove.impl.hash.THash.computeMaxSize(I)V: root-Branch
   * 164 gnu.trove.impl.hash.THash.setUp(I)I: root-Branch
   * 165 gnu.trove.impl.hash.THash.<init>(IF)V: root-Branch
   * 166 gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V: I6 Branch 11 IFEQ L361 - false
   */

//   @Test
//   public void test0()  throws Throwable  {
//       TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap((-327));
//       TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(tDoubleFloatHashMap0._set, tDoubleFloatHashMap0._set);
//       TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(tDoubleDoubleHashMap0._set);
//       boolean boolean0 = tDoubleHashSet0.isEmpty();
//       assertEquals(0.5F, tDoubleFloatHashMap0.getAutoCompactionFactor(), 0.01F);
//       assertEquals(false, boolean0);
//       assertEquals(7, tDoubleDoubleHashMap0.capacity());
//       assertEquals(1, tDoubleHashSet0.size());
//   }

  //Test case number: 1
  /*
   * 9 covered goals:
   * 1 Weak Mutation 21: gnu.trove.impl.hash.THash.isEmpty()Z:147 - ReplaceConstant - 1 -> 0
   * 2 Weak Mutation 20: gnu.trove.impl.hash.THash.isEmpty()Z:147 - ReplaceComparisonOperator != -> -1
   * 3 gnu.trove.impl.hash.THash.isEmpty()Z: I5 Branch 1 IF_ICMPNE L147 - false
   * 4 Weak Mutation 13: gnu.trove.impl.hash.THash.isEmpty()Z:147 - ReplaceConstant - 0 -> 1
   * 5 Weak Mutation 14: gnu.trove.impl.hash.THash.isEmpty()Z:147 - InsertUnaryOp Negation
   * 6 Weak Mutation 15: gnu.trove.impl.hash.THash.isEmpty()Z:147 - InsertUnaryOp +1
   * 7 Weak Mutation 16: gnu.trove.impl.hash.THash.isEmpty()Z:147 - InsertUnaryOp -1
   * 8 Weak Mutation 21: gnu.trove.impl.hash.THash.isEmpty()Z:147 - ReplaceConstant - 1 -> 0
   * 9 Weak Mutation 20: gnu.trove.impl.hash.THash.isEmpty()Z:147 - ReplaceComparisonOperator != -> -1
   */

//   @Test
//   public void test1()  throws Throwable  {
//       TFloatObjectHashMap<Object> tFloatObjectHashMap0 = new TFloatObjectHashMap<Object>(3);
//       boolean boolean0 = tFloatObjectHashMap0.isEmpty();
//       assertEquals(0.5F, tFloatObjectHashMap0.getAutoCompactionFactor(), 0.01F);
//       assertEquals(7, tFloatObjectHashMap0.capacity());
//       assertEquals(true, boolean0);
//   }

  //Test case number: 2
  /*
   * 105 covered goals:
   * 1 Weak Mutation 23: gnu.trove.impl.hash.THash.size()I:157 - InsertUnaryOp Negation
   * 2 Weak Mutation 25: gnu.trove.impl.hash.THash.size()I:157 - InsertUnaryOp -1
   * 3 Weak Mutation 24: gnu.trove.impl.hash.THash.size()I:157 - InsertUnaryOp +1
   * 4 Weak Mutation 77: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceConstant - 1 -> 0
   * 5 Weak Mutation 78: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> -
   * 6 Weak Mutation 79: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> %
   * 7 Weak Mutation 73: gnu.trove.impl.hash.THash.compact()V:201 - InsertUnaryOp Negation
   * 8 Weak Mutation 74: gnu.trove.impl.hash.THash.compact()V:201 - InsertUnaryOp +1
   * 9 Weak Mutation 75: gnu.trove.impl.hash.THash.compact()V:201 - InsertUnaryOp -1
   * 10 Weak Mutation 85: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator / -> -
   * 11 Weak Mutation 86: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator / -> +
   * 12 Weak Mutation 81: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> *
   * 13 Weak Mutation 80: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> /
   * 14 Weak Mutation 83: gnu.trove.impl.hash.THash.compact()V:201 - InsertUnaryOp Negation
   * 15 Weak Mutation 82: gnu.trove.impl.hash.THash.compact()V:201 - DeleteStatement: size()I
   * 16 Weak Mutation 93: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> /
   * 17 Weak Mutation 92: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> %
   * 18 Weak Mutation 95: gnu.trove.impl.hash.THash.compact()V:201 - DeleteStatement: max(II)I
   * 19 Weak Mutation 94: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> *
   * 20 Weak Mutation 89: gnu.trove.impl.hash.THash.compact()V:201 - DeleteStatement: fastCeil(F)I
   * 21 Weak Mutation 88: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator / -> *
   * 22 Weak Mutation 91: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> -
   * 23 Weak Mutation 90: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceConstant - 1 -> 0
   * 24 Weak Mutation 96: gnu.trove.impl.hash.THash.compact()V:201 - DeleteStatement: nextPrime(I)I
   * 25 Weak Mutation 97: gnu.trove.impl.hash.THash.compact()V:201 - DeleteStatement: rehash(I)V
   * 26 Weak Mutation 98: gnu.trove.impl.hash.THash.compact()V:203 - DeleteStatement: capacity()I
   * 27 Weak Mutation 99: gnu.trove.impl.hash.THash.compact()V:203 - DeleteStatement: computeMaxSize(I)V
   * 28 Weak Mutation 102: gnu.trove.impl.hash.THash.compact()V:206 - ReplaceConstant - 0.0 -> 1.0
   * 29 Weak Mutation 103: gnu.trove.impl.hash.THash.compact()V:206 - ReplaceConstant - 0.0 -> -1.0
   * 30 Weak Mutation 100: gnu.trove.impl.hash.THash.compact()V:206 - InsertUnaryOp Negation
   * 31 Weak Mutation 101: gnu.trove.impl.hash.THash.compact()V:206 - DeleteField: _autoCompactionFactorF
   * 32 Weak Mutation 104: gnu.trove.impl.hash.THash.compact()V:206 - DeleteStatement: floatSub(FF)I
   * 33 Weak Mutation 105: gnu.trove.impl.hash.THash.compact()V:206 - ReplaceComparisonOperator == -> >=
   * 34 Weak Mutation 108: gnu.trove.impl.hash.THash.compact()V:207 - DeleteStatement: size()I
   * 35 Weak Mutation 109: gnu.trove.impl.hash.THash.compact()V:207 - DeleteStatement: computeNextAutoCompactionAmount(I)V
   * 36 Weak Mutation 184: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:329 - ReplaceConstant - 0 -> 1
   * 37 Weak Mutation 186: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - ReplaceComparisonOperator == -> !=
   * 38 Weak Mutation 187: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - InsertUnaryOp Negation
   * 39 Weak Mutation 185: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - InsertUnaryOp Negation of check_for_compaction
   * 40 Weak Mutation 190: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - DeleteField: _autoCompactRemovesRemainingI
   * 41 Weak Mutation 191: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - ReplaceComparisonOperator > -> !=
   * 42 Weak Mutation 188: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - InsertUnaryOp +1
   * 43 Weak Mutation 189: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - InsertUnaryOp -1
   * 44 Weak Mutation 197: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - ReplaceConstant - 0.0 -> -1.0
   * 45 Weak Mutation 196: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - ReplaceConstant - 0.0 -> 1.0
   * 46 Weak Mutation 199: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - ReplaceComparisonOperator == -> >=
   * 47 Weak Mutation 198: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - DeleteStatement: floatSub(FF)I
   * 48 Weak Mutation 195: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - DeleteField: _autoCompactionFactorF
   * 49 Weak Mutation 194: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - InsertUnaryOp Negation
   * 50 Weak Mutation 202: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:336 - DeleteStatement: compact()V
   * 51 gnu.trove.impl.hash.THash.size()I: root-Branch
   * 52 gnu.trove.impl.hash.THash.compact()V: I31 Branch 3 IFEQ L206 - false
   * 53 gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V: I8 Branch 8 IFEQ L331 - false
   * 54 gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V: I11 Branch 9 IFGT L331 - false
   * 55 gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V: I16 Branch 10 IFEQ L331 - false
   * 56 Weak Mutation 23: gnu.trove.impl.hash.THash.size()I:157 - InsertUnaryOp Negation
   * 57 Weak Mutation 25: gnu.trove.impl.hash.THash.size()I:157 - InsertUnaryOp -1
   * 58 Weak Mutation 24: gnu.trove.impl.hash.THash.size()I:157 - InsertUnaryOp +1
   * 59 Weak Mutation 77: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceConstant - 1 -> 0
   * 60 Weak Mutation 78: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> -
   * 61 Weak Mutation 79: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> %
   * 62 Weak Mutation 73: gnu.trove.impl.hash.THash.compact()V:201 - InsertUnaryOp Negation
   * 63 Weak Mutation 74: gnu.trove.impl.hash.THash.compact()V:201 - InsertUnaryOp +1
   * 64 Weak Mutation 75: gnu.trove.impl.hash.THash.compact()V:201 - InsertUnaryOp -1
   * 65 Weak Mutation 85: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator / -> -
   * 66 Weak Mutation 86: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator / -> +
   * 67 Weak Mutation 81: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> *
   * 68 Weak Mutation 80: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> /
   * 69 Weak Mutation 83: gnu.trove.impl.hash.THash.compact()V:201 - InsertUnaryOp Negation
   * 70 Weak Mutation 82: gnu.trove.impl.hash.THash.compact()V:201 - DeleteStatement: size()I
   * 71 Weak Mutation 93: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> /
   * 72 Weak Mutation 92: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> %
   * 73 Weak Mutation 95: gnu.trove.impl.hash.THash.compact()V:201 - DeleteStatement: max(II)I
   * 74 Weak Mutation 94: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> *
   * 75 Weak Mutation 89: gnu.trove.impl.hash.THash.compact()V:201 - DeleteStatement: fastCeil(F)I
   * 76 Weak Mutation 88: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator / -> *
   * 77 Weak Mutation 91: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> -
   * 78 Weak Mutation 90: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceConstant - 1 -> 0
   * 79 Weak Mutation 102: gnu.trove.impl.hash.THash.compact()V:206 - ReplaceConstant - 0.0 -> 1.0
   * 80 Weak Mutation 103: gnu.trove.impl.hash.THash.compact()V:206 - ReplaceConstant - 0.0 -> -1.0
   * 81 Weak Mutation 100: gnu.trove.impl.hash.THash.compact()V:206 - InsertUnaryOp Negation
   * 82 Weak Mutation 101: gnu.trove.impl.hash.THash.compact()V:206 - DeleteField: _autoCompactionFactorF
   * 83 Weak Mutation 98: gnu.trove.impl.hash.THash.compact()V:203 - DeleteStatement: capacity()I
   * 84 Weak Mutation 99: gnu.trove.impl.hash.THash.compact()V:203 - DeleteStatement: computeMaxSize(I)V
   * 85 Weak Mutation 96: gnu.trove.impl.hash.THash.compact()V:201 - DeleteStatement: nextPrime(I)I
   * 86 Weak Mutation 97: gnu.trove.impl.hash.THash.compact()V:201 - DeleteStatement: rehash(I)V
   * 87 Weak Mutation 108: gnu.trove.impl.hash.THash.compact()V:207 - DeleteStatement: size()I
   * 88 Weak Mutation 109: gnu.trove.impl.hash.THash.compact()V:207 - DeleteStatement: computeNextAutoCompactionAmount(I)V
   * 89 Weak Mutation 104: gnu.trove.impl.hash.THash.compact()V:206 - DeleteStatement: floatSub(FF)I
   * 90 Weak Mutation 105: gnu.trove.impl.hash.THash.compact()V:206 - ReplaceComparisonOperator == -> >=
   * 91 Weak Mutation 186: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - ReplaceComparisonOperator == -> !=
   * 92 Weak Mutation 187: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - InsertUnaryOp Negation
   * 93 Weak Mutation 184: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:329 - ReplaceConstant - 0 -> 1
   * 94 Weak Mutation 185: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - InsertUnaryOp Negation of check_for_compaction
   * 95 Weak Mutation 190: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - DeleteField: _autoCompactRemovesRemainingI
   * 96 Weak Mutation 191: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - ReplaceComparisonOperator > -> !=
   * 97 Weak Mutation 188: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - InsertUnaryOp +1
   * 98 Weak Mutation 189: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - InsertUnaryOp -1
   * 99 Weak Mutation 202: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:336 - DeleteStatement: compact()V
   * 100 Weak Mutation 197: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - ReplaceConstant - 0.0 -> -1.0
   * 101 Weak Mutation 196: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - ReplaceConstant - 0.0 -> 1.0
   * 102 Weak Mutation 199: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - ReplaceComparisonOperator == -> >=
   * 103 Weak Mutation 198: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - DeleteStatement: floatSub(FF)I
   * 104 Weak Mutation 195: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - DeleteField: _autoCompactionFactorF
   * 105 Weak Mutation 194: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - InsertUnaryOp Negation
   */

//   @Test
//   public void test2()  throws Throwable  {
//       TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(0, 0, 0, 32756);
//       tLongFloatHashMap0.reenableAutoCompaction(true);
//       assertEquals(0, tLongFloatHashMap0.size());
//       assertEquals(0.5F, tLongFloatHashMap0.getAutoCompactionFactor(), 0.01F);
//       assertEquals(3, tLongFloatHashMap0.capacity());
//   }

  //Test case number: 3
  /*
   * 27 covered goals:
   * 1 Weak Mutation 26: gnu.trove.impl.hash.THash.size()I:157 - DeleteField: _sizeI
   * 2 Weak Mutation 27: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - InsertUnaryOp Negation of desiredCapacity
   * 3 Weak Mutation 29: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - InsertUnaryOp IINC -1 desiredCapacity
   * 4 Weak Mutation 28: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - InsertUnaryOp IINC 1 desiredCapacity
   * 5 Weak Mutation 31: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - InsertUnaryOp +1
   * 6 Weak Mutation 30: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - InsertUnaryOp Negation
   * 7 Weak Mutation 34: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - DeleteStatement: size()I
   * 8 Weak Mutation 32: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - InsertUnaryOp -1
   * 9 Weak Mutation 33: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - DeleteField: _maxSizeI
   * 10 Weak Mutation 36: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - ReplaceArithmeticOperator - -> %
   * 11 Weak Mutation 37: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - ReplaceArithmeticOperator - -> /
   * 12 Weak Mutation 40: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - ReplaceComparisonOperator <= -> <
   * 13 Weak Mutation 284: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceComparisonOperator > -> >=
   * 14 gnu.trove.impl.hash.THash.ensureCapacity(I)V: I8 Branch 2 IF_ICMPLE L174 - true
   * 15 Weak Mutation 27: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - InsertUnaryOp Negation of desiredCapacity
   * 16 Weak Mutation 26: gnu.trove.impl.hash.THash.size()I:157 - DeleteField: _sizeI
   * 17 Weak Mutation 29: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - InsertUnaryOp IINC -1 desiredCapacity
   * 18 Weak Mutation 28: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - InsertUnaryOp IINC 1 desiredCapacity
   * 19 Weak Mutation 31: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - InsertUnaryOp +1
   * 20 Weak Mutation 30: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - InsertUnaryOp Negation
   * 21 Weak Mutation 34: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - DeleteStatement: size()I
   * 22 Weak Mutation 32: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - InsertUnaryOp -1
   * 23 Weak Mutation 33: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - DeleteField: _maxSizeI
   * 24 Weak Mutation 36: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - ReplaceArithmeticOperator - -> %
   * 25 Weak Mutation 37: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - ReplaceArithmeticOperator - -> /
   * 26 Weak Mutation 40: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - ReplaceComparisonOperator <= -> <
   * 27 Weak Mutation 284: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceComparisonOperator > -> >=
   */

  @Test
  public void test3()  throws Throwable  {
      TByteShortHashMap tByteShortHashMap0 = new TByteShortHashMap((-6));
      short[] shortArray0 = new short[6];
      TByteShortHashMap tByteShortHashMap1 = new TByteShortHashMap(tByteShortHashMap0._states, shortArray0);
      tByteShortHashMap0.putAll((TByteShortMap) tByteShortHashMap1);
      assertEquals("{0=0}", tByteShortHashMap0.toString());
      assertEquals(1, tByteShortHashMap0.size());
  }

  //Test case number: 4
  /*
   * 75 covered goals:
   * 1 Weak Mutation 35: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - ReplaceArithmeticOperator - -> +
   * 2 Weak Mutation 38: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - ReplaceArithmeticOperator - -> *
   * 3 Weak Mutation 41: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - ReplaceComparisonOperator <= -> -1
   * 4 Weak Mutation 42: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - DeleteStatement: size()I
   * 5 Weak Mutation 43: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceConstant - 1 -> 0
   * 6 Weak Mutation 46: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> /
   * 7 Weak Mutation 47: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> *
   * 8 Weak Mutation 44: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> -
   * 9 Weak Mutation 45: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> %
   * 10 Weak Mutation 51: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - DeleteStatement: size()I
   * 11 Weak Mutation 50: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - InsertUnaryOp IINC -1 desiredCapacity
   * 12 Weak Mutation 49: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - InsertUnaryOp IINC 1 desiredCapacity
   * 13 Weak Mutation 48: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - InsertUnaryOp Negation of desiredCapacity
   * 14 Weak Mutation 55: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> *
   * 15 Weak Mutation 54: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> /
   * 16 Weak Mutation 53: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> %
   * 17 Weak Mutation 52: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> -
   * 18 Weak Mutation 59: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator / -> +
   * 19 Weak Mutation 58: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator / -> -
   * 20 Weak Mutation 57: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - DeleteField: _loadFactorF
   * 21 Weak Mutation 56: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - InsertUnaryOp Negation
   * 22 Weak Mutation 63: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceConstant - 1 -> 0
   * 23 Weak Mutation 62: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - DeleteStatement: fastCeil(F)I
   * 24 Weak Mutation 61: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator / -> *
   * 25 Weak Mutation 60: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator / -> %
   * 26 Weak Mutation 68: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - DeleteStatement: max(II)I
   * 27 Weak Mutation 69: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - DeleteStatement: nextPrime(I)I
   * 28 Weak Mutation 70: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - DeleteStatement: rehash(I)V
   * 29 Weak Mutation 64: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> -
   * 30 Weak Mutation 65: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> %
   * 31 Weak Mutation 66: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> /
   * 32 Weak Mutation 67: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> *
   * 33 Weak Mutation 71: gnu.trove.impl.hash.THash.ensureCapacity(I)V:177 - DeleteStatement: capacity()I
   * 34 Weak Mutation 72: gnu.trove.impl.hash.THash.ensureCapacity(I)V:177 - DeleteStatement: computeMaxSize(I)V
   * 35 Weak Mutation 231: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - ReplaceArithmeticOperator - -> *
   * 36 Weak Mutation 228: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - ReplaceArithmeticOperator - -> +
   * 37 Weak Mutation 227: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - DeleteField: _sizeI
   * 38 gnu.trove.impl.hash.THash.ensureCapacity(I)V: I8 Branch 2 IF_ICMPLE L174 - false
   * 39 Weak Mutation 35: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - ReplaceArithmeticOperator - -> +
   * 40 Weak Mutation 38: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - ReplaceArithmeticOperator - -> *
   * 41 Weak Mutation 42: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - DeleteStatement: size()I
   * 42 Weak Mutation 43: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceConstant - 1 -> 0
   * 43 Weak Mutation 41: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - ReplaceComparisonOperator <= -> -1
   * 44 Weak Mutation 46: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> /
   * 45 Weak Mutation 47: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> *
   * 46 Weak Mutation 44: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> -
   * 47 Weak Mutation 45: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> %
   * 48 Weak Mutation 51: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - DeleteStatement: size()I
   * 49 Weak Mutation 50: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - InsertUnaryOp IINC -1 desiredCapacity
   * 50 Weak Mutation 49: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - InsertUnaryOp IINC 1 desiredCapacity
   * 51 Weak Mutation 48: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - InsertUnaryOp Negation of desiredCapacity
   * 52 Weak Mutation 55: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> *
   * 53 Weak Mutation 54: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> /
   * 54 Weak Mutation 53: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> %
   * 55 Weak Mutation 52: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> -
   * 56 Weak Mutation 59: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator / -> +
   * 57 Weak Mutation 58: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator / -> -
   * 58 Weak Mutation 57: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - DeleteField: _loadFactorF
   * 59 Weak Mutation 56: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - InsertUnaryOp Negation
   * 60 Weak Mutation 63: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceConstant - 1 -> 0
   * 61 Weak Mutation 62: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - DeleteStatement: fastCeil(F)I
   * 62 Weak Mutation 61: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator / -> *
   * 63 Weak Mutation 60: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator / -> %
   * 64 Weak Mutation 68: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - DeleteStatement: max(II)I
   * 65 Weak Mutation 69: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - DeleteStatement: nextPrime(I)I
   * 66 Weak Mutation 70: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - DeleteStatement: rehash(I)V
   * 67 Weak Mutation 71: gnu.trove.impl.hash.THash.ensureCapacity(I)V:177 - DeleteStatement: capacity()I
   * 68 Weak Mutation 64: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> -
   * 69 Weak Mutation 65: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> %
   * 70 Weak Mutation 66: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> /
   * 71 Weak Mutation 67: gnu.trove.impl.hash.THash.ensureCapacity(I)V:175 - ReplaceArithmeticOperator + -> *
   * 72 Weak Mutation 72: gnu.trove.impl.hash.THash.ensureCapacity(I)V:177 - DeleteStatement: computeMaxSize(I)V
   * 73 Weak Mutation 231: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - ReplaceArithmeticOperator - -> *
   * 74 Weak Mutation 228: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - ReplaceArithmeticOperator - -> +
   * 75 Weak Mutation 227: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - DeleteField: _sizeI
   */

  @Test
  public void test4()  throws Throwable  {
      short[] shortArray0 = new short[9];
      double[] doubleArray0 = new double[5];
      TShortDoubleHashMap tShortDoubleHashMap0 = new TShortDoubleHashMap(shortArray0, doubleArray0);
      tShortDoubleHashMap0.ensureCapacity((int) (short)196);
      assertEquals(397, tShortDoubleHashMap0.capacity());
      assertEquals(1, tShortDoubleHashMap0.size());
  }

  //Test case number: 5
  /*
   * 12 covered goals:
   * 1 Weak Mutation 39: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - ReplaceComparisonOperator <= -> ==
   * 2 Weak Mutation 27: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - InsertUnaryOp Negation of desiredCapacity
   * 3 Weak Mutation 29: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - InsertUnaryOp IINC -1 desiredCapacity
   * 4 Weak Mutation 28: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - InsertUnaryOp IINC 1 desiredCapacity
   * 5 Weak Mutation 31: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - InsertUnaryOp +1
   * 6 Weak Mutation 30: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - InsertUnaryOp Negation
   * 7 Weak Mutation 34: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - DeleteStatement: size()I
   * 8 Weak Mutation 32: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - InsertUnaryOp -1
   * 9 Weak Mutation 33: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - DeleteField: _maxSizeI
   * 10 Weak Mutation 36: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - ReplaceArithmeticOperator - -> %
   * 11 Weak Mutation 37: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - ReplaceArithmeticOperator - -> /
   * 12 Weak Mutation 39: gnu.trove.impl.hash.THash.ensureCapacity(I)V:174 - ReplaceComparisonOperator <= -> ==
   */

//   @Test
//   public void test5()  throws Throwable  {
//       TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap((-327));
//       TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(tDoubleFloatHashMap0._set, tDoubleFloatHashMap0._set);
//       TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
//       assertEquals(23, tDoubleDoubleHashMap1.capacity());
//       assertEquals(1, tDoubleDoubleHashMap0.size());
//       assertEquals(0.5F, tDoubleDoubleHashMap0.getAutoCompactionFactor(), 0.01F);
//   }

  //Test case number: 6
  /*
   * 10 covered goals:
   * 1 Weak Mutation 106: gnu.trove.impl.hash.THash.compact()V:206 - ReplaceComparisonOperator == -> <=
   * 2 Weak Mutation 200: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - ReplaceComparisonOperator == -> <=
   * 3 Weak Mutation 238: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:361 - ReplaceComparisonOperator == -> <=
   * 4 Weak Mutation 191: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - ReplaceComparisonOperator > -> !=
   * 5 Weak Mutation 202: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:336 - DeleteStatement: compact()V
   * 6 Weak Mutation 195: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - DeleteField: _autoCompactionFactorF
   * 7 Weak Mutation 84: gnu.trove.impl.hash.THash.compact()V:201 - DeleteField: _loadFactorF
   * 8 Weak Mutation 106: gnu.trove.impl.hash.THash.compact()V:206 - ReplaceComparisonOperator == -> <=
   * 9 Weak Mutation 200: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - ReplaceComparisonOperator == -> <=
   * 10 Weak Mutation 238: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:361 - ReplaceComparisonOperator == -> <=
   */

//   @Test
//   public void test6()  throws Throwable  {
//       TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>((int) (short) (-339), (float) (short) (-339), (int) (short) (-339));
//       tObjectIntHashMap0.reenableAutoCompaction(true);
//       assertEquals((-339.0F), tObjectIntHashMap0.getAutoCompactionFactor(), 0.01F);
//       assertEquals(0, tObjectIntHashMap0.size());
//       assertEquals(3, tObjectIntHashMap0.capacity());
//   }

  //Test case number: 7
  /*
   * 9 covered goals:
   * 1 Weak Mutation 107: gnu.trove.impl.hash.THash.compact()V:206 - ReplaceComparisonOperator == -> -2
   * 2 Weak Mutation 125: gnu.trove.impl.hash.THash.trimToSize()V:252 - DeleteStatement: compact()V
   * 3 Weak Mutation 239: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:361 - ReplaceComparisonOperator == -> -2
   * 4 gnu.trove.impl.hash.THash.trimToSize()V: root-Branch
   * 5 gnu.trove.impl.hash.THash.compact()V: I31 Branch 3 IFEQ L206 - true
   * 6 gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V: I6 Branch 11 IFEQ L361 - true
   * 7 Weak Mutation 107: gnu.trove.impl.hash.THash.compact()V:206 - ReplaceComparisonOperator == -> -2
   * 8 Weak Mutation 125: gnu.trove.impl.hash.THash.trimToSize()V:252 - DeleteStatement: compact()V
   * 9 Weak Mutation 239: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:361 - ReplaceComparisonOperator == -> -2
   */

//   @Test
//   public void test7()  throws Throwable  {
//       TObjectDoubleHashMap<String> tObjectDoubleHashMap0 = new TObjectDoubleHashMap<String>((int) (short)1605, (float) 0, (double) (short)1605);
//       assertEquals(3, tObjectDoubleHashMap0.capacity());
//       
//       tObjectDoubleHashMap0.trimToSize();
//       assertEquals(0.0F, tObjectDoubleHashMap0.getAutoCompactionFactor(), 0.01F);
//       assertEquals(0, tObjectDoubleHashMap0.size());
//   }

  //Test case number: 8
  /*
   * 13 covered goals:
   * 1 Weak Mutation 110: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:224 - InsertUnaryOp Negation of factor
   * 2 Weak Mutation 111: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:224 - ReplaceConstant - 0.0 -> 1.0
   * 3 Weak Mutation 115: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:224 - ReplaceComparisonOperator >= -> >
   * 4 Weak Mutation 113: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:224 - DeleteStatement: floatSub(FF)I
   * 5 Weak Mutation 112: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:224 - ReplaceConstant - 0.0 -> -1.0
   * 6 Weak Mutation 122: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:228 - InsertUnaryOp Negation of factor
   * 7 gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V: I5 Branch 4 IFGE L224 - true
   * 8 Weak Mutation 110: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:224 - InsertUnaryOp Negation of factor
   * 9 Weak Mutation 111: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:224 - ReplaceConstant - 0.0 -> 1.0
   * 10 Weak Mutation 115: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:224 - ReplaceComparisonOperator >= -> >
   * 11 Weak Mutation 113: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:224 - DeleteStatement: floatSub(FF)I
   * 12 Weak Mutation 112: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:224 - ReplaceConstant - 0.0 -> -1.0
   * 13 Weak Mutation 122: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:228 - InsertUnaryOp Negation of factor
   */

//   @Test
//   public void test8()  throws Throwable  {
//       TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(0, 0);
//       tByteIntHashMap0.setAutoCompactionFactor((float) 0);
//       assertEquals(0.0F, tByteIntHashMap0.getAutoCompactionFactor(), 0.01F);
//       assertEquals(3, tByteIntHashMap0.capacity());
//   }

  //Test case number: 9
  /*
   * 14 covered goals:
   * 1 Weak Mutation 116: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:224 - ReplaceComparisonOperator >= -> -1
   * 2 Weak Mutation 119: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:225 - InsertUnaryOp Negation of factor
   * 3 Weak Mutation 118: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:225 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 4 Weak Mutation 117: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:225 - ReplaceConstant - Factor must be >= 0:  -> 
   * 5 Weak Mutation 121: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:225 - DeleteStatement: toString()Ljava/lang/String;
   * 6 Weak Mutation 120: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:225 - DeleteStatement: append(F)Ljava/lang/StringBuilder;
   * 7 gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V: I5 Branch 4 IFGE L224 - false
   * 8 Weak Mutation 238: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:361 - ReplaceComparisonOperator == -> <=
   * 9 Weak Mutation 119: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:225 - InsertUnaryOp Negation of factor
   * 10 Weak Mutation 118: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:225 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 11 Weak Mutation 117: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:225 - ReplaceConstant - Factor must be >= 0:  -> 
   * 12 Weak Mutation 116: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:224 - ReplaceComparisonOperator >= -> -1
   * 13 Weak Mutation 121: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:225 - DeleteStatement: toString()Ljava/lang/String;
   * 14 Weak Mutation 120: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:225 - DeleteStatement: append(F)Ljava/lang/StringBuilder;
   */

  @Test
  public void test9()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<String> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (-1628), (float) (-1628));
      // Undeclared exception!
      try {
        tObjectLongCustomHashMap0.setAutoCompactionFactor((float) (-1628));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Factor must be >= 0: -1628.0
         //
      }
  }

  //Test case number: 10
  /*
   * 7 covered goals:
   * 1 Weak Mutation 114: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:224 - ReplaceComparisonOperator >= -> ==
   * 2 Weak Mutation 110: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:224 - InsertUnaryOp Negation of factor
   * 3 Weak Mutation 111: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:224 - ReplaceConstant - 0.0 -> 1.0
   * 4 Weak Mutation 113: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:224 - DeleteStatement: floatSub(FF)I
   * 5 Weak Mutation 112: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:224 - ReplaceConstant - 0.0 -> -1.0
   * 6 Weak Mutation 122: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:228 - InsertUnaryOp Negation of factor
   * 7 Weak Mutation 114: gnu.trove.impl.hash.THash.setAutoCompactionFactor(F)V:224 - ReplaceComparisonOperator >= -> ==
   */

//   @Test
//   public void test10()  throws Throwable  {
//       TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(237);
//       tByteLongHashMap0.setAutoCompactionFactor((float) 32756);
//       assertEquals(32756.0F, tByteLongHashMap0.getAutoCompactionFactor(), 0.01F);
//       assertEquals(557, tByteLongHashMap0.capacity());
//   }

  //Test case number: 11
  /*
   * 5 covered goals:
   * 1 Weak Mutation 124: gnu.trove.impl.hash.THash.getAutoCompactionFactor()F:238 - DeleteField: _autoCompactionFactorF
   * 2 Weak Mutation 123: gnu.trove.impl.hash.THash.getAutoCompactionFactor()F:238 - InsertUnaryOp Negation
   * 3 gnu.trove.impl.hash.THash.getAutoCompactionFactor()F: root-Branch
   * 4 Weak Mutation 124: gnu.trove.impl.hash.THash.getAutoCompactionFactor()F:238 - DeleteField: _autoCompactionFactorF
   * 5 Weak Mutation 123: gnu.trove.impl.hash.THash.getAutoCompactionFactor()F:238 - InsertUnaryOp Negation
   */

//   @Test
//   public void test11()  throws Throwable  {
//       TByteShortHashMap tByteShortHashMap0 = new TByteShortHashMap((-6));
//       float float0 = tByteShortHashMap0.getAutoCompactionFactor();
//       assertEquals(0.5F, float0, 0.01F);
//       assertEquals(3, tByteShortHashMap0.capacity());
//   }

  //Test case number: 12
  /*
   * 67 covered goals:
   * 1 Weak Mutation 127: gnu.trove.impl.hash.THash.removeAt(I)V:263 - InsertUnaryOp +1
   * 2 Weak Mutation 126: gnu.trove.impl.hash.THash.removeAt(I)V:263 - InsertUnaryOp Negation
   * 3 Weak Mutation 129: gnu.trove.impl.hash.THash.removeAt(I)V:263 - DeleteField: _sizeI
   * 4 Weak Mutation 128: gnu.trove.impl.hash.THash.removeAt(I)V:263 - InsertUnaryOp -1
   * 5 Weak Mutation 131: gnu.trove.impl.hash.THash.removeAt(I)V:263 - ReplaceArithmeticOperator - -> +
   * 6 Weak Mutation 130: gnu.trove.impl.hash.THash.removeAt(I)V:263 - ReplaceConstant - 1 -> 0
   * 7 Weak Mutation 133: gnu.trove.impl.hash.THash.removeAt(I)V:263 - ReplaceArithmeticOperator - -> /
   * 8 Weak Mutation 132: gnu.trove.impl.hash.THash.removeAt(I)V:263 - ReplaceArithmeticOperator - -> %
   * 9 Weak Mutation 134: gnu.trove.impl.hash.THash.removeAt(I)V:263 - ReplaceArithmeticOperator - -> *
   * 10 Weak Mutation 137: gnu.trove.impl.hash.THash.removeAt(I)V:266 - ReplaceConstant - 0.0 -> 1.0
   * 11 Weak Mutation 136: gnu.trove.impl.hash.THash.removeAt(I)V:266 - DeleteField: _autoCompactionFactorF
   * 12 Weak Mutation 139: gnu.trove.impl.hash.THash.removeAt(I)V:266 - DeleteStatement: floatSub(FF)I
   * 13 Weak Mutation 138: gnu.trove.impl.hash.THash.removeAt(I)V:266 - ReplaceConstant - 0.0 -> -1.0
   * 14 Weak Mutation 140: gnu.trove.impl.hash.THash.removeAt(I)V:266 - ReplaceComparisonOperator == -> >=
   * 15 Weak Mutation 135: gnu.trove.impl.hash.THash.removeAt(I)V:266 - InsertUnaryOp Negation
   * 16 Weak Mutation 143: gnu.trove.impl.hash.THash.removeAt(I)V:267 - InsertUnaryOp Negation
   * 17 Weak Mutation 144: gnu.trove.impl.hash.THash.removeAt(I)V:267 - InsertUnaryOp +1
   * 18 Weak Mutation 145: gnu.trove.impl.hash.THash.removeAt(I)V:267 - InsertUnaryOp -1
   * 19 Weak Mutation 146: gnu.trove.impl.hash.THash.removeAt(I)V:267 - DeleteField: _autoCompactRemovesRemainingI
   * 20 Weak Mutation 147: gnu.trove.impl.hash.THash.removeAt(I)V:267 - ReplaceConstant - 1 -> 0
   * 21 Weak Mutation 148: gnu.trove.impl.hash.THash.removeAt(I)V:267 - ReplaceArithmeticOperator - -> +
   * 22 Weak Mutation 149: gnu.trove.impl.hash.THash.removeAt(I)V:267 - ReplaceArithmeticOperator - -> %
   * 23 Weak Mutation 150: gnu.trove.impl.hash.THash.removeAt(I)V:267 - ReplaceArithmeticOperator - -> /
   * 24 Weak Mutation 151: gnu.trove.impl.hash.THash.removeAt(I)V:267 - ReplaceArithmeticOperator - -> *
   * 25 Weak Mutation 152: gnu.trove.impl.hash.THash.removeAt(I)V:269 - InsertUnaryOp Negation
   * 26 Weak Mutation 154: gnu.trove.impl.hash.THash.removeAt(I)V:269 - ReplaceComparisonOperator != -> ==
   * 27 Weak Mutation 155: gnu.trove.impl.hash.THash.removeAt(I)V:269 - InsertUnaryOp Negation
   * 28 Weak Mutation 156: gnu.trove.impl.hash.THash.removeAt(I)V:269 - InsertUnaryOp +1
   * 29 Weak Mutation 157: gnu.trove.impl.hash.THash.removeAt(I)V:269 - InsertUnaryOp -1
   * 30 Weak Mutation 158: gnu.trove.impl.hash.THash.removeAt(I)V:269 - DeleteField: _autoCompactRemovesRemainingI
   * 31 Weak Mutation 161: gnu.trove.impl.hash.THash.removeAt(I)V:269 - ReplaceComparisonOperator > -> -2
   * 32 Weak Mutation 274: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - DeleteField: _sizeI
   * 33 gnu.trove.impl.hash.THash.removeAt(I)V: I14 Branch 5 IFEQ L266 - false
   * 34 gnu.trove.impl.hash.THash.removeAt(I)V: I27 Branch 6 IFNE L269 - false
   * 35 gnu.trove.impl.hash.THash.removeAt(I)V: I30 Branch 7 IFGT L269 - true
   * 36 Weak Mutation 127: gnu.trove.impl.hash.THash.removeAt(I)V:263 - InsertUnaryOp +1
   * 37 Weak Mutation 126: gnu.trove.impl.hash.THash.removeAt(I)V:263 - InsertUnaryOp Negation
   * 38 Weak Mutation 137: gnu.trove.impl.hash.THash.removeAt(I)V:266 - ReplaceConstant - 0.0 -> 1.0
   * 39 Weak Mutation 136: gnu.trove.impl.hash.THash.removeAt(I)V:266 - DeleteField: _autoCompactionFactorF
   * 40 Weak Mutation 139: gnu.trove.impl.hash.THash.removeAt(I)V:266 - DeleteStatement: floatSub(FF)I
   * 41 Weak Mutation 138: gnu.trove.impl.hash.THash.removeAt(I)V:266 - ReplaceConstant - 0.0 -> -1.0
   * 42 Weak Mutation 140: gnu.trove.impl.hash.THash.removeAt(I)V:266 - ReplaceComparisonOperator == -> >=
   * 43 Weak Mutation 143: gnu.trove.impl.hash.THash.removeAt(I)V:267 - InsertUnaryOp Negation
   * 44 Weak Mutation 129: gnu.trove.impl.hash.THash.removeAt(I)V:263 - DeleteField: _sizeI
   * 45 Weak Mutation 128: gnu.trove.impl.hash.THash.removeAt(I)V:263 - InsertUnaryOp -1
   * 46 Weak Mutation 131: gnu.trove.impl.hash.THash.removeAt(I)V:263 - ReplaceArithmeticOperator - -> +
   * 47 Weak Mutation 130: gnu.trove.impl.hash.THash.removeAt(I)V:263 - ReplaceConstant - 1 -> 0
   * 48 Weak Mutation 133: gnu.trove.impl.hash.THash.removeAt(I)V:263 - ReplaceArithmeticOperator - -> /
   * 49 Weak Mutation 132: gnu.trove.impl.hash.THash.removeAt(I)V:263 - ReplaceArithmeticOperator - -> %
   * 50 Weak Mutation 135: gnu.trove.impl.hash.THash.removeAt(I)V:266 - InsertUnaryOp Negation
   * 51 Weak Mutation 134: gnu.trove.impl.hash.THash.removeAt(I)V:263 - ReplaceArithmeticOperator - -> *
   * 52 Weak Mutation 152: gnu.trove.impl.hash.THash.removeAt(I)V:269 - InsertUnaryOp Negation
   * 53 Weak Mutation 154: gnu.trove.impl.hash.THash.removeAt(I)V:269 - ReplaceComparisonOperator != -> ==
   * 54 Weak Mutation 155: gnu.trove.impl.hash.THash.removeAt(I)V:269 - InsertUnaryOp Negation
   * 55 Weak Mutation 156: gnu.trove.impl.hash.THash.removeAt(I)V:269 - InsertUnaryOp +1
   * 56 Weak Mutation 157: gnu.trove.impl.hash.THash.removeAt(I)V:269 - InsertUnaryOp -1
   * 57 Weak Mutation 158: gnu.trove.impl.hash.THash.removeAt(I)V:269 - DeleteField: _autoCompactRemovesRemainingI
   * 58 Weak Mutation 144: gnu.trove.impl.hash.THash.removeAt(I)V:267 - InsertUnaryOp +1
   * 59 Weak Mutation 145: gnu.trove.impl.hash.THash.removeAt(I)V:267 - InsertUnaryOp -1
   * 60 Weak Mutation 146: gnu.trove.impl.hash.THash.removeAt(I)V:267 - DeleteField: _autoCompactRemovesRemainingI
   * 61 Weak Mutation 147: gnu.trove.impl.hash.THash.removeAt(I)V:267 - ReplaceConstant - 1 -> 0
   * 62 Weak Mutation 148: gnu.trove.impl.hash.THash.removeAt(I)V:267 - ReplaceArithmeticOperator - -> +
   * 63 Weak Mutation 149: gnu.trove.impl.hash.THash.removeAt(I)V:267 - ReplaceArithmeticOperator - -> %
   * 64 Weak Mutation 150: gnu.trove.impl.hash.THash.removeAt(I)V:267 - ReplaceArithmeticOperator - -> /
   * 65 Weak Mutation 151: gnu.trove.impl.hash.THash.removeAt(I)V:267 - ReplaceArithmeticOperator - -> *
   * 66 Weak Mutation 161: gnu.trove.impl.hash.THash.removeAt(I)V:269 - ReplaceComparisonOperator > -> -2
   * 67 Weak Mutation 274: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - DeleteField: _sizeI
   */

  @Test
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[16];
      intArray0[5] = 835;
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap(intArray0, intArray0);
      tIntIntHashMap0.remove(835);
      assertEquals(1, tIntIntHashMap0.size());
      assertEquals(false, tIntIntHashMap0.isEmpty());
  }

  //Test case number: 13
  /*
   * 9 covered goals:
   * 1 Weak Mutation 153: gnu.trove.impl.hash.THash.removeAt(I)V:269 - DeleteField: _autoCompactTemporaryDisableZ
   * 2 Weak Mutation 183: gnu.trove.impl.hash.THash.tempDisableAutoCompaction()V:316 - ReplaceConstant - 1 -> 0
   * 3 gnu.trove.impl.hash.THash.tempDisableAutoCompaction()V: root-Branch
   * 4 gnu.trove.impl.hash.THash.<init>(I)V: root-Branch
   * 5 gnu.trove.impl.hash.THash.removeAt(I)V: I27 Branch 6 IFNE L269 - true
   * 6 gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V: I8 Branch 8 IFEQ L331 - true
   * 7 Weak Mutation 149: gnu.trove.impl.hash.THash.removeAt(I)V:267 - ReplaceArithmeticOperator - -> %
   * 8 Weak Mutation 153: gnu.trove.impl.hash.THash.removeAt(I)V:269 - DeleteField: _autoCompactTemporaryDisableZ
   * 9 Weak Mutation 183: gnu.trove.impl.hash.THash.tempDisableAutoCompaction()V:316 - ReplaceConstant - 1 -> 0
   */

  @Test
  public void test13()  throws Throwable  {
      short[] shortArray0 = new short[5];
      TShortHashSet tShortHashSet0 = new TShortHashSet(shortArray0);
      TLinkedHashSet<Integer> tLinkedHashSet0 = new TLinkedHashSet<Integer>((int) (short)8);
      tShortHashSet0.retainAll((Collection<?>) tLinkedHashSet0);
      assertEquals("{}", tShortHashSet0.toString());
      assertEquals(true, tShortHashSet0.isEmpty());
  }

  //Test case number: 14
  /*
   * 35 covered goals:
   * 1 Weak Mutation 160: gnu.trove.impl.hash.THash.removeAt(I)V:269 - ReplaceComparisonOperator > -> >=
   * 2 Weak Mutation 162: gnu.trove.impl.hash.THash.removeAt(I)V:272 - DeleteStatement: compact()V
   * 3 gnu.trove.impl.hash.THash.removeAt(I)V: I30 Branch 7 IFGT L269 - false
   * 4 Weak Mutation 127: gnu.trove.impl.hash.THash.removeAt(I)V:263 - InsertUnaryOp +1
   * 5 Weak Mutation 126: gnu.trove.impl.hash.THash.removeAt(I)V:263 - InsertUnaryOp Negation
   * 6 Weak Mutation 137: gnu.trove.impl.hash.THash.removeAt(I)V:266 - ReplaceConstant - 0.0 -> 1.0
   * 7 Weak Mutation 136: gnu.trove.impl.hash.THash.removeAt(I)V:266 - DeleteField: _autoCompactionFactorF
   * 8 Weak Mutation 139: gnu.trove.impl.hash.THash.removeAt(I)V:266 - DeleteStatement: floatSub(FF)I
   * 9 Weak Mutation 138: gnu.trove.impl.hash.THash.removeAt(I)V:266 - ReplaceConstant - 0.0 -> -1.0
   * 10 Weak Mutation 140: gnu.trove.impl.hash.THash.removeAt(I)V:266 - ReplaceComparisonOperator == -> >=
   * 11 Weak Mutation 143: gnu.trove.impl.hash.THash.removeAt(I)V:267 - InsertUnaryOp Negation
   * 12 Weak Mutation 129: gnu.trove.impl.hash.THash.removeAt(I)V:263 - DeleteField: _sizeI
   * 13 Weak Mutation 128: gnu.trove.impl.hash.THash.removeAt(I)V:263 - InsertUnaryOp -1
   * 14 Weak Mutation 131: gnu.trove.impl.hash.THash.removeAt(I)V:263 - ReplaceArithmeticOperator - -> +
   * 15 Weak Mutation 130: gnu.trove.impl.hash.THash.removeAt(I)V:263 - ReplaceConstant - 1 -> 0
   * 16 Weak Mutation 133: gnu.trove.impl.hash.THash.removeAt(I)V:263 - ReplaceArithmeticOperator - -> /
   * 17 Weak Mutation 132: gnu.trove.impl.hash.THash.removeAt(I)V:263 - ReplaceArithmeticOperator - -> %
   * 18 Weak Mutation 135: gnu.trove.impl.hash.THash.removeAt(I)V:266 - InsertUnaryOp Negation
   * 19 Weak Mutation 134: gnu.trove.impl.hash.THash.removeAt(I)V:263 - ReplaceArithmeticOperator - -> *
   * 20 Weak Mutation 152: gnu.trove.impl.hash.THash.removeAt(I)V:269 - InsertUnaryOp Negation
   * 21 Weak Mutation 154: gnu.trove.impl.hash.THash.removeAt(I)V:269 - ReplaceComparisonOperator != -> ==
   * 22 Weak Mutation 155: gnu.trove.impl.hash.THash.removeAt(I)V:269 - InsertUnaryOp Negation
   * 23 Weak Mutation 156: gnu.trove.impl.hash.THash.removeAt(I)V:269 - InsertUnaryOp +1
   * 24 Weak Mutation 157: gnu.trove.impl.hash.THash.removeAt(I)V:269 - InsertUnaryOp -1
   * 25 Weak Mutation 144: gnu.trove.impl.hash.THash.removeAt(I)V:267 - InsertUnaryOp +1
   * 26 Weak Mutation 145: gnu.trove.impl.hash.THash.removeAt(I)V:267 - InsertUnaryOp -1
   * 27 Weak Mutation 146: gnu.trove.impl.hash.THash.removeAt(I)V:267 - DeleteField: _autoCompactRemovesRemainingI
   * 28 Weak Mutation 147: gnu.trove.impl.hash.THash.removeAt(I)V:267 - ReplaceConstant - 1 -> 0
   * 29 Weak Mutation 148: gnu.trove.impl.hash.THash.removeAt(I)V:267 - ReplaceArithmeticOperator - -> +
   * 30 Weak Mutation 150: gnu.trove.impl.hash.THash.removeAt(I)V:267 - ReplaceArithmeticOperator - -> /
   * 31 Weak Mutation 151: gnu.trove.impl.hash.THash.removeAt(I)V:267 - ReplaceArithmeticOperator - -> *
   * 32 Weak Mutation 76: gnu.trove.impl.hash.THash.compact()V:201 - DeleteField: _sizeI
   * 33 Weak Mutation 87: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator / -> %
   * 34 Weak Mutation 162: gnu.trove.impl.hash.THash.removeAt(I)V:272 - DeleteStatement: compact()V
   * 35 Weak Mutation 160: gnu.trove.impl.hash.THash.removeAt(I)V:269 - ReplaceComparisonOperator > -> >=
   */

  @Test
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[16];
      intArray0[5] = 835;
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap(intArray0, intArray0);
      tIntIntHashMap0.compact();
      tIntIntHashMap0.remove(835);
      assertEquals(3, tIntIntHashMap0.capacity());
      assertEquals(1, tIntIntHashMap0.size());
  }

  //Test case number: 15
  /*
   * 5 covered goals:
   * 1 Weak Mutation 163: gnu.trove.impl.hash.THash.clear()V:280 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 164: gnu.trove.impl.hash.THash.clear()V:281 - DeleteStatement: capacity()I
   * 3 gnu.trove.impl.hash.THash.clear()V: root-Branch
   * 4 Weak Mutation 163: gnu.trove.impl.hash.THash.clear()V:280 - ReplaceConstant - 0 -> 1
   * 5 Weak Mutation 164: gnu.trove.impl.hash.THash.clear()V:281 - DeleteStatement: capacity()I
   */

//   @Test
//   public void test15()  throws Throwable  {
//       TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>((-1628), (-1628));
//       tIntObjectHashMap0.clear();
//       assertEquals(0.5F, tIntObjectHashMap0.getAutoCompactionFactor(), 0.01F);
//       assertEquals(3, tIntObjectHashMap0.capacity());
//       assertEquals(true, tIntObjectHashMap0.isEmpty());
//   }

  //Test case number: 16
  /*
   * 10 covered goals:
   * 1 Weak Mutation 201: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - ReplaceComparisonOperator == -> -2
   * 2 Weak Mutation 192: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - ReplaceComparisonOperator > -> >=
   * 3 gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V: I16 Branch 10 IFEQ L331 - true
   * 4 Weak Mutation 197: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - ReplaceConstant - 0.0 -> -1.0
   * 5 Weak Mutation 196: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - ReplaceConstant - 0.0 -> 1.0
   * 6 Weak Mutation 198: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - DeleteStatement: floatSub(FF)I
   * 7 Weak Mutation 194: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - InsertUnaryOp Negation
   * 8 Weak Mutation 239: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:361 - ReplaceComparisonOperator == -> -2
   * 9 Weak Mutation 201: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - ReplaceComparisonOperator == -> -2
   * 10 Weak Mutation 192: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - ReplaceComparisonOperator > -> >=
   */

//   @Test
//   public void test16()  throws Throwable  {
//       TObjectDoubleHashMap<String> tObjectDoubleHashMap0 = new TObjectDoubleHashMap<String>((int) (short)1605, (float) 0, (double) (short)1605);
//       tObjectDoubleHashMap0.reenableAutoCompaction(true);
//       assertEquals(0.0F, tObjectDoubleHashMap0.getAutoCompactionFactor(), 0.01F);
//       assertEquals(3, tObjectDoubleHashMap0.capacity());
//   }

  //Test case number: 17
  /*
   * 10 covered goals:
   * 1 Weak Mutation 193: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - ReplaceComparisonOperator > -> -2
   * 2 gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V: I11 Branch 9 IFGT L331 - true
   * 3 Weak Mutation 186: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - ReplaceComparisonOperator == -> !=
   * 4 Weak Mutation 187: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - InsertUnaryOp Negation
   * 5 Weak Mutation 184: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:329 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 185: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - InsertUnaryOp Negation of check_for_compaction
   * 7 Weak Mutation 190: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - DeleteField: _autoCompactRemovesRemainingI
   * 8 Weak Mutation 188: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - InsertUnaryOp +1
   * 9 Weak Mutation 189: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - InsertUnaryOp -1
   * 10 Weak Mutation 193: gnu.trove.impl.hash.THash.reenableAutoCompaction(Z)V:331 - ReplaceComparisonOperator > -> -2
   */

  @Test
  public void test17()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap((-327));
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(tDoubleFloatHashMap0._set, tDoubleFloatHashMap0._set);
      tDoubleDoubleHashMap0.reenableAutoCompaction(true);
      assertEquals(1, tDoubleDoubleHashMap0.size());
      assertEquals(7, tDoubleDoubleHashMap0.capacity());
      assertEquals(false, tDoubleDoubleHashMap0.isEmpty());
  }

  //Test case number: 18
  /*
   * 118 covered goals:
   * 1 Weak Mutation 301: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - DeleteField: _maxSizeI
   * 2 Weak Mutation 23: gnu.trove.impl.hash.THash.size()I:157 - InsertUnaryOp Negation
   * 3 Weak Mutation 25: gnu.trove.impl.hash.THash.size()I:157 - InsertUnaryOp -1
   * 4 Weak Mutation 24: gnu.trove.impl.hash.THash.size()I:157 - InsertUnaryOp +1
   * 5 Weak Mutation 26: gnu.trove.impl.hash.THash.size()I:157 - DeleteField: _sizeI
   * 6 Weak Mutation 76: gnu.trove.impl.hash.THash.compact()V:201 - DeleteField: _sizeI
   * 7 Weak Mutation 77: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceConstant - 1 -> 0
   * 8 Weak Mutation 78: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> -
   * 9 Weak Mutation 79: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> %
   * 10 Weak Mutation 73: gnu.trove.impl.hash.THash.compact()V:201 - InsertUnaryOp Negation
   * 11 Weak Mutation 74: gnu.trove.impl.hash.THash.compact()V:201 - InsertUnaryOp +1
   * 12 Weak Mutation 75: gnu.trove.impl.hash.THash.compact()V:201 - InsertUnaryOp -1
   * 13 Weak Mutation 85: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator / -> -
   * 14 Weak Mutation 84: gnu.trove.impl.hash.THash.compact()V:201 - DeleteField: _loadFactorF
   * 15 Weak Mutation 87: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator / -> %
   * 16 Weak Mutation 86: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator / -> +
   * 17 Weak Mutation 81: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> *
   * 18 Weak Mutation 80: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> /
   * 19 Weak Mutation 83: gnu.trove.impl.hash.THash.compact()V:201 - InsertUnaryOp Negation
   * 20 Weak Mutation 82: gnu.trove.impl.hash.THash.compact()V:201 - DeleteStatement: size()I
   * 21 Weak Mutation 93: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> /
   * 22 Weak Mutation 92: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> %
   * 23 Weak Mutation 95: gnu.trove.impl.hash.THash.compact()V:201 - DeleteStatement: max(II)I
   * 24 Weak Mutation 94: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> *
   * 25 Weak Mutation 89: gnu.trove.impl.hash.THash.compact()V:201 - DeleteStatement: fastCeil(F)I
   * 26 Weak Mutation 88: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator / -> *
   * 27 Weak Mutation 91: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceArithmeticOperator + -> -
   * 28 Weak Mutation 90: gnu.trove.impl.hash.THash.compact()V:201 - ReplaceConstant - 1 -> 0
   * 29 Weak Mutation 102: gnu.trove.impl.hash.THash.compact()V:206 - ReplaceConstant - 0.0 -> 1.0
   * 30 Weak Mutation 103: gnu.trove.impl.hash.THash.compact()V:206 - ReplaceConstant - 0.0 -> -1.0
   * 31 Weak Mutation 100: gnu.trove.impl.hash.THash.compact()V:206 - InsertUnaryOp Negation
   * 32 Weak Mutation 101: gnu.trove.impl.hash.THash.compact()V:206 - DeleteField: _autoCompactionFactorF
   * 33 Weak Mutation 98: gnu.trove.impl.hash.THash.compact()V:203 - DeleteStatement: capacity()I
   * 34 Weak Mutation 99: gnu.trove.impl.hash.THash.compact()V:203 - DeleteStatement: computeMaxSize(I)V
   * 35 Weak Mutation 96: gnu.trove.impl.hash.THash.compact()V:201 - DeleteStatement: nextPrime(I)I
   * 36 Weak Mutation 97: gnu.trove.impl.hash.THash.compact()V:201 - DeleteStatement: rehash(I)V
   * 37 Weak Mutation 108: gnu.trove.impl.hash.THash.compact()V:207 - DeleteStatement: size()I
   * 38 Weak Mutation 109: gnu.trove.impl.hash.THash.compact()V:207 - DeleteStatement: computeNextAutoCompactionAmount(I)V
   * 39 Weak Mutation 104: gnu.trove.impl.hash.THash.compact()V:206 - DeleteStatement: floatSub(FF)I
   * 40 Weak Mutation 105: gnu.trove.impl.hash.THash.compact()V:206 - ReplaceComparisonOperator == -> >=
   * 41 Weak Mutation 231: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - ReplaceArithmeticOperator - -> *
   * 42 Weak Mutation 228: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - ReplaceArithmeticOperator - -> +
   * 43 Weak Mutation 227: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - DeleteField: _sizeI
   * 44 Weak Mutation 275: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceConstant - 1 -> 0
   * 45 Weak Mutation 274: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - DeleteField: _sizeI
   * 46 Weak Mutation 273: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp -1
   * 47 Weak Mutation 272: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp +1
   * 48 Weak Mutation 279: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceArithmeticOperator + -> *
   * 49 Weak Mutation 278: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceArithmeticOperator + -> /
   * 50 Weak Mutation 277: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceArithmeticOperator + -> %
   * 51 Weak Mutation 276: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceArithmeticOperator + -> -
   * 52 Weak Mutation 283: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - DeleteField: _maxSizeI
   * 53 Weak Mutation 282: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp -1
   * 54 Weak Mutation 281: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp +1
   * 55 Weak Mutation 280: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp Negation
   * 56 Weak Mutation 287: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp Negation
   * 57 Weak Mutation 286: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceComparisonOperator > -> -2
   * 58 Weak Mutation 285: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceComparisonOperator > -> !=
   * 59 Weak Mutation 258: gnu.trove.impl.hash.THash.postInsertHook(Z)V:377 - InsertUnaryOp Negation of usedFreeSlot
   * 60 Weak Mutation 259: gnu.trove.impl.hash.THash.postInsertHook(Z)V:377 - InsertUnaryOp IINC 1 usedFreeSlot
   * 61 Weak Mutation 262: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - InsertUnaryOp Negation
   * 62 Weak Mutation 263: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - InsertUnaryOp +1
   * 63 Weak Mutation 260: gnu.trove.impl.hash.THash.postInsertHook(Z)V:377 - InsertUnaryOp IINC -1 usedFreeSlot
   * 64 Weak Mutation 261: gnu.trove.impl.hash.THash.postInsertHook(Z)V:377 - ReplaceComparisonOperator == -> !=
   * 65 Weak Mutation 266: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - ReplaceConstant - 1 -> 0
   * 66 Weak Mutation 267: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - ReplaceArithmeticOperator - -> +
   * 67 Weak Mutation 264: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - InsertUnaryOp -1
   * 68 Weak Mutation 265: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - DeleteField: _freeI
   * 69 Weak Mutation 270: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - ReplaceArithmeticOperator - -> *
   * 70 Weak Mutation 271: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp Negation
   * 71 Weak Mutation 268: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - ReplaceArithmeticOperator - -> %
   * 72 Weak Mutation 269: gnu.trove.impl.hash.THash.postInsertHook(Z)V:378 - ReplaceArithmeticOperator - -> /
   * 73 Weak Mutation 305: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - DeleteStatement: capacity()I
   * 74 Weak Mutation 304: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - ReplaceComparisonOperator <= -> -1
   * 75 Weak Mutation 307: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - ReplaceBitwiseOperator << -> >>>
   * 76 Weak Mutation 306: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - ReplaceConstant - 1 -> 0
   * 77 Weak Mutation 309: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - DeleteStatement: nextPrime(I)I
   * 78 Weak Mutation 308: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - ReplaceBitwiseOperator << -> >>
   * 79 Weak Mutation 311: gnu.trove.impl.hash.THash.postInsertHook(Z)V:388 - InsertUnaryOp Negation of newCapacity
   * 80 Weak Mutation 313: gnu.trove.impl.hash.THash.postInsertHook(Z)V:388 - InsertUnaryOp IINC -1 newCapacity
   * 81 Weak Mutation 312: gnu.trove.impl.hash.THash.postInsertHook(Z)V:388 - InsertUnaryOp IINC 1 newCapacity
   * 82 Weak Mutation 315: gnu.trove.impl.hash.THash.postInsertHook(Z)V:389 - DeleteStatement: capacity()I
   * 83 Weak Mutation 314: gnu.trove.impl.hash.THash.postInsertHook(Z)V:388 - DeleteStatement: rehash(I)V
   * 84 Weak Mutation 316: gnu.trove.impl.hash.THash.postInsertHook(Z)V:389 - DeleteStatement: computeMaxSize(I)V
   * 85 Weak Mutation 288: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp +1
   * 86 Weak Mutation 289: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - InsertUnaryOp -1
   * 87 Weak Mutation 290: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - DeleteField: _freeI
   * 88 Weak Mutation 291: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceComparisonOperator != -> <
   * 89 Weak Mutation 294: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - InsertUnaryOp Negation
   * 90 Weak Mutation 295: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - InsertUnaryOp +1
   * 91 Weak Mutation 296: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - InsertUnaryOp -1
   * 92 Weak Mutation 297: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - DeleteField: _sizeI
   * 93 Weak Mutation 298: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - InsertUnaryOp Negation
   * 94 Weak Mutation 299: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - InsertUnaryOp +1
   * 95 Weak Mutation 300: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - InsertUnaryOp -1
   * 96 Weak Mutation 286: gnu.trove.impl.hash.THash.postInsertHook(Z)V:382 - ReplaceComparisonOperator > -> -2
   * 97 Weak Mutation 305: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - DeleteStatement: capacity()I
   * 98 Weak Mutation 304: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - ReplaceComparisonOperator <= -> -1
   * 99 Weak Mutation 307: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - ReplaceBitwiseOperator << -> >>>
   * 100 Weak Mutation 306: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - ReplaceConstant - 1 -> 0
   * 101 Weak Mutation 309: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - DeleteStatement: nextPrime(I)I
   * 102 Weak Mutation 308: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - ReplaceBitwiseOperator << -> >>
   * 103 Weak Mutation 311: gnu.trove.impl.hash.THash.postInsertHook(Z)V:388 - InsertUnaryOp Negation of newCapacity
   * 104 Weak Mutation 313: gnu.trove.impl.hash.THash.postInsertHook(Z)V:388 - InsertUnaryOp IINC -1 newCapacity
   * 105 Weak Mutation 312: gnu.trove.impl.hash.THash.postInsertHook(Z)V:388 - InsertUnaryOp IINC 1 newCapacity
   * 106 Weak Mutation 315: gnu.trove.impl.hash.THash.postInsertHook(Z)V:389 - DeleteStatement: capacity()I
   * 107 Weak Mutation 314: gnu.trove.impl.hash.THash.postInsertHook(Z)V:388 - DeleteStatement: rehash(I)V
   * 108 Weak Mutation 316: gnu.trove.impl.hash.THash.postInsertHook(Z)V:389 - DeleteStatement: computeMaxSize(I)V
   * 109 Weak Mutation 294: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - InsertUnaryOp Negation
   * 110 Weak Mutation 295: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - InsertUnaryOp +1
   * 111 Weak Mutation 296: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - InsertUnaryOp -1
   * 112 Weak Mutation 297: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - DeleteField: _sizeI
   * 113 Weak Mutation 298: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - InsertUnaryOp Negation
   * 114 Weak Mutation 299: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - InsertUnaryOp +1
   * 115 Weak Mutation 300: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - InsertUnaryOp -1
   * 116 Weak Mutation 301: gnu.trove.impl.hash.THash.postInsertHook(Z)V:387 - DeleteField: _maxSizeI
   * 117 gnu.trove.impl.hash.THash.postInsertHook(Z)V: I23 Branch 13 IF_ICMPGT L382 - true
   * 118 gnu.trove.impl.hash.THash.postInsertHook(Z)V: I33 Branch 15 IF_ICMPLE L387 - false
   */

  @Test
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[16];
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap(intArray0, intArray0);
      tIntIntHashMap0.compact();
      tIntIntHashMap0.putIfAbsent(835, 0);
      assertEquals(2, tIntIntHashMap0.size());
      assertEquals(7, tIntIntHashMap0.capacity());
  }

  //Test case number: 19
  /*
   * 98 covered goals:
   * 1 Weak Mutation 322: gnu.trove.impl.hash.THash.writeExternal(Ljava/io/ObjectOutput;)V:401 - DeleteStatement: writeByte(I)V
   * 2 Weak Mutation 321: gnu.trove.impl.hash.THash.writeExternal(Ljava/io/ObjectOutput;)V:401 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 324: gnu.trove.impl.hash.THash.writeExternal(Ljava/io/ObjectOutput;)V:404 - DeleteField: _loadFactorF
   * 4 Weak Mutation 325: gnu.trove.impl.hash.THash.writeExternal(Ljava/io/ObjectOutput;)V:404 - DeleteStatement: writeFloat(F)V
   * 5 Weak Mutation 323: gnu.trove.impl.hash.THash.writeExternal(Ljava/io/ObjectOutput;)V:404 - InsertUnaryOp Negation
   * 6 Weak Mutation 326: gnu.trove.impl.hash.THash.writeExternal(Ljava/io/ObjectOutput;)V:407 - InsertUnaryOp Negation
   * 7 Weak Mutation 327: gnu.trove.impl.hash.THash.writeExternal(Ljava/io/ObjectOutput;)V:407 - DeleteField: _autoCompactionFactorF
   * 8 Weak Mutation 328: gnu.trove.impl.hash.THash.writeExternal(Ljava/io/ObjectOutput;)V:407 - DeleteStatement: writeFloat(F)V
   * 9 gnu.trove.impl.hash.THash.writeExternal(Ljava/io/ObjectOutput;)V: root-Branch
   * 10 Weak Mutation 0: gnu.trove.impl.hash.THash.<init>(IF)V:96 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 1: gnu.trove.impl.hash.THash.<init>(IF)V:131 - InsertUnaryOp Negation of loadFactor
   * 12 Weak Mutation 2: gnu.trove.impl.hash.THash.<init>(IF)V:135 - InsertUnaryOp Negation of loadFactor
   * 13 Weak Mutation 3: gnu.trove.impl.hash.THash.<init>(IF)V:137 - InsertUnaryOp Negation of initialCapacity
   * 14 Weak Mutation 4: gnu.trove.impl.hash.THash.<init>(IF)V:137 - InsertUnaryOp IINC 1 initialCapacity
   * 15 Weak Mutation 5: gnu.trove.impl.hash.THash.<init>(IF)V:137 - InsertUnaryOp IINC -1 initialCapacity
   * 16 Weak Mutation 6: gnu.trove.impl.hash.THash.<init>(IF)V:137 - InsertUnaryOp Negation of loadFactor
   * 17 Weak Mutation 7: gnu.trove.impl.hash.THash.<init>(IF)V:137 - ReplaceArithmeticOperator / -> -
   * 18 Weak Mutation 8: gnu.trove.impl.hash.THash.<init>(IF)V:137 - ReplaceArithmeticOperator / -> +
   * 19 Weak Mutation 9: gnu.trove.impl.hash.THash.<init>(IF)V:137 - ReplaceArithmeticOperator / -> %
   * 20 Weak Mutation 10: gnu.trove.impl.hash.THash.<init>(IF)V:137 - ReplaceArithmeticOperator / -> *
   * 21 Weak Mutation 11: gnu.trove.impl.hash.THash.<init>(IF)V:137 - DeleteStatement: fastCeil(F)I
   * 22 Weak Mutation 12: gnu.trove.impl.hash.THash.<init>(IF)V:137 - DeleteStatement: setUp(I)I
   * 23 Weak Mutation 171: gnu.trove.impl.hash.THash.setUp(I)I:296 - InsertUnaryOp IINC 1 capacity
   * 24 Weak Mutation 170: gnu.trove.impl.hash.THash.setUp(I)I:296 - InsertUnaryOp Negation of capacity
   * 25 Weak Mutation 169: gnu.trove.impl.hash.THash.setUp(I)I:296 - ReplaceVariable capacity -> initialCapacity
   * 26 Weak Mutation 168: gnu.trove.impl.hash.THash.setUp(I)I:295 - DeleteStatement: nextPrime(I)I
   * 27 Weak Mutation 175: gnu.trove.impl.hash.THash.setUp(I)I:297 - InsertUnaryOp Negation of initialCapacity
   * 28 Weak Mutation 174: gnu.trove.impl.hash.THash.setUp(I)I:297 - ReplaceVariable initialCapacity -> capacity
   * 29 Weak Mutation 173: gnu.trove.impl.hash.THash.setUp(I)I:296 - DeleteStatement: computeMaxSize(I)V
   * 30 Weak Mutation 172: gnu.trove.impl.hash.THash.setUp(I)I:296 - InsertUnaryOp IINC -1 capacity
   * 31 Weak Mutation 167: gnu.trove.impl.hash.THash.setUp(I)I:295 - InsertUnaryOp IINC -1 initialCapacity
   * 32 Weak Mutation 166: gnu.trove.impl.hash.THash.setUp(I)I:295 - InsertUnaryOp IINC 1 initialCapacity
   * 33 Weak Mutation 165: gnu.trove.impl.hash.THash.setUp(I)I:295 - InsertUnaryOp Negation of initialCapacity
   * 34 Weak Mutation 178: gnu.trove.impl.hash.THash.setUp(I)I:297 - DeleteStatement: computeNextAutoCompactionAmount(I)V
   * 35 Weak Mutation 179: gnu.trove.impl.hash.THash.setUp(I)I:299 - ReplaceVariable capacity -> initialCapacity
   * 36 Weak Mutation 176: gnu.trove.impl.hash.THash.setUp(I)I:297 - InsertUnaryOp IINC 1 initialCapacity
   * 37 Weak Mutation 177: gnu.trove.impl.hash.THash.setUp(I)I:297 - InsertUnaryOp IINC -1 initialCapacity
   * 38 Weak Mutation 182: gnu.trove.impl.hash.THash.setUp(I)I:299 - InsertUnaryOp IINC -1 capacity
   * 39 Weak Mutation 180: gnu.trove.impl.hash.THash.setUp(I)I:299 - InsertUnaryOp Negation of capacity
   * 40 Weak Mutation 181: gnu.trove.impl.hash.THash.setUp(I)I:299 - InsertUnaryOp IINC 1 capacity
   * 41 Weak Mutation 205: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - InsertUnaryOp IINC -1 capacity
   * 42 Weak Mutation 204: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - InsertUnaryOp IINC 1 capacity
   * 43 Weak Mutation 207: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - ReplaceArithmeticOperator - -> +
   * 44 Weak Mutation 206: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - ReplaceConstant - 1 -> 0
   * 45 Weak Mutation 203: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - InsertUnaryOp Negation of capacity
   * 46 Weak Mutation 220: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - DeleteStatement: min(II)I
   * 47 Weak Mutation 221: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - InsertUnaryOp Negation of capacity
   * 48 Weak Mutation 222: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - InsertUnaryOp IINC 1 capacity
   * 49 Weak Mutation 223: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - InsertUnaryOp IINC -1 capacity
   * 50 Weak Mutation 216: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - ReplaceArithmeticOperator * -> -
   * 51 Weak Mutation 217: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - ReplaceArithmeticOperator * -> +
   * 52 Weak Mutation 218: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - ReplaceArithmeticOperator * -> %
   * 53 Weak Mutation 219: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - ReplaceArithmeticOperator * -> /
   * 54 Weak Mutation 212: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - InsertUnaryOp IINC 1 capacity
   * 55 Weak Mutation 213: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - InsertUnaryOp IINC -1 capacity
   * 56 Weak Mutation 214: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - InsertUnaryOp Negation
   * 57 Weak Mutation 215: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - DeleteField: _loadFactorF
   * 58 Weak Mutation 208: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - ReplaceArithmeticOperator - -> %
   * 59 Weak Mutation 209: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - ReplaceArithmeticOperator - -> /
   * 60 Weak Mutation 210: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - ReplaceArithmeticOperator - -> *
   * 61 Weak Mutation 211: gnu.trove.impl.hash.THash.computeMaxSize(I)V:349 - InsertUnaryOp Negation of capacity
   * 62 Weak Mutation 237: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:361 - ReplaceComparisonOperator == -> >=
   * 63 Weak Mutation 236: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:361 - DeleteStatement: floatSub(FF)I
   * 64 Weak Mutation 235: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:361 - ReplaceConstant - 0.0 -> -1.0
   * 65 Weak Mutation 234: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:361 - ReplaceConstant - 0.0 -> 1.0
   * 66 Weak Mutation 233: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:361 - DeleteField: _autoCompactionFactorF
   * 67 Weak Mutation 232: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:361 - InsertUnaryOp Negation
   * 68 Weak Mutation 230: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - ReplaceArithmeticOperator - -> /
   * 69 Weak Mutation 229: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - ReplaceArithmeticOperator - -> %
   * 70 Weak Mutation 226: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - InsertUnaryOp -1
   * 71 Weak Mutation 225: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - InsertUnaryOp +1
   * 72 Weak Mutation 224: gnu.trove.impl.hash.THash.computeMaxSize(I)V:350 - InsertUnaryOp Negation
   * 73 Weak Mutation 254: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceArithmeticOperator + -> -
   * 74 Weak Mutation 255: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceArithmeticOperator + -> %
   * 75 Weak Mutation 252: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceConstant - 0.5 -> -0.5
   * 76 Weak Mutation 253: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceConstant - 0.5 -> 1.5
   * 77 Weak Mutation 250: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceConstant - 0.5 -> 1.0
   * 78 Weak Mutation 251: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceConstant - 0.5 -> -1.0
   * 79 Weak Mutation 248: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceArithmeticOperator * -> /
   * 80 Weak Mutation 249: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceConstant - 0.5 -> 0.0
   * 81 Weak Mutation 246: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceArithmeticOperator * -> +
   * 82 Weak Mutation 247: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceArithmeticOperator * -> %
   * 83 Weak Mutation 244: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - DeleteField: _autoCompactionFactorF
   * 84 Weak Mutation 245: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceArithmeticOperator * -> -
   * 85 Weak Mutation 242: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - InsertUnaryOp IINC -1 size
   * 86 Weak Mutation 243: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - InsertUnaryOp Negation
   * 87 Weak Mutation 240: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - InsertUnaryOp Negation of size
   * 88 Weak Mutation 241: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - InsertUnaryOp IINC 1 size
   * 89 Weak Mutation 256: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceArithmeticOperator + -> /
   * 90 Weak Mutation 257: gnu.trove.impl.hash.THash.computeNextAutoCompactionAmount(I)V:364 - ReplaceArithmeticOperator + -> *
   * 91 Weak Mutation 326: gnu.trove.impl.hash.THash.writeExternal(Ljava/io/ObjectOutput;)V:407 - InsertUnaryOp Negation
   * 92 Weak Mutation 327: gnu.trove.impl.hash.THash.writeExternal(Ljava/io/ObjectOutput;)V:407 - DeleteField: _autoCompactionFactorF
   * 93 Weak Mutation 324: gnu.trove.impl.hash.THash.writeExternal(Ljava/io/ObjectOutput;)V:404 - DeleteField: _loadFactorF
   * 94 Weak Mutation 325: gnu.trove.impl.hash.THash.writeExternal(Ljava/io/ObjectOutput;)V:404 - DeleteStatement: writeFloat(F)V
   * 95 Weak Mutation 322: gnu.trove.impl.hash.THash.writeExternal(Ljava/io/ObjectOutput;)V:401 - DeleteStatement: writeByte(I)V
   * 96 Weak Mutation 323: gnu.trove.impl.hash.THash.writeExternal(Ljava/io/ObjectOutput;)V:404 - InsertUnaryOp Negation
   * 97 Weak Mutation 321: gnu.trove.impl.hash.THash.writeExternal(Ljava/io/ObjectOutput;)V:401 - ReplaceConstant - 0 -> 1
   * 98 Weak Mutation 328: gnu.trove.impl.hash.THash.writeExternal(Ljava/io/ObjectOutput;)V:407 - DeleteStatement: writeFloat(F)V
   */

  @Test
  public void test19()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Object> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 1120, (float) 1120, (long) 1120);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tObjectLongCustomHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(82, byteArrayOutputStream0.size());
      assertEquals(3, tObjectLongCustomHashMap0.capacity());
  }
}

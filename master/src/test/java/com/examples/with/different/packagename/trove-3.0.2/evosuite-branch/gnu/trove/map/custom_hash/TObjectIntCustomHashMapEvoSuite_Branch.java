/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.custom_hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TIntFunction;
import gnu.trove.impl.hash.TObjectHash;
import gnu.trove.map.TObjectIntMap;
import gnu.trove.map.custom_hash.TObjectIntCustomHashMap;
import gnu.trove.map.hash.TObjectIntHashMap;
import gnu.trove.procedure.TIntProcedure;
import gnu.trove.procedure.TObjectIntProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInput;
import java.io.ObjectInputStream;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TObjectIntCustomHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 17 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap$1.execute(Ljava/lang/Object;I)Z: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap$1.<init>(Lgnu/trove/map/custom_hash/TObjectIntCustomHashMap;)V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.put(Ljava/lang/Object;I)I: root-Branch
   * 5 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.getNoEntryValue()I: root-Branch
   * 6 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;I)V: root-Branch
   * 7 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.putAll(Lgnu/trove/map/TObjectIntMap;)V: root-Branch
   * 8 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.doPut(II)I: I12 Branch 21 IFGE L268 - false
   * 9 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.doPut(II)I: I41 Branch 22 IFEQ L276 - true
   * 10 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.adjustOrPutValue(Ljava/lang/Object;II)I: I9 Branch 41 IFGE L456 - true
   * 11 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.adjustOrPutValue(Ljava/lang/Object;II)I: I51 Branch 42 IFEQ L466 - false
   * 12 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z: I18 Branch 47 IFLE L518 - true
   * 13 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z: I18 Branch 47 IFLE L518 - false
   * 14 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - true
   * 15 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - false
   * 16 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z: I30 Branch 49 IF_ACMPEQ L519 - false
   * 17 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z: I39 Branch 50 IFNE L519 - true
   */

  @Test
  public void test0()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-1));
      tObjectIntCustomHashMap0.adjustOrPutValue((Integer) (-1), (-1), (-1));
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>((TObjectIntMap<? extends Integer>) tObjectIntCustomHashMap0);
      tObjectIntCustomHashMap0.putAll((TObjectIntMap<? extends Integer>) tObjectIntHashMap0);
      assertEquals(1, tObjectIntCustomHashMap0.size());
      assertEquals("{-1=-1}", tObjectIntCustomHashMap0.toString());
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap$TIntValueCollection.<init>(Lgnu/trove/map/custom_hash/TObjectIntCustomHashMap;)V: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.<init>()V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.valueCollection()Lgnu/trove/TIntCollection;: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TObjectIntCustomHashMap<Object> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Object>();
      tObjectIntCustomHashMap0.valueCollection();
      assertEquals(23, tObjectIntCustomHashMap0.capacity());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.containsKey(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>();
      // Undeclared exception!
      try {
        tObjectIntCustomHashMap0.containsKey((Object) "gnu.trove.no_entry.char");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>();
      String[] stringArray0 = new String[5];
      ToObjectArrayProceedure<String> toObjectArrayProceedure0 = new ToObjectArrayProceedure<String>(stringArray0);
      boolean boolean0 = tObjectIntCustomHashMap0.forEachKey((TObjectProcedure<? super String>) toObjectArrayProceedure0);
      assertEquals(23, tObjectIntCustomHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keySet()Ljava/util/Set;: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap$KeyView.<init>(Lgnu/trove/map/custom_hash/TObjectIntCustomHashMap;)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TObjectIntCustomHashMap<Object> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Object>();
      tObjectIntCustomHashMap0.keySet();
      assertEquals(23, tObjectIntCustomHashMap0.capacity());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.clear()V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TObjectIntCustomHashMap<Object> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Object>();
      tObjectIntCustomHashMap0.clear();
      assertEquals(23, tObjectIntCustomHashMap0.capacity());
      assertEquals("{}", tObjectIntCustomHashMap0.toString());
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.iterator()Lgnu/trove/iterator/TObjectIntIterator;: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap$TObjectIntHashIterator.<init>(Lgnu/trove/map/custom_hash/TObjectIntCustomHashMap;Lgnu/trove/map/custom_hash/TObjectIntCustomHashMap;)V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L588 - true
   * 4 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 59 IF_ICMPEQ L592 - true
   * 5 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 60 IFEQ L597 - true
   */

  @Test
  public void test6()  throws Throwable  {
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>();
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>();
      boolean boolean0 = tObjectIntCustomHashMap0.equals((Object) tObjectIntHashMap0);
      assertEquals(23, tObjectIntCustomHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.increment(Ljava/lang/Object;)Z: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.adjustValue(Ljava/lang/Object;I)Z: I9 Branch 40 IFGE L440 - false
   */

  @Test
  public void test7()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-1));
      boolean boolean0 = tObjectIntCustomHashMap0.increment((Integer) (-1));
      assertEquals(0, tObjectIntCustomHashMap0.getNoEntryValue());
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IF)V: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1231, (float) 1231);
      assertEquals(0, tObjectIntCustomHashMap0.getNoEntryValue());
  }

  //Test case number: 9
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFI)V: I24 Branch 8 IFEQ L134 - true
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectIntMap;)V: I14 Branch 9 IFEQ L151 - false
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectIntMap;)V: I42 Branch 10 IFEQ L157 - true
   * 4 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;)V: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      TObjectIntCustomHashMap<Object> tObjectIntCustomHashMap1 = new TObjectIntCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectIntMap<?>) tObjectIntCustomHashMap0);
      assertEquals(0, tObjectIntCustomHashMap1.getNoEntryValue());
      assertEquals(23, tObjectIntCustomHashMap1.capacity());
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectIntMap;)V: I14 Branch 9 IFEQ L151 - true
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFI)V: I24 Branch 8 IFEQ L134 - true
   */

  @Test
  public void test10()  throws Throwable  {
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>();
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (TObjectIntMap<? extends Integer>) tObjectIntHashMap0);
      assertEquals(0, tObjectIntCustomHashMap0.getNoEntryValue());
  }

  //Test case number: 11
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectIntMap;)V: I42 Branch 10 IFEQ L157 - false
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.getNoEntryValue()I: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectIntMap;)V: I14 Branch 9 IFEQ L151 - false
   * 4 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFI)V: I24 Branch 8 IFEQ L134 - false
   */

  @Test
  public void test11()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      IdentityHashingStrategy<Integer> identityHashingStrategy1 = new IdentityHashingStrategy<Integer>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1, (float) 1, 1);
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap1 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy1, (TObjectIntMap<? extends Integer>) tObjectIntCustomHashMap0);
      assertEquals(11, tObjectIntCustomHashMap1.capacity());
      assertEquals(0, tObjectIntCustomHashMap1.size());
      assertEquals(1, tObjectIntCustomHashMap1.getNoEntryValue());
  }

  //Test case number: 12
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - false
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.rehash(I)V: I63 Branch 13 IF_ACMPEQ L201 - false
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.rehash(I)V: I73 Branch 14 IFGE L203 - true
   * 4 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - true
   * 5 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - false
   * 6 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - true
   */

  @Test
  public void test12()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0);
      tObjectIntCustomHashMap0.adjustOrPutValue("$2dl", (-1), 1231);
      tObjectIntCustomHashMap0.ensureCapacity(1231);
      assertEquals(false, tObjectIntCustomHashMap0.isEmpty());
      assertEquals("{$2dl=1231}", tObjectIntCustomHashMap0.toString());
  }

  //Test case number: 13
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.rehash(I)V: I63 Branch 13 IF_ACMPEQ L201 - true
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.removeAt(I)V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - true
   * 4 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - false
   * 5 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - true
   * 6 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - false
   * 7 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.remove(Ljava/lang/Object;)I: I14 Branch 23 IFLT L287 - false
   * 8 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.doPut(II)I: I12 Branch 21 IFGE L268 - true
   * 9 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.doPut(II)I: I41 Branch 22 IFEQ L276 - false
   * 10 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.putIfAbsent(Ljava/lang/Object;I)I: I9 Branch 20 IFGE L259 - true
   */

  @Test
  public void test13()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Object> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      tObjectIntCustomHashMap0.trimToSize();
      tObjectIntCustomHashMap0.putIfAbsent((Object) identityHashingStrategy0, 684);
      int int0 = tObjectIntCustomHashMap0.remove((Object) identityHashingStrategy0);
      assertEquals(3, tObjectIntCustomHashMap0.capacity());
      assertEquals(684, int0);
  }

  //Test case number: 14
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.containsValue(I)Z: I25 Branch 16 IF_ACMPEQ L232 - false
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.containsValue(I)Z: I30 Branch 17 IF_ACMPEQ L232 - false
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.containsValue(I)Z: I35 Branch 18 IF_ICMPNE L232 - true
   * 4 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.containsValue(I)Z: I18 Branch 15 IFLE L231 - true
   * 5 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.containsValue(I)Z: I18 Branch 15 IFLE L231 - false
   * 6 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.containsValue(I)Z: I25 Branch 16 IF_ACMPEQ L232 - true
   */

  @Test
  public void test14()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0);
      tObjectIntCustomHashMap0.adjustOrPutValue("$2dl", (-1), 1231);
      boolean boolean0 = tObjectIntCustomHashMap0.containsValue(0);
      assertEquals(1, tObjectIntCustomHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 15
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.containsValue(I)Z: I30 Branch 17 IF_ACMPEQ L232 - true
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.containsValue(I)Z: I18 Branch 15 IFLE L231 - true
   */

  @Test
  public void test15()  throws Throwable  {
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) null);
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tObjectIntCustomHashMap0._set);
      Object object0 = TObjectHash.REMOVED;
      toObjectArrayProceedure0.execute(object0);
      boolean boolean0 = tObjectIntCustomHashMap0.containsValue(0);
      assertEquals(false, boolean0);
      assertEquals(23, tObjectIntCustomHashMap0.capacity());
  }

  //Test case number: 16
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.containsValue(I)Z: I35 Branch 18 IF_ICMPNE L232 - false
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.containsValue(I)Z: I18 Branch 15 IFLE L231 - false
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.containsValue(I)Z: I25 Branch 16 IF_ACMPEQ L232 - true
   * 4 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.containsValue(I)Z: I25 Branch 16 IF_ACMPEQ L232 - false
   * 5 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.containsValue(I)Z: I30 Branch 17 IF_ACMPEQ L232 - false
   */

  @Test
  public void test16()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0);
      tObjectIntCustomHashMap0.putIfAbsent((String) null, 0);
      boolean boolean0 = tObjectIntCustomHashMap0.containsValue(0);
      assertEquals("{null=0}", tObjectIntCustomHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.get(Ljava/lang/Object;)I: I9 Branch 19 IFGE L243 - true
   */

  @Test
  public void test17()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      tObjectIntCustomHashMap0.putIfAbsent((Integer) null, 1231);
      int int0 = tObjectIntCustomHashMap0.get((Object) null);
      assertEquals(false, tObjectIntCustomHashMap0.isEmpty());
      assertEquals(1231, int0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.get(Ljava/lang/Object;)I: I9 Branch 19 IFGE L243 - false
   */

  @Test
  public void test18()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0);
      int int0 = tObjectIntCustomHashMap0.get((Object) null);
      assertEquals(0, int0);
      assertEquals(23, tObjectIntCustomHashMap0.capacity());
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.putIfAbsent(Ljava/lang/Object;I)I: I9 Branch 20 IFGE L259 - false
   */

  @Test
  public void test19()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-1));
      tObjectIntCustomHashMap0.adjustOrPutValue((Integer) (-1), (-1), (-1));
      int int0 = tObjectIntCustomHashMap0.putIfAbsent((Integer) (-1), (-1));
      assertEquals(false, tObjectIntCustomHashMap0.isEmpty());
      assertEquals((-1), int0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.remove(Ljava/lang/Object;)I: I14 Branch 23 IFLT L287 - true
   */

  @Test
  public void test20()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1, (float) 1, 1);
      int int0 = tObjectIntCustomHashMap0.remove((Object) "KOR");
      assertEquals(1, int0);
      assertEquals(0, tObjectIntCustomHashMap0.size());
  }

  //Test case number: 21
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.putAll(Ljava/util/Map;)V: I13 Branch 24 IFEQ L313 - false
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.putAll(Ljava/util/Map;)V: I13 Branch 24 IFEQ L313 - true
   */

  @Test
  public void test21()  throws Throwable  {
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      hashMap0.put((Integer) 1231, (Integer) 0);
      tObjectIntCustomHashMap0.putAll((Map<? extends Integer, ? extends Integer>) hashMap0);
      assertEquals(false, tObjectIntCustomHashMap0.isEmpty());
      assertEquals("{1231=0}", tObjectIntCustomHashMap0.toString());
  }

  //Test case number: 22
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L348 - false
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keys()[Ljava/lang/Object;: I35 Branch 27 IF_ACMPEQ L348 - false
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L347 - true
   * 4 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L347 - false
   * 5 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L348 - true
   */

  @Test
  public void test22()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      tObjectIntCustomHashMap0.put((Integer) 909863950, 909863950);
      tObjectIntCustomHashMap0.keys();
      assertEquals(1, tObjectIntCustomHashMap0.size());
      assertEquals("{909863950=909863950}", tObjectIntCustomHashMap0.toString());
  }

  //Test case number: 23
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keys()[Ljava/lang/Object;: I35 Branch 27 IF_ACMPEQ L348 - true
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L347 - true
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L347 - false
   * 4 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L348 - true
   * 5 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L348 - false
   */

  @Test
  public void test23()  throws Throwable  {
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) null);
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tObjectIntCustomHashMap0._set);
      Object object0 = TObjectHash.REMOVED;
      toObjectArrayProceedure0.execute(object0);
      Object[] objectArray0 = tObjectIntCustomHashMap0.keys();
      assertEquals(23, tObjectIntCustomHashMap0.capacity());
      assertNotNull(objectArray0);
  }

  //Test case number: 24
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I10 Branch 28 IF_ICMPGE L360 - false
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L369 - false
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I49 Branch 31 IF_ACMPEQ L369 - false
   * 4 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L368 - true
   * 5 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L368 - false
   * 6 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L369 - true
   */

  @Test
  public void test24()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      Integer[] integerArray0 = new Integer[1];
      tObjectIntCustomHashMap0.put((Integer) 1231, (-1));
      tObjectIntCustomHashMap0.putIfAbsent((Integer) null, 0);
      tObjectIntCustomHashMap0.keys(integerArray0);
      assertEquals(2, tObjectIntCustomHashMap0.size());
      assertEquals("{1231=-1,null=0}", tObjectIntCustomHashMap0.toString());
  }

  //Test case number: 25
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I49 Branch 31 IF_ACMPEQ L369 - true
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I10 Branch 28 IF_ICMPGE L360 - true
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L368 - true
   * 4 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L368 - false
   * 5 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L369 - true
   * 6 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L369 - false
   */

  @Test
  public void test25()  throws Throwable  {
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) null);
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tObjectIntCustomHashMap0._set);
      Object object0 = TObjectHash.REMOVED;
      toObjectArrayProceedure0.execute(object0);
      Integer[] integerArray0 = new Integer[5];
      Integer[] integerArray1 = tObjectIntCustomHashMap0.keys(integerArray0);
      assertEquals(23, tObjectIntCustomHashMap0.capacity());
      assertNotNull(integerArray1);
      assertSame(integerArray0, integerArray1);
  }

  //Test case number: 26
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values()[I: I34 Branch 33 IF_ACMPEQ L391 - false
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values()[I: I39 Branch 34 IF_ACMPEQ L391 - false
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values()[I: I27 Branch 32 IFLE L390 - true
   * 4 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values()[I: I27 Branch 32 IFLE L390 - false
   * 5 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values()[I: I34 Branch 33 IF_ACMPEQ L391 - true
   */

  @Test
  public void test26()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      tObjectIntCustomHashMap0.put((Integer) 909863950, 909863950);
      tObjectIntCustomHashMap0.values();
      assertEquals("{909863950=909863950}", tObjectIntCustomHashMap0.toString());
      assertEquals(1, tObjectIntCustomHashMap0.size());
  }

  //Test case number: 27
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values([I)[I: I44 Branch 37 IF_ACMPEQ L410 - false
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values([I)[I: I49 Branch 38 IF_ACMPEQ L410 - false
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values([I)[I: I65 Branch 39 IF_ICMPLE L414 - false
   * 4 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values([I)[I: I10 Branch 35 IF_ICMPGE L402 - true
   * 5 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values([I)[I: I37 Branch 36 IFLE L409 - true
   * 6 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values([I)[I: I37 Branch 36 IFLE L409 - false
   * 7 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values([I)[I: I44 Branch 37 IF_ACMPEQ L410 - true
   */

  @Test
  public void test27()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      int[] intArray0 = new int[9];
      tObjectIntCustomHashMap0.put((Integer) 1231, (-1));
      tObjectIntCustomHashMap0.values(intArray0);
      assertEquals(false, tObjectIntCustomHashMap0.isEmpty());
      assertEquals("{1231=-1}", tObjectIntCustomHashMap0.toString());
  }

  //Test case number: 28
  /*
   * 12 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values([I)[I: I49 Branch 38 IF_ACMPEQ L410 - true
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values([I)[I: I65 Branch 39 IF_ICMPLE L414 - true
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values()[I: I27 Branch 32 IFLE L390 - true
   * 4 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values()[I: I27 Branch 32 IFLE L390 - false
   * 5 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values()[I: I34 Branch 33 IF_ACMPEQ L391 - true
   * 6 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values()[I: I34 Branch 33 IF_ACMPEQ L391 - false
   * 7 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values()[I: I39 Branch 34 IF_ACMPEQ L391 - true
   * 8 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values([I)[I: I10 Branch 35 IF_ICMPGE L402 - true
   * 9 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values([I)[I: I37 Branch 36 IFLE L409 - true
   * 10 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values([I)[I: I37 Branch 36 IFLE L409 - false
   * 11 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values([I)[I: I44 Branch 37 IF_ACMPEQ L410 - true
   * 12 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.values([I)[I: I44 Branch 37 IF_ACMPEQ L410 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) null);
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tObjectIntCustomHashMap0._set);
      Object object0 = TObjectHash.REMOVED;
      toObjectArrayProceedure0.execute(object0);
      int[] intArray0 = tObjectIntCustomHashMap0.values();
      assertNotNull(intArray0);
      
      int[] intArray1 = tObjectIntCustomHashMap0.values(intArray0);
      assertSame(intArray0, intArray1);
      assertNotNull(intArray1);
      assertEquals(23, tObjectIntCustomHashMap0.capacity());
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.adjustValue(Ljava/lang/Object;I)Z: I9 Branch 40 IFGE L440 - true
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.increment(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test29()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-1));
      tObjectIntCustomHashMap0.adjustOrPutValue((Integer) (-1), (-1), (-1));
      boolean boolean0 = tObjectIntCustomHashMap0.increment((Integer) (-1));
      assertEquals(1, tObjectIntCustomHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: I18 Branch 43 IFLE L496 - true
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: I18 Branch 43 IFLE L496 - false
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: I25 Branch 44 IF_ACMPEQ L497 - true
   */

  @Test
  public void test30()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      boolean boolean0 = tObjectIntCustomHashMap0.forEachValue((TIntProcedure) null);
      assertEquals(23, tObjectIntCustomHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 31
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z: I30 Branch 49 IF_ACMPEQ L519 - true
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.putAll(Lgnu/trove/map/TObjectIntMap;)V: root-Branch
   */

  @Test
  public void test31()  throws Throwable  {
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) null);
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tObjectIntCustomHashMap0._set);
      Object object0 = TObjectHash.REMOVED;
      toObjectArrayProceedure0.execute(object0);
      tObjectIntCustomHashMap0.putAll((TObjectIntMap<? extends Integer>) tObjectIntCustomHashMap0);
      assertEquals(23, tObjectIntCustomHashMap0.capacity());
  }

  //Test case number: 32
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectIntProcedure;)Z: I34 Branch 52 IF_ACMPEQ L546 - false
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectIntProcedure;)Z: I39 Branch 53 IF_ACMPEQ L546 - false
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectIntProcedure;)Z: I27 Branch 51 IFLE L545 - false
   * 4 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectIntProcedure;)Z: I34 Branch 52 IF_ACMPEQ L546 - true
   */

  @Test
  public void test32()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) null);
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tObjectIntCustomHashMap0._set);
      toObjectArrayProceedure0.execute((Object) identityHashingStrategy0);
      // Undeclared exception!
      try {
        tObjectIntCustomHashMap0.retainEntries((TObjectIntProcedure<? super Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 33
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectIntProcedure;)Z: I39 Branch 53 IF_ACMPEQ L546 - true
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectIntProcedure;)Z: I27 Branch 51 IFLE L545 - true
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectIntProcedure;)Z: I27 Branch 51 IFLE L545 - false
   * 4 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectIntProcedure;)Z: I34 Branch 52 IF_ACMPEQ L546 - true
   * 5 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectIntProcedure;)Z: I34 Branch 52 IF_ACMPEQ L546 - false
   */

  @Test
  public void test33()  throws Throwable  {
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) null);
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tObjectIntCustomHashMap0._set);
      Object object0 = TObjectHash.REMOVED;
      toObjectArrayProceedure0.execute(object0);
      boolean boolean0 = tObjectIntCustomHashMap0.retainEntries((TObjectIntProcedure<? super Integer>) null);
      assertEquals(false, boolean0);
      assertEquals(23, tObjectIntCustomHashMap0.capacity());
  }

  //Test case number: 34
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.transformValues(Lgnu/trove/function/TIntFunction;)V: I18 Branch 55 IFLE L570 - false
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.transformValues(Lgnu/trove/function/TIntFunction;)V: I24 Branch 56 IFNULL L571 - false
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.transformValues(Lgnu/trove/function/TIntFunction;)V: I29 Branch 57 IF_ACMPEQ L571 - false
   */

  @Test
  public void test34()  throws Throwable  {
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>();
      // Undeclared exception!
      try {
        tObjectIntCustomHashMap0.transformValues((TIntFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 35
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L588 - false
   */

  @Test
  public void test35()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      boolean boolean0 = tObjectIntCustomHashMap0.equals((Object) null);
      assertEquals(false, boolean0);
      assertEquals(23, tObjectIntCustomHashMap0.capacity());
  }

  //Test case number: 36
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 59 IF_ICMPEQ L592 - false
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.<init>()V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L588 - true
   */

  @Test
  public void test36()  throws Throwable  {
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>();
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>();
      tObjectIntHashMap0.adjustOrPutValue((Integer) 0, 0, 0);
      boolean boolean0 = tObjectIntCustomHashMap0.equals((Object) tObjectIntHashMap0);
      assertEquals(false, boolean0);
      assertEquals(23, tObjectIntCustomHashMap0.capacity());
  }

  //Test case number: 37
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L626 - false
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.hashCode()I: I34 Branch 67 IF_ACMPEQ L626 - false
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.hashCode()I: I45 Branch 68 IFNONNULL L627 - true
   * 4 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.adjustOrPutValue(Ljava/lang/Object;II)I: I9 Branch 41 IFGE L456 - true
   * 5 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.adjustOrPutValue(Ljava/lang/Object;II)I: I51 Branch 42 IFEQ L466 - false
   * 6 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.hashCode()I: I22 Branch 65 IFLE L625 - true
   * 7 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.hashCode()I: I22 Branch 65 IFLE L625 - false
   * 8 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L626 - true
   */

  @Test
  public void test37()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0);
      tObjectIntCustomHashMap0.adjustOrPutValue("$2dl", (-1), 1231);
      int int0 = tObjectIntCustomHashMap0.hashCode();
      assertEquals(false, tObjectIntCustomHashMap0.isEmpty());
      assertEquals(1122649, int0);
  }

  //Test case number: 38
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.hashCode()I: I34 Branch 67 IF_ACMPEQ L626 - true
   */

  @Test
  public void test38()  throws Throwable  {
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) null);
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tObjectIntCustomHashMap0._set);
      Object object0 = TObjectHash.REMOVED;
      toObjectArrayProceedure0.execute(object0);
      int int0 = tObjectIntCustomHashMap0.hashCode();
      assertEquals(23, tObjectIntCustomHashMap0.capacity());
      assertEquals(0, int0);
  }

  //Test case number: 39
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.hashCode()I: I45 Branch 68 IFNONNULL L627 - false
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.hashCode()I: I22 Branch 65 IFLE L625 - true
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.hashCode()I: I22 Branch 65 IFLE L625 - false
   * 4 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L626 - true
   * 5 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L626 - false
   * 6 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.hashCode()I: I34 Branch 67 IF_ACMPEQ L626 - false
   */

  @Test
  public void test39()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0);
      tObjectIntCustomHashMap0.putIfAbsent((String) null, 0);
      int int0 = tObjectIntCustomHashMap0.hashCode();
      assertEquals(1, tObjectIntCustomHashMap0.size());
      assertEquals(0, int0);
  }

  //Test case number: 40
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I51 Branch 71 IF_ACMPEQ L1108 - false
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 69 IFLE L1107 - true
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 69 IFLE L1107 - false
   * 4 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I45 Branch 70 IF_ACMPEQ L1108 - false
   * 5 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I51 Branch 71 IF_ACMPEQ L1108 - true
   */

  @Test
  public void test40()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) pipedOutputStream0);
      tObjectIntCustomHashMap0.putIfAbsent("NSARZw-eE>3\"hze'", (-1434));
      tObjectIntCustomHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
  }

  //Test case number: 41
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.readExternal(Ljava/io/ObjectInput;)V: I38 Branch 72 IFLE L1136 - true
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;I)V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 69 IFLE L1107 - true
   * 4 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 69 IFLE L1107 - false
   * 5 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I45 Branch 70 IF_ACMPEQ L1108 - false
   * 6 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I51 Branch 71 IF_ACMPEQ L1108 - true
   * 7 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFI)V: I24 Branch 8 IFEQ L134 - false
   */

  @Test
  public void test41()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) pipedOutputStream0);
      tObjectIntCustomHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      TObjectIntCustomHashMap<Object> tObjectIntCustomHashMap1 = new TObjectIntCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (-1434), (float) (-1434), (-1434));
      tObjectIntCustomHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      ObjectInputStream objectInputStream0 = new ObjectInputStream((InputStream) pipedInputStream0);
      tObjectIntCustomHashMap1.readExternal((ObjectInput) objectInputStream0);
  }

  //Test case number: 42
  /*
   * 17 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectIntCustomHashMap$2.execute(Ljava/lang/Object;I)Z: I4 Branch 102 IFEQ L1151 - true
   * 2 gnu.trove.map.custom_hash.TObjectIntCustomHashMap$2.execute(Ljava/lang/Object;I)Z: I4 Branch 102 IFEQ L1151 - false
   * 3 gnu.trove.map.custom_hash.TObjectIntCustomHashMap$1.<init>(Lgnu/trove/map/custom_hash/TObjectIntCustomHashMap;)V: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectIntCustomHashMap$2.<init>(Lgnu/trove/map/custom_hash/TObjectIntCustomHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 5 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.setUp(I)I: root-Branch
   * 6 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.put(Ljava/lang/Object;I)I: root-Branch
   * 7 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.toString()Ljava/lang/String;: root-Branch
   * 8 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;)V: root-Branch
   * 9 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.doPut(II)I: I12 Branch 21 IFGE L268 - true
   * 10 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.doPut(II)I: I41 Branch 22 IFEQ L276 - false
   * 11 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z: I18 Branch 47 IFLE L518 - true
   * 12 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z: I18 Branch 47 IFLE L518 - false
   * 13 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - true
   * 14 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - false
   * 15 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z: I30 Branch 49 IF_ACMPEQ L519 - false
   * 16 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z: I39 Branch 50 IFNE L519 - true
   * 17 gnu.trove.map.custom_hash.TObjectIntCustomHashMap.putIfAbsent(Ljava/lang/Object;I)I: I9 Branch 20 IFGE L259 - true
   */

  @Test
  public void test42()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      tObjectIntCustomHashMap0.put((Integer) 1231, (-1));
      tObjectIntCustomHashMap0.putIfAbsent((Integer) null, 0);
      String string0 = tObjectIntCustomHashMap0.toString();
      assertEquals(false, tObjectIntCustomHashMap0.isEmpty());
      assertEquals("{1231=-1,null=0}", string0);
  }
}

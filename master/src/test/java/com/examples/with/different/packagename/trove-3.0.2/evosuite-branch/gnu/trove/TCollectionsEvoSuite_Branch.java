/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TByteCollection;
import gnu.trove.TCharCollection;
import gnu.trove.TCollections;
import gnu.trove.TDoubleCollection;
import gnu.trove.TFloatCollection;
import gnu.trove.TIntCollection;
import gnu.trove.TLongCollection;
import gnu.trove.TShortCollection;
import gnu.trove.impl.sync.TSynchronizedByteByteMap;
import gnu.trove.impl.sync.TSynchronizedByteCharMap;
import gnu.trove.impl.sync.TSynchronizedByteCollection;
import gnu.trove.impl.sync.TSynchronizedByteDoubleMap;
import gnu.trove.impl.sync.TSynchronizedByteFloatMap;
import gnu.trove.impl.sync.TSynchronizedByteIntMap;
import gnu.trove.impl.sync.TSynchronizedByteList;
import gnu.trove.impl.sync.TSynchronizedByteLongMap;
import gnu.trove.impl.sync.TSynchronizedByteSet;
import gnu.trove.impl.sync.TSynchronizedByteShortMap;
import gnu.trove.impl.sync.TSynchronizedCharByteMap;
import gnu.trove.impl.sync.TSynchronizedCharCollection;
import gnu.trove.impl.sync.TSynchronizedCharDoubleMap;
import gnu.trove.impl.sync.TSynchronizedCharFloatMap;
import gnu.trove.impl.sync.TSynchronizedCharIntMap;
import gnu.trove.impl.sync.TSynchronizedCharList;
import gnu.trove.impl.sync.TSynchronizedCharLongMap;
import gnu.trove.impl.sync.TSynchronizedCharSet;
import gnu.trove.impl.sync.TSynchronizedCharShortMap;
import gnu.trove.impl.sync.TSynchronizedDoubleByteMap;
import gnu.trove.impl.sync.TSynchronizedDoubleCharMap;
import gnu.trove.impl.sync.TSynchronizedDoubleCollection;
import gnu.trove.impl.sync.TSynchronizedDoubleDoubleMap;
import gnu.trove.impl.sync.TSynchronizedDoubleFloatMap;
import gnu.trove.impl.sync.TSynchronizedDoubleIntMap;
import gnu.trove.impl.sync.TSynchronizedDoubleList;
import gnu.trove.impl.sync.TSynchronizedDoubleLongMap;
import gnu.trove.impl.sync.TSynchronizedDoubleSet;
import gnu.trove.impl.sync.TSynchronizedDoubleShortMap;
import gnu.trove.impl.sync.TSynchronizedFloatByteMap;
import gnu.trove.impl.sync.TSynchronizedFloatCharMap;
import gnu.trove.impl.sync.TSynchronizedFloatCollection;
import gnu.trove.impl.sync.TSynchronizedFloatDoubleMap;
import gnu.trove.impl.sync.TSynchronizedFloatFloatMap;
import gnu.trove.impl.sync.TSynchronizedFloatIntMap;
import gnu.trove.impl.sync.TSynchronizedFloatList;
import gnu.trove.impl.sync.TSynchronizedFloatLongMap;
import gnu.trove.impl.sync.TSynchronizedFloatSet;
import gnu.trove.impl.sync.TSynchronizedFloatShortMap;
import gnu.trove.impl.sync.TSynchronizedIntByteMap;
import gnu.trove.impl.sync.TSynchronizedIntCharMap;
import gnu.trove.impl.sync.TSynchronizedIntCollection;
import gnu.trove.impl.sync.TSynchronizedIntDoubleMap;
import gnu.trove.impl.sync.TSynchronizedIntFloatMap;
import gnu.trove.impl.sync.TSynchronizedIntIntMap;
import gnu.trove.impl.sync.TSynchronizedIntList;
import gnu.trove.impl.sync.TSynchronizedIntLongMap;
import gnu.trove.impl.sync.TSynchronizedIntSet;
import gnu.trove.impl.sync.TSynchronizedIntShortMap;
import gnu.trove.impl.sync.TSynchronizedLongCharMap;
import gnu.trove.impl.sync.TSynchronizedLongCollection;
import gnu.trove.impl.sync.TSynchronizedLongDoubleMap;
import gnu.trove.impl.sync.TSynchronizedLongFloatMap;
import gnu.trove.impl.sync.TSynchronizedLongIntMap;
import gnu.trove.impl.sync.TSynchronizedLongList;
import gnu.trove.impl.sync.TSynchronizedLongLongMap;
import gnu.trove.impl.sync.TSynchronizedLongSet;
import gnu.trove.impl.sync.TSynchronizedLongShortMap;
import gnu.trove.impl.sync.TSynchronizedRandomAccessByteList;
import gnu.trove.impl.sync.TSynchronizedRandomAccessFloatList;
import gnu.trove.impl.sync.TSynchronizedRandomAccessIntList;
import gnu.trove.impl.sync.TSynchronizedRandomAccessLongList;
import gnu.trove.impl.sync.TSynchronizedRandomAccessShortList;
import gnu.trove.impl.sync.TSynchronizedShortByteMap;
import gnu.trove.impl.sync.TSynchronizedShortCharMap;
import gnu.trove.impl.sync.TSynchronizedShortCollection;
import gnu.trove.impl.sync.TSynchronizedShortDoubleMap;
import gnu.trove.impl.sync.TSynchronizedShortFloatMap;
import gnu.trove.impl.sync.TSynchronizedShortIntMap;
import gnu.trove.impl.sync.TSynchronizedShortList;
import gnu.trove.impl.sync.TSynchronizedShortLongMap;
import gnu.trove.impl.sync.TSynchronizedShortSet;
import gnu.trove.impl.sync.TSynchronizedShortShortMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteList;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteLongMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteShortMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharByteMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharCharMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharFloatMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharIntMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharLongMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleByteMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleList;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatDoubleMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatFloatMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatList;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatLongMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntDoubleMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntFloatMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntList;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntLongMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongByteMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongCharMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongDoubleMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongIntMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongList;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongLongMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongShortMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessFloatList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessShortList;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortCharMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortDoubleMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortFloatMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortIntMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortList;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortLongMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortShortMap;
import gnu.trove.list.TByteList;
import gnu.trove.list.TCharList;
import gnu.trove.list.TDoubleList;
import gnu.trove.list.TFloatList;
import gnu.trove.list.TIntList;
import gnu.trove.list.TLongList;
import gnu.trove.list.TShortList;
import gnu.trove.list.array.TByteArrayList;
import gnu.trove.list.array.TCharArrayList;
import gnu.trove.list.array.TDoubleArrayList;
import gnu.trove.list.array.TFloatArrayList;
import gnu.trove.list.array.TIntArrayList;
import gnu.trove.list.array.TLongArrayList;
import gnu.trove.list.array.TShortArrayList;
import gnu.trove.list.linked.TByteLinkedList;
import gnu.trove.list.linked.TCharLinkedList;
import gnu.trove.list.linked.TDoubleLinkedList;
import gnu.trove.list.linked.TFloatLinkedList;
import gnu.trove.list.linked.TIntLinkedList;
import gnu.trove.list.linked.TShortLinkedList;
import gnu.trove.map.TByteByteMap;
import gnu.trove.map.TByteCharMap;
import gnu.trove.map.TByteDoubleMap;
import gnu.trove.map.TByteFloatMap;
import gnu.trove.map.TByteIntMap;
import gnu.trove.map.TByteLongMap;
import gnu.trove.map.TByteObjectMap;
import gnu.trove.map.TByteShortMap;
import gnu.trove.map.TCharByteMap;
import gnu.trove.map.TCharCharMap;
import gnu.trove.map.TCharDoubleMap;
import gnu.trove.map.TCharFloatMap;
import gnu.trove.map.TCharIntMap;
import gnu.trove.map.TCharLongMap;
import gnu.trove.map.TCharObjectMap;
import gnu.trove.map.TCharShortMap;
import gnu.trove.map.TDoubleByteMap;
import gnu.trove.map.TDoubleCharMap;
import gnu.trove.map.TDoubleDoubleMap;
import gnu.trove.map.TDoubleFloatMap;
import gnu.trove.map.TDoubleIntMap;
import gnu.trove.map.TDoubleLongMap;
import gnu.trove.map.TDoubleObjectMap;
import gnu.trove.map.TDoubleShortMap;
import gnu.trove.map.TFloatByteMap;
import gnu.trove.map.TFloatCharMap;
import gnu.trove.map.TFloatDoubleMap;
import gnu.trove.map.TFloatFloatMap;
import gnu.trove.map.TFloatIntMap;
import gnu.trove.map.TFloatLongMap;
import gnu.trove.map.TFloatObjectMap;
import gnu.trove.map.TFloatShortMap;
import gnu.trove.map.TIntByteMap;
import gnu.trove.map.TIntCharMap;
import gnu.trove.map.TIntDoubleMap;
import gnu.trove.map.TIntFloatMap;
import gnu.trove.map.TIntIntMap;
import gnu.trove.map.TIntLongMap;
import gnu.trove.map.TIntObjectMap;
import gnu.trove.map.TIntShortMap;
import gnu.trove.map.TLongByteMap;
import gnu.trove.map.TLongCharMap;
import gnu.trove.map.TLongDoubleMap;
import gnu.trove.map.TLongFloatMap;
import gnu.trove.map.TLongIntMap;
import gnu.trove.map.TLongLongMap;
import gnu.trove.map.TLongObjectMap;
import gnu.trove.map.TLongShortMap;
import gnu.trove.map.TObjectByteMap;
import gnu.trove.map.TObjectCharMap;
import gnu.trove.map.TObjectDoubleMap;
import gnu.trove.map.TObjectFloatMap;
import gnu.trove.map.TObjectIntMap;
import gnu.trove.map.TObjectLongMap;
import gnu.trove.map.TObjectShortMap;
import gnu.trove.map.TShortByteMap;
import gnu.trove.map.TShortCharMap;
import gnu.trove.map.TShortDoubleMap;
import gnu.trove.map.TShortFloatMap;
import gnu.trove.map.TShortIntMap;
import gnu.trove.map.TShortLongMap;
import gnu.trove.map.TShortObjectMap;
import gnu.trove.map.TShortShortMap;
import gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap;
import gnu.trove.map.custom_hash.TObjectFloatCustomHashMap;
import gnu.trove.map.custom_hash.TObjectShortCustomHashMap;
import gnu.trove.map.hash.TByteByteHashMap;
import gnu.trove.map.hash.TByteCharHashMap;
import gnu.trove.map.hash.TByteDoubleHashMap;
import gnu.trove.map.hash.TByteFloatHashMap;
import gnu.trove.map.hash.TByteIntHashMap;
import gnu.trove.map.hash.TByteLongHashMap;
import gnu.trove.map.hash.TByteObjectHashMap;
import gnu.trove.map.hash.TByteShortHashMap;
import gnu.trove.map.hash.TCharByteHashMap;
import gnu.trove.map.hash.TCharCharHashMap;
import gnu.trove.map.hash.TCharDoubleHashMap;
import gnu.trove.map.hash.TCharFloatHashMap;
import gnu.trove.map.hash.TCharIntHashMap;
import gnu.trove.map.hash.TCharLongHashMap;
import gnu.trove.map.hash.TCharObjectHashMap;
import gnu.trove.map.hash.TCharShortHashMap;
import gnu.trove.map.hash.TDoubleByteHashMap;
import gnu.trove.map.hash.TDoubleCharHashMap;
import gnu.trove.map.hash.TDoubleDoubleHashMap;
import gnu.trove.map.hash.TDoubleFloatHashMap;
import gnu.trove.map.hash.TDoubleIntHashMap;
import gnu.trove.map.hash.TDoubleLongHashMap;
import gnu.trove.map.hash.TDoubleObjectHashMap;
import gnu.trove.map.hash.TDoubleShortHashMap;
import gnu.trove.map.hash.TFloatByteHashMap;
import gnu.trove.map.hash.TFloatCharHashMap;
import gnu.trove.map.hash.TFloatDoubleHashMap;
import gnu.trove.map.hash.TFloatFloatHashMap;
import gnu.trove.map.hash.TFloatIntHashMap;
import gnu.trove.map.hash.TFloatLongHashMap;
import gnu.trove.map.hash.TFloatObjectHashMap;
import gnu.trove.map.hash.TFloatShortHashMap;
import gnu.trove.map.hash.TIntByteHashMap;
import gnu.trove.map.hash.TIntCharHashMap;
import gnu.trove.map.hash.TIntDoubleHashMap;
import gnu.trove.map.hash.TIntFloatHashMap;
import gnu.trove.map.hash.TIntIntHashMap;
import gnu.trove.map.hash.TIntLongHashMap;
import gnu.trove.map.hash.TIntObjectHashMap;
import gnu.trove.map.hash.TIntShortHashMap;
import gnu.trove.map.hash.TLongByteHashMap;
import gnu.trove.map.hash.TLongCharHashMap;
import gnu.trove.map.hash.TLongDoubleHashMap;
import gnu.trove.map.hash.TLongFloatHashMap;
import gnu.trove.map.hash.TLongIntHashMap;
import gnu.trove.map.hash.TLongLongHashMap;
import gnu.trove.map.hash.TLongObjectHashMap;
import gnu.trove.map.hash.TLongShortHashMap;
import gnu.trove.map.hash.TObjectByteHashMap;
import gnu.trove.map.hash.TObjectCharHashMap;
import gnu.trove.map.hash.TObjectDoubleHashMap;
import gnu.trove.map.hash.TObjectIntHashMap;
import gnu.trove.map.hash.TObjectLongHashMap;
import gnu.trove.map.hash.TObjectShortHashMap;
import gnu.trove.map.hash.TShortByteHashMap;
import gnu.trove.map.hash.TShortCharHashMap;
import gnu.trove.map.hash.TShortDoubleHashMap;
import gnu.trove.map.hash.TShortFloatHashMap;
import gnu.trove.map.hash.TShortIntHashMap;
import gnu.trove.map.hash.TShortLongHashMap;
import gnu.trove.map.hash.TShortObjectHashMap;
import gnu.trove.map.hash.TShortShortHashMap;
import gnu.trove.set.TByteSet;
import gnu.trove.set.TCharSet;
import gnu.trove.set.TDoubleSet;
import gnu.trove.set.TFloatSet;
import gnu.trove.set.TIntSet;
import gnu.trove.set.TLongSet;
import gnu.trove.set.TShortSet;
import gnu.trove.set.hash.TByteHashSet;
import gnu.trove.set.hash.TDoubleHashSet;
import gnu.trove.set.hash.TFloatHashSet;
import gnu.trove.set.hash.TIntHashSet;
import gnu.trove.set.hash.TLongHashSet;
import gnu.trove.set.hash.TShortHashSet;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Set;
import java.util.Stack;
import java.util.Vector;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TCollectionsEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TCharIntMap;)Lgnu/trove/map/TCharIntMap;: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(0, 842.34644F, 'X', 1517);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = (TSynchronizedCharIntMap)TCollections.synchronizedMap((TCharIntMap) tCharIntHashMap0);
      assertEquals(true, tSynchronizedCharIntMap0.isEmpty());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TIntDoubleMap;)Lgnu/trove/map/TIntDoubleMap;: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TDoubleObjectHashMap<Vector<Object>> tDoubleObjectHashMap0 = new TDoubleObjectHashMap<Vector<Object>>((-747), (-747), (-747));
      int[] intArray0 = new int[7];
      TIntDoubleHashMap tIntDoubleHashMap0 = new TIntDoubleHashMap(intArray0, tDoubleObjectHashMap0._set);
      TUnmodifiableIntDoubleMap tUnmodifiableIntDoubleMap0 = (TUnmodifiableIntDoubleMap)TCollections.unmodifiableMap((TIntDoubleMap) tIntDoubleHashMap0);
      assertEquals(0, tUnmodifiableIntDoubleMap0.getNoEntryKey());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TFloatDoubleMap;)Lgnu/trove/map/TFloatDoubleMap;: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(23, 0.0F, (float) 871, 195.70025542143583);
      TUnmodifiableFloatDoubleMap tUnmodifiableFloatDoubleMap0 = (TUnmodifiableFloatDoubleMap)TCollections.unmodifiableMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      assertEquals(195.70025542143583, tUnmodifiableFloatDoubleMap0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedCollection(Lgnu/trove/TCharCollection;)Lgnu/trove/TCharCollection;: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(0, (-347.77655F), (byte) (-56), 'b');
      TCharCollection tCharCollection0 = tByteCharHashMap0.valueCollection();
      TSynchronizedCharCollection tSynchronizedCharCollection0 = (TSynchronizedCharCollection)TCollections.synchronizedCollection(tCharCollection0);
      assertEquals(true, tSynchronizedCharCollection0.isEmpty());
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TByteObjectMap;)Lgnu/trove/map/TByteObjectMap;: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try {
        TCollections.synchronizedMap((TByteObjectMap<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TCharIntMap;)Lgnu/trove/map/TCharIntMap;: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(0, 842.34644F, 'X', 1517);
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap0 = (TUnmodifiableCharIntMap)TCollections.unmodifiableMap((TCharIntMap) tCharIntHashMap0);
      assertEquals(true, tUnmodifiableCharIntMap0.isEmpty());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TObjectByteMap;)Lgnu/trove/map/TObjectByteMap;: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TObjectByteHashMap<Object> tObjectByteHashMap0 = new TObjectByteHashMap<Object>(0, (float) 0, (byte)0);
      TObjectByteMap<Object> tObjectByteMap0 = TCollections.synchronizedMap((TObjectByteMap<Object>) tObjectByteHashMap0);
      assertEquals(0, tObjectByteMap0.size());
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TObjectByteMap;)Lgnu/trove/map/TObjectByteMap;: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TObjectByteHashMap<String> tObjectByteHashMap0 = new TObjectByteHashMap<String>();
      TObjectByteMap<String> tObjectByteMap0 = TCollections.unmodifiableMap((TObjectByteMap<String>) tObjectByteHashMap0);
      assertEquals(0, tObjectByteMap0.size());
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TByteCharMap;)Lgnu/trove/map/TByteCharMap;: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(1549, 0.5F, (byte)0, 'e');
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = (TUnmodifiableByteCharMap)TCollections.unmodifiableMap((TByteCharMap) tByteCharHashMap0);
      assertEquals('e', tUnmodifiableByteCharMap0.getNoEntryValue());
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TIntCharMap;)Lgnu/trove/map/TIntCharMap;: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = (TUnmodifiableIntCharMap)TCollections.unmodifiableMap((TIntCharMap) tIntCharHashMap0);
      assertEquals('\u0000', tUnmodifiableIntCharMap0.getNoEntryValue());
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TCharByteMap;)Lgnu/trove/map/TCharByteMap;: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((int) (short)1589, (float) (short)1589, 'E', (byte)22);
      TUnmodifiableCharByteMap tUnmodifiableCharByteMap0 = (TUnmodifiableCharByteMap)TCollections.unmodifiableMap((TCharByteMap) tCharByteHashMap0);
      assertEquals(true, tUnmodifiableCharByteMap0.isEmpty());
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TLongIntMap;)Lgnu/trove/map/TLongIntMap;: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      long[] longArray0 = new long[2];
      int[] intArray0 = new int[2];
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(longArray0, intArray0);
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = (TSynchronizedLongIntMap)TCollections.synchronizedMap((TLongIntMap) tLongIntHashMap0);
      assertEquals("{0=0}", tSynchronizedLongIntMap0.toString());
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedSet(Lgnu/trove/set/TLongSet;Ljava/lang/Object;)Lgnu/trove/set/TLongSet;: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TLongObjectHashMap<Object> tLongObjectHashMap0 = new TLongObjectHashMap<Object>();
      TLongSet tLongSet0 = tLongObjectHashMap0.keySet();
      TSynchronizedLongSet tSynchronizedLongSet0 = (TSynchronizedLongSet)TCollections.synchronizedSet(tLongSet0, (Object) null);
      assertEquals(0L, tSynchronizedLongSet0.getNoEntryValue());
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TDoubleByteMap;)Lgnu/trove/map/TDoubleByteMap;: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TDoubleByteHashMap tDoubleByteHashMap0 = new TDoubleByteHashMap((-794), (float) (-794), 0.0, (byte) (-100));
      TUnmodifiableDoubleByteMap tUnmodifiableDoubleByteMap0 = (TUnmodifiableDoubleByteMap)TCollections.unmodifiableMap((TDoubleByteMap) tDoubleByteHashMap0);
      assertEquals(true, tUnmodifiableDoubleByteMap0.isEmpty());
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TFloatFloatMap;)Lgnu/trove/map/TFloatFloatMap;: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap(0, 0);
      TUnmodifiableFloatFloatMap tUnmodifiableFloatFloatMap0 = (TUnmodifiableFloatFloatMap)TCollections.unmodifiableMap((TFloatFloatMap) tFloatFloatHashMap0);
      assertEquals(true, tUnmodifiableFloatFloatMap0.isEmpty());
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TLongFloatMap;)Lgnu/trove/map/TLongFloatMap;: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap((-1434), 6.6360896E8F);
      TSynchronizedLongFloatMap tSynchronizedLongFloatMap0 = (TSynchronizedLongFloatMap)TCollections.synchronizedMap((TLongFloatMap) tLongFloatHashMap0);
      assertEquals(0L, tSynchronizedLongFloatMap0.getNoEntryKey());
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TDoubleShortMap;)Lgnu/trove/map/TDoubleShortMap;: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((int) (short) (-113), 1247.8767F, 0.0, (short)0);
      TSynchronizedDoubleShortMap tSynchronizedDoubleShortMap0 = (TSynchronizedDoubleShortMap)TCollections.synchronizedMap((TDoubleShortMap) tDoubleShortHashMap0);
      assertEquals(0.0, tSynchronizedDoubleShortMap0.getNoEntryKey(), 0.01D);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedCollection(Lgnu/trove/TDoubleCollection;)Lgnu/trove/TDoubleCollection;: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TDoubleByteHashMap tDoubleByteHashMap0 = new TDoubleByteHashMap((-942), (float) (-942), (-1610.1316684861815), (byte)0);
      TDoubleSet tDoubleSet0 = tDoubleByteHashMap0.keySet();
      TSynchronizedDoubleCollection tSynchronizedDoubleCollection0 = (TSynchronizedDoubleCollection)TCollections.synchronizedCollection((TDoubleCollection) tDoubleSet0);
      assertEquals(true, tSynchronizedDoubleCollection0.isEmpty());
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TDoubleDoubleMap;)Lgnu/trove/map/TDoubleDoubleMap;: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap((-747));
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = (TUnmodifiableDoubleDoubleMap)TCollections.unmodifiableMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      assertEquals(true, tUnmodifiableDoubleDoubleMap0.isEmpty());
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TFloatCharMap;)Lgnu/trove/map/TFloatCharMap;: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap((-248), 0.0F);
      TSynchronizedFloatCharMap tSynchronizedFloatCharMap0 = (TSynchronizedFloatCharMap)TCollections.synchronizedMap((TFloatCharMap) tFloatCharHashMap0);
      assertEquals(0, tSynchronizedFloatCharMap0.size());
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TFloatByteMap;)Lgnu/trove/map/TFloatByteMap;: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap((int) 'n', (float) 1L);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = (TUnmodifiableFloatByteMap)TCollections.unmodifiableMap((TFloatByteMap) tFloatByteHashMap0);
      assertEquals("{}", tUnmodifiableFloatByteMap0.toString());
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TLongObjectMap;)Lgnu/trove/map/TLongObjectMap;: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TLongObjectHashMap<ArrayList<Object>> tLongObjectHashMap0 = new TLongObjectHashMap<ArrayList<Object>>((-1821), (-214.77167F), 9223372036854775807L);
      TLongObjectMap<ArrayList<Object>> tLongObjectMap0 = TCollections.unmodifiableMap((TLongObjectMap<ArrayList<Object>>) tLongObjectHashMap0);
      assertEquals(9223372036854775807L, tLongObjectMap0.getNoEntryKey());
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TDoubleCharMap;)Lgnu/trove/map/TDoubleCharMap;: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap((-1093), 1368.772F, (double) 1368.772F, 'K');
      TSynchronizedDoubleCharMap tSynchronizedDoubleCharMap0 = (TSynchronizedDoubleCharMap)TCollections.synchronizedMap((TDoubleCharMap) tDoubleCharHashMap0);
      assertEquals(true, tSynchronizedDoubleCharMap0.isEmpty());
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedCollection(Lgnu/trove/TIntCollection;)Lgnu/trove/TIntCollection;: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TFloatObjectHashMap<Integer> tFloatObjectHashMap0 = new TFloatObjectHashMap<Integer>((-1594), 468.42496F);
      Collection<Integer> collection0 = tFloatObjectHashMap0.valueCollection();
      TIntHashSet tIntHashSet0 = new TIntHashSet(collection0);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = new TUnmodifiableIntSet((TIntSet) tIntHashSet0);
      TSynchronizedIntCollection tSynchronizedIntCollection0 = (TSynchronizedIntCollection)TCollections.synchronizedCollection((TIntCollection) tUnmodifiableIntSet0);
      assertEquals("{}", tSynchronizedIntCollection0.toString());
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TDoubleLongMap;)Lgnu/trove/map/TDoubleLongMap;: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      long[] longArray0 = new long[2];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = (TSynchronizedDoubleLongMap)TCollections.synchronizedMap((TDoubleLongMap) tDoubleLongHashMap0);
      assertEquals("{0.0=0}", tSynchronizedDoubleLongMap0.toString());
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TCharDoubleMap;)Lgnu/trove/map/TCharDoubleMap;: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap();
      double[] doubleArray0 = new double[3];
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(tCharCharHashMap0._set, doubleArray0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = (TUnmodifiableCharDoubleMap)TCollections.unmodifiableMap((TCharDoubleMap) tCharDoubleHashMap0);
      assertEquals(1, tUnmodifiableCharDoubleMap0.size());
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TIntLongMap;)Lgnu/trove/map/TIntLongMap;: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(0, (-1554.0966F), 0, 0L);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = (TSynchronizedIntLongMap)TCollections.synchronizedMap((TIntLongMap) tIntLongHashMap0);
      assertEquals("{}", tSynchronizedIntLongMap0.toString());
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TFloatByteMap;)Lgnu/trove/map/TFloatByteMap;: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap((-610), (float) (-610), 6.6360896E8F, (byte)1);
      TSynchronizedFloatByteMap tSynchronizedFloatByteMap0 = (TSynchronizedFloatByteMap)TCollections.synchronizedMap((TFloatByteMap) tFloatByteHashMap0);
      assertEquals("{}", tSynchronizedFloatByteMap0.toString());
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TObjectDoubleMap;)Lgnu/trove/map/TObjectDoubleMap;: root-Branch
   */

  @Test
  public void test28()  throws Throwable  {
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>();
      TObjectDoubleMap<Integer> tObjectDoubleMap0 = TCollections.unmodifiableMap((TObjectDoubleMap<Integer>) tObjectDoubleCustomHashMap0);
      assertEquals(0, tObjectDoubleMap0.size());
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TCharShortMap;)Lgnu/trove/map/TCharShortMap;: root-Branch
   */

//   @Test
//   public void test29()  throws Throwable  {
//       TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap(2024, 0.0F, 'v', (short) (-178));
//       TSynchronizedCharShortMap tSynchronizedCharShortMap0 = (TSynchronizedCharShortMap)TCollections.synchronizedMap((TCharShortMap) tCharShortHashMap0);
//       assertEquals(-178, tSynchronizedCharShortMap0.getNoEntryValue());
//   }

  //Test case number: 30
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableCollection(Lgnu/trove/TIntCollection;)Lgnu/trove/TIntCollection;: root-Branch
   */

  @Test
  public void test30()  throws Throwable  {
      TLongHashSet tLongHashSet0 = new TLongHashSet((-1));
      int[] intArray0 = new int[9];
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(intArray0, tLongHashSet0._set);
      TIntSet tIntSet0 = tIntLongHashMap0.keySet();
      TUnmodifiableIntCollection tUnmodifiableIntCollection0 = (TUnmodifiableIntCollection)TCollections.unmodifiableCollection((TIntCollection) tIntSet0);
      assertEquals(1, tUnmodifiableIntCollection0.size());
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TObjectShortMap;)Lgnu/trove/map/TObjectShortMap;: root-Branch
   */

//   @Test
//   public void test31()  throws Throwable  {
//       TObjectShortHashMap<String> tObjectShortHashMap0 = new TObjectShortHashMap<String>((int) (byte) (-61), (float) 0, (short) (byte) (-61));
//       TObjectShortMap<String> tObjectShortMap0 = TCollections.unmodifiableMap((TObjectShortMap<String>) tObjectShortHashMap0);
//       assertEquals(-61, tObjectShortMap0.getNoEntryValue());
//   }

  //Test case number: 32
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedCollection(Lgnu/trove/TLongCollection;Ljava/lang/Object;)Lgnu/trove/TLongCollection;: root-Branch
   */

  @Test
  public void test32()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(1029);
      TSynchronizedLongCollection tSynchronizedLongCollection0 = new TSynchronizedLongCollection((TLongCollection) tLongArrayList0, (Object) "CHN");
      TSynchronizedLongCollection tSynchronizedLongCollection1 = (TSynchronizedLongCollection)TCollections.synchronizedCollection(tSynchronizedLongCollection0, "{}");
      assertEquals(0, tSynchronizedLongCollection1.size());
  }

  //Test case number: 33
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TLongDoubleMap;)Lgnu/trove/map/TLongDoubleMap;: root-Branch
   */

  @Test
  public void test33()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap((int) (byte)0, 0.0F);
      TUnmodifiableLongDoubleMap tUnmodifiableLongDoubleMap0 = (TUnmodifiableLongDoubleMap)TCollections.unmodifiableMap((TLongDoubleMap) tLongDoubleHashMap0);
      assertEquals(0L, tUnmodifiableLongDoubleMap0.getNoEntryKey());
  }

  //Test case number: 34
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TByteShortMap;)Lgnu/trove/map/TByteShortMap;: root-Branch
   */

  @Test
  public void test34()  throws Throwable  {
      TByteShortHashMap tByteShortHashMap0 = new TByteShortHashMap();
      TSynchronizedByteShortMap tSynchronizedByteShortMap0 = (TSynchronizedByteShortMap)TCollections.synchronizedMap((TByteShortMap) tByteShortHashMap0);
      assertEquals("{}", tSynchronizedByteShortMap0.toString());
  }

  //Test case number: 35
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TDoubleShortMap;)Lgnu/trove/map/TDoubleShortMap;: root-Branch
   */

  @Test
  public void test35()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(0);
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = (TUnmodifiableDoubleShortMap)TCollections.unmodifiableMap((TDoubleShortMap) tDoubleShortHashMap0);
      assertEquals(0.0, tUnmodifiableDoubleShortMap0.getNoEntryKey(), 0.01D);
  }

  //Test case number: 36
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TShortFloatMap;)Lgnu/trove/map/TShortFloatMap;: root-Branch
   */

//   @Test
//   public void test36()  throws Throwable  {
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap();
//       TUnmodifiableShortFloatMap tUnmodifiableShortFloatMap0 = (TUnmodifiableShortFloatMap)TCollections.unmodifiableMap((TShortFloatMap) tShortFloatHashMap0);
//       assertEquals(0, tUnmodifiableShortFloatMap0.getNoEntryKey());
//   }

  //Test case number: 37
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedCollection(Lgnu/trove/TFloatCollection;)Lgnu/trove/TFloatCollection;: root-Branch
   */

  @Test
  public void test37()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(0);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList0);
      TSynchronizedFloatCollection tSynchronizedFloatCollection0 = (TSynchronizedFloatCollection)TCollections.synchronizedCollection((TFloatCollection) tSynchronizedRandomAccessFloatList0);
      assertEquals(0, tSynchronizedFloatCollection0.size());
  }

  //Test case number: 38
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TDoubleLongMap;)Lgnu/trove/map/TDoubleLongMap;: root-Branch
   */

  @Test
  public void test38()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(0, 0.0F);
      long[] longArray0 = new long[10];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(tDoubleHashSet0._set, longArray0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = (TUnmodifiableDoubleLongMap)TCollections.unmodifiableMap((TDoubleLongMap) tDoubleLongHashMap0);
      assertEquals(0.0, tUnmodifiableDoubleLongMap0.getNoEntryKey(), 0.01D);
  }

  //Test case number: 39
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TByteLongMap;)Lgnu/trove/map/TByteLongMap;: root-Branch
   */

  @Test
  public void test39()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TUnmodifiableByteLongMap tUnmodifiableByteLongMap0 = (TUnmodifiableByteLongMap)TCollections.unmodifiableMap((TByteLongMap) tByteLongHashMap0);
      assertEquals(true, tUnmodifiableByteLongMap0.isEmpty());
  }

  //Test case number: 40
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableCollection(Lgnu/trove/TLongCollection;)Lgnu/trove/TLongCollection;: root-Branch
   */

  @Test
  public void test40()  throws Throwable  {
      long[] longArray0 = new long[7];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tLongArrayList0);
      TUnmodifiableLongCollection tUnmodifiableLongCollection0 = (TUnmodifiableLongCollection)TCollections.unmodifiableCollection((TLongCollection) tUnmodifiableLongList0);
      assertEquals(false, tUnmodifiableLongCollection0.isEmpty());
  }

  //Test case number: 41
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TObjectLongMap;)Lgnu/trove/map/TObjectLongMap;: root-Branch
   */

  @Test
  public void test41()  throws Throwable  {
      TObjectLongHashMap<ArrayList<Object>> tObjectLongHashMap0 = new TObjectLongHashMap<ArrayList<Object>>();
      TObjectLongMap<ArrayList<Object>> tObjectLongMap0 = TCollections.unmodifiableMap((TObjectLongMap<ArrayList<Object>>) tObjectLongHashMap0);
      assertEquals(true, tObjectLongMap0.isEmpty());
  }

  //Test case number: 42
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TIntByteMap;)Lgnu/trove/map/TIntByteMap;: root-Branch
   */

  @Test
  public void test42()  throws Throwable  {
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap();
      TSynchronizedIntByteMap tSynchronizedIntByteMap0 = (TSynchronizedIntByteMap)TCollections.synchronizedMap((TIntByteMap) tIntByteHashMap0);
      assertEquals(0, tSynchronizedIntByteMap0.getNoEntryKey());
  }

  //Test case number: 43
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TByteObjectMap;)Lgnu/trove/map/TByteObjectMap;: root-Branch
   */

  @Test
  public void test43()  throws Throwable  {
      TByteObjectHashMap<Object> tByteObjectHashMap0 = new TByteObjectHashMap<Object>((-1873), (-1873));
      TByteObjectMap<Object> tByteObjectMap0 = TCollections.unmodifiableMap((TByteObjectMap<Object>) tByteObjectHashMap0);
      assertEquals(0, tByteObjectMap0.size());
  }

  //Test case number: 44
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TByteLongMap;)Lgnu/trove/map/TByteLongMap;: root-Branch
   */

  @Test
  public void test44()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = (TSynchronizedByteLongMap)TCollections.synchronizedMap((TByteLongMap) tByteLongHashMap0);
      assertEquals("{}", tSynchronizedByteLongMap0.toString());
  }

  //Test case number: 45
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TCharFloatMap;)Lgnu/trove/map/TCharFloatMap;: root-Branch
   */

  @Test
  public void test45()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(0, 991.3104F);
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = (TSynchronizedCharFloatMap)TCollections.synchronizedMap((TCharFloatMap) tCharFloatHashMap0);
      assertEquals("{}", tSynchronizedCharFloatMap0.toString());
  }

  //Test case number: 46
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedCollection(Lgnu/trove/TFloatCollection;Ljava/lang/Object;)Lgnu/trove/TFloatCollection;: root-Branch
   */

  @Test
  public void test46()  throws Throwable  {
      TFloatObjectHashMap<String> tFloatObjectHashMap0 = new TFloatObjectHashMap<String>(156);
      TFloatSet tFloatSet0 = tFloatObjectHashMap0.keySet();
      TUnmodifiableFloatSet tUnmodifiableFloatSet0 = new TUnmodifiableFloatSet(tFloatSet0);
      TSynchronizedFloatCollection tSynchronizedFloatCollection0 = (TSynchronizedFloatCollection)TCollections.synchronizedCollection(tUnmodifiableFloatSet0, "{}");
      assertEquals(0, tSynchronizedFloatCollection0.size());
  }

  //Test case number: 47
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TShortByteMap;)Lgnu/trove/map/TShortByteMap;: root-Branch
   */

  @Test
  public void test47()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap((-1315));
      TSynchronizedShortByteMap tSynchronizedShortByteMap0 = (TSynchronizedShortByteMap)TCollections.synchronizedMap((TShortByteMap) tShortByteHashMap0);
      assertEquals(0, tSynchronizedShortByteMap0.size());
  }

  //Test case number: 48
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TByteFloatMap;)Lgnu/trove/map/TByteFloatMap;: root-Branch
   */

//   @Test
//   public void test48()  throws Throwable  {
//       TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap();
//       float[] floatArray0 = new float[9];
//       TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(tCharCharHashMap0._states, floatArray0);
//       TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = (TSynchronizedByteFloatMap)TCollections.synchronizedMap((TByteFloatMap) tByteFloatHashMap0);
//       assertEquals(0, tSynchronizedByteFloatMap0.getNoEntryKey());
//   }

  //Test case number: 49
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TFloatObjectMap;)Lgnu/trove/map/TFloatObjectMap;: root-Branch
   */

  @Test
  public void test49()  throws Throwable  {
      TFloatObjectHashMap<Vector<Object>> tFloatObjectHashMap0 = new TFloatObjectHashMap<Vector<Object>>(871, 842.34644F);
      TFloatObjectMap<Vector<Object>> tFloatObjectMap0 = TCollections.unmodifiableMap((TFloatObjectMap<Vector<Object>>) tFloatObjectHashMap0);
      assertEquals(0, tFloatObjectMap0.size());
  }

  //Test case number: 50
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TObjectCharMap;)Lgnu/trove/map/TObjectCharMap;: root-Branch
   */

  @Test
  public void test50()  throws Throwable  {
      TObjectCharHashMap<String> tObjectCharHashMap0 = new TObjectCharHashMap<String>();
      TObjectCharMap<String> tObjectCharMap0 = TCollections.synchronizedMap((TObjectCharMap<String>) tObjectCharHashMap0);
      assertEquals(true, tObjectCharMap0.isEmpty());
  }

  //Test case number: 51
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TCharObjectMap;)Lgnu/trove/map/TCharObjectMap;: root-Branch
   */

  @Test
  public void test51()  throws Throwable  {
      TCharObjectHashMap<ArrayList<Object>> tCharObjectHashMap0 = new TCharObjectHashMap<ArrayList<Object>>(0, (-988.4805F));
      TCharObjectMap<ArrayList<Object>> tCharObjectMap0 = TCollections.unmodifiableMap((TCharObjectMap<ArrayList<Object>>) tCharObjectHashMap0);
      assertEquals('\u0000', tCharObjectMap0.getNoEntryKey());
  }

  //Test case number: 52
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TLongCharMap;)Lgnu/trove/map/TLongCharMap;: root-Branch
   */

  @Test
  public void test52()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap((int) 'v', (-1682.8969F));
      TSynchronizedLongCharMap tSynchronizedLongCharMap0 = (TSynchronizedLongCharMap)TCollections.synchronizedMap((TLongCharMap) tLongCharHashMap0);
      assertEquals("{}", tSynchronizedLongCharMap0.toString());
  }

  //Test case number: 53
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TFloatFloatMap;)Lgnu/trove/map/TFloatFloatMap;: root-Branch
   */

  @Test
  public void test53()  throws Throwable  {
      TFloatFloatHashMap tFloatFloatHashMap0 = new TFloatFloatHashMap();
      TSynchronizedFloatFloatMap tSynchronizedFloatFloatMap0 = (TSynchronizedFloatFloatMap)TCollections.synchronizedMap((TFloatFloatMap) tFloatFloatHashMap0);
      assertEquals(true, tSynchronizedFloatFloatMap0.isEmpty());
  }

  //Test case number: 54
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TShortShortMap;)Lgnu/trove/map/TShortShortMap;: root-Branch
   */

//   @Test
//   public void test54()  throws Throwable  {
//       TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(1854585413, 1854585413);
//       TUnmodifiableShortShortMap tUnmodifiableShortShortMap0 = (TUnmodifiableShortShortMap)TCollections.unmodifiableMap((TShortShortMap) tShortShortHashMap0);
//       assertEquals(0, tUnmodifiableShortShortMap0.getNoEntryValue());
//   }

  //Test case number: 55
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TShortObjectMap;)Lgnu/trove/map/TShortObjectMap;: root-Branch
   */

  @Test
  public void test55()  throws Throwable  {
      TShortObjectHashMap<Object> tShortObjectHashMap0 = new TShortObjectHashMap<Object>();
      TShortObjectMap<Object> tShortObjectMap0 = TCollections.unmodifiableMap((TShortObjectMap<Object>) tShortObjectHashMap0);
      assertEquals(0, tShortObjectMap0.size());
  }

  //Test case number: 56
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TShortDoubleMap;)Lgnu/trove/map/TShortDoubleMap;: root-Branch
   */

  @Test
  public void test56()  throws Throwable  {
      TShortDoubleHashMap tShortDoubleHashMap0 = new TShortDoubleHashMap();
      TSynchronizedShortDoubleMap tSynchronizedShortDoubleMap0 = (TSynchronizedShortDoubleMap)TCollections.synchronizedMap((TShortDoubleMap) tShortDoubleHashMap0);
      assertEquals(0, tSynchronizedShortDoubleMap0.size());
  }

  //Test case number: 57
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TDoubleIntMap;)Lgnu/trove/map/TDoubleIntMap;: root-Branch
   */

  @Test
  public void test57()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap((-657), 1920.0814F);
      TSynchronizedDoubleIntMap tSynchronizedDoubleIntMap0 = (TSynchronizedDoubleIntMap)TCollections.synchronizedMap((TDoubleIntMap) tDoubleIntHashMap0);
      assertEquals(0.0, tSynchronizedDoubleIntMap0.getNoEntryKey(), 0.01D);
  }

  //Test case number: 58
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableSet(Lgnu/trove/set/TShortSet;)Lgnu/trove/set/TShortSet;: root-Branch
   */

  @Test
  public void test58()  throws Throwable  {
      TShortHashSet tShortHashSet0 = new TShortHashSet(52679969);
      TUnmodifiableShortSet tUnmodifiableShortSet0 = (TUnmodifiableShortSet)TCollections.unmodifiableSet((TShortSet) tShortHashSet0);
      assertEquals(0, tUnmodifiableShortSet0.size());
  }

  //Test case number: 59
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedCollection(Lgnu/trove/TByteCollection;)Lgnu/trove/TByteCollection;: root-Branch
   */

  @Test
  public void test59()  throws Throwable  {
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap((int) (byte) (-67), (-517.40424F));
      TByteCollection tByteCollection0 = tIntByteHashMap0.valueCollection();
      TSynchronizedByteCollection tSynchronizedByteCollection0 = (TSynchronizedByteCollection)TCollections.synchronizedCollection(tByteCollection0);
      assertEquals(0, tSynchronizedByteCollection0.size());
  }

  //Test case number: 60
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedSet(Lgnu/trove/set/TIntSet;Ljava/lang/Object;)Lgnu/trove/set/TIntSet;: root-Branch
   */

  @Test
  public void test60()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(0, (-1554.0966F), 0, 0L);
      TIntSet tIntSet0 = tIntLongHashMap0.keySet();
      TSynchronizedIntSet tSynchronizedIntSet0 = (TSynchronizedIntSet)TCollections.synchronizedSet(tIntSet0, tLongArrayList0);
      assertEquals(0, tSynchronizedIntSet0.size());
  }

  //Test case number: 61
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TDoubleObjectMap;)Lgnu/trove/map/TDoubleObjectMap;: root-Branch
   */

  @Test
  public void test61()  throws Throwable  {
      TDoubleObjectHashMap<ArrayList<Object>> tDoubleObjectHashMap0 = new TDoubleObjectHashMap<ArrayList<Object>>();
      TDoubleObjectMap<ArrayList<Object>> tDoubleObjectMap0 = TCollections.synchronizedMap((TDoubleObjectMap<ArrayList<Object>>) tDoubleObjectHashMap0);
      assertEquals(0, tDoubleObjectMap0.size());
  }

  //Test case number: 62
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedCollection(Lgnu/trove/TCharCollection;Ljava/lang/Object;)Lgnu/trove/TCharCollection;: root-Branch
   */

  @Test
  public void test62()  throws Throwable  {
      char[] charArray0 = new char[7];
      TCharArrayList tCharArrayList0 = new TCharArrayList(charArray0);
      TSynchronizedCharCollection tSynchronizedCharCollection0 = (TSynchronizedCharCollection)TCollections.synchronizedCollection(tCharArrayList0, "{97.0, 83.0, 97.0, 97.0, 118.0, 83.0, 0.5, 118.0, 83.0, 36.0}");
      assertEquals(false, tSynchronizedCharCollection0.isEmpty());
  }

  //Test case number: 63
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TDoubleByteMap;)Lgnu/trove/map/TDoubleByteMap;: root-Branch
   */

  @Test
  public void test63()  throws Throwable  {
      TDoubleByteHashMap tDoubleByteHashMap0 = new TDoubleByteHashMap();
      TSynchronizedDoubleByteMap tSynchronizedDoubleByteMap0 = (TSynchronizedDoubleByteMap)TCollections.synchronizedMap((TDoubleByteMap) tDoubleByteHashMap0);
      assertEquals("{}", tSynchronizedDoubleByteMap0.toString());
  }

  //Test case number: 64
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TFloatIntMap;)Lgnu/trove/map/TFloatIntMap;: root-Branch
   */

  @Test
  public void test64()  throws Throwable  {
      // Undeclared exception!
      try {
        TCollections.unmodifiableMap((TFloatIntMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 65
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableCollection(Lgnu/trove/TCharCollection;)Lgnu/trove/TCharCollection;: root-Branch
   */

  @Test
  public void test65()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap(1);
      TCharCollection tCharCollection0 = tFloatCharHashMap0.valueCollection();
      TUnmodifiableCharCollection tUnmodifiableCharCollection0 = (TUnmodifiableCharCollection)TCollections.unmodifiableCollection(tCharCollection0);
      assertEquals("{}", tUnmodifiableCharCollection0.toString());
  }

  //Test case number: 66
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TShortIntMap;)Lgnu/trove/map/TShortIntMap;: root-Branch
   */

//   @Test
//   public void test66()  throws Throwable  {
//       TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(0, (float) 0, (short)1589, 0);
//       TSynchronizedShortIntMap tSynchronizedShortIntMap0 = (TSynchronizedShortIntMap)TCollections.synchronizedMap((TShortIntMap) tShortIntHashMap0);
//       assertEquals(1589, tSynchronizedShortIntMap0.getNoEntryKey());
//   }

  //Test case number: 67
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedSet(Lgnu/trove/set/TCharSet;Ljava/lang/Object;)Lgnu/trove/set/TCharSet;: root-Branch
   */

  @Test
  public void test67()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap();
      TCharSet tCharSet0 = tCharFloatHashMap0.keySet();
      TSynchronizedCharSet tSynchronizedCharSet0 = (TSynchronizedCharSet)TCollections.synchronizedSet(tCharSet0, "{}");
      assertEquals(0, tSynchronizedCharSet0.size());
  }

  //Test case number: 68
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedCollection(Lgnu/trove/TIntCollection;Ljava/lang/Object;)Lgnu/trove/TIntCollection;: root-Branch
   */

  @Test
  public void test68()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(0, 6.6360896E8F, (-931L), (int) (byte)0);
      TIntCollection tIntCollection0 = tLongIntHashMap0.valueCollection();
      TSynchronizedIntCollection tSynchronizedIntCollection0 = (TSynchronizedIntCollection)TCollections.synchronizedCollection(tIntCollection0, "{r=r, B=B, m=m, :=:, #=#, `=`, _=_}");
      assertEquals("{}", tSynchronizedIntCollection0.toString());
  }

  //Test case number: 69
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TDoubleFloatMap;)Lgnu/trove/map/TDoubleFloatMap;: root-Branch
   */

  @Test
  public void test69()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(1, (float) (-248), (double) 0.0F, 193.2421F);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = (TUnmodifiableDoubleFloatMap)TCollections.unmodifiableMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      assertEquals("{}", tUnmodifiableDoubleFloatMap0.toString());
  }

  //Test case number: 70
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableSet(Lgnu/trove/set/TByteSet;)Lgnu/trove/set/TByteSet;: root-Branch
   */

//   @Test
//   public void test70()  throws Throwable  {
//       TByteHashSet tByteHashSet0 = new TByteHashSet(397, 0.0F, (byte)16);
//       TUnmodifiableByteSet tUnmodifiableByteSet0 = (TUnmodifiableByteSet)TCollections.unmodifiableSet((TByteSet) tByteHashSet0);
//       assertEquals(16, tUnmodifiableByteSet0.getNoEntryValue());
//   }

  //Test case number: 71
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TShortFloatMap;)Lgnu/trove/map/TShortFloatMap;: root-Branch
   */

//   @Test
//   public void test71()  throws Throwable  {
//       TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(1583, (-1961.3157F));
//       float[] floatArray0 = new float[9];
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(tShortLongHashMap0._set, floatArray0);
//       TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = (TSynchronizedShortFloatMap)TCollections.synchronizedMap((TShortFloatMap) tShortFloatHashMap0);
//       assertEquals(0.0F, tSynchronizedShortFloatMap0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 72
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TLongByteMap;)Lgnu/trove/map/TLongByteMap;: root-Branch
   */

  @Test
  public void test72()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(168, (float) 168, (long) (-1093), (byte)0);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap0 = (TUnmodifiableLongByteMap)TCollections.unmodifiableMap((TLongByteMap) tLongByteHashMap0);
      assertEquals(0, tUnmodifiableLongByteMap0.size());
  }

  //Test case number: 73
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TObjectLongMap;)Lgnu/trove/map/TObjectLongMap;: root-Branch
   */

  @Test
  public void test73()  throws Throwable  {
      TObjectLongHashMap<Integer> tObjectLongHashMap0 = new TObjectLongHashMap<Integer>(0);
      TObjectLongMap<Integer> tObjectLongMap0 = TCollections.synchronizedMap((TObjectLongMap<Integer>) tObjectLongHashMap0);
      assertEquals(true, tObjectLongMap0.isEmpty());
  }

  //Test case number: 74
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TShortShortMap;)Lgnu/trove/map/TShortShortMap;: root-Branch
   */

  @Test
  public void test74()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      TSynchronizedShortShortMap tSynchronizedShortShortMap0 = (TSynchronizedShortShortMap)TCollections.synchronizedMap((TShortShortMap) tShortShortHashMap0);
      assertEquals("{}", tSynchronizedShortShortMap0.toString());
  }

  //Test case number: 75
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TDoubleIntMap;)Lgnu/trove/map/TDoubleIntMap;: root-Branch
   */

  @Test
  public void test75()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(1869, 1869);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = (TUnmodifiableDoubleIntMap)TCollections.unmodifiableMap((TDoubleIntMap) tDoubleIntHashMap0);
      assertEquals(0, tUnmodifiableDoubleIntMap0.getNoEntryValue());
  }

  //Test case number: 76
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableSet(Lgnu/trove/set/TFloatSet;)Lgnu/trove/set/TFloatSet;: root-Branch
   */

//   @Test
//   public void test76()  throws Throwable  {
//       TFloatHashSet tFloatHashSet0 = new TFloatHashSet((-1), 0.0F);
//       TUnmodifiableFloatSet tUnmodifiableFloatSet0 = (TUnmodifiableFloatSet)TCollections.unmodifiableSet((TFloatSet) tFloatHashSet0);
//       assertEquals(0.0F, tUnmodifiableFloatSet0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 77
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TLongShortMap;)Lgnu/trove/map/TLongShortMap;: root-Branch
   */

  @Test
  public void test77()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap();
      TSynchronizedLongShortMap tSynchronizedLongShortMap0 = (TSynchronizedLongShortMap)TCollections.synchronizedMap((TLongShortMap) tLongShortHashMap0);
      assertEquals(0L, tSynchronizedLongShortMap0.getNoEntryKey());
  }

  //Test case number: 78
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TShortByteMap;)Lgnu/trove/map/TShortByteMap;: root-Branch
   */

  @Test
  public void test78()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap((-1315));
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = (TUnmodifiableShortByteMap)TCollections.unmodifiableMap((TShortByteMap) tShortByteHashMap0);
      assertEquals(true, tUnmodifiableShortByteMap0.isEmpty());
  }

  //Test case number: 79
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TIntFloatMap;)Lgnu/trove/map/TIntFloatMap;: root-Branch
   */

  @Test
  public void test79()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap();
      TSynchronizedIntFloatMap tSynchronizedIntFloatMap0 = (TSynchronizedIntFloatMap)TCollections.synchronizedMap((TIntFloatMap) tIntFloatHashMap0);
      assertEquals(0, tSynchronizedIntFloatMap0.size());
  }

  //Test case number: 80
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TFloatDoubleMap;)Lgnu/trove/map/TFloatDoubleMap;: root-Branch
   */

  @Test
  public void test80()  throws Throwable  {
      TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap();
      TSynchronizedFloatDoubleMap tSynchronizedFloatDoubleMap0 = (TSynchronizedFloatDoubleMap)TCollections.synchronizedMap((TFloatDoubleMap) tFloatDoubleHashMap0);
      assertEquals(0, tSynchronizedFloatDoubleMap0.size());
  }

  //Test case number: 81
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TLongShortMap;)Lgnu/trove/map/TLongShortMap;: root-Branch
   */

//   @Test
//   public void test81()  throws Throwable  {
//       TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap(277, 277);
//       TUnmodifiableLongShortMap tUnmodifiableLongShortMap0 = (TUnmodifiableLongShortMap)TCollections.unmodifiableMap((TLongShortMap) tLongShortHashMap0);
//       assertEquals(0, tUnmodifiableLongShortMap0.getNoEntryValue());
//   }

  //Test case number: 82
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TCharLongMap;)Lgnu/trove/map/TCharLongMap;: root-Branch
   */

  @Test
  public void test82()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap();
      char[] charArray0 = new char[2];
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(charArray0, tLongCharHashMap0._set);
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = (TSynchronizedCharLongMap)TCollections.synchronizedMap((TCharLongMap) tCharLongHashMap0);
      assertEquals(0L, tSynchronizedCharLongMap0.getNoEntryValue());
  }

  //Test case number: 83
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedSet(Lgnu/trove/set/TFloatSet;)Lgnu/trove/set/TFloatSet;: root-Branch
   */

//   @Test
//   public void test83()  throws Throwable  {
//       TFloatDoubleHashMap tFloatDoubleHashMap0 = new TFloatDoubleHashMap(1254, (float) 117L, (-1181.7245F), (double) 'n');
//       TFloatSet tFloatSet0 = tFloatDoubleHashMap0.keySet();
//       TSynchronizedFloatSet tSynchronizedFloatSet0 = (TSynchronizedFloatSet)TCollections.synchronizedSet(tFloatSet0);
//       assertEquals((-1181.7245F), tSynchronizedFloatSet0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 84
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TLongObjectMap;)Lgnu/trove/map/TLongObjectMap;: root-Branch
   */

  @Test
  public void test84()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>(0, 463.57916F, 2L);
      TLongObjectMap<Integer> tLongObjectMap0 = TCollections.synchronizedMap((TLongObjectMap<Integer>) tLongObjectHashMap0);
      assertEquals(0, tLongObjectMap0.size());
  }

  //Test case number: 85
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedSet(Lgnu/trove/set/TDoubleSet;)Lgnu/trove/set/TDoubleSet;: root-Branch
   */

  @Test
  public void test85()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(0, 0.0F);
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = (TSynchronizedDoubleSet)TCollections.synchronizedSet((TDoubleSet) tDoubleHashSet0);
      assertEquals("{}", tSynchronizedDoubleSet0.toString());
  }

  //Test case number: 86
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TIntFloatMap;)Lgnu/trove/map/TIntFloatMap;: root-Branch
   */

  @Test
  public void test86()  throws Throwable  {
      TIntFloatHashMap tIntFloatHashMap0 = new TIntFloatHashMap();
      TUnmodifiableIntFloatMap tUnmodifiableIntFloatMap0 = (TUnmodifiableIntFloatMap)TCollections.unmodifiableMap((TIntFloatMap) tIntFloatHashMap0);
      assertEquals("{}", tUnmodifiableIntFloatMap0.toString());
  }

  //Test case number: 87
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedSet(Lgnu/trove/set/TCharSet;)Lgnu/trove/set/TCharSet;: root-Branch
   */

  @Test
  public void test87()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap();
      TCharSet tCharSet0 = tCharShortHashMap0.keySet();
      TSynchronizedCharSet tSynchronizedCharSet0 = (TSynchronizedCharSet)TCollections.synchronizedSet(tCharSet0);
      assertEquals(true, tSynchronizedCharSet0.isEmpty());
  }

  //Test case number: 88
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableSet(Lgnu/trove/set/TIntSet;)Lgnu/trove/set/TIntSet;: root-Branch
   */

  @Test
  public void test88()  throws Throwable  {
      TLongHashSet tLongHashSet0 = new TLongHashSet((-1));
      int[] intArray0 = new int[9];
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(intArray0, tLongHashSet0._set);
      TIntSet tIntSet0 = tIntLongHashMap0.keySet();
      TUnmodifiableIntSet tUnmodifiableIntSet0 = (TUnmodifiableIntSet)TCollections.unmodifiableSet(tIntSet0);
      assertEquals(0, tUnmodifiableIntSet0.getNoEntryValue());
  }

  //Test case number: 89
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedCollection(Lgnu/trove/TDoubleCollection;Ljava/lang/Object;)Lgnu/trove/TDoubleCollection;: root-Branch
   */

  @Test
  public void test89()  throws Throwable  {
      double[] doubleArray0 = new double[10];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0, 0.0);
      TSynchronizedDoubleCollection tSynchronizedDoubleCollection0 = (TSynchronizedDoubleCollection)TCollections.synchronizedCollection(tDoubleArrayList0, "{D=D, Z=Z, Q=Q, <=<, h=h, \"=\", I=I, ^=^, \u0000=\u0000}");
      assertEquals(10, tSynchronizedDoubleCollection0.size());
  }

  //Test case number: 90
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TLongLongMap;)Lgnu/trove/map/TLongLongMap;: root-Branch
   */

  @Test
  public void test90()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(0);
      TUnmodifiableLongLongMap tUnmodifiableLongLongMap0 = (TUnmodifiableLongLongMap)TCollections.unmodifiableMap((TLongLongMap) tLongLongHashMap0);
      assertEquals(0L, tUnmodifiableLongLongMap0.getNoEntryValue());
  }

  //Test case number: 91
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TObjectFloatMap;)Lgnu/trove/map/TObjectFloatMap;: root-Branch
   */

//   @Test
//   public void test91()  throws Throwable  {
//       TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>((HashingStrategy<? super Object>) null, 0);
//       TObjectFloatMap<Object> tObjectFloatMap0 = TCollections.unmodifiableMap((TObjectFloatMap<Object>) tObjectFloatCustomHashMap0);
//       assertEquals(0.0F, tObjectFloatMap0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 92
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TByteDoubleMap;)Lgnu/trove/map/TByteDoubleMap;: root-Branch
   */

  @Test
  public void test92()  throws Throwable  {
      // Undeclared exception!
      try {
        TCollections.unmodifiableMap((TByteDoubleMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 93
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedCollection(Lgnu/trove/TShortCollection;Ljava/lang/Object;)Lgnu/trove/TShortCollection;: root-Branch
   */

  @Test
  public void test93()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList(1386);
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteArrayList0);
      TShortLinkedList tShortLinkedList0 = new TShortLinkedList((short)379);
      TSynchronizedRandomAccessShortList tSynchronizedRandomAccessShortList0 = new TSynchronizedRandomAccessShortList((TShortList) tShortLinkedList0);
      TSynchronizedShortCollection tSynchronizedShortCollection0 = (TSynchronizedShortCollection)TCollections.synchronizedCollection(tSynchronizedRandomAccessShortList0, tSynchronizedRandomAccessByteList0);
      assertEquals(0, tSynchronizedShortCollection0.size());
  }

  //Test case number: 94
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TObjectFloatMap;)Lgnu/trove/map/TObjectFloatMap;: root-Branch
   */

  @Test
  public void test94()  throws Throwable  {
      // Undeclared exception!
      try {
        TCollections.synchronizedMap((TObjectFloatMap<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 95
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TLongLongMap;)Lgnu/trove/map/TLongLongMap;: root-Branch
   */

  @Test
  public void test95()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = (TSynchronizedLongLongMap)TCollections.synchronizedMap((TLongLongMap) tLongLongHashMap0);
      assertEquals(true, tSynchronizedLongLongMap0.isEmpty());
  }

  //Test case number: 96
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TObjectDoubleMap;)Lgnu/trove/map/TObjectDoubleMap;: root-Branch
   */

  @Test
  public void test96()  throws Throwable  {
      TObjectDoubleHashMap<ArrayList<Object>> tObjectDoubleHashMap0 = new TObjectDoubleHashMap<ArrayList<Object>>();
      TObjectDoubleMap<ArrayList<Object>> tObjectDoubleMap0 = TCollections.synchronizedMap((TObjectDoubleMap<ArrayList<Object>>) tObjectDoubleHashMap0);
      assertEquals(0, tObjectDoubleMap0.size());
  }

  //Test case number: 97
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TLongByteMap;)Lgnu/trove/map/TLongByteMap;: root-Branch
   */

  @Test
  public void test97()  throws Throwable  {
      // Undeclared exception!
      try {
        TCollections.synchronizedMap((TLongByteMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 98
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TByteByteMap;)Lgnu/trove/map/TByteByteMap;: root-Branch
   */

  @Test
  public void test98()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(1926);
      TSynchronizedByteByteMap tSynchronizedByteByteMap0 = (TSynchronizedByteByteMap)TCollections.synchronizedMap((TByteByteMap) tByteByteHashMap0);
      assertEquals(0, tSynchronizedByteByteMap0.size());
  }

  //Test case number: 99
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TLongIntMap;)Lgnu/trove/map/TLongIntMap;: root-Branch
   */

  @Test
  public void test99()  throws Throwable  {
      long[] longArray0 = new long[2];
      int[] intArray0 = new int[2];
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(longArray0, intArray0);
      TUnmodifiableLongIntMap tUnmodifiableLongIntMap0 = (TUnmodifiableLongIntMap)TCollections.unmodifiableMap((TLongIntMap) tLongIntHashMap0);
      assertEquals(false, tUnmodifiableLongIntMap0.isEmpty());
  }

  //Test case number: 100
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedCollection(Lgnu/trove/TLongCollection;)Lgnu/trove/TLongCollection;: root-Branch
   */

  @Test
  public void test100()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      TSynchronizedLongCollection tSynchronizedLongCollection0 = (TSynchronizedLongCollection)TCollections.synchronizedCollection((TLongCollection) tLongArrayList0);
      assertEquals(true, tSynchronizedLongCollection0.isEmpty());
  }

  //Test case number: 101
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TFloatShortMap;)Lgnu/trove/map/TFloatShortMap;: root-Branch
   */

  @Test
  public void test101()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap();
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = (TUnmodifiableFloatShortMap)TCollections.unmodifiableMap((TFloatShortMap) tFloatShortHashMap0);
      assertEquals(true, tUnmodifiableFloatShortMap0.isEmpty());
  }

  //Test case number: 102
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TObjectIntMap;)Lgnu/trove/map/TObjectIntMap;: root-Branch
   */

  @Test
  public void test102()  throws Throwable  {
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>(0, (float) 0L);
      TObjectIntMap<Integer> tObjectIntMap0 = TCollections.synchronizedMap((TObjectIntMap<Integer>) tObjectIntHashMap0);
      assertEquals(0, tObjectIntMap0.size());
  }

  //Test case number: 103
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TByteCharMap;)Lgnu/trove/map/TByteCharMap;: root-Branch
   */

  @Test
  public void test103()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(346, (float) 346, (byte)85, 'q');
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = (TSynchronizedByteCharMap)TCollections.synchronizedMap((TByteCharMap) tByteCharHashMap0);
      assertEquals('q', tSynchronizedByteCharMap0.getNoEntryValue());
  }

  //Test case number: 104
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TByteByteMap;)Lgnu/trove/map/TByteByteMap;: root-Branch
   */

  @Test
  public void test104()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(0, (float) 0, (byte) (-61), (byte) (-61));
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = (TUnmodifiableByteByteMap)TCollections.unmodifiableMap((TByteByteMap) tByteByteHashMap0);
      assertEquals(0, tUnmodifiableByteByteMap0.size());
  }

  //Test case number: 105
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TFloatLongMap;)Lgnu/trove/map/TFloatLongMap;: root-Branch
   */

  @Test
  public void test105()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(0, (float) 52679969, 0.0F, (long) 0);
      TUnmodifiableFloatLongMap tUnmodifiableFloatLongMap0 = (TUnmodifiableFloatLongMap)TCollections.unmodifiableMap((TFloatLongMap) tFloatLongHashMap0);
      assertEquals(0, tUnmodifiableFloatLongMap0.size());
  }

  //Test case number: 106
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TByteDoubleMap;)Lgnu/trove/map/TByteDoubleMap;: root-Branch
   */

  @Test
  public void test106()  throws Throwable  {
      TByteDoubleHashMap tByteDoubleHashMap0 = new TByteDoubleHashMap(56, (-1296.8182F), (byte)101, (double) 56);
      TSynchronizedByteDoubleMap tSynchronizedByteDoubleMap0 = (TSynchronizedByteDoubleMap)TCollections.synchronizedMap((TByteDoubleMap) tByteDoubleHashMap0);
      assertEquals("{}", tSynchronizedByteDoubleMap0.toString());
  }

  //Test case number: 107
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TLongFloatMap;)Lgnu/trove/map/TLongFloatMap;: root-Branch
   */

  @Test
  public void test107()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(2024, 10.0F, (long) 2024, (float) 2024);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = (TUnmodifiableLongFloatMap)TCollections.unmodifiableMap((TLongFloatMap) tLongFloatHashMap0);
      assertEquals(true, tUnmodifiableLongFloatMap0.isEmpty());
  }

  //Test case number: 108
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableSet(Lgnu/trove/set/TCharSet;)Lgnu/trove/set/TCharSet;: root-Branch
   */

  @Test
  public void test108()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap(0, (-1136.3558F));
      TCharSet tCharSet0 = tCharCharHashMap0.keySet();
      TUnmodifiableCharSet tUnmodifiableCharSet0 = (TUnmodifiableCharSet)TCollections.unmodifiableSet(tCharSet0);
      assertEquals(true, tUnmodifiableCharSet0.isEmpty());
  }

  //Test case number: 109
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedSet(Lgnu/trove/set/TIntSet;)Lgnu/trove/set/TIntSet;: root-Branch
   */

  @Test
  public void test109()  throws Throwable  {
      TObjectFloatCustomHashMap<Integer> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Integer>();
      Set<Integer> set0 = tObjectFloatCustomHashMap0.keySet();
      TIntHashSet tIntHashSet0 = new TIntHashSet((Collection<? extends Integer>) set0);
      TSynchronizedIntSet tSynchronizedIntSet0 = (TSynchronizedIntSet)TCollections.synchronizedSet((TIntSet) tIntHashSet0);
      assertEquals(0, tSynchronizedIntSet0.getNoEntryValue());
  }

  //Test case number: 110
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TIntObjectMap;)Lgnu/trove/map/TIntObjectMap;: root-Branch
   */

  @Test
  public void test110()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>((-1609));
      TIntObjectMap<Integer> tIntObjectMap0 = TCollections.unmodifiableMap((TIntObjectMap<Integer>) tIntObjectHashMap0);
      assertEquals(0, tIntObjectMap0.getNoEntryKey());
  }

  //Test case number: 111
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TFloatCharMap;)Lgnu/trove/map/TFloatCharMap;: root-Branch
   */

  @Test
  public void test111()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap((-248), 0.0F);
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = (TUnmodifiableFloatCharMap)TCollections.unmodifiableMap((TFloatCharMap) tFloatCharHashMap0);
      assertEquals("{}", tUnmodifiableFloatCharMap0.toString());
  }

  //Test case number: 112
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TIntDoubleMap;)Lgnu/trove/map/TIntDoubleMap;: root-Branch
   */

  @Test
  public void test112()  throws Throwable  {
      TIntDoubleHashMap tIntDoubleHashMap0 = new TIntDoubleHashMap();
      TSynchronizedIntDoubleMap tSynchronizedIntDoubleMap0 = (TSynchronizedIntDoubleMap)TCollections.synchronizedMap((TIntDoubleMap) tIntDoubleHashMap0);
      assertEquals(0, tSynchronizedIntDoubleMap0.size());
  }

  //Test case number: 113
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TDoubleObjectMap;)Lgnu/trove/map/TDoubleObjectMap;: root-Branch
   */

  @Test
  public void test113()  throws Throwable  {
      TDoubleObjectHashMap<Vector<Object>> tDoubleObjectHashMap0 = new TDoubleObjectHashMap<Vector<Object>>((-747), (-747), (-747));
      TDoubleObjectMap<Vector<Object>> tDoubleObjectMap0 = TCollections.unmodifiableMap((TDoubleObjectMap<Vector<Object>>) tDoubleObjectHashMap0);
      assertEquals((-747.0), tDoubleObjectMap0.getNoEntryKey(), 0.01D);
  }

  //Test case number: 114
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedCollection(Lgnu/trove/TByteCollection;Ljava/lang/Object;)Lgnu/trove/TByteCollection;: root-Branch
   */

//   @Test
//   public void test114()  throws Throwable  {
//       TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
//       TByteCollection tByteCollection0 = tShortByteHashMap0.valueCollection();
//       TSynchronizedByteCollection tSynchronizedByteCollection0 = (TSynchronizedByteCollection)TCollections.synchronizedCollection(tByteCollection0, "{}");
//       assertEquals(0, tSynchronizedByteCollection0.getNoEntryValue());
//   }

  //Test case number: 115
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableSet(Lgnu/trove/set/TDoubleSet;)Lgnu/trove/set/TDoubleSet;: root-Branch
   */

  @Test
  public void test115()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      char[] charArray0 = new char[6];
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      TDoubleSet tDoubleSet0 = tDoubleCharHashMap0.keySet();
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet0 = (TUnmodifiableDoubleSet)TCollections.unmodifiableSet(tDoubleSet0);
      assertEquals(0.0, tUnmodifiableDoubleSet0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 116
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TIntObjectMap;)Lgnu/trove/map/TIntObjectMap;: root-Branch
   */

  @Test
  public void test116()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>((-1609));
      TIntObjectMap<Integer> tIntObjectMap0 = TCollections.synchronizedMap((TIntObjectMap<Integer>) tIntObjectHashMap0);
      assertEquals(0, tIntObjectMap0.size());
  }

  //Test case number: 117
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TShortLongMap;)Lgnu/trove/map/TShortLongMap;: root-Branch
   */

  @Test
  public void test117()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(1549, (-812.88696F));
      TSynchronizedShortLongMap tSynchronizedShortLongMap0 = (TSynchronizedShortLongMap)TCollections.synchronizedMap((TShortLongMap) tShortLongHashMap0);
      assertEquals("{}", tSynchronizedShortLongMap0.toString());
  }

  //Test case number: 118
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TFloatIntMap;)Lgnu/trove/map/TFloatIntMap;: root-Branch
   */

  @Test
  public void test118()  throws Throwable  {
      float[] floatArray0 = new float[5];
      int[] intArray0 = new int[5];
      TFloatIntHashMap tFloatIntHashMap0 = new TFloatIntHashMap(floatArray0, intArray0);
      TSynchronizedFloatIntMap tSynchronizedFloatIntMap0 = (TSynchronizedFloatIntMap)TCollections.synchronizedMap((TFloatIntMap) tFloatIntHashMap0);
      assertEquals(false, tSynchronizedFloatIntMap0.isEmpty());
  }

  //Test case number: 119
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TCharCharMap;)Lgnu/trove/map/TCharCharMap;: root-Branch
   */

  @Test
  public void test119()  throws Throwable  {
      // Undeclared exception!
      try {
        TCollections.synchronizedMap((TCharCharMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 120
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TIntCharMap;)Lgnu/trove/map/TIntCharMap;: root-Branch
   */

  @Test
  public void test120()  throws Throwable  {
      int[] intArray0 = new int[5];
      char[] charArray0 = new char[7];
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(intArray0, charArray0);
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = (TSynchronizedIntCharMap)TCollections.synchronizedMap((TIntCharMap) tIntCharHashMap0);
      assertEquals("{0=\u0000}", tSynchronizedIntCharMap0.toString());
  }

  //Test case number: 121
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TByteFloatMap;)Lgnu/trove/map/TByteFloatMap;: root-Branch
   */

//   @Test
//   public void test121()  throws Throwable  {
//       TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((int) (short) (-216));
//       TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = (TUnmodifiableByteFloatMap)TCollections.unmodifiableMap((TByteFloatMap) tByteFloatHashMap0);
//       assertEquals(0.0F, tUnmodifiableByteFloatMap0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 122
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TCharDoubleMap;)Lgnu/trove/map/TCharDoubleMap;: root-Branch
   */

  @Test
  public void test122()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(1483, (float) 1483, '+', (double) 1483);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = (TSynchronizedCharDoubleMap)TCollections.synchronizedMap((TCharDoubleMap) tCharDoubleHashMap0);
      assertEquals(0, tSynchronizedCharDoubleMap0.size());
  }

  //Test case number: 123
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TLongCharMap;)Lgnu/trove/map/TLongCharMap;: root-Branch
   */

  @Test
  public void test123()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap();
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap0 = (TUnmodifiableLongCharMap)TCollections.unmodifiableMap((TLongCharMap) tLongCharHashMap0);
      assertEquals(0, tUnmodifiableLongCharMap0.size());
  }

  //Test case number: 124
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TFloatShortMap;)Lgnu/trove/map/TFloatShortMap;: root-Branch
   */

//   @Test
//   public void test124()  throws Throwable  {
//       TShortDoubleHashMap tShortDoubleHashMap0 = new TShortDoubleHashMap(745);
//       float[] floatArray0 = new float[6];
//       TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(floatArray0, tShortDoubleHashMap0._set);
//       TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = (TSynchronizedFloatShortMap)TCollections.synchronizedMap((TFloatShortMap) tFloatShortHashMap0);
//       assertEquals(0, tSynchronizedFloatShortMap0.getNoEntryValue());
//   }

  //Test case number: 125
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedSet(Lgnu/trove/set/TShortSet;Ljava/lang/Object;)Lgnu/trove/set/TShortSet;: root-Branch
   */

  @Test
  public void test125()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(0, 1.17549435E-38F, (short)169, (-2031));
      TShortSet tShortSet0 = tShortIntHashMap0.keySet();
      TSynchronizedShortSet tSynchronizedShortSet0 = (TSynchronizedShortSet)TCollections.synchronizedSet(tShortSet0, "{}");
      assertEquals(true, tSynchronizedShortSet0.isEmpty());
  }

  //Test case number: 126
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TDoubleDoubleMap;)Lgnu/trove/map/TDoubleDoubleMap;: root-Branch
   */

  @Test
  public void test126()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      TSynchronizedDoubleDoubleMap tSynchronizedDoubleDoubleMap0 = (TSynchronizedDoubleDoubleMap)TCollections.synchronizedMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      assertEquals("{}", tSynchronizedDoubleDoubleMap0.toString());
  }

  //Test case number: 127
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TCharFloatMap;)Lgnu/trove/map/TCharFloatMap;: root-Branch
   */

//   @Test
//   public void test127()  throws Throwable  {
//       float[] floatArray0 = new float[5];
//       char[] charArray0 = new char[14];
//       TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(charArray0, floatArray0);
//       TUnmodifiableCharFloatMap tUnmodifiableCharFloatMap0 = (TUnmodifiableCharFloatMap)TCollections.unmodifiableMap((TCharFloatMap) tCharFloatHashMap0);
//       assertEquals(0.0F, tUnmodifiableCharFloatMap0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 128
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TObjectCharMap;)Lgnu/trove/map/TObjectCharMap;: root-Branch
   */

  @Test
  public void test128()  throws Throwable  {
      TObjectCharHashMap<Object> tObjectCharHashMap0 = new TObjectCharHashMap<Object>();
      TObjectCharMap<Object> tObjectCharMap0 = TCollections.unmodifiableMap((TObjectCharMap<Object>) tObjectCharHashMap0);
      assertEquals('\u0000', tObjectCharMap0.getNoEntryValue());
  }

  //Test case number: 129
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TIntByteMap;)Lgnu/trove/map/TIntByteMap;: root-Branch
   */

//   @Test
//   public void test129()  throws Throwable  {
//       TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap();
//       TUnmodifiableIntByteMap tUnmodifiableIntByteMap0 = (TUnmodifiableIntByteMap)TCollections.unmodifiableMap((TIntByteMap) tIntByteHashMap0);
//       assertEquals(0, tUnmodifiableIntByteMap0.getNoEntryValue());
//   }

  //Test case number: 130
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedCollection(Lgnu/trove/TShortCollection;)Lgnu/trove/TShortCollection;: root-Branch
   */

  @Test
  public void test130()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectShortCustomHashMap<String> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1927, (-1645.1561F));
      TShortCollection tShortCollection0 = tObjectShortCustomHashMap0.valueCollection();
      TSynchronizedShortCollection tSynchronizedShortCollection0 = (TSynchronizedShortCollection)TCollections.synchronizedCollection(tShortCollection0);
      assertEquals(true, tSynchronizedShortCollection0.isEmpty());
  }

  //Test case number: 131
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TFloatLongMap;)Lgnu/trove/map/TFloatLongMap;: root-Branch
   */

  @Test
  public void test131()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(0, (float) 52679969, 0.0F, (long) 0);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = (TSynchronizedFloatLongMap)TCollections.synchronizedMap((TFloatLongMap) tFloatLongHashMap0);
      assertEquals(0L, tSynchronizedFloatLongMap0.getNoEntryValue());
  }

  //Test case number: 132
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TByteIntMap;)Lgnu/trove/map/TByteIntMap;: root-Branch
   */

//   @Test
//   public void test132()  throws Throwable  {
//       TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(1, 1);
//       TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = (TUnmodifiableByteIntMap)TCollections.unmodifiableMap((TByteIntMap) tByteIntHashMap0);
//       assertEquals(0, tUnmodifiableByteIntMap0.getNoEntryKey());
//   }

  //Test case number: 133
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TIntShortMap;)Lgnu/trove/map/TIntShortMap;: root-Branch
   */

//   @Test
//   public void test133()  throws Throwable  {
//       TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap();
//       TSynchronizedIntShortMap tSynchronizedIntShortMap0 = (TSynchronizedIntShortMap)TCollections.synchronizedMap((TIntShortMap) tIntShortHashMap0);
//       assertEquals(0, tSynchronizedIntShortMap0.getNoEntryValue());
//   }

  //Test case number: 134
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TIntIntMap;)Lgnu/trove/map/TIntIntMap;: root-Branch
   */

  @Test
  public void test134()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap((int) (byte) (-61));
      TSynchronizedIntIntMap tSynchronizedIntIntMap0 = (TSynchronizedIntIntMap)TCollections.synchronizedMap((TIntIntMap) tIntIntHashMap0);
      assertEquals(0, tSynchronizedIntIntMap0.size());
  }

  //Test case number: 135
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedSet(Lgnu/trove/set/TFloatSet;Ljava/lang/Object;)Lgnu/trove/set/TFloatSet;: root-Branch
   */

//   @Test
//   public void test135()  throws Throwable  {
//       TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(0);
//       TFloatSet tFloatSet0 = tFloatByteHashMap0.keySet();
//       TSynchronizedFloatSet tSynchronizedFloatSet0 = (TSynchronizedFloatSet)TCollections.synchronizedSet(tFloatSet0, (Object) null);
//       assertEquals(0.0F, tSynchronizedFloatSet0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 136
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TShortCharMap;)Lgnu/trove/map/TShortCharMap;: root-Branch
   */

//   @Test
//   public void test136()  throws Throwable  {
//       TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
//       TSynchronizedShortCharMap tSynchronizedShortCharMap0 = (TSynchronizedShortCharMap)TCollections.synchronizedMap((TShortCharMap) tShortCharHashMap0);
//       assertEquals(0, tSynchronizedShortCharMap0.getNoEntryKey());
//   }

  //Test case number: 137
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TShortIntMap;)Lgnu/trove/map/TShortIntMap;: root-Branch
   */

  @Test
  public void test137()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(0, (float) 0, (short)1589, 0);
      TUnmodifiableShortIntMap tUnmodifiableShortIntMap0 = (TUnmodifiableShortIntMap)TCollections.unmodifiableMap((TShortIntMap) tShortIntHashMap0);
      assertEquals("{}", tUnmodifiableShortIntMap0.toString());
  }

  //Test case number: 138
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TIntShortMap;)Lgnu/trove/map/TIntShortMap;: root-Branch
   */

//   @Test
//   public void test138()  throws Throwable  {
//       TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((-1), (-1));
//       TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = (TUnmodifiableIntShortMap)TCollections.unmodifiableMap((TIntShortMap) tIntShortHashMap0);
//       assertEquals(0, tUnmodifiableIntShortMap0.getNoEntryValue());
//   }

  //Test case number: 139
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TCharCharMap;)Lgnu/trove/map/TCharCharMap;: root-Branch
   */

  @Test
  public void test139()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap(0);
      TUnmodifiableCharCharMap tUnmodifiableCharCharMap0 = (TUnmodifiableCharCharMap)TCollections.unmodifiableMap((TCharCharMap) tCharCharHashMap0);
      assertEquals('\u0000', tUnmodifiableCharCharMap0.getNoEntryKey());
  }

  //Test case number: 140
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableCollection(Lgnu/trove/TFloatCollection;)Lgnu/trove/TFloatCollection;: root-Branch
   */

  @Test
  public void test140()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap();
      TFloatCollection tFloatCollection0 = tCharFloatHashMap0.valueCollection();
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = (TUnmodifiableFloatCollection)TCollections.unmodifiableCollection(tFloatCollection0);
      assertEquals("{}", tUnmodifiableFloatCollection0.toString());
  }

  //Test case number: 141
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TByteShortMap;)Lgnu/trove/map/TByteShortMap;: root-Branch
   */

  @Test
  public void test141()  throws Throwable  {
      TByteShortHashMap tByteShortHashMap0 = new TByteShortHashMap();
      TUnmodifiableByteShortMap tUnmodifiableByteShortMap0 = (TUnmodifiableByteShortMap)TCollections.unmodifiableMap((TByteShortMap) tByteShortHashMap0);
      assertEquals("{}", tUnmodifiableByteShortMap0.toString());
  }

  //Test case number: 142
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableCollection(Lgnu/trove/TShortCollection;)Lgnu/trove/TShortCollection;: root-Branch
   */

  @Test
  public void test142()  throws Throwable  {
      short[] shortArray0 = new short[6];
      int[] intArray0 = new int[1];
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(shortArray0, intArray0);
      TShortSet tShortSet0 = tShortIntHashMap0.keySet();
      TUnmodifiableShortCollection tUnmodifiableShortCollection0 = (TUnmodifiableShortCollection)TCollections.unmodifiableCollection((TShortCollection) tShortSet0);
      assertEquals(false, tUnmodifiableShortCollection0.isEmpty());
  }

  //Test case number: 143
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableCollection(Lgnu/trove/TByteCollection;)Lgnu/trove/TByteCollection;: root-Branch
   */

//   @Test
//   public void test143()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList(1386);
//       TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteArrayList0);
//       TUnmodifiableByteCollection tUnmodifiableByteCollection0 = (TUnmodifiableByteCollection)TCollections.unmodifiableCollection((TByteCollection) tSynchronizedRandomAccessByteList0);
//       assertEquals(0, tUnmodifiableByteCollection0.getNoEntryValue());
//   }

  //Test case number: 144
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TIntLongMap;)Lgnu/trove/map/TIntLongMap;: root-Branch
   */

  @Test
  public void test144()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap0 = (TUnmodifiableIntLongMap)TCollections.unmodifiableMap((TIntLongMap) tIntLongHashMap0);
      assertEquals(true, tUnmodifiableIntLongMap0.isEmpty());
  }

  //Test case number: 145
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TIntIntMap;)Lgnu/trove/map/TIntIntMap;: root-Branch
   */

  @Test
  public void test145()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap((int) (byte) (-61));
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = (TUnmodifiableIntIntMap)TCollections.unmodifiableMap((TIntIntMap) tIntIntHashMap0);
      assertEquals(true, tUnmodifiableIntIntMap0.isEmpty());
  }

  //Test case number: 146
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TShortObjectMap;)Lgnu/trove/map/TShortObjectMap;: root-Branch
   */

  @Test
  public void test146()  throws Throwable  {
      TShortObjectHashMap<Object> tShortObjectHashMap0 = new TShortObjectHashMap<Object>(0, (-127.73403F), (short)0);
      TShortObjectMap<Object> tShortObjectMap0 = TCollections.synchronizedMap((TShortObjectMap<Object>) tShortObjectHashMap0);
      assertEquals(0, tShortObjectMap0.size());
  }

  //Test case number: 147
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TLongDoubleMap;)Lgnu/trove/map/TLongDoubleMap;: root-Branch
   */

  @Test
  public void test147()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(464);
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap0 = (TSynchronizedLongDoubleMap)TCollections.synchronizedMap((TLongDoubleMap) tLongDoubleHashMap0);
      assertEquals("{}", tSynchronizedLongDoubleMap0.toString());
  }

  //Test case number: 148
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TDoubleCharMap;)Lgnu/trove/map/TDoubleCharMap;: root-Branch
   */

  @Test
  public void test148()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(Integer.MAX_VALUE, Integer.MAX_VALUE);
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = (TUnmodifiableDoubleCharMap)TCollections.unmodifiableMap((TDoubleCharMap) tDoubleCharHashMap0);
      assertEquals(true, tUnmodifiableDoubleCharMap0.isEmpty());
  }

  //Test case number: 149
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TShortLongMap;)Lgnu/trove/map/TShortLongMap;: root-Branch
   */

  @Test
  public void test149()  throws Throwable  {
      TShortLongHashMap tShortLongHashMap0 = new TShortLongHashMap(1583, (-1961.3157F));
      TUnmodifiableShortLongMap tUnmodifiableShortLongMap0 = (TUnmodifiableShortLongMap)TCollections.unmodifiableMap((TShortLongMap) tShortLongHashMap0);
      assertEquals(true, tUnmodifiableShortLongMap0.isEmpty());
  }

  //Test case number: 150
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedSet(Lgnu/trove/set/TShortSet;)Lgnu/trove/set/TShortSet;: root-Branch
   */

  @Test
  public void test150()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(0, 1.17549435E-38F, (short)169, (-2031));
      TShortSet tShortSet0 = tShortIntHashMap0.keySet();
      TSynchronizedShortSet tSynchronizedShortSet0 = (TSynchronizedShortSet)TCollections.synchronizedSet(tShortSet0);
      assertEquals("{}", tSynchronizedShortSet0.toString());
  }

  //Test case number: 151
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedSet(Lgnu/trove/set/TByteSet;)Lgnu/trove/set/TByteSet;: root-Branch
   */

  @Test
  public void test151()  throws Throwable  {
      TByteHashSet tByteHashSet0 = new TByteHashSet();
      TSynchronizedByteSet tSynchronizedByteSet0 = new TSynchronizedByteSet((TByteSet) tByteHashSet0);
      TSynchronizedByteSet tSynchronizedByteSet1 = (TSynchronizedByteSet)TCollections.synchronizedSet((TByteSet) tSynchronizedByteSet0);
      assertTrue(tSynchronizedByteSet1.equals(tSynchronizedByteSet0));
  }

  //Test case number: 152
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TCharShortMap;)Lgnu/trove/map/TCharShortMap;: root-Branch
   */

  @Test
  public void test152()  throws Throwable  {
      // Undeclared exception!
      try {
        TCollections.unmodifiableMap((TCharShortMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 153
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TCharObjectMap;)Lgnu/trove/map/TCharObjectMap;: root-Branch
   */

  @Test
  public void test153()  throws Throwable  {
      TCharObjectHashMap<Stack<Integer>> tCharObjectHashMap0 = new TCharObjectHashMap<Stack<Integer>>(1466);
      TCharObjectMap<Stack<Integer>> tCharObjectMap0 = TCollections.synchronizedMap((TCharObjectMap<Stack<Integer>>) tCharObjectHashMap0);
      assertEquals(true, tCharObjectMap0.isEmpty());
  }

  //Test case number: 154
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TByteIntMap;)Lgnu/trove/map/TByteIntMap;: root-Branch
   */

//   @Test
//   public void test154()  throws Throwable  {
//       TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((int) 'Z', (float) '\u0000');
//       TSynchronizedByteIntMap tSynchronizedByteIntMap0 = (TSynchronizedByteIntMap)TCollections.synchronizedMap((TByteIntMap) tByteIntHashMap0);
//       assertEquals(0, tSynchronizedByteIntMap0.getNoEntryKey());
//   }

  //Test case number: 155
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TCharLongMap;)Lgnu/trove/map/TCharLongMap;: root-Branch
   */

  @Test
  public void test155()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(168, 168);
      TUnmodifiableCharLongMap tUnmodifiableCharLongMap0 = (TUnmodifiableCharLongMap)TCollections.unmodifiableMap((TCharLongMap) tCharLongHashMap0);
      assertEquals(true, tUnmodifiableCharLongMap0.isEmpty());
  }

  //Test case number: 156
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TFloatObjectMap;)Lgnu/trove/map/TFloatObjectMap;: root-Branch
   */

  @Test
  public void test156()  throws Throwable  {
      TFloatObjectHashMap<Integer> tFloatObjectHashMap0 = new TFloatObjectHashMap<Integer>(0, (-1332.0479F));
      TFloatObjectMap<Integer> tFloatObjectMap0 = TCollections.synchronizedMap((TFloatObjectMap<Integer>) tFloatObjectHashMap0);
      assertEquals(true, tFloatObjectMap0.isEmpty());
  }

  //Test case number: 157
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TCharByteMap;)Lgnu/trove/map/TCharByteMap;: root-Branch
   */

  @Test
  public void test157()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((int) (short)1589, (float) (short)1589, 'E', (byte)22);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = (TSynchronizedCharByteMap)TCollections.synchronizedMap((TCharByteMap) tCharByteHashMap0);
      assertEquals("{}", tSynchronizedCharByteMap0.toString());
  }

  //Test case number: 158
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TDoubleFloatMap;)Lgnu/trove/map/TDoubleFloatMap;: root-Branch
   */

//   @Test
//   public void test158()  throws Throwable  {
//       TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(0);
//       TSynchronizedDoubleFloatMap tSynchronizedDoubleFloatMap0 = (TSynchronizedDoubleFloatMap)TCollections.synchronizedMap((TDoubleFloatMap) tDoubleFloatHashMap0);
//       assertEquals(0.0F, tSynchronizedDoubleFloatMap0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 159
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TShortCharMap;)Lgnu/trove/map/TShortCharMap;: root-Branch
   */

  @Test
  public void test159()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap(2043);
      TUnmodifiableShortCharMap tUnmodifiableShortCharMap0 = (TUnmodifiableShortCharMap)TCollections.unmodifiableMap((TShortCharMap) tShortCharHashMap0);
      assertEquals("{}", tUnmodifiableShortCharMap0.toString());
  }

  //Test case number: 160
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedSet(Lgnu/trove/set/TDoubleSet;Ljava/lang/Object;)Lgnu/trove/set/TDoubleSet;: root-Branch
   */

  @Test
  public void test160()  throws Throwable  {
      TDoubleObjectHashMap<Object> tDoubleObjectHashMap0 = new TDoubleObjectHashMap<Object>(1, (-1165.0728F), (double) (-1165.0728F));
      TDoubleSet tDoubleSet0 = tDoubleObjectHashMap0.keySet();
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = (TSynchronizedDoubleSet)TCollections.synchronizedSet(tDoubleSet0, (Object) null);
      assertEquals((-1165.07275390625), tSynchronizedDoubleSet0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 161
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedSet(Lgnu/trove/set/TByteSet;Ljava/lang/Object;)Lgnu/trove/set/TByteSet;: root-Branch
   */

  @Test
  public void test161()  throws Throwable  {
      TByteHashSet tByteHashSet0 = new TByteHashSet(2024, 2024);
      TSynchronizedByteSet tSynchronizedByteSet0 = (TSynchronizedByteSet)TCollections.synchronizedSet(tByteHashSet0, "{}");
      assertEquals(true, tSynchronizedByteSet0.isEmpty());
  }

  //Test case number: 162
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedSet(Lgnu/trove/set/TLongSet;)Lgnu/trove/set/TLongSet;: root-Branch
   */

  @Test
  public void test162()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(0);
      TLongSet tLongSet0 = tLongFloatHashMap0.keySet();
      TSynchronizedLongSet tSynchronizedLongSet0 = (TSynchronizedLongSet)TCollections.synchronizedSet(tLongSet0);
      assertEquals(true, tSynchronizedLongSet0.isEmpty());
  }

  //Test case number: 163
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableSet(Lgnu/trove/set/TLongSet;)Lgnu/trove/set/TLongSet;: root-Branch
   */

  @Test
  public void test163()  throws Throwable  {
      TLongObjectHashMap<Object> tLongObjectHashMap0 = new TLongObjectHashMap<Object>((int) (byte) (-61), 1.17549435E-38F);
      TLongSet tLongSet0 = tLongObjectHashMap0.keySet();
      TUnmodifiableLongSet tUnmodifiableLongSet0 = (TUnmodifiableLongSet)TCollections.unmodifiableSet(tLongSet0);
      assertEquals(0, tUnmodifiableLongSet0.size());
  }

  //Test case number: 164
  /*
   * 2 covered goals:
   * 1 gnu.trove.TCollections.unmodifiableCollection(Lgnu/trove/TDoubleCollection;)Lgnu/trove/TDoubleCollection;: root-Branch
   * 2 gnu.trove.TCollections.synchronizedList(Lgnu/trove/list/TDoubleList;Ljava/lang/Object;)Lgnu/trove/list/TDoubleList;: I4 Branch 9 IFEQ L2180 - true
   */

  @Test
  public void test164()  throws Throwable  {
      TSynchronizedDoubleList tSynchronizedDoubleList0 = (TSynchronizedDoubleList)TCollections.synchronizedList((TDoubleList) null, "ja");
      TUnmodifiableDoubleCollection tUnmodifiableDoubleCollection0 = (TUnmodifiableDoubleCollection)TCollections.unmodifiableCollection((TDoubleCollection) tSynchronizedDoubleList0);
      assertNotNull(tUnmodifiableDoubleCollection0);
  }

  //Test case number: 165
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TShortDoubleMap;)Lgnu/trove/map/TShortDoubleMap;: root-Branch
   */

//   @Test
//   public void test165()  throws Throwable  {
//       TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(0, (-478.30603F), (-1072.0921244087683), 'M');
//       short[] shortArray0 = new short[10];
//       TShortDoubleHashMap tShortDoubleHashMap0 = new TShortDoubleHashMap(shortArray0, tDoubleCharHashMap0._set);
//       TUnmodifiableShortDoubleMap tUnmodifiableShortDoubleMap0 = (TUnmodifiableShortDoubleMap)TCollections.unmodifiableMap((TShortDoubleMap) tShortDoubleHashMap0);
//       assertEquals(0, tUnmodifiableShortDoubleMap0.getNoEntryKey());
//   }

  //Test case number: 166
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedMap(Lgnu/trove/map/TObjectShortMap;)Lgnu/trove/map/TObjectShortMap;: root-Branch
   */

  @Test
  public void test166()  throws Throwable  {
      TObjectShortHashMap<Stack<Object>> tObjectShortHashMap0 = new TObjectShortHashMap<Stack<Object>>(0, 0.0F, (short)0);
      TObjectShortMap<Stack<Object>> tObjectShortMap0 = TCollections.synchronizedMap((TObjectShortMap<Stack<Object>>) tObjectShortHashMap0);
      assertEquals(0, tObjectShortMap0.size());
  }

  //Test case number: 167
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableMap(Lgnu/trove/map/TObjectIntMap;)Lgnu/trove/map/TObjectIntMap;: root-Branch
   */

  @Test
  public void test167()  throws Throwable  {
      TObjectIntHashMap<Vector<Object>> tObjectIntHashMap0 = new TObjectIntHashMap<Vector<Object>>(345, 345);
      TObjectIntMap<Vector<Object>> tObjectIntMap0 = TCollections.unmodifiableMap((TObjectIntMap<Vector<Object>>) tObjectIntHashMap0);
      assertEquals(true, tObjectIntMap0.isEmpty());
  }

  //Test case number: 168
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableList(Lgnu/trove/list/TDoubleList;)Lgnu/trove/list/TDoubleList;: I4 Branch 1 IFEQ L369 - true
   */

  @Test
  public void test168()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      TUnmodifiableDoubleList tUnmodifiableDoubleList0 = (TUnmodifiableDoubleList)TCollections.unmodifiableList((TDoubleList) tDoubleLinkedList0);
      assertEquals(0, tUnmodifiableDoubleList0.size());
  }

  //Test case number: 169
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableList(Lgnu/trove/list/TFloatList;)Lgnu/trove/list/TFloatList;: I4 Branch 2 IFEQ L390 - true
   */

  @Test
  public void test169()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList((float) 0);
      TUnmodifiableFloatList tUnmodifiableFloatList0 = (TUnmodifiableFloatList)TCollections.unmodifiableList((TFloatList) tFloatLinkedList0);
      assertEquals(0, tUnmodifiableFloatList0.size());
  }

  //Test case number: 170
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableList(Lgnu/trove/list/TFloatList;)Lgnu/trove/list/TFloatList;: I4 Branch 2 IFEQ L390 - false
   */

  @Test
  public void test170()  throws Throwable  {
      float[] floatArray0 = new float[7];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList1 = (TUnmodifiableRandomAccessFloatList)TCollections.unmodifiableList((TFloatList) tUnmodifiableRandomAccessFloatList0);
      assertTrue(tUnmodifiableRandomAccessFloatList1.equals(tUnmodifiableRandomAccessFloatList0));
  }

  //Test case number: 171
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableList(Lgnu/trove/list/TIntList;)Lgnu/trove/list/TIntList;: I4 Branch 3 IFEQ L411 - true
   */

  @Test
  public void test171()  throws Throwable  {
      int[] intArray0 = new int[3];
      TIntArrayList tIntArrayList0 = TIntArrayList.wrap(intArray0);
      TUnmodifiableIntList tUnmodifiableIntList0 = (TUnmodifiableIntList)TCollections.unmodifiableList((TIntList) tIntArrayList0);
      assertEquals(3, tUnmodifiableIntList0.size());
  }

  //Test case number: 172
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableList(Lgnu/trove/list/TIntList;)Lgnu/trove/list/TIntList;: I4 Branch 3 IFEQ L411 - false
   */

  @Test
  public void test172()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList(0);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntLinkedList0, (Object) "{}");
      TUnmodifiableRandomAccessIntList tUnmodifiableRandomAccessIntList0 = (TUnmodifiableRandomAccessIntList)TCollections.unmodifiableList((TIntList) tSynchronizedRandomAccessIntList0);
      assertEquals("{}", tUnmodifiableRandomAccessIntList0.toString());
  }

  //Test case number: 173
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableList(Lgnu/trove/list/TLongList;)Lgnu/trove/list/TLongList;: I4 Branch 4 IFEQ L432 - true
   */

  @Test
  public void test173()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(0, 0);
      TUnmodifiableLongList tUnmodifiableLongList0 = (TUnmodifiableLongList)TCollections.unmodifiableList((TLongList) tLongArrayList0);
      assertEquals(0L, tUnmodifiableLongList0.getNoEntryValue());
  }

  //Test case number: 174
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableList(Lgnu/trove/list/TByteList;)Lgnu/trove/list/TByteList;: I4 Branch 5 IFEQ L453 - true
   */

  @Test
  public void test174()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList((byte)0);
      TSynchronizedByteList tSynchronizedByteList0 = new TSynchronizedByteList((TByteList) tByteLinkedList0);
      TUnmodifiableByteList tUnmodifiableByteList0 = (TUnmodifiableByteList)TCollections.unmodifiableList((TByteList) tSynchronizedByteList0);
      assertEquals(true, tUnmodifiableByteList0.isEmpty());
  }

  //Test case number: 175
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableList(Lgnu/trove/list/TShortList;)Lgnu/trove/list/TShortList;: I4 Branch 6 IFEQ L474 - true
   */

  @Test
  public void test175()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList();
      TUnmodifiableShortList tUnmodifiableShortList0 = (TUnmodifiableShortList)TCollections.unmodifiableList((TShortList) tShortArrayList0);
      assertEquals(true, tUnmodifiableShortList0.isEmpty());
  }

  //Test case number: 176
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableList(Lgnu/trove/list/TShortList;)Lgnu/trove/list/TShortList;: I4 Branch 6 IFEQ L474 - false
   */

  @Test
  public void test176()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList();
      TSynchronizedRandomAccessShortList tSynchronizedRandomAccessShortList0 = new TSynchronizedRandomAccessShortList((TShortList) tShortArrayList0);
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = (TUnmodifiableRandomAccessShortList)TCollections.unmodifiableList((TShortList) tSynchronizedRandomAccessShortList0);
      assertEquals("{}", tUnmodifiableRandomAccessShortList0.toString());
  }

  //Test case number: 177
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.unmodifiableList(Lgnu/trove/list/TCharList;)Lgnu/trove/list/TCharList;: I4 Branch 7 IFEQ L495 - true
   */

  @Test
  public void test177()  throws Throwable  {
      // Undeclared exception!
      try {
        TCollections.unmodifiableList((TCharList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 178
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedList(Lgnu/trove/list/TDoubleList;)Lgnu/trove/list/TDoubleList;: I4 Branch 8 IFEQ L2174 - true
   */

  @Test
  public void test178()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(917);
      TSynchronizedDoubleList tSynchronizedDoubleList0 = new TSynchronizedDoubleList((TDoubleList) tDoubleArrayList0);
      TSynchronizedDoubleList tSynchronizedDoubleList1 = (TSynchronizedDoubleList)TCollections.synchronizedList((TDoubleList) tSynchronizedDoubleList0);
      assertFalse(tSynchronizedDoubleList0.equals(tSynchronizedDoubleList1));
  }

  //Test case number: 179
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedList(Lgnu/trove/list/TFloatList;)Lgnu/trove/list/TFloatList;: I4 Branch 10 IFEQ L2211 - true
   */

  @Test
  public void test179()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TSynchronizedFloatList tSynchronizedFloatList0 = (TSynchronizedFloatList)TCollections.synchronizedList((TFloatList) tFloatLinkedList0);
      assertEquals(true, tSynchronizedFloatList0.isEmpty());
  }

  //Test case number: 180
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedList(Lgnu/trove/list/TFloatList;)Lgnu/trove/list/TFloatList;: I4 Branch 10 IFEQ L2211 - false
   */

  @Test
  public void test180()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = (TSynchronizedRandomAccessFloatList)TCollections.synchronizedList((TFloatList) tUnmodifiableRandomAccessFloatList0);
      assertEquals("{}", tSynchronizedRandomAccessFloatList0.toString());
  }

  //Test case number: 181
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedList(Lgnu/trove/list/TFloatList;Ljava/lang/Object;)Lgnu/trove/list/TFloatList;: I4 Branch 11 IFEQ L2217 - true
   */

  @Test
  public void test181()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      TSynchronizedFloatList tSynchronizedFloatList0 = (TSynchronizedFloatList)TCollections.synchronizedList(tFloatArrayList0, "{0=0}");
      assertEquals(0, tSynchronizedFloatList0.size());
  }

  //Test case number: 182
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedList(Lgnu/trove/list/TFloatList;Ljava/lang/Object;)Lgnu/trove/list/TFloatList;: I4 Branch 11 IFEQ L2217 - false
   */

//   @Test
//   public void test182()  throws Throwable  {
//       TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
//       TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
//       TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = (TSynchronizedRandomAccessFloatList)TCollections.synchronizedList(tUnmodifiableRandomAccessFloatList0, "{'=', ]=], e=e, ^=^}");
//       assertEquals(0.0F, tSynchronizedRandomAccessFloatList0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 183
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedList(Lgnu/trove/list/TIntList;)Lgnu/trove/list/TIntList;: I4 Branch 12 IFEQ L2248 - true
   */

  @Test
  public void test183()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList();
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList((TIntList) tIntArrayList0);
      TSynchronizedIntList tSynchronizedIntList0 = (TSynchronizedIntList)TCollections.synchronizedList((TIntList) tIntLinkedList0);
      assertEquals(true, tSynchronizedIntList0.isEmpty());
  }

  //Test case number: 184
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedList(Lgnu/trove/list/TIntList;Ljava/lang/Object;)Lgnu/trove/list/TIntList;: I4 Branch 13 IFEQ L2254 - true
   */

  @Test
  public void test184()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList();
      TSynchronizedIntList tSynchronizedIntList0 = (TSynchronizedIntList)TCollections.synchronizedList(tIntArrayList0, "[]");
      assertEquals("{}", tSynchronizedIntList0.toString());
  }

  //Test case number: 185
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedList(Lgnu/trove/list/TLongList;)Lgnu/trove/list/TLongList;: I4 Branch 14 IFEQ L2285 - true
   */

  @Test
  public void test185()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(1008);
      TSynchronizedLongList tSynchronizedLongList0 = (TSynchronizedLongList)TCollections.synchronizedList((TLongList) tLongArrayList0);
      assertEquals(0L, tSynchronizedLongList0.getNoEntryValue());
  }

  //Test case number: 186
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedList(Lgnu/trove/list/TLongList;Ljava/lang/Object;)Lgnu/trove/list/TLongList;: I4 Branch 15 IFEQ L2291 - true
   */

  @Test
  public void test186()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(1029);
      TSynchronizedLongList tSynchronizedLongList0 = (TSynchronizedLongList)TCollections.synchronizedList(tLongArrayList0, "CHN");
      assertEquals(true, tSynchronizedLongList0.isEmpty());
  }

  //Test case number: 187
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedList(Lgnu/trove/list/TLongList;Ljava/lang/Object;)Lgnu/trove/list/TLongList;: I4 Branch 15 IFEQ L2291 - false
   */

  @Test
  public void test187()  throws Throwable  {
      long[] longArray0 = new long[10];
      TLongArrayList tLongArrayList0 = new TLongArrayList(longArray0);
      TSynchronizedRandomAccessLongList tSynchronizedRandomAccessLongList0 = new TSynchronizedRandomAccessLongList((TLongList) tLongArrayList0, (Object) "");
      TSynchronizedRandomAccessLongList tSynchronizedRandomAccessLongList1 = (TSynchronizedRandomAccessLongList)TCollections.synchronizedList(tSynchronizedRandomAccessLongList0, "{}");
      assertEquals(0L, tSynchronizedRandomAccessLongList1.max());
  }

  //Test case number: 188
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedList(Lgnu/trove/list/TByteList;)Lgnu/trove/list/TByteList;: I4 Branch 16 IFEQ L2322 - true
   */

  @Test
  public void test188()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(0, (-478.30603F), (-1072.0921244087683), 'M');
      TByteArrayList tByteArrayList0 = new TByteArrayList(tDoubleCharHashMap0._states);
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList((TByteList) tByteArrayList0);
      TSynchronizedByteList tSynchronizedByteList0 = new TSynchronizedByteList((TByteList) tByteLinkedList0);
      TSynchronizedByteList tSynchronizedByteList1 = (TSynchronizedByteList)TCollections.synchronizedList((TByteList) tSynchronizedByteList0);
      assertFalse(tSynchronizedByteList0.equals(tSynchronizedByteList1));
  }

  //Test case number: 189
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedList(Lgnu/trove/list/TByteList;Ljava/lang/Object;)Lgnu/trove/list/TByteList;: I4 Branch 17 IFEQ L2328 - true
   */

//   @Test
//   public void test189()  throws Throwable  {
//       TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(0, (-478.30603F), (-1072.0921244087683), 'M');
//       TByteArrayList tByteArrayList0 = new TByteArrayList(tDoubleCharHashMap0._states);
//       TSynchronizedByteList tSynchronizedByteList0 = (TSynchronizedByteList)TCollections.synchronizedList(tByteArrayList0, "{}");
//       assertEquals(0, tSynchronizedByteList0.max());
//   }

  //Test case number: 190
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedList(Lgnu/trove/list/TShortList;)Lgnu/trove/list/TShortList;: I4 Branch 18 IFEQ L2359 - true
   */

  @Test
  public void test190()  throws Throwable  {
      TShortLinkedList tShortLinkedList0 = new TShortLinkedList((short)379);
      TSynchronizedRandomAccessShortList tSynchronizedRandomAccessShortList0 = new TSynchronizedRandomAccessShortList((TShortList) tShortLinkedList0);
      TSynchronizedShortList tSynchronizedShortList0 = new TSynchronizedShortList((TShortList) tSynchronizedRandomAccessShortList0);
      TSynchronizedShortList tSynchronizedShortList1 = (TSynchronizedShortList)TCollections.synchronizedList((TShortList) tSynchronizedShortList0);
      assertFalse(tSynchronizedShortList1.equals(tSynchronizedShortList0));
  }

  //Test case number: 191
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedList(Lgnu/trove/list/TShortList;)Lgnu/trove/list/TShortList;: I4 Branch 18 IFEQ L2359 - false
   */

  @Test
  public void test191()  throws Throwable  {
      TShortLinkedList tShortLinkedList0 = new TShortLinkedList((short) (byte)0);
      TSynchronizedRandomAccessShortList tSynchronizedRandomAccessShortList0 = new TSynchronizedRandomAccessShortList((TShortList) tShortLinkedList0);
      TSynchronizedRandomAccessShortList tSynchronizedRandomAccessShortList1 = (TSynchronizedRandomAccessShortList)TCollections.synchronizedList((TShortList) tSynchronizedRandomAccessShortList0);
      assertEquals(0, tSynchronizedRandomAccessShortList1.size());
  }

  //Test case number: 192
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedList(Lgnu/trove/list/TShortList;Ljava/lang/Object;)Lgnu/trove/list/TShortList;: I4 Branch 19 IFEQ L2365 - true
   */

//   @Test
//   public void test192()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList(1386);
//       TShortLinkedList tShortLinkedList0 = new TShortLinkedList((short)379);
//       TSynchronizedShortList tSynchronizedShortList0 = (TSynchronizedShortList)TCollections.synchronizedList(tShortLinkedList0, tByteArrayList0);
//       assertEquals(0, tSynchronizedShortList0.sum());
//   }

  //Test case number: 193
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedList(Lgnu/trove/list/TCharList;)Lgnu/trove/list/TCharList;: I4 Branch 20 IFEQ L2396 - true
   */

  @Test
  public void test193()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      TSynchronizedCharList tSynchronizedCharList0 = (TSynchronizedCharList)TCollections.synchronizedList((TCharList) tCharArrayList0);
      assertEquals("{}", tSynchronizedCharList0.toString());
  }

  //Test case number: 194
  /*
   * 1 covered goal:
   * 1 gnu.trove.TCollections.synchronizedList(Lgnu/trove/list/TCharList;Ljava/lang/Object;)Lgnu/trove/list/TCharList;: I4 Branch 21 IFEQ L2402 - true
   */

  @Test
  public void test194()  throws Throwable  {
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      TSynchronizedCharList tSynchronizedCharList0 = (TSynchronizedCharList)TCollections.synchronizedList(tCharLinkedList0, "{}");
      assertEquals(0, tSynchronizedCharList0.size());
  }
}

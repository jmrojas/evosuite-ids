/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TByteFunction;
import gnu.trove.map.TLongByteMap;
import gnu.trove.map.hash.TLongByteHashMap;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TLongByteProcedure;
import gnu.trove.procedure.TLongProcedure;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TLongByteHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap$TValueView.<init>(Lgnu/trove/map/hash/TLongByteHashMap;)V: root-Branch
   * 2 gnu.trove.map.hash.TLongByteHashMap.setUp(I)I: root-Branch
   * 3 gnu.trove.map.hash.TLongByteHashMap.<init>()V: root-Branch
   * 4 gnu.trove.map.hash.TLongByteHashMap.valueCollection()Lgnu/trove/TByteCollection;: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap();
      tLongByteHashMap0.valueCollection();
      assertEquals(23, tLongByteHashMap0.capacity());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap$TKeyView.<init>(Lgnu/trove/map/hash/TLongByteHashMap;)V: root-Branch
   * 2 gnu.trove.map.hash.TLongByteHashMap.keySet()Lgnu/trove/set/TLongSet;: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap();
      tLongByteHashMap0.keySet();
      assertEquals(23, tLongByteHashMap0.capacity());
  }

  //Test case number: 2
  /*
   * 15 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap$TLongByteHashIterator.value()B: root-Branch
   * 2 gnu.trove.map.hash.TLongByteHashMap$TLongByteHashIterator.advance()V: root-Branch
   * 3 gnu.trove.map.hash.TLongByteHashMap$TLongByteHashIterator.key()J: root-Branch
   * 4 gnu.trove.map.hash.TLongByteHashMap.put(JB)B: root-Branch
   * 5 gnu.trove.map.hash.TLongByteHashMap.putIfAbsent(JB)B: I9 Branch 39 IFGE L205 - true
   * 6 gnu.trove.map.hash.TLongByteHashMap.doPut(JBI)B: I12 Branch 40 IFGE L214 - true
   * 7 gnu.trove.map.hash.TLongByteHashMap.doPut(JBI)B: I41 Branch 41 IFEQ L221 - false
   * 8 gnu.trove.map.hash.TLongByteHashMap.putAll(Lgnu/trove/map/TLongByteMap;)V: I15 Branch 43 IFEQ L243 - false
   * 9 gnu.trove.map.hash.TLongByteHashMap.<init>(Lgnu/trove/map/TLongByteMap;)V: I40 Branch 35 IFEQ L139 - true
   * 10 gnu.trove.map.hash.TLongByteHashMap.<init>(Lgnu/trove/map/TLongByteMap;)V: I52 Branch 36 IFEQ L143 - true
   * 11 gnu.trove.map.hash.TLongByteHashMap$TLongByteHashIterator.<init>(Lgnu/trove/map/hash/TLongByteHashMap;Lgnu/trove/map/hash/TLongByteHashMap;)V: root-Branch
   * 12 gnu.trove.map.hash.TLongByteHashMap.iterator()Lgnu/trove/iterator/TLongByteIterator;: root-Branch
   * 13 gnu.trove.map.hash.TLongByteHashMap.<init>(I)V: root-Branch
   * 14 gnu.trove.map.hash.TLongByteHashMap.<init>(Lgnu/trove/map/TLongByteMap;)V: I10 Branch 34 IFEQ L133 - false
   * 15 gnu.trove.map.hash.TLongByteHashMap.putAll(Lgnu/trove/map/TLongByteMap;)V: I15 Branch 43 IFEQ L243 - true
   */

  @Test
  public void test2()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap((-175));
      tLongByteHashMap0.putIfAbsent(0L, (byte)0);
      TLongByteHashMap tLongByteHashMap1 = new TLongByteHashMap((TLongByteMap) tLongByteHashMap0);
      assertEquals(1, tLongByteHashMap0.size());
      assertEquals("{0=0}", tLongByteHashMap0.toString());
  }

  //Test case number: 3
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.removeAt(I)V: root-Branch
   * 2 gnu.trove.map.hash.TLongByteHashMap.<init>([J[B)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 3 gnu.trove.map.hash.TLongByteHashMap.<init>([J[B)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 4 gnu.trove.map.hash.TLongByteHashMap.doPut(JBI)B: I12 Branch 40 IFGE L214 - false
   * 5 gnu.trove.map.hash.TLongByteHashMap.doPut(JBI)B: I41 Branch 41 IFEQ L221 - true
   * 6 gnu.trove.map.hash.TLongByteHashMap.remove(J)B: I14 Branch 46 IFLT L276 - false
   */

  @Test
  public void test3()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap();
      TLongByteHashMap tLongByteHashMap1 = new TLongByteHashMap(tLongByteHashMap0._set, tLongByteHashMap0._states);
      assertEquals(false, tLongByteHashMap1.isEmpty());
      
      byte byte0 = tLongByteHashMap1.remove(0L);
      assertEquals(true, tLongByteHashMap1.isEmpty());
      assertEquals((byte)0, byte0);
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.clear()V: root-Branch
   * 2 gnu.trove.map.hash.TLongByteHashMap.<init>(IF)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(0, (float) 0L);
      tLongByteHashMap0.clear();
      assertEquals("{}", tLongByteHashMap0.toString());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongByteHashMap.forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap();
      boolean boolean0 = tLongByteHashMap0.forEachKey((TLongProcedure) null);
      assertEquals(true, boolean0);
      assertEquals(23, tLongByteHashMap0.capacity());
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.increment(J)Z: root-Branch
   * 2 gnu.trove.map.hash.TLongByteHashMap.adjustValue(JB)Z: I9 Branch 71 IFGE L477 - false
   */

  @Test
  public void test6()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap((-175));
      boolean boolean0 = tLongByteHashMap0.increment(0L);
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongByteHashMap.containsKey(J)Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap((-175));
      boolean boolean0 = tLongByteHashMap0.containsKey((long) (-175));
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.<init>(Lgnu/trove/map/TLongByteMap;)V: I40 Branch 35 IFEQ L139 - false
   * 2 gnu.trove.map.hash.TLongByteHashMap.<init>(Lgnu/trove/map/TLongByteMap;)V: I52 Branch 36 IFEQ L143 - false
   * 3 gnu.trove.map.hash.TLongByteHashMap.<init>(Lgnu/trove/map/TLongByteMap;)V: I10 Branch 34 IFEQ L133 - false
   * 4 gnu.trove.map.hash.TLongByteHashMap.<init>(IFJB)V: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(73467739, 0.0F, (-169L), (byte)71);
      TLongByteHashMap tLongByteHashMap1 = null;
      try {
        tLongByteHashMap1 = new TLongByteHashMap((TLongByteMap) tLongByteHashMap0);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongByteHashMap.putIfAbsent(JB)B: I9 Branch 39 IFGE L205 - false
   */

  @Test
  public void test9()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap((-632), 1.0F, (long) (-632), (byte) (-120));
      tLongByteHashMap0.put((long) (-632), (byte)73);
      byte byte0 = tLongByteHashMap0.putIfAbsent((long) (-632), (byte) (-120));
      assertEquals(false, tLongByteHashMap0.isEmpty());
      assertEquals((byte)73, byte0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongByteHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - true
   */

  @Test
  public void test10()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap((-561), (float) 1344393353, (long) (-561), (byte)48);
      HashMap<Long, Byte> hashMap0 = new HashMap<Long, Byte>();
      tLongByteHashMap0.putAll((Map<? extends Long, ? extends Byte>) hashMap0);
      assertEquals(true, tLongByteHashMap0.isEmpty());
  }

  //Test case number: 11
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - false
   * 2 gnu.trove.map.hash.TLongByteHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 3 gnu.trove.map.hash.TLongByteHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 4 gnu.trove.map.hash.TLongByteHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   */

  @Test
  public void test11()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap((-718), (-718));
      HashMap<Long, Byte> hashMap0 = new HashMap<Long, Byte>();
      hashMap0.put((Long) null, (Byte) (byte)85);
      // Undeclared exception!
      try {
        tLongByteHashMap0.putAll((Map<? extends Long, ? extends Byte>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.get(J)B: I9 Branch 44 IFGE L253 - true
   * 2 gnu.trove.map.hash.TLongByteHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 3 gnu.trove.map.hash.TLongByteHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 4 gnu.trove.map.hash.TLongByteHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 5 gnu.trove.map.hash.TLongByteHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 6 gnu.trove.map.hash.TLongByteHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 7 gnu.trove.map.hash.TLongByteHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 8 gnu.trove.map.hash.TLongByteHashMap.equals(Ljava/lang/Object;)Z: I84 Branch 78 IF_ICMPEQ L1200 - true
   */

  @Test
  public void test12()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap();
      tLongByteHashMap0.put((-1489L), (byte)1);
      boolean boolean0 = tLongByteHashMap0.equals((Object) tLongByteHashMap0);
      assertEquals(false, tLongByteHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongByteHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - true
   */

  @Test
  public void test13()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap();
      tLongByteHashMap0.put((-1489L), (byte)1);
      boolean boolean0 = tLongByteHashMap0.isEmpty();
      assertEquals(1, tLongByteHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongByteHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - false
   */

  @Test
  public void test14()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap();
      boolean boolean0 = tLongByteHashMap0.isEmpty();
      assertEquals(true, boolean0);
      assertEquals(23, tLongByteHashMap0.capacity());
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongByteHashMap.remove(J)B: I14 Branch 46 IFLT L276 - true
   */

  @Test
  public void test15()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(111, 111);
      byte byte0 = tLongByteHashMap0.remove((long) (byte)91);
      assertEquals(true, tLongByteHashMap0.isEmpty());
      assertEquals((byte)0, byte0);
  }

  //Test case number: 16
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.keys()[J: I34 Branch 48 IF_ICMPNE L304 - false
   * 2 gnu.trove.map.hash.TLongByteHashMap.adjustOrPutValue(JBB)B: I9 Branch 72 IFGE L491 - true
   * 3 gnu.trove.map.hash.TLongByteHashMap.adjustOrPutValue(JBB)B: I59 Branch 73 IFEQ L502 - false
   * 4 gnu.trove.map.hash.TLongByteHashMap.keys()[J: I27 Branch 47 IFLE L303 - true
   * 5 gnu.trove.map.hash.TLongByteHashMap.keys()[J: I27 Branch 47 IFLE L303 - false
   * 6 gnu.trove.map.hash.TLongByteHashMap.keys()[J: I34 Branch 48 IF_ICMPNE L304 - true
   */

  @Test
  public void test16()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(111, 111);
      tLongByteHashMap0.adjustOrPutValue((long) 111, (byte)94, (byte)94);
      tLongByteHashMap0.keys();
      assertEquals(false, tLongByteHashMap0.isEmpty());
      assertEquals("{111=94}", tLongByteHashMap0.toString());
  }

  //Test case number: 17
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.keys([J)[J: I10 Branch 49 IF_ICMPGE L315 - true
   * 2 gnu.trove.map.hash.TLongByteHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - true
   * 3 gnu.trove.map.hash.TLongByteHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - false
   * 4 gnu.trove.map.hash.TLongByteHashMap.keys([J)[J: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test17()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap((-175));
      long[] longArray0 = tLongByteHashMap0.keys(tLongByteHashMap0._set);
      assertNotNull(longArray0);
  }

  //Test case number: 18
  /*
   * 16 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.keys([J)[J: I10 Branch 49 IF_ICMPGE L315 - false
   * 2 gnu.trove.map.hash.TLongByteHashMap.keys([J)[J: I44 Branch 51 IF_ICMPNE L323 - false
   * 3 gnu.trove.map.hash.TLongByteHashMap$TLongByteHashIterator.<init>(Lgnu/trove/map/hash/TLongByteHashMap;Lgnu/trove/map/hash/TLongByteHashMap;)V: root-Branch
   * 4 gnu.trove.map.hash.TLongByteHashMap$TLongByteHashIterator.value()B: root-Branch
   * 5 gnu.trove.map.hash.TLongByteHashMap$TLongByteHashIterator.advance()V: root-Branch
   * 6 gnu.trove.map.hash.TLongByteHashMap$TLongByteHashIterator.key()J: root-Branch
   * 7 gnu.trove.map.hash.TLongByteHashMap.iterator()Lgnu/trove/iterator/TLongByteIterator;: root-Branch
   * 8 gnu.trove.map.hash.TLongByteHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 9 gnu.trove.map.hash.TLongByteHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 10 gnu.trove.map.hash.TLongByteHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 11 gnu.trove.map.hash.TLongByteHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 12 gnu.trove.map.hash.TLongByteHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - true
   * 13 gnu.trove.map.hash.TLongByteHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - false
   * 14 gnu.trove.map.hash.TLongByteHashMap.keys([J)[J: I44 Branch 51 IF_ICMPNE L323 - true
   * 15 gnu.trove.map.hash.TLongByteHashMap.putAll(Lgnu/trove/map/TLongByteMap;)V: I15 Branch 43 IFEQ L243 - true
   * 16 gnu.trove.map.hash.TLongByteHashMap.putAll(Lgnu/trove/map/TLongByteMap;)V: I15 Branch 43 IFEQ L243 - false
   */

  @Test
  public void test18()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap((-630));
      long[] longArray0 = new long[1];
      tLongByteHashMap0.adjustOrPutValue((long) (-630), (byte) (-77), (byte) (-77));
      TLongByteHashMap tLongByteHashMap1 = new TLongByteHashMap(longArray0, tLongByteHashMap0._states);
      tLongByteHashMap0.putAll((TLongByteMap) tLongByteHashMap1);
      tLongByteHashMap0.keys(longArray0);
      assertEquals(5, tLongByteHashMap0.capacity());
      assertEquals("{-630=-77, 0=0}", tLongByteHashMap0.toString());
  }

  //Test case number: 19
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.values()[B: I34 Branch 53 IF_ICMPNE L344 - false
   * 2 gnu.trove.map.hash.TLongByteHashMap.values()[B: I27 Branch 52 IFLE L343 - true
   * 3 gnu.trove.map.hash.TLongByteHashMap.values()[B: I27 Branch 52 IFLE L343 - false
   * 4 gnu.trove.map.hash.TLongByteHashMap.values()[B: I34 Branch 53 IF_ICMPNE L344 - true
   */

  @Test
  public void test19()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap((-175));
      tLongByteHashMap0.putIfAbsent(0L, (byte)0);
      tLongByteHashMap0.values();
      assertEquals(false, tLongByteHashMap0.isEmpty());
      assertEquals("{0=0}", tLongByteHashMap0.toString());
  }

  //Test case number: 20
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.values([B)[B: I10 Branch 54 IF_ICMPGE L355 - true
   * 2 gnu.trove.map.hash.TLongByteHashMap.values([B)[B: I37 Branch 55 IFLE L362 - true
   * 3 gnu.trove.map.hash.TLongByteHashMap.values([B)[B: I37 Branch 55 IFLE L362 - false
   * 4 gnu.trove.map.hash.TLongByteHashMap.values([B)[B: I44 Branch 56 IF_ICMPNE L363 - true
   */

  @Test
  public void test20()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap((-175));
      byte[] byteArray0 = tLongByteHashMap0.values(tLongByteHashMap0._states);
      assertNotNull(byteArray0);
  }

  //Test case number: 21
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.values([B)[B: I10 Branch 54 IF_ICMPGE L355 - false
   * 2 gnu.trove.map.hash.TLongByteHashMap.values([B)[B: I44 Branch 56 IF_ICMPNE L363 - false
   * 3 gnu.trove.map.hash.TLongByteHashMap.<init>(IFJB)V: root-Branch
   * 4 gnu.trove.map.hash.TLongByteHashMap.values([B)[B: I37 Branch 55 IFLE L362 - true
   * 5 gnu.trove.map.hash.TLongByteHashMap.values([B)[B: I37 Branch 55 IFLE L362 - false
   * 6 gnu.trove.map.hash.TLongByteHashMap.values([B)[B: I44 Branch 56 IF_ICMPNE L363 - true
   * 7 gnu.trove.map.hash.TLongByteHashMap.values()[B: I27 Branch 52 IFLE L343 - true
   * 8 gnu.trove.map.hash.TLongByteHashMap.values()[B: I27 Branch 52 IFLE L343 - false
   * 9 gnu.trove.map.hash.TLongByteHashMap.values()[B: I34 Branch 53 IF_ICMPNE L344 - true
   */

  @Test
  public void test21()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap((-632), 1.0F, (long) (-632), (byte) (-120));
      TLongByteHashMap tLongByteHashMap1 = new TLongByteHashMap();
      tLongByteHashMap0.put((long) (-632), (byte)73);
      byte[] byteArray0 = tLongByteHashMap1.values();
      tLongByteHashMap0.values(byteArray0);
      assertEquals(false, tLongByteHashMap0.isEmpty());
      assertEquals("{-632=73}", tLongByteHashMap0.toString());
  }

  //Test case number: 22
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.containsValue(B)Z: I25 Branch 58 IF_ICMPNE L377 - false
   * 2 gnu.trove.map.hash.TLongByteHashMap.containsValue(B)Z: I30 Branch 59 IF_ICMPNE L377 - false
   * 3 gnu.trove.map.hash.TLongByteHashMap.containsValue(B)Z: I18 Branch 57 IFLE L376 - false
   * 4 gnu.trove.map.hash.TLongByteHashMap.containsValue(B)Z: I25 Branch 58 IF_ICMPNE L377 - true
   */

  @Test
  public void test22()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap((-175));
      tLongByteHashMap0.putIfAbsent(0L, (byte)0);
      boolean boolean0 = tLongByteHashMap0.containsValue((byte)0);
      assertEquals("{0=0}", tLongByteHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.containsValue(B)Z: I30 Branch 59 IF_ICMPNE L377 - true
   * 2 gnu.trove.map.hash.TLongByteHashMap.containsValue(B)Z: I18 Branch 57 IFLE L376 - true
   * 3 gnu.trove.map.hash.TLongByteHashMap.containsValue(B)Z: I18 Branch 57 IFLE L376 - false
   * 4 gnu.trove.map.hash.TLongByteHashMap.containsValue(B)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 5 gnu.trove.map.hash.TLongByteHashMap.containsValue(B)Z: I25 Branch 58 IF_ICMPNE L377 - false
   */

  @Test
  public void test23()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(111, 111);
      tLongByteHashMap0.adjustOrPutValue((long) 111, (byte)94, (byte)94);
      boolean boolean0 = tLongByteHashMap0.containsValue((byte)0);
      assertEquals(1, tLongByteHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 24
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: I18 Branch 60 IFLE L407 - true
   * 2 gnu.trove.map.hash.TLongByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TLongByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test24()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap();
      boolean boolean0 = tLongByteHashMap0.forEachValue((TByteProcedure) null);
      assertEquals(true, boolean0);
      assertEquals(23, tLongByteHashMap0.capacity());
  }

  //Test case number: 25
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - false
   * 2 gnu.trove.map.hash.TLongByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TLongByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test25()  throws Throwable  {
      long[] longArray0 = new long[5];
      byte[] byteArray0 = new byte[7];
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(longArray0, byteArray0);
      // Undeclared exception!
      try {
        tLongByteHashMap0.forEachValue((TByteProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V: I18 Branch 66 IFLE L434 - true
   * 2 gnu.trove.map.hash.TLongByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V: I18 Branch 66 IFLE L434 - false
   * 3 gnu.trove.map.hash.TLongByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test26()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap();
      tLongByteHashMap0.transformValues((TByteFunction) null);
      assertEquals(23, tLongByteHashMap0.capacity());
  }

  //Test case number: 27
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V: I25 Branch 67 IF_ICMPNE L435 - false
   * 2 gnu.trove.map.hash.TLongByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V: I18 Branch 66 IFLE L434 - false
   * 3 gnu.trove.map.hash.TLongByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test27()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap();
      tLongByteHashMap0.put(2L, (byte)0);
      // Undeclared exception!
      try {
        tLongByteHashMap0.transformValues((TByteFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.retainEntries(Lgnu/trove/procedure/TLongByteProcedure;)Z: I31 Branch 68 IFLE L453 - true
   * 2 gnu.trove.map.hash.TLongByteHashMap.retainEntries(Lgnu/trove/procedure/TLongByteProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TLongByteHashMap.retainEntries(Lgnu/trove/procedure/TLongByteProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test28()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap();
      boolean boolean0 = tLongByteHashMap0.retainEntries((TLongByteProcedure) null);
      assertEquals(23, tLongByteHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 29
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.retainEntries(Lgnu/trove/procedure/TLongByteProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - false
   * 2 gnu.trove.map.hash.TLongByteHashMap.retainEntries(Lgnu/trove/procedure/TLongByteProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TLongByteHashMap.retainEntries(Lgnu/trove/procedure/TLongByteProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test29()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap((-175));
      tLongByteHashMap0.putIfAbsent(0L, (byte)0);
      // Undeclared exception!
      try {
        tLongByteHashMap0.retainEntries((TLongByteProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 30
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.adjustValue(JB)Z: I9 Branch 71 IFGE L477 - true
   * 2 gnu.trove.map.hash.TLongByteHashMap.increment(J)Z: root-Branch
   * 3 gnu.trove.map.hash.TLongByteHashMap.<init>(I)V: root-Branch
   * 4 gnu.trove.map.hash.TLongByteHashMap.putIfAbsent(JB)B: I9 Branch 39 IFGE L205 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap((-175));
      tLongByteHashMap0.putIfAbsent(0L, (byte)0);
      boolean boolean0 = tLongByteHashMap0.increment(0L);
      assertEquals(1, tLongByteHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 31
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.adjustOrPutValue(JBB)B: I9 Branch 72 IFGE L491 - false
   * 2 gnu.trove.map.hash.TLongByteHashMap.adjustOrPutValue(JBB)B: I59 Branch 73 IFEQ L502 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(111, 111);
      tLongByteHashMap0.adjustOrPutValue((long) 111, (byte)94, (byte)94);
      byte byte0 = tLongByteHashMap0.adjustOrPutValue((long) 111, (byte)91, (byte)91);
      assertEquals(false, tLongByteHashMap0.isEmpty());
      assertEquals((byte) (-71), byte0);
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongByteHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - false
   */

  @Test
  public void test32()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap();
      boolean boolean0 = tLongByteHashMap0.equals((Object) "0");
      assertEquals(false, boolean0);
      assertEquals(23, tLongByteHashMap0.capacity());
  }

  //Test case number: 33
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongByteHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - false
   */

  @Test
  public void test33()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap();
      TLongByteHashMap tLongByteHashMap1 = new TLongByteHashMap(tLongByteHashMap0._set, tLongByteHashMap0._states);
      boolean boolean0 = tLongByteHashMap0.equals((Object) tLongByteHashMap1);
      assertEquals(23, tLongByteHashMap0.capacity());
      assertFalse(tLongByteHashMap1.equals(tLongByteHashMap0));
      assertEquals(1, tLongByteHashMap1.size());
      assertEquals(false, boolean0);
      assertEquals("{0=0}", tLongByteHashMap1.toString());
  }

  //Test case number: 34
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.equals(Ljava/lang/Object;)Z: I84 Branch 78 IF_ICMPEQ L1200 - false
   * 2 gnu.trove.map.hash.TLongByteHashMap.equals(Ljava/lang/Object;)Z: I87 Branch 79 IF_ICMPEQ L1200 - false
   * 3 gnu.trove.map.hash.TLongByteHashMap.equals(Ljava/lang/Object;)Z: I90 Branch 80 IF_ICMPEQ L1200 - true
   * 4 gnu.trove.map.hash.TLongByteHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 5 gnu.trove.map.hash.TLongByteHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 6 gnu.trove.map.hash.TLongByteHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 7 gnu.trove.map.hash.TLongByteHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 8 gnu.trove.map.hash.TLongByteHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 9 gnu.trove.map.hash.TLongByteHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 10 gnu.trove.map.hash.TLongByteHashMap.get(J)B: I9 Branch 44 IFGE L253 - false
   */

  @Test
  public void test34()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap();
      TLongByteHashMap tLongByteHashMap1 = new TLongByteHashMap(tLongByteHashMap0._set, tLongByteHashMap0._states);
      tLongByteHashMap0.adjustOrPutValue(480L, (byte)100, (byte)53);
      boolean boolean0 = tLongByteHashMap0.equals((Object) tLongByteHashMap1);
      assertEquals(1, tLongByteHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 35
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 2 gnu.trove.map.hash.TLongByteHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 3 gnu.trove.map.hash.TLongByteHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   * 4 gnu.trove.map.hash.TLongByteHashMap.<init>()V: root-Branch
   */

  @Test
  public void test35()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap();
      int int0 = tLongByteHashMap0.hashCode();
      assertEquals(23, tLongByteHashMap0.capacity());
      assertEquals(0, int0);
  }

  //Test case number: 36
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - false
   * 2 gnu.trove.map.hash.TLongByteHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 3 gnu.trove.map.hash.TLongByteHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 4 gnu.trove.map.hash.TLongByteHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   */

  @Test
  public void test36()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(111, 111);
      tLongByteHashMap0.adjustOrPutValue((long) 111, (byte)94, (byte)94);
      int int0 = tLongByteHashMap0.hashCode();
      assertEquals(false, tLongByteHashMap0.isEmpty());
      assertEquals(49, int0);
  }

  //Test case number: 37
  /*
   * 16 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap$1.execute(JB)Z: I4 Branch 115 IFEQ L1233 - true
   * 2 gnu.trove.map.hash.TLongByteHashMap$1.<init>(Lgnu/trove/map/hash/TLongByteHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 3 gnu.trove.map.hash.TLongByteHashMap$1.execute(JB)Z: I4 Branch 115 IFEQ L1233 - false
   * 4 gnu.trove.map.hash.TLongByteHashMap.toString()Ljava/lang/String;: root-Branch
   * 5 gnu.trove.map.hash.TLongByteHashMap.put(JB)B: root-Branch
   * 6 gnu.trove.map.hash.TLongByteHashMap.doPut(JBI)B: I12 Branch 40 IFGE L214 - true
   * 7 gnu.trove.map.hash.TLongByteHashMap.doPut(JBI)B: I12 Branch 40 IFGE L214 - false
   * 8 gnu.trove.map.hash.TLongByteHashMap.doPut(JBI)B: I41 Branch 41 IFEQ L221 - true
   * 9 gnu.trove.map.hash.TLongByteHashMap.doPut(JBI)B: I41 Branch 41 IFEQ L221 - false
   * 10 gnu.trove.map.hash.TLongByteHashMap.forEachEntry(Lgnu/trove/procedure/TLongByteProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 11 gnu.trove.map.hash.TLongByteHashMap.forEachEntry(Lgnu/trove/procedure/TLongByteProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 12 gnu.trove.map.hash.TLongByteHashMap.forEachEntry(Lgnu/trove/procedure/TLongByteProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 13 gnu.trove.map.hash.TLongByteHashMap.forEachEntry(Lgnu/trove/procedure/TLongByteProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 14 gnu.trove.map.hash.TLongByteHashMap.forEachEntry(Lgnu/trove/procedure/TLongByteProcedure;)Z: I39 Branch 65 IFNE L422 - true
   * 15 gnu.trove.map.hash.TLongByteHashMap.<init>([J[B)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 16 gnu.trove.map.hash.TLongByteHashMap.<init>([J[B)V: I24 Branch 33 IF_ICMPGE L119 - false
   */

  @Test
  public void test37()  throws Throwable  {
      long[] longArray0 = new long[5];
      byte[] byteArray0 = new byte[7];
      longArray0[4] = 5L;
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(longArray0, byteArray0);
      String string0 = tLongByteHashMap0.toString();
      assertEquals(17, tLongByteHashMap0.capacity());
      assertEquals("{5=0, 0=0}", string0);
      assertNotNull(string0);
      assertEquals(2, tLongByteHashMap0.size());
  }

  //Test case number: 38
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TLongByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - false
   * 2 gnu.trove.map.hash.TLongByteHashMap.setUp(I)I: root-Branch
   * 3 gnu.trove.map.hash.TLongByteHashMap.<init>(IF)V: root-Branch
   * 4 gnu.trove.map.hash.TLongByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - true
   * 5 gnu.trove.map.hash.TLongByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - false
   * 6 gnu.trove.map.hash.TLongByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - true
   * 7 gnu.trove.map.hash.TLongByteHashMap.adjustOrPutValue(JBB)B: I9 Branch 72 IFGE L491 - true
   * 8 gnu.trove.map.hash.TLongByteHashMap.adjustOrPutValue(JBB)B: I59 Branch 73 IFEQ L502 - false
   */

  @Test
  public void test38()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(111, 111);
      tLongByteHashMap0.adjustOrPutValue((long) 111, (byte)94, (byte)94);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((int) (byte)94);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tLongByteHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(false, tLongByteHashMap0.isEmpty());
      assertEquals("{111=94}", tLongByteHashMap0.toString());
  }
}

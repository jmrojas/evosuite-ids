/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TLongFunction;
import gnu.trove.impl.sync.TSynchronizedByteLongMap;
import gnu.trove.impl.sync.TSynchronizedByteSet;
import gnu.trove.impl.sync.TSynchronizedLongCollection;
import gnu.trove.map.TByteLongMap;
import gnu.trove.map.hash.TByteLongHashMap;
import gnu.trove.procedure.TByteLongProcedure;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TLongProcedure;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedByteLongMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.adjustValue(BJ)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedByteLongMap.<init>(Lgnu/trove/map/TByteLongMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      boolean boolean0 = tSynchronizedByteLongMap0.adjustValue((byte) (-6), (byte) (-6));
      assertEquals(false, boolean0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.forEachEntry(Lgnu/trove/procedure/TByteLongProcedure;)Z: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      boolean boolean0 = tSynchronizedByteLongMap0.forEachEntry((TByteLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      String string0 = tSynchronizedByteLongMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.putAll(Lgnu/trove/map/TByteLongMap;)V: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedByteLongMap.size()I: root-Branch
   * 3 gnu.trove.impl.sync.TSynchronizedByteLongMap.iterator()Lgnu/trove/iterator/TByteLongIterator;: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      tSynchronizedByteLongMap0.putAll((TByteLongMap) tSynchronizedByteLongMap0);
      assertEquals(0, tSynchronizedByteLongMap0.size());
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.get(B)J: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      long long0 = tSynchronizedByteLongMap0.get((byte) (-6));
      assertEquals(0L, long0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.values()[J: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      long[] longArray0 = tSynchronizedByteLongMap0.values();
      assertNotNull(longArray0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.getNoEntryKey()B: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      byte byte0 = tSynchronizedByteLongMap0.getNoEntryKey();
      assertEquals((byte)0, byte0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.<init>(Lgnu/trove/map/TByteLongMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(1743, (float) 1743, (byte) (-91), (long) (byte) (-91));
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0, (Object) 1743);
      assertEquals((-91L), tSynchronizedByteLongMap0.getNoEntryValue());
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.transformValues(Lgnu/trove/function/TLongFunction;)V: root-Branch
   */

//   @Test
//   public void test8()  throws Throwable  {
//       TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(1743, (float) 1743, (byte) (-91), (long) (byte) (-91));
//       TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
//       tSynchronizedByteLongMap0.transformValues((TLongFunction) null);
//       assertEquals(-91, tSynchronizedByteLongMap0.getNoEntryKey());
//   }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.values([J)[J: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(0);
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      long[] longArray0 = new long[6];
      long[] longArray1 = tSynchronizedByteLongMap0.values(longArray0);
      assertSame(longArray0, longArray1);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.clear()V: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(0);
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      tSynchronizedByteLongMap0.clear();
      assertEquals(0, tSynchronizedByteLongMap0.size());
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.containsValue(J)Z: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      boolean boolean0 = tSynchronizedByteLongMap0.containsValue((long) (byte)126);
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(1743, (float) 1743, (byte) (-91), (long) (byte) (-91));
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      boolean boolean0 = tSynchronizedByteLongMap0.forEachKey((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.increment(B)Z: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      boolean boolean0 = tSynchronizedByteLongMap0.increment((byte)126);
      assertEquals(false, boolean0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.retainEntries(Lgnu/trove/procedure/TByteLongProcedure;)Z: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      boolean boolean0 = tSynchronizedByteLongMap0.retainEntries((TByteLongProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.containsKey(B)Z: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      boolean boolean0 = tSynchronizedByteLongMap0.containsKey((byte)50);
      assertEquals(false, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.keys([B)[B: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(1743, (float) 1743, (byte) (-91), (long) (byte) (-91));
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      byte[] byteArray0 = tSynchronizedByteLongMap0.keys(tByteLongHashMap0._set);
      assertNotNull(byteArray0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.getNoEntryValue()J: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      long long0 = tSynchronizedByteLongMap0.getNoEntryValue();
      assertEquals(0L, long0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      boolean boolean0 = tSynchronizedByteLongMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.hashCode()I: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(0);
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      int int0 = tSynchronizedByteLongMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      // Undeclared exception!
      try {
        tSynchronizedByteLongMap0.putAll((Map<? extends Byte, ? extends Long>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      boolean boolean0 = tSynchronizedByteLongMap0.equals((Object) tByteLongHashMap0);
      assertEquals(true, boolean0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.put(BJ)J: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      tSynchronizedByteLongMap0.put((byte) (-6), (byte) (-6));
      assertEquals(false, tByteLongHashMap0.isEmpty());
      assertEquals("{-6=-6}", tSynchronizedByteLongMap0.toString());
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      boolean boolean0 = tSynchronizedByteLongMap0.forEachValue((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.remove(B)J: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      long long0 = tSynchronizedByteLongMap0.remove((byte) (-6));
      assertEquals(0L, long0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.keys()[B: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      byte[] byteArray0 = tSynchronizedByteLongMap0.keys();
      assertNotNull(byteArray0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.putIfAbsent(BJ)J: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      tSynchronizedByteLongMap0.putIfAbsent((byte) (-6), 0L);
      assertEquals(1, tByteLongHashMap0.size());
      assertEquals("{-6=0}", tSynchronizedByteLongMap0.toString());
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.adjustOrPutValue(BJJ)J: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(1743, (float) 1743, (byte) (-91), (long) (byte) (-91));
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      long long0 = tSynchronizedByteLongMap0.adjustOrPutValue((byte) (-91), (long) (byte) (-91), (long) 1743);
      assertEquals(false, tByteLongHashMap0.isEmpty());
      assertEquals(1743L, long0);
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.<init>(Lgnu/trove/map/TByteLongMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = null;
      try {
        tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.keySet()Lgnu/trove/set/TByteSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedByteLongMap.keySet()Lgnu/trove/set/TByteSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      TSynchronizedByteSet tSynchronizedByteSet0 = (TSynchronizedByteSet)tSynchronizedByteLongMap0.keySet();
      assertNotNull(tSynchronizedByteSet0);
      
      TSynchronizedByteSet tSynchronizedByteSet1 = (TSynchronizedByteSet)tSynchronizedByteLongMap0.keySet();
      assertSame(tSynchronizedByteSet1, tSynchronizedByteSet0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteLongMap.valueCollection()Lgnu/trove/TLongCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 gnu.trove.impl.sync.TSynchronizedByteLongMap.valueCollection()Lgnu/trove/TLongCollection;: I11 Branch 3 IFNONNULL L121 - false
   * 3 gnu.trove.impl.sync.TSynchronizedByteLongMap.<init>(Lgnu/trove/map/TByteLongMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      TSynchronizedByteLongMap tSynchronizedByteLongMap0 = new TSynchronizedByteLongMap((TByteLongMap) tByteLongHashMap0);
      TSynchronizedLongCollection tSynchronizedLongCollection0 = (TSynchronizedLongCollection)tSynchronizedByteLongMap0.valueCollection();
      assertNotNull(tSynchronizedLongCollection0);
      
      TSynchronizedLongCollection tSynchronizedLongCollection1 = (TSynchronizedLongCollection)tSynchronizedByteLongMap0.valueCollection();
      assertSame(tSynchronizedLongCollection1, tSynchronizedLongCollection0);
  }
}

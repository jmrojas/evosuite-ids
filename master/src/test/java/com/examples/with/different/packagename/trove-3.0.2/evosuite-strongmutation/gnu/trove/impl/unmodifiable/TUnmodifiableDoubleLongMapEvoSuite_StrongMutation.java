/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongCollection;
import gnu.trove.map.TDoubleLongMap;
import gnu.trove.map.hash.TDoubleLongHashMap;
import gnu.trove.procedure.TDoubleLongProcedure;
import gnu.trove.procedure.TDoubleProcedure;
import gnu.trove.procedure.TLongProcedure;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableDoubleLongMapEvoSuite_StrongMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 6 covered goals:
   * 1 Strong Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.isEmpty()Z:64 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.isEmpty()Z: root-Branch
   * 3 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.<init>(Lgnu/trove/map/TDoubleLongMap;)V:58 - ReplaceComparisonOperator != null -> = null
   * 4 Strong Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.isEmpty()Z:64 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 5 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.<init>(Lgnu/trove/map/TDoubleLongMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      double[] doubleArray0 = new double[5];
      doubleArray0[1] = 1048.7741861120185;
      tUnmodifiableDoubleLongMap0.isEmpty();
      doubleArray0[1] = 0.0;
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   */

  @Test
  public void test1()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      boolean boolean0 = tUnmodifiableDoubleLongMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 Strong Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.containsKey(D)Z:65 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.containsKey(D)Z: root-Branch
   * 3 Strong Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.containsKey(D)Z:65 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   */

  @Test
  public void test2()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(1);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 38.976569861702025;
      tUnmodifiableDoubleLongMap0.containsKey(670.0786811043279);
      doubleArray0[0] = 1754.75612390009;
  }

  //Test case number: 3
  /*
   * 4 covered goals:
   * 1 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.containsKey(D)Z:65 - DeleteStatement: containsKey(D)Z
   * 2 Strong Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.containsKey(D)Z:65 - InsertUnaryOp Negation of key
   * 3 Strong Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.containsKey(D)Z:65 - InsertUnaryOp Negation of key
   * 4 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.containsKey(D)Z:65 - DeleteStatement: containsKey(D)Z
   */

  @Test
  public void test3()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[1] = (double) (-1203);
      long[] longArray0 = new long[9];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      boolean boolean0 = tUnmodifiableDoubleLongMap0.containsKey((-1203.0));
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 4 covered goals:
   * 1 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.containsValue(J)Z:66 - InsertUnaryOp Negation of val
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.containsValue(J)Z: root-Branch
   * 3 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.containsValue(J)Z:66 - InsertUnaryOp Negation of val
   * 4 Strong Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.containsValue(J)Z:66 - DeleteStatement: containsValue(J)Z
   */

  @Test
  public void test4()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      long[] longArray0 = new long[5];
      longArray0[4] = 649L;
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      boolean boolean0 = tUnmodifiableDoubleLongMap0.containsValue(649L);
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.containsValue(J)Z:66 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 2 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.containsValue(J)Z:66 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   */

  @Test
  public void test5()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[2] = (-1.0);
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(925, (float) 925, 943.4721698149319, 0L);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      tUnmodifiableDoubleLongMap0.containsValue(1303L);
      doubleArray0[2] = (double) (-1933L);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 Strong Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.containsValue(J)Z:66 - DeleteStatement: containsValue(J)Z
   */

  @Test
  public void test6()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      long[] longArray0 = new long[4];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      boolean boolean0 = tUnmodifiableDoubleLongMap0.containsValue(0L);
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 3 covered goals:
   * 1 Strong Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.get(D)J:67 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.get(D)J: root-Branch
   * 3 Strong Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.get(D)J:67 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   */

  @Test
  public void test7()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(1);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 38.976569861702025;
      tUnmodifiableDoubleLongMap0.get((-1.0));
      doubleArray0[0] = 1754.75612390009;
  }

  //Test case number: 8
  /*
   * 4 covered goals:
   * 1 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.get(D)J:67 - InsertUnaryOp Negation of key
   * 2 Strong Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.get(D)J:67 - DeleteStatement: get(D)J
   * 3 Strong Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.get(D)J:67 - DeleteStatement: get(D)J
   * 4 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.get(D)J:67 - InsertUnaryOp Negation of key
   */

  @Test
  public void test8()  throws Throwable  {
      double[] doubleArray0 = new double[10];
      doubleArray0[8] = (double) (-1);
      long[] longArray0 = new long[9];
      longArray0[8] = (long) (-1);
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      long long0 = tUnmodifiableDoubleLongMap0.get((double) (-1L));
      assertEquals((-1L), long0);
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 Strong Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.keys()[D:83 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 2 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.keys()[D:83 - DeleteStatement: keys()[D
   * 3 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.keys()[D:83 - DeleteStatement: keys()[D
   * 4 Strong Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.keys()[D:83 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.keys()[D: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      double[] doubleArray0 = tUnmodifiableDoubleLongMap0.keys();
      assertNotNull(doubleArray0);
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.keys([D)[D:84 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 2 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.keys([D)[D:84 - DeleteStatement: keys([D)[D
   * 3 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.keys([D)[D:84 - DeleteStatement: keys([D)[D
   * 4 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.keys([D)[D:84 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.keys([D)[D: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      double[] doubleArray0 = tUnmodifiableDoubleLongMap0.keys(tDoubleLongHashMap0._set);
      assertNotNull(doubleArray0);
  }

  //Test case number: 11
  /*
   * 5 covered goals:
   * 1 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.values()[J:91 - DeleteStatement: values()[J
   * 2 Strong Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.values()[J:91 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 3 Strong Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.values()[J:91 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 4 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.values()[J:91 - DeleteStatement: values()[J
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.values()[J: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      long[] longArray0 = tUnmodifiableDoubleLongMap0.values();
      assertNotNull(longArray0);
  }

  //Test case number: 12
  /*
   * 5 covered goals:
   * 1 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.values([J)[J:92 - DeleteStatement: values([J)[J
   * 2 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.values([J)[J:92 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 3 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.values([J)[J:92 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 4 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.values([J)[J:92 - DeleteStatement: values([J)[J
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.values([J)[J: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap((-1163), (-1163));
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      long[] longArray0 = new long[2];
      long[] longArray1 = tUnmodifiableDoubleLongMap0.values(longArray0);
      assertSame(longArray1, longArray0);
  }

  //Test case number: 13
  /*
   * 7 covered goals:
   * 1 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.equals(Ljava/lang/Object;)Z:94 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 2 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 3 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.equals(Ljava/lang/Object;)Z:94 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 4 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   * 5 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   */

  @Test
  public void test13()  throws Throwable  {
      long[] longArray0 = new long[9];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(8963, 0.0F);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      longArray0[6] = (long) 8963;
      tUnmodifiableDoubleLongMap0.equals((Object) null);
      longArray0[6] = (long) 121;
  }

  //Test case number: 14
  /*
   * 2 covered goals:
   * 1 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 2 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   */

  @Test
  public void test14()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap((-1163), (-1163));
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap1 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      boolean boolean0 = tUnmodifiableDoubleLongMap1.equals((Object) null);
      assertTrue(tUnmodifiableDoubleLongMap1.equals(tUnmodifiableDoubleLongMap0));
      assertEquals(false, boolean0);
  }

  //Test case number: 15
  /*
   * 3 covered goals:
   * 1 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 2 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 3 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   */

  @Test
  public void test15()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap((-1163), (-1163));
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      boolean boolean0 = tUnmodifiableDoubleLongMap0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 16
  /*
   * 3 covered goals:
   * 1 Strong Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.hashCode()I:95 - DeleteStatement: hashCode()I
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.hashCode()I: root-Branch
   * 3 Strong Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.hashCode()I:95 - DeleteStatement: hashCode()I
   */

  @Test
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[1] = (double) (-1203);
      long[] longArray0 = new long[9];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      int int0 = tUnmodifiableDoubleLongMap0.hashCode();
      assertEquals((-1064121344), int0);
  }

  //Test case number: 17
  /*
   * 2 covered goals:
   * 1 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.hashCode()I:95 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 2 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.hashCode()I:95 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   */

  @Test
  public void test17()  throws Throwable  {
      long[] longArray0 = new long[9];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(8963, (float) 8963L, 8963.0, 1252L);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      longArray0[6] = (long) 625;
      tUnmodifiableDoubleLongMap0.hashCode();
      longArray0[6] = (long) 8963;
  }

  //Test case number: 18
  /*
   * 5 covered goals:
   * 1 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 2 Strong Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 3 Strong Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 4 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap((-1825));
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      String string0 = tUnmodifiableDoubleLongMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 19
  /*
   * 3 covered goals:
   * 1 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.getNoEntryKey()D:97 - DeleteStatement: getNoEntryKey()D
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.getNoEntryKey()D: root-Branch
   * 3 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.getNoEntryKey()D:97 - DeleteStatement: getNoEntryKey()D
   */

  @Test
  public void test19()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap((-1), 240.72429F, 1.0, (long) (-1));
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      double double0 = tUnmodifiableDoubleLongMap0.getNoEntryKey();
      assertEquals(1.0, double0, 0.01D);
  }

  //Test case number: 20
  /*
   * 2 covered goals:
   * 1 Strong Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.getNoEntryKey()D:97 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 2 Strong Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.getNoEntryKey()D:97 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   */

  @Test
  public void test20()  throws Throwable  {
      long[] longArray0 = new long[9];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(8963, 0.0F);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      longArray0[6] = (long) 8963;
      tUnmodifiableDoubleLongMap0.getNoEntryKey();
      longArray0[6] = (long) 121;
  }

  //Test case number: 21
  /*
   * 3 covered goals:
   * 1 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.getNoEntryValue()J:98 - DeleteStatement: getNoEntryValue()J
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.getNoEntryValue()J: root-Branch
   * 3 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.getNoEntryValue()J:98 - DeleteStatement: getNoEntryValue()J
   */

  @Test
  public void test21()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      tUnmodifiableDoubleLongMap0.getNoEntryValue();
      TDoubleLongHashMap tDoubleLongHashMap1 = new TDoubleLongHashMap((-1203), (-1203), (-1203), (-1203));
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap1 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap1);
      assertEquals((-1203L), tUnmodifiableDoubleLongMap1.getNoEntryValue());
  }

  //Test case number: 22
  /*
   * 2 covered goals:
   * 1 Strong Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.getNoEntryValue()J:98 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 2 Strong Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.getNoEntryValue()J:98 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   */

  @Test
  public void test22()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap((-1217));
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      long[] longArray0 = new long[4];
      longArray0[0] = (long) (-1217);
      tUnmodifiableDoubleLongMap0.getNoEntryValue();
      longArray0[0] = (long) 0;
  }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.forEachKey(Lgnu/trove/procedure/TDoubleProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TDoubleProcedure;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.forEachKey(Lgnu/trove/procedure/TDoubleProcedure;)Z: root-Branch
   * 3 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.forEachKey(Lgnu/trove/procedure/TDoubleProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TDoubleProcedure;)Z
   */

  @Test
  public void test23()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(1);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      boolean boolean0 = tUnmodifiableDoubleLongMap0.forEachKey((TDoubleProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 5 covered goals:
   * 1 Strong Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:104 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 2 Strong Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z
   * 3 Strong Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z
   * 4 Strong Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:104 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[2] = (-1.0);
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(925, (float) 925, 943.4721698149319, 0L);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      tUnmodifiableDoubleLongMap0.forEachValue((TLongProcedure) null);
      doubleArray0[2] = (double) (-1933L);
  }

  //Test case number: 25
  /*
   * 5 covered goals:
   * 1 Strong Mutation 60: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.forEachEntry(Lgnu/trove/procedure/TDoubleLongProcedure;)Z:107 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 2 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.forEachEntry(Lgnu/trove/procedure/TDoubleLongProcedure;)Z:107 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TDoubleLongProcedure;)Z
   * 3 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.forEachEntry(Lgnu/trove/procedure/TDoubleLongProcedure;)Z:107 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TDoubleLongProcedure;)Z
   * 4 Strong Mutation 60: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.forEachEntry(Lgnu/trove/procedure/TDoubleLongProcedure;)Z:107 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.forEachEntry(Lgnu/trove/procedure/TDoubleLongProcedure;)Z: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap((-1217));
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      long[] longArray0 = new long[4];
      longArray0[0] = (long) (-1217);
      tUnmodifiableDoubleLongMap0.forEachEntry((TDoubleLongProcedure) null);
      longArray0[0] = (long) 0;
  }

  //Test case number: 26
  /*
   * 19 covered goals:
   * 1 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap$1.value()J:115 - DeleteStatement: value()J
   * 2 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap$1.key()D:114 - DeleteStatement: key()D
   * 3 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap$1.key()D:114 - DeleteField: iterLgnu/trove/iterator/TDoubleLongIterator;
   * 4 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap$1.key()D:114 - DeleteStatement: key()D
   * 5 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap$1.value()J:115 - DeleteField: iterLgnu/trove/iterator/TDoubleLongIterator;
   * 6 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap$1.value()J:115 - DeleteStatement: value()J
   * 7 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TDoubleLongIterator;
   * 8 Strong Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap$1.advance()V:116 - DeleteStatement: advance()V
   * 9 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TDoubleLongIterator;
   * 10 Strong Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 11 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.size()I:63 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 12 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.size()I:63 - DeleteStatement: size()I
   * 13 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.iterator()Lgnu/trove/iterator/TDoubleLongIterator;: root-Branch
   * 14 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.size()I: root-Branch
   * 15 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableDoubleLongMap;)V: root-Branch
   * 16 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap$1.value()J: root-Branch
   * 17 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap$1.advance()V: root-Branch
   * 18 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap$1.key()D: root-Branch
   * 19 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap$1.hasNext()Z: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 38.976569861702025;
      long[] longArray0 = new long[3];
      longArray0[0] = (-1L);
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      TDoubleLongHashMap tDoubleLongHashMap1 = new TDoubleLongHashMap((TDoubleLongMap) tUnmodifiableDoubleLongMap0);
      assertEquals("{0.0=0, 38.976569861702025=-1}", tDoubleLongHashMap1.toString());
  }

  //Test case number: 27
  /*
   * 8 covered goals:
   * 1 Strong Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 2 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap$1.key()D:114 - DeleteField: iterLgnu/trove/iterator/TDoubleLongIterator;
   * 3 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap$1.value()J:115 - DeleteField: iterLgnu/trove/iterator/TDoubleLongIterator;
   * 4 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TDoubleLongIterator;
   * 5 Strong Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap$1.advance()V:116 - DeleteStatement: advance()V
   * 6 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TDoubleLongIterator;
   * 7 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.size()I:63 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 8 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.size()I:63 - DeleteStatement: size()I
   */

  @Test
  public void test27()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(1);
      long[] longArray0 = new long[3];
      TDoubleLongHashMap tDoubleLongHashMap1 = new TDoubleLongHashMap(tDoubleLongHashMap0._set, longArray0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap1);
      TDoubleLongHashMap tDoubleLongHashMap2 = new TDoubleLongHashMap((TDoubleLongMap) tUnmodifiableDoubleLongMap0);
      assertEquals(1, tUnmodifiableDoubleLongMap0.size());
      assertEquals("{0.0=0}", tDoubleLongHashMap2.toString());
  }

  //Test case number: 28
  /*
   * 12 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.keySet()Lgnu/trove/set/TDoubleSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 Strong Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.keySet()Lgnu/trove/set/TDoubleSet;:79 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.keySet()Lgnu/trove/set/TDoubleSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TDoubleSet;
   * 4 Strong Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.keySet()Lgnu/trove/set/TDoubleSet;:80 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 5 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.keySet()Lgnu/trove/set/TDoubleSet;:81 - DeleteField: keySetLgnu/trove/set/TDoubleSet;
   * 6 Strong Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.keySet()Lgnu/trove/set/TDoubleSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TDoubleSet;)Lgnu/trove/set/TDoubleSet;
   * 7 Strong Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.keySet()Lgnu/trove/set/TDoubleSet;:79 - ReplaceComparisonOperator != null -> = null
   * 8 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.keySet()Lgnu/trove/set/TDoubleSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TDoubleSet;
   * 9 Strong Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.keySet()Lgnu/trove/set/TDoubleSet;:80 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 10 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.keySet()Lgnu/trove/set/TDoubleSet;:81 - DeleteField: keySetLgnu/trove/set/TDoubleSet;
   * 11 Strong Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.keySet()Lgnu/trove/set/TDoubleSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TDoubleSet;)Lgnu/trove/set/TDoubleSet;
   * 12 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.keySet()Lgnu/trove/set/TDoubleSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet0 = (TUnmodifiableDoubleSet)tUnmodifiableDoubleLongMap0.keySet();
      assertNotNull(tUnmodifiableDoubleSet0);
      
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet1 = (TUnmodifiableDoubleSet)tUnmodifiableDoubleLongMap0.keySet();
      assertSame(tUnmodifiableDoubleSet1, tUnmodifiableDoubleSet0);
  }

  //Test case number: 29
  /*
   * 13 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.valueCollection()Lgnu/trove/TLongCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.<init>(Lgnu/trove/map/TDoubleLongMap;)V:58 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.valueCollection()Lgnu/trove/TLongCollection;:88 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 4 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.valueCollection()Lgnu/trove/TLongCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TLongCollection;
   * 5 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.valueCollection()Lgnu/trove/TLongCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 6 Strong Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.valueCollection()Lgnu/trove/TLongCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TLongCollection;)Lgnu/trove/TLongCollection;
   * 7 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.valueCollection()Lgnu/trove/TLongCollection;:89 - DeleteField: valuesLgnu/trove/TLongCollection;
   * 8 Strong Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.valueCollection()Lgnu/trove/TLongCollection;:88 - DeleteField: mLgnu/trove/map/TDoubleLongMap;
   * 9 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.valueCollection()Lgnu/trove/TLongCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TLongCollection;
   * 10 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.valueCollection()Lgnu/trove/TLongCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 11 Strong Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.valueCollection()Lgnu/trove/TLongCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TLongCollection;)Lgnu/trove/TLongCollection;
   * 12 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.valueCollection()Lgnu/trove/TLongCollection;:89 - DeleteField: valuesLgnu/trove/TLongCollection;
   * 13 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap.valueCollection()Lgnu/trove/TLongCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap((-928));
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      TUnmodifiableLongCollection tUnmodifiableLongCollection0 = (TUnmodifiableLongCollection)tUnmodifiableDoubleLongMap0.valueCollection();
      assertNotNull(tUnmodifiableLongCollection0);
      
      TUnmodifiableLongCollection tUnmodifiableLongCollection1 = (TUnmodifiableLongCollection)tUnmodifiableDoubleLongMap0.valueCollection();
      assertSame(tUnmodifiableLongCollection1, tUnmodifiableLongCollection0);
  }
}

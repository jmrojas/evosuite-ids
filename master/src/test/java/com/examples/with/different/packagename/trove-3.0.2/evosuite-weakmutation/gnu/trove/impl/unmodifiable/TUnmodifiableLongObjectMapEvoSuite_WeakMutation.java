/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongSet;
import gnu.trove.map.TLongObjectMap;
import gnu.trove.map.hash.TLongObjectHashMap;
import gnu.trove.procedure.TLongProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import java.util.Collection;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableLongObjectMapEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 7 covered goals:
   * 1 Weak Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.isEmpty()Z:59 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 2 Weak Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.isEmpty()Z:59 - DeleteStatement: isEmpty()Z
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.isEmpty()Z: root-Branch
   * 4 Weak Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.<init>(Lgnu/trove/map/TLongObjectMap;)V:53 - ReplaceComparisonOperator != null -> = null
   * 5 Weak Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.isEmpty()Z:59 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 6 Weak Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.isEmpty()Z:59 - DeleteStatement: isEmpty()Z
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.<init>(Lgnu/trove/map/TLongObjectMap;)V: I17 Branch 1 IFNONNULL L53 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TLongObjectHashMap<String> tLongObjectHashMap0 = new TLongObjectHashMap<String>();
      TUnmodifiableLongObjectMap<String> tUnmodifiableLongObjectMap0 = new TUnmodifiableLongObjectMap<String>((TLongObjectMap<String>) tLongObjectHashMap0);
      boolean boolean0 = tUnmodifiableLongObjectMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 7 covered goals:
   * 1 Weak Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.containsKey(J)Z:60 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 2 Weak Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.containsKey(J)Z:60 - InsertUnaryOp Negation of key
   * 3 Weak Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.containsKey(J)Z:60 - DeleteStatement: containsKey(J)Z
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.containsKey(J)Z: root-Branch
   * 5 Weak Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.containsKey(J)Z:60 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 6 Weak Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.containsKey(J)Z:60 - InsertUnaryOp Negation of key
   * 7 Weak Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.containsKey(J)Z:60 - DeleteStatement: containsKey(J)Z
   */

  @Test
  public void test1()  throws Throwable  {
      TLongObjectHashMap<Long> tLongObjectHashMap0 = new TLongObjectHashMap<Long>((-1113));
      TUnmodifiableLongObjectMap<Long> tUnmodifiableLongObjectMap0 = new TUnmodifiableLongObjectMap<Long>((TLongObjectMap<Long>) tLongObjectHashMap0);
      boolean boolean0 = tUnmodifiableLongObjectMap0.containsKey((long) (-1113));
      assertEquals(false, boolean0);
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * 1 Weak Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.containsValue(Ljava/lang/Object;)Z:61 - DeleteStatement: containsValue(Ljava/lang/Object;)Z
   * 2 Weak Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.containsValue(Ljava/lang/Object;)Z:61 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.containsValue(Ljava/lang/Object;)Z: root-Branch
   * 4 Weak Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.containsValue(Ljava/lang/Object;)Z:61 - DeleteStatement: containsValue(Ljava/lang/Object;)Z
   * 5 Weak Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.containsValue(Ljava/lang/Object;)Z:61 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   */

  @Test
  public void test2()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>();
      TUnmodifiableLongObjectMap<Integer> tUnmodifiableLongObjectMap0 = new TUnmodifiableLongObjectMap<Integer>((TLongObjectMap<Integer>) tLongObjectHashMap0);
      boolean boolean0 = tUnmodifiableLongObjectMap0.containsValue((Object) ":");
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 7 covered goals:
   * 1 Weak Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.get(J)Ljava/lang/Object;:62 - InsertUnaryOp Negation of key
   * 2 Weak Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.get(J)Ljava/lang/Object;:62 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 3 Weak Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.get(J)Ljava/lang/Object;:62 - DeleteStatement: get(J)Ljava/lang/Object;
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.get(J)Ljava/lang/Object;: root-Branch
   * 5 Weak Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.get(J)Ljava/lang/Object;:62 - InsertUnaryOp Negation of key
   * 6 Weak Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.get(J)Ljava/lang/Object;:62 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 7 Weak Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.get(J)Ljava/lang/Object;:62 - DeleteStatement: get(J)Ljava/lang/Object;
   */

  @Test
  public void test3()  throws Throwable  {
      TLongObjectHashMap<Long> tLongObjectHashMap0 = new TLongObjectHashMap<Long>((-1113));
      TUnmodifiableLongObjectMap<Long> tUnmodifiableLongObjectMap0 = new TUnmodifiableLongObjectMap<Long>((TLongObjectMap<Long>) tLongObjectHashMap0);
      tUnmodifiableLongObjectMap0.get((long) (-1113));
  }

  //Test case number: 4
  /*
   * 14 covered goals:
   * 1 Weak Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keySet()Lgnu/trove/set/TLongSet;:74 - DeleteField: keySetLgnu/trove/set/TLongSet;
   * 2 Weak Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keySet()Lgnu/trove/set/TLongSet;:74 - ReplaceComparisonOperator != null -> = null
   * 3 Weak Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keySet()Lgnu/trove/set/TLongSet;:75 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 4 Weak Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keySet()Lgnu/trove/set/TLongSet;:75 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TLongSet;)Lgnu/trove/set/TLongSet;
   * 5 Weak Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keySet()Lgnu/trove/set/TLongSet;:75 - DeleteStatement: keySet()Lgnu/trove/set/TLongSet;
   * 6 Weak Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keySet()Lgnu/trove/set/TLongSet;:76 - DeleteField: keySetLgnu/trove/set/TLongSet;
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keySet()Lgnu/trove/set/TLongSet;: I4 Branch 2 IFNONNULL L74 - true
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keySet()Lgnu/trove/set/TLongSet;: I4 Branch 2 IFNONNULL L74 - false
   * 9 Weak Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keySet()Lgnu/trove/set/TLongSet;:74 - DeleteField: keySetLgnu/trove/set/TLongSet;
   * 10 Weak Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keySet()Lgnu/trove/set/TLongSet;:75 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 11 Weak Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keySet()Lgnu/trove/set/TLongSet;:74 - ReplaceComparisonOperator != null -> = null
   * 12 Weak Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keySet()Lgnu/trove/set/TLongSet;:75 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TLongSet;)Lgnu/trove/set/TLongSet;
   * 13 Weak Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keySet()Lgnu/trove/set/TLongSet;:75 - DeleteStatement: keySet()Lgnu/trove/set/TLongSet;
   * 14 Weak Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keySet()Lgnu/trove/set/TLongSet;:76 - DeleteField: keySetLgnu/trove/set/TLongSet;
   */

  @Test
  public void test4()  throws Throwable  {
      TLongObjectHashMap<Long> tLongObjectHashMap0 = new TLongObjectHashMap<Long>(2, 2, 2);
      TUnmodifiableLongObjectMap<Long> tUnmodifiableLongObjectMap0 = new TUnmodifiableLongObjectMap<Long>((TLongObjectMap<Long>) tLongObjectHashMap0);
      TUnmodifiableLongSet tUnmodifiableLongSet0 = (TUnmodifiableLongSet)tUnmodifiableLongObjectMap0.keySet();
      assertNotNull(tUnmodifiableLongSet0);
      
      TUnmodifiableLongSet tUnmodifiableLongSet1 = (TUnmodifiableLongSet)tUnmodifiableLongObjectMap0.keySet();
      assertSame(tUnmodifiableLongSet1, tUnmodifiableLongSet0);
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 Weak Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keys()[J:78 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 2 Weak Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keys()[J:78 - DeleteStatement: keys()[J
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keys()[J: root-Branch
   * 4 Weak Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keys()[J:78 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 5 Weak Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keys()[J:78 - DeleteStatement: keys()[J
   */

  @Test
  public void test5()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>((-1113));
      TUnmodifiableLongObjectMap<Integer> tUnmodifiableLongObjectMap0 = new TUnmodifiableLongObjectMap<Integer>((TLongObjectMap<Integer>) tLongObjectHashMap0);
      long[] longArray0 = tUnmodifiableLongObjectMap0.keys();
      assertNotNull(longArray0);
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 Weak Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keys([J)[J:79 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 2 Weak Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keys([J)[J:79 - DeleteStatement: keys([J)[J
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keys([J)[J: root-Branch
   * 4 Weak Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keys([J)[J:79 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 5 Weak Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.keys([J)[J:79 - DeleteStatement: keys([J)[J
   */

  @Test
  public void test6()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>((-1));
      TUnmodifiableLongObjectMap<Integer> tUnmodifiableLongObjectMap0 = new TUnmodifiableLongObjectMap<Integer>((TLongObjectMap<Integer>) tLongObjectHashMap0);
      long[] longArray0 = tUnmodifiableLongObjectMap0.keys(tLongObjectHashMap0._set);
      assertNotNull(longArray0);
  }

  //Test case number: 7
  /*
   * 27 covered goals:
   * 1 Weak Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.valueCollection()Ljava/util/Collection;:82 - DeleteField: valuesLjava/util/Collection;
   * 2 Weak Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.valueCollection()Ljava/util/Collection;:82 - ReplaceComparisonOperator != null -> = null
   * 3 Weak Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.valueCollection()Ljava/util/Collection;:83 - DeleteStatement: valueCollection()Ljava/util/Collection;
   * 4 Weak Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.valueCollection()Ljava/util/Collection;:83 - DeleteStatement: unmodifiableCollection(Ljava/util/Collection;)Ljava/util/Collection;
   * 5 Weak Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.valueCollection()Ljava/util/Collection;:83 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 6 Weak Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.valueCollection()Ljava/util/Collection;:84 - DeleteField: valuesLjava/util/Collection;
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.valueCollection()Ljava/util/Collection;: I4 Branch 3 IFNONNULL L82 - true
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.valueCollection()Ljava/util/Collection;: I4 Branch 3 IFNONNULL L82 - false
   * 9 Weak Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.getNoEntryKey()J:92 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 10 Weak Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.getNoEntryKey()J:92 - DeleteStatement: getNoEntryKey()J
   * 11 Weak Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.forEachEntry(Lgnu/trove/procedure/TLongObjectProcedure;)Z:101 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TLongObjectProcedure;)Z
   * 12 Weak Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.forEachEntry(Lgnu/trove/procedure/TLongObjectProcedure;)Z:101 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 13 Weak Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.size()I:58 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 14 Weak Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.size()I:58 - DeleteStatement: size()I
   * 15 Weak Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.valueCollection()Ljava/util/Collection;:82 - DeleteField: valuesLjava/util/Collection;
   * 16 Weak Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.valueCollection()Ljava/util/Collection;:83 - DeleteStatement: valueCollection()Ljava/util/Collection;
   * 17 Weak Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.valueCollection()Ljava/util/Collection;:83 - DeleteStatement: unmodifiableCollection(Ljava/util/Collection;)Ljava/util/Collection;
   * 18 Weak Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.valueCollection()Ljava/util/Collection;:82 - ReplaceComparisonOperator != null -> = null
   * 19 Weak Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.valueCollection()Ljava/util/Collection;:83 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 20 Weak Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.valueCollection()Ljava/util/Collection;:84 - DeleteField: valuesLjava/util/Collection;
   * 21 Weak Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.getNoEntryKey()J:92 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 22 Weak Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.getNoEntryKey()J:92 - DeleteStatement: getNoEntryKey()J
   * 23 Weak Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.forEachEntry(Lgnu/trove/procedure/TLongObjectProcedure;)Z:101 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TLongObjectProcedure;)Z
   * 24 Weak Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.forEachEntry(Lgnu/trove/procedure/TLongObjectProcedure;)Z:101 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 25 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.size()I: root-Branch
   * 26 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.getNoEntryKey()J: root-Branch
   * 27 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.forEachEntry(Lgnu/trove/procedure/TLongObjectProcedure;)Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TLongObjectHashMap<Long> tLongObjectHashMap0 = new TLongObjectHashMap<Long>((-1113));
      TUnmodifiableLongObjectMap<Long> tUnmodifiableLongObjectMap0 = new TUnmodifiableLongObjectMap<Long>((TLongObjectMap<Long>) tLongObjectHashMap0);
      TLongObjectHashMap<Object> tLongObjectHashMap1 = new TLongObjectHashMap<Object>((TLongObjectMap<?>) tUnmodifiableLongObjectMap0);
      TUnmodifiableLongObjectMap<Object> tUnmodifiableLongObjectMap1 = new TUnmodifiableLongObjectMap<Object>((TLongObjectMap<Object>) tLongObjectHashMap1);
      Collection<Object> collection0 = tUnmodifiableLongObjectMap1.valueCollection();
      assertNotNull(collection0);
      
      Collection<Object> collection1 = tUnmodifiableLongObjectMap1.valueCollection();
      assertSame(collection1, collection0);
  }

  //Test case number: 8
  /*
   * 10 covered goals:
   * 1 Weak Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.values([Ljava/lang/Object;)[Ljava/lang/Object;:87 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 2 Weak Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.values([Ljava/lang/Object;)[Ljava/lang/Object;:87 - DeleteStatement: values([Ljava/lang/Object;)[Ljava/lang/Object;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: root-Branch
   * 4 Weak Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.values()[Ljava/lang/Object;:86 - DeleteStatement: values()[Ljava/lang/Object;
   * 5 Weak Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.values()[Ljava/lang/Object;:86 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 6 Weak Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.values()[Ljava/lang/Object;:86 - DeleteStatement: values()[Ljava/lang/Object;
   * 7 Weak Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.values([Ljava/lang/Object;)[Ljava/lang/Object;:87 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 8 Weak Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.values()[Ljava/lang/Object;:86 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 9 Weak Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.values([Ljava/lang/Object;)[Ljava/lang/Object;:87 - DeleteStatement: values([Ljava/lang/Object;)[Ljava/lang/Object;
   * 10 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.values()[Ljava/lang/Object;: root-Branch
   */

//   @Test
//   public void test8()  throws Throwable  {
//       TLongObjectHashMap<Long> tLongObjectHashMap0 = new TLongObjectHashMap<Long>((-249), (-249));
//       TUnmodifiableLongObjectMap<Long> tUnmodifiableLongObjectMap0 = new TUnmodifiableLongObjectMap<Long>((TLongObjectMap<Long>) tLongObjectHashMap0);
//       Long[] longArray0 = tUnmodifiableLongObjectMap0.values();
//       Long[] longArray1 = tUnmodifiableLongObjectMap0.values(longArray0);
//       assertSame(longArray0, longArray1);
//   }

  //Test case number: 9
  /*
   * 12 covered goals:
   * 1 Weak Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.equals(Ljava/lang/Object;)Z:89 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 2 Weak Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.equals(Ljava/lang/Object;)Z:89 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 3 Weak Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> !=
   * 4 Weak Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.equals(Ljava/lang/Object;)Z:89 - ReplaceConstant - 0 -> 1
   * 5 Weak Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> !=
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L89 - false
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L89 - true
   * 8 Weak Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.equals(Ljava/lang/Object;)Z:89 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 9 Weak Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.equals(Ljava/lang/Object;)Z:89 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 10 Weak Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> !=
   * 11 Weak Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.equals(Ljava/lang/Object;)Z:89 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test9()  throws Throwable  {
      TLongObjectHashMap<Long> tLongObjectHashMap0 = new TLongObjectHashMap<Long>((-1113));
      TUnmodifiableLongObjectMap<Long> tUnmodifiableLongObjectMap0 = new TUnmodifiableLongObjectMap<Long>((TLongObjectMap<Long>) tLongObjectHashMap0);
      boolean boolean0 = tUnmodifiableLongObjectMap0.equals((Object) "");
      assertEquals(false, boolean0);
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 Weak Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.hashCode()I:90 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 2 Weak Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.hashCode()I:90 - DeleteStatement: hashCode()I
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.hashCode()I: root-Branch
   * 4 Weak Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.hashCode()I:90 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 5 Weak Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.hashCode()I:90 - DeleteStatement: hashCode()I
   */

  @Test
  public void test10()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>((-1113));
      TUnmodifiableLongObjectMap<Integer> tUnmodifiableLongObjectMap0 = new TUnmodifiableLongObjectMap<Integer>((TLongObjectMap<Integer>) tLongObjectHashMap0);
      int int0 = tUnmodifiableLongObjectMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 11
  /*
   * 5 covered goals:
   * 1 Weak Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.toString()Ljava/lang/String;:91 - DeleteStatement: toString()Ljava/lang/String;
   * 2 Weak Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.toString()Ljava/lang/String;:91 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.toString()Ljava/lang/String;: root-Branch
   * 4 Weak Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.toString()Ljava/lang/String;:91 - DeleteStatement: toString()Ljava/lang/String;
   * 5 Weak Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.toString()Ljava/lang/String;:91 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   */

  @Test
  public void test11()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>(291, 291);
      TUnmodifiableLongObjectMap<Integer> tUnmodifiableLongObjectMap0 = new TUnmodifiableLongObjectMap<Integer>((TLongObjectMap<Integer>) tLongObjectHashMap0);
      String string0 = tUnmodifiableLongObjectMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 12
  /*
   * 5 covered goals:
   * 1 Weak Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z:95 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z
   * 2 Weak Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z:95 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   * 4 Weak Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z:95 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z
   * 5 Weak Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z:95 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   */

  @Test
  public void test12()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>((-1));
      TUnmodifiableLongObjectMap<Integer> tUnmodifiableLongObjectMap0 = new TUnmodifiableLongObjectMap<Integer>((TLongObjectMap<Integer>) tLongObjectHashMap0);
      boolean boolean0 = tUnmodifiableLongObjectMap0.forEachKey((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 5 covered goals:
   * 1 Weak Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z:98 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 2 Weak Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z:98 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   * 4 Weak Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z:98 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 5 Weak Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z:98 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z
   */

  @Test
  public void test13()  throws Throwable  {
      TLongObjectHashMap<Long> tLongObjectHashMap0 = new TLongObjectHashMap<Long>((-249), (-249));
      TUnmodifiableLongObjectMap<Long> tUnmodifiableLongObjectMap0 = new TUnmodifiableLongObjectMap<Long>((TLongObjectMap<Long>) tLongObjectHashMap0);
      Object[] objectArray0 = new Object[10];
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
      boolean boolean0 = tUnmodifiableLongObjectMap0.forEachValue((TObjectProcedure<? super Long>) toObjectArrayProceedure0);
      assertEquals(true, boolean0);
  }

  //Test case number: 14
  /*
   * 11 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L89 - false
   * 2 Weak Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.<init>(Lgnu/trove/map/TLongObjectMap;)V:53 - ReplaceComparisonOperator != null -> = null
   * 3 Weak Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.size()I:58 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 4 Weak Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.size()I:58 - DeleteStatement: size()I
   * 5 Weak Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.equals(Ljava/lang/Object;)Z:89 - DeleteField: mLgnu/trove/map/TLongObjectMap;
   * 6 Weak Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.equals(Ljava/lang/Object;)Z:89 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 7 Weak Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> !=
   * 8 Weak Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> !=
   * 9 Weak Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.equals(Ljava/lang/Object;)Z:89 - ReplaceConstant - 1 -> 0
   * 10 Weak Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.equals(Ljava/lang/Object;)Z:89 - ReplaceConstant - 1 -> 0
   * 11 gnu.trove.impl.unmodifiable.TUnmodifiableLongObjectMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L89 - true
   */

  @Test
  public void test14()  throws Throwable  {
      TLongObjectHashMap<Long> tLongObjectHashMap0 = new TLongObjectHashMap<Long>((-249), (-249));
      TUnmodifiableLongObjectMap<Long> tUnmodifiableLongObjectMap0 = new TUnmodifiableLongObjectMap<Long>((TLongObjectMap<Long>) tLongObjectHashMap0);
      TUnmodifiableLongObjectMap<Long> tUnmodifiableLongObjectMap1 = new TUnmodifiableLongObjectMap<Long>((TLongObjectMap<Long>) tLongObjectHashMap0);
      boolean boolean0 = tUnmodifiableLongObjectMap1.equals((Object) tUnmodifiableLongObjectMap0);
      assertEquals(true, boolean0);
  }
}

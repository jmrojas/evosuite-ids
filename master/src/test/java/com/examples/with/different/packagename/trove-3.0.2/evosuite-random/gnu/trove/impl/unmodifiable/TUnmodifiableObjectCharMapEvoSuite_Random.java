/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableObjectCharMap;
import gnu.trove.map.TObjectCharMap;
import gnu.trove.map.custom_hash.TObjectCharCustomHashMap;
import gnu.trove.map.hash.TObjectCharHashMap;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableObjectCharMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Integer>();
      int int0 = 629;
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      float float0 = (-1.0F);
      char char0 = 'F';
      TObjectCharCustomHashMap<Object> tObjectCharCustomHashMap1 = new TObjectCharCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, int0, float0, char0);
      TUnmodifiableObjectCharMap<Object> tUnmodifiableObjectCharMap0 = new TUnmodifiableObjectCharMap<Object>((TObjectCharMap<Object>) tObjectCharCustomHashMap1);
      TUnmodifiableObjectCharMap<Object> tUnmodifiableObjectCharMap1 = new TUnmodifiableObjectCharMap<Object>((TObjectCharMap<Object>) tUnmodifiableObjectCharMap0);
      tUnmodifiableObjectCharMap1.iterator();
      TObjectCharHashMap<String> tObjectCharHashMap0 = new TObjectCharHashMap<String>(int0);
      boolean boolean0 = false;
      int int1 = 1546;
      TUnmodifiableObjectCharMap<Integer> tUnmodifiableObjectCharMap2 = new TUnmodifiableObjectCharMap<Integer>((TObjectCharMap<Integer>) tObjectCharCustomHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectCharMap2.putAll((TObjectCharMap<? extends Integer>) tObjectCharCustomHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TObjectCharHashMap<Integer> tObjectCharHashMap0 = new TObjectCharHashMap<Integer>();
      TUnmodifiableObjectCharMap<Integer> tUnmodifiableObjectCharMap0 = new TUnmodifiableObjectCharMap<Integer>((TObjectCharMap<Integer>) tObjectCharHashMap0);
      tUnmodifiableObjectCharMap0.size();
      char char0 = '5';
      tUnmodifiableObjectCharMap0.containsValue(char0);
      TObjectCharHashMap<String> tObjectCharHashMap1 = new TObjectCharHashMap<String>();
      TUnmodifiableObjectCharMap<String> tUnmodifiableObjectCharMap1 = new TUnmodifiableObjectCharMap<String>((TObjectCharMap<String>) tObjectCharHashMap1);
      String[] stringArray0 = new String[5];
      String string0 = "";
      stringArray0[0] = string0;
      String string1 = "";
      stringArray0[1] = string1;
      String string2 = "\n";
      stringArray0[2] = string2;
      String string3 = "";
      stringArray0[3] = string3;
      String string4 = "";
      stringArray0[4] = string4;
      String[] stringArray1 = tUnmodifiableObjectCharMap1.keys(stringArray0);
      assertSame(stringArray0, stringArray1);
  }

  @Test
  public void test2()  throws Throwable  {
      TObjectCharCustomHashMap<String> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<String>();
      TObjectCharHashMap<Object> tObjectCharHashMap0 = new TObjectCharHashMap<Object>((TObjectCharMap<?>) tObjectCharCustomHashMap0);
      TUnmodifiableObjectCharMap<Object> tUnmodifiableObjectCharMap0 = new TUnmodifiableObjectCharMap<Object>((TObjectCharMap<Object>) tObjectCharHashMap0);
      float float0 = Float.NEGATIVE_INFINITY;
      // Undeclared exception!
      try {
        tObjectCharCustomHashMap0.setAutoCompactionFactor(float0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Factor must be >= 0: -Infinity
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      Object object0 = null;
      identityHashingStrategy0.equals(object0, object0);
      TObjectCharHashMap<Object> tObjectCharHashMap0 = new TObjectCharHashMap<Object>();
      char char0 = '?';
      tObjectCharHashMap0.putIfAbsent(object0, char0);
      TObjectCharCustomHashMap<Object> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectCharMap<?>) tObjectCharHashMap0);
      int int0 = (-378);
      TObjectCharHashMap<String> tObjectCharHashMap1 = new TObjectCharHashMap<String>(int0, int0);
      TUnmodifiableObjectCharMap<String> tUnmodifiableObjectCharMap0 = new TUnmodifiableObjectCharMap<String>((TObjectCharMap<String>) tObjectCharHashMap1);
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tObjectCharHashMap0._set);
      tObjectCharHashMap0.get(object0);
      tUnmodifiableObjectCharMap0.forEachKey((TObjectProcedure<? super String>) toObjectArrayProceedure0);
      int int1 = 231823147;
      TObjectCharHashMap<String> tObjectCharHashMap2 = null;
      try {
        tObjectCharHashMap2 = new TObjectCharHashMap<String>(int1);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 0;
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int1 = (-2013);
      TObjectCharCustomHashMap<Character> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Character>((HashingStrategy<? super Character>) identityHashingStrategy0, int1, (float) int1);
      TUnmodifiableObjectCharMap<Character> tUnmodifiableObjectCharMap0 = new TUnmodifiableObjectCharMap<Character>((TObjectCharMap<Character>) tObjectCharCustomHashMap0);
      char[] charArray0 = new char[6];
      char char0 = 'j';
      charArray0[0] = char0;
      char char1 = '$';
      charArray0[1] = char1;
      char char2 = 'e';
      charArray0[2] = char2;
      char char3 = '5';
      charArray0[3] = char3;
      char char4 = 'K';
      charArray0[4] = char4;
      char char5 = 'z';
      charArray0[5] = char5;
      char[] charArray1 = tUnmodifiableObjectCharMap0.values(charArray0);
      assertNotNull(charArray1);
      
      int int2 = 0;
      TObjectCharHashMap<String> tObjectCharHashMap0 = new TObjectCharHashMap<String>();
      TUnmodifiableObjectCharMap<String> tUnmodifiableObjectCharMap1 = new TUnmodifiableObjectCharMap<String>((TObjectCharMap<String>) tObjectCharHashMap0);
      TUnmodifiableCharCollection tUnmodifiableCharCollection0 = (TUnmodifiableCharCollection)tUnmodifiableObjectCharMap1.valueCollection();
      assertNotNull(tUnmodifiableCharCollection0);
      
      float float0 = 414.54196F;
      TObjectCharCustomHashMap<Object> tObjectCharCustomHashMap1 = new TObjectCharCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, int2, float0);
      TUnmodifiableObjectCharMap<Object> tUnmodifiableObjectCharMap2 = new TUnmodifiableObjectCharMap<Object>((TObjectCharMap<Object>) tObjectCharCustomHashMap1);
      TUnmodifiableObjectCharMap<Object> tUnmodifiableObjectCharMap3 = new TUnmodifiableObjectCharMap<Object>((TObjectCharMap<Object>) tObjectCharCustomHashMap1);
      TObjectCharHashMap<Character> tObjectCharHashMap1 = new TObjectCharHashMap<Character>(int0);
      TUnmodifiableObjectCharMap<Character> tUnmodifiableObjectCharMap4 = new TUnmodifiableObjectCharMap<Character>((TObjectCharMap<Character>) tObjectCharHashMap1);
      char char6 = 'R';
      int int3 = 0;
      boolean boolean0 = tUnmodifiableObjectCharMap3.isEmpty();
      assertEquals(true, boolean0);
      
      TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap2 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, int3, (float) int0);
      TUnmodifiableObjectCharMap<Integer> tUnmodifiableObjectCharMap5 = new TUnmodifiableObjectCharMap<Integer>((TObjectCharMap<Integer>) tObjectCharCustomHashMap2);
      // Undeclared exception!
      try {
        tUnmodifiableObjectCharMap5.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = 1;
      TObjectCharHashMap<Object> tObjectCharHashMap0 = new TObjectCharHashMap<Object>(int0);
      TUnmodifiableObjectCharMap<Object> tUnmodifiableObjectCharMap0 = new TUnmodifiableObjectCharMap<Object>((TObjectCharMap<Object>) tObjectCharHashMap0);
      tUnmodifiableObjectCharMap0.keys();
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectCharMap<String> tObjectCharMap0 = null;
      TUnmodifiableObjectCharMap<String> tUnmodifiableObjectCharMap1 = null;
      try {
        tUnmodifiableObjectCharMap1 = new TUnmodifiableObjectCharMap<String>(tObjectCharMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = 0;
      char char0 = 'r';
      TObjectCharHashMap<Integer> tObjectCharHashMap0 = new TObjectCharHashMap<Integer>(int0, (float) int0, char0);
      TUnmodifiableObjectCharMap<Integer> tUnmodifiableObjectCharMap0 = new TUnmodifiableObjectCharMap<Integer>((TObjectCharMap<Integer>) tObjectCharHashMap0);
      char[] charArray0 = tUnmodifiableObjectCharMap0.values();
      assertNotNull(charArray0);
  }

  @Test
  public void test7()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      int int0 = 11229331;
      float float0 = (-1345.7559F);
      TObjectCharCustomHashMap<String> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, int0, float0);
      tObjectCharCustomHashMap0.toString();
      TUnmodifiableObjectCharMap<String> tUnmodifiableObjectCharMap0 = new TUnmodifiableObjectCharMap<String>((TObjectCharMap<String>) tObjectCharCustomHashMap0);
      String string0 = "";
      char char0 = 'k';
      // Undeclared exception!
      try {
        tUnmodifiableObjectCharMap0.adjustValue(string0, char0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

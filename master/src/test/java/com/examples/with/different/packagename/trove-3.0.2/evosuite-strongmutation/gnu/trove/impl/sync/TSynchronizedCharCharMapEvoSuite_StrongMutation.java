/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedCharCharMap;
import gnu.trove.impl.sync.TSynchronizedCharCollection;
import gnu.trove.impl.sync.TSynchronizedCharSet;
import gnu.trove.map.TCharCharMap;
import gnu.trove.map.hash.TCharCharHashMap;
import gnu.trove.procedure.TCharCharProcedure;
import gnu.trove.procedure.TCharProcedure;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedCharCharMapEvoSuite_StrongMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 16 covered goals:
   * 1 Strong Mutation 4: gnu.trove.impl.sync.TSynchronizedCharCharMap.size()I:71 - DeleteStatement: size()I
   * 2 gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C: root-Branch
   * 3 Strong Mutation 4: gnu.trove.impl.sync.TSynchronizedCharCharMap.size()I:71 - DeleteStatement: size()I
   * 4 Strong Mutation 85: gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C:142 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 5 Strong Mutation 84: gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C:142 - DeleteField: mutexLjava/lang/Object;
   * 6 Strong Mutation 87: gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C:142 - InsertUnaryOp Negation of key
   * 7 Strong Mutation 86: gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C:142 - ReplaceVariable key -> value
   * 8 Strong Mutation 93: gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C:142 - InsertUnaryOp IINC -1 value
   * 9 Strong Mutation 92: gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C:142 - InsertUnaryOp IINC 1 value
   * 10 Strong Mutation 94: gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C:142 - DeleteStatement: putIfAbsent(CC)C
   * 11 Strong Mutation 89: gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C:142 - InsertUnaryOp IINC -1 key
   * 12 Strong Mutation 88: gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C:142 - InsertUnaryOp IINC 1 key
   * 13 Strong Mutation 91: gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C:142 - InsertUnaryOp Negation of value
   * 14 Strong Mutation 90: gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C:142 - ReplaceVariable value -> key
   * 15 gnu.trove.impl.sync.TSynchronizedCharCharMap.size()I: root-Branch
   * 16 gnu.trove.impl.sync.TSynchronizedCharCharMap.<init>(Lgnu/trove/map/TCharCharMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap((-1571), (-1571));
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      tSynchronizedCharCharMap0.size();
      tSynchronizedCharCharMap0.putIfAbsent('V', 'B');
      assertEquals("{V=B}", tCharCharHashMap0.toString());
      assertEquals(false, tSynchronizedCharCharMap0.isEmpty());
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * 1 Strong Mutation 7: gnu.trove.impl.sync.TSynchronizedCharCharMap.isEmpty()Z:74 - DeleteStatement: isEmpty()Z
   * 2 gnu.trove.impl.sync.TSynchronizedCharCharMap.isEmpty()Z: root-Branch
   * 3 Strong Mutation 7: gnu.trove.impl.sync.TSynchronizedCharCharMap.isEmpty()Z:74 - DeleteStatement: isEmpty()Z
   */

  @Test
  public void test1()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap((-1628), (-1628));
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      boolean boolean0 = tSynchronizedCharCharMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 20 covered goals:
   * 1 Strong Mutation 13: gnu.trove.impl.sync.TSynchronizedCharCharMap.containsKey(C)Z:77 - DeleteStatement: containsKey(C)Z
   * 2 Strong Mutation 10: gnu.trove.impl.sync.TSynchronizedCharCharMap.containsKey(C)Z:77 - InsertUnaryOp Negation of key
   * 3 Strong Mutation 11: gnu.trove.impl.sync.TSynchronizedCharCharMap.containsKey(C)Z:77 - InsertUnaryOp IINC 1 key
   * 4 Strong Mutation 12: gnu.trove.impl.sync.TSynchronizedCharCharMap.containsKey(C)Z:77 - InsertUnaryOp IINC -1 key
   * 5 Strong Mutation 10: gnu.trove.impl.sync.TSynchronizedCharCharMap.containsKey(C)Z:77 - InsertUnaryOp Negation of key
   * 6 Strong Mutation 11: gnu.trove.impl.sync.TSynchronizedCharCharMap.containsKey(C)Z:77 - InsertUnaryOp IINC 1 key
   * 7 Strong Mutation 12: gnu.trove.impl.sync.TSynchronizedCharCharMap.containsKey(C)Z:77 - InsertUnaryOp IINC -1 key
   * 8 Strong Mutation 13: gnu.trove.impl.sync.TSynchronizedCharCharMap.containsKey(C)Z:77 - DeleteStatement: containsKey(C)Z
   * 9 Strong Mutation 127: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - DeleteField: mutexLjava/lang/Object;
   * 10 Strong Mutation 141: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - InsertUnaryOp Negation of put_amount
   * 11 Strong Mutation 140: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - ReplaceVariable put_amount -> key
   * 12 Strong Mutation 143: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - InsertUnaryOp IINC -1 put_amount
   * 13 Strong Mutation 142: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - InsertUnaryOp IINC 1 put_amount
   * 14 Strong Mutation 129: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - ReplaceVariable key -> adjust_amount
   * 15 Strong Mutation 128: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 16 Strong Mutation 131: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - InsertUnaryOp Negation of key
   * 17 Strong Mutation 133: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - InsertUnaryOp IINC -1 key
   * 18 Strong Mutation 132: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - InsertUnaryOp IINC 1 key
   * 19 gnu.trove.impl.sync.TSynchronizedCharCharMap.containsKey(C)Z: root-Branch
   * 20 gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap();
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      tSynchronizedCharCharMap0.adjustOrPutValue('d', '=', '=');
      boolean boolean0 = tSynchronizedCharCharMap0.containsKey('d');
      assertEquals(false, tCharCharHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 10 covered goals:
   * 1 Strong Mutation 18: gnu.trove.impl.sync.TSynchronizedCharCharMap.containsValue(C)Z:80 - InsertUnaryOp IINC -1 value
   * 2 Strong Mutation 17: gnu.trove.impl.sync.TSynchronizedCharCharMap.containsValue(C)Z:80 - InsertUnaryOp IINC 1 value
   * 3 Strong Mutation 16: gnu.trove.impl.sync.TSynchronizedCharCharMap.containsValue(C)Z:80 - InsertUnaryOp Negation of value
   * 4 Strong Mutation 19: gnu.trove.impl.sync.TSynchronizedCharCharMap.containsValue(C)Z:80 - DeleteStatement: containsValue(C)Z
   * 5 Strong Mutation 17: gnu.trove.impl.sync.TSynchronizedCharCharMap.containsValue(C)Z:80 - InsertUnaryOp IINC 1 value
   * 6 Strong Mutation 16: gnu.trove.impl.sync.TSynchronizedCharCharMap.containsValue(C)Z:80 - InsertUnaryOp Negation of value
   * 7 Strong Mutation 19: gnu.trove.impl.sync.TSynchronizedCharCharMap.containsValue(C)Z:80 - DeleteStatement: containsValue(C)Z
   * 8 Strong Mutation 18: gnu.trove.impl.sync.TSynchronizedCharCharMap.containsValue(C)Z:80 - InsertUnaryOp IINC -1 value
   * 9 Strong Mutation 139: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - ReplaceVariable put_amount -> adjust_amount
   * 10 gnu.trove.impl.sync.TSynchronizedCharCharMap.containsValue(C)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap();
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      tSynchronizedCharCharMap0.adjustOrPutValue('*', '5', '*');
      boolean boolean0 = tSynchronizedCharCharMap0.containsValue('*');
      assertEquals(1, tCharCharHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 9 covered goals:
   * 1 Strong Mutation 24: gnu.trove.impl.sync.TSynchronizedCharCharMap.get(C)C:83 - InsertUnaryOp IINC -1 key
   * 2 Strong Mutation 23: gnu.trove.impl.sync.TSynchronizedCharCharMap.get(C)C:83 - InsertUnaryOp IINC 1 key
   * 3 Strong Mutation 22: gnu.trove.impl.sync.TSynchronizedCharCharMap.get(C)C:83 - InsertUnaryOp Negation of key
   * 4 Strong Mutation 25: gnu.trove.impl.sync.TSynchronizedCharCharMap.get(C)C:83 - DeleteStatement: get(C)C
   * 5 Strong Mutation 23: gnu.trove.impl.sync.TSynchronizedCharCharMap.get(C)C:83 - InsertUnaryOp IINC 1 key
   * 6 Strong Mutation 22: gnu.trove.impl.sync.TSynchronizedCharCharMap.get(C)C:83 - InsertUnaryOp Negation of key
   * 7 Strong Mutation 25: gnu.trove.impl.sync.TSynchronizedCharCharMap.get(C)C:83 - DeleteStatement: get(C)C
   * 8 Strong Mutation 24: gnu.trove.impl.sync.TSynchronizedCharCharMap.get(C)C:83 - InsertUnaryOp IINC -1 key
   * 9 gnu.trove.impl.sync.TSynchronizedCharCharMap.get(C)C: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap((-1628), (-1628));
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      tCharCharHashMap0.putIfAbsent('x', 'x');
      char char0 = tSynchronizedCharCharMap0.get('x');
      assertEquals('x', char0);
  }

  //Test case number: 5
  /*
   * 23 covered goals:
   * 1 Strong Mutation 36: gnu.trove.impl.sync.TSynchronizedCharCharMap.put(CC)C:87 - DeleteStatement: put(CC)C
   * 2 Strong Mutation 27: gnu.trove.impl.sync.TSynchronizedCharCharMap.put(CC)C:87 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 3 Strong Mutation 26: gnu.trove.impl.sync.TSynchronizedCharCharMap.put(CC)C:87 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 29: gnu.trove.impl.sync.TSynchronizedCharCharMap.put(CC)C:87 - InsertUnaryOp Negation of key
   * 5 Strong Mutation 28: gnu.trove.impl.sync.TSynchronizedCharCharMap.put(CC)C:87 - ReplaceVariable key -> value
   * 6 Strong Mutation 31: gnu.trove.impl.sync.TSynchronizedCharCharMap.put(CC)C:87 - InsertUnaryOp IINC -1 key
   * 7 Strong Mutation 30: gnu.trove.impl.sync.TSynchronizedCharCharMap.put(CC)C:87 - InsertUnaryOp IINC 1 key
   * 8 Strong Mutation 34: gnu.trove.impl.sync.TSynchronizedCharCharMap.put(CC)C:87 - InsertUnaryOp IINC 1 value
   * 9 Strong Mutation 35: gnu.trove.impl.sync.TSynchronizedCharCharMap.put(CC)C:87 - InsertUnaryOp IINC -1 value
   * 10 Strong Mutation 32: gnu.trove.impl.sync.TSynchronizedCharCharMap.put(CC)C:87 - ReplaceVariable value -> key
   * 11 Strong Mutation 33: gnu.trove.impl.sync.TSynchronizedCharCharMap.put(CC)C:87 - InsertUnaryOp Negation of value
   * 12 Strong Mutation 1: gnu.trove.impl.sync.TSynchronizedCharCharMap.<init>(Lgnu/trove/map/TCharCharMap;Ljava/lang/Object;)V:67 - ReplaceVariable mutex -> mutex
   * 13 Strong Mutation 27: gnu.trove.impl.sync.TSynchronizedCharCharMap.put(CC)C:87 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 14 Strong Mutation 26: gnu.trove.impl.sync.TSynchronizedCharCharMap.put(CC)C:87 - DeleteField: mutexLjava/lang/Object;
   * 15 Strong Mutation 29: gnu.trove.impl.sync.TSynchronizedCharCharMap.put(CC)C:87 - InsertUnaryOp Negation of key
   * 16 Strong Mutation 31: gnu.trove.impl.sync.TSynchronizedCharCharMap.put(CC)C:87 - InsertUnaryOp IINC -1 key
   * 17 Strong Mutation 30: gnu.trove.impl.sync.TSynchronizedCharCharMap.put(CC)C:87 - InsertUnaryOp IINC 1 key
   * 18 Strong Mutation 34: gnu.trove.impl.sync.TSynchronizedCharCharMap.put(CC)C:87 - InsertUnaryOp IINC 1 value
   * 19 Strong Mutation 35: gnu.trove.impl.sync.TSynchronizedCharCharMap.put(CC)C:87 - InsertUnaryOp IINC -1 value
   * 20 Strong Mutation 32: gnu.trove.impl.sync.TSynchronizedCharCharMap.put(CC)C:87 - ReplaceVariable value -> key
   * 21 Strong Mutation 33: gnu.trove.impl.sync.TSynchronizedCharCharMap.put(CC)C:87 - InsertUnaryOp Negation of value
   * 22 gnu.trove.impl.sync.TSynchronizedCharCharMap.put(CC)C: root-Branch
   * 23 gnu.trove.impl.sync.TSynchronizedCharCharMap.<init>(Lgnu/trove/map/TCharCharMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap((-1), (-1127.6772F));
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0, (Object) "fr");
      tSynchronizedCharCharMap0.put('J', 'i');
      assertEquals(7, tCharCharHashMap0.capacity());
      assertEquals("{J=i}", tCharCharHashMap0.toString());
  }

  //Test case number: 6
  /*
   * 11 covered goals:
   * 1 Strong Mutation 41: gnu.trove.impl.sync.TSynchronizedCharCharMap.remove(C)C:90 - InsertUnaryOp IINC -1 key
   * 2 Strong Mutation 38: gnu.trove.impl.sync.TSynchronizedCharCharMap.remove(C)C:90 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 3 Strong Mutation 39: gnu.trove.impl.sync.TSynchronizedCharCharMap.remove(C)C:90 - InsertUnaryOp Negation of key
   * 4 Strong Mutation 37: gnu.trove.impl.sync.TSynchronizedCharCharMap.remove(C)C:90 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 40: gnu.trove.impl.sync.TSynchronizedCharCharMap.remove(C)C:90 - InsertUnaryOp IINC 1 key
   * 6 Strong Mutation 38: gnu.trove.impl.sync.TSynchronizedCharCharMap.remove(C)C:90 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 7 Strong Mutation 39: gnu.trove.impl.sync.TSynchronizedCharCharMap.remove(C)C:90 - InsertUnaryOp Negation of key
   * 8 Strong Mutation 37: gnu.trove.impl.sync.TSynchronizedCharCharMap.remove(C)C:90 - DeleteField: mutexLjava/lang/Object;
   * 9 Strong Mutation 40: gnu.trove.impl.sync.TSynchronizedCharCharMap.remove(C)C:90 - InsertUnaryOp IINC 1 key
   * 10 Strong Mutation 41: gnu.trove.impl.sync.TSynchronizedCharCharMap.remove(C)C:90 - InsertUnaryOp IINC -1 key
   * 11 gnu.trove.impl.sync.TSynchronizedCharCharMap.remove(C)C: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap((-978));
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      tSynchronizedCharCharMap0.putIfAbsent('f', 'J');
      assertEquals(1, tCharCharHashMap0.size());
      
      char char0 = tSynchronizedCharCharMap0.remove('f');
      assertEquals('J', char0);
  }

  //Test case number: 7
  /*
   * 7 covered goals:
   * 1 Strong Mutation 49: gnu.trove.impl.sync.TSynchronizedCharCharMap.clear()V:99 - DeleteField: mutexLjava/lang/Object;
   * 2 Strong Mutation 51: gnu.trove.impl.sync.TSynchronizedCharCharMap.clear()V:99 - DeleteStatement: clear()V
   * 3 Strong Mutation 50: gnu.trove.impl.sync.TSynchronizedCharCharMap.clear()V:99 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 4 Strong Mutation 51: gnu.trove.impl.sync.TSynchronizedCharCharMap.clear()V:99 - DeleteStatement: clear()V
   * 5 Strong Mutation 50: gnu.trove.impl.sync.TSynchronizedCharCharMap.clear()V:99 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 6 Strong Mutation 49: gnu.trove.impl.sync.TSynchronizedCharCharMap.clear()V:99 - DeleteField: mutexLjava/lang/Object;
   * 7 gnu.trove.impl.sync.TSynchronizedCharCharMap.clear()V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap((-1838));
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0, (Object) "/");
      tSynchronizedCharCharMap0.putIfAbsent('n', 'n');
      assertEquals(false, tCharCharHashMap0.isEmpty());
      
      tSynchronizedCharCharMap0.clear();
      assertEquals("{}", tCharCharHashMap0.toString());
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * 1 Strong Mutation 56: gnu.trove.impl.sync.TSynchronizedCharCharMap.keySet()Lgnu/trove/set/TCharSet;:108 - DeleteStatement: keySet()Lgnu/trove/set/TCharSet;
   * 2 gnu.trove.impl.sync.TSynchronizedCharCharMap.keySet()Lgnu/trove/set/TCharSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test8()  throws Throwable  {
      Object object0 = new Object();
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) null, object0);
      // Undeclared exception!
      try {
        tSynchronizedCharCharMap0.keySet();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 8 covered goals:
   * 1 Strong Mutation 58: gnu.trove.impl.sync.TSynchronizedCharCharMap.keySet()Lgnu/trove/set/TCharSet;:109 - DeleteField: keySetLgnu/trove/set/TCharSet;
   * 2 Strong Mutation 55: gnu.trove.impl.sync.TSynchronizedCharCharMap.keySet()Lgnu/trove/set/TCharSet;:108 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 3 Strong Mutation 54: gnu.trove.impl.sync.TSynchronizedCharCharMap.keySet()Lgnu/trove/set/TCharSet;:107 - ReplaceComparisonOperator != null -> = null
   * 4 Strong Mutation 52: gnu.trove.impl.sync.TSynchronizedCharCharMap.keySet()Lgnu/trove/set/TCharSet;:106 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 55: gnu.trove.impl.sync.TSynchronizedCharCharMap.keySet()Lgnu/trove/set/TCharSet;:108 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 6 Strong Mutation 54: gnu.trove.impl.sync.TSynchronizedCharCharMap.keySet()Lgnu/trove/set/TCharSet;:107 - ReplaceComparisonOperator != null -> = null
   * 7 Strong Mutation 52: gnu.trove.impl.sync.TSynchronizedCharCharMap.keySet()Lgnu/trove/set/TCharSet;:106 - DeleteField: mutexLjava/lang/Object;
   * 8 Strong Mutation 58: gnu.trove.impl.sync.TSynchronizedCharCharMap.keySet()Lgnu/trove/set/TCharSet;:109 - DeleteField: keySetLgnu/trove/set/TCharSet;
   */

  @Test
  public void test9()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap((-1628), (-1628));
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      TSynchronizedCharSet tSynchronizedCharSet0 = (TSynchronizedCharSet)tSynchronizedCharCharMap0.keySet();
      assertEquals(true, tSynchronizedCharSet0.isEmpty());
  }

  //Test case number: 10
  /*
   * 7 covered goals:
   * 1 Strong Mutation 60: gnu.trove.impl.sync.TSynchronizedCharCharMap.keys()[C:113 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 2 Strong Mutation 59: gnu.trove.impl.sync.TSynchronizedCharCharMap.keys()[C:113 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 61: gnu.trove.impl.sync.TSynchronizedCharCharMap.keys()[C:113 - DeleteStatement: keys()[C
   * 4 Strong Mutation 59: gnu.trove.impl.sync.TSynchronizedCharCharMap.keys()[C:113 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 61: gnu.trove.impl.sync.TSynchronizedCharCharMap.keys()[C:113 - DeleteStatement: keys()[C
   * 6 Strong Mutation 60: gnu.trove.impl.sync.TSynchronizedCharCharMap.keys()[C:113 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 7 gnu.trove.impl.sync.TSynchronizedCharCharMap.keys()[C: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap((-1395), 0.5F);
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      char[] charArray0 = tSynchronizedCharCharMap0.keys();
      assertNotNull(charArray0);
  }

  //Test case number: 11
  /*
   * 8 covered goals:
   * 1 Strong Mutation 64: gnu.trove.impl.sync.TSynchronizedCharCharMap.keys([C)[C:116 - DeleteStatement: keys([C)[C
   * 2 Strong Mutation 1: gnu.trove.impl.sync.TSynchronizedCharCharMap.<init>(Lgnu/trove/map/TCharCharMap;Ljava/lang/Object;)V:67 - ReplaceVariable mutex -> mutex
   * 3 Strong Mutation 63: gnu.trove.impl.sync.TSynchronizedCharCharMap.keys([C)[C:116 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 4 Strong Mutation 62: gnu.trove.impl.sync.TSynchronizedCharCharMap.keys([C)[C:116 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 63: gnu.trove.impl.sync.TSynchronizedCharCharMap.keys([C)[C:116 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 6 Strong Mutation 62: gnu.trove.impl.sync.TSynchronizedCharCharMap.keys([C)[C:116 - DeleteField: mutexLjava/lang/Object;
   * 7 Strong Mutation 64: gnu.trove.impl.sync.TSynchronizedCharCharMap.keys([C)[C:116 - DeleteStatement: keys([C)[C
   * 8 gnu.trove.impl.sync.TSynchronizedCharCharMap.keys([C)[C: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap((-352), (float) 1855, '4', ';');
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0, (Object) "deu");
      char[] charArray0 = tSynchronizedCharCharMap0.keys(tCharCharHashMap0._set);
      assertNotNull(charArray0);
  }

  //Test case number: 12
  /*
   * 9 covered goals:
   * 1 Strong Mutation 71: gnu.trove.impl.sync.TSynchronizedCharCharMap.valueCollection()Lgnu/trove/TCharCollection;:123 - DeleteField: valuesLgnu/trove/TCharCollection;
   * 2 Strong Mutation 68: gnu.trove.impl.sync.TSynchronizedCharCharMap.valueCollection()Lgnu/trove/TCharCollection;:122 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 3 Strong Mutation 65: gnu.trove.impl.sync.TSynchronizedCharCharMap.valueCollection()Lgnu/trove/TCharCollection;:120 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 67: gnu.trove.impl.sync.TSynchronizedCharCharMap.valueCollection()Lgnu/trove/TCharCollection;:121 - ReplaceComparisonOperator != null -> = null
   * 5 Strong Mutation 68: gnu.trove.impl.sync.TSynchronizedCharCharMap.valueCollection()Lgnu/trove/TCharCollection;:122 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 6 Strong Mutation 71: gnu.trove.impl.sync.TSynchronizedCharCharMap.valueCollection()Lgnu/trove/TCharCollection;:123 - DeleteField: valuesLgnu/trove/TCharCollection;
   * 7 Strong Mutation 65: gnu.trove.impl.sync.TSynchronizedCharCharMap.valueCollection()Lgnu/trove/TCharCollection;:120 - DeleteField: mutexLjava/lang/Object;
   * 8 Strong Mutation 67: gnu.trove.impl.sync.TSynchronizedCharCharMap.valueCollection()Lgnu/trove/TCharCollection;:121 - ReplaceComparisonOperator != null -> = null
   * 9 gnu.trove.impl.sync.TSynchronizedCharCharMap.valueCollection()Lgnu/trove/TCharCollection;: I11 Branch 3 IFNONNULL L121 - false
   */

  @Test
  public void test12()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap((-1628), (-1628));
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      TSynchronizedCharCollection tSynchronizedCharCollection0 = (TSynchronizedCharCollection)tSynchronizedCharCharMap0.valueCollection();
      assertEquals(0, tSynchronizedCharCollection0.size());
  }

  //Test case number: 13
  /*
   * 7 covered goals:
   * 1 Strong Mutation 74: gnu.trove.impl.sync.TSynchronizedCharCharMap.values()[C:127 - DeleteStatement: values()[C
   * 2 Strong Mutation 72: gnu.trove.impl.sync.TSynchronizedCharCharMap.values()[C:127 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 73: gnu.trove.impl.sync.TSynchronizedCharCharMap.values()[C:127 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 4 Strong Mutation 72: gnu.trove.impl.sync.TSynchronizedCharCharMap.values()[C:127 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 73: gnu.trove.impl.sync.TSynchronizedCharCharMap.values()[C:127 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 6 Strong Mutation 74: gnu.trove.impl.sync.TSynchronizedCharCharMap.values()[C:127 - DeleteStatement: values()[C
   * 7 gnu.trove.impl.sync.TSynchronizedCharCharMap.values()[C: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap((-1094), 0.0F, 'o', 'h');
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      char[] charArray0 = tSynchronizedCharCharMap0.values();
      assertNotNull(charArray0);
  }

  //Test case number: 14
  /*
   * 7 covered goals:
   * 1 Strong Mutation 75: gnu.trove.impl.sync.TSynchronizedCharCharMap.values([C)[C:130 - DeleteField: mutexLjava/lang/Object;
   * 2 Strong Mutation 76: gnu.trove.impl.sync.TSynchronizedCharCharMap.values([C)[C:130 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 3 Strong Mutation 77: gnu.trove.impl.sync.TSynchronizedCharCharMap.values([C)[C:130 - DeleteStatement: values([C)[C
   * 4 Strong Mutation 76: gnu.trove.impl.sync.TSynchronizedCharCharMap.values([C)[C:130 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 5 Strong Mutation 77: gnu.trove.impl.sync.TSynchronizedCharCharMap.values([C)[C:130 - DeleteStatement: values([C)[C
   * 6 Strong Mutation 75: gnu.trove.impl.sync.TSynchronizedCharCharMap.values([C)[C:130 - DeleteField: mutexLjava/lang/Object;
   * 7 gnu.trove.impl.sync.TSynchronizedCharCharMap.values([C)[C: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap((-1));
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      char[] charArray0 = tSynchronizedCharCharMap0.values(tCharCharHashMap0._set);
      assertNotNull(charArray0);
  }

  //Test case number: 15
  /*
   * 9 covered goals:
   * 1 Strong Mutation 79: gnu.trove.impl.sync.TSynchronizedCharCharMap.iterator()Lgnu/trove/iterator/TCharCharIterator;:134 - DeleteStatement: iterator()Lgnu/trove/iterator/TCharCharIterator;
   * 2 Strong Mutation 2: gnu.trove.impl.sync.TSynchronizedCharCharMap.size()I:71 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 3: gnu.trove.impl.sync.TSynchronizedCharCharMap.size()I:71 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 4 Strong Mutation 78: gnu.trove.impl.sync.TSynchronizedCharCharMap.iterator()Lgnu/trove/iterator/TCharCharIterator;:134 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 5 Strong Mutation 2: gnu.trove.impl.sync.TSynchronizedCharCharMap.size()I:71 - DeleteField: mutexLjava/lang/Object;
   * 6 Strong Mutation 3: gnu.trove.impl.sync.TSynchronizedCharCharMap.size()I:71 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 7 Strong Mutation 78: gnu.trove.impl.sync.TSynchronizedCharCharMap.iterator()Lgnu/trove/iterator/TCharCharIterator;:134 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 8 Strong Mutation 79: gnu.trove.impl.sync.TSynchronizedCharCharMap.iterator()Lgnu/trove/iterator/TCharCharIterator;:134 - DeleteStatement: iterator()Lgnu/trove/iterator/TCharCharIterator;
   * 9 gnu.trove.impl.sync.TSynchronizedCharCharMap.iterator()Lgnu/trove/iterator/TCharCharIterator;: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap((-1833), (-2043));
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      TCharCharHashMap tCharCharHashMap1 = new TCharCharHashMap((TCharCharMap) tSynchronizedCharCharMap0);
      assertTrue(tCharCharHashMap0.equals(tCharCharHashMap1));
  }

  //Test case number: 16
  /*
   * 3 covered goals:
   * 1 Strong Mutation 81: gnu.trove.impl.sync.TSynchronizedCharCharMap.getNoEntryKey()C:138 - DeleteStatement: getNoEntryKey()C
   * 2 gnu.trove.impl.sync.TSynchronizedCharCharMap.getNoEntryKey()C: root-Branch
   * 3 Strong Mutation 81: gnu.trove.impl.sync.TSynchronizedCharCharMap.getNoEntryKey()C:138 - DeleteStatement: getNoEntryKey()C
   */

  @Test
  public void test16()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap();
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0, (Object) "");
      tSynchronizedCharCharMap0.getNoEntryKey();
      TCharCharHashMap tCharCharHashMap1 = new TCharCharHashMap(1988, (float) 1988, '7', '7');
      TSynchronizedCharCharMap tSynchronizedCharCharMap1 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap1);
      assertEquals('7', tSynchronizedCharCharMap1.getNoEntryKey());
  }

  //Test case number: 17
  /*
   * 11 covered goals:
   * 1 Strong Mutation 90: gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C:142 - ReplaceVariable value -> key
   * 2 Strong Mutation 85: gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C:142 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 3 Strong Mutation 84: gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C:142 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 87: gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C:142 - InsertUnaryOp Negation of key
   * 5 Strong Mutation 86: gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C:142 - ReplaceVariable key -> value
   * 6 Strong Mutation 93: gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C:142 - InsertUnaryOp IINC -1 value
   * 7 Strong Mutation 92: gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C:142 - InsertUnaryOp IINC 1 value
   * 8 Strong Mutation 94: gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C:142 - DeleteStatement: putIfAbsent(CC)C
   * 9 Strong Mutation 89: gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C:142 - InsertUnaryOp IINC -1 key
   * 10 Strong Mutation 88: gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C:142 - InsertUnaryOp IINC 1 key
   * 11 Strong Mutation 91: gnu.trove.impl.sync.TSynchronizedCharCharMap.putIfAbsent(CC)C:142 - InsertUnaryOp Negation of value
   */

  @Test
  public void test17()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap((-1094), 0.0F, 'o', 'h');
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      char char0 = tSynchronizedCharCharMap0.putIfAbsent('h', '4');
      assertEquals(false, tCharCharHashMap0.isEmpty());
      assertEquals('h', char0);
  }

  //Test case number: 18
  /*
   * 3 covered goals:
   * 1 Strong Mutation 97: gnu.trove.impl.sync.TSynchronizedCharCharMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z:145 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z
   * 2 gnu.trove.impl.sync.TSynchronizedCharCharMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   * 3 Strong Mutation 97: gnu.trove.impl.sync.TSynchronizedCharCharMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z:145 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z
   */

  @Test
  public void test18()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap((-1833), (-2043));
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      boolean boolean0 = tSynchronizedCharCharMap0.forEachKey((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 19
  /*
   * 3 covered goals:
   * 1 Strong Mutation 100: gnu.trove.impl.sync.TSynchronizedCharCharMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:148 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z
   * 2 gnu.trove.impl.sync.TSynchronizedCharCharMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   * 3 Strong Mutation 100: gnu.trove.impl.sync.TSynchronizedCharCharMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:148 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z
   */

  @Test
  public void test19()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap((-1796));
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      boolean boolean0 = tSynchronizedCharCharMap0.forEachValue((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 20
  /*
   * 12 covered goals:
   * 1 Strong Mutation 107: gnu.trove.impl.sync.TSynchronizedCharCharMap.retainEntries(Lgnu/trove/procedure/TCharCharProcedure;)Z:157 - DeleteField: mutexLjava/lang/Object;
   * 2 Strong Mutation 46: gnu.trove.impl.sync.TSynchronizedCharCharMap.putAll(Lgnu/trove/map/TCharCharMap;)V:96 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 47: gnu.trove.impl.sync.TSynchronizedCharCharMap.putAll(Lgnu/trove/map/TCharCharMap;)V:96 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 4 Strong Mutation 48: gnu.trove.impl.sync.TSynchronizedCharCharMap.putAll(Lgnu/trove/map/TCharCharMap;)V:96 - DeleteStatement: putAll(Lgnu/trove/map/TCharCharMap;)V
   * 5 Strong Mutation 108: gnu.trove.impl.sync.TSynchronizedCharCharMap.retainEntries(Lgnu/trove/procedure/TCharCharProcedure;)Z:157 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 6 Strong Mutation 46: gnu.trove.impl.sync.TSynchronizedCharCharMap.putAll(Lgnu/trove/map/TCharCharMap;)V:96 - DeleteField: mutexLjava/lang/Object;
   * 7 Strong Mutation 47: gnu.trove.impl.sync.TSynchronizedCharCharMap.putAll(Lgnu/trove/map/TCharCharMap;)V:96 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 8 Strong Mutation 48: gnu.trove.impl.sync.TSynchronizedCharCharMap.putAll(Lgnu/trove/map/TCharCharMap;)V:96 - DeleteStatement: putAll(Lgnu/trove/map/TCharCharMap;)V
   * 9 Strong Mutation 108: gnu.trove.impl.sync.TSynchronizedCharCharMap.retainEntries(Lgnu/trove/procedure/TCharCharProcedure;)Z:157 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 10 Strong Mutation 107: gnu.trove.impl.sync.TSynchronizedCharCharMap.retainEntries(Lgnu/trove/procedure/TCharCharProcedure;)Z:157 - DeleteField: mutexLjava/lang/Object;
   * 11 gnu.trove.impl.sync.TSynchronizedCharCharMap.retainEntries(Lgnu/trove/procedure/TCharCharProcedure;)Z: root-Branch
   * 12 gnu.trove.impl.sync.TSynchronizedCharCharMap.putAll(Lgnu/trove/map/TCharCharMap;)V: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap();
      tCharCharHashMap0.compact();
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      tSynchronizedCharCharMap0.adjustOrPutValue('*', '5', '*');
      tSynchronizedCharCharMap0.putAll((TCharCharMap) tCharCharHashMap0);
      // Undeclared exception!
      try {
        tSynchronizedCharCharMap0.retainEntries((TCharCharProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 21
  /*
   * 23 covered goals:
   * 1 Strong Mutation 120: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z:163 - InsertUnaryOp IINC 1 key
   * 2 Strong Mutation 119: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z:163 - InsertUnaryOp Negation of key
   * 3 Strong Mutation 118: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z:163 - ReplaceVariable key -> amount
   * 4 Strong Mutation 117: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z:163 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 5 Strong Mutation 116: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z:163 - DeleteField: mutexLjava/lang/Object;
   * 6 Strong Mutation 126: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z:163 - DeleteStatement: adjustValue(CC)Z
   * 7 Strong Mutation 125: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z:163 - InsertUnaryOp IINC -1 amount
   * 8 Strong Mutation 124: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z:163 - InsertUnaryOp IINC 1 amount
   * 9 Strong Mutation 123: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z:163 - InsertUnaryOp Negation of amount
   * 10 Strong Mutation 122: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z:163 - ReplaceVariable amount -> key
   * 11 Strong Mutation 121: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z:163 - InsertUnaryOp IINC -1 key
   * 12 Strong Mutation 119: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z:163 - InsertUnaryOp Negation of key
   * 13 Strong Mutation 118: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z:163 - ReplaceVariable key -> amount
   * 14 Strong Mutation 117: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z:163 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 15 Strong Mutation 116: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z:163 - DeleteField: mutexLjava/lang/Object;
   * 16 Strong Mutation 126: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z:163 - DeleteStatement: adjustValue(CC)Z
   * 17 Strong Mutation 125: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z:163 - InsertUnaryOp IINC -1 amount
   * 18 Strong Mutation 124: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z:163 - InsertUnaryOp IINC 1 amount
   * 19 Strong Mutation 123: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z:163 - InsertUnaryOp Negation of amount
   * 20 Strong Mutation 122: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z:163 - ReplaceVariable amount -> key
   * 21 Strong Mutation 121: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z:163 - InsertUnaryOp IINC -1 key
   * 22 Strong Mutation 120: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z:163 - InsertUnaryOp IINC 1 key
   * 23 gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustValue(CC)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap();
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      tSynchronizedCharCharMap0.adjustOrPutValue('*', '5', '*');
      boolean boolean0 = tSynchronizedCharCharMap0.adjustValue('*', '&');
      assertEquals(false, tCharCharHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 22
  /*
   * 2 covered goals:
   * 1 Strong Mutation 130: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - ReplaceVariable key -> put_amount
   * 2 Strong Mutation 140: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - ReplaceVariable put_amount -> key
   */

  @Test
  public void test22()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap((-1395), 0.5F);
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      char char0 = tSynchronizedCharCharMap0.adjustOrPutValue('y', 'p', '2');
      assertEquals("{y=2}", tCharCharHashMap0.toString());
      assertEquals('2', char0);
  }

  //Test case number: 23
  /*
   * 11 covered goals:
   * 1 Strong Mutation 134: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - ReplaceVariable adjust_amount -> put_amount
   * 2 Strong Mutation 137: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - InsertUnaryOp IINC 1 adjust_amount
   * 3 Strong Mutation 136: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - InsertUnaryOp Negation of adjust_amount
   * 4 Strong Mutation 138: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - InsertUnaryOp IINC -1 adjust_amount
   * 5 Strong Mutation 130: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - ReplaceVariable key -> put_amount
   * 6 Strong Mutation 135: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - ReplaceVariable adjust_amount -> key
   * 7 Strong Mutation 137: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - InsertUnaryOp IINC 1 adjust_amount
   * 8 Strong Mutation 136: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - InsertUnaryOp Negation of adjust_amount
   * 9 Strong Mutation 138: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - InsertUnaryOp IINC -1 adjust_amount
   * 10 Strong Mutation 135: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - ReplaceVariable adjust_amount -> key
   * 11 Strong Mutation 134: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - ReplaceVariable adjust_amount -> put_amount
   */

  @Test
  public void test23()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap();
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      tSynchronizedCharCharMap0.adjustOrPutValue('*', '5', '*');
      char char0 = tSynchronizedCharCharMap0.adjustOrPutValue('*', 'm', '5');
      assertEquals(false, tCharCharHashMap0.isEmpty());
      assertEquals('\u0097', char0);
  }

  //Test case number: 24
  /*
   * 5 covered goals:
   * 1 Strong Mutation 148: gnu.trove.impl.sync.TSynchronizedCharCharMap.equals(Ljava/lang/Object;)Z:170 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 2 Strong Mutation 147: gnu.trove.impl.sync.TSynchronizedCharCharMap.equals(Ljava/lang/Object;)Z:170 - ReplaceVariable o -> mutex
   * 3 Strong Mutation 147: gnu.trove.impl.sync.TSynchronizedCharCharMap.equals(Ljava/lang/Object;)Z:170 - ReplaceVariable o -> mutex
   * 4 Strong Mutation 148: gnu.trove.impl.sync.TSynchronizedCharCharMap.equals(Ljava/lang/Object;)Z:170 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 5 gnu.trove.impl.sync.TSynchronizedCharCharMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap((-1094), 0.0F, 'o', 'h');
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      TSynchronizedCharCharMap tSynchronizedCharCharMap1 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0, (Object) tCharCharHashMap0);
      boolean boolean0 = tSynchronizedCharCharMap1.equals((Object) "German");
      assertEquals(false, boolean0);
      assertTrue(tSynchronizedCharCharMap1.equals(tSynchronizedCharCharMap0));
  }

  //Test case number: 25
  /*
   * 25 covered goals:
   * 1 Strong Mutation 151: gnu.trove.impl.sync.TSynchronizedCharCharMap.hashCode()I:173 - DeleteStatement: hashCode()I
   * 2 gnu.trove.impl.sync.TSynchronizedCharCharMap.hashCode()I: root-Branch
   * 3 Strong Mutation 110: gnu.trove.impl.sync.TSynchronizedCharCharMap.increment(C)Z:160 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 111: gnu.trove.impl.sync.TSynchronizedCharCharMap.increment(C)Z:160 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 5 Strong Mutation 114: gnu.trove.impl.sync.TSynchronizedCharCharMap.increment(C)Z:160 - InsertUnaryOp IINC -1 key
   * 6 Strong Mutation 113: gnu.trove.impl.sync.TSynchronizedCharCharMap.increment(C)Z:160 - InsertUnaryOp IINC 1 key
   * 7 Strong Mutation 112: gnu.trove.impl.sync.TSynchronizedCharCharMap.increment(C)Z:160 - InsertUnaryOp Negation of key
   * 8 Strong Mutation 127: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - DeleteField: mutexLjava/lang/Object;
   * 9 Strong Mutation 139: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - ReplaceVariable put_amount -> adjust_amount
   * 10 Strong Mutation 141: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - InsertUnaryOp Negation of put_amount
   * 11 Strong Mutation 143: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - InsertUnaryOp IINC -1 put_amount
   * 12 Strong Mutation 142: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - InsertUnaryOp IINC 1 put_amount
   * 13 Strong Mutation 129: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - ReplaceVariable key -> adjust_amount
   * 14 Strong Mutation 128: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 15 Strong Mutation 131: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - InsertUnaryOp Negation of key
   * 16 Strong Mutation 133: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - InsertUnaryOp IINC -1 key
   * 17 Strong Mutation 132: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - InsertUnaryOp IINC 1 key
   * 18 Strong Mutation 144: gnu.trove.impl.sync.TSynchronizedCharCharMap.adjustOrPutValue(CCC)C:166 - DeleteStatement: adjustOrPutValue(CCC)C
   * 19 Strong Mutation 110: gnu.trove.impl.sync.TSynchronizedCharCharMap.increment(C)Z:160 - DeleteField: mutexLjava/lang/Object;
   * 20 Strong Mutation 111: gnu.trove.impl.sync.TSynchronizedCharCharMap.increment(C)Z:160 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 21 Strong Mutation 114: gnu.trove.impl.sync.TSynchronizedCharCharMap.increment(C)Z:160 - InsertUnaryOp IINC -1 key
   * 22 Strong Mutation 113: gnu.trove.impl.sync.TSynchronizedCharCharMap.increment(C)Z:160 - InsertUnaryOp IINC 1 key
   * 23 Strong Mutation 112: gnu.trove.impl.sync.TSynchronizedCharCharMap.increment(C)Z:160 - InsertUnaryOp Negation of key
   * 24 Strong Mutation 151: gnu.trove.impl.sync.TSynchronizedCharCharMap.hashCode()I:173 - DeleteStatement: hashCode()I
   * 25 gnu.trove.impl.sync.TSynchronizedCharCharMap.increment(C)Z: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap();
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      tSynchronizedCharCharMap0.adjustOrPutValue('*', '5', '*');
      tSynchronizedCharCharMap0.increment('*');
      int int0 = tSynchronizedCharCharMap0.hashCode();
      assertEquals(1, tCharCharHashMap0.size());
      assertEquals(1, int0);
  }

  //Test case number: 26
  /*
   * 7 covered goals:
   * 1 Strong Mutation 154: gnu.trove.impl.sync.TSynchronizedCharCharMap.toString()Ljava/lang/String;:176 - DeleteStatement: toString()Ljava/lang/String;
   * 2 Strong Mutation 152: gnu.trove.impl.sync.TSynchronizedCharCharMap.toString()Ljava/lang/String;:176 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 153: gnu.trove.impl.sync.TSynchronizedCharCharMap.toString()Ljava/lang/String;:176 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 4 Strong Mutation 152: gnu.trove.impl.sync.TSynchronizedCharCharMap.toString()Ljava/lang/String;:176 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 153: gnu.trove.impl.sync.TSynchronizedCharCharMap.toString()Ljava/lang/String;:176 - DeleteField: mLgnu/trove/map/TCharCharMap;
   * 6 Strong Mutation 154: gnu.trove.impl.sync.TSynchronizedCharCharMap.toString()Ljava/lang/String;:176 - DeleteStatement: toString()Ljava/lang/String;
   * 7 gnu.trove.impl.sync.TSynchronizedCharCharMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap((-1094), 0.0F, 'o', 'h');
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      String string0 = tSynchronizedCharCharMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 27
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharCharMap.<init>(Lgnu/trove/map/TCharCharMap;)V: I17 Branch 1 IFNONNULL L59 - false
   * 2 Strong Mutation 0: gnu.trove.impl.sync.TSynchronizedCharCharMap.<init>(Lgnu/trove/map/TCharCharMap;)V:59 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test27()  throws Throwable  {
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = null;
      try {
        tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

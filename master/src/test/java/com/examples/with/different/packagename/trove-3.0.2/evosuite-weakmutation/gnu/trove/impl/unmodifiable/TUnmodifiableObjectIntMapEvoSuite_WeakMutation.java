/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap;
import gnu.trove.map.TObjectIntMap;
import gnu.trove.map.custom_hash.TObjectIntCustomHashMap;
import gnu.trove.map.hash.TObjectIntHashMap;
import gnu.trove.procedure.TIntProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.util.Set;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableObjectIntMapEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 7 covered goals:
   * 1 Weak Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.isEmpty()Z:59 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 2 Weak Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.isEmpty()Z:59 - DeleteStatement: isEmpty()Z
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.isEmpty()Z: root-Branch
   * 4 Weak Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.<init>(Lgnu/trove/map/TObjectIntMap;)V:53 - ReplaceComparisonOperator != null -> = null
   * 5 Weak Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.isEmpty()Z:59 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 6 Weak Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.isEmpty()Z:59 - DeleteStatement: isEmpty()Z
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.<init>(Lgnu/trove/map/TObjectIntMap;)V: I17 Branch 1 IFNONNULL L53 - true
   */

  @Test
  public void test0()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (-1566), (float) (-1566), (-1566));
      TUnmodifiableObjectIntMap<String> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<String>((TObjectIntMap<String>) tObjectIntCustomHashMap0);
      boolean boolean0 = tUnmodifiableObjectIntMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 5 covered goals:
   * 1 Weak Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.containsKey(Ljava/lang/Object;)Z:60 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 2 Weak Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.containsKey(Ljava/lang/Object;)Z:60 - DeleteStatement: containsKey(Ljava/lang/Object;)Z
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.containsKey(Ljava/lang/Object;)Z: root-Branch
   * 4 Weak Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.containsKey(Ljava/lang/Object;)Z:60 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 5 Weak Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.containsKey(Ljava/lang/Object;)Z:60 - DeleteStatement: containsKey(Ljava/lang/Object;)Z
   */

  @Test
  public void test1()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Object> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (-1269), (float) (-1269));
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntCustomHashMap0);
      boolean boolean0 = tUnmodifiableObjectIntMap0.containsKey((Object) "");
      assertEquals(false, boolean0);
  }

  //Test case number: 2
  /*
   * 11 covered goals:
   * 1 Weak Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.containsValue(I)Z:61 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 2 Weak Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.containsValue(I)Z:61 - InsertUnaryOp IINC 1 val
   * 3 Weak Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.containsValue(I)Z:61 - InsertUnaryOp Negation of val
   * 4 Weak Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.containsValue(I)Z:61 - DeleteStatement: containsValue(I)Z
   * 5 Weak Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.containsValue(I)Z:61 - InsertUnaryOp IINC -1 val
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.containsValue(I)Z: root-Branch
   * 7 Weak Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.containsValue(I)Z:61 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 8 Weak Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.containsValue(I)Z:61 - InsertUnaryOp IINC 1 val
   * 9 Weak Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.containsValue(I)Z:61 - InsertUnaryOp Negation of val
   * 10 Weak Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.containsValue(I)Z:61 - DeleteStatement: containsValue(I)Z
   * 11 Weak Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.containsValue(I)Z:61 - InsertUnaryOp IINC -1 val
   */

  @Test
  public void test2()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (-1566), (float) (-1566), (-1566));
      TUnmodifiableObjectIntMap<String> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<String>((TObjectIntMap<String>) tObjectIntCustomHashMap0);
      boolean boolean0 = tUnmodifiableObjectIntMap0.containsValue((-1566));
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 14 covered goals:
   * 1 Weak Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.get(Ljava/lang/Object;)I:62 - DeleteStatement: get(Ljava/lang/Object;)I
   * 2 Weak Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.get(Ljava/lang/Object;)I:62 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.get(Ljava/lang/Object;)I: root-Branch
   * 4 Weak Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.size()I:58 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 5 Weak Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.size()I:58 - DeleteStatement: size()I
   * 6 Weak Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.get(Ljava/lang/Object;)I:62 - DeleteStatement: get(Ljava/lang/Object;)I
   * 7 Weak Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.get(Ljava/lang/Object;)I:62 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 8 Weak Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.getNoEntryValue()I:92 - DeleteStatement: getNoEntryValue()I
   * 9 Weak Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.getNoEntryValue()I:92 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 10 Weak Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z:101 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z
   * 11 Weak Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z:101 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 12 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.getNoEntryValue()I: root-Branch
   * 13 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z: root-Branch
   * 14 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.size()I: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (-1566), (float) (-1566), (-1566));
      TUnmodifiableObjectIntMap<String> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<String>((TObjectIntMap<String>) tObjectIntCustomHashMap0);
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>((TObjectIntMap<?>) tUnmodifiableObjectIntMap0);
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap1 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      int int0 = tUnmodifiableObjectIntMap1.get((Object) null);
      assertEquals((-1566), int0);
  }

  //Test case number: 4
  /*
   * 14 covered goals:
   * 1 Weak Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keySet()Ljava/util/Set;:74 - DeleteField: keySetLjava/util/Set;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keySet()Ljava/util/Set;: I4 Branch 2 IFNONNULL L74 - true
   * 3 Weak Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keySet()Ljava/util/Set;:74 - ReplaceComparisonOperator != null -> = null
   * 4 Weak Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keySet()Ljava/util/Set;:75 - DeleteStatement: keySet()Ljava/util/Set;
   * 5 Weak Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keySet()Ljava/util/Set;:75 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 6 Weak Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keySet()Ljava/util/Set;:76 - DeleteField: keySetLjava/util/Set;
   * 7 Weak Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keySet()Ljava/util/Set;:75 - DeleteStatement: unmodifiableSet(Ljava/util/Set;)Ljava/util/Set;
   * 8 Weak Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keySet()Ljava/util/Set;:74 - ReplaceComparisonOperator != null -> = null
   * 9 Weak Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keySet()Ljava/util/Set;:74 - DeleteField: keySetLjava/util/Set;
   * 10 Weak Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keySet()Ljava/util/Set;:75 - DeleteStatement: keySet()Ljava/util/Set;
   * 11 Weak Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keySet()Ljava/util/Set;:75 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 12 Weak Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keySet()Ljava/util/Set;:76 - DeleteField: keySetLjava/util/Set;
   * 13 Weak Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keySet()Ljava/util/Set;:75 - DeleteStatement: unmodifiableSet(Ljava/util/Set;)Ljava/util/Set;
   * 14 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keySet()Ljava/util/Set;: I4 Branch 2 IFNONNULL L74 - false
   */

  @Test
  public void test4()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Object> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntCustomHashMap0);
      Set<Object> set0 = tUnmodifiableObjectIntMap0.keySet();
      assertNotNull(set0);
      
      Set<Object> set1 = tUnmodifiableObjectIntMap0.keySet();
      assertSame(set1, set0);
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 Weak Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keys()[Ljava/lang/Object;:78 - DeleteStatement: keys()[Ljava/lang/Object;
   * 2 Weak Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keys()[Ljava/lang/Object;:78 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keys()[Ljava/lang/Object;: root-Branch
   * 4 Weak Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keys()[Ljava/lang/Object;:78 - DeleteStatement: keys()[Ljava/lang/Object;
   * 5 Weak Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keys()[Ljava/lang/Object;:78 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   */

  @Test
  public void test5()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Object> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (-1269), (float) (-1269));
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntCustomHashMap0);
      Object[] objectArray0 = tUnmodifiableObjectIntMap0.keys();
      assertNotNull(objectArray0);
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 Weak Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:79 - DeleteStatement: keys([Ljava/lang/Object;)[Ljava/lang/Object;
   * 2 Weak Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:79 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: root-Branch
   * 4 Weak Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:79 - DeleteStatement: keys([Ljava/lang/Object;)[Ljava/lang/Object;
   * 5 Weak Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:79 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   */

  @Test
  public void test6()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Object> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntCustomHashMap0);
      Object[] objectArray0 = tUnmodifiableObjectIntMap0.keys(tObjectIntCustomHashMap0._set);
      assertNotNull(objectArray0);
  }

  //Test case number: 7
  /*
   * 14 covered goals:
   * 1 Weak Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.valueCollection()Lgnu/trove/TIntCollection;:82 - DeleteField: valuesLgnu/trove/TIntCollection;
   * 2 Weak Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.valueCollection()Lgnu/trove/TIntCollection;:82 - ReplaceComparisonOperator != null -> = null
   * 3 Weak Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.valueCollection()Lgnu/trove/TIntCollection;:83 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 4 Weak Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.valueCollection()Lgnu/trove/TIntCollection;:83 - DeleteStatement: valueCollection()Lgnu/trove/TIntCollection;
   * 5 Weak Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.valueCollection()Lgnu/trove/TIntCollection;:83 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TIntCollection;)Lgnu/trove/TIntCollection;
   * 6 Weak Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.valueCollection()Lgnu/trove/TIntCollection;:84 - DeleteField: valuesLgnu/trove/TIntCollection;
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.valueCollection()Lgnu/trove/TIntCollection;: I4 Branch 3 IFNONNULL L82 - true
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.valueCollection()Lgnu/trove/TIntCollection;: I4 Branch 3 IFNONNULL L82 - false
   * 9 Weak Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.valueCollection()Lgnu/trove/TIntCollection;:83 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 10 Weak Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.valueCollection()Lgnu/trove/TIntCollection;:83 - DeleteStatement: valueCollection()Lgnu/trove/TIntCollection;
   * 11 Weak Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.valueCollection()Lgnu/trove/TIntCollection;:82 - DeleteField: valuesLgnu/trove/TIntCollection;
   * 12 Weak Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.valueCollection()Lgnu/trove/TIntCollection;:82 - ReplaceComparisonOperator != null -> = null
   * 13 Weak Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.valueCollection()Lgnu/trove/TIntCollection;:83 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TIntCollection;)Lgnu/trove/TIntCollection;
   * 14 Weak Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.valueCollection()Lgnu/trove/TIntCollection;:84 - DeleteField: valuesLgnu/trove/TIntCollection;
   */

  @Test
  public void test7()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>(1919, 1919);
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      TUnmodifiableIntCollection tUnmodifiableIntCollection0 = (TUnmodifiableIntCollection)tUnmodifiableObjectIntMap0.valueCollection();
      assertNotNull(tUnmodifiableIntCollection0);
      
      TUnmodifiableIntCollection tUnmodifiableIntCollection1 = (TUnmodifiableIntCollection)tUnmodifiableObjectIntMap0.valueCollection();
      assertSame(tUnmodifiableIntCollection1, tUnmodifiableIntCollection0);
  }

  //Test case number: 8
  /*
   * 5 covered goals:
   * 1 Weak Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.values()[I:86 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 2 Weak Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.values()[I:86 - DeleteStatement: values()[I
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.values()[I: root-Branch
   * 4 Weak Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.values()[I:86 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 5 Weak Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.values()[I:86 - DeleteStatement: values()[I
   */

  @Test
  public void test8()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>((-14), (-14));
      TObjectIntCustomHashMap<Object> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectIntMap<?>) tObjectIntHashMap0);
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntCustomHashMap0);
      int[] intArray0 = tUnmodifiableObjectIntMap0.values();
      assertNotNull(intArray0);
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 Weak Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.values([I)[I:87 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 2 Weak Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.values([I)[I:87 - DeleteStatement: values([I)[I
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.values([I)[I: root-Branch
   * 4 Weak Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.values([I)[I:87 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 5 Weak Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.values([I)[I:87 - DeleteStatement: values([I)[I
   */

  @Test
  public void test9()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Object> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntCustomHashMap0);
      int[] intArray0 = new int[9];
      int[] intArray1 = tUnmodifiableObjectIntMap0.values(intArray0);
      assertSame(intArray1, intArray0);
  }

  //Test case number: 10
  /*
   * 12 covered goals:
   * 1 Weak Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> !=
   * 2 Weak Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.equals(Ljava/lang/Object;)Z:89 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 3 Weak Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.equals(Ljava/lang/Object;)Z:89 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.equals(Ljava/lang/Object;)Z:89 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 5 Weak Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> !=
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L89 - false
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L89 - true
   * 8 Weak Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> !=
   * 9 Weak Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.equals(Ljava/lang/Object;)Z:89 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 10 Weak Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.equals(Ljava/lang/Object;)Z:89 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.equals(Ljava/lang/Object;)Z:89 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 12 Weak Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test10()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>(1919, 1919);
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      boolean boolean0 = tUnmodifiableObjectIntMap0.equals((Object) ">Hw-3Pm/~LO/bEer");
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 5 covered goals:
   * 1 Weak Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.hashCode()I:90 - DeleteStatement: hashCode()I
   * 2 Weak Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.hashCode()I:90 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.hashCode()I: root-Branch
   * 4 Weak Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.hashCode()I:90 - DeleteStatement: hashCode()I
   * 5 Weak Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.hashCode()I:90 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   */

  @Test
  public void test11()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>((-14), (-14));
      TObjectIntCustomHashMap<Object> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectIntMap<?>) tObjectIntHashMap0);
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntCustomHashMap0);
      int int0 = tUnmodifiableObjectIntMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 12
  /*
   * 5 covered goals:
   * 1 Weak Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.toString()Ljava/lang/String;:91 - DeleteStatement: toString()Ljava/lang/String;
   * 2 Weak Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.toString()Ljava/lang/String;:91 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.toString()Ljava/lang/String;: root-Branch
   * 4 Weak Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.toString()Ljava/lang/String;:91 - DeleteStatement: toString()Ljava/lang/String;
   * 5 Weak Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.toString()Ljava/lang/String;:91 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   */

  @Test
  public void test12()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<Object> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (-1269), (float) (-1269));
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntCustomHashMap0);
      String string0 = tUnmodifiableObjectIntMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 13
  /*
   * 5 covered goals:
   * 1 Weak Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z:95 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z
   * 2 Weak Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z:95 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   * 4 Weak Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z:95 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z
   * 5 Weak Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z:95 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   */

  @Test
  public void test13()  throws Throwable  {
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>();
      TUnmodifiableObjectIntMap<Integer> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Integer>((TObjectIntMap<Integer>) tObjectIntCustomHashMap0);
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tObjectIntCustomHashMap0._set);
      boolean boolean0 = tUnmodifiableObjectIntMap0.forEachKey((TObjectProcedure<? super Integer>) toObjectArrayProceedure0);
      assertEquals(true, boolean0);
  }

  //Test case number: 14
  /*
   * 5 covered goals:
   * 1 Weak Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z:98 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z
   * 2 Weak Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z:98 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   * 4 Weak Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z:98 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z
   * 5 Weak Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z:98 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   */

  @Test
  public void test14()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>(1919, 1919);
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      boolean boolean0 = tUnmodifiableObjectIntMap0.forEachValue((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 15
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.iterator()Lgnu/trove/iterator/TObjectIntIterator;: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableObjectIntMap;)V: root-Branch
   * 3 Weak Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.size()I:58 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 4 Weak Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.size()I:58 - DeleteStatement: size()I
   * 5 Weak Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.getNoEntryValue()I:92 - DeleteStatement: getNoEntryValue()I
   * 6 Weak Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.getNoEntryValue()I:92 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   * 7 Weak Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z:101 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z
   * 8 Weak Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.forEachEntry(Lgnu/trove/procedure/TObjectIntProcedure;)Z:101 - DeleteField: mLgnu/trove/map/TObjectIntMap;
   */

  @Test
  public void test15()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (-1566), (float) (-1566), (-1566));
      TUnmodifiableObjectIntMap<String> tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<String>((TObjectIntMap<String>) tObjectIntCustomHashMap0);
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>((TObjectIntMap<?>) tUnmodifiableObjectIntMap0);
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap1 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      tUnmodifiableObjectIntMap1.iterator();
      assertEquals(-1566, tObjectIntHashMap0.getNoEntryValue());
      assertEquals(-1566, tUnmodifiableObjectIntMap1.getNoEntryValue());
  }

  //Test case number: 16
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.<init>(Lgnu/trove/map/TObjectIntMap;)V: I17 Branch 1 IFNONNULL L53 - false
   * 2 Weak Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableObjectIntMap.<init>(Lgnu/trove/map/TObjectIntMap;)V:53 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test16()  throws Throwable  {
      TUnmodifiableObjectIntMap<Object> tUnmodifiableObjectIntMap0 = null;
      try {
        tUnmodifiableObjectIntMap0 = new TUnmodifiableObjectIntMap<Object>((TObjectIntMap<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

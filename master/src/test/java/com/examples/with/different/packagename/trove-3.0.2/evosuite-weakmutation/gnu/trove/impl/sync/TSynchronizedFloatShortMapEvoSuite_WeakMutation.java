/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TShortFunction;
import gnu.trove.impl.sync.TSynchronizedFloatSet;
import gnu.trove.impl.sync.TSynchronizedFloatShortMap;
import gnu.trove.impl.sync.TSynchronizedShortCollection;
import gnu.trove.iterator.TFloatShortIterator;
import gnu.trove.map.TFloatShortMap;
import gnu.trove.map.hash.TFloatShortHashMap;
import gnu.trove.procedure.TFloatProcedure;
import gnu.trove.procedure.TFloatShortProcedure;
import gnu.trove.procedure.TShortProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedFloatShortMapEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 9 covered goals:
   * 1 Weak Mutation 2: gnu.trove.impl.sync.TSynchronizedFloatShortMap.size()I:71 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 3: gnu.trove.impl.sync.TSynchronizedFloatShortMap.size()I:71 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 3 Weak Mutation 4: gnu.trove.impl.sync.TSynchronizedFloatShortMap.size()I:71 - DeleteStatement: size()I
   * 4 gnu.trove.impl.sync.TSynchronizedFloatShortMap.size()I: root-Branch
   * 5 Weak Mutation 0: gnu.trove.impl.sync.TSynchronizedFloatShortMap.<init>(Lgnu/trove/map/TFloatShortMap;)V:59 - ReplaceComparisonOperator != null -> = null
   * 6 Weak Mutation 2: gnu.trove.impl.sync.TSynchronizedFloatShortMap.size()I:71 - DeleteField: mutexLjava/lang/Object;
   * 7 Weak Mutation 3: gnu.trove.impl.sync.TSynchronizedFloatShortMap.size()I:71 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 8 Weak Mutation 4: gnu.trove.impl.sync.TSynchronizedFloatShortMap.size()I:71 - DeleteStatement: size()I
   * 9 gnu.trove.impl.sync.TSynchronizedFloatShortMap.<init>(Lgnu/trove/map/TFloatShortMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(0, (float) 0, (float) 0, (short) (-1));
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      int int0 = tSynchronizedFloatShortMap0.size();
      assertEquals(0, int0);
  }

  //Test case number: 1
  /*
   * 7 covered goals:
   * 1 Weak Mutation 5: gnu.trove.impl.sync.TSynchronizedFloatShortMap.isEmpty()Z:74 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 6: gnu.trove.impl.sync.TSynchronizedFloatShortMap.isEmpty()Z:74 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 3 Weak Mutation 7: gnu.trove.impl.sync.TSynchronizedFloatShortMap.isEmpty()Z:74 - DeleteStatement: isEmpty()Z
   * 4 gnu.trove.impl.sync.TSynchronizedFloatShortMap.isEmpty()Z: root-Branch
   * 5 Weak Mutation 5: gnu.trove.impl.sync.TSynchronizedFloatShortMap.isEmpty()Z:74 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 6: gnu.trove.impl.sync.TSynchronizedFloatShortMap.isEmpty()Z:74 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 7 Weak Mutation 7: gnu.trove.impl.sync.TSynchronizedFloatShortMap.isEmpty()Z:74 - DeleteStatement: isEmpty()Z
   */

  @Test
  public void test1()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(994, 994);
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      boolean boolean0 = tSynchronizedFloatShortMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 9 covered goals:
   * 1 Weak Mutation 8: gnu.trove.impl.sync.TSynchronizedFloatShortMap.containsKey(F)Z:77 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 9: gnu.trove.impl.sync.TSynchronizedFloatShortMap.containsKey(F)Z:77 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 3 Weak Mutation 10: gnu.trove.impl.sync.TSynchronizedFloatShortMap.containsKey(F)Z:77 - InsertUnaryOp Negation of key
   * 4 Weak Mutation 11: gnu.trove.impl.sync.TSynchronizedFloatShortMap.containsKey(F)Z:77 - DeleteStatement: containsKey(F)Z
   * 5 gnu.trove.impl.sync.TSynchronizedFloatShortMap.containsKey(F)Z: root-Branch
   * 6 Weak Mutation 8: gnu.trove.impl.sync.TSynchronizedFloatShortMap.containsKey(F)Z:77 - DeleteField: mutexLjava/lang/Object;
   * 7 Weak Mutation 9: gnu.trove.impl.sync.TSynchronizedFloatShortMap.containsKey(F)Z:77 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 8 Weak Mutation 10: gnu.trove.impl.sync.TSynchronizedFloatShortMap.containsKey(F)Z:77 - InsertUnaryOp Negation of key
   * 9 Weak Mutation 11: gnu.trove.impl.sync.TSynchronizedFloatShortMap.containsKey(F)Z:77 - DeleteStatement: containsKey(F)Z
   */

  @Test
  public void test2()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(0, (float) 0, (float) 0, (short) (-1));
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      boolean boolean0 = tSynchronizedFloatShortMap0.containsKey((float) (short) (-988));
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 15 covered goals:
   * 1 Weak Mutation 12: gnu.trove.impl.sync.TSynchronizedFloatShortMap.containsValue(S)Z:80 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 13: gnu.trove.impl.sync.TSynchronizedFloatShortMap.containsValue(S)Z:80 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 3 Weak Mutation 14: gnu.trove.impl.sync.TSynchronizedFloatShortMap.containsValue(S)Z:80 - InsertUnaryOp Negation of value
   * 4 Weak Mutation 15: gnu.trove.impl.sync.TSynchronizedFloatShortMap.containsValue(S)Z:80 - InsertUnaryOp IINC 1 value
   * 5 Weak Mutation 17: gnu.trove.impl.sync.TSynchronizedFloatShortMap.containsValue(S)Z:80 - DeleteStatement: containsValue(S)Z
   * 6 Weak Mutation 16: gnu.trove.impl.sync.TSynchronizedFloatShortMap.containsValue(S)Z:80 - InsertUnaryOp IINC -1 value
   * 7 gnu.trove.impl.sync.TSynchronizedFloatShortMap.containsValue(S)Z: root-Branch
   * 8 Weak Mutation 1: gnu.trove.impl.sync.TSynchronizedFloatShortMap.<init>(Lgnu/trove/map/TFloatShortMap;Ljava/lang/Object;)V:67 - ReplaceVariable mutex -> mutex
   * 9 Weak Mutation 12: gnu.trove.impl.sync.TSynchronizedFloatShortMap.containsValue(S)Z:80 - DeleteField: mutexLjava/lang/Object;
   * 10 Weak Mutation 13: gnu.trove.impl.sync.TSynchronizedFloatShortMap.containsValue(S)Z:80 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 11 Weak Mutation 14: gnu.trove.impl.sync.TSynchronizedFloatShortMap.containsValue(S)Z:80 - InsertUnaryOp Negation of value
   * 12 Weak Mutation 15: gnu.trove.impl.sync.TSynchronizedFloatShortMap.containsValue(S)Z:80 - InsertUnaryOp IINC 1 value
   * 13 Weak Mutation 17: gnu.trove.impl.sync.TSynchronizedFloatShortMap.containsValue(S)Z:80 - DeleteStatement: containsValue(S)Z
   * 14 Weak Mutation 16: gnu.trove.impl.sync.TSynchronizedFloatShortMap.containsValue(S)Z:80 - InsertUnaryOp IINC -1 value
   * 15 gnu.trove.impl.sync.TSynchronizedFloatShortMap.<init>(Lgnu/trove/map/TFloatShortMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(5);
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0, (Object) "5.0");
      boolean boolean0 = tSynchronizedFloatShortMap0.containsValue((short) (-4));
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 9 covered goals:
   * 1 Weak Mutation 19: gnu.trove.impl.sync.TSynchronizedFloatShortMap.get(F)S:83 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 2 Weak Mutation 18: gnu.trove.impl.sync.TSynchronizedFloatShortMap.get(F)S:83 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 21: gnu.trove.impl.sync.TSynchronizedFloatShortMap.get(F)S:83 - DeleteStatement: get(F)S
   * 4 Weak Mutation 20: gnu.trove.impl.sync.TSynchronizedFloatShortMap.get(F)S:83 - InsertUnaryOp Negation of key
   * 5 gnu.trove.impl.sync.TSynchronizedFloatShortMap.get(F)S: root-Branch
   * 6 Weak Mutation 19: gnu.trove.impl.sync.TSynchronizedFloatShortMap.get(F)S:83 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 7 Weak Mutation 18: gnu.trove.impl.sync.TSynchronizedFloatShortMap.get(F)S:83 - DeleteField: mutexLjava/lang/Object;
   * 8 Weak Mutation 21: gnu.trove.impl.sync.TSynchronizedFloatShortMap.get(F)S:83 - DeleteStatement: get(F)S
   * 9 Weak Mutation 20: gnu.trove.impl.sync.TSynchronizedFloatShortMap.get(F)S:83 - InsertUnaryOp Negation of key
   */

  @Test
  public void test4()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(0, (float) 0, (float) 0, (short) (-1));
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      short short0 = tSynchronizedFloatShortMap0.get((float) (short) (-1));
      assertEquals((short) (-1), short0);
  }

  //Test case number: 5
  /*
   * 15 covered goals:
   * 1 Weak Mutation 23: gnu.trove.impl.sync.TSynchronizedFloatShortMap.put(FS)S:87 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 2 Weak Mutation 22: gnu.trove.impl.sync.TSynchronizedFloatShortMap.put(FS)S:87 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 25: gnu.trove.impl.sync.TSynchronizedFloatShortMap.put(FS)S:87 - InsertUnaryOp Negation of value
   * 4 Weak Mutation 24: gnu.trove.impl.sync.TSynchronizedFloatShortMap.put(FS)S:87 - InsertUnaryOp Negation of key
   * 5 Weak Mutation 27: gnu.trove.impl.sync.TSynchronizedFloatShortMap.put(FS)S:87 - InsertUnaryOp IINC -1 value
   * 6 Weak Mutation 26: gnu.trove.impl.sync.TSynchronizedFloatShortMap.put(FS)S:87 - InsertUnaryOp IINC 1 value
   * 7 Weak Mutation 28: gnu.trove.impl.sync.TSynchronizedFloatShortMap.put(FS)S:87 - DeleteStatement: put(FS)S
   * 8 gnu.trove.impl.sync.TSynchronizedFloatShortMap.put(FS)S: root-Branch
   * 9 Weak Mutation 23: gnu.trove.impl.sync.TSynchronizedFloatShortMap.put(FS)S:87 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 10 Weak Mutation 22: gnu.trove.impl.sync.TSynchronizedFloatShortMap.put(FS)S:87 - DeleteField: mutexLjava/lang/Object;
   * 11 Weak Mutation 25: gnu.trove.impl.sync.TSynchronizedFloatShortMap.put(FS)S:87 - InsertUnaryOp Negation of value
   * 12 Weak Mutation 24: gnu.trove.impl.sync.TSynchronizedFloatShortMap.put(FS)S:87 - InsertUnaryOp Negation of key
   * 13 Weak Mutation 27: gnu.trove.impl.sync.TSynchronizedFloatShortMap.put(FS)S:87 - InsertUnaryOp IINC -1 value
   * 14 Weak Mutation 26: gnu.trove.impl.sync.TSynchronizedFloatShortMap.put(FS)S:87 - InsertUnaryOp IINC 1 value
   * 15 Weak Mutation 28: gnu.trove.impl.sync.TSynchronizedFloatShortMap.put(FS)S:87 - DeleteStatement: put(FS)S
   */

  @Test
  public void test5()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap((-1737), (-1737));
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      tSynchronizedFloatShortMap0.put((float) (short)9661, (short)9661);
      assertEquals(7, tFloatShortHashMap0.capacity());
      assertEquals("{9661.0=9661}", tFloatShortHashMap0.toString());
  }

  //Test case number: 6
  /*
   * 9 covered goals:
   * 1 Weak Mutation 29: gnu.trove.impl.sync.TSynchronizedFloatShortMap.remove(F)S:90 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 31: gnu.trove.impl.sync.TSynchronizedFloatShortMap.remove(F)S:90 - InsertUnaryOp Negation of key
   * 3 Weak Mutation 30: gnu.trove.impl.sync.TSynchronizedFloatShortMap.remove(F)S:90 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 4 Weak Mutation 32: gnu.trove.impl.sync.TSynchronizedFloatShortMap.remove(F)S:90 - DeleteStatement: remove(F)S
   * 5 gnu.trove.impl.sync.TSynchronizedFloatShortMap.remove(F)S: root-Branch
   * 6 Weak Mutation 29: gnu.trove.impl.sync.TSynchronizedFloatShortMap.remove(F)S:90 - DeleteField: mutexLjava/lang/Object;
   * 7 Weak Mutation 31: gnu.trove.impl.sync.TSynchronizedFloatShortMap.remove(F)S:90 - InsertUnaryOp Negation of key
   * 8 Weak Mutation 30: gnu.trove.impl.sync.TSynchronizedFloatShortMap.remove(F)S:90 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 9 Weak Mutation 32: gnu.trove.impl.sync.TSynchronizedFloatShortMap.remove(F)S:90 - DeleteStatement: remove(F)S
   */

  @Test
  public void test6()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(0, (float) 0, (float) 0, (short) (-1));
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      short short0 = tSynchronizedFloatShortMap0.remove((float) 0);
      assertEquals((short) (-1), short0);
  }

  //Test case number: 7
  /*
   * 7 covered goals:
   * 1 Weak Mutation 34: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putAll(Ljava/util/Map;)V:93 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 2 Weak Mutation 35: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putAll(Ljava/util/Map;)V:93 - DeleteStatement: putAll(Ljava/util/Map;)V
   * 3 Weak Mutation 33: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putAll(Ljava/util/Map;)V:93 - DeleteField: mutexLjava/lang/Object;
   * 4 gnu.trove.impl.sync.TSynchronizedFloatShortMap.putAll(Ljava/util/Map;)V: root-Branch
   * 5 Weak Mutation 34: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putAll(Ljava/util/Map;)V:93 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 6 Weak Mutation 35: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putAll(Ljava/util/Map;)V:93 - DeleteStatement: putAll(Ljava/util/Map;)V
   * 7 Weak Mutation 33: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putAll(Ljava/util/Map;)V:93 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test7()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(0, (float) 0, (float) 0, (short) (-1));
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      HashMap<Float, Short> hashMap0 = new HashMap<Float, Short>();
      tSynchronizedFloatShortMap0.putAll((Map<? extends Float, ? extends Short>) hashMap0);
      assertEquals("{}", tSynchronizedFloatShortMap0.toString());
  }

  //Test case number: 8
  /*
   * 7 covered goals:
   * 1 Weak Mutation 38: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putAll(Lgnu/trove/map/TFloatShortMap;)V:96 - DeleteStatement: putAll(Lgnu/trove/map/TFloatShortMap;)V
   * 2 Weak Mutation 36: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putAll(Lgnu/trove/map/TFloatShortMap;)V:96 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 37: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putAll(Lgnu/trove/map/TFloatShortMap;)V:96 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 4 gnu.trove.impl.sync.TSynchronizedFloatShortMap.putAll(Lgnu/trove/map/TFloatShortMap;)V: root-Branch
   * 5 Weak Mutation 38: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putAll(Lgnu/trove/map/TFloatShortMap;)V:96 - DeleteStatement: putAll(Lgnu/trove/map/TFloatShortMap;)V
   * 6 Weak Mutation 36: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putAll(Lgnu/trove/map/TFloatShortMap;)V:96 - DeleteField: mutexLjava/lang/Object;
   * 7 Weak Mutation 37: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putAll(Lgnu/trove/map/TFloatShortMap;)V:96 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   */

//   @Test
//   public void test8()  throws Throwable  {
//       TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(994, 994);
//       TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
//       tSynchronizedFloatShortMap0.putAll((TFloatShortMap) tFloatShortHashMap0);
//       assertEquals(0.0F, tSynchronizedFloatShortMap0.getNoEntryKey(), 0.01F);
//   }

  //Test case number: 9
  /*
   * 7 covered goals:
   * 1 Weak Mutation 39: gnu.trove.impl.sync.TSynchronizedFloatShortMap.clear()V:99 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 40: gnu.trove.impl.sync.TSynchronizedFloatShortMap.clear()V:99 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 3 Weak Mutation 41: gnu.trove.impl.sync.TSynchronizedFloatShortMap.clear()V:99 - DeleteStatement: clear()V
   * 4 gnu.trove.impl.sync.TSynchronizedFloatShortMap.clear()V: root-Branch
   * 5 Weak Mutation 39: gnu.trove.impl.sync.TSynchronizedFloatShortMap.clear()V:99 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 40: gnu.trove.impl.sync.TSynchronizedFloatShortMap.clear()V:99 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 7 Weak Mutation 41: gnu.trove.impl.sync.TSynchronizedFloatShortMap.clear()V:99 - DeleteStatement: clear()V
   */

  @Test
  public void test9()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(994, 994);
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      tSynchronizedFloatShortMap0.clear();
      assertEquals("{}", tSynchronizedFloatShortMap0.toString());
  }

  //Test case number: 10
  /*
   * 16 covered goals:
   * 1 Weak Mutation 43: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:107 - DeleteField: keySetLgnu/trove/set/TFloatSet;
   * 2 gnu.trove.impl.sync.TSynchronizedFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;: I11 Branch 2 IFNONNULL L107 - true
   * 3 Weak Mutation 42: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:106 - DeleteField: mutexLjava/lang/Object;
   * 4 Weak Mutation 46: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:108 - DeleteStatement: keySet()Lgnu/trove/set/TFloatSet;
   * 5 Weak Mutation 47: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:108 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 44: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:107 - ReplaceComparisonOperator != null -> = null
   * 7 Weak Mutation 45: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:108 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 8 Weak Mutation 48: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:109 - DeleteField: keySetLgnu/trove/set/TFloatSet;
   * 9 Weak Mutation 42: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:106 - DeleteField: mutexLjava/lang/Object;
   * 10 Weak Mutation 43: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:107 - DeleteField: keySetLgnu/trove/set/TFloatSet;
   * 11 Weak Mutation 46: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:108 - DeleteStatement: keySet()Lgnu/trove/set/TFloatSet;
   * 12 Weak Mutation 47: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:108 - DeleteField: mutexLjava/lang/Object;
   * 13 Weak Mutation 44: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:107 - ReplaceComparisonOperator != null -> = null
   * 14 Weak Mutation 45: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:108 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 15 Weak Mutation 48: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:109 - DeleteField: keySetLgnu/trove/set/TFloatSet;
   * 16 gnu.trove.impl.sync.TSynchronizedFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test10()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(994, 994);
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      TSynchronizedFloatSet tSynchronizedFloatSet0 = (TSynchronizedFloatSet)tSynchronizedFloatShortMap0.keySet();
      assertNotNull(tSynchronizedFloatSet0);
      
      TSynchronizedFloatSet tSynchronizedFloatSet1 = (TSynchronizedFloatSet)tSynchronizedFloatShortMap0.keySet();
      assertSame(tSynchronizedFloatSet1, tSynchronizedFloatSet0);
  }

  //Test case number: 11
  /*
   * 7 covered goals:
   * 1 Weak Mutation 51: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keys()[F:113 - DeleteStatement: keys()[F
   * 2 Weak Mutation 50: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keys()[F:113 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 3 Weak Mutation 49: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keys()[F:113 - DeleteField: mutexLjava/lang/Object;
   * 4 gnu.trove.impl.sync.TSynchronizedFloatShortMap.keys()[F: root-Branch
   * 5 Weak Mutation 51: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keys()[F:113 - DeleteStatement: keys()[F
   * 6 Weak Mutation 50: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keys()[F:113 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 7 Weak Mutation 49: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keys()[F:113 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test11()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap();
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0, (Object) "\u4E2D\u83EF\u4EBA\u6C11\u5171\u548C\u56FD");
      float[] floatArray0 = tSynchronizedFloatShortMap0.keys();
      assertNotNull(floatArray0);
  }

  //Test case number: 12
  /*
   * 7 covered goals:
   * 1 Weak Mutation 54: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keys([F)[F:116 - DeleteStatement: keys([F)[F
   * 2 Weak Mutation 53: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keys([F)[F:116 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 3 Weak Mutation 52: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keys([F)[F:116 - DeleteField: mutexLjava/lang/Object;
   * 4 gnu.trove.impl.sync.TSynchronizedFloatShortMap.keys([F)[F: root-Branch
   * 5 Weak Mutation 54: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keys([F)[F:116 - DeleteStatement: keys([F)[F
   * 6 Weak Mutation 53: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keys([F)[F:116 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 7 Weak Mutation 52: gnu.trove.impl.sync.TSynchronizedFloatShortMap.keys([F)[F:116 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test12()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(994, 994);
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      float[] floatArray0 = tSynchronizedFloatShortMap0.keys(tFloatShortHashMap0._set);
      assertNotNull(floatArray0);
  }

  //Test case number: 13
  /*
   * 16 covered goals:
   * 1 Weak Mutation 56: gnu.trove.impl.sync.TSynchronizedFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:121 - DeleteField: valuesLgnu/trove/TShortCollection;
   * 2 gnu.trove.impl.sync.TSynchronizedFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 3 Weak Mutation 55: gnu.trove.impl.sync.TSynchronizedFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:120 - DeleteField: mutexLjava/lang/Object;
   * 4 Weak Mutation 59: gnu.trove.impl.sync.TSynchronizedFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:122 - DeleteStatement: valueCollection()Lgnu/trove/TShortCollection;
   * 5 Weak Mutation 58: gnu.trove.impl.sync.TSynchronizedFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:122 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 6 Weak Mutation 57: gnu.trove.impl.sync.TSynchronizedFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:121 - ReplaceComparisonOperator != null -> = null
   * 7 Weak Mutation 61: gnu.trove.impl.sync.TSynchronizedFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:123 - DeleteField: valuesLgnu/trove/TShortCollection;
   * 8 Weak Mutation 60: gnu.trove.impl.sync.TSynchronizedFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:122 - DeleteField: mutexLjava/lang/Object;
   * 9 Weak Mutation 55: gnu.trove.impl.sync.TSynchronizedFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:120 - DeleteField: mutexLjava/lang/Object;
   * 10 Weak Mutation 59: gnu.trove.impl.sync.TSynchronizedFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:122 - DeleteStatement: valueCollection()Lgnu/trove/TShortCollection;
   * 11 Weak Mutation 58: gnu.trove.impl.sync.TSynchronizedFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:122 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 12 Weak Mutation 57: gnu.trove.impl.sync.TSynchronizedFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:121 - ReplaceComparisonOperator != null -> = null
   * 13 Weak Mutation 56: gnu.trove.impl.sync.TSynchronizedFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:121 - DeleteField: valuesLgnu/trove/TShortCollection;
   * 14 Weak Mutation 61: gnu.trove.impl.sync.TSynchronizedFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:123 - DeleteField: valuesLgnu/trove/TShortCollection;
   * 15 Weak Mutation 60: gnu.trove.impl.sync.TSynchronizedFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:122 - DeleteField: mutexLjava/lang/Object;
   * 16 gnu.trove.impl.sync.TSynchronizedFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;: I11 Branch 3 IFNONNULL L121 - false
   */

  @Test
  public void test13()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(994, 994);
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      TSynchronizedShortCollection tSynchronizedShortCollection0 = (TSynchronizedShortCollection)tSynchronizedFloatShortMap0.valueCollection();
      assertNotNull(tSynchronizedShortCollection0);
      
      TSynchronizedShortCollection tSynchronizedShortCollection1 = (TSynchronizedShortCollection)tSynchronizedFloatShortMap0.valueCollection();
      assertSame(tSynchronizedShortCollection1, tSynchronizedShortCollection0);
  }

  //Test case number: 14
  /*
   * 7 covered goals:
   * 1 Weak Mutation 63: gnu.trove.impl.sync.TSynchronizedFloatShortMap.values()[S:127 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 2 Weak Mutation 62: gnu.trove.impl.sync.TSynchronizedFloatShortMap.values()[S:127 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 64: gnu.trove.impl.sync.TSynchronizedFloatShortMap.values()[S:127 - DeleteStatement: values()[S
   * 4 gnu.trove.impl.sync.TSynchronizedFloatShortMap.values()[S: root-Branch
   * 5 Weak Mutation 63: gnu.trove.impl.sync.TSynchronizedFloatShortMap.values()[S:127 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 6 Weak Mutation 62: gnu.trove.impl.sync.TSynchronizedFloatShortMap.values()[S:127 - DeleteField: mutexLjava/lang/Object;
   * 7 Weak Mutation 64: gnu.trove.impl.sync.TSynchronizedFloatShortMap.values()[S:127 - DeleteStatement: values()[S
   */

  @Test
  public void test14()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(0, (float) 0, (float) 0, (short) (-1));
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      short[] shortArray0 = tSynchronizedFloatShortMap0.values();
      assertNotNull(shortArray0);
  }

  //Test case number: 15
  /*
   * 7 covered goals:
   * 1 Weak Mutation 65: gnu.trove.impl.sync.TSynchronizedFloatShortMap.values([S)[S:130 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 66: gnu.trove.impl.sync.TSynchronizedFloatShortMap.values([S)[S:130 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 3 Weak Mutation 67: gnu.trove.impl.sync.TSynchronizedFloatShortMap.values([S)[S:130 - DeleteStatement: values([S)[S
   * 4 gnu.trove.impl.sync.TSynchronizedFloatShortMap.values([S)[S: root-Branch
   * 5 Weak Mutation 65: gnu.trove.impl.sync.TSynchronizedFloatShortMap.values([S)[S:130 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 66: gnu.trove.impl.sync.TSynchronizedFloatShortMap.values([S)[S:130 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 7 Weak Mutation 67: gnu.trove.impl.sync.TSynchronizedFloatShortMap.values([S)[S:130 - DeleteStatement: values([S)[S
   */

  @Test
  public void test15()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap((-578), (float) (-578), (float) (-578), (short)29776);
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      short[] shortArray0 = new short[1];
      short[] shortArray1 = tSynchronizedFloatShortMap0.values(shortArray0);
      assertSame(shortArray1, shortArray0);
  }

  //Test case number: 16
  /*
   * 5 covered goals:
   * 1 Weak Mutation 68: gnu.trove.impl.sync.TSynchronizedFloatShortMap.iterator()Lgnu/trove/iterator/TFloatShortIterator;:134 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 2 Weak Mutation 69: gnu.trove.impl.sync.TSynchronizedFloatShortMap.iterator()Lgnu/trove/iterator/TFloatShortIterator;:134 - DeleteStatement: iterator()Lgnu/trove/iterator/TFloatShortIterator;
   * 3 gnu.trove.impl.sync.TSynchronizedFloatShortMap.iterator()Lgnu/trove/iterator/TFloatShortIterator;: root-Branch
   * 4 Weak Mutation 68: gnu.trove.impl.sync.TSynchronizedFloatShortMap.iterator()Lgnu/trove/iterator/TFloatShortIterator;:134 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 5 Weak Mutation 69: gnu.trove.impl.sync.TSynchronizedFloatShortMap.iterator()Lgnu/trove/iterator/TFloatShortIterator;:134 - DeleteStatement: iterator()Lgnu/trove/iterator/TFloatShortIterator;
   */

  @Test
  public void test16()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(0, (float) 0, (float) 0, (short) (-1));
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      TFloatShortIterator tFloatShortIterator0 = tSynchronizedFloatShortMap0.iterator();
      assertEquals(false, tFloatShortIterator0.hasNext());
  }

  //Test case number: 17
  /*
   * 5 covered goals:
   * 1 Weak Mutation 70: gnu.trove.impl.sync.TSynchronizedFloatShortMap.getNoEntryKey()F:138 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 2 Weak Mutation 71: gnu.trove.impl.sync.TSynchronizedFloatShortMap.getNoEntryKey()F:138 - DeleteStatement: getNoEntryKey()F
   * 3 gnu.trove.impl.sync.TSynchronizedFloatShortMap.getNoEntryKey()F: root-Branch
   * 4 Weak Mutation 70: gnu.trove.impl.sync.TSynchronizedFloatShortMap.getNoEntryKey()F:138 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 5 Weak Mutation 71: gnu.trove.impl.sync.TSynchronizedFloatShortMap.getNoEntryKey()F:138 - DeleteStatement: getNoEntryKey()F
   */

//   @Test
//   public void test17()  throws Throwable  {
//       TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap();
//       TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
//       float float0 = tSynchronizedFloatShortMap0.getNoEntryKey();
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 18
  /*
   * 5 covered goals:
   * 1 Weak Mutation 72: gnu.trove.impl.sync.TSynchronizedFloatShortMap.getNoEntryValue()S:139 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 2 Weak Mutation 73: gnu.trove.impl.sync.TSynchronizedFloatShortMap.getNoEntryValue()S:139 - DeleteStatement: getNoEntryValue()S
   * 3 gnu.trove.impl.sync.TSynchronizedFloatShortMap.getNoEntryValue()S: root-Branch
   * 4 Weak Mutation 72: gnu.trove.impl.sync.TSynchronizedFloatShortMap.getNoEntryValue()S:139 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 5 Weak Mutation 73: gnu.trove.impl.sync.TSynchronizedFloatShortMap.getNoEntryValue()S:139 - DeleteStatement: getNoEntryValue()S
   */

  @Test
  public void test18()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(994, 994);
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      short short0 = tSynchronizedFloatShortMap0.getNoEntryValue();
      assertEquals((short)0, short0);
  }

  //Test case number: 19
  /*
   * 15 covered goals:
   * 1 Weak Mutation 76: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putIfAbsent(FS)S:142 - InsertUnaryOp Negation of key
   * 2 Weak Mutation 77: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putIfAbsent(FS)S:142 - InsertUnaryOp Negation of value
   * 3 Weak Mutation 78: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putIfAbsent(FS)S:142 - InsertUnaryOp IINC 1 value
   * 4 Weak Mutation 79: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putIfAbsent(FS)S:142 - InsertUnaryOp IINC -1 value
   * 5 Weak Mutation 74: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putIfAbsent(FS)S:142 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 75: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putIfAbsent(FS)S:142 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 7 Weak Mutation 80: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putIfAbsent(FS)S:142 - DeleteStatement: putIfAbsent(FS)S
   * 8 gnu.trove.impl.sync.TSynchronizedFloatShortMap.putIfAbsent(FS)S: root-Branch
   * 9 Weak Mutation 76: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putIfAbsent(FS)S:142 - InsertUnaryOp Negation of key
   * 10 Weak Mutation 77: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putIfAbsent(FS)S:142 - InsertUnaryOp Negation of value
   * 11 Weak Mutation 78: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putIfAbsent(FS)S:142 - InsertUnaryOp IINC 1 value
   * 12 Weak Mutation 79: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putIfAbsent(FS)S:142 - InsertUnaryOp IINC -1 value
   * 13 Weak Mutation 74: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putIfAbsent(FS)S:142 - DeleteField: mutexLjava/lang/Object;
   * 14 Weak Mutation 75: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putIfAbsent(FS)S:142 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 15 Weak Mutation 80: gnu.trove.impl.sync.TSynchronizedFloatShortMap.putIfAbsent(FS)S:142 - DeleteStatement: putIfAbsent(FS)S
   */

  @Test
  public void test19()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap();
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      tSynchronizedFloatShortMap0.putIfAbsent(16.201561F, (short) (-1536));
      assertEquals("{16.201561=-1536}", tFloatShortHashMap0.toString());
      assertEquals(false, tSynchronizedFloatShortMap0.isEmpty());
  }

  //Test case number: 20
  /*
   * 7 covered goals:
   * 1 Weak Mutation 81: gnu.trove.impl.sync.TSynchronizedFloatShortMap.forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z:145 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 83: gnu.trove.impl.sync.TSynchronizedFloatShortMap.forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z:145 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z
   * 3 Weak Mutation 82: gnu.trove.impl.sync.TSynchronizedFloatShortMap.forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z:145 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 4 gnu.trove.impl.sync.TSynchronizedFloatShortMap.forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   * 5 Weak Mutation 81: gnu.trove.impl.sync.TSynchronizedFloatShortMap.forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z:145 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 83: gnu.trove.impl.sync.TSynchronizedFloatShortMap.forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z:145 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z
   * 7 Weak Mutation 82: gnu.trove.impl.sync.TSynchronizedFloatShortMap.forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z:145 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   */

  @Test
  public void test20()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap((-562), (-562));
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0, (Object) "-0x1.19p9");
      boolean boolean0 = tSynchronizedFloatShortMap0.forEachKey((TFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 7 covered goals:
   * 1 Weak Mutation 85: gnu.trove.impl.sync.TSynchronizedFloatShortMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z:148 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 2 Weak Mutation 84: gnu.trove.impl.sync.TSynchronizedFloatShortMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z:148 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 86: gnu.trove.impl.sync.TSynchronizedFloatShortMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z:148 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z
   * 4 gnu.trove.impl.sync.TSynchronizedFloatShortMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   * 5 Weak Mutation 85: gnu.trove.impl.sync.TSynchronizedFloatShortMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z:148 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 6 Weak Mutation 84: gnu.trove.impl.sync.TSynchronizedFloatShortMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z:148 - DeleteField: mutexLjava/lang/Object;
   * 7 Weak Mutation 86: gnu.trove.impl.sync.TSynchronizedFloatShortMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z:148 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z
   */

  @Test
  public void test21()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap((-562), (-562));
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0, (Object) "-0x1.19p9");
      boolean boolean0 = tSynchronizedFloatShortMap0.forEachValue((TShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 22
  /*
   * 7 covered goals:
   * 1 Weak Mutation 87: gnu.trove.impl.sync.TSynchronizedFloatShortMap.forEachEntry(Lgnu/trove/procedure/TFloatShortProcedure;)Z:151 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 89: gnu.trove.impl.sync.TSynchronizedFloatShortMap.forEachEntry(Lgnu/trove/procedure/TFloatShortProcedure;)Z:151 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TFloatShortProcedure;)Z
   * 3 Weak Mutation 88: gnu.trove.impl.sync.TSynchronizedFloatShortMap.forEachEntry(Lgnu/trove/procedure/TFloatShortProcedure;)Z:151 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 4 gnu.trove.impl.sync.TSynchronizedFloatShortMap.forEachEntry(Lgnu/trove/procedure/TFloatShortProcedure;)Z: root-Branch
   * 5 Weak Mutation 87: gnu.trove.impl.sync.TSynchronizedFloatShortMap.forEachEntry(Lgnu/trove/procedure/TFloatShortProcedure;)Z:151 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 89: gnu.trove.impl.sync.TSynchronizedFloatShortMap.forEachEntry(Lgnu/trove/procedure/TFloatShortProcedure;)Z:151 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TFloatShortProcedure;)Z
   * 7 Weak Mutation 88: gnu.trove.impl.sync.TSynchronizedFloatShortMap.forEachEntry(Lgnu/trove/procedure/TFloatShortProcedure;)Z:151 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   */

  @Test
  public void test22()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap((-1737), (-1737));
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      boolean boolean0 = tSynchronizedFloatShortMap0.forEachEntry((TFloatShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 7 covered goals:
   * 1 Weak Mutation 92: gnu.trove.impl.sync.TSynchronizedFloatShortMap.transformValues(Lgnu/trove/function/TShortFunction;)V:154 - DeleteStatement: transformValues(Lgnu/trove/function/TShortFunction;)V
   * 2 Weak Mutation 91: gnu.trove.impl.sync.TSynchronizedFloatShortMap.transformValues(Lgnu/trove/function/TShortFunction;)V:154 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 3 Weak Mutation 90: gnu.trove.impl.sync.TSynchronizedFloatShortMap.transformValues(Lgnu/trove/function/TShortFunction;)V:154 - DeleteField: mutexLjava/lang/Object;
   * 4 gnu.trove.impl.sync.TSynchronizedFloatShortMap.transformValues(Lgnu/trove/function/TShortFunction;)V: root-Branch
   * 5 Weak Mutation 92: gnu.trove.impl.sync.TSynchronizedFloatShortMap.transformValues(Lgnu/trove/function/TShortFunction;)V:154 - DeleteStatement: transformValues(Lgnu/trove/function/TShortFunction;)V
   * 6 Weak Mutation 91: gnu.trove.impl.sync.TSynchronizedFloatShortMap.transformValues(Lgnu/trove/function/TShortFunction;)V:154 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 7 Weak Mutation 90: gnu.trove.impl.sync.TSynchronizedFloatShortMap.transformValues(Lgnu/trove/function/TShortFunction;)V:154 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test23()  throws Throwable  {
      float[] floatArray0 = new float[5];
      short[] shortArray0 = new short[8];
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(floatArray0, shortArray0);
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      // Undeclared exception!
      try {
        tSynchronizedFloatShortMap0.transformValues((TShortFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 7 covered goals:
   * 1 Weak Mutation 93: gnu.trove.impl.sync.TSynchronizedFloatShortMap.retainEntries(Lgnu/trove/procedure/TFloatShortProcedure;)Z:157 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 95: gnu.trove.impl.sync.TSynchronizedFloatShortMap.retainEntries(Lgnu/trove/procedure/TFloatShortProcedure;)Z:157 - DeleteStatement: retainEntries(Lgnu/trove/procedure/TFloatShortProcedure;)Z
   * 3 Weak Mutation 94: gnu.trove.impl.sync.TSynchronizedFloatShortMap.retainEntries(Lgnu/trove/procedure/TFloatShortProcedure;)Z:157 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 4 gnu.trove.impl.sync.TSynchronizedFloatShortMap.retainEntries(Lgnu/trove/procedure/TFloatShortProcedure;)Z: root-Branch
   * 5 Weak Mutation 93: gnu.trove.impl.sync.TSynchronizedFloatShortMap.retainEntries(Lgnu/trove/procedure/TFloatShortProcedure;)Z:157 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 95: gnu.trove.impl.sync.TSynchronizedFloatShortMap.retainEntries(Lgnu/trove/procedure/TFloatShortProcedure;)Z:157 - DeleteStatement: retainEntries(Lgnu/trove/procedure/TFloatShortProcedure;)Z
   * 7 Weak Mutation 94: gnu.trove.impl.sync.TSynchronizedFloatShortMap.retainEntries(Lgnu/trove/procedure/TFloatShortProcedure;)Z:157 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   */

  @Test
  public void test24()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap((-578), (float) (-578), (float) (-578), (short)29776);
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      boolean boolean0 = tSynchronizedFloatShortMap0.retainEntries((TFloatShortProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 25
  /*
   * 10 covered goals:
   * 1 Weak Mutation 98: gnu.trove.impl.sync.TSynchronizedFloatShortMap.increment(F)Z:160 - InsertUnaryOp Negation of key
   * 2 Weak Mutation 99: gnu.trove.impl.sync.TSynchronizedFloatShortMap.increment(F)Z:160 - DeleteStatement: increment(F)Z
   * 3 Weak Mutation 96: gnu.trove.impl.sync.TSynchronizedFloatShortMap.increment(F)Z:160 - DeleteField: mutexLjava/lang/Object;
   * 4 Weak Mutation 97: gnu.trove.impl.sync.TSynchronizedFloatShortMap.increment(F)Z:160 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 5 gnu.trove.impl.sync.TSynchronizedFloatShortMap.increment(F)Z: root-Branch
   * 6 Weak Mutation 1: gnu.trove.impl.sync.TSynchronizedFloatShortMap.<init>(Lgnu/trove/map/TFloatShortMap;Ljava/lang/Object;)V:67 - ReplaceVariable mutex -> mutex
   * 7 Weak Mutation 98: gnu.trove.impl.sync.TSynchronizedFloatShortMap.increment(F)Z:160 - InsertUnaryOp Negation of key
   * 8 Weak Mutation 99: gnu.trove.impl.sync.TSynchronizedFloatShortMap.increment(F)Z:160 - DeleteStatement: increment(F)Z
   * 9 Weak Mutation 96: gnu.trove.impl.sync.TSynchronizedFloatShortMap.increment(F)Z:160 - DeleteField: mutexLjava/lang/Object;
   * 10 Weak Mutation 97: gnu.trove.impl.sync.TSynchronizedFloatShortMap.increment(F)Z:160 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   */

  @Test
  public void test25()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap();
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0, (Object) "\u4E2D\u83EF\u4EBA\u6C11\u5171\u548C\u56FD");
      boolean boolean0 = tSynchronizedFloatShortMap0.increment(0.0F);
      assertEquals(false, boolean0);
  }

  //Test case number: 26
  /*
   * 15 covered goals:
   * 1 Weak Mutation 102: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustValue(FS)Z:163 - InsertUnaryOp Negation of key
   * 2 Weak Mutation 103: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustValue(FS)Z:163 - InsertUnaryOp Negation of amount
   * 3 Weak Mutation 100: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustValue(FS)Z:163 - DeleteField: mutexLjava/lang/Object;
   * 4 Weak Mutation 101: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustValue(FS)Z:163 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 5 Weak Mutation 106: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustValue(FS)Z:163 - DeleteStatement: adjustValue(FS)Z
   * 6 Weak Mutation 104: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustValue(FS)Z:163 - InsertUnaryOp IINC 1 amount
   * 7 Weak Mutation 105: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustValue(FS)Z:163 - InsertUnaryOp IINC -1 amount
   * 8 gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustValue(FS)Z: root-Branch
   * 9 Weak Mutation 102: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustValue(FS)Z:163 - InsertUnaryOp Negation of key
   * 10 Weak Mutation 103: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustValue(FS)Z:163 - InsertUnaryOp Negation of amount
   * 11 Weak Mutation 100: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustValue(FS)Z:163 - DeleteField: mutexLjava/lang/Object;
   * 12 Weak Mutation 101: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustValue(FS)Z:163 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 13 Weak Mutation 106: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustValue(FS)Z:163 - DeleteStatement: adjustValue(FS)Z
   * 14 Weak Mutation 104: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustValue(FS)Z:163 - InsertUnaryOp IINC 1 amount
   * 15 Weak Mutation 105: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustValue(FS)Z:163 - InsertUnaryOp IINC -1 amount
   */

  @Test
  public void test26()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap((-1737), (-1737));
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      boolean boolean0 = tSynchronizedFloatShortMap0.adjustValue((float) (-1737), (short)9661);
      assertEquals(false, boolean0);
  }

  //Test case number: 27
  /*
   * 25 covered goals:
   * 1 Weak Mutation 110: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - ReplaceVariable adjust_amount -> put_amount
   * 2 Weak Mutation 111: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - InsertUnaryOp Negation of adjust_amount
   * 3 Weak Mutation 108: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 4 Weak Mutation 109: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - InsertUnaryOp Negation of key
   * 5 Weak Mutation 107: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 118: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - DeleteStatement: adjustOrPutValue(FSS)S
   * 7 Weak Mutation 117: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - InsertUnaryOp IINC -1 put_amount
   * 8 Weak Mutation 116: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - InsertUnaryOp IINC 1 put_amount
   * 9 Weak Mutation 115: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - InsertUnaryOp Negation of put_amount
   * 10 Weak Mutation 114: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - ReplaceVariable put_amount -> adjust_amount
   * 11 Weak Mutation 113: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - InsertUnaryOp IINC -1 adjust_amount
   * 12 Weak Mutation 112: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - InsertUnaryOp IINC 1 adjust_amount
   * 13 gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S: root-Branch
   * 14 Weak Mutation 110: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - ReplaceVariable adjust_amount -> put_amount
   * 15 Weak Mutation 111: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - InsertUnaryOp Negation of adjust_amount
   * 16 Weak Mutation 108: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 17 Weak Mutation 109: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - InsertUnaryOp Negation of key
   * 18 Weak Mutation 107: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - DeleteField: mutexLjava/lang/Object;
   * 19 Weak Mutation 118: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - DeleteStatement: adjustOrPutValue(FSS)S
   * 20 Weak Mutation 117: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - InsertUnaryOp IINC -1 put_amount
   * 21 Weak Mutation 116: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - InsertUnaryOp IINC 1 put_amount
   * 22 Weak Mutation 115: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - InsertUnaryOp Negation of put_amount
   * 23 Weak Mutation 114: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - ReplaceVariable put_amount -> adjust_amount
   * 24 Weak Mutation 113: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - InsertUnaryOp IINC -1 adjust_amount
   * 25 Weak Mutation 112: gnu.trove.impl.sync.TSynchronizedFloatShortMap.adjustOrPutValue(FSS)S:166 - InsertUnaryOp IINC 1 adjust_amount
   */

  @Test
  public void test27()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(0, (float) 0, (float) 0, (short) (-1));
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      short short0 = tSynchronizedFloatShortMap0.adjustOrPutValue((float) (short) (-1), (short) (-1), (short) (-988));
      assertEquals(7, tFloatShortHashMap0.capacity());
      assertEquals((short) (-988), short0);
  }

  //Test case number: 28
  /*
   * 9 covered goals:
   * 1 Weak Mutation 119: gnu.trove.impl.sync.TSynchronizedFloatShortMap.equals(Ljava/lang/Object;)Z:170 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 122: gnu.trove.impl.sync.TSynchronizedFloatShortMap.equals(Ljava/lang/Object;)Z:170 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 3 Weak Mutation 121: gnu.trove.impl.sync.TSynchronizedFloatShortMap.equals(Ljava/lang/Object;)Z:170 - ReplaceVariable o -> mutex
   * 4 Weak Mutation 120: gnu.trove.impl.sync.TSynchronizedFloatShortMap.equals(Ljava/lang/Object;)Z:170 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 5 gnu.trove.impl.sync.TSynchronizedFloatShortMap.equals(Ljava/lang/Object;)Z: root-Branch
   * 6 Weak Mutation 119: gnu.trove.impl.sync.TSynchronizedFloatShortMap.equals(Ljava/lang/Object;)Z:170 - DeleteField: mutexLjava/lang/Object;
   * 7 Weak Mutation 122: gnu.trove.impl.sync.TSynchronizedFloatShortMap.equals(Ljava/lang/Object;)Z:170 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 8 Weak Mutation 121: gnu.trove.impl.sync.TSynchronizedFloatShortMap.equals(Ljava/lang/Object;)Z:170 - ReplaceVariable o -> mutex
   * 9 Weak Mutation 120: gnu.trove.impl.sync.TSynchronizedFloatShortMap.equals(Ljava/lang/Object;)Z:170 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   */

  @Test
  public void test28()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap();
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      boolean boolean0 = tSynchronizedFloatShortMap0.equals((Object) (short)0);
      assertEquals(false, boolean0);
  }

  //Test case number: 29
  /*
   * 7 covered goals:
   * 1 Weak Mutation 125: gnu.trove.impl.sync.TSynchronizedFloatShortMap.hashCode()I:173 - DeleteStatement: hashCode()I
   * 2 Weak Mutation 124: gnu.trove.impl.sync.TSynchronizedFloatShortMap.hashCode()I:173 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 3 Weak Mutation 123: gnu.trove.impl.sync.TSynchronizedFloatShortMap.hashCode()I:173 - DeleteField: mutexLjava/lang/Object;
   * 4 gnu.trove.impl.sync.TSynchronizedFloatShortMap.hashCode()I: root-Branch
   * 5 Weak Mutation 125: gnu.trove.impl.sync.TSynchronizedFloatShortMap.hashCode()I:173 - DeleteStatement: hashCode()I
   * 6 Weak Mutation 124: gnu.trove.impl.sync.TSynchronizedFloatShortMap.hashCode()I:173 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 7 Weak Mutation 123: gnu.trove.impl.sync.TSynchronizedFloatShortMap.hashCode()I:173 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test29()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(994, 994);
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      int int0 = tSynchronizedFloatShortMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 30
  /*
   * 7 covered goals:
   * 1 Weak Mutation 127: gnu.trove.impl.sync.TSynchronizedFloatShortMap.toString()Ljava/lang/String;:176 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 2 Weak Mutation 126: gnu.trove.impl.sync.TSynchronizedFloatShortMap.toString()Ljava/lang/String;:176 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 128: gnu.trove.impl.sync.TSynchronizedFloatShortMap.toString()Ljava/lang/String;:176 - DeleteStatement: toString()Ljava/lang/String;
   * 4 gnu.trove.impl.sync.TSynchronizedFloatShortMap.toString()Ljava/lang/String;: root-Branch
   * 5 Weak Mutation 127: gnu.trove.impl.sync.TSynchronizedFloatShortMap.toString()Ljava/lang/String;:176 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 6 Weak Mutation 126: gnu.trove.impl.sync.TSynchronizedFloatShortMap.toString()Ljava/lang/String;:176 - DeleteField: mutexLjava/lang/Object;
   * 7 Weak Mutation 128: gnu.trove.impl.sync.TSynchronizedFloatShortMap.toString()Ljava/lang/String;:176 - DeleteStatement: toString()Ljava/lang/String;
   */

  @Test
  public void test30()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(994, 994);
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      String string0 = tSynchronizedFloatShortMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 31
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedFloatShortMap.<init>(Lgnu/trove/map/TFloatShortMap;)V: I17 Branch 1 IFNONNULL L59 - false
   * 2 Weak Mutation 0: gnu.trove.impl.sync.TSynchronizedFloatShortMap.<init>(Lgnu/trove/map/TFloatShortMap;)V:59 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test31()  throws Throwable  {
      TSynchronizedFloatShortMap tSynchronizedFloatShortMap0 = null;
      try {
        tSynchronizedFloatShortMap0 = new TSynchronizedFloatShortMap((TFloatShortMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedByteCharMap;
import gnu.trove.impl.sync.TSynchronizedByteSet;
import gnu.trove.impl.sync.TSynchronizedCharCollection;
import gnu.trove.iterator.TByteCharIterator;
import gnu.trove.map.TByteCharMap;
import gnu.trove.map.hash.TByteCharHashMap;
import gnu.trove.procedure.TByteCharProcedure;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TCharProcedure;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedByteCharMapEvoSuite_StrongMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 10 covered goals:
   * 1 Strong Mutation 3: gnu.trove.impl.sync.TSynchronizedByteCharMap.size()I:71 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 2 Strong Mutation 2: gnu.trove.impl.sync.TSynchronizedByteCharMap.size()I:71 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 0: gnu.trove.impl.sync.TSynchronizedByteCharMap.<init>(Lgnu/trove/map/TByteCharMap;)V:59 - ReplaceComparisonOperator != null -> = null
   * 4 Strong Mutation 2: gnu.trove.impl.sync.TSynchronizedByteCharMap.size()I:71 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 3: gnu.trove.impl.sync.TSynchronizedByteCharMap.size()I:71 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 6 Strong Mutation 76: gnu.trove.impl.sync.TSynchronizedByteCharMap.iterator()Lgnu/trove/iterator/TByteCharIterator;:134 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 7 Strong Mutation 77: gnu.trove.impl.sync.TSynchronizedByteCharMap.iterator()Lgnu/trove/iterator/TByteCharIterator;:134 - DeleteStatement: iterator()Lgnu/trove/iterator/TByteCharIterator;
   * 8 gnu.trove.impl.sync.TSynchronizedByteCharMap.size()I: root-Branch
   * 9 gnu.trove.impl.sync.TSynchronizedByteCharMap.iterator()Lgnu/trove/iterator/TByteCharIterator;: root-Branch
   * 10 gnu.trove.impl.sync.TSynchronizedByteCharMap.<init>(Lgnu/trove/map/TByteCharMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((-269), (-928.6773F), (byte) (-28), 'D');
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      TByteCharHashMap tByteCharHashMap1 = new TByteCharHashMap((TByteCharMap) tSynchronizedByteCharMap0);
      assertEquals('\u0000', tByteCharHashMap1.getNoEntryValue());
  }

  //Test case number: 1
  /*
   * 14 covered goals:
   * 1 Strong Mutation 4: gnu.trove.impl.sync.TSynchronizedByteCharMap.size()I:71 - DeleteStatement: size()I
   * 2 gnu.trove.impl.sync.TSynchronizedByteCharMap.putIfAbsent(BC)C: root-Branch
   * 3 Strong Mutation 1: gnu.trove.impl.sync.TSynchronizedByteCharMap.<init>(Lgnu/trove/map/TByteCharMap;Ljava/lang/Object;)V:67 - ReplaceVariable mutex -> mutex
   * 4 Strong Mutation 4: gnu.trove.impl.sync.TSynchronizedByteCharMap.size()I:71 - DeleteStatement: size()I
   * 5 Strong Mutation 85: gnu.trove.impl.sync.TSynchronizedByteCharMap.putIfAbsent(BC)C:142 - InsertUnaryOp IINC 1 key
   * 6 Strong Mutation 84: gnu.trove.impl.sync.TSynchronizedByteCharMap.putIfAbsent(BC)C:142 - InsertUnaryOp Negation of key
   * 7 Strong Mutation 87: gnu.trove.impl.sync.TSynchronizedByteCharMap.putIfAbsent(BC)C:142 - InsertUnaryOp Negation of value
   * 8 Strong Mutation 86: gnu.trove.impl.sync.TSynchronizedByteCharMap.putIfAbsent(BC)C:142 - InsertUnaryOp IINC -1 key
   * 9 Strong Mutation 83: gnu.trove.impl.sync.TSynchronizedByteCharMap.putIfAbsent(BC)C:142 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 10 Strong Mutation 82: gnu.trove.impl.sync.TSynchronizedByteCharMap.putIfAbsent(BC)C:142 - DeleteField: mutexLjava/lang/Object;
   * 11 Strong Mutation 89: gnu.trove.impl.sync.TSynchronizedByteCharMap.putIfAbsent(BC)C:142 - InsertUnaryOp IINC -1 value
   * 12 Strong Mutation 88: gnu.trove.impl.sync.TSynchronizedByteCharMap.putIfAbsent(BC)C:142 - InsertUnaryOp IINC 1 value
   * 13 Strong Mutation 90: gnu.trove.impl.sync.TSynchronizedByteCharMap.putIfAbsent(BC)C:142 - DeleteStatement: putIfAbsent(BC)C
   * 14 gnu.trove.impl.sync.TSynchronizedByteCharMap.<init>(Lgnu/trove/map/TByteCharMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((-297), (-1.0F));
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0, (Object) "`");
      tSynchronizedByteCharMap0.putIfAbsent((byte) (-1), '\\');
      int int0 = tSynchronizedByteCharMap0.size();
      assertEquals(1, tByteCharHashMap0.size());
      assertEquals(1, int0);
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 Strong Mutation 7: gnu.trove.impl.sync.TSynchronizedByteCharMap.isEmpty()Z:74 - DeleteStatement: isEmpty()Z
   * 2 gnu.trove.impl.sync.TSynchronizedByteCharMap.isEmpty()Z: root-Branch
   * 3 Strong Mutation 7: gnu.trove.impl.sync.TSynchronizedByteCharMap.isEmpty()Z:74 - DeleteStatement: isEmpty()Z
   */

  @Test
  public void test2()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((-1436));
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tSynchronizedByteCharMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * 1 Strong Mutation 10: gnu.trove.impl.sync.TSynchronizedByteCharMap.containsKey(B)Z:77 - InsertUnaryOp Negation of key
   * 2 gnu.trove.impl.sync.TSynchronizedByteCharMap.containsKey(B)Z: root-Branch
   * 3 Strong Mutation 10: gnu.trove.impl.sync.TSynchronizedByteCharMap.containsKey(B)Z:77 - InsertUnaryOp Negation of key
   * 4 Strong Mutation 11: gnu.trove.impl.sync.TSynchronizedByteCharMap.containsKey(B)Z:77 - InsertUnaryOp IINC 1 key
   * 5 Strong Mutation 13: gnu.trove.impl.sync.TSynchronizedByteCharMap.containsKey(B)Z:77 - DeleteStatement: containsKey(B)Z
   */

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)1;
      char[] charArray0 = new char[8];
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0, (Object) "zho");
      boolean boolean0 = tSynchronizedByteCharMap0.containsKey((byte)1);
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 4 covered goals:
   * 1 Strong Mutation 13: gnu.trove.impl.sync.TSynchronizedByteCharMap.containsKey(B)Z:77 - DeleteStatement: containsKey(B)Z
   * 2 Strong Mutation 11: gnu.trove.impl.sync.TSynchronizedByteCharMap.containsKey(B)Z:77 - InsertUnaryOp IINC 1 key
   * 3 Strong Mutation 12: gnu.trove.impl.sync.TSynchronizedByteCharMap.containsKey(B)Z:77 - InsertUnaryOp IINC -1 key
   * 4 Strong Mutation 12: gnu.trove.impl.sync.TSynchronizedByteCharMap.containsKey(B)Z:77 - InsertUnaryOp IINC -1 key
   */

  @Test
  public void test4()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(1448);
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      tByteCharHashMap0.put((byte)0, 'Y');
      boolean boolean0 = tSynchronizedByteCharMap0.containsKey((byte)0);
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 20 covered goals:
   * 1 Strong Mutation 18: gnu.trove.impl.sync.TSynchronizedByteCharMap.containsValue(C)Z:80 - InsertUnaryOp IINC -1 value
   * 2 Strong Mutation 17: gnu.trove.impl.sync.TSynchronizedByteCharMap.containsValue(C)Z:80 - InsertUnaryOp IINC 1 value
   * 3 Strong Mutation 16: gnu.trove.impl.sync.TSynchronizedByteCharMap.containsValue(C)Z:80 - InsertUnaryOp Negation of value
   * 4 Strong Mutation 19: gnu.trove.impl.sync.TSynchronizedByteCharMap.containsValue(C)Z:80 - DeleteStatement: containsValue(C)Z
   * 5 Strong Mutation 17: gnu.trove.impl.sync.TSynchronizedByteCharMap.containsValue(C)Z:80 - InsertUnaryOp IINC 1 value
   * 6 Strong Mutation 16: gnu.trove.impl.sync.TSynchronizedByteCharMap.containsValue(C)Z:80 - InsertUnaryOp Negation of value
   * 7 Strong Mutation 19: gnu.trove.impl.sync.TSynchronizedByteCharMap.containsValue(C)Z:80 - DeleteStatement: containsValue(C)Z
   * 8 Strong Mutation 18: gnu.trove.impl.sync.TSynchronizedByteCharMap.containsValue(C)Z:80 - InsertUnaryOp IINC -1 value
   * 9 Strong Mutation 125: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - InsertUnaryOp IINC -1 key
   * 10 Strong Mutation 124: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - InsertUnaryOp IINC 1 key
   * 11 Strong Mutation 123: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - InsertUnaryOp Negation of key
   * 12 Strong Mutation 122: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 13 Strong Mutation 121: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - DeleteField: mutexLjava/lang/Object;
   * 14 Strong Mutation 131: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - InsertUnaryOp Negation of put_amount
   * 15 Strong Mutation 130: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - ReplaceVariable put_amount -> adjust_amount
   * 16 Strong Mutation 133: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - InsertUnaryOp IINC -1 put_amount
   * 17 Strong Mutation 132: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - InsertUnaryOp IINC 1 put_amount
   * 18 Strong Mutation 134: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - DeleteStatement: adjustOrPutValue(BCC)C
   * 19 gnu.trove.impl.sync.TSynchronizedByteCharMap.containsValue(C)Z: root-Branch
   * 20 gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0, (Object) "/");
      tSynchronizedByteCharMap0.adjustOrPutValue((byte)57, '+', '=');
      boolean boolean0 = tSynchronizedByteCharMap0.containsValue('=');
      assertEquals(false, tByteCharHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 6
  /*
   * 8 covered goals:
   * 1 Strong Mutation 25: gnu.trove.impl.sync.TSynchronizedByteCharMap.get(B)C:83 - DeleteStatement: get(B)C
   * 2 Strong Mutation 23: gnu.trove.impl.sync.TSynchronizedByteCharMap.get(B)C:83 - InsertUnaryOp IINC 1 key
   * 3 Strong Mutation 22: gnu.trove.impl.sync.TSynchronizedByteCharMap.get(B)C:83 - InsertUnaryOp Negation of key
   * 4 Strong Mutation 23: gnu.trove.impl.sync.TSynchronizedByteCharMap.get(B)C:83 - InsertUnaryOp IINC 1 key
   * 5 Strong Mutation 22: gnu.trove.impl.sync.TSynchronizedByteCharMap.get(B)C:83 - InsertUnaryOp Negation of key
   * 6 Strong Mutation 25: gnu.trove.impl.sync.TSynchronizedByteCharMap.get(B)C:83 - DeleteStatement: get(B)C
   * 7 Strong Mutation 24: gnu.trove.impl.sync.TSynchronizedByteCharMap.get(B)C:83 - InsertUnaryOp IINC -1 key
   * 8 gnu.trove.impl.sync.TSynchronizedByteCharMap.get(B)C: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      tSynchronizedByteCharMap0.putIfAbsent((byte) (-122), 'A');
      char char0 = tSynchronizedByteCharMap0.get((byte) (-122));
      assertEquals(1, tByteCharHashMap0.size());
      assertEquals('A', char0);
  }

  //Test case number: 7
  /*
   * 10 covered goals:
   * 1 Strong Mutation 24: gnu.trove.impl.sync.TSynchronizedByteCharMap.get(B)C:83 - InsertUnaryOp IINC -1 key
   * 2 gnu.trove.impl.sync.TSynchronizedByteCharMap.put(BC)C: root-Branch
   * 3 Strong Mutation 27: gnu.trove.impl.sync.TSynchronizedByteCharMap.put(BC)C:87 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 4 Strong Mutation 26: gnu.trove.impl.sync.TSynchronizedByteCharMap.put(BC)C:87 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 29: gnu.trove.impl.sync.TSynchronizedByteCharMap.put(BC)C:87 - InsertUnaryOp IINC 1 key
   * 6 Strong Mutation 28: gnu.trove.impl.sync.TSynchronizedByteCharMap.put(BC)C:87 - InsertUnaryOp Negation of key
   * 7 Strong Mutation 31: gnu.trove.impl.sync.TSynchronizedByteCharMap.put(BC)C:87 - InsertUnaryOp Negation of value
   * 8 Strong Mutation 30: gnu.trove.impl.sync.TSynchronizedByteCharMap.put(BC)C:87 - InsertUnaryOp IINC -1 key
   * 9 Strong Mutation 32: gnu.trove.impl.sync.TSynchronizedByteCharMap.put(BC)C:87 - InsertUnaryOp IINC 1 value
   * 10 Strong Mutation 33: gnu.trove.impl.sync.TSynchronizedByteCharMap.put(BC)C:87 - InsertUnaryOp IINC -1 value
   */

  @Test
  public void test7()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      tSynchronizedByteCharMap0.put((byte) (-1), 'v');
      char char0 = tSynchronizedByteCharMap0.get((byte)0);
      assertEquals(1, tByteCharHashMap0.size());
      assertEquals('\u0000', char0);
  }

  //Test case number: 8
  /*
   * 13 covered goals:
   * 1 Strong Mutation 40: gnu.trove.impl.sync.TSynchronizedByteCharMap.remove(B)C:90 - DeleteStatement: remove(B)C
   * 2 Strong Mutation 35: gnu.trove.impl.sync.TSynchronizedByteCharMap.remove(B)C:90 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 38: gnu.trove.impl.sync.TSynchronizedByteCharMap.remove(B)C:90 - InsertUnaryOp IINC 1 key
   * 4 Strong Mutation 39: gnu.trove.impl.sync.TSynchronizedByteCharMap.remove(B)C:90 - InsertUnaryOp IINC -1 key
   * 5 Strong Mutation 36: gnu.trove.impl.sync.TSynchronizedByteCharMap.remove(B)C:90 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 6 Strong Mutation 37: gnu.trove.impl.sync.TSynchronizedByteCharMap.remove(B)C:90 - InsertUnaryOp Negation of key
   * 7 Strong Mutation 35: gnu.trove.impl.sync.TSynchronizedByteCharMap.remove(B)C:90 - DeleteField: mutexLjava/lang/Object;
   * 8 Strong Mutation 38: gnu.trove.impl.sync.TSynchronizedByteCharMap.remove(B)C:90 - InsertUnaryOp IINC 1 key
   * 9 Strong Mutation 39: gnu.trove.impl.sync.TSynchronizedByteCharMap.remove(B)C:90 - InsertUnaryOp IINC -1 key
   * 10 Strong Mutation 36: gnu.trove.impl.sync.TSynchronizedByteCharMap.remove(B)C:90 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 11 Strong Mutation 37: gnu.trove.impl.sync.TSynchronizedByteCharMap.remove(B)C:90 - InsertUnaryOp Negation of key
   * 12 Strong Mutation 40: gnu.trove.impl.sync.TSynchronizedByteCharMap.remove(B)C:90 - DeleteStatement: remove(B)C
   * 13 gnu.trove.impl.sync.TSynchronizedByteCharMap.remove(B)C: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((-1934), (-1309.1458F));
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      tSynchronizedByteCharMap0.put((byte)104, '8');
      assertEquals(false, tByteCharHashMap0.isEmpty());
      
      char char0 = tSynchronizedByteCharMap0.remove((byte)104);
      assertEquals('8', char0);
  }

  //Test case number: 9
  /*
   * 7 covered goals:
   * 1 Strong Mutation 45: gnu.trove.impl.sync.TSynchronizedByteCharMap.putAll(Lgnu/trove/map/TByteCharMap;)V:96 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 2 Strong Mutation 46: gnu.trove.impl.sync.TSynchronizedByteCharMap.putAll(Lgnu/trove/map/TByteCharMap;)V:96 - DeleteStatement: putAll(Lgnu/trove/map/TByteCharMap;)V
   * 3 Strong Mutation 44: gnu.trove.impl.sync.TSynchronizedByteCharMap.putAll(Lgnu/trove/map/TByteCharMap;)V:96 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 46: gnu.trove.impl.sync.TSynchronizedByteCharMap.putAll(Lgnu/trove/map/TByteCharMap;)V:96 - DeleteStatement: putAll(Lgnu/trove/map/TByteCharMap;)V
   * 5 Strong Mutation 44: gnu.trove.impl.sync.TSynchronizedByteCharMap.putAll(Lgnu/trove/map/TByteCharMap;)V:96 - DeleteField: mutexLjava/lang/Object;
   * 6 Strong Mutation 45: gnu.trove.impl.sync.TSynchronizedByteCharMap.putAll(Lgnu/trove/map/TByteCharMap;)V:96 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 7 gnu.trove.impl.sync.TSynchronizedByteCharMap.putAll(Lgnu/trove/map/TByteCharMap;)V: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((-1934), (-1309.1458F));
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      tSynchronizedByteCharMap0.put((byte)104, '8');
      tSynchronizedByteCharMap0.putAll((TByteCharMap) tByteCharHashMap0);
      assertEquals(1, tByteCharHashMap0.size());
      assertEquals("{104=8}", tByteCharHashMap0.toString());
  }

  //Test case number: 10
  /*
   * 7 covered goals:
   * 1 Strong Mutation 48: gnu.trove.impl.sync.TSynchronizedByteCharMap.clear()V:99 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 2 Strong Mutation 47: gnu.trove.impl.sync.TSynchronizedByteCharMap.clear()V:99 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 49: gnu.trove.impl.sync.TSynchronizedByteCharMap.clear()V:99 - DeleteStatement: clear()V
   * 4 Strong Mutation 47: gnu.trove.impl.sync.TSynchronizedByteCharMap.clear()V:99 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 49: gnu.trove.impl.sync.TSynchronizedByteCharMap.clear()V:99 - DeleteStatement: clear()V
   * 6 Strong Mutation 48: gnu.trove.impl.sync.TSynchronizedByteCharMap.clear()V:99 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 7 gnu.trove.impl.sync.TSynchronizedByteCharMap.clear()V: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      tSynchronizedByteCharMap0.put((byte)2, 'U');
      assertEquals(false, tByteCharHashMap0.isEmpty());
      
      tSynchronizedByteCharMap0.clear();
      assertEquals(true, tSynchronizedByteCharMap0.isEmpty());
  }

  //Test case number: 11
  /*
   * 2 covered goals:
   * 1 Strong Mutation 54: gnu.trove.impl.sync.TSynchronizedByteCharMap.keySet()Lgnu/trove/set/TByteSet;:108 - DeleteStatement: keySet()Lgnu/trove/set/TByteSet;
   * 2 gnu.trove.impl.sync.TSynchronizedByteCharMap.keySet()Lgnu/trove/set/TByteSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test11()  throws Throwable  {
      Object object0 = new Object();
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) null, object0);
      // Undeclared exception!
      try {
        tSynchronizedByteCharMap0.keySet();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 7 covered goals:
   * 1 Strong Mutation 57: gnu.trove.impl.sync.TSynchronizedByteCharMap.keys()[B:113 - DeleteField: mutexLjava/lang/Object;
   * 2 Strong Mutation 59: gnu.trove.impl.sync.TSynchronizedByteCharMap.keys()[B:113 - DeleteStatement: keys()[B
   * 3 Strong Mutation 58: gnu.trove.impl.sync.TSynchronizedByteCharMap.keys()[B:113 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 4 Strong Mutation 59: gnu.trove.impl.sync.TSynchronizedByteCharMap.keys()[B:113 - DeleteStatement: keys()[B
   * 5 Strong Mutation 58: gnu.trove.impl.sync.TSynchronizedByteCharMap.keys()[B:113 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 6 Strong Mutation 57: gnu.trove.impl.sync.TSynchronizedByteCharMap.keys()[B:113 - DeleteField: mutexLjava/lang/Object;
   * 7 gnu.trove.impl.sync.TSynchronizedByteCharMap.keys()[B: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((-1), (-683.7388F));
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      byte[] byteArray0 = tSynchronizedByteCharMap0.keys();
      assertNotNull(byteArray0);
  }

  //Test case number: 13
  /*
   * 7 covered goals:
   * 1 Strong Mutation 60: gnu.trove.impl.sync.TSynchronizedByteCharMap.keys([B)[B:116 - DeleteField: mutexLjava/lang/Object;
   * 2 Strong Mutation 62: gnu.trove.impl.sync.TSynchronizedByteCharMap.keys([B)[B:116 - DeleteStatement: keys([B)[B
   * 3 Strong Mutation 61: gnu.trove.impl.sync.TSynchronizedByteCharMap.keys([B)[B:116 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 4 Strong Mutation 62: gnu.trove.impl.sync.TSynchronizedByteCharMap.keys([B)[B:116 - DeleteStatement: keys([B)[B
   * 5 Strong Mutation 61: gnu.trove.impl.sync.TSynchronizedByteCharMap.keys([B)[B:116 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 6 Strong Mutation 60: gnu.trove.impl.sync.TSynchronizedByteCharMap.keys([B)[B:116 - DeleteField: mutexLjava/lang/Object;
   * 7 gnu.trove.impl.sync.TSynchronizedByteCharMap.keys([B)[B: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((-1), (-1));
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      byte[] byteArray0 = tSynchronizedByteCharMap0.keys(tByteCharHashMap0._set);
      assertNotNull(byteArray0);
  }

  //Test case number: 14
  /*
   * 2 covered goals:
   * 1 Strong Mutation 67: gnu.trove.impl.sync.TSynchronizedByteCharMap.valueCollection()Lgnu/trove/TCharCollection;:122 - DeleteStatement: valueCollection()Lgnu/trove/TCharCollection;
   * 2 gnu.trove.impl.sync.TSynchronizedByteCharMap.valueCollection()Lgnu/trove/TCharCollection;: I11 Branch 3 IFNONNULL L121 - false
   */

  @Test
  public void test14()  throws Throwable  {
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) null, (Object) "98");
      // Undeclared exception!
      try {
        tSynchronizedByteCharMap0.valueCollection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 15
  /*
   * 7 covered goals:
   * 1 Strong Mutation 72: gnu.trove.impl.sync.TSynchronizedByteCharMap.values()[C:127 - DeleteStatement: values()[C
   * 2 Strong Mutation 70: gnu.trove.impl.sync.TSynchronizedByteCharMap.values()[C:127 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 71: gnu.trove.impl.sync.TSynchronizedByteCharMap.values()[C:127 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 4 Strong Mutation 70: gnu.trove.impl.sync.TSynchronizedByteCharMap.values()[C:127 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 71: gnu.trove.impl.sync.TSynchronizedByteCharMap.values()[C:127 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 6 Strong Mutation 72: gnu.trove.impl.sync.TSynchronizedByteCharMap.values()[C:127 - DeleteStatement: values()[C
   * 7 gnu.trove.impl.sync.TSynchronizedByteCharMap.values()[C: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((-1), (-683.7388F));
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      char[] charArray0 = tSynchronizedByteCharMap0.values();
      assertNotNull(charArray0);
  }

  //Test case number: 16
  /*
   * 7 covered goals:
   * 1 Strong Mutation 75: gnu.trove.impl.sync.TSynchronizedByteCharMap.values([C)[C:130 - DeleteStatement: values([C)[C
   * 2 Strong Mutation 73: gnu.trove.impl.sync.TSynchronizedByteCharMap.values([C)[C:130 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 74: gnu.trove.impl.sync.TSynchronizedByteCharMap.values([C)[C:130 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 4 Strong Mutation 73: gnu.trove.impl.sync.TSynchronizedByteCharMap.values([C)[C:130 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 74: gnu.trove.impl.sync.TSynchronizedByteCharMap.values([C)[C:130 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 6 Strong Mutation 75: gnu.trove.impl.sync.TSynchronizedByteCharMap.values([C)[C:130 - DeleteStatement: values([C)[C
   * 7 gnu.trove.impl.sync.TSynchronizedByteCharMap.values([C)[C: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((-1934), (-1309.1458F));
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      char[] charArray0 = new char[1];
      char[] charArray1 = tSynchronizedByteCharMap0.values(charArray0);
      assertSame(charArray1, charArray0);
  }

  //Test case number: 17
  /*
   * 2 covered goals:
   * 1 Strong Mutation 77: gnu.trove.impl.sync.TSynchronizedByteCharMap.iterator()Lgnu/trove/iterator/TByteCharIterator;:134 - DeleteStatement: iterator()Lgnu/trove/iterator/TByteCharIterator;
   * 2 Strong Mutation 76: gnu.trove.impl.sync.TSynchronizedByteCharMap.iterator()Lgnu/trove/iterator/TByteCharIterator;:134 - DeleteField: mLgnu/trove/map/TByteCharMap;
   */

  @Test
  public void test17()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((-1), (-683.7388F));
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      TByteCharIterator tByteCharIterator0 = tSynchronizedByteCharMap0.iterator();
      assertEquals(false, tByteCharIterator0.hasNext());
  }

  //Test case number: 18
  /*
   * 3 covered goals:
   * 1 Strong Mutation 79: gnu.trove.impl.sync.TSynchronizedByteCharMap.getNoEntryKey()B:138 - DeleteStatement: getNoEntryKey()B
   * 2 gnu.trove.impl.sync.TSynchronizedByteCharMap.getNoEntryKey()B: root-Branch
   * 3 Strong Mutation 79: gnu.trove.impl.sync.TSynchronizedByteCharMap.getNoEntryKey()B:138 - DeleteStatement: getNoEntryKey()B
   */

//   @Test
//   public void test18()  throws Throwable  {
//       TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((-549), (-549));
//       TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0, (Object) "/mnt/fastdata/ac1gf/Experiments_Major/apps/trove-3.0.2/begin index ");
//       tSynchronizedByteCharMap0.getNoEntryKey();
//       TByteCharHashMap tByteCharHashMap1 = new TByteCharHashMap(1312, (-1.0F), (byte)127, '}');
//       TSynchronizedByteCharMap tSynchronizedByteCharMap1 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap1, (Object) "en");
//       assertEquals(127, tSynchronizedByteCharMap1.getNoEntryKey());
//   }

  //Test case number: 19
  /*
   * 5 covered goals:
   * 1 Strong Mutation 80: gnu.trove.impl.sync.TSynchronizedByteCharMap.getNoEntryValue()C:139 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 2 Strong Mutation 81: gnu.trove.impl.sync.TSynchronizedByteCharMap.getNoEntryValue()C:139 - DeleteStatement: getNoEntryValue()C
   * 3 Strong Mutation 81: gnu.trove.impl.sync.TSynchronizedByteCharMap.getNoEntryValue()C:139 - DeleteStatement: getNoEntryValue()C
   * 4 Strong Mutation 80: gnu.trove.impl.sync.TSynchronizedByteCharMap.getNoEntryValue()C:139 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 5 gnu.trove.impl.sync.TSynchronizedByteCharMap.getNoEntryValue()C: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((-2147483632), (float) (-2147483632), (byte)101, '2');
      char[] charArray0 = new char[4];
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0, (Object) "101");
      charArray0[0] = 'L';
      tSynchronizedByteCharMap0.getNoEntryValue();
      charArray0[0] = '2';
  }

  //Test case number: 20
  /*
   * 3 covered goals:
   * 1 Strong Mutation 93: gnu.trove.impl.sync.TSynchronizedByteCharMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z:145 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z
   * 2 gnu.trove.impl.sync.TSynchronizedByteCharMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   * 3 Strong Mutation 93: gnu.trove.impl.sync.TSynchronizedByteCharMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z:145 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z
   */

  @Test
  public void test20()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tSynchronizedByteCharMap0.forEachKey((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 3 covered goals:
   * 1 Strong Mutation 96: gnu.trove.impl.sync.TSynchronizedByteCharMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:148 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z
   * 2 gnu.trove.impl.sync.TSynchronizedByteCharMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   * 3 Strong Mutation 96: gnu.trove.impl.sync.TSynchronizedByteCharMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:148 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z
   */

  @Test
  public void test21()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((-2147483632), (float) (-2147483632), (byte)101, '2');
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0, (Object) "101");
      boolean boolean0 = tSynchronizedByteCharMap0.forEachValue((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 22
  /*
   * 5 covered goals:
   * 1 Strong Mutation 104: gnu.trove.impl.sync.TSynchronizedByteCharMap.retainEntries(Lgnu/trove/procedure/TByteCharProcedure;)Z:157 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 2 Strong Mutation 103: gnu.trove.impl.sync.TSynchronizedByteCharMap.retainEntries(Lgnu/trove/procedure/TByteCharProcedure;)Z:157 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 103: gnu.trove.impl.sync.TSynchronizedByteCharMap.retainEntries(Lgnu/trove/procedure/TByteCharProcedure;)Z:157 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 104: gnu.trove.impl.sync.TSynchronizedByteCharMap.retainEntries(Lgnu/trove/procedure/TByteCharProcedure;)Z:157 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 5 gnu.trove.impl.sync.TSynchronizedByteCharMap.retainEntries(Lgnu/trove/procedure/TByteCharProcedure;)Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((int) (byte) (-78), 0.0F);
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0, (Object) "YN'F~Oxw");
      tSynchronizedByteCharMap0.put((byte) (-102), '8');
      // Undeclared exception!
      try {
        tSynchronizedByteCharMap0.retainEntries((TByteCharProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 13 covered goals:
   * 1 Strong Mutation 107: gnu.trove.impl.sync.TSynchronizedByteCharMap.increment(B)Z:160 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 2 Strong Mutation 110: gnu.trove.impl.sync.TSynchronizedByteCharMap.increment(B)Z:160 - InsertUnaryOp IINC -1 key
   * 3 Strong Mutation 111: gnu.trove.impl.sync.TSynchronizedByteCharMap.increment(B)Z:160 - DeleteStatement: increment(B)Z
   * 4 Strong Mutation 108: gnu.trove.impl.sync.TSynchronizedByteCharMap.increment(B)Z:160 - InsertUnaryOp Negation of key
   * 5 Strong Mutation 109: gnu.trove.impl.sync.TSynchronizedByteCharMap.increment(B)Z:160 - InsertUnaryOp IINC 1 key
   * 6 Strong Mutation 106: gnu.trove.impl.sync.TSynchronizedByteCharMap.increment(B)Z:160 - DeleteField: mutexLjava/lang/Object;
   * 7 Strong Mutation 110: gnu.trove.impl.sync.TSynchronizedByteCharMap.increment(B)Z:160 - InsertUnaryOp IINC -1 key
   * 8 Strong Mutation 111: gnu.trove.impl.sync.TSynchronizedByteCharMap.increment(B)Z:160 - DeleteStatement: increment(B)Z
   * 9 Strong Mutation 108: gnu.trove.impl.sync.TSynchronizedByteCharMap.increment(B)Z:160 - InsertUnaryOp Negation of key
   * 10 Strong Mutation 109: gnu.trove.impl.sync.TSynchronizedByteCharMap.increment(B)Z:160 - InsertUnaryOp IINC 1 key
   * 11 Strong Mutation 106: gnu.trove.impl.sync.TSynchronizedByteCharMap.increment(B)Z:160 - DeleteField: mutexLjava/lang/Object;
   * 12 Strong Mutation 107: gnu.trove.impl.sync.TSynchronizedByteCharMap.increment(B)Z:160 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 13 gnu.trove.impl.sync.TSynchronizedByteCharMap.increment(B)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      char[] charArray0 = new char[8];
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tSynchronizedByteCharMap0.increment((byte) (-1));
      assertEquals("{-1=\u0001, 0=\u0000}", tByteCharHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 12 covered goals:
   * 1 Strong Mutation 116: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustValue(BC)Z:163 - InsertUnaryOp IINC -1 key
   * 2 Strong Mutation 85: gnu.trove.impl.sync.TSynchronizedByteCharMap.putIfAbsent(BC)C:142 - InsertUnaryOp IINC 1 key
   * 3 Strong Mutation 84: gnu.trove.impl.sync.TSynchronizedByteCharMap.putIfAbsent(BC)C:142 - InsertUnaryOp Negation of key
   * 4 Strong Mutation 87: gnu.trove.impl.sync.TSynchronizedByteCharMap.putIfAbsent(BC)C:142 - InsertUnaryOp Negation of value
   * 5 Strong Mutation 86: gnu.trove.impl.sync.TSynchronizedByteCharMap.putIfAbsent(BC)C:142 - InsertUnaryOp IINC -1 key
   * 6 Strong Mutation 83: gnu.trove.impl.sync.TSynchronizedByteCharMap.putIfAbsent(BC)C:142 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 7 Strong Mutation 82: gnu.trove.impl.sync.TSynchronizedByteCharMap.putIfAbsent(BC)C:142 - DeleteField: mutexLjava/lang/Object;
   * 8 Strong Mutation 89: gnu.trove.impl.sync.TSynchronizedByteCharMap.putIfAbsent(BC)C:142 - InsertUnaryOp IINC -1 value
   * 9 Strong Mutation 88: gnu.trove.impl.sync.TSynchronizedByteCharMap.putIfAbsent(BC)C:142 - InsertUnaryOp IINC 1 value
   * 10 Strong Mutation 90: gnu.trove.impl.sync.TSynchronizedByteCharMap.putIfAbsent(BC)C:142 - DeleteStatement: putIfAbsent(BC)C
   * 11 Strong Mutation 116: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustValue(BC)Z:163 - InsertUnaryOp IINC -1 key
   * 12 gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustValue(BC)Z: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((-297), (-1.0F));
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0, (Object) "`");
      tSynchronizedByteCharMap0.putIfAbsent((byte) (-1), '-');
      boolean boolean0 = tSynchronizedByteCharMap0.adjustValue((byte)0, '4');
      assertEquals(false, tByteCharHashMap0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 25
  /*
   * 9 covered goals:
   * 1 Strong Mutation 114: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustValue(BC)Z:163 - InsertUnaryOp Negation of key
   * 2 Strong Mutation 119: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustValue(BC)Z:163 - InsertUnaryOp IINC -1 amount
   * 3 Strong Mutation 118: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustValue(BC)Z:163 - InsertUnaryOp IINC 1 amount
   * 4 Strong Mutation 117: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustValue(BC)Z:163 - InsertUnaryOp Negation of amount
   * 5 Strong Mutation 115: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustValue(BC)Z:163 - InsertUnaryOp IINC 1 key
   * 6 Strong Mutation 114: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustValue(BC)Z:163 - InsertUnaryOp Negation of key
   * 7 Strong Mutation 113: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustValue(BC)Z:163 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 8 Strong Mutation 112: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustValue(BC)Z:163 - DeleteField: mutexLjava/lang/Object;
   * 9 Strong Mutation 120: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustValue(BC)Z:163 - DeleteStatement: adjustValue(BC)Z
   */

  @Test
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[2] = (byte) (-90);
      char[] charArray0 = new char[3];
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0, (Object) "\u7FA9\u5927\u5229\u6587");
      boolean boolean0 = tSynchronizedByteCharMap0.adjustValue((byte) (-90), 'T');
      assertEquals("{-90=T, 0=\u0000}", tByteCharHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 26
  /*
   * 8 covered goals:
   * 1 Strong Mutation 120: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustValue(BC)Z:163 - DeleteStatement: adjustValue(BC)Z
   * 2 Strong Mutation 119: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustValue(BC)Z:163 - InsertUnaryOp IINC -1 amount
   * 3 Strong Mutation 118: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustValue(BC)Z:163 - InsertUnaryOp IINC 1 amount
   * 4 Strong Mutation 117: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustValue(BC)Z:163 - InsertUnaryOp Negation of amount
   * 5 Strong Mutation 116: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustValue(BC)Z:163 - InsertUnaryOp IINC -1 key
   * 6 Strong Mutation 115: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustValue(BC)Z:163 - InsertUnaryOp IINC 1 key
   * 7 Strong Mutation 113: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustValue(BC)Z:163 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 8 Strong Mutation 112: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustValue(BC)Z:163 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test26()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      tSynchronizedByteCharMap0.put((byte)0, 'j');
      boolean boolean0 = tSynchronizedByteCharMap0.adjustValue((byte)0, '>');
      assertEquals(1, tByteCharHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 27
  /*
   * 5 covered goals:
   * 1 Strong Mutation 127: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - InsertUnaryOp Negation of adjust_amount
   * 2 Strong Mutation 127: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - InsertUnaryOp Negation of adjust_amount
   * 3 Strong Mutation 126: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - ReplaceVariable adjust_amount -> put_amount
   * 4 Strong Mutation 129: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - InsertUnaryOp IINC -1 adjust_amount
   * 5 Strong Mutation 128: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - InsertUnaryOp IINC 1 adjust_amount
   */

  @Test
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      char[] charArray0 = new char[5];
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      char char0 = tSynchronizedByteCharMap0.adjustOrPutValue((byte)0, 'f', ')');
      assertEquals("{0=f}", tByteCharHashMap0.toString());
      assertEquals('f', char0);
  }

  //Test case number: 28
  /*
   * 3 covered goals:
   * 1 Strong Mutation 128: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - InsertUnaryOp IINC 1 adjust_amount
   * 2 Strong Mutation 126: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - ReplaceVariable adjust_amount -> put_amount
   * 3 Strong Mutation 129: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - InsertUnaryOp IINC -1 adjust_amount
   */

  @Test
  public void test28()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      tSynchronizedByteCharMap0.put((byte)0, 'j');
      char char0 = tSynchronizedByteCharMap0.adjustOrPutValue((byte)0, '\u0000', '>');
      assertEquals("{0=j}", tByteCharHashMap0.toString());
      assertEquals('j', char0);
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * 1 Strong Mutation 130: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - ReplaceVariable put_amount -> adjust_amount
   */

  @Test
  public void test29()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((-2147483632), (float) (-2147483632), (byte)101, '2');
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0, (Object) "101");
      char char0 = tSynchronizedByteCharMap0.adjustOrPutValue((byte) (-86), '2', '5');
      assertEquals(false, tByteCharHashMap0.isEmpty());
      assertEquals('5', char0);
  }

  //Test case number: 30
  /*
   * 10 covered goals:
   * 1 Strong Mutation 134: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - DeleteStatement: adjustOrPutValue(BCC)C
   * 2 Strong Mutation 1: gnu.trove.impl.sync.TSynchronizedByteCharMap.<init>(Lgnu/trove/map/TByteCharMap;Ljava/lang/Object;)V:67 - ReplaceVariable mutex -> mutex
   * 3 Strong Mutation 125: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - InsertUnaryOp IINC -1 key
   * 4 Strong Mutation 124: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - InsertUnaryOp IINC 1 key
   * 5 Strong Mutation 123: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - InsertUnaryOp Negation of key
   * 6 Strong Mutation 122: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 7 Strong Mutation 121: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - DeleteField: mutexLjava/lang/Object;
   * 8 Strong Mutation 131: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - InsertUnaryOp Negation of put_amount
   * 9 Strong Mutation 133: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - InsertUnaryOp IINC -1 put_amount
   * 10 Strong Mutation 132: gnu.trove.impl.sync.TSynchronizedByteCharMap.adjustOrPutValue(BCC)C:166 - InsertUnaryOp IINC 1 put_amount
   */

  @Test
  public void test30()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((-1319));
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0, (Object) "\uD504\uB791\uC2A4");
      char char0 = tSynchronizedByteCharMap0.adjustOrPutValue((byte)80, 'i', 'i');
      assertEquals(false, tByteCharHashMap0.isEmpty());
      assertEquals('i', char0);
  }

  //Test case number: 31
  /*
   * 4 covered goals:
   * 1 Strong Mutation 138: gnu.trove.impl.sync.TSynchronizedByteCharMap.equals(Ljava/lang/Object;)Z:170 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 2 Strong Mutation 137: gnu.trove.impl.sync.TSynchronizedByteCharMap.equals(Ljava/lang/Object;)Z:170 - ReplaceVariable o -> mutex
   * 3 Strong Mutation 137: gnu.trove.impl.sync.TSynchronizedByteCharMap.equals(Ljava/lang/Object;)Z:170 - ReplaceVariable o -> mutex
   * 4 gnu.trove.impl.sync.TSynchronizedByteCharMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test31()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0, (Object) "/");
      TSynchronizedByteCharMap tSynchronizedByteCharMap1 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tSynchronizedByteCharMap1.equals((Object) "/:#/");
      assertTrue(tSynchronizedByteCharMap1.equals(tSynchronizedByteCharMap0));
      assertEquals(false, boolean0);
  }

  //Test case number: 32
  /*
   * 12 covered goals:
   * 1 Strong Mutation 141: gnu.trove.impl.sync.TSynchronizedByteCharMap.hashCode()I:173 - DeleteStatement: hashCode()I
   * 2 gnu.trove.impl.sync.TSynchronizedByteCharMap.hashCode()I: root-Branch
   * 3 Strong Mutation 27: gnu.trove.impl.sync.TSynchronizedByteCharMap.put(BC)C:87 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 4 Strong Mutation 26: gnu.trove.impl.sync.TSynchronizedByteCharMap.put(BC)C:87 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 29: gnu.trove.impl.sync.TSynchronizedByteCharMap.put(BC)C:87 - InsertUnaryOp IINC 1 key
   * 6 Strong Mutation 28: gnu.trove.impl.sync.TSynchronizedByteCharMap.put(BC)C:87 - InsertUnaryOp Negation of key
   * 7 Strong Mutation 31: gnu.trove.impl.sync.TSynchronizedByteCharMap.put(BC)C:87 - InsertUnaryOp Negation of value
   * 8 Strong Mutation 30: gnu.trove.impl.sync.TSynchronizedByteCharMap.put(BC)C:87 - InsertUnaryOp IINC -1 key
   * 9 Strong Mutation 34: gnu.trove.impl.sync.TSynchronizedByteCharMap.put(BC)C:87 - DeleteStatement: put(BC)C
   * 10 Strong Mutation 32: gnu.trove.impl.sync.TSynchronizedByteCharMap.put(BC)C:87 - InsertUnaryOp IINC 1 value
   * 11 Strong Mutation 33: gnu.trove.impl.sync.TSynchronizedByteCharMap.put(BC)C:87 - InsertUnaryOp IINC -1 value
   * 12 Strong Mutation 141: gnu.trove.impl.sync.TSynchronizedByteCharMap.hashCode()I:173 - DeleteStatement: hashCode()I
   */

  @Test
  public void test32()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      tSynchronizedByteCharMap0.put((byte) (-1), 'v');
      int int0 = tSynchronizedByteCharMap0.hashCode();
      assertEquals(1, tByteCharHashMap0.size());
      assertEquals((-119), int0);
  }

  //Test case number: 33
  /*
   * 7 covered goals:
   * 1 Strong Mutation 144: gnu.trove.impl.sync.TSynchronizedByteCharMap.toString()Ljava/lang/String;:176 - DeleteStatement: toString()Ljava/lang/String;
   * 2 Strong Mutation 143: gnu.trove.impl.sync.TSynchronizedByteCharMap.toString()Ljava/lang/String;:176 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 3 Strong Mutation 142: gnu.trove.impl.sync.TSynchronizedByteCharMap.toString()Ljava/lang/String;:176 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 143: gnu.trove.impl.sync.TSynchronizedByteCharMap.toString()Ljava/lang/String;:176 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 5 Strong Mutation 142: gnu.trove.impl.sync.TSynchronizedByteCharMap.toString()Ljava/lang/String;:176 - DeleteField: mutexLjava/lang/Object;
   * 6 Strong Mutation 144: gnu.trove.impl.sync.TSynchronizedByteCharMap.toString()Ljava/lang/String;:176 - DeleteStatement: toString()Ljava/lang/String;
   * 7 gnu.trove.impl.sync.TSynchronizedByteCharMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test33()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((-1), (-1));
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      String string0 = tSynchronizedByteCharMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 34
  /*
   * 9 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.keySet()Lgnu/trove/set/TByteSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 Strong Mutation 50: gnu.trove.impl.sync.TSynchronizedByteCharMap.keySet()Lgnu/trove/set/TByteSet;:106 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 53: gnu.trove.impl.sync.TSynchronizedByteCharMap.keySet()Lgnu/trove/set/TByteSet;:108 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 4 Strong Mutation 52: gnu.trove.impl.sync.TSynchronizedByteCharMap.keySet()Lgnu/trove/set/TByteSet;:107 - ReplaceComparisonOperator != null -> = null
   * 5 Strong Mutation 56: gnu.trove.impl.sync.TSynchronizedByteCharMap.keySet()Lgnu/trove/set/TByteSet;:109 - DeleteField: keySetLgnu/trove/set/TByteSet;
   * 6 Strong Mutation 50: gnu.trove.impl.sync.TSynchronizedByteCharMap.keySet()Lgnu/trove/set/TByteSet;:106 - DeleteField: mutexLjava/lang/Object;
   * 7 Strong Mutation 53: gnu.trove.impl.sync.TSynchronizedByteCharMap.keySet()Lgnu/trove/set/TByteSet;:108 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 8 Strong Mutation 52: gnu.trove.impl.sync.TSynchronizedByteCharMap.keySet()Lgnu/trove/set/TByteSet;:107 - ReplaceComparisonOperator != null -> = null
   * 9 Strong Mutation 56: gnu.trove.impl.sync.TSynchronizedByteCharMap.keySet()Lgnu/trove/set/TByteSet;:109 - DeleteField: keySetLgnu/trove/set/TByteSet;
   */

  @Test
  public void test34()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(1);
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      TSynchronizedByteSet tSynchronizedByteSet0 = (TSynchronizedByteSet)tSynchronizedByteCharMap0.keySet();
      assertNotNull(tSynchronizedByteSet0);
      
      TSynchronizedByteSet tSynchronizedByteSet1 = (TSynchronizedByteSet)tSynchronizedByteCharMap0.keySet();
      assertSame(tSynchronizedByteSet1, tSynchronizedByteSet0);
  }

  //Test case number: 35
  /*
   * 10 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteCharMap.valueCollection()Lgnu/trove/TCharCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 Strong Mutation 0: gnu.trove.impl.sync.TSynchronizedByteCharMap.<init>(Lgnu/trove/map/TByteCharMap;)V:59 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 63: gnu.trove.impl.sync.TSynchronizedByteCharMap.valueCollection()Lgnu/trove/TCharCollection;:120 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 69: gnu.trove.impl.sync.TSynchronizedByteCharMap.valueCollection()Lgnu/trove/TCharCollection;:123 - DeleteField: valuesLgnu/trove/TCharCollection;
   * 5 Strong Mutation 65: gnu.trove.impl.sync.TSynchronizedByteCharMap.valueCollection()Lgnu/trove/TCharCollection;:121 - ReplaceComparisonOperator != null -> = null
   * 6 Strong Mutation 66: gnu.trove.impl.sync.TSynchronizedByteCharMap.valueCollection()Lgnu/trove/TCharCollection;:122 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 7 Strong Mutation 63: gnu.trove.impl.sync.TSynchronizedByteCharMap.valueCollection()Lgnu/trove/TCharCollection;:120 - DeleteField: mutexLjava/lang/Object;
   * 8 Strong Mutation 69: gnu.trove.impl.sync.TSynchronizedByteCharMap.valueCollection()Lgnu/trove/TCharCollection;:123 - DeleteField: valuesLgnu/trove/TCharCollection;
   * 9 Strong Mutation 65: gnu.trove.impl.sync.TSynchronizedByteCharMap.valueCollection()Lgnu/trove/TCharCollection;:121 - ReplaceComparisonOperator != null -> = null
   * 10 Strong Mutation 66: gnu.trove.impl.sync.TSynchronizedByteCharMap.valueCollection()Lgnu/trove/TCharCollection;:122 - DeleteField: mLgnu/trove/map/TByteCharMap;
   */

  @Test
  public void test35()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TSynchronizedByteCharMap tSynchronizedByteCharMap0 = new TSynchronizedByteCharMap((TByteCharMap) tByteCharHashMap0);
      TSynchronizedCharCollection tSynchronizedCharCollection0 = (TSynchronizedCharCollection)tSynchronizedByteCharMap0.valueCollection();
      assertNotNull(tSynchronizedCharCollection0);
      
      TSynchronizedCharCollection tSynchronizedCharCollection1 = (TSynchronizedCharCollection)tSynchronizedByteCharMap0.valueCollection();
      assertSame(tSynchronizedCharCollection1, tSynchronizedCharCollection0);
  }
}

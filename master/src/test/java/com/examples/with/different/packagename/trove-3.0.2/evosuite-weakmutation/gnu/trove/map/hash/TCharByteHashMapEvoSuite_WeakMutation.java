/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TByteFunction;
import gnu.trove.map.TCharByteMap;
import gnu.trove.map.hash.TCharByteHashMap;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TCharByteProcedure;
import gnu.trove.procedure.TCharProcedure;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TCharByteHashMapEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 190 covered goals:
   * 1 Weak Mutation 306: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:133 - ReplaceComparisonOperator == -> !=
   * 2 Weak Mutation 307: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:135 - ReplaceVariable hashmap -> this
   * 3 Weak Mutation 309: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:135 - DeleteField: _loadFactorF
   * 4 Weak Mutation 308: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:135 - InsertUnaryOp Negation
   * 5 Weak Mutation 311: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:136 - DeleteField: no_entry_keyC
   * 6 Weak Mutation 310: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:136 - ReplaceVariable hashmap -> this
   * 7 Weak Mutation 313: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:137 - ReplaceVariable no_entry_value -> FREE
   * 8 Weak Mutation 312: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:137 - ReplaceVariable hashmap -> this
   * 9 Weak Mutation 315: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:137 - ReplaceVariable no_entry_value -> REMOVED
   * 10 Weak Mutation 314: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:137 - ReplaceVariable no_entry_value -> FULL
   * 11 Weak Mutation 317: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:137 - DeleteField: no_entry_valueB
   * 12 Weak Mutation 316: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:137 - InsertUnaryOp Negation
   * 13 Weak Mutation 319: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:139 - ReplaceComparisonOperator == -> >=
   * 14 Weak Mutation 318: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:139 - DeleteField: no_entry_keyC
   * 15 Weak Mutation 324: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:140 - DeleteStatement: fill([CC)V
   * 16 Weak Mutation 322: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:140 - DeleteField: _set[C
   * 17 Weak Mutation 323: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:140 - DeleteField: no_entry_keyC
   * 18 Weak Mutation 326: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:143 - ReplaceVariable no_entry_value -> FULL
   * 19 Weak Mutation 327: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:143 - ReplaceVariable no_entry_value -> REMOVED
   * 20 Weak Mutation 325: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:143 - ReplaceVariable no_entry_value -> FREE
   * 21 Weak Mutation 331: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:143 - ReplaceComparisonOperator == -> <=
   * 22 Weak Mutation 328: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:143 - InsertUnaryOp Negation
   * 23 Weak Mutation 329: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:143 - DeleteField: no_entry_valueB
   * 24 Weak Mutation 340: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - DeleteStatement: fill([BB)V
   * 25 Weak Mutation 339: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - DeleteField: no_entry_valueB
   * 26 Weak Mutation 338: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - InsertUnaryOp Negation
   * 27 Weak Mutation 337: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - ReplaceVariable no_entry_value -> REMOVED
   * 28 Weak Mutation 336: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - ReplaceVariable no_entry_value -> FULL
   * 29 Weak Mutation 334: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - DeleteField: _values[B
   * 30 Weak Mutation 335: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - ReplaceVariable no_entry_value -> FREE
   * 31 Weak Mutation 333: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - ReplaceVariable _values -> _states
   * 32 Weak Mutation 343: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceConstant - 10.0 -> -1.0
   * 33 Weak Mutation 342: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceConstant - 10.0 -> 1.0
   * 34 Weak Mutation 341: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceConstant - 10.0 -> 0.0
   * 35 Weak Mutation 350: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceArithmeticOperator / -> %
   * 36 Weak Mutation 349: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceArithmeticOperator / -> +
   * 37 Weak Mutation 348: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceArithmeticOperator / -> -
   * 38 Weak Mutation 347: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - DeleteField: _loadFactorF
   * 39 Weak Mutation 346: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - InsertUnaryOp Negation
   * 40 Weak Mutation 345: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceConstant - 10.0 -> 11.0
   * 41 Weak Mutation 344: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceConstant - 10.0 -> 9.0
   * 42 Weak Mutation 352: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - DeleteStatement: ceil(D)D
   * 43 Weak Mutation 353: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - DeleteStatement: setUp(I)I
   * 44 Weak Mutation 354: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:148 - DeleteStatement: putAll(Lgnu/trove/map/TCharByteMap;)V
   * 45 Weak Mutation 366: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:175 - DeleteField: _set[C
   * 46 Weak Mutation 367: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:177 - DeleteField: _set[C
   * 47 Weak Mutation 369: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:178 - DeleteField: _values[B
   * 48 Weak Mutation 368: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:178 - ReplaceVariable _values -> _states
   * 49 Weak Mutation 370: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:179 - DeleteField: _states[B
   * 50 Weak Mutation 373: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:181 - InsertUnaryOp IINC 1 newCapacity
   * 51 Weak Mutation 372: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:181 - InsertUnaryOp Negation of newCapacity
   * 52 Weak Mutation 374: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:181 - InsertUnaryOp IINC -1 newCapacity
   * 53 Weak Mutation 377: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:182 - InsertUnaryOp IINC 1 newCapacity
   * 54 Weak Mutation 376: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:182 - InsertUnaryOp Negation of newCapacity
   * 55 Weak Mutation 378: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:182 - InsertUnaryOp IINC -1 newCapacity
   * 56 Weak Mutation 381: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:183 - InsertUnaryOp IINC 1 newCapacity
   * 57 Weak Mutation 380: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:183 - InsertUnaryOp Negation of newCapacity
   * 58 Weak Mutation 382: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:183 - InsertUnaryOp IINC -1 newCapacity
   * 59 Weak Mutation 395: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - ReplaceComparisonOperator <= -> <
   * 60 Weak Mutation 393: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - ReplaceVariable i -> oldCapacity
   * 61 Weak Mutation 392: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - ReplaceVariable i -> newCapacity
   * 62 Weak Mutation 396: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - ReplaceComparisonOperator <= -> -1
   * 63 Weak Mutation 387: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - ReplaceVariable i -> newCapacity
   * 64 Weak Mutation 386: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - InsertUnaryOp IINC -1 oldCapacity
   * 65 Weak Mutation 385: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - InsertUnaryOp IINC 1 oldCapacity
   * 66 Weak Mutation 384: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - InsertUnaryOp Negation of oldCapacity
   * 67 Weak Mutation 391: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - InsertUnaryOp IINC -1 i
   * 68 Weak Mutation 390: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - InsertUnaryOp IINC 1 i
   * 69 Weak Mutation 389: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - InsertUnaryOp Negation of i
   * 70 Weak Mutation 388: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - ReplaceVariable i -> oldCapacity
   * 71 Weak Mutation 402: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - InsertUnaryOp IINC 1 i
   * 72 Weak Mutation 403: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - InsertUnaryOp IINC -1 i
   * 73 Weak Mutation 400: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - ReplaceVariable i -> oldCapacity
   * 74 Weak Mutation 401: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - InsertUnaryOp Negation of i
   * 75 Weak Mutation 404: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - ReplaceConstant - 1 -> 0
   * 76 Weak Mutation 405: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - ReplaceComparisonOperator != -> ==
   * 77 Weak Mutation 399: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - ReplaceVariable i -> newCapacity
   * 78 Weak Mutation 398: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - ReplaceVariable oldStates -> oldVals
   * 79 Weak Mutation 397: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - ReplaceVariable oldStates -> _states
   * 80 Weak Mutation 537: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:241 - DeleteStatement: ensureCapacity(I)V
   * 81 Weak Mutation 536: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:241 - DeleteStatement: size()I
   * 82 Weak Mutation 538: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:242 - DeleteStatement: iterator()Lgnu/trove/iterator/TCharByteIterator;
   * 83 Weak Mutation 540: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:243 - ReplaceComparisonOperator == -> !=
   * 84 Weak Mutation 539: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:243 - DeleteStatement: hasNext()Z
   * 85 gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.<init>(Lgnu/trove/map/hash/TCharByteHashMap;Lgnu/trove/map/hash/TCharByteHashMap;)V: root-Branch
   * 86 gnu.trove.map.hash.TCharByteHashMap.iterator()Lgnu/trove/iterator/TCharByteIterator;: root-Branch
   * 87 gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V: I10 Branch 34 IFEQ L133 - false
   * 88 gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V: I38 Branch 35 IFEQ L139 - false
   * 89 gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V: I50 Branch 36 IFEQ L143 - false
   * 90 gnu.trove.map.hash.TCharByteHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 91 gnu.trove.map.hash.TCharByteHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 92 gnu.trove.map.hash.TCharByteHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 93 gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V: I15 Branch 43 IFEQ L243 - true
   * 94 Weak Mutation 307: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:135 - ReplaceVariable hashmap -> this
   * 95 Weak Mutation 306: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:133 - ReplaceComparisonOperator == -> !=
   * 96 Weak Mutation 309: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:135 - DeleteField: _loadFactorF
   * 97 Weak Mutation 308: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:135 - InsertUnaryOp Negation
   * 98 Weak Mutation 311: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:136 - DeleteField: no_entry_keyC
   * 99 Weak Mutation 310: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:136 - ReplaceVariable hashmap -> this
   * 100 Weak Mutation 313: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:137 - ReplaceVariable no_entry_value -> FREE
   * 101 Weak Mutation 312: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:137 - ReplaceVariable hashmap -> this
   * 102 Weak Mutation 315: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:137 - ReplaceVariable no_entry_value -> REMOVED
   * 103 Weak Mutation 314: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:137 - ReplaceVariable no_entry_value -> FULL
   * 104 Weak Mutation 317: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:137 - DeleteField: no_entry_valueB
   * 105 Weak Mutation 316: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:137 - InsertUnaryOp Negation
   * 106 Weak Mutation 319: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:139 - ReplaceComparisonOperator == -> >=
   * 107 Weak Mutation 318: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:139 - DeleteField: no_entry_keyC
   * 108 Weak Mutation 343: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceConstant - 10.0 -> -1.0
   * 109 Weak Mutation 342: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceConstant - 10.0 -> 1.0
   * 110 Weak Mutation 341: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceConstant - 10.0 -> 0.0
   * 111 Weak Mutation 340: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - DeleteStatement: fill([BB)V
   * 112 Weak Mutation 339: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - DeleteField: no_entry_valueB
   * 113 Weak Mutation 338: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - InsertUnaryOp Negation
   * 114 Weak Mutation 337: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - ReplaceVariable no_entry_value -> REMOVED
   * 115 Weak Mutation 336: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - ReplaceVariable no_entry_value -> FULL
   * 116 Weak Mutation 350: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceArithmeticOperator / -> %
   * 117 Weak Mutation 349: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceArithmeticOperator / -> +
   * 118 Weak Mutation 348: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceArithmeticOperator / -> -
   * 119 Weak Mutation 347: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - DeleteField: _loadFactorF
   * 120 Weak Mutation 346: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - InsertUnaryOp Negation
   * 121 Weak Mutation 345: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceConstant - 10.0 -> 11.0
   * 122 Weak Mutation 344: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceConstant - 10.0 -> 9.0
   * 123 Weak Mutation 326: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:143 - ReplaceVariable no_entry_value -> FULL
   * 124 Weak Mutation 327: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:143 - ReplaceVariable no_entry_value -> REMOVED
   * 125 Weak Mutation 324: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:140 - DeleteStatement: fill([CC)V
   * 126 Weak Mutation 325: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:143 - ReplaceVariable no_entry_value -> FREE
   * 127 Weak Mutation 322: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:140 - DeleteField: _set[C
   * 128 Weak Mutation 323: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:140 - DeleteField: no_entry_keyC
   * 129 Weak Mutation 334: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - DeleteField: _values[B
   * 130 Weak Mutation 335: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - ReplaceVariable no_entry_value -> FREE
   * 131 Weak Mutation 333: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - ReplaceVariable _values -> _states
   * 132 Weak Mutation 331: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:143 - ReplaceComparisonOperator == -> <=
   * 133 Weak Mutation 328: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:143 - InsertUnaryOp Negation
   * 134 Weak Mutation 329: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:143 - DeleteField: no_entry_valueB
   * 135 Weak Mutation 373: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:181 - InsertUnaryOp IINC 1 newCapacity
   * 136 Weak Mutation 372: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:181 - InsertUnaryOp Negation of newCapacity
   * 137 Weak Mutation 374: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:181 - InsertUnaryOp IINC -1 newCapacity
   * 138 Weak Mutation 369: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:178 - DeleteField: _values[B
   * 139 Weak Mutation 368: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:178 - ReplaceVariable _values -> _states
   * 140 Weak Mutation 370: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:179 - DeleteField: _states[B
   * 141 Weak Mutation 381: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:183 - InsertUnaryOp IINC 1 newCapacity
   * 142 Weak Mutation 380: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:183 - InsertUnaryOp Negation of newCapacity
   * 143 Weak Mutation 382: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:183 - InsertUnaryOp IINC -1 newCapacity
   * 144 Weak Mutation 377: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:182 - InsertUnaryOp IINC 1 newCapacity
   * 145 Weak Mutation 376: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:182 - InsertUnaryOp Negation of newCapacity
   * 146 Weak Mutation 378: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:182 - InsertUnaryOp IINC -1 newCapacity
   * 147 Weak Mutation 356: gnu.trove.map.hash.TCharByteHashMap.setUp(I)I:162 - InsertUnaryOp IINC 1 initialCapacity
   * 148 Weak Mutation 357: gnu.trove.map.hash.TCharByteHashMap.setUp(I)I:162 - InsertUnaryOp IINC -1 initialCapacity
   * 149 Weak Mutation 358: gnu.trove.map.hash.TCharByteHashMap.setUp(I)I:163 - ReplaceVariable capacity -> initialCapacity
   * 150 Weak Mutation 359: gnu.trove.map.hash.TCharByteHashMap.setUp(I)I:163 - InsertUnaryOp Negation of capacity
   * 151 Weak Mutation 352: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - DeleteStatement: ceil(D)D
   * 152 Weak Mutation 353: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - DeleteStatement: setUp(I)I
   * 153 Weak Mutation 354: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:148 - DeleteStatement: putAll(Lgnu/trove/map/TCharByteMap;)V
   * 154 Weak Mutation 355: gnu.trove.map.hash.TCharByteHashMap.setUp(I)I:162 - InsertUnaryOp Negation of initialCapacity
   * 155 Weak Mutation 364: gnu.trove.map.hash.TCharByteHashMap.setUp(I)I:164 - InsertUnaryOp IINC 1 capacity
   * 156 Weak Mutation 365: gnu.trove.map.hash.TCharByteHashMap.setUp(I)I:164 - InsertUnaryOp IINC -1 capacity
   * 157 Weak Mutation 366: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:175 - DeleteField: _set[C
   * 158 Weak Mutation 367: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:177 - DeleteField: _set[C
   * 159 Weak Mutation 360: gnu.trove.map.hash.TCharByteHashMap.setUp(I)I:163 - InsertUnaryOp IINC 1 capacity
   * 160 Weak Mutation 361: gnu.trove.map.hash.TCharByteHashMap.setUp(I)I:163 - InsertUnaryOp IINC -1 capacity
   * 161 Weak Mutation 362: gnu.trove.map.hash.TCharByteHashMap.setUp(I)I:164 - ReplaceVariable capacity -> initialCapacity
   * 162 Weak Mutation 363: gnu.trove.map.hash.TCharByteHashMap.setUp(I)I:164 - InsertUnaryOp Negation of capacity
   * 163 Weak Mutation 402: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - InsertUnaryOp IINC 1 i
   * 164 Weak Mutation 403: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - InsertUnaryOp IINC -1 i
   * 165 Weak Mutation 400: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - ReplaceVariable i -> oldCapacity
   * 166 Weak Mutation 401: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - InsertUnaryOp Negation of i
   * 167 Weak Mutation 404: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - ReplaceConstant - 1 -> 0
   * 168 Weak Mutation 405: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - ReplaceComparisonOperator != -> ==
   * 169 Weak Mutation 395: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - ReplaceComparisonOperator <= -> <
   * 170 Weak Mutation 393: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - ReplaceVariable i -> oldCapacity
   * 171 Weak Mutation 392: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - ReplaceVariable i -> newCapacity
   * 172 Weak Mutation 399: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - ReplaceVariable i -> newCapacity
   * 173 Weak Mutation 398: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - ReplaceVariable oldStates -> oldVals
   * 174 Weak Mutation 397: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - ReplaceVariable oldStates -> _states
   * 175 Weak Mutation 396: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - ReplaceComparisonOperator <= -> -1
   * 176 Weak Mutation 387: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - ReplaceVariable i -> newCapacity
   * 177 Weak Mutation 386: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - InsertUnaryOp IINC -1 oldCapacity
   * 178 Weak Mutation 385: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - InsertUnaryOp IINC 1 oldCapacity
   * 179 Weak Mutation 384: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - InsertUnaryOp Negation of oldCapacity
   * 180 Weak Mutation 391: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - InsertUnaryOp IINC -1 i
   * 181 Weak Mutation 390: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - InsertUnaryOp IINC 1 i
   * 182 Weak Mutation 389: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - InsertUnaryOp Negation of i
   * 183 Weak Mutation 388: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - ReplaceVariable i -> oldCapacity
   * 184 Weak Mutation 540: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:243 - ReplaceComparisonOperator == -> !=
   * 185 Weak Mutation 537: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:241 - DeleteStatement: ensureCapacity(I)V
   * 186 Weak Mutation 536: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:241 - DeleteStatement: size()I
   * 187 Weak Mutation 539: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:243 - DeleteStatement: hasNext()Z
   * 188 Weak Mutation 538: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:242 - DeleteStatement: iterator()Lgnu/trove/iterator/TCharByteIterator;
   * 189 gnu.trove.map.hash.TCharByteHashMap.<init>(IFCB)V: root-Branch
   * 190 gnu.trove.map.hash.TCharByteHashMap.setUp(I)I: root-Branch
   */

//   @Test
//   public void test0()  throws Throwable  {
//       TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((int) '1', (-1.0F), 'l', (byte) (-71));
//       TCharByteHashMap tCharByteHashMap1 = new TCharByteHashMap((TCharByteMap) tCharByteHashMap0);
//       assertEquals(3, tCharByteHashMap0.capacity());
//       assertEquals('l', tCharByteHashMap1.getNoEntryKey());
//       assertEquals(3, tCharByteHashMap1.capacity());
//       assertEquals(-71, tCharByteHashMap1.getNoEntryValue());
//   }

  //Test case number: 1
  /*
   * 21 covered goals:
   * 1 Weak Mutation 330: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:143 - ReplaceComparisonOperator == -> >=
   * 2 Weak Mutation 311: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:136 - DeleteField: no_entry_keyC
   * 3 Weak Mutation 313: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:137 - ReplaceVariable no_entry_value -> FREE
   * 4 Weak Mutation 317: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:137 - DeleteField: no_entry_valueB
   * 5 Weak Mutation 319: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:139 - ReplaceComparisonOperator == -> >=
   * 6 Weak Mutation 318: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:139 - DeleteField: no_entry_keyC
   * 7 Weak Mutation 340: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - DeleteStatement: fill([BB)V
   * 8 Weak Mutation 339: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - DeleteField: no_entry_valueB
   * 9 Weak Mutation 338: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - InsertUnaryOp Negation
   * 10 Weak Mutation 337: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - ReplaceVariable no_entry_value -> REMOVED
   * 11 Weak Mutation 336: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - ReplaceVariable no_entry_value -> FULL
   * 12 Weak Mutation 324: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:140 - DeleteStatement: fill([CC)V
   * 13 Weak Mutation 325: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:143 - ReplaceVariable no_entry_value -> FREE
   * 14 Weak Mutation 322: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:140 - DeleteField: _set[C
   * 15 Weak Mutation 323: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:140 - DeleteField: no_entry_keyC
   * 16 Weak Mutation 334: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - DeleteField: _values[B
   * 17 Weak Mutation 335: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - ReplaceVariable no_entry_value -> FREE
   * 18 Weak Mutation 333: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:144 - ReplaceVariable _values -> _states
   * 19 Weak Mutation 329: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:143 - DeleteField: no_entry_valueB
   * 20 Weak Mutation 351: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceArithmeticOperator / -> *
   * 21 Weak Mutation 330: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:143 - ReplaceComparisonOperator == -> >=
   */

  @Test
  public void test1()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((int) (byte)37, 0.0F, ')', (byte)37);
      TCharByteHashMap tCharByteHashMap1 = null;
      try {
        tCharByteHashMap1 = new TCharByteHashMap((TCharByteMap) tCharByteHashMap0);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  //Test case number: 2
  /*
   * 115 covered goals:
   * 1 Weak Mutation 457: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:205 - ReplaceComparisonOperator >= -> -1
   * 2 Weak Mutation 466: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:206 - ReplaceArithmeticOperator - -> /
   * 3 Weak Mutation 467: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:206 - ReplaceArithmeticOperator - -> *
   * 4 Weak Mutation 464: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:206 - ReplaceArithmeticOperator - -> +
   * 5 Weak Mutation 465: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:206 - ReplaceArithmeticOperator - -> %
   * 6 Weak Mutation 463: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:206 - ReplaceConstant - 1 -> 0
   * 7 Weak Mutation 462: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:206 - InsertUnaryOp IINC -1 index
   * 8 Weak Mutation 461: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:206 - InsertUnaryOp IINC 1 index
   * 9 Weak Mutation 460: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:206 - InsertUnaryOp Negation of index
   * 10 Weak Mutation 459: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:206 - DeleteField: _values[B
   * 11 Weak Mutation 458: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:206 - ReplaceVariable _values -> _states
   * 12 gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B: I9 Branch 39 IFGE L205 - false
   * 13 Weak Mutation 279: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:118 - ReplaceVariable keys -> _set
   * 14 Weak Mutation 283: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - ReplaceVariable i -> size
   * 15 Weak Mutation 282: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - ReplaceConstant - 0 -> 1
   * 16 Weak Mutation 281: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:118 - DeleteStatement: min(II)I
   * 17 Weak Mutation 280: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:118 - ReplaceVariable values -> _states
   * 18 Weak Mutation 287: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - ReplaceVariable size -> i
   * 19 Weak Mutation 286: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - InsertUnaryOp IINC -1 i
   * 20 Weak Mutation 285: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - InsertUnaryOp IINC 1 i
   * 21 Weak Mutation 284: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - InsertUnaryOp Negation of i
   * 22 Weak Mutation 305: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - ReplaceVariable i -> size
   * 23 Weak Mutation 304: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:120 - DeleteStatement: put(CB)B
   * 24 Weak Mutation 288: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - InsertUnaryOp Negation of size
   * 25 Weak Mutation 289: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - InsertUnaryOp IINC 1 size
   * 26 Weak Mutation 290: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - InsertUnaryOp IINC -1 size
   * 27 Weak Mutation 292: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - ReplaceComparisonOperator >= -> >
   * 28 Weak Mutation 293: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - ReplaceComparisonOperator >= -> -1
   * 29 Weak Mutation 294: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:120 - ReplaceVariable keys -> _set
   * 30 Weak Mutation 295: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:120 - ReplaceVariable i -> size
   * 31 Weak Mutation 296: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:120 - InsertUnaryOp Negation of i
   * 32 Weak Mutation 297: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:120 - InsertUnaryOp IINC 1 i
   * 33 Weak Mutation 298: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:120 - InsertUnaryOp IINC -1 i
   * 34 Weak Mutation 299: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:120 - ReplaceVariable values -> _states
   * 35 Weak Mutation 300: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:120 - ReplaceVariable i -> size
   * 36 Weak Mutation 301: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:120 - InsertUnaryOp Negation of i
   * 37 Weak Mutation 302: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:120 - InsertUnaryOp IINC 1 i
   * 38 Weak Mutation 303: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:120 - InsertUnaryOp IINC -1 i
   * 39 Weak Mutation 440: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - ReplaceVariable value -> FULL
   * 40 Weak Mutation 441: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - ReplaceVariable value -> REMOVED
   * 41 Weak Mutation 442: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - InsertUnaryOp Negation of value
   * 42 Weak Mutation 443: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - InsertUnaryOp IINC 1 value
   * 43 Weak Mutation 444: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - InsertUnaryOp IINC -1 value
   * 44 Weak Mutation 445: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - InsertUnaryOp Negation of index
   * 45 Weak Mutation 446: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - InsertUnaryOp IINC 1 index
   * 46 Weak Mutation 447: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - InsertUnaryOp IINC -1 index
   * 47 Weak Mutation 432: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:197 - InsertUnaryOp Negation of key
   * 48 Weak Mutation 433: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:197 - InsertUnaryOp IINC 1 key
   * 49 Weak Mutation 434: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:197 - InsertUnaryOp IINC -1 key
   * 50 Weak Mutation 435: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:197 - DeleteStatement: insertKey(C)I
   * 51 Weak Mutation 436: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - InsertUnaryOp Negation of key
   * 52 Weak Mutation 437: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - InsertUnaryOp IINC 1 key
   * 53 Weak Mutation 438: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - InsertUnaryOp IINC -1 key
   * 54 Weak Mutation 466: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:206 - ReplaceArithmeticOperator - -> /
   * 55 Weak Mutation 467: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:206 - ReplaceArithmeticOperator - -> *
   * 56 Weak Mutation 464: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:206 - ReplaceArithmeticOperator - -> +
   * 57 Weak Mutation 465: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:206 - ReplaceArithmeticOperator - -> %
   * 58 Weak Mutation 463: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:206 - ReplaceConstant - 1 -> 0
   * 59 Weak Mutation 462: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:206 - InsertUnaryOp IINC -1 index
   * 60 Weak Mutation 461: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:206 - InsertUnaryOp IINC 1 index
   * 61 Weak Mutation 460: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:206 - InsertUnaryOp Negation of index
   * 62 Weak Mutation 459: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:206 - DeleteField: _values[B
   * 63 Weak Mutation 458: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:206 - ReplaceVariable _values -> _states
   * 64 Weak Mutation 457: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:205 - ReplaceComparisonOperator >= -> -1
   * 65 Weak Mutation 454: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:205 - InsertUnaryOp IINC -1 index
   * 66 Weak Mutation 453: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:205 - InsertUnaryOp IINC 1 index
   * 67 Weak Mutation 452: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:205 - InsertUnaryOp Negation of index
   * 68 Weak Mutation 451: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:204 - DeleteStatement: insertKey(C)I
   * 69 Weak Mutation 450: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:204 - InsertUnaryOp IINC -1 key
   * 70 Weak Mutation 449: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:204 - InsertUnaryOp IINC 1 key
   * 71 Weak Mutation 448: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:204 - InsertUnaryOp Negation of key
   * 72 Weak Mutation 508: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - ReplaceVariable value -> FULL
   * 73 Weak Mutation 510: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - ReplaceVariable value -> REMOVED
   * 74 Weak Mutation 511: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - InsertUnaryOp Negation of value
   * 75 Weak Mutation 504: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - InsertUnaryOp Negation of index
   * 76 Weak Mutation 505: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - InsertUnaryOp IINC 1 index
   * 77 Weak Mutation 506: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - InsertUnaryOp IINC -1 index
   * 78 Weak Mutation 500: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:216 - InsertUnaryOp IINC -1 index
   * 79 Weak Mutation 501: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:217 - ReplaceConstant - 0 -> 1
   * 80 Weak Mutation 502: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - ReplaceVariable _values -> _states
   * 81 Weak Mutation 503: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - DeleteField: _values[B
   * 82 Weak Mutation 496: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:216 - ReplaceVariable _values -> _states
   * 83 Weak Mutation 497: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:216 - DeleteField: _values[B
   * 84 Weak Mutation 498: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:216 - InsertUnaryOp Negation of index
   * 85 Weak Mutation 499: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:216 - InsertUnaryOp IINC 1 index
   * 86 Weak Mutation 492: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:215 - ReplaceArithmeticOperator - -> +
   * 87 Weak Mutation 495: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:215 - ReplaceArithmeticOperator - -> *
   * 88 Weak Mutation 494: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:215 - ReplaceArithmeticOperator - -> /
   * 89 Weak Mutation 489: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:214 - ReplaceComparisonOperator >= -> -1
   * 90 Weak Mutation 488: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:214 - ReplaceComparisonOperator >= -> >
   * 91 Weak Mutation 491: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:215 - ReplaceConstant - 1 -> 0
   * 92 Weak Mutation 490: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:215 - InsertUnaryOp Negation of index
   * 93 Weak Mutation 485: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:213 - ReplaceConstant - 1 -> 0
   * 94 Weak Mutation 487: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:214 - ReplaceComparisonOperator >= -> ==
   * 95 Weak Mutation 486: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:214 - InsertUnaryOp Negation of index
   * 96 Weak Mutation 481: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:212 - ReplaceVariable no_entry_value -> FULL
   * 97 Weak Mutation 483: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:212 - InsertUnaryOp Negation
   * 98 Weak Mutation 482: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:212 - ReplaceVariable no_entry_value -> REMOVED
   * 99 Weak Mutation 516: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:222 - InsertUnaryOp Negation
   * 100 Weak Mutation 517: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:222 - DeleteField: consumeFreeSlotZ
   * 101 Weak Mutation 518: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:222 - DeleteStatement: postInsertHook(Z)V
   * 102 Weak Mutation 512: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - InsertUnaryOp IINC 1 value
   * 103 Weak Mutation 513: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - InsertUnaryOp IINC -1 value
   * 104 Weak Mutation 514: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:221 - InsertUnaryOp Negation of isNewMapping
   * 105 Weak Mutation 515: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:221 - ReplaceComparisonOperator == -> !=
   * 106 Weak Mutation 520: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:225 - ReplaceVariable previous -> FULL
   * 107 Weak Mutation 522: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:225 - ReplaceVariable previous -> REMOVED
   * 108 Weak Mutation 523: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:225 - InsertUnaryOp Negation of previous
   * 109 gnu.trove.map.hash.TCharByteHashMap.put(CB)B: root-Branch
   * 110 gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 111 gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 112 gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B: I12 Branch 40 IFGE L214 - true
   * 113 gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B: I12 Branch 40 IFGE L214 - false
   * 114 gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B: I41 Branch 41 IFEQ L221 - true
   * 115 gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B: I41 Branch 41 IFEQ L221 - false
   */

  @Test
  public void test2()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[1] = '';
      charArray0[1] = 'M';
      byte[] byteArray0 = new byte[8];
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      byte byte0 = tCharByteHashMap0.putIfAbsent('M', (byte)0);
      assertEquals((byte)0, byte0);
      assertEquals("{M=0, \u0000=0}", tCharByteHashMap0.toString());
      assertEquals(2, tCharByteHashMap0.size());
      assertEquals(23, tCharByteHashMap0.capacity());
  }

  //Test case number: 3
  /*
   * 13 covered goals:
   * 1 Weak Mutation 524: gnu.trove.map.hash.TCharByteHashMap.putAll(Ljava/util/Map;)V:231 - DeleteStatement: size()I
   * 2 Weak Mutation 525: gnu.trove.map.hash.TCharByteHashMap.putAll(Ljava/util/Map;)V:231 - DeleteStatement: ensureCapacity(I)V
   * 3 Weak Mutation 526: gnu.trove.map.hash.TCharByteHashMap.putAll(Ljava/util/Map;)V:233 - DeleteStatement: entrySet()Ljava/util/Set;
   * 4 Weak Mutation 527: gnu.trove.map.hash.TCharByteHashMap.putAll(Ljava/util/Map;)V:233 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 5 Weak Mutation 529: gnu.trove.map.hash.TCharByteHashMap.putAll(Ljava/util/Map;)V:233 - ReplaceComparisonOperator == -> !=
   * 6 Weak Mutation 528: gnu.trove.map.hash.TCharByteHashMap.putAll(Ljava/util/Map;)V:233 - DeleteStatement: hasNext()Z
   * 7 gnu.trove.map.hash.TCharByteHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - true
   * 8 Weak Mutation 524: gnu.trove.map.hash.TCharByteHashMap.putAll(Ljava/util/Map;)V:231 - DeleteStatement: size()I
   * 9 Weak Mutation 525: gnu.trove.map.hash.TCharByteHashMap.putAll(Ljava/util/Map;)V:231 - DeleteStatement: ensureCapacity(I)V
   * 10 Weak Mutation 526: gnu.trove.map.hash.TCharByteHashMap.putAll(Ljava/util/Map;)V:233 - DeleteStatement: entrySet()Ljava/util/Set;
   * 11 Weak Mutation 527: gnu.trove.map.hash.TCharByteHashMap.putAll(Ljava/util/Map;)V:233 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 12 Weak Mutation 529: gnu.trove.map.hash.TCharByteHashMap.putAll(Ljava/util/Map;)V:233 - ReplaceComparisonOperator == -> !=
   * 13 Weak Mutation 528: gnu.trove.map.hash.TCharByteHashMap.putAll(Ljava/util/Map;)V:233 - DeleteStatement: hasNext()Z
   */

  @Test
  public void test3()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(1199, (-979.25525F), '@', (byte)0);
      HashMap<Character, Byte> hashMap0 = new HashMap<Character, Byte>();
      tCharByteHashMap0.putAll((Map<? extends Character, ? extends Byte>) hashMap0);
      assertEquals("{}", tCharByteHashMap0.toString());
      assertEquals(3, tCharByteHashMap0.capacity());
  }

  //Test case number: 4
  /*
   * 20 covered goals:
   * 1 Weak Mutation 559: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - DeleteField: no_entry_valueB
   * 2 Weak Mutation 555: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - ReplaceVariable no_entry_value -> FREE
   * 3 Weak Mutation 558: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - InsertUnaryOp Negation
   * 4 Weak Mutation 556: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - ReplaceVariable no_entry_value -> FULL
   * 5 Weak Mutation 557: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - ReplaceVariable no_entry_value -> REMOVED
   * 6 Weak Mutation 554: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - ReplaceComparisonOperator >= -> -1
   * 7 Weak Mutation 550: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - InsertUnaryOp IINC 1 index
   * 8 Weak Mutation 551: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - InsertUnaryOp IINC -1 index
   * 9 Weak Mutation 548: gnu.trove.map.hash.TCharByteHashMap.get(C)B:252 - DeleteStatement: index(C)I
   * 10 Weak Mutation 549: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - InsertUnaryOp Negation of index
   * 11 Weak Mutation 546: gnu.trove.map.hash.TCharByteHashMap.get(C)B:252 - InsertUnaryOp IINC 1 key
   * 12 Weak Mutation 547: gnu.trove.map.hash.TCharByteHashMap.get(C)B:252 - InsertUnaryOp IINC -1 key
   * 13 Weak Mutation 545: gnu.trove.map.hash.TCharByteHashMap.get(C)B:252 - InsertUnaryOp Negation of key
   * 14 Weak Mutation 558: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - InsertUnaryOp Negation
   * 15 Weak Mutation 559: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - DeleteField: no_entry_valueB
   * 16 Weak Mutation 556: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - ReplaceVariable no_entry_value -> FULL
   * 17 Weak Mutation 557: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - ReplaceVariable no_entry_value -> REMOVED
   * 18 Weak Mutation 554: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - ReplaceComparisonOperator >= -> -1
   * 19 Weak Mutation 555: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - ReplaceVariable no_entry_value -> FREE
   * 20 gnu.trove.map.hash.TCharByteHashMap.get(C)B: I9 Branch 44 IFGE L253 - false
   */

  @Test
  public void test4()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(0, (float) 0, '*', (byte)61);
      byte byte0 = tCharByteHashMap0.get('*');
      assertEquals((byte)61, byte0);
  }

  //Test case number: 5
  /*
   * 43 covered goals:
   * 1 Weak Mutation 567: gnu.trove.map.hash.TCharByteHashMap.clear()V:260 - DeleteField: _set[C
   * 2 Weak Mutation 566: gnu.trove.map.hash.TCharByteHashMap.clear()V:260 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 565: gnu.trove.map.hash.TCharByteHashMap.clear()V:260 - DeleteField: _set[C
   * 4 Weak Mutation 569: gnu.trove.map.hash.TCharByteHashMap.clear()V:260 - DeleteStatement: fill([CIIC)V
   * 5 Weak Mutation 568: gnu.trove.map.hash.TCharByteHashMap.clear()V:260 - DeleteField: no_entry_keyC
   * 6 Weak Mutation 575: gnu.trove.map.hash.TCharByteHashMap.clear()V:261 - ReplaceVariable no_entry_value -> FREE
   * 7 Weak Mutation 574: gnu.trove.map.hash.TCharByteHashMap.clear()V:261 - DeleteField: _values[B
   * 8 Weak Mutation 573: gnu.trove.map.hash.TCharByteHashMap.clear()V:261 - ReplaceVariable _values -> _states
   * 9 Weak Mutation 572: gnu.trove.map.hash.TCharByteHashMap.clear()V:261 - ReplaceConstant - 0 -> 1
   * 10 Weak Mutation 571: gnu.trove.map.hash.TCharByteHashMap.clear()V:261 - DeleteField: _values[B
   * 11 Weak Mutation 570: gnu.trove.map.hash.TCharByteHashMap.clear()V:261 - ReplaceVariable _values -> _states
   * 12 Weak Mutation 576: gnu.trove.map.hash.TCharByteHashMap.clear()V:261 - ReplaceVariable no_entry_value -> FULL
   * 13 Weak Mutation 577: gnu.trove.map.hash.TCharByteHashMap.clear()V:261 - ReplaceVariable no_entry_value -> REMOVED
   * 14 Weak Mutation 578: gnu.trove.map.hash.TCharByteHashMap.clear()V:261 - InsertUnaryOp Negation
   * 15 Weak Mutation 579: gnu.trove.map.hash.TCharByteHashMap.clear()V:261 - DeleteField: no_entry_valueB
   * 16 Weak Mutation 580: gnu.trove.map.hash.TCharByteHashMap.clear()V:261 - DeleteStatement: fill([BIIB)V
   * 17 Weak Mutation 581: gnu.trove.map.hash.TCharByteHashMap.clear()V:262 - DeleteField: _states[B
   * 18 Weak Mutation 582: gnu.trove.map.hash.TCharByteHashMap.clear()V:262 - ReplaceConstant - 0 -> 1
   * 19 Weak Mutation 583: gnu.trove.map.hash.TCharByteHashMap.clear()V:262 - DeleteField: _states[B
   * 20 Weak Mutation 584: gnu.trove.map.hash.TCharByteHashMap.clear()V:262 - ReplaceConstant - 0 -> 1
   * 21 Weak Mutation 585: gnu.trove.map.hash.TCharByteHashMap.clear()V:262 - DeleteStatement: fill([BIIB)V
   * 22 gnu.trove.map.hash.TCharByteHashMap.clear()V: root-Branch
   * 23 Weak Mutation 567: gnu.trove.map.hash.TCharByteHashMap.clear()V:260 - DeleteField: _set[C
   * 24 Weak Mutation 566: gnu.trove.map.hash.TCharByteHashMap.clear()V:260 - ReplaceConstant - 0 -> 1
   * 25 Weak Mutation 565: gnu.trove.map.hash.TCharByteHashMap.clear()V:260 - DeleteField: _set[C
   * 26 Weak Mutation 575: gnu.trove.map.hash.TCharByteHashMap.clear()V:261 - ReplaceVariable no_entry_value -> FREE
   * 27 Weak Mutation 574: gnu.trove.map.hash.TCharByteHashMap.clear()V:261 - DeleteField: _values[B
   * 28 Weak Mutation 573: gnu.trove.map.hash.TCharByteHashMap.clear()V:261 - ReplaceVariable _values -> _states
   * 29 Weak Mutation 572: gnu.trove.map.hash.TCharByteHashMap.clear()V:261 - ReplaceConstant - 0 -> 1
   * 30 Weak Mutation 571: gnu.trove.map.hash.TCharByteHashMap.clear()V:261 - DeleteField: _values[B
   * 31 Weak Mutation 570: gnu.trove.map.hash.TCharByteHashMap.clear()V:261 - ReplaceVariable _values -> _states
   * 32 Weak Mutation 569: gnu.trove.map.hash.TCharByteHashMap.clear()V:260 - DeleteStatement: fill([CIIC)V
   * 33 Weak Mutation 568: gnu.trove.map.hash.TCharByteHashMap.clear()V:260 - DeleteField: no_entry_keyC
   * 34 Weak Mutation 576: gnu.trove.map.hash.TCharByteHashMap.clear()V:261 - ReplaceVariable no_entry_value -> FULL
   * 35 Weak Mutation 577: gnu.trove.map.hash.TCharByteHashMap.clear()V:261 - ReplaceVariable no_entry_value -> REMOVED
   * 36 Weak Mutation 578: gnu.trove.map.hash.TCharByteHashMap.clear()V:261 - InsertUnaryOp Negation
   * 37 Weak Mutation 579: gnu.trove.map.hash.TCharByteHashMap.clear()V:261 - DeleteField: no_entry_valueB
   * 38 Weak Mutation 580: gnu.trove.map.hash.TCharByteHashMap.clear()V:261 - DeleteStatement: fill([BIIB)V
   * 39 Weak Mutation 581: gnu.trove.map.hash.TCharByteHashMap.clear()V:262 - DeleteField: _states[B
   * 40 Weak Mutation 582: gnu.trove.map.hash.TCharByteHashMap.clear()V:262 - ReplaceConstant - 0 -> 1
   * 41 Weak Mutation 583: gnu.trove.map.hash.TCharByteHashMap.clear()V:262 - DeleteField: _states[B
   * 42 Weak Mutation 584: gnu.trove.map.hash.TCharByteHashMap.clear()V:262 - ReplaceConstant - 0 -> 1
   * 43 Weak Mutation 585: gnu.trove.map.hash.TCharByteHashMap.clear()V:262 - DeleteStatement: fill([BIIB)V
   */

  @Test
  public void test5()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(0, (float) 0, 'Z', (byte) (-50));
      tCharByteHashMap0.clear();
      assertEquals("{}", tCharByteHashMap0.toString());
  }

  //Test case number: 6
  /*
   * 13 covered goals:
   * 1 Weak Mutation 586: gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z:268 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 587: gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z:268 - InsertUnaryOp Negation
   * 3 Weak Mutation 588: gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z:268 - InsertUnaryOp +1
   * 4 Weak Mutation 589: gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z:268 - InsertUnaryOp -1
   * 5 Weak Mutation 593: gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z:268 - ReplaceComparisonOperator != -> -1
   * 6 Weak Mutation 594: gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z:268 - ReplaceConstant - 1 -> 0
   * 7 gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - false
   * 8 Weak Mutation 586: gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z:268 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 587: gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z:268 - InsertUnaryOp Negation
   * 10 Weak Mutation 588: gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z:268 - InsertUnaryOp +1
   * 11 Weak Mutation 589: gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z:268 - InsertUnaryOp -1
   * 12 Weak Mutation 593: gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z:268 - ReplaceComparisonOperator != -> -1
   * 13 Weak Mutation 594: gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z:268 - ReplaceConstant - 1 -> 0
   */

  @Test
  public void test6()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(0, (float) 0, 'Z', (byte) (-50));
      boolean boolean0 = tCharByteHashMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 59 covered goals:
   * 1 Weak Mutation 590: gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z:268 - DeleteField: _sizeI
   * 2 Weak Mutation 591: gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z:268 - ReplaceComparisonOperator != -> >
   * 3 Weak Mutation 595: gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z:268 - ReplaceConstant - 0 -> 1
   * 4 gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - true
   * 5 Weak Mutation 586: gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z:268 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 587: gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z:268 - InsertUnaryOp Negation
   * 7 Weak Mutation 588: gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z:268 - InsertUnaryOp +1
   * 8 Weak Mutation 589: gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z:268 - InsertUnaryOp -1
   * 9 Weak Mutation 375: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:182 - ReplaceVariable newCapacity -> oldCapacity
   * 10 Weak Mutation 371: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:181 - ReplaceVariable newCapacity -> oldCapacity
   * 11 Weak Mutation 383: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - ReplaceVariable oldCapacity -> newCapacity
   * 12 Weak Mutation 379: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:183 - ReplaceVariable newCapacity -> oldCapacity
   * 13 Weak Mutation 410: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:187 - InsertUnaryOp IINC 1 i
   * 14 Weak Mutation 411: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:187 - InsertUnaryOp IINC -1 i
   * 15 Weak Mutation 408: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:187 - ReplaceVariable i -> oldCapacity
   * 16 Weak Mutation 409: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:187 - InsertUnaryOp Negation of i
   * 17 Weak Mutation 414: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:188 - InsertUnaryOp IINC -1 o
   * 18 Weak Mutation 415: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:188 - DeleteStatement: insertKey(C)I
   * 19 Weak Mutation 412: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:188 - InsertUnaryOp Negation of o
   * 20 Weak Mutation 413: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:188 - InsertUnaryOp IINC 1 o
   * 21 Weak Mutation 406: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:187 - ReplaceVariable oldKeys -> _set
   * 22 Weak Mutation 407: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:187 - ReplaceVariable i -> newCapacity
   * 23 Weak Mutation 425: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - ReplaceVariable oldVals -> oldStates
   * 24 Weak Mutation 424: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - ReplaceVariable oldVals -> _states
   * 25 Weak Mutation 427: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - ReplaceVariable i -> newCapacity
   * 26 Weak Mutation 426: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - ReplaceVariable i -> index
   * 27 Weak Mutation 429: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - InsertUnaryOp Negation of i
   * 28 Weak Mutation 428: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - ReplaceVariable i -> oldCapacity
   * 29 Weak Mutation 431: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - InsertUnaryOp IINC -1 i
   * 30 Weak Mutation 430: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - InsertUnaryOp IINC 1 i
   * 31 Weak Mutation 417: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - DeleteField: _values[B
   * 32 Weak Mutation 416: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - ReplaceVariable _values -> _states
   * 33 Weak Mutation 419: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - ReplaceVariable index -> oldCapacity
   * 34 Weak Mutation 418: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - ReplaceVariable index -> newCapacity
   * 35 Weak Mutation 421: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - InsertUnaryOp Negation of index
   * 36 Weak Mutation 420: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - ReplaceVariable index -> i
   * 37 Weak Mutation 423: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - InsertUnaryOp IINC -1 index
   * 38 Weak Mutation 422: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - InsertUnaryOp IINC 1 index
   * 39 Weak Mutation 478: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - InsertUnaryOp IINC 1 index
   * 40 Weak Mutation 479: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - InsertUnaryOp IINC -1 index
   * 41 Weak Mutation 476: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - InsertUnaryOp IINC -1 value
   * 42 Weak Mutation 477: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - InsertUnaryOp Negation of index
   * 43 Weak Mutation 474: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - InsertUnaryOp Negation of value
   * 44 Weak Mutation 475: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - InsertUnaryOp IINC 1 value
   * 45 Weak Mutation 472: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - ReplaceVariable value -> FULL
   * 46 Weak Mutation 473: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - ReplaceVariable value -> REMOVED
   * 47 Weak Mutation 470: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - InsertUnaryOp IINC -1 key
   * 48 Weak Mutation 471: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - ReplaceVariable value -> FREE
   * 49 Weak Mutation 468: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - InsertUnaryOp Negation of key
   * 50 Weak Mutation 469: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - InsertUnaryOp IINC 1 key
   * 51 Weak Mutation 455: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:205 - ReplaceComparisonOperator >= -> ==
   * 52 Weak Mutation 509: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - ReplaceVariable value -> previous
   * 53 Weak Mutation 507: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - ReplaceVariable value -> FREE
   * 54 Weak Mutation 521: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:225 - ReplaceVariable previous -> value
   * 55 Weak Mutation 590: gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z:268 - DeleteField: _sizeI
   * 56 Weak Mutation 591: gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z:268 - ReplaceComparisonOperator != -> >
   * 57 Weak Mutation 595: gnu.trove.map.hash.TCharByteHashMap.isEmpty()Z:268 - ReplaceConstant - 0 -> 1
   * 58 gnu.trove.map.hash.TCharByteHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 59 gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B: I9 Branch 39 IFGE L205 - true
   */

  @Test
  public void test7()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(1199, (-979.25525F), '@', (byte)0);
      tCharByteHashMap0.putIfAbsent('(', (byte) (-61));
      boolean boolean0 = tCharByteHashMap0.isEmpty();
      assertEquals(1, tCharByteHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 24 covered goals:
   * 1 Weak Mutation 596: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:274 - ReplaceVariable no_entry_value -> FREE
   * 2 Weak Mutation 600: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:274 - DeleteField: no_entry_valueB
   * 3 Weak Mutation 620: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:280 - ReplaceVariable prev -> FREE
   * 4 Weak Mutation 610: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:276 - ReplaceComparisonOperator < -> -2
   * 5 Weak Mutation 610: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:276 - ReplaceComparisonOperator < -> -2
   * 6 Weak Mutation 622: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:280 - ReplaceVariable prev -> REMOVED
   * 7 Weak Mutation 623: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:280 - InsertUnaryOp Negation of prev
   * 8 Weak Mutation 620: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:280 - ReplaceVariable prev -> FREE
   * 9 Weak Mutation 621: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:280 - ReplaceVariable prev -> FULL
   * 10 Weak Mutation 625: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:280 - InsertUnaryOp IINC -1 prev
   * 11 Weak Mutation 624: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:280 - InsertUnaryOp IINC 1 prev
   * 12 Weak Mutation 597: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:274 - ReplaceVariable no_entry_value -> FULL
   * 13 Weak Mutation 596: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:274 - ReplaceVariable no_entry_value -> FREE
   * 14 Weak Mutation 599: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:274 - InsertUnaryOp Negation
   * 15 Weak Mutation 598: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:274 - ReplaceVariable no_entry_value -> REMOVED
   * 16 Weak Mutation 601: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:275 - InsertUnaryOp Negation of key
   * 17 Weak Mutation 600: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:274 - DeleteField: no_entry_valueB
   * 18 Weak Mutation 603: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:275 - InsertUnaryOp IINC -1 key
   * 19 Weak Mutation 602: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:275 - InsertUnaryOp IINC 1 key
   * 20 Weak Mutation 605: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:276 - InsertUnaryOp Negation of index
   * 21 Weak Mutation 604: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:275 - DeleteStatement: index(C)I
   * 22 Weak Mutation 607: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:276 - InsertUnaryOp IINC -1 index
   * 23 Weak Mutation 606: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:276 - InsertUnaryOp IINC 1 index
   * 24 gnu.trove.map.hash.TCharByteHashMap.remove(C)B: I14 Branch 46 IFLT L276 - true
   */

  @Test
  public void test8()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(195, (float) 195, '=', (byte)18);
      byte byte0 = tCharByteHashMap0.remove('=');
      assertEquals((byte)18, byte0);
  }

  //Test case number: 9
  /*
   * 61 covered goals:
   * 1 Weak Mutation 608: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:276 - ReplaceComparisonOperator < -> !=
   * 2 Weak Mutation 611: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:277 - ReplaceVariable _values -> _states
   * 3 Weak Mutation 614: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:277 - InsertUnaryOp IINC 1 index
   * 4 Weak Mutation 615: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:277 - InsertUnaryOp IINC -1 index
   * 5 Weak Mutation 612: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:277 - DeleteField: _values[B
   * 6 Weak Mutation 613: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:277 - InsertUnaryOp Negation of index
   * 7 Weak Mutation 618: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:278 - InsertUnaryOp IINC -1 index
   * 8 Weak Mutation 619: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:278 - DeleteStatement: removeAt(I)V
   * 9 Weak Mutation 616: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:278 - InsertUnaryOp Negation of index
   * 10 Weak Mutation 617: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:278 - InsertUnaryOp IINC 1 index
   * 11 Weak Mutation 627: gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V:286 - DeleteField: _values[B
   * 12 Weak Mutation 626: gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V:286 - ReplaceVariable _values -> _states
   * 13 Weak Mutation 630: gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V:286 - InsertUnaryOp IINC -1 index
   * 14 Weak Mutation 629: gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V:286 - InsertUnaryOp IINC 1 index
   * 15 Weak Mutation 628: gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V:286 - InsertUnaryOp Negation of index
   * 16 Weak Mutation 634: gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V:286 - InsertUnaryOp Negation
   * 17 Weak Mutation 633: gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V:286 - ReplaceVariable no_entry_value -> REMOVED
   * 18 Weak Mutation 632: gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V:286 - ReplaceVariable no_entry_value -> FULL
   * 19 Weak Mutation 638: gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V:287 - InsertUnaryOp IINC -1 index
   * 20 Weak Mutation 637: gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V:287 - InsertUnaryOp IINC 1 index
   * 21 Weak Mutation 636: gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V:287 - InsertUnaryOp Negation of index
   * 22 gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V: root-Branch
   * 23 gnu.trove.map.hash.TCharByteHashMap.remove(C)B: I14 Branch 46 IFLT L276 - false
   * 24 Weak Mutation 622: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:280 - ReplaceVariable prev -> REMOVED
   * 25 Weak Mutation 623: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:280 - InsertUnaryOp Negation of prev
   * 26 Weak Mutation 620: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:280 - ReplaceVariable prev -> FREE
   * 27 Weak Mutation 621: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:280 - ReplaceVariable prev -> FULL
   * 28 Weak Mutation 625: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:280 - InsertUnaryOp IINC -1 prev
   * 29 Weak Mutation 624: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:280 - InsertUnaryOp IINC 1 prev
   * 30 Weak Mutation 597: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:274 - ReplaceVariable no_entry_value -> FULL
   * 31 Weak Mutation 599: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:274 - InsertUnaryOp Negation
   * 32 Weak Mutation 598: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:274 - ReplaceVariable no_entry_value -> REMOVED
   * 33 Weak Mutation 601: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:275 - InsertUnaryOp Negation of key
   * 34 Weak Mutation 603: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:275 - InsertUnaryOp IINC -1 key
   * 35 Weak Mutation 602: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:275 - InsertUnaryOp IINC 1 key
   * 36 Weak Mutation 605: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:276 - InsertUnaryOp Negation of index
   * 37 Weak Mutation 604: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:275 - DeleteStatement: index(C)I
   * 38 Weak Mutation 607: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:276 - InsertUnaryOp IINC -1 index
   * 39 Weak Mutation 606: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:276 - InsertUnaryOp IINC 1 index
   * 40 Weak Mutation 611: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:277 - ReplaceVariable _values -> _states
   * 41 Weak Mutation 608: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:276 - ReplaceComparisonOperator < -> !=
   * 42 Weak Mutation 614: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:277 - InsertUnaryOp IINC 1 index
   * 43 Weak Mutation 615: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:277 - InsertUnaryOp IINC -1 index
   * 44 Weak Mutation 612: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:277 - DeleteField: _values[B
   * 45 Weak Mutation 613: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:277 - InsertUnaryOp Negation of index
   * 46 Weak Mutation 618: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:278 - InsertUnaryOp IINC -1 index
   * 47 Weak Mutation 619: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:278 - DeleteStatement: removeAt(I)V
   * 48 Weak Mutation 616: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:278 - InsertUnaryOp Negation of index
   * 49 Weak Mutation 617: gnu.trove.map.hash.TCharByteHashMap.remove(C)B:278 - InsertUnaryOp IINC 1 index
   * 50 Weak Mutation 627: gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V:286 - DeleteField: _values[B
   * 51 Weak Mutation 626: gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V:286 - ReplaceVariable _values -> _states
   * 52 Weak Mutation 630: gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V:286 - InsertUnaryOp IINC -1 index
   * 53 Weak Mutation 629: gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V:286 - InsertUnaryOp IINC 1 index
   * 54 Weak Mutation 628: gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V:286 - InsertUnaryOp Negation of index
   * 55 Weak Mutation 634: gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V:286 - InsertUnaryOp Negation
   * 56 Weak Mutation 633: gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V:286 - ReplaceVariable no_entry_value -> REMOVED
   * 57 Weak Mutation 632: gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V:286 - ReplaceVariable no_entry_value -> FULL
   * 58 Weak Mutation 638: gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V:287 - InsertUnaryOp IINC -1 index
   * 59 Weak Mutation 637: gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V:287 - InsertUnaryOp IINC 1 index
   * 60 Weak Mutation 636: gnu.trove.map.hash.TCharByteHashMap.removeAt(I)V:287 - InsertUnaryOp Negation of index
   * 61 gnu.trove.map.hash.TCharByteHashMap.<init>()V: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      tCharByteHashMap0.putIfAbsent('F', (byte) (-12));
      assertEquals(1, tCharByteHashMap0.size());
      
      byte byte0 = tCharByteHashMap0.remove('F');
      assertEquals((byte) (-12), byte0);
  }

  //Test case number: 10
  /*
   * 68 covered goals:
   * 1 Weak Mutation 672: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - InsertUnaryOp IINC -1 i
   * 2 Weak Mutation 669: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - ReplaceVariable i -> j
   * 3 Weak Mutation 670: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - InsertUnaryOp Negation of i
   * 4 Weak Mutation 671: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - InsertUnaryOp IINC 1 i
   * 5 Weak Mutation 664: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - InsertUnaryOp IINC 1 j
   * 6 Weak Mutation 665: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - InsertUnaryOp IINC -1 j
   * 7 Weak Mutation 666: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - ReplaceVariable j -> i
   * 8 Weak Mutation 667: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - ReplaceVariable k -> keys
   * 9 Weak Mutation 660: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - ReplaceVariable keys -> _set
   * 10 Weak Mutation 661: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - ReplaceVariable keys -> k
   * 11 Weak Mutation 662: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - ReplaceVariable j -> i
   * 12 Weak Mutation 663: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - InsertUnaryOp Negation of j
   * 13 gnu.trove.map.hash.TCharByteHashMap.keys()[C: I34 Branch 48 IF_ICMPNE L304 - false
   * 14 Weak Mutation 639: gnu.trove.map.hash.TCharByteHashMap.keys()[C:299 - DeleteStatement: size()I
   * 15 Weak Mutation 674: gnu.trove.map.hash.TCharByteHashMap.keys()[C:308 - ReplaceVariable keys -> k
   * 16 Weak Mutation 673: gnu.trove.map.hash.TCharByteHashMap.keys()[C:308 - ReplaceVariable keys -> _set
   * 17 Weak Mutation 652: gnu.trove.map.hash.TCharByteHashMap.keys()[C:303 - ReplaceComparisonOperator <= -> -1
   * 18 Weak Mutation 655: gnu.trove.map.hash.TCharByteHashMap.keys()[C:304 - InsertUnaryOp Negation of i
   * 19 Weak Mutation 654: gnu.trove.map.hash.TCharByteHashMap.keys()[C:304 - ReplaceVariable i -> j
   * 20 Weak Mutation 649: gnu.trove.map.hash.TCharByteHashMap.keys()[C:303 - ReplaceVariable i -> j
   * 21 Weak Mutation 648: gnu.trove.map.hash.TCharByteHashMap.keys()[C:303 - InsertUnaryOp IINC -1 i
   * 22 Weak Mutation 651: gnu.trove.map.hash.TCharByteHashMap.keys()[C:303 - ReplaceComparisonOperator <= -> <
   * 23 Weak Mutation 645: gnu.trove.map.hash.TCharByteHashMap.keys()[C:303 - ReplaceVariable i -> j
   * 24 Weak Mutation 644: gnu.trove.map.hash.TCharByteHashMap.keys()[C:303 - ReplaceConstant - 0 -> 1
   * 25 Weak Mutation 647: gnu.trove.map.hash.TCharByteHashMap.keys()[C:303 - InsertUnaryOp IINC 1 i
   * 26 Weak Mutation 646: gnu.trove.map.hash.TCharByteHashMap.keys()[C:303 - InsertUnaryOp Negation of i
   * 27 Weak Mutation 641: gnu.trove.map.hash.TCharByteHashMap.keys()[C:301 - DeleteField: _states[B
   * 28 Weak Mutation 640: gnu.trove.map.hash.TCharByteHashMap.keys()[C:300 - DeleteField: _set[C
   * 29 Weak Mutation 642: gnu.trove.map.hash.TCharByteHashMap.keys()[C:303 - ReplaceVariable k -> keys
   * 30 Weak Mutation 656: gnu.trove.map.hash.TCharByteHashMap.keys()[C:304 - InsertUnaryOp IINC 1 i
   * 31 Weak Mutation 657: gnu.trove.map.hash.TCharByteHashMap.keys()[C:304 - InsertUnaryOp IINC -1 i
   * 32 Weak Mutation 658: gnu.trove.map.hash.TCharByteHashMap.keys()[C:304 - ReplaceConstant - 1 -> 0
   * 33 Weak Mutation 659: gnu.trove.map.hash.TCharByteHashMap.keys()[C:304 - ReplaceComparisonOperator != -> ==
   * 34 Weak Mutation 639: gnu.trove.map.hash.TCharByteHashMap.keys()[C:299 - DeleteStatement: size()I
   * 35 Weak Mutation 674: gnu.trove.map.hash.TCharByteHashMap.keys()[C:308 - ReplaceVariable keys -> k
   * 36 Weak Mutation 673: gnu.trove.map.hash.TCharByteHashMap.keys()[C:308 - ReplaceVariable keys -> _set
   * 37 Weak Mutation 672: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - InsertUnaryOp IINC -1 i
   * 38 Weak Mutation 652: gnu.trove.map.hash.TCharByteHashMap.keys()[C:303 - ReplaceComparisonOperator <= -> -1
   * 39 Weak Mutation 655: gnu.trove.map.hash.TCharByteHashMap.keys()[C:304 - InsertUnaryOp Negation of i
   * 40 Weak Mutation 654: gnu.trove.map.hash.TCharByteHashMap.keys()[C:304 - ReplaceVariable i -> j
   * 41 Weak Mutation 649: gnu.trove.map.hash.TCharByteHashMap.keys()[C:303 - ReplaceVariable i -> j
   * 42 Weak Mutation 648: gnu.trove.map.hash.TCharByteHashMap.keys()[C:303 - InsertUnaryOp IINC -1 i
   * 43 Weak Mutation 651: gnu.trove.map.hash.TCharByteHashMap.keys()[C:303 - ReplaceComparisonOperator <= -> <
   * 44 Weak Mutation 645: gnu.trove.map.hash.TCharByteHashMap.keys()[C:303 - ReplaceVariable i -> j
   * 45 Weak Mutation 644: gnu.trove.map.hash.TCharByteHashMap.keys()[C:303 - ReplaceConstant - 0 -> 1
   * 46 Weak Mutation 647: gnu.trove.map.hash.TCharByteHashMap.keys()[C:303 - InsertUnaryOp IINC 1 i
   * 47 Weak Mutation 646: gnu.trove.map.hash.TCharByteHashMap.keys()[C:303 - InsertUnaryOp Negation of i
   * 48 Weak Mutation 641: gnu.trove.map.hash.TCharByteHashMap.keys()[C:301 - DeleteField: _states[B
   * 49 Weak Mutation 640: gnu.trove.map.hash.TCharByteHashMap.keys()[C:300 - DeleteField: _set[C
   * 50 Weak Mutation 642: gnu.trove.map.hash.TCharByteHashMap.keys()[C:303 - ReplaceVariable k -> keys
   * 51 Weak Mutation 669: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - ReplaceVariable i -> j
   * 52 Weak Mutation 670: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - InsertUnaryOp Negation of i
   * 53 Weak Mutation 671: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - InsertUnaryOp IINC 1 i
   * 54 Weak Mutation 664: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - InsertUnaryOp IINC 1 j
   * 55 Weak Mutation 665: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - InsertUnaryOp IINC -1 j
   * 56 Weak Mutation 666: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - ReplaceVariable j -> i
   * 57 Weak Mutation 667: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - ReplaceVariable k -> keys
   * 58 Weak Mutation 660: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - ReplaceVariable keys -> _set
   * 59 Weak Mutation 661: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - ReplaceVariable keys -> k
   * 60 Weak Mutation 662: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - ReplaceVariable j -> i
   * 61 Weak Mutation 663: gnu.trove.map.hash.TCharByteHashMap.keys()[C:305 - InsertUnaryOp Negation of j
   * 62 Weak Mutation 656: gnu.trove.map.hash.TCharByteHashMap.keys()[C:304 - InsertUnaryOp IINC 1 i
   * 63 Weak Mutation 657: gnu.trove.map.hash.TCharByteHashMap.keys()[C:304 - InsertUnaryOp IINC -1 i
   * 64 Weak Mutation 658: gnu.trove.map.hash.TCharByteHashMap.keys()[C:304 - ReplaceConstant - 1 -> 0
   * 65 Weak Mutation 659: gnu.trove.map.hash.TCharByteHashMap.keys()[C:304 - ReplaceComparisonOperator != -> ==
   * 66 gnu.trove.map.hash.TCharByteHashMap.keys()[C: I27 Branch 47 IFLE L303 - true
   * 67 gnu.trove.map.hash.TCharByteHashMap.keys()[C: I27 Branch 47 IFLE L303 - false
   * 68 gnu.trove.map.hash.TCharByteHashMap.keys()[C: I34 Branch 48 IF_ICMPNE L304 - true
   */

  @Test
  public void test10()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      tCharByteHashMap0.putIfAbsent('Y', (byte)0);
      tCharByteHashMap0.keys();
      assertEquals("{Y=0}", tCharByteHashMap0.toString());
      assertEquals(1, tCharByteHashMap0.size());
  }

  //Test case number: 11
  /*
   * 52 covered goals:
   * 1 Weak Mutation 675: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:314 - DeleteStatement: size()I
   * 2 Weak Mutation 680: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:315 - ReplaceComparisonOperator >= -> ==
   * 3 Weak Mutation 679: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:315 - InsertUnaryOp IINC -1 size
   * 4 Weak Mutation 678: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:315 - InsertUnaryOp IINC 1 size
   * 5 Weak Mutation 677: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:315 - InsertUnaryOp Negation of size
   * 6 Weak Mutation 686: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:319 - DeleteField: _set[C
   * 7 Weak Mutation 687: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:320 - DeleteField: _states[B
   * 8 Weak Mutation 700: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceComparisonOperator <= -> -1
   * 9 Weak Mutation 699: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceComparisonOperator <= -> <
   * 10 Weak Mutation 696: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceVariable i -> j
   * 11 Weak Mutation 697: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceVariable i -> size
   * 12 Weak Mutation 694: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - InsertUnaryOp IINC 1 i
   * 13 Weak Mutation 695: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - InsertUnaryOp IINC -1 i
   * 14 Weak Mutation 692: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceVariable i -> size
   * 15 Weak Mutation 693: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - InsertUnaryOp Negation of i
   * 16 Weak Mutation 690: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceConstant - 0 -> 1
   * 17 Weak Mutation 691: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceVariable i -> j
   * 18 Weak Mutation 702: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:323 - ReplaceVariable i -> j
   * 19 Weak Mutation 703: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:323 - ReplaceVariable i -> size
   * 20 Weak Mutation 705: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:323 - InsertUnaryOp IINC 1 i
   * 21 Weak Mutation 704: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:323 - InsertUnaryOp Negation of i
   * 22 Weak Mutation 707: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:323 - ReplaceConstant - 1 -> 0
   * 23 Weak Mutation 706: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:323 - InsertUnaryOp IINC -1 i
   * 24 Weak Mutation 708: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:323 - ReplaceComparisonOperator != -> ==
   * 25 gnu.trove.map.hash.TCharByteHashMap.keys([C)[C: I10 Branch 49 IF_ICMPGE L315 - true
   * 26 gnu.trove.map.hash.TCharByteHashMap.keys([C)[C: I37 Branch 50 IFLE L322 - true
   * 27 gnu.trove.map.hash.TCharByteHashMap.keys([C)[C: I37 Branch 50 IFLE L322 - false
   * 28 gnu.trove.map.hash.TCharByteHashMap.keys([C)[C: I44 Branch 51 IF_ICMPNE L323 - true
   * 29 Weak Mutation 687: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:320 - DeleteField: _states[B
   * 30 Weak Mutation 686: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:319 - DeleteField: _set[C
   * 31 Weak Mutation 680: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:315 - ReplaceComparisonOperator >= -> ==
   * 32 Weak Mutation 679: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:315 - InsertUnaryOp IINC -1 size
   * 33 Weak Mutation 678: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:315 - InsertUnaryOp IINC 1 size
   * 34 Weak Mutation 677: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:315 - InsertUnaryOp Negation of size
   * 35 Weak Mutation 675: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:314 - DeleteStatement: size()I
   * 36 Weak Mutation 702: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:323 - ReplaceVariable i -> j
   * 37 Weak Mutation 703: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:323 - ReplaceVariable i -> size
   * 38 Weak Mutation 700: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceComparisonOperator <= -> -1
   * 39 Weak Mutation 699: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceComparisonOperator <= -> <
   * 40 Weak Mutation 696: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceVariable i -> j
   * 41 Weak Mutation 697: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceVariable i -> size
   * 42 Weak Mutation 694: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - InsertUnaryOp IINC 1 i
   * 43 Weak Mutation 695: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - InsertUnaryOp IINC -1 i
   * 44 Weak Mutation 692: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceVariable i -> size
   * 45 Weak Mutation 693: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - InsertUnaryOp Negation of i
   * 46 Weak Mutation 690: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceConstant - 0 -> 1
   * 47 Weak Mutation 691: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceVariable i -> j
   * 48 Weak Mutation 705: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:323 - InsertUnaryOp IINC 1 i
   * 49 Weak Mutation 704: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:323 - InsertUnaryOp Negation of i
   * 50 Weak Mutation 707: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:323 - ReplaceConstant - 1 -> 0
   * 51 Weak Mutation 706: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:323 - InsertUnaryOp IINC -1 i
   * 52 Weak Mutation 708: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:323 - ReplaceComparisonOperator != -> ==
   */

  @Test
  public void test11()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((int) '1', (-1.0F), 'l', (byte) (-71));
      char[] charArray0 = tCharByteHashMap0.keys(tCharByteHashMap0._set);
      assertEquals(3, tCharByteHashMap0.capacity());
      assertNotNull(charArray0);
  }

  //Test case number: 12
  /*
   * 48 covered goals:
   * 1 Weak Mutation 682: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:315 - ReplaceComparisonOperator >= -> -1
   * 2 Weak Mutation 676: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:315 - ReplaceVariable array -> _set
   * 3 Weak Mutation 685: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:316 - InsertUnaryOp IINC -1 size
   * 4 Weak Mutation 684: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:316 - InsertUnaryOp IINC 1 size
   * 5 Weak Mutation 683: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:316 - InsertUnaryOp Negation of size
   * 6 Weak Mutation 689: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceVariable keys -> array
   * 7 Weak Mutation 713: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - InsertUnaryOp Negation of j
   * 8 Weak Mutation 712: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable j -> size
   * 9 Weak Mutation 715: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - InsertUnaryOp IINC -1 j
   * 10 Weak Mutation 714: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - InsertUnaryOp IINC 1 j
   * 11 Weak Mutation 717: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable j -> size
   * 12 Weak Mutation 716: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable j -> i
   * 13 Weak Mutation 719: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable keys -> array
   * 14 Weak Mutation 709: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable array -> keys
   * 15 Weak Mutation 711: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable j -> i
   * 16 Weak Mutation 710: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable array -> _set
   * 17 Weak Mutation 720: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable i -> j
   * 18 Weak Mutation 721: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable i -> size
   * 19 Weak Mutation 722: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - InsertUnaryOp Negation of i
   * 20 Weak Mutation 723: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - InsertUnaryOp IINC 1 i
   * 21 Weak Mutation 724: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - InsertUnaryOp IINC -1 i
   * 22 Weak Mutation 725: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:327 - ReplaceVariable array -> keys
   * 23 Weak Mutation 726: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:327 - ReplaceVariable array -> _set
   * 24 gnu.trove.map.hash.TCharByteHashMap.keys([C)[C: I10 Branch 49 IF_ICMPGE L315 - false
   * 25 gnu.trove.map.hash.TCharByteHashMap.keys([C)[C: I44 Branch 51 IF_ICMPNE L323 - false
   * 26 Weak Mutation 685: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:316 - InsertUnaryOp IINC -1 size
   * 27 Weak Mutation 684: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:316 - InsertUnaryOp IINC 1 size
   * 28 Weak Mutation 683: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:316 - InsertUnaryOp Negation of size
   * 29 Weak Mutation 682: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:315 - ReplaceComparisonOperator >= -> -1
   * 30 Weak Mutation 676: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:315 - ReplaceVariable array -> _set
   * 31 Weak Mutation 689: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceVariable keys -> array
   * 32 Weak Mutation 713: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - InsertUnaryOp Negation of j
   * 33 Weak Mutation 712: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable j -> size
   * 34 Weak Mutation 715: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - InsertUnaryOp IINC -1 j
   * 35 Weak Mutation 714: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - InsertUnaryOp IINC 1 j
   * 36 Weak Mutation 717: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable j -> size
   * 37 Weak Mutation 716: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable j -> i
   * 38 Weak Mutation 719: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable keys -> array
   * 39 Weak Mutation 709: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable array -> keys
   * 40 Weak Mutation 711: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable j -> i
   * 41 Weak Mutation 710: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable array -> _set
   * 42 Weak Mutation 720: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable i -> j
   * 43 Weak Mutation 721: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable i -> size
   * 44 Weak Mutation 722: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - InsertUnaryOp Negation of i
   * 45 Weak Mutation 723: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - InsertUnaryOp IINC 1 i
   * 46 Weak Mutation 724: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - InsertUnaryOp IINC -1 i
   * 47 Weak Mutation 725: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:327 - ReplaceVariable array -> keys
   * 48 Weak Mutation 726: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:327 - ReplaceVariable array -> _set
   */

  @Test
  public void test12()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '$';
      charArray0[1] = '#';
      charArray0[3] = '/';
      byte[] byteArray0 = new byte[6];
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      TCharByteHashMap tCharByteHashMap1 = new TCharByteHashMap();
      assertEquals(23, tCharByteHashMap1.capacity());
      
      tCharByteHashMap1.trimToSize();
      tCharByteHashMap0.keys(tCharByteHashMap1._set);
      assertEquals(3, tCharByteHashMap1.capacity());
  }

  //Test case number: 13
  /*
   * 43 covered goals:
   * 1 Weak Mutation 681: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:315 - ReplaceComparisonOperator >= -> >
   * 2 Weak Mutation 687: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:320 - DeleteField: _states[B
   * 3 Weak Mutation 686: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:319 - DeleteField: _set[C
   * 4 Weak Mutation 679: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:315 - InsertUnaryOp IINC -1 size
   * 5 Weak Mutation 678: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:315 - InsertUnaryOp IINC 1 size
   * 6 Weak Mutation 677: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:315 - InsertUnaryOp Negation of size
   * 7 Weak Mutation 676: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:315 - ReplaceVariable array -> _set
   * 8 Weak Mutation 675: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:314 - DeleteStatement: size()I
   * 9 Weak Mutation 702: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:323 - ReplaceVariable i -> j
   * 10 Weak Mutation 703: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:323 - ReplaceVariable i -> size
   * 11 Weak Mutation 700: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceComparisonOperator <= -> -1
   * 12 Weak Mutation 699: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceComparisonOperator <= -> <
   * 13 Weak Mutation 696: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceVariable i -> j
   * 14 Weak Mutation 697: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceVariable i -> size
   * 15 Weak Mutation 694: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - InsertUnaryOp IINC 1 i
   * 16 Weak Mutation 695: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - InsertUnaryOp IINC -1 i
   * 17 Weak Mutation 692: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceVariable i -> size
   * 18 Weak Mutation 693: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - InsertUnaryOp Negation of i
   * 19 Weak Mutation 690: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceConstant - 0 -> 1
   * 20 Weak Mutation 691: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceVariable i -> j
   * 21 Weak Mutation 689: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:322 - ReplaceVariable keys -> array
   * 22 Weak Mutation 713: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - InsertUnaryOp Negation of j
   * 23 Weak Mutation 712: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable j -> size
   * 24 Weak Mutation 715: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - InsertUnaryOp IINC -1 j
   * 25 Weak Mutation 714: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - InsertUnaryOp IINC 1 j
   * 26 Weak Mutation 717: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable j -> size
   * 27 Weak Mutation 716: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable j -> i
   * 28 Weak Mutation 719: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable keys -> array
   * 29 Weak Mutation 705: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:323 - InsertUnaryOp IINC 1 i
   * 30 Weak Mutation 704: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:323 - InsertUnaryOp Negation of i
   * 31 Weak Mutation 707: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:323 - ReplaceConstant - 1 -> 0
   * 32 Weak Mutation 706: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:323 - InsertUnaryOp IINC -1 i
   * 33 Weak Mutation 709: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable array -> keys
   * 34 Weak Mutation 708: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:323 - ReplaceComparisonOperator != -> ==
   * 35 Weak Mutation 710: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable array -> _set
   * 36 Weak Mutation 720: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable i -> j
   * 37 Weak Mutation 721: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - ReplaceVariable i -> size
   * 38 Weak Mutation 722: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - InsertUnaryOp Negation of i
   * 39 Weak Mutation 723: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - InsertUnaryOp IINC 1 i
   * 40 Weak Mutation 724: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:324 - InsertUnaryOp IINC -1 i
   * 41 Weak Mutation 725: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:327 - ReplaceVariable array -> keys
   * 42 Weak Mutation 726: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:327 - ReplaceVariable array -> _set
   * 43 Weak Mutation 681: gnu.trove.map.hash.TCharByteHashMap.keys([C)[C:315 - ReplaceComparisonOperator >= -> >
   */

  @Test
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[1];
      byte[] byteArray0 = new byte[4];
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      char[] charArray1 = tCharByteHashMap0.keys(charArray0);
      assertEquals(11, tCharByteHashMap0.capacity());
      assertSame(charArray0, charArray1);
      assertEquals("{\u0000=0}", tCharByteHashMap0.toString());
      assertNotNull(charArray1);
      assertEquals(1, tCharByteHashMap0.size());
  }

  //Test case number: 14
  /*
   * 132 covered goals:
   * 1 Weak Mutation 755: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - ReplaceVariable j -> i
   * 2 Weak Mutation 1072: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - ReplaceVariable put_amount -> adjust_amount
   * 3 Weak Mutation 1091: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:506 - ReplaceVariable newValue -> adjust_amount
   * 4 gnu.trove.map.hash.TCharByteHashMap.<init>(I)V: root-Branch
   * 5 Weak Mutation 747: gnu.trove.map.hash.TCharByteHashMap.values()[B:344 - InsertUnaryOp Negation of i
   * 6 Weak Mutation 746: gnu.trove.map.hash.TCharByteHashMap.values()[B:344 - ReplaceVariable i -> j
   * 7 Weak Mutation 745: gnu.trove.map.hash.TCharByteHashMap.values()[B:344 - ReplaceVariable states -> vals
   * 8 Weak Mutation 744: gnu.trove.map.hash.TCharByteHashMap.values()[B:344 - ReplaceVariable states -> v
   * 9 Weak Mutation 751: gnu.trove.map.hash.TCharByteHashMap.values()[B:344 - ReplaceComparisonOperator != -> ==
   * 10 Weak Mutation 750: gnu.trove.map.hash.TCharByteHashMap.values()[B:344 - ReplaceConstant - 1 -> 0
   * 11 Weak Mutation 749: gnu.trove.map.hash.TCharByteHashMap.values()[B:344 - InsertUnaryOp IINC -1 i
   * 12 Weak Mutation 748: gnu.trove.map.hash.TCharByteHashMap.values()[B:344 - InsertUnaryOp IINC 1 i
   * 13 Weak Mutation 739: gnu.trove.map.hash.TCharByteHashMap.values()[B:343 - ReplaceVariable i -> j
   * 14 Weak Mutation 738: gnu.trove.map.hash.TCharByteHashMap.values()[B:343 - InsertUnaryOp IINC -1 i
   * 15 Weak Mutation 737: gnu.trove.map.hash.TCharByteHashMap.values()[B:343 - InsertUnaryOp IINC 1 i
   * 16 Weak Mutation 736: gnu.trove.map.hash.TCharByteHashMap.values()[B:343 - InsertUnaryOp Negation of i
   * 17 Weak Mutation 742: gnu.trove.map.hash.TCharByteHashMap.values()[B:343 - ReplaceComparisonOperator <= -> -1
   * 18 Weak Mutation 741: gnu.trove.map.hash.TCharByteHashMap.values()[B:343 - ReplaceComparisonOperator <= -> <
   * 19 Weak Mutation 762: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - ReplaceVariable v -> vals
   * 20 Weak Mutation 763: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - ReplaceVariable i -> j
   * 21 Weak Mutation 760: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - ReplaceVariable v -> _states
   * 22 Weak Mutation 761: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - ReplaceVariable v -> states
   * 23 Weak Mutation 766: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - InsertUnaryOp IINC -1 i
   * 24 Weak Mutation 767: gnu.trove.map.hash.TCharByteHashMap.values()[B:348 - ReplaceVariable vals -> _states
   * 25 Weak Mutation 764: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - InsertUnaryOp Negation of i
   * 26 Weak Mutation 765: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - InsertUnaryOp IINC 1 i
   * 27 Weak Mutation 754: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - ReplaceVariable vals -> states
   * 28 Weak Mutation 752: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - ReplaceVariable vals -> _states
   * 29 Weak Mutation 753: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - ReplaceVariable vals -> v
   * 30 Weak Mutation 758: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - InsertUnaryOp IINC -1 j
   * 31 Weak Mutation 759: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - ReplaceVariable j -> i
   * 32 Weak Mutation 756: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - InsertUnaryOp Negation of j
   * 33 Weak Mutation 757: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - InsertUnaryOp IINC 1 j
   * 34 Weak Mutation 728: gnu.trove.map.hash.TCharByteHashMap.values()[B:340 - ReplaceVariable _values -> _states
   * 35 Weak Mutation 729: gnu.trove.map.hash.TCharByteHashMap.values()[B:340 - DeleteField: _values[B
   * 36 Weak Mutation 730: gnu.trove.map.hash.TCharByteHashMap.values()[B:341 - DeleteField: _states[B
   * 37 Weak Mutation 731: gnu.trove.map.hash.TCharByteHashMap.values()[B:343 - ReplaceVariable v -> _states
   * 38 Weak Mutation 732: gnu.trove.map.hash.TCharByteHashMap.values()[B:343 - ReplaceVariable v -> states
   * 39 Weak Mutation 733: gnu.trove.map.hash.TCharByteHashMap.values()[B:343 - ReplaceVariable v -> vals
   * 40 Weak Mutation 734: gnu.trove.map.hash.TCharByteHashMap.values()[B:343 - ReplaceConstant - 0 -> 1
   * 41 Weak Mutation 735: gnu.trove.map.hash.TCharByteHashMap.values()[B:343 - ReplaceVariable i -> j
   * 42 Weak Mutation 727: gnu.trove.map.hash.TCharByteHashMap.values()[B:339 - DeleteStatement: size()I
   * 43 Weak Mutation 768: gnu.trove.map.hash.TCharByteHashMap.values()[B:348 - ReplaceVariable vals -> v
   * 44 Weak Mutation 769: gnu.trove.map.hash.TCharByteHashMap.values()[B:348 - ReplaceVariable vals -> states
   * 45 Weak Mutation 1037: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:491 - ReplaceComparisonOperator >= -> ==
   * 46 Weak Mutation 747: gnu.trove.map.hash.TCharByteHashMap.values()[B:344 - InsertUnaryOp Negation of i
   * 47 Weak Mutation 746: gnu.trove.map.hash.TCharByteHashMap.values()[B:344 - ReplaceVariable i -> j
   * 48 Weak Mutation 745: gnu.trove.map.hash.TCharByteHashMap.values()[B:344 - ReplaceVariable states -> vals
   * 49 Weak Mutation 744: gnu.trove.map.hash.TCharByteHashMap.values()[B:344 - ReplaceVariable states -> v
   * 50 Weak Mutation 751: gnu.trove.map.hash.TCharByteHashMap.values()[B:344 - ReplaceComparisonOperator != -> ==
   * 51 Weak Mutation 750: gnu.trove.map.hash.TCharByteHashMap.values()[B:344 - ReplaceConstant - 1 -> 0
   * 52 Weak Mutation 749: gnu.trove.map.hash.TCharByteHashMap.values()[B:344 - InsertUnaryOp IINC -1 i
   * 53 Weak Mutation 748: gnu.trove.map.hash.TCharByteHashMap.values()[B:344 - InsertUnaryOp IINC 1 i
   * 54 Weak Mutation 739: gnu.trove.map.hash.TCharByteHashMap.values()[B:343 - ReplaceVariable i -> j
   * 55 Weak Mutation 738: gnu.trove.map.hash.TCharByteHashMap.values()[B:343 - InsertUnaryOp IINC -1 i
   * 56 Weak Mutation 737: gnu.trove.map.hash.TCharByteHashMap.values()[B:343 - InsertUnaryOp IINC 1 i
   * 57 Weak Mutation 736: gnu.trove.map.hash.TCharByteHashMap.values()[B:343 - InsertUnaryOp Negation of i
   * 58 Weak Mutation 742: gnu.trove.map.hash.TCharByteHashMap.values()[B:343 - ReplaceComparisonOperator <= -> -1
   * 59 Weak Mutation 741: gnu.trove.map.hash.TCharByteHashMap.values()[B:343 - ReplaceComparisonOperator <= -> <
   * 60 Weak Mutation 762: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - ReplaceVariable v -> vals
   * 61 Weak Mutation 763: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - ReplaceVariable i -> j
   * 62 Weak Mutation 760: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - ReplaceVariable v -> _states
   * 63 Weak Mutation 761: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - ReplaceVariable v -> states
   * 64 Weak Mutation 766: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - InsertUnaryOp IINC -1 i
   * 65 Weak Mutation 767: gnu.trove.map.hash.TCharByteHashMap.values()[B:348 - ReplaceVariable vals -> _states
   * 66 Weak Mutation 764: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - InsertUnaryOp Negation of i
   * 67 Weak Mutation 765: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - InsertUnaryOp IINC 1 i
   * 68 Weak Mutation 754: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - ReplaceVariable vals -> states
   * 69 Weak Mutation 755: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - ReplaceVariable j -> i
   * 70 Weak Mutation 752: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - ReplaceVariable vals -> _states
   * 71 Weak Mutation 753: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - ReplaceVariable vals -> v
   * 72 Weak Mutation 758: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - InsertUnaryOp IINC -1 j
   * 73 Weak Mutation 759: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - ReplaceVariable j -> i
   * 74 Weak Mutation 756: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - InsertUnaryOp Negation of j
   * 75 Weak Mutation 757: gnu.trove.map.hash.TCharByteHashMap.values()[B:345 - InsertUnaryOp IINC 1 j
   * 76 Weak Mutation 728: gnu.trove.map.hash.TCharByteHashMap.values()[B:340 - ReplaceVariable _values -> _states
   * 77 Weak Mutation 729: gnu.trove.map.hash.TCharByteHashMap.values()[B:340 - DeleteField: _values[B
   * 78 Weak Mutation 730: gnu.trove.map.hash.TCharByteHashMap.values()[B:341 - DeleteField: _states[B
   * 79 Weak Mutation 731: gnu.trove.map.hash.TCharByteHashMap.values()[B:343 - ReplaceVariable v -> _states
   * 80 Weak Mutation 732: gnu.trove.map.hash.TCharByteHashMap.values()[B:343 - ReplaceVariable v -> states
   * 81 Weak Mutation 733: gnu.trove.map.hash.TCharByteHashMap.values()[B:343 - ReplaceVariable v -> vals
   * 82 Weak Mutation 734: gnu.trove.map.hash.TCharByteHashMap.values()[B:343 - ReplaceConstant - 0 -> 1
   * 83 Weak Mutation 735: gnu.trove.map.hash.TCharByteHashMap.values()[B:343 - ReplaceVariable i -> j
   * 84 Weak Mutation 727: gnu.trove.map.hash.TCharByteHashMap.values()[B:339 - DeleteStatement: size()I
   * 85 Weak Mutation 768: gnu.trove.map.hash.TCharByteHashMap.values()[B:348 - ReplaceVariable vals -> v
   * 86 Weak Mutation 769: gnu.trove.map.hash.TCharByteHashMap.values()[B:348 - ReplaceVariable vals -> states
   * 87 Weak Mutation 1096: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:506 - InsertUnaryOp IINC 1 newValue
   * 88 Weak Mutation 1097: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:506 - InsertUnaryOp IINC -1 newValue
   * 89 Weak Mutation 1093: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:506 - ReplaceVariable newValue -> REMOVED
   * 90 Weak Mutation 1094: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:506 - ReplaceVariable newValue -> previousState
   * 91 Weak Mutation 1095: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:506 - InsertUnaryOp Negation of newValue
   * 92 Weak Mutation 1088: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:503 - DeleteStatement: postInsertHook(Z)V
   * 93 Weak Mutation 1089: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:506 - ReplaceVariable newValue -> FREE
   * 94 Weak Mutation 1090: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:506 - ReplaceVariable newValue -> FULL
   * 95 Weak Mutation 1091: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:506 - ReplaceVariable newValue -> adjust_amount
   * 96 Weak Mutation 1032: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:488 - InsertUnaryOp IINC -1 key
   * 97 Weak Mutation 1033: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:488 - DeleteStatement: insertKey(C)I
   * 98 Weak Mutation 1034: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:491 - InsertUnaryOp Negation of index
   * 99 Weak Mutation 1035: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:491 - InsertUnaryOp IINC 1 index
   * 100 Weak Mutation 1036: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:491 - InsertUnaryOp IINC -1 index
   * 101 Weak Mutation 1037: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:491 - ReplaceComparisonOperator >= -> ==
   * 102 Weak Mutation 1030: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:488 - InsertUnaryOp Negation of key
   * 103 Weak Mutation 1031: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:488 - InsertUnaryOp IINC 1 key
   * 104 Weak Mutation 1066: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - DeleteField: _values[B
   * 105 Weak Mutation 1067: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - InsertUnaryOp Negation of index
   * 106 Weak Mutation 1065: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - ReplaceVariable _values -> _states
   * 107 Weak Mutation 1070: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - ReplaceVariable put_amount -> FREE
   * 108 Weak Mutation 1071: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - ReplaceVariable put_amount -> FULL
   * 109 Weak Mutation 1068: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - InsertUnaryOp IINC 1 index
   * 110 Weak Mutation 1069: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - InsertUnaryOp IINC -1 index
   * 111 Weak Mutation 1083: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:502 - InsertUnaryOp IINC 1 isNewMapping
   * 112 Weak Mutation 1082: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:502 - InsertUnaryOp Negation of isNewMapping
   * 113 Weak Mutation 1081: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:500 - InsertUnaryOp IINC -1 index
   * 114 Weak Mutation 1080: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:500 - InsertUnaryOp IINC 1 index
   * 115 Weak Mutation 1087: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:503 - DeleteField: consumeFreeSlotZ
   * 116 Weak Mutation 1086: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:503 - InsertUnaryOp Negation
   * 117 Weak Mutation 1085: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:502 - ReplaceComparisonOperator == -> !=
   * 118 Weak Mutation 1084: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:502 - InsertUnaryOp IINC -1 isNewMapping
   * 119 Weak Mutation 1075: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - InsertUnaryOp IINC 1 put_amount
   * 120 Weak Mutation 1074: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - InsertUnaryOp Negation of put_amount
   * 121 Weak Mutation 1073: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - ReplaceVariable put_amount -> REMOVED
   * 122 Weak Mutation 1072: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - ReplaceVariable put_amount -> adjust_amount
   * 123 Weak Mutation 1079: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:500 - InsertUnaryOp Negation of index
   * 124 Weak Mutation 1078: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:500 - DeleteField: _states[B
   * 125 Weak Mutation 1077: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:497 - ReplaceConstant - 1 -> 0
   * 126 Weak Mutation 1076: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - InsertUnaryOp IINC -1 put_amount
   * 127 gnu.trove.map.hash.TCharByteHashMap.values()[B: I27 Branch 52 IFLE L343 - true
   * 128 gnu.trove.map.hash.TCharByteHashMap.values()[B: I27 Branch 52 IFLE L343 - false
   * 129 gnu.trove.map.hash.TCharByteHashMap.values()[B: I34 Branch 53 IF_ICMPNE L344 - true
   * 130 gnu.trove.map.hash.TCharByteHashMap.values()[B: I34 Branch 53 IF_ICMPNE L344 - false
   * 131 gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B: I9 Branch 72 IFGE L491 - true
   * 132 gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B: I59 Branch 73 IFEQ L502 - false
   */

  @Test
  public void test14()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((int) 'R');
      tCharByteHashMap0.adjustOrPutValue('R', (byte)51, (byte)40);
      tCharByteHashMap0.values();
      assertEquals(1, tCharByteHashMap0.size());
      assertEquals("{R=40}", tCharByteHashMap0.toString());
  }

  //Test case number: 15
  /*
   * 44 covered goals:
   * 1 Weak Mutation 771: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:355 - ReplaceVariable array -> _states
   * 2 Weak Mutation 800: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:363 - ReplaceVariable states -> array
   * 3 Weak Mutation 828: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:367 - ReplaceVariable array -> states
   * 4 Weak Mutation 826: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:367 - ReplaceVariable array -> _states
   * 5 Weak Mutation 775: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:355 - ReplaceComparisonOperator >= -> ==
   * 6 Weak Mutation 828: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:367 - ReplaceVariable array -> states
   * 7 Weak Mutation 827: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:367 - ReplaceVariable array -> v
   * 8 Weak Mutation 826: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:367 - ReplaceVariable array -> _states
   * 9 Weak Mutation 804: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:363 - InsertUnaryOp IINC 1 i
   * 10 Weak Mutation 805: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:363 - InsertUnaryOp IINC -1 i
   * 11 Weak Mutation 806: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:363 - ReplaceConstant - 1 -> 0
   * 12 Weak Mutation 807: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:363 - ReplaceComparisonOperator != -> ==
   * 13 Weak Mutation 800: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:363 - ReplaceVariable states -> array
   * 14 Weak Mutation 801: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:363 - ReplaceVariable i -> j
   * 15 Weak Mutation 802: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:363 - ReplaceVariable i -> size
   * 16 Weak Mutation 803: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:363 - InsertUnaryOp Negation of i
   * 17 Weak Mutation 791: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - InsertUnaryOp IINC 1 i
   * 18 Weak Mutation 790: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - InsertUnaryOp Negation of i
   * 19 Weak Mutation 789: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - ReplaceVariable i -> size
   * 20 Weak Mutation 788: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - ReplaceVariable i -> j
   * 21 Weak Mutation 787: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - ReplaceConstant - 0 -> 1
   * 22 Weak Mutation 786: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - ReplaceVariable v -> array
   * 23 Weak Mutation 785: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - ReplaceVariable v -> states
   * 24 Weak Mutation 784: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - ReplaceVariable v -> _states
   * 25 Weak Mutation 799: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:363 - ReplaceVariable states -> v
   * 26 Weak Mutation 797: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - ReplaceComparisonOperator <= -> -1
   * 27 Weak Mutation 796: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - ReplaceComparisonOperator <= -> <
   * 28 Weak Mutation 794: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - ReplaceVariable i -> size
   * 29 Weak Mutation 793: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - ReplaceVariable i -> j
   * 30 Weak Mutation 792: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - InsertUnaryOp IINC -1 i
   * 31 Weak Mutation 774: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:355 - InsertUnaryOp IINC -1 size
   * 32 Weak Mutation 775: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:355 - ReplaceComparisonOperator >= -> ==
   * 33 Weak Mutation 772: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:355 - InsertUnaryOp Negation of size
   * 34 Weak Mutation 773: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:355 - InsertUnaryOp IINC 1 size
   * 35 Weak Mutation 770: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:354 - DeleteStatement: size()I
   * 36 Weak Mutation 771: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:355 - ReplaceVariable array -> _states
   * 37 Weak Mutation 782: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:359 - DeleteField: _values[B
   * 38 Weak Mutation 783: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:360 - DeleteField: _states[B
   * 39 Weak Mutation 781: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:359 - ReplaceVariable _values -> _states
   * 40 gnu.trove.map.hash.TCharByteHashMap.<init>(IF)V: root-Branch
   * 41 gnu.trove.map.hash.TCharByteHashMap.values([B)[B: I10 Branch 54 IF_ICMPGE L355 - true
   * 42 gnu.trove.map.hash.TCharByteHashMap.values([B)[B: I37 Branch 55 IFLE L362 - true
   * 43 gnu.trove.map.hash.TCharByteHashMap.values([B)[B: I37 Branch 55 IFLE L362 - false
   * 44 gnu.trove.map.hash.TCharByteHashMap.values([B)[B: I44 Branch 56 IF_ICMPNE L363 - true
   */

  @Test
  public void test15()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(875, 875);
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = tCharByteHashMap0.values(byteArray0);
      assertNotNull(byteArray1);
      assertSame(byteArray0, byteArray1);
  }

  //Test case number: 16
  /*
   * 38 covered goals:
   * 1 Weak Mutation 776: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:355 - ReplaceComparisonOperator >= -> >
   * 2 Weak Mutation 821: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable i -> j
   * 3 Weak Mutation 820: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable v -> array
   * 4 Weak Mutation 823: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - InsertUnaryOp Negation of i
   * 5 Weak Mutation 822: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable i -> size
   * 6 Weak Mutation 817: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable j -> size
   * 7 Weak Mutation 816: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable j -> i
   * 8 Weak Mutation 819: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable v -> states
   * 9 Weak Mutation 818: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable v -> _states
   * 10 Weak Mutation 825: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - InsertUnaryOp IINC -1 i
   * 11 Weak Mutation 824: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - InsertUnaryOp IINC 1 i
   * 12 Weak Mutation 812: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable j -> size
   * 13 Weak Mutation 813: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - InsertUnaryOp Negation of j
   * 14 Weak Mutation 814: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - InsertUnaryOp IINC 1 j
   * 15 Weak Mutation 815: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - InsertUnaryOp IINC -1 j
   * 16 Weak Mutation 808: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable array -> _states
   * 17 Weak Mutation 809: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable array -> v
   * 18 Weak Mutation 810: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable array -> states
   * 19 gnu.trove.map.hash.TCharByteHashMap.values([B)[B: I44 Branch 56 IF_ICMPNE L363 - false
   * 20 Weak Mutation 456: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:205 - ReplaceComparisonOperator >= -> >
   * 21 Weak Mutation 821: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable i -> j
   * 22 Weak Mutation 820: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable v -> array
   * 23 Weak Mutation 823: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - InsertUnaryOp Negation of i
   * 24 Weak Mutation 822: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable i -> size
   * 25 Weak Mutation 817: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable j -> size
   * 26 Weak Mutation 816: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable j -> i
   * 27 Weak Mutation 819: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable v -> states
   * 28 Weak Mutation 818: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable v -> _states
   * 29 Weak Mutation 825: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - InsertUnaryOp IINC -1 i
   * 30 Weak Mutation 824: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - InsertUnaryOp IINC 1 i
   * 31 Weak Mutation 812: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable j -> size
   * 32 Weak Mutation 813: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - InsertUnaryOp Negation of j
   * 33 Weak Mutation 814: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - InsertUnaryOp IINC 1 j
   * 34 Weak Mutation 815: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - InsertUnaryOp IINC -1 j
   * 35 Weak Mutation 808: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable array -> _states
   * 36 Weak Mutation 809: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable array -> v
   * 37 Weak Mutation 810: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable array -> states
   * 38 Weak Mutation 776: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:355 - ReplaceComparisonOperator >= -> >
   */

  @Test
  public void test16()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(875, 875);
      tCharByteHashMap0.putIfAbsent('B', (byte)68);
      byte[] byteArray0 = new byte[1];
      tCharByteHashMap0.values(byteArray0);
      assertEquals(1, tCharByteHashMap0.size());
      assertEquals("{B=68}", tCharByteHashMap0.toString());
  }

  //Test case number: 17
  /*
   * 61 covered goals:
   * 1 Weak Mutation 777: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:355 - ReplaceComparisonOperator >= -> -1
   * 2 Weak Mutation 780: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:356 - InsertUnaryOp IINC -1 size
   * 3 Weak Mutation 778: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:356 - InsertUnaryOp Negation of size
   * 4 Weak Mutation 779: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:356 - InsertUnaryOp IINC 1 size
   * 5 Weak Mutation 811: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable j -> i
   * 6 gnu.trove.map.hash.TCharByteHashMap.values([B)[B: I10 Branch 54 IF_ICMPGE L355 - false
   * 7 Weak Mutation 821: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable i -> j
   * 8 Weak Mutation 820: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable v -> array
   * 9 Weak Mutation 823: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - InsertUnaryOp Negation of i
   * 10 Weak Mutation 822: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable i -> size
   * 11 Weak Mutation 817: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable j -> size
   * 12 Weak Mutation 816: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable j -> i
   * 13 Weak Mutation 819: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable v -> states
   * 14 Weak Mutation 818: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable v -> _states
   * 15 Weak Mutation 828: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:367 - ReplaceVariable array -> states
   * 16 Weak Mutation 825: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - InsertUnaryOp IINC -1 i
   * 17 Weak Mutation 824: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - InsertUnaryOp IINC 1 i
   * 18 Weak Mutation 827: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:367 - ReplaceVariable array -> v
   * 19 Weak Mutation 826: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:367 - ReplaceVariable array -> _states
   * 20 Weak Mutation 804: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:363 - InsertUnaryOp IINC 1 i
   * 21 Weak Mutation 805: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:363 - InsertUnaryOp IINC -1 i
   * 22 Weak Mutation 806: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:363 - ReplaceConstant - 1 -> 0
   * 23 Weak Mutation 807: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:363 - ReplaceComparisonOperator != -> ==
   * 24 Weak Mutation 800: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:363 - ReplaceVariable states -> array
   * 25 Weak Mutation 801: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:363 - ReplaceVariable i -> j
   * 26 Weak Mutation 802: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:363 - ReplaceVariable i -> size
   * 27 Weak Mutation 803: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:363 - InsertUnaryOp Negation of i
   * 28 Weak Mutation 812: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable j -> size
   * 29 Weak Mutation 813: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - InsertUnaryOp Negation of j
   * 30 Weak Mutation 814: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - InsertUnaryOp IINC 1 j
   * 31 Weak Mutation 815: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - InsertUnaryOp IINC -1 j
   * 32 Weak Mutation 808: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable array -> _states
   * 33 Weak Mutation 809: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable array -> v
   * 34 Weak Mutation 810: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable array -> states
   * 35 Weak Mutation 791: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - InsertUnaryOp IINC 1 i
   * 36 Weak Mutation 790: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - InsertUnaryOp Negation of i
   * 37 Weak Mutation 789: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - ReplaceVariable i -> size
   * 38 Weak Mutation 788: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - ReplaceVariable i -> j
   * 39 Weak Mutation 787: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - ReplaceConstant - 0 -> 1
   * 40 Weak Mutation 786: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - ReplaceVariable v -> array
   * 41 Weak Mutation 785: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - ReplaceVariable v -> states
   * 42 Weak Mutation 784: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - ReplaceVariable v -> _states
   * 43 Weak Mutation 799: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:363 - ReplaceVariable states -> v
   * 44 Weak Mutation 797: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - ReplaceComparisonOperator <= -> -1
   * 45 Weak Mutation 796: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - ReplaceComparisonOperator <= -> <
   * 46 Weak Mutation 794: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - ReplaceVariable i -> size
   * 47 Weak Mutation 793: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - ReplaceVariable i -> j
   * 48 Weak Mutation 792: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:362 - InsertUnaryOp IINC -1 i
   * 49 Weak Mutation 774: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:355 - InsertUnaryOp IINC -1 size
   * 50 Weak Mutation 772: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:355 - InsertUnaryOp Negation of size
   * 51 Weak Mutation 773: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:355 - InsertUnaryOp IINC 1 size
   * 52 Weak Mutation 770: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:354 - DeleteStatement: size()I
   * 53 Weak Mutation 771: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:355 - ReplaceVariable array -> _states
   * 54 Weak Mutation 782: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:359 - DeleteField: _values[B
   * 55 Weak Mutation 783: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:360 - DeleteField: _states[B
   * 56 Weak Mutation 781: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:359 - ReplaceVariable _values -> _states
   * 57 Weak Mutation 811: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:364 - ReplaceVariable j -> i
   * 58 Weak Mutation 780: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:356 - InsertUnaryOp IINC -1 size
   * 59 Weak Mutation 778: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:356 - InsertUnaryOp Negation of size
   * 60 Weak Mutation 779: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:356 - InsertUnaryOp IINC 1 size
   * 61 Weak Mutation 777: gnu.trove.map.hash.TCharByteHashMap.values([B)[B:355 - ReplaceComparisonOperator >= -> -1
   */

  @Test
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '[';
      charArray0[1] = 'i';
      charArray0[4] = '-';
      byte[] byteArray0 = new byte[8];
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      byte[] byteArray1 = new byte[3];
      byte[] byteArray2 = tCharByteHashMap0.values(byteArray1);
      assertEquals("{-=0, [=0, i=0, \u0000=0}", tCharByteHashMap0.toString());
      assertEquals(4, tCharByteHashMap0.size());
      assertNotNull(byteArray2);
  }

  //Test case number: 18
  /*
   * 63 covered goals:
   * 1 Weak Mutation 829: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:373 - DeleteField: _states[B
   * 2 Weak Mutation 831: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:374 - DeleteField: _values[B
   * 3 Weak Mutation 830: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:374 - ReplaceVariable _values -> _states
   * 4 Weak Mutation 834: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:376 - InsertUnaryOp Negation of i
   * 5 Weak Mutation 835: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:376 - InsertUnaryOp IINC 1 i
   * 6 Weak Mutation 832: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:376 - ReplaceVariable vals -> _states
   * 7 Weak Mutation 833: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:376 - ReplaceVariable vals -> states
   * 8 Weak Mutation 838: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:376 - ReplaceComparisonOperator <= -> <
   * 9 Weak Mutation 839: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:376 - ReplaceComparisonOperator <= -> -1
   * 10 Weak Mutation 836: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:376 - InsertUnaryOp IINC -1 i
   * 11 Weak Mutation 851: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp IINC 1 val
   * 12 Weak Mutation 850: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp Negation of val
   * 13 Weak Mutation 849: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceVariable val -> REMOVED
   * 14 Weak Mutation 848: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceVariable val -> FULL
   * 15 Weak Mutation 855: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp Negation of i
   * 16 Weak Mutation 854: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceVariable vals -> states
   * 17 Weak Mutation 853: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceVariable vals -> _states
   * 18 Weak Mutation 852: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp IINC -1 val
   * 19 Weak Mutation 858: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceComparisonOperator != -> >
   * 20 Weak Mutation 857: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp IINC -1 i
   * 21 Weak Mutation 856: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp IINC 1 i
   * 22 Weak Mutation 842: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp Negation of i
   * 23 Weak Mutation 843: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp IINC 1 i
   * 24 Weak Mutation 841: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceVariable states -> vals
   * 25 Weak Mutation 846: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceComparisonOperator != -> ==
   * 26 Weak Mutation 847: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceVariable val -> FREE
   * 27 Weak Mutation 844: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp IINC -1 i
   * 28 Weak Mutation 845: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceConstant - 1 -> 0
   * 29 Weak Mutation 862: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:381 - ReplaceConstant - 0 -> 1
   * 30 gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z: I18 Branch 57 IFLE L376 - true
   * 31 gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z: I18 Branch 57 IFLE L376 - false
   * 32 gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 33 gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z: I25 Branch 58 IF_ICMPNE L377 - false
   * 34 gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z: I30 Branch 59 IF_ICMPNE L377 - true
   * 35 Weak Mutation 829: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:373 - DeleteField: _states[B
   * 36 Weak Mutation 831: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:374 - DeleteField: _values[B
   * 37 Weak Mutation 830: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:374 - ReplaceVariable _values -> _states
   * 38 Weak Mutation 851: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp IINC 1 val
   * 39 Weak Mutation 850: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp Negation of val
   * 40 Weak Mutation 849: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceVariable val -> REMOVED
   * 41 Weak Mutation 848: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceVariable val -> FULL
   * 42 Weak Mutation 855: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp Negation of i
   * 43 Weak Mutation 854: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceVariable vals -> states
   * 44 Weak Mutation 853: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceVariable vals -> _states
   * 45 Weak Mutation 852: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp IINC -1 val
   * 46 Weak Mutation 858: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceComparisonOperator != -> >
   * 47 Weak Mutation 857: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp IINC -1 i
   * 48 Weak Mutation 856: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp IINC 1 i
   * 49 Weak Mutation 862: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:381 - ReplaceConstant - 0 -> 1
   * 50 Weak Mutation 834: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:376 - InsertUnaryOp Negation of i
   * 51 Weak Mutation 835: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:376 - InsertUnaryOp IINC 1 i
   * 52 Weak Mutation 832: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:376 - ReplaceVariable vals -> _states
   * 53 Weak Mutation 833: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:376 - ReplaceVariable vals -> states
   * 54 Weak Mutation 838: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:376 - ReplaceComparisonOperator <= -> <
   * 55 Weak Mutation 839: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:376 - ReplaceComparisonOperator <= -> -1
   * 56 Weak Mutation 836: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:376 - InsertUnaryOp IINC -1 i
   * 57 Weak Mutation 842: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp Negation of i
   * 58 Weak Mutation 843: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp IINC 1 i
   * 59 Weak Mutation 841: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceVariable states -> vals
   * 60 Weak Mutation 846: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceComparisonOperator != -> ==
   * 61 Weak Mutation 847: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceVariable val -> FREE
   * 62 Weak Mutation 844: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp IINC -1 i
   * 63 Weak Mutation 845: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceConstant - 1 -> 0
   */

  @Test
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[2];
      byte[] byteArray0 = new byte[2];
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      boolean boolean0 = tCharByteHashMap0.containsValue((byte) (-60));
      assertEquals("{\u0000=0}", tCharByteHashMap0.toString());
      assertEquals(1, tCharByteHashMap0.size());
      assertEquals(false, boolean0);
      assertEquals(5, tCharByteHashMap0.capacity());
  }

  //Test case number: 19
  /*
   * 4 covered goals:
   * 1 Weak Mutation 859: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceComparisonOperator != -> <
   * 2 Weak Mutation 862: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:381 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 838: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:376 - ReplaceComparisonOperator <= -> <
   * 4 Weak Mutation 859: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceComparisonOperator != -> <
   */

  @Test
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[6];
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TCharByteHashMap tCharByteHashMap1 = new TCharByteHashMap(charArray0, tCharByteHashMap0._states);
      boolean boolean0 = tCharByteHashMap1.containsValue((byte)105);
      assertEquals(47, tCharByteHashMap1.capacity());
      assertEquals(1, tCharByteHashMap1.size());
      assertEquals("{\u0000=0}", tCharByteHashMap1.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 20
  /*
   * 32 covered goals:
   * 1 Weak Mutation 860: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceComparisonOperator != -> -1
   * 2 Weak Mutation 861: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:378 - ReplaceConstant - 1 -> 0
   * 3 gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z: I30 Branch 59 IF_ICMPNE L377 - false
   * 4 Weak Mutation 829: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:373 - DeleteField: _states[B
   * 5 Weak Mutation 831: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:374 - DeleteField: _values[B
   * 6 Weak Mutation 830: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:374 - ReplaceVariable _values -> _states
   * 7 Weak Mutation 851: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp IINC 1 val
   * 8 Weak Mutation 850: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp Negation of val
   * 9 Weak Mutation 849: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceVariable val -> REMOVED
   * 10 Weak Mutation 848: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceVariable val -> FULL
   * 11 Weak Mutation 855: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp Negation of i
   * 12 Weak Mutation 854: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceVariable vals -> states
   * 13 Weak Mutation 853: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceVariable vals -> _states
   * 14 Weak Mutation 852: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp IINC -1 val
   * 15 Weak Mutation 857: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp IINC -1 i
   * 16 Weak Mutation 856: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp IINC 1 i
   * 17 Weak Mutation 834: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:376 - InsertUnaryOp Negation of i
   * 18 Weak Mutation 835: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:376 - InsertUnaryOp IINC 1 i
   * 19 Weak Mutation 832: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:376 - ReplaceVariable vals -> _states
   * 20 Weak Mutation 833: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:376 - ReplaceVariable vals -> states
   * 21 Weak Mutation 839: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:376 - ReplaceComparisonOperator <= -> -1
   * 22 Weak Mutation 836: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:376 - InsertUnaryOp IINC -1 i
   * 23 Weak Mutation 842: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp Negation of i
   * 24 Weak Mutation 843: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp IINC 1 i
   * 25 Weak Mutation 841: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceVariable states -> vals
   * 26 Weak Mutation 846: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceComparisonOperator != -> ==
   * 27 Weak Mutation 847: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceVariable val -> FREE
   * 28 Weak Mutation 844: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - InsertUnaryOp IINC -1 i
   * 29 Weak Mutation 845: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceConstant - 1 -> 0
   * 30 Weak Mutation 439: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - ReplaceVariable value -> FREE
   * 31 Weak Mutation 861: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:378 - ReplaceConstant - 1 -> 0
   * 32 Weak Mutation 860: gnu.trove.map.hash.TCharByteHashMap.containsValue(B)Z:377 - ReplaceComparisonOperator != -> -1
   */

  @Test
  public void test20()  throws Throwable  {
      char[] charArray0 = new char[2];
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-60);
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      boolean boolean0 = tCharByteHashMap0.containsValue((byte) (-60));
      assertEquals("{\u0000=-60}", tCharByteHashMap0.toString());
      assertEquals(5, tCharByteHashMap0.capacity());
      assertEquals(1, tCharByteHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 9 covered goals:
   * 1 Weak Mutation 864: gnu.trove.map.hash.TCharByteHashMap.containsKey(C)Z:387 - InsertUnaryOp IINC 1 key
   * 2 Weak Mutation 865: gnu.trove.map.hash.TCharByteHashMap.containsKey(C)Z:387 - InsertUnaryOp IINC -1 key
   * 3 Weak Mutation 866: gnu.trove.map.hash.TCharByteHashMap.containsKey(C)Z:387 - DeleteStatement: contains(C)Z
   * 4 Weak Mutation 863: gnu.trove.map.hash.TCharByteHashMap.containsKey(C)Z:387 - InsertUnaryOp Negation of key
   * 5 gnu.trove.map.hash.TCharByteHashMap.containsKey(C)Z: root-Branch
   * 6 Weak Mutation 864: gnu.trove.map.hash.TCharByteHashMap.containsKey(C)Z:387 - InsertUnaryOp IINC 1 key
   * 7 Weak Mutation 865: gnu.trove.map.hash.TCharByteHashMap.containsKey(C)Z:387 - InsertUnaryOp IINC -1 key
   * 8 Weak Mutation 866: gnu.trove.map.hash.TCharByteHashMap.containsKey(C)Z:387 - DeleteStatement: contains(C)Z
   * 9 Weak Mutation 863: gnu.trove.map.hash.TCharByteHashMap.containsKey(C)Z:387 - InsertUnaryOp Negation of key
   */

  @Test
  public void test21()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((int) '\"', (float) '\"', 'a', (byte)1);
      boolean boolean0 = tCharByteHashMap0.containsKey('B');
      assertEquals(false, boolean0);
  }

  //Test case number: 22
  /*
   * 3 covered goals:
   * 1 Weak Mutation 867: gnu.trove.map.hash.TCharByteHashMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z:399 - DeleteStatement: forEach(Lgnu/trove/procedure/TCharProcedure;)Z
   * 2 gnu.trove.map.hash.TCharByteHashMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   * 3 Weak Mutation 867: gnu.trove.map.hash.TCharByteHashMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z:399 - DeleteStatement: forEach(Lgnu/trove/procedure/TCharProcedure;)Z
   */

  @Test
  public void test22()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1296), 10.0F);
      boolean boolean0 = tCharByteHashMap0.forEachKey((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 37 covered goals:
   * 1 Weak Mutation 868: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:405 - DeleteField: _states[B
   * 2 Weak Mutation 869: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:406 - ReplaceVariable _values -> _states
   * 3 Weak Mutation 870: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:406 - DeleteField: _values[B
   * 4 Weak Mutation 871: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:407 - ReplaceVariable values -> _states
   * 5 Weak Mutation 872: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:407 - ReplaceVariable values -> states
   * 6 Weak Mutation 873: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:407 - InsertUnaryOp Negation of i
   * 7 Weak Mutation 874: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:407 - InsertUnaryOp IINC 1 i
   * 8 Weak Mutation 875: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:407 - InsertUnaryOp IINC -1 i
   * 9 Weak Mutation 877: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:407 - ReplaceComparisonOperator <= -> <
   * 10 Weak Mutation 878: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:407 - ReplaceComparisonOperator <= -> -1
   * 11 Weak Mutation 881: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - InsertUnaryOp Negation of i
   * 12 Weak Mutation 880: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - ReplaceVariable states -> values
   * 13 Weak Mutation 883: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - InsertUnaryOp IINC -1 i
   * 14 Weak Mutation 882: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - InsertUnaryOp IINC 1 i
   * 15 Weak Mutation 885: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - ReplaceComparisonOperator != -> ==
   * 16 Weak Mutation 884: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - ReplaceConstant - 1 -> 0
   * 17 Weak Mutation 894: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:412 - ReplaceConstant - 1 -> 0
   * 18 gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: I18 Branch 60 IFLE L407 - true
   * 19 gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 20 gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   * 21 Weak Mutation 881: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - InsertUnaryOp Negation of i
   * 22 Weak Mutation 880: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - ReplaceVariable states -> values
   * 23 Weak Mutation 883: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - InsertUnaryOp IINC -1 i
   * 24 Weak Mutation 882: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - InsertUnaryOp IINC 1 i
   * 25 Weak Mutation 885: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - ReplaceComparisonOperator != -> ==
   * 26 Weak Mutation 884: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - ReplaceConstant - 1 -> 0
   * 27 Weak Mutation 894: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:412 - ReplaceConstant - 1 -> 0
   * 28 Weak Mutation 868: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:405 - DeleteField: _states[B
   * 29 Weak Mutation 869: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:406 - ReplaceVariable _values -> _states
   * 30 Weak Mutation 870: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:406 - DeleteField: _values[B
   * 31 Weak Mutation 871: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:407 - ReplaceVariable values -> _states
   * 32 Weak Mutation 872: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:407 - ReplaceVariable values -> states
   * 33 Weak Mutation 873: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:407 - InsertUnaryOp Negation of i
   * 34 Weak Mutation 874: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:407 - InsertUnaryOp IINC 1 i
   * 35 Weak Mutation 875: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:407 - InsertUnaryOp IINC -1 i
   * 36 Weak Mutation 877: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:407 - ReplaceComparisonOperator <= -> <
   * 37 Weak Mutation 878: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:407 - ReplaceComparisonOperator <= -> -1
   */

  @Test
  public void test23()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((int) '\u0000');
      boolean boolean0 = tCharByteHashMap0.forEachValue((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 28 covered goals:
   * 1 Weak Mutation 887: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - ReplaceVariable values -> states
   * 2 Weak Mutation 886: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - ReplaceVariable values -> _states
   * 3 Weak Mutation 889: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - InsertUnaryOp IINC 1 i
   * 4 Weak Mutation 888: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - InsertUnaryOp Negation of i
   * 5 Weak Mutation 891: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - DeleteStatement: execute(B)Z
   * 6 Weak Mutation 890: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - InsertUnaryOp IINC -1 i
   * 7 gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - false
   * 8 Weak Mutation 881: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - InsertUnaryOp Negation of i
   * 9 Weak Mutation 880: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - ReplaceVariable states -> values
   * 10 Weak Mutation 883: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - InsertUnaryOp IINC -1 i
   * 11 Weak Mutation 882: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - InsertUnaryOp IINC 1 i
   * 12 Weak Mutation 885: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - ReplaceComparisonOperator != -> ==
   * 13 Weak Mutation 884: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - ReplaceConstant - 1 -> 0
   * 14 Weak Mutation 868: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:405 - DeleteField: _states[B
   * 15 Weak Mutation 869: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:406 - ReplaceVariable _values -> _states
   * 16 Weak Mutation 870: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:406 - DeleteField: _values[B
   * 17 Weak Mutation 871: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:407 - ReplaceVariable values -> _states
   * 18 Weak Mutation 872: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:407 - ReplaceVariable values -> states
   * 19 Weak Mutation 873: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:407 - InsertUnaryOp Negation of i
   * 20 Weak Mutation 874: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:407 - InsertUnaryOp IINC 1 i
   * 21 Weak Mutation 875: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:407 - InsertUnaryOp IINC -1 i
   * 22 Weak Mutation 878: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:407 - ReplaceComparisonOperator <= -> -1
   * 23 Weak Mutation 887: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - ReplaceVariable values -> states
   * 24 Weak Mutation 886: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - ReplaceVariable values -> _states
   * 25 Weak Mutation 889: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - InsertUnaryOp IINC 1 i
   * 26 Weak Mutation 888: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - InsertUnaryOp Negation of i
   * 27 Weak Mutation 891: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - DeleteStatement: execute(B)Z
   * 28 Weak Mutation 890: gnu.trove.map.hash.TCharByteHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:408 - InsertUnaryOp IINC -1 i
   */

  @Test
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[1];
      byte[] byteArray0 = new byte[4];
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      // Undeclared exception!
      try {
        tCharByteHashMap0.forEachValue((TByteProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 91 covered goals:
   * 1 Weak Mutation 922: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - DeleteStatement: execute(CB)Z
   * 2 Weak Mutation 923: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - ReplaceComparisonOperator != -> ==
   * 3 Weak Mutation 920: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp IINC 1 i
   * 4 Weak Mutation 921: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp IINC -1 i
   * 5 Weak Mutation 918: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - ReplaceVariable values -> states
   * 6 Weak Mutation 919: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp Negation of i
   * 7 Weak Mutation 916: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp IINC -1 i
   * 8 Weak Mutation 917: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - ReplaceVariable values -> _states
   * 9 Weak Mutation 914: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp Negation of i
   * 10 Weak Mutation 915: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp IINC 1 i
   * 11 Weak Mutation 1594: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1233 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 1593: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1233 - ReplaceComparisonOperator == -> !=
   * 13 Weak Mutation 1592: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1233 - DeleteField: firstZ
   * 14 Weak Mutation 1591: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1233 - InsertUnaryOp Negation
   * 15 Weak Mutation 1600: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1236 - InsertUnaryOp IINC 1 key
   * 16 Weak Mutation 1601: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1236 - InsertUnaryOp IINC -1 key
   * 17 Weak Mutation 1602: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1236 - DeleteStatement: append(C)Ljava/lang/StringBuilder;
   * 18 Weak Mutation 1599: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1236 - InsertUnaryOp Negation of key
   * 19 Weak Mutation 1598: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1236 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 20 Weak Mutation 1603: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1237 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 21 Weak Mutation 1604: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1237 - ReplaceConstant - = -> 
   * 22 Weak Mutation 1605: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1237 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 23 Weak Mutation 1608: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1238 - InsertUnaryOp IINC 1 value
   * 24 Weak Mutation 1609: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1238 - InsertUnaryOp IINC -1 value
   * 25 Weak Mutation 1610: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1238 - DeleteStatement: append(I)Ljava/lang/StringBuilder;
   * 26 Weak Mutation 1606: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1238 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 27 Weak Mutation 1607: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1238 - InsertUnaryOp Negation of value
   * 28 Weak Mutation 1611: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1239 - ReplaceConstant - 1 -> 0
   * 29 gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 30 gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z: I39 Branch 65 IFNE L422 - true
   * 31 gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z: I4 Branch 115 IFEQ L1233 - false
   * 32 Weak Mutation 484: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:212 - DeleteField: no_entry_valueB
   * 33 Weak Mutation 480: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:212 - ReplaceVariable no_entry_value -> FREE
   * 34 Weak Mutation 519: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:225 - ReplaceVariable previous -> FREE
   * 35 Weak Mutation 484: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:212 - DeleteField: no_entry_valueB
   * 36 Weak Mutation 480: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:212 - ReplaceVariable no_entry_value -> FREE
   * 37 Weak Mutation 519: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:225 - ReplaceVariable previous -> FREE
   * 38 Weak Mutation 895: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:418 - DeleteField: _states[B
   * 39 Weak Mutation 925: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:426 - ReplaceConstant - 1 -> 0
   * 40 Weak Mutation 922: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - DeleteStatement: execute(CB)Z
   * 41 Weak Mutation 923: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - ReplaceComparisonOperator != -> ==
   * 42 Weak Mutation 920: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp IINC 1 i
   * 43 Weak Mutation 921: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp IINC -1 i
   * 44 Weak Mutation 918: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - ReplaceVariable values -> states
   * 45 Weak Mutation 919: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp Negation of i
   * 46 Weak Mutation 916: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp IINC -1 i
   * 47 Weak Mutation 917: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - ReplaceVariable values -> _states
   * 48 Weak Mutation 914: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp Negation of i
   * 49 Weak Mutation 915: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp IINC 1 i
   * 50 Weak Mutation 912: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - ReplaceComparisonOperator != -> ==
   * 51 Weak Mutation 911: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - ReplaceConstant - 1 -> 0
   * 52 Weak Mutation 910: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp IINC -1 i
   * 53 Weak Mutation 909: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp IINC 1 i
   * 54 Weak Mutation 908: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp Negation of i
   * 55 Weak Mutation 907: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - ReplaceVariable states -> values
   * 56 Weak Mutation 905: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:421 - ReplaceComparisonOperator <= -> -1
   * 57 Weak Mutation 904: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:421 - ReplaceComparisonOperator <= -> <
   * 58 Weak Mutation 902: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:421 - InsertUnaryOp IINC -1 i
   * 59 Weak Mutation 901: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:421 - InsertUnaryOp IINC 1 i
   * 60 Weak Mutation 900: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:421 - InsertUnaryOp Negation of i
   * 61 Weak Mutation 898: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:420 - DeleteField: _values[B
   * 62 Weak Mutation 897: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:420 - ReplaceVariable _values -> _states
   * 63 Weak Mutation 896: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:419 - DeleteField: _set[C
   * 64 Weak Mutation 1229: gnu.trove.map.hash.TCharByteHashMap.toString()Ljava/lang/String;:1242 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 65 Weak Mutation 1228: gnu.trove.map.hash.TCharByteHashMap.toString()Ljava/lang/String;:1242 - ReplaceConstant - } -> 
   * 66 Weak Mutation 1230: gnu.trove.map.hash.TCharByteHashMap.toString()Ljava/lang/String;:1243 - DeleteStatement: toString()Ljava/lang/String;
   * 67 Weak Mutation 1227: gnu.trove.map.hash.TCharByteHashMap.toString()Ljava/lang/String;:1230 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z
   * 68 Weak Mutation 1226: gnu.trove.map.hash.TCharByteHashMap.toString()Ljava/lang/String;:1229 - ReplaceConstant - { -> 
   * 69 Weak Mutation 1608: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1238 - InsertUnaryOp IINC 1 value
   * 70 Weak Mutation 1609: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1238 - InsertUnaryOp IINC -1 value
   * 71 Weak Mutation 1610: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1238 - DeleteStatement: append(I)Ljava/lang/StringBuilder;
   * 72 Weak Mutation 1611: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1239 - ReplaceConstant - 1 -> 0
   * 73 Weak Mutation 1600: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1236 - InsertUnaryOp IINC 1 key
   * 74 Weak Mutation 1601: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1236 - InsertUnaryOp IINC -1 key
   * 75 Weak Mutation 1602: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1236 - DeleteStatement: append(C)Ljava/lang/StringBuilder;
   * 76 Weak Mutation 1603: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1237 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 77 Weak Mutation 1604: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1237 - ReplaceConstant - = -> 
   * 78 Weak Mutation 1605: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1237 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 79 Weak Mutation 1606: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1238 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 80 Weak Mutation 1607: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1238 - InsertUnaryOp Negation of value
   * 81 Weak Mutation 1599: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1236 - InsertUnaryOp Negation of key
   * 82 Weak Mutation 1598: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1236 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 83 Weak Mutation 1594: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1233 - ReplaceConstant - 0 -> 1
   * 84 Weak Mutation 1593: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1233 - ReplaceComparisonOperator == -> !=
   * 85 Weak Mutation 1592: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1233 - DeleteField: firstZ
   * 86 Weak Mutation 1591: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1233 - InsertUnaryOp Negation
   * 87 gnu.trove.map.hash.TCharByteHashMap$1.<init>(Lgnu/trove/map/hash/TCharByteHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 88 gnu.trove.map.hash.TCharByteHashMap.toString()Ljava/lang/String;: root-Branch
   * 89 gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 90 gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 91 gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   */

  @Test
  public void test25()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((int) '1', (-1.0F), 'l', (byte) (-71));
      tCharByteHashMap0.put('1', (byte)108);
      String string0 = tCharByteHashMap0.toString();
      assertEquals(1, tCharByteHashMap0.size());
      assertEquals("{1=108}", string0);
  }

  //Test case number: 26
  /*
   * 35 covered goals:
   * 1 Weak Mutation 926: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:432 - DeleteField: _states[B
   * 2 Weak Mutation 928: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:433 - DeleteField: _values[B
   * 3 Weak Mutation 927: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:433 - ReplaceVariable _values -> _states
   * 4 Weak Mutation 936: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:434 - ReplaceComparisonOperator <= -> -1
   * 5 Weak Mutation 933: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:434 - InsertUnaryOp IINC -1 i
   * 6 Weak Mutation 932: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:434 - InsertUnaryOp IINC 1 i
   * 7 Weak Mutation 935: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:434 - ReplaceComparisonOperator <= -> <
   * 8 Weak Mutation 929: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:434 - ReplaceVariable values -> _states
   * 9 Weak Mutation 931: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:434 - InsertUnaryOp Negation of i
   * 10 Weak Mutation 930: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:434 - ReplaceVariable values -> states
   * 11 Weak Mutation 941: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:435 - InsertUnaryOp IINC -1 i
   * 12 Weak Mutation 940: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:435 - InsertUnaryOp IINC 1 i
   * 13 Weak Mutation 943: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:435 - ReplaceComparisonOperator != -> ==
   * 14 Weak Mutation 942: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:435 - ReplaceConstant - 1 -> 0
   * 15 Weak Mutation 939: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:435 - InsertUnaryOp Negation of i
   * 16 Weak Mutation 938: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:435 - ReplaceVariable states -> values
   * 17 gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V: I18 Branch 66 IFLE L434 - true
   * 18 gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V: I18 Branch 66 IFLE L434 - false
   * 19 gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   * 20 Weak Mutation 941: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:435 - InsertUnaryOp IINC -1 i
   * 21 Weak Mutation 940: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:435 - InsertUnaryOp IINC 1 i
   * 22 Weak Mutation 943: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:435 - ReplaceComparisonOperator != -> ==
   * 23 Weak Mutation 942: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:435 - ReplaceConstant - 1 -> 0
   * 24 Weak Mutation 936: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:434 - ReplaceComparisonOperator <= -> -1
   * 25 Weak Mutation 939: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:435 - InsertUnaryOp Negation of i
   * 26 Weak Mutation 938: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:435 - ReplaceVariable states -> values
   * 27 Weak Mutation 933: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:434 - InsertUnaryOp IINC -1 i
   * 28 Weak Mutation 932: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:434 - InsertUnaryOp IINC 1 i
   * 29 Weak Mutation 935: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:434 - ReplaceComparisonOperator <= -> <
   * 30 Weak Mutation 929: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:434 - ReplaceVariable values -> _states
   * 31 Weak Mutation 928: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:433 - DeleteField: _values[B
   * 32 Weak Mutation 931: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:434 - InsertUnaryOp Negation of i
   * 33 Weak Mutation 930: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:434 - ReplaceVariable values -> states
   * 34 Weak Mutation 926: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:432 - DeleteField: _states[B
   * 35 Weak Mutation 927: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:433 - ReplaceVariable _values -> _states
   */

  @Test
  public void test26()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(1199, (-979.25525F), '@', (byte)0);
      tCharByteHashMap0.transformValues((TByteFunction) null);
      assertEquals(0, tCharByteHashMap0.size());
  }

  //Test case number: 27
  /*
   * 41 covered goals:
   * 1 Weak Mutation 952: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:436 - InsertUnaryOp IINC 1 i
   * 2 Weak Mutation 953: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:436 - InsertUnaryOp IINC -1 i
   * 3 Weak Mutation 954: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:436 - DeleteStatement: execute(B)B
   * 4 Weak Mutation 948: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:436 - InsertUnaryOp IINC -1 i
   * 5 Weak Mutation 949: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:436 - ReplaceVariable values -> _states
   * 6 Weak Mutation 950: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:436 - ReplaceVariable values -> states
   * 7 Weak Mutation 951: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:436 - InsertUnaryOp Negation of i
   * 8 Weak Mutation 944: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:436 - ReplaceVariable values -> _states
   * 9 Weak Mutation 945: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:436 - ReplaceVariable values -> states
   * 10 Weak Mutation 946: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:436 - InsertUnaryOp Negation of i
   * 11 Weak Mutation 947: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:436 - InsertUnaryOp IINC 1 i
   * 12 gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V: I25 Branch 67 IF_ICMPNE L435 - false
   * 13 Weak Mutation 426: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - ReplaceVariable i -> index
   * 14 Weak Mutation 420: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - ReplaceVariable index -> i
   * 15 Weak Mutation 455: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:205 - ReplaceComparisonOperator >= -> ==
   * 16 Weak Mutation 941: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:435 - InsertUnaryOp IINC -1 i
   * 17 Weak Mutation 940: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:435 - InsertUnaryOp IINC 1 i
   * 18 Weak Mutation 943: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:435 - ReplaceComparisonOperator != -> ==
   * 19 Weak Mutation 942: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:435 - ReplaceConstant - 1 -> 0
   * 20 Weak Mutation 936: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:434 - ReplaceComparisonOperator <= -> -1
   * 21 Weak Mutation 939: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:435 - InsertUnaryOp Negation of i
   * 22 Weak Mutation 938: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:435 - ReplaceVariable states -> values
   * 23 Weak Mutation 933: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:434 - InsertUnaryOp IINC -1 i
   * 24 Weak Mutation 932: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:434 - InsertUnaryOp IINC 1 i
   * 25 Weak Mutation 929: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:434 - ReplaceVariable values -> _states
   * 26 Weak Mutation 928: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:433 - DeleteField: _values[B
   * 27 Weak Mutation 931: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:434 - InsertUnaryOp Negation of i
   * 28 Weak Mutation 930: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:434 - ReplaceVariable values -> states
   * 29 Weak Mutation 926: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:432 - DeleteField: _states[B
   * 30 Weak Mutation 927: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:433 - ReplaceVariable _values -> _states
   * 31 Weak Mutation 952: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:436 - InsertUnaryOp IINC 1 i
   * 32 Weak Mutation 953: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:436 - InsertUnaryOp IINC -1 i
   * 33 Weak Mutation 954: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:436 - DeleteStatement: execute(B)B
   * 34 Weak Mutation 948: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:436 - InsertUnaryOp IINC -1 i
   * 35 Weak Mutation 949: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:436 - ReplaceVariable values -> _states
   * 36 Weak Mutation 950: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:436 - ReplaceVariable values -> states
   * 37 Weak Mutation 951: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:436 - InsertUnaryOp Negation of i
   * 38 Weak Mutation 944: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:436 - ReplaceVariable values -> _states
   * 39 Weak Mutation 945: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:436 - ReplaceVariable values -> states
   * 40 Weak Mutation 946: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:436 - InsertUnaryOp Negation of i
   * 41 Weak Mutation 947: gnu.trove.map.hash.TCharByteHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V:436 - InsertUnaryOp IINC 1 i
   */

  @Test
  public void test27()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(1199, (-979.25525F), '@', (byte)0);
      tCharByteHashMap0.putIfAbsent('(', (byte) (-61));
      // Undeclared exception!
      try {
        tCharByteHashMap0.transformValues((TByteFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 47 covered goals:
   * 1 Weak Mutation 955: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:444 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 956: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:445 - DeleteField: _states[B
   * 3 Weak Mutation 957: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:446 - DeleteField: _set[C
   * 4 Weak Mutation 958: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:447 - ReplaceVariable _values -> _states
   * 5 Weak Mutation 959: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:447 - DeleteField: _values[B
   * 6 Weak Mutation 960: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:451 - DeleteStatement: tempDisableAutoCompaction()V
   * 7 Weak Mutation 963: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:453 - InsertUnaryOp IINC 1 i
   * 8 Weak Mutation 962: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:453 - InsertUnaryOp Negation of i
   * 9 Weak Mutation 967: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:453 - ReplaceComparisonOperator <= -> -1
   * 10 Weak Mutation 966: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:453 - ReplaceComparisonOperator <= -> <
   * 11 Weak Mutation 964: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:453 - InsertUnaryOp IINC -1 i
   * 12 Weak Mutation 971: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - InsertUnaryOp IINC 1 i
   * 13 Weak Mutation 970: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - InsertUnaryOp Negation of i
   * 14 Weak Mutation 969: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - ReplaceVariable states -> values
   * 15 Weak Mutation 974: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - ReplaceComparisonOperator != -> ==
   * 16 Weak Mutation 973: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - ReplaceConstant - 1 -> 0
   * 17 Weak Mutation 972: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - InsertUnaryOp IINC -1 i
   * 18 Weak Mutation 992: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:461 - DeleteStatement: reenableAutoCompaction(Z)V
   * 19 Weak Mutation 991: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:461 - ReplaceConstant - 1 -> 0
   * 20 Weak Mutation 995: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:464 - InsertUnaryOp Negation of modified
   * 21 Weak Mutation 997: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:464 - InsertUnaryOp IINC -1 modified
   * 22 Weak Mutation 996: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:464 - InsertUnaryOp IINC 1 modified
   * 23 gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z: I31 Branch 68 IFLE L453 - true
   * 24 gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 25 gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   * 26 Weak Mutation 956: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:445 - DeleteField: _states[B
   * 27 Weak Mutation 957: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:446 - DeleteField: _set[C
   * 28 Weak Mutation 958: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:447 - ReplaceVariable _values -> _states
   * 29 Weak Mutation 959: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:447 - DeleteField: _values[B
   * 30 Weak Mutation 955: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:444 - ReplaceConstant - 0 -> 1
   * 31 Weak Mutation 992: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:461 - DeleteStatement: reenableAutoCompaction(Z)V
   * 32 Weak Mutation 995: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:464 - InsertUnaryOp Negation of modified
   * 33 Weak Mutation 997: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:464 - InsertUnaryOp IINC -1 modified
   * 34 Weak Mutation 996: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:464 - InsertUnaryOp IINC 1 modified
   * 35 Weak Mutation 991: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:461 - ReplaceConstant - 1 -> 0
   * 36 Weak Mutation 971: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - InsertUnaryOp IINC 1 i
   * 37 Weak Mutation 970: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - InsertUnaryOp Negation of i
   * 38 Weak Mutation 969: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - ReplaceVariable states -> values
   * 39 Weak Mutation 974: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - ReplaceComparisonOperator != -> ==
   * 40 Weak Mutation 973: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - ReplaceConstant - 1 -> 0
   * 41 Weak Mutation 972: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - InsertUnaryOp IINC -1 i
   * 42 Weak Mutation 963: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:453 - InsertUnaryOp IINC 1 i
   * 43 Weak Mutation 962: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:453 - InsertUnaryOp Negation of i
   * 44 Weak Mutation 960: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:451 - DeleteStatement: tempDisableAutoCompaction()V
   * 45 Weak Mutation 967: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:453 - ReplaceComparisonOperator <= -> -1
   * 46 Weak Mutation 966: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:453 - ReplaceComparisonOperator <= -> <
   * 47 Weak Mutation 964: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:453 - InsertUnaryOp IINC -1 i
   */

  @Test
  public void test28()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      boolean boolean0 = tCharByteHashMap0.retainEntries((TCharByteProcedure) null);
      assertEquals(23, tCharByteHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 29
  /*
   * 39 covered goals:
   * 1 Weak Mutation 984: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - DeleteStatement: execute(CB)Z
   * 2 Weak Mutation 978: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - InsertUnaryOp IINC -1 i
   * 3 Weak Mutation 979: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - ReplaceVariable values -> _states
   * 4 Weak Mutation 976: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - InsertUnaryOp Negation of i
   * 5 Weak Mutation 977: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - InsertUnaryOp IINC 1 i
   * 6 Weak Mutation 982: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - InsertUnaryOp IINC 1 i
   * 7 Weak Mutation 983: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - InsertUnaryOp IINC -1 i
   * 8 Weak Mutation 980: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - ReplaceVariable values -> states
   * 9 Weak Mutation 981: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - InsertUnaryOp Negation of i
   * 10 Weak Mutation 993: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:461 - ReplaceConstant - 1 -> 0
   * 11 Weak Mutation 994: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:461 - DeleteStatement: reenableAutoCompaction(Z)V
   * 12 gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - false
   * 13 Weak Mutation 956: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:445 - DeleteField: _states[B
   * 14 Weak Mutation 957: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:446 - DeleteField: _set[C
   * 15 Weak Mutation 958: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:447 - ReplaceVariable _values -> _states
   * 16 Weak Mutation 959: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:447 - DeleteField: _values[B
   * 17 Weak Mutation 955: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:444 - ReplaceConstant - 0 -> 1
   * 18 Weak Mutation 971: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - InsertUnaryOp IINC 1 i
   * 19 Weak Mutation 970: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - InsertUnaryOp Negation of i
   * 20 Weak Mutation 969: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - ReplaceVariable states -> values
   * 21 Weak Mutation 974: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - ReplaceComparisonOperator != -> ==
   * 22 Weak Mutation 973: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - ReplaceConstant - 1 -> 0
   * 23 Weak Mutation 972: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - InsertUnaryOp IINC -1 i
   * 24 Weak Mutation 963: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:453 - InsertUnaryOp IINC 1 i
   * 25 Weak Mutation 962: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:453 - InsertUnaryOp Negation of i
   * 26 Weak Mutation 960: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:451 - DeleteStatement: tempDisableAutoCompaction()V
   * 27 Weak Mutation 967: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:453 - ReplaceComparisonOperator <= -> -1
   * 28 Weak Mutation 964: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:453 - InsertUnaryOp IINC -1 i
   * 29 Weak Mutation 993: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:461 - ReplaceConstant - 1 -> 0
   * 30 Weak Mutation 994: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:461 - DeleteStatement: reenableAutoCompaction(Z)V
   * 31 Weak Mutation 984: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - DeleteStatement: execute(CB)Z
   * 32 Weak Mutation 978: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - InsertUnaryOp IINC -1 i
   * 33 Weak Mutation 979: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - ReplaceVariable values -> _states
   * 34 Weak Mutation 976: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - InsertUnaryOp Negation of i
   * 35 Weak Mutation 977: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - InsertUnaryOp IINC 1 i
   * 36 Weak Mutation 982: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - InsertUnaryOp IINC 1 i
   * 37 Weak Mutation 983: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - InsertUnaryOp IINC -1 i
   * 38 Weak Mutation 980: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - ReplaceVariable values -> states
   * 39 Weak Mutation 981: gnu.trove.map.hash.TCharByteHashMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:454 - InsertUnaryOp Negation of i
   */

  @Test
  public void test29()  throws Throwable  {
      char[] charArray0 = new char[7];
      byte[] byteArray0 = new byte[15];
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      // Undeclared exception!
      try {
        tCharByteHashMap0.retainEntries((TCharByteProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 30
  /*
   * 30 covered goals:
   * 1 Weak Mutation 1001: gnu.trove.map.hash.TCharByteHashMap.increment(C)Z:470 - ReplaceConstant - 1 -> 0
   * 2 Weak Mutation 1000: gnu.trove.map.hash.TCharByteHashMap.increment(C)Z:470 - InsertUnaryOp IINC -1 key
   * 3 Weak Mutation 1002: gnu.trove.map.hash.TCharByteHashMap.increment(C)Z:470 - DeleteStatement: adjustValue(CB)Z
   * 4 Weak Mutation 999: gnu.trove.map.hash.TCharByteHashMap.increment(C)Z:470 - InsertUnaryOp IINC 1 key
   * 5 Weak Mutation 998: gnu.trove.map.hash.TCharByteHashMap.increment(C)Z:470 - InsertUnaryOp Negation of key
   * 6 Weak Mutation 1003: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:476 - InsertUnaryOp Negation of key
   * 7 Weak Mutation 1005: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:476 - InsertUnaryOp IINC -1 key
   * 8 Weak Mutation 1004: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:476 - InsertUnaryOp IINC 1 key
   * 9 Weak Mutation 1006: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:476 - DeleteStatement: index(C)I
   * 10 Weak Mutation 1008: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:477 - InsertUnaryOp IINC 1 index
   * 11 Weak Mutation 1009: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:477 - InsertUnaryOp IINC -1 index
   * 12 Weak Mutation 1012: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:477 - ReplaceComparisonOperator >= -> -1
   * 13 Weak Mutation 1007: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:477 - InsertUnaryOp Negation of index
   * 14 Weak Mutation 1013: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:478 - ReplaceConstant - 0 -> 1
   * 15 gnu.trove.map.hash.TCharByteHashMap.increment(C)Z: root-Branch
   * 16 gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z: I9 Branch 71 IFGE L477 - false
   * 17 Weak Mutation 1008: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:477 - InsertUnaryOp IINC 1 index
   * 18 Weak Mutation 1009: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:477 - InsertUnaryOp IINC -1 index
   * 19 Weak Mutation 1012: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:477 - ReplaceComparisonOperator >= -> -1
   * 20 Weak Mutation 1013: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:478 - ReplaceConstant - 0 -> 1
   * 21 Weak Mutation 1001: gnu.trove.map.hash.TCharByteHashMap.increment(C)Z:470 - ReplaceConstant - 1 -> 0
   * 22 Weak Mutation 1000: gnu.trove.map.hash.TCharByteHashMap.increment(C)Z:470 - InsertUnaryOp IINC -1 key
   * 23 Weak Mutation 1003: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:476 - InsertUnaryOp Negation of key
   * 24 Weak Mutation 1002: gnu.trove.map.hash.TCharByteHashMap.increment(C)Z:470 - DeleteStatement: adjustValue(CB)Z
   * 25 Weak Mutation 1005: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:476 - InsertUnaryOp IINC -1 key
   * 26 Weak Mutation 1004: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:476 - InsertUnaryOp IINC 1 key
   * 27 Weak Mutation 1007: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:477 - InsertUnaryOp Negation of index
   * 28 Weak Mutation 1006: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:476 - DeleteStatement: index(C)I
   * 29 Weak Mutation 999: gnu.trove.map.hash.TCharByteHashMap.increment(C)Z:470 - InsertUnaryOp IINC 1 key
   * 30 Weak Mutation 998: gnu.trove.map.hash.TCharByteHashMap.increment(C)Z:470 - InsertUnaryOp Negation of key
   */

  @Test
  public void test30()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(875, 875);
      boolean boolean0 = tCharByteHashMap0.increment('B');
      assertEquals(false, boolean0);
  }

  //Test case number: 31
  /*
   * 35 covered goals:
   * 1 Weak Mutation 1010: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:477 - ReplaceComparisonOperator >= -> ==
   * 2 Weak Mutation 1016: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - InsertUnaryOp Negation of index
   * 3 Weak Mutation 1017: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - InsertUnaryOp IINC 1 index
   * 4 Weak Mutation 1018: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - InsertUnaryOp IINC -1 index
   * 5 Weak Mutation 1019: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceVariable amount -> FREE
   * 6 Weak Mutation 1020: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceVariable amount -> FULL
   * 7 Weak Mutation 1021: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceVariable amount -> REMOVED
   * 8 Weak Mutation 1022: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - InsertUnaryOp Negation of amount
   * 9 Weak Mutation 1023: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - InsertUnaryOp IINC 1 amount
   * 10 Weak Mutation 1014: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceVariable _values -> _states
   * 11 Weak Mutation 1015: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - DeleteField: _values[B
   * 12 Weak Mutation 1024: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - InsertUnaryOp IINC -1 amount
   * 13 Weak Mutation 1025: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceArithmeticOperator + -> -
   * 14 Weak Mutation 1026: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceArithmeticOperator + -> %
   * 15 Weak Mutation 1027: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceArithmeticOperator + -> /
   * 16 Weak Mutation 1028: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceArithmeticOperator + -> *
   * 17 Weak Mutation 1029: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:481 - ReplaceConstant - 1 -> 0
   * 18 gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z: I9 Branch 71 IFGE L477 - true
   * 19 Weak Mutation 1016: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - InsertUnaryOp Negation of index
   * 20 Weak Mutation 1017: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - InsertUnaryOp IINC 1 index
   * 21 Weak Mutation 1018: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - InsertUnaryOp IINC -1 index
   * 22 Weak Mutation 1019: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceVariable amount -> FREE
   * 23 Weak Mutation 1020: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceVariable amount -> FULL
   * 24 Weak Mutation 1021: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceVariable amount -> REMOVED
   * 25 Weak Mutation 1022: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - InsertUnaryOp Negation of amount
   * 26 Weak Mutation 1023: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - InsertUnaryOp IINC 1 amount
   * 27 Weak Mutation 1010: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:477 - ReplaceComparisonOperator >= -> ==
   * 28 Weak Mutation 1014: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceVariable _values -> _states
   * 29 Weak Mutation 1015: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - DeleteField: _values[B
   * 30 Weak Mutation 1024: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - InsertUnaryOp IINC -1 amount
   * 31 Weak Mutation 1025: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceArithmeticOperator + -> -
   * 32 Weak Mutation 1026: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceArithmeticOperator + -> %
   * 33 Weak Mutation 1027: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceArithmeticOperator + -> /
   * 34 Weak Mutation 1028: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceArithmeticOperator + -> *
   * 35 Weak Mutation 1029: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:481 - ReplaceConstant - 1 -> 0
   */

  @Test
  public void test31()  throws Throwable  {
      char[] charArray0 = new char[3];
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((int) '\"', (float) '\"', 'a', (byte)1);
      charArray0[2] = 'N';
      TCharByteHashMap tCharByteHashMap1 = new TCharByteHashMap(charArray0, tCharByteHashMap0._states);
      boolean boolean0 = tCharByteHashMap1.adjustValue('N', (byte) (-83));
      assertEquals("{N=-83, \u0000=0}", tCharByteHashMap1.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 32
  /*
   * 49 covered goals:
   * 1 Weak Mutation 1011: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:477 - ReplaceComparisonOperator >= -> >
   * 2 Weak Mutation 478: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - InsertUnaryOp IINC 1 index
   * 3 Weak Mutation 479: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - InsertUnaryOp IINC -1 index
   * 4 Weak Mutation 476: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - InsertUnaryOp IINC -1 value
   * 5 Weak Mutation 477: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - InsertUnaryOp Negation of index
   * 6 Weak Mutation 474: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - InsertUnaryOp Negation of value
   * 7 Weak Mutation 475: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - InsertUnaryOp IINC 1 value
   * 8 Weak Mutation 472: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - ReplaceVariable value -> FULL
   * 9 Weak Mutation 473: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - ReplaceVariable value -> REMOVED
   * 10 Weak Mutation 470: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - InsertUnaryOp IINC -1 key
   * 11 Weak Mutation 471: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - ReplaceVariable value -> FREE
   * 12 Weak Mutation 468: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - InsertUnaryOp Negation of key
   * 13 Weak Mutation 469: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:207 - InsertUnaryOp IINC 1 key
   * 14 Weak Mutation 456: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:205 - ReplaceComparisonOperator >= -> >
   * 15 Weak Mutation 454: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:205 - InsertUnaryOp IINC -1 index
   * 16 Weak Mutation 453: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:205 - InsertUnaryOp IINC 1 index
   * 17 Weak Mutation 452: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:205 - InsertUnaryOp Negation of index
   * 18 Weak Mutation 451: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:204 - DeleteStatement: insertKey(C)I
   * 19 Weak Mutation 450: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:204 - InsertUnaryOp IINC -1 key
   * 20 Weak Mutation 449: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:204 - InsertUnaryOp IINC 1 key
   * 21 Weak Mutation 448: gnu.trove.map.hash.TCharByteHashMap.putIfAbsent(CB)B:204 - InsertUnaryOp Negation of key
   * 22 Weak Mutation 1016: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - InsertUnaryOp Negation of index
   * 23 Weak Mutation 1017: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - InsertUnaryOp IINC 1 index
   * 24 Weak Mutation 1018: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - InsertUnaryOp IINC -1 index
   * 25 Weak Mutation 1019: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceVariable amount -> FREE
   * 26 Weak Mutation 1021: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceVariable amount -> REMOVED
   * 27 Weak Mutation 1022: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - InsertUnaryOp Negation of amount
   * 28 Weak Mutation 1023: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - InsertUnaryOp IINC 1 amount
   * 29 Weak Mutation 1008: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:477 - InsertUnaryOp IINC 1 index
   * 30 Weak Mutation 1009: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:477 - InsertUnaryOp IINC -1 index
   * 31 Weak Mutation 1014: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceVariable _values -> _states
   * 32 Weak Mutation 1015: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - DeleteField: _values[B
   * 33 Weak Mutation 1001: gnu.trove.map.hash.TCharByteHashMap.increment(C)Z:470 - ReplaceConstant - 1 -> 0
   * 34 Weak Mutation 1000: gnu.trove.map.hash.TCharByteHashMap.increment(C)Z:470 - InsertUnaryOp IINC -1 key
   * 35 Weak Mutation 1003: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:476 - InsertUnaryOp Negation of key
   * 36 Weak Mutation 1002: gnu.trove.map.hash.TCharByteHashMap.increment(C)Z:470 - DeleteStatement: adjustValue(CB)Z
   * 37 Weak Mutation 1005: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:476 - InsertUnaryOp IINC -1 key
   * 38 Weak Mutation 1004: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:476 - InsertUnaryOp IINC 1 key
   * 39 Weak Mutation 1007: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:477 - InsertUnaryOp Negation of index
   * 40 Weak Mutation 1006: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:476 - DeleteStatement: index(C)I
   * 41 Weak Mutation 999: gnu.trove.map.hash.TCharByteHashMap.increment(C)Z:470 - InsertUnaryOp IINC 1 key
   * 42 Weak Mutation 998: gnu.trove.map.hash.TCharByteHashMap.increment(C)Z:470 - InsertUnaryOp Negation of key
   * 43 Weak Mutation 1024: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - InsertUnaryOp IINC -1 amount
   * 44 Weak Mutation 1025: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceArithmeticOperator + -> -
   * 45 Weak Mutation 1026: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceArithmeticOperator + -> %
   * 46 Weak Mutation 1027: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceArithmeticOperator + -> /
   * 47 Weak Mutation 1028: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:480 - ReplaceArithmeticOperator + -> *
   * 48 Weak Mutation 1029: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:481 - ReplaceConstant - 1 -> 0
   * 49 Weak Mutation 1011: gnu.trove.map.hash.TCharByteHashMap.adjustValue(CB)Z:477 - ReplaceComparisonOperator >= -> >
   */

  @Test
  public void test32()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(875, 875);
      tCharByteHashMap0.putIfAbsent('B', (byte)68);
      boolean boolean0 = tCharByteHashMap0.increment('B');
      assertEquals(false, tCharByteHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 33
  /*
   * 17 covered goals:
   * 1 Weak Mutation 1038: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:491 - ReplaceComparisonOperator >= -> >
   * 2 Weak Mutation 1088: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:503 - DeleteStatement: postInsertHook(Z)V
   * 3 Weak Mutation 1066: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - DeleteField: _values[B
   * 4 Weak Mutation 1067: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - InsertUnaryOp Negation of index
   * 5 Weak Mutation 1065: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - ReplaceVariable _values -> _states
   * 6 Weak Mutation 1070: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - ReplaceVariable put_amount -> FREE
   * 7 Weak Mutation 1071: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - ReplaceVariable put_amount -> FULL
   * 8 Weak Mutation 1068: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - InsertUnaryOp IINC 1 index
   * 9 Weak Mutation 1069: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - InsertUnaryOp IINC -1 index
   * 10 Weak Mutation 1087: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:503 - DeleteField: consumeFreeSlotZ
   * 11 Weak Mutation 1086: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:503 - InsertUnaryOp Negation
   * 12 Weak Mutation 1075: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - InsertUnaryOp IINC 1 put_amount
   * 13 Weak Mutation 1074: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - InsertUnaryOp Negation of put_amount
   * 14 Weak Mutation 1073: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - ReplaceVariable put_amount -> REMOVED
   * 15 Weak Mutation 1077: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:497 - ReplaceConstant - 1 -> 0
   * 16 Weak Mutation 1076: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:496 - InsertUnaryOp IINC -1 put_amount
   * 17 Weak Mutation 1038: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:491 - ReplaceComparisonOperator >= -> >
   */

  @Test
  public void test33()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1296), 10.0F);
      byte byte0 = tCharByteHashMap0.adjustOrPutValue('B', (byte)114, (byte)114);
      assertEquals(false, tCharByteHashMap0.isEmpty());
      assertEquals((byte)114, byte0);
  }

  //Test case number: 34
  /*
   * 78 covered goals:
   * 1 Weak Mutation 1045: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:492 - ReplaceArithmeticOperator - -> %
   * 2 Weak Mutation 1096: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:506 - InsertUnaryOp IINC 1 newValue
   * 3 Weak Mutation 1097: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:506 - InsertUnaryOp IINC -1 newValue
   * 4 Weak Mutation 1092: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:506 - ReplaceVariable newValue -> put_amount
   * 5 Weak Mutation 1093: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:506 - ReplaceVariable newValue -> REMOVED
   * 6 Weak Mutation 1094: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:506 - ReplaceVariable newValue -> previousState
   * 7 Weak Mutation 1095: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:506 - InsertUnaryOp Negation of newValue
   * 8 Weak Mutation 1089: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:506 - ReplaceVariable newValue -> FREE
   * 9 Weak Mutation 1090: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:506 - ReplaceVariable newValue -> FULL
   * 10 Weak Mutation 1032: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:488 - InsertUnaryOp IINC -1 key
   * 11 Weak Mutation 1033: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:488 - DeleteStatement: insertKey(C)I
   * 12 Weak Mutation 1034: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:491 - InsertUnaryOp Negation of index
   * 13 Weak Mutation 1035: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:491 - InsertUnaryOp IINC 1 index
   * 14 Weak Mutation 1036: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:491 - InsertUnaryOp IINC -1 index
   * 15 Weak Mutation 1039: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:491 - ReplaceComparisonOperator >= -> -1
   * 16 Weak Mutation 1030: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:488 - InsertUnaryOp Negation of key
   * 17 Weak Mutation 1031: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:488 - InsertUnaryOp IINC 1 key
   * 18 Weak Mutation 1049: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - DeleteField: _values[B
   * 19 Weak Mutation 1048: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - ReplaceVariable _values -> _states
   * 20 Weak Mutation 1051: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - InsertUnaryOp IINC 1 index
   * 21 Weak Mutation 1050: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - InsertUnaryOp Negation of index
   * 22 Weak Mutation 1053: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - ReplaceVariable adjust_amount -> FREE
   * 23 Weak Mutation 1052: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - InsertUnaryOp IINC -1 index
   * 24 Weak Mutation 1055: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - ReplaceVariable adjust_amount -> put_amount
   * 25 Weak Mutation 1054: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - ReplaceVariable adjust_amount -> FULL
   * 26 Weak Mutation 1041: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:492 - InsertUnaryOp IINC 1 index
   * 27 Weak Mutation 1040: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:492 - InsertUnaryOp Negation of index
   * 28 Weak Mutation 1043: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:492 - ReplaceConstant - 1 -> 0
   * 29 Weak Mutation 1042: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:492 - InsertUnaryOp IINC -1 index
   * 30 Weak Mutation 1044: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:492 - ReplaceArithmeticOperator - -> +
   * 31 Weak Mutation 1047: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:492 - ReplaceArithmeticOperator - -> *
   * 32 Weak Mutation 1046: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:492 - ReplaceArithmeticOperator - -> /
   * 33 Weak Mutation 1064: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:494 - ReplaceConstant - 0 -> 1
   * 34 Weak Mutation 1058: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - InsertUnaryOp IINC 1 adjust_amount
   * 35 Weak Mutation 1059: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - InsertUnaryOp IINC -1 adjust_amount
   * 36 Weak Mutation 1056: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - ReplaceVariable adjust_amount -> REMOVED
   * 37 Weak Mutation 1057: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - InsertUnaryOp Negation of adjust_amount
   * 38 Weak Mutation 1062: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - ReplaceArithmeticOperator + -> /
   * 39 Weak Mutation 1063: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - ReplaceArithmeticOperator + -> *
   * 40 Weak Mutation 1060: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - ReplaceArithmeticOperator + -> -
   * 41 Weak Mutation 1061: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - ReplaceArithmeticOperator + -> %
   * 42 Weak Mutation 1083: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:502 - InsertUnaryOp IINC 1 isNewMapping
   * 43 Weak Mutation 1082: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:502 - InsertUnaryOp Negation of isNewMapping
   * 44 Weak Mutation 1081: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:500 - InsertUnaryOp IINC -1 index
   * 45 Weak Mutation 1080: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:500 - InsertUnaryOp IINC 1 index
   * 46 Weak Mutation 1085: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:502 - ReplaceComparisonOperator == -> !=
   * 47 Weak Mutation 1084: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:502 - InsertUnaryOp IINC -1 isNewMapping
   * 48 Weak Mutation 1079: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:500 - InsertUnaryOp Negation of index
   * 49 Weak Mutation 1078: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:500 - DeleteField: _states[B
   * 50 Weak Mutation 1092: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:506 - ReplaceVariable newValue -> put_amount
   * 51 Weak Mutation 1039: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:491 - ReplaceComparisonOperator >= -> -1
   * 52 Weak Mutation 1049: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - DeleteField: _values[B
   * 53 Weak Mutation 1048: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - ReplaceVariable _values -> _states
   * 54 Weak Mutation 1051: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - InsertUnaryOp IINC 1 index
   * 55 Weak Mutation 1050: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - InsertUnaryOp Negation of index
   * 56 Weak Mutation 1053: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - ReplaceVariable adjust_amount -> FREE
   * 57 Weak Mutation 1052: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - InsertUnaryOp IINC -1 index
   * 58 Weak Mutation 1055: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - ReplaceVariable adjust_amount -> put_amount
   * 59 Weak Mutation 1054: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - ReplaceVariable adjust_amount -> FULL
   * 60 Weak Mutation 1041: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:492 - InsertUnaryOp IINC 1 index
   * 61 Weak Mutation 1040: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:492 - InsertUnaryOp Negation of index
   * 62 Weak Mutation 1043: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:492 - ReplaceConstant - 1 -> 0
   * 63 Weak Mutation 1042: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:492 - InsertUnaryOp IINC -1 index
   * 64 Weak Mutation 1045: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:492 - ReplaceArithmeticOperator - -> %
   * 65 Weak Mutation 1044: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:492 - ReplaceArithmeticOperator - -> +
   * 66 Weak Mutation 1047: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:492 - ReplaceArithmeticOperator - -> *
   * 67 Weak Mutation 1046: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:492 - ReplaceArithmeticOperator - -> /
   * 68 Weak Mutation 1064: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:494 - ReplaceConstant - 0 -> 1
   * 69 Weak Mutation 1058: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - InsertUnaryOp IINC 1 adjust_amount
   * 70 Weak Mutation 1059: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - InsertUnaryOp IINC -1 adjust_amount
   * 71 Weak Mutation 1056: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - ReplaceVariable adjust_amount -> REMOVED
   * 72 Weak Mutation 1057: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - InsertUnaryOp Negation of adjust_amount
   * 73 Weak Mutation 1062: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - ReplaceArithmeticOperator + -> /
   * 74 Weak Mutation 1063: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - ReplaceArithmeticOperator + -> *
   * 75 Weak Mutation 1060: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - ReplaceArithmeticOperator + -> -
   * 76 Weak Mutation 1061: gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B:493 - ReplaceArithmeticOperator + -> %
   * 77 gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B: I9 Branch 72 IFGE L491 - false
   * 78 gnu.trove.map.hash.TCharByteHashMap.adjustOrPutValue(CBB)B: I59 Branch 73 IFEQ L502 - true
   */

  @Test
  public void test34()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '$';
      byte[] byteArray0 = new byte[6];
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      byte byte0 = tCharByteHashMap0.adjustOrPutValue('$', (byte) (-4), (byte)0);
      assertEquals("{$=-4, \u0000=0}", tCharByteHashMap0.toString());
      assertEquals((byte) (-4), byte0);
  }

  //Test case number: 35
  /*
   * 57 covered goals:
   * 1 Weak Mutation 1537: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.key()C:1148 - DeleteField: _indexI
   * 2 Weak Mutation 1543: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.value()B:1153 - DeleteField: _indexI
   * 3 Weak Mutation 307: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:135 - ReplaceVariable hashmap -> this
   * 4 Weak Mutation 306: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:133 - ReplaceComparisonOperator == -> !=
   * 5 Weak Mutation 309: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:135 - DeleteField: _loadFactorF
   * 6 Weak Mutation 308: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:135 - InsertUnaryOp Negation
   * 7 Weak Mutation 310: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:136 - ReplaceVariable hashmap -> this
   * 8 Weak Mutation 312: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:137 - ReplaceVariable hashmap -> this
   * 9 Weak Mutation 315: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:137 - ReplaceVariable no_entry_value -> REMOVED
   * 10 Weak Mutation 314: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:137 - ReplaceVariable no_entry_value -> FULL
   * 11 Weak Mutation 316: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:137 - InsertUnaryOp Negation
   * 12 Weak Mutation 343: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceConstant - 10.0 -> -1.0
   * 13 Weak Mutation 342: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceConstant - 10.0 -> 1.0
   * 14 Weak Mutation 341: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceConstant - 10.0 -> 0.0
   * 15 Weak Mutation 351: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceArithmeticOperator / -> *
   * 16 Weak Mutation 350: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceArithmeticOperator / -> %
   * 17 Weak Mutation 349: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceArithmeticOperator / -> +
   * 18 Weak Mutation 348: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceArithmeticOperator / -> -
   * 19 Weak Mutation 347: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - DeleteField: _loadFactorF
   * 20 Weak Mutation 346: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - InsertUnaryOp Negation
   * 21 Weak Mutation 345: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceConstant - 10.0 -> 11.0
   * 22 Weak Mutation 344: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - ReplaceConstant - 10.0 -> 9.0
   * 23 Weak Mutation 326: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:143 - ReplaceVariable no_entry_value -> FULL
   * 24 Weak Mutation 327: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:143 - ReplaceVariable no_entry_value -> REMOVED
   * 25 Weak Mutation 321: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:139 - ReplaceComparisonOperator == -> -2
   * 26 Weak Mutation 332: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:143 - ReplaceComparisonOperator == -> -2
   * 27 Weak Mutation 328: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:143 - InsertUnaryOp Negation
   * 28 Weak Mutation 352: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - DeleteStatement: ceil(D)D
   * 29 Weak Mutation 353: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:146 - DeleteStatement: setUp(I)I
   * 30 Weak Mutation 354: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:148 - DeleteStatement: putAll(Lgnu/trove/map/TCharByteMap;)V
   * 31 Weak Mutation 493: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:215 - ReplaceArithmeticOperator - -> %
   * 32 Weak Mutation 321: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:139 - ReplaceComparisonOperator == -> -2
   * 33 Weak Mutation 332: gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V:143 - ReplaceComparisonOperator == -> -2
   * 34 Weak Mutation 493: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:215 - ReplaceArithmeticOperator - -> %
   * 35 Weak Mutation 544: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:245 - DeleteStatement: put(CB)B
   * 36 Weak Mutation 541: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:244 - DeleteStatement: advance()V
   * 37 Weak Mutation 543: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:245 - DeleteStatement: value()B
   * 38 Weak Mutation 542: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:245 - DeleteStatement: key()C
   * 39 Weak Mutation 1532: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.key()C:1148 - DeleteField: this$0Lgnu/trove/map/hash/TCharByteHashMap;
   * 40 Weak Mutation 1533: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.key()C:1148 - DeleteField: _set[C
   * 41 Weak Mutation 1534: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.key()C:1148 - InsertUnaryOp Negation
   * 42 Weak Mutation 1535: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.key()C:1148 - InsertUnaryOp +1
   * 43 Weak Mutation 1531: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.advance()V:1143 - DeleteStatement: moveToNextIndex()V
   * 44 Weak Mutation 1540: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.value()B:1153 - InsertUnaryOp Negation
   * 45 Weak Mutation 1541: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.value()B:1153 - InsertUnaryOp +1
   * 46 Weak Mutation 1542: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.value()B:1153 - InsertUnaryOp -1
   * 47 Weak Mutation 1543: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.value()B:1153 - DeleteField: _indexI
   * 48 Weak Mutation 1536: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.key()C:1148 - InsertUnaryOp -1
   * 49 Weak Mutation 1537: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.key()C:1148 - DeleteField: _indexI
   * 50 Weak Mutation 1538: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.value()B:1153 - DeleteField: this$0Lgnu/trove/map/hash/TCharByteHashMap;
   * 51 Weak Mutation 1539: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.value()B:1153 - DeleteField: _values[B
   * 52 gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.key()C: root-Branch
   * 53 gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.advance()V: root-Branch
   * 54 gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.value()B: root-Branch
   * 55 gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V: I15 Branch 43 IFEQ L243 - false
   * 56 gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V: I38 Branch 35 IFEQ L139 - true
   * 57 gnu.trove.map.hash.TCharByteHashMap.<init>(Lgnu/trove/map/TCharByteMap;)V: I50 Branch 36 IFEQ L143 - true
   */

//   @Test
//   public void test35()  throws Throwable  {
//       char[] charArray0 = new char[6];
//       charArray0[0] = '3';
//       byte[] byteArray0 = new byte[3];
//       TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
//       TCharByteHashMap tCharByteHashMap1 = new TCharByteHashMap((TCharByteMap) tCharByteHashMap0);
//       assertEquals(23, tCharByteHashMap1.capacity());
//       assertEquals("{\u0000=0, 3=0}", tCharByteHashMap0.toString());
//       assertEquals(0, tCharByteHashMap1.getNoEntryValue());
//       assertEquals("{3=0, \u0000=0}", tCharByteHashMap1.toString());
//       assertEquals(false, tCharByteHashMap0.isEmpty());
//   }

  //Test case number: 36
  /*
   * 4 covered goals:
   * 1 Weak Mutation 1099: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1185 - ReplaceConstant - 0 -> 1
   * 2 gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - false
   * 3 Weak Mutation 1098: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1184 - ReplaceComparisonOperator != -> ==
   * 4 Weak Mutation 1099: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1185 - ReplaceConstant - 0 -> 1
   */

  @Test
  public void test36()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(0, 0);
      boolean boolean0 = tCharByteHashMap0.equals((Object) ":");
      assertEquals(false, boolean0);
  }

  //Test case number: 37
  /*
   * 8 covered goals:
   * 1 Weak Mutation 1102: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1188 - ReplaceComparisonOperator == -> >=
   * 2 Weak Mutation 1105: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1189 - ReplaceConstant - 0 -> 1
   * 3 gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - false
   * 4 Weak Mutation 1100: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1188 - DeleteStatement: size()I
   * 5 Weak Mutation 1101: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1188 - DeleteStatement: size()I
   * 6 Weak Mutation 1102: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1188 - ReplaceComparisonOperator == -> >=
   * 7 Weak Mutation 1105: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1189 - ReplaceConstant - 0 -> 1
   * 8 gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   */

  @Test
  public void test37()  throws Throwable  {
      char[] charArray0 = new char[6];
      byte[] byteArray0 = new byte[3];
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      TCharByteHashMap tCharByteHashMap1 = new TCharByteHashMap(620, 620);
      boolean boolean0 = tCharByteHashMap1.equals((Object) tCharByteHashMap0);
      assertEquals("{\u0000=0}", tCharByteHashMap0.toString());
      assertEquals(17, tCharByteHashMap0.capacity());
      assertEquals(false, boolean0);
      assertEquals(1, tCharByteHashMap0.size());
      assertFalse(tCharByteHashMap0.equals(tCharByteHashMap1));
  }

  //Test case number: 38
  /*
   * 86 covered goals:
   * 1 Weak Mutation 1104: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1188 - ReplaceComparisonOperator == -> <=
   * 2 Weak Mutation 373: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:181 - InsertUnaryOp IINC 1 newCapacity
   * 3 Weak Mutation 372: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:181 - InsertUnaryOp Negation of newCapacity
   * 4 Weak Mutation 375: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:182 - ReplaceVariable newCapacity -> oldCapacity
   * 5 Weak Mutation 374: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:181 - InsertUnaryOp IINC -1 newCapacity
   * 6 Weak Mutation 369: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:178 - DeleteField: _values[B
   * 7 Weak Mutation 368: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:178 - ReplaceVariable _values -> _states
   * 8 Weak Mutation 371: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:181 - ReplaceVariable newCapacity -> oldCapacity
   * 9 Weak Mutation 370: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:179 - DeleteField: _states[B
   * 10 Weak Mutation 381: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:183 - InsertUnaryOp IINC 1 newCapacity
   * 11 Weak Mutation 380: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:183 - InsertUnaryOp Negation of newCapacity
   * 12 Weak Mutation 383: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - ReplaceVariable oldCapacity -> newCapacity
   * 13 Weak Mutation 382: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:183 - InsertUnaryOp IINC -1 newCapacity
   * 14 Weak Mutation 377: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:182 - InsertUnaryOp IINC 1 newCapacity
   * 15 Weak Mutation 376: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:182 - InsertUnaryOp Negation of newCapacity
   * 16 Weak Mutation 379: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:183 - ReplaceVariable newCapacity -> oldCapacity
   * 17 Weak Mutation 378: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:182 - InsertUnaryOp IINC -1 newCapacity
   * 18 Weak Mutation 366: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:175 - DeleteField: _set[C
   * 19 Weak Mutation 367: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:177 - DeleteField: _set[C
   * 20 Weak Mutation 410: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:187 - InsertUnaryOp IINC 1 i
   * 21 Weak Mutation 411: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:187 - InsertUnaryOp IINC -1 i
   * 22 Weak Mutation 408: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:187 - ReplaceVariable i -> oldCapacity
   * 23 Weak Mutation 409: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:187 - InsertUnaryOp Negation of i
   * 24 Weak Mutation 414: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:188 - InsertUnaryOp IINC -1 o
   * 25 Weak Mutation 415: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:188 - DeleteStatement: insertKey(C)I
   * 26 Weak Mutation 412: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:188 - InsertUnaryOp Negation of o
   * 27 Weak Mutation 413: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:188 - InsertUnaryOp IINC 1 o
   * 28 Weak Mutation 402: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - InsertUnaryOp IINC 1 i
   * 29 Weak Mutation 403: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - InsertUnaryOp IINC -1 i
   * 30 Weak Mutation 400: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - ReplaceVariable i -> oldCapacity
   * 31 Weak Mutation 401: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - InsertUnaryOp Negation of i
   * 32 Weak Mutation 406: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:187 - ReplaceVariable oldKeys -> _set
   * 33 Weak Mutation 407: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:187 - ReplaceVariable i -> newCapacity
   * 34 Weak Mutation 404: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - ReplaceConstant - 1 -> 0
   * 35 Weak Mutation 405: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - ReplaceComparisonOperator != -> ==
   * 36 Weak Mutation 395: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - ReplaceComparisonOperator <= -> <
   * 37 Weak Mutation 393: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - ReplaceVariable i -> oldCapacity
   * 38 Weak Mutation 392: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - ReplaceVariable i -> newCapacity
   * 39 Weak Mutation 399: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - ReplaceVariable i -> newCapacity
   * 40 Weak Mutation 398: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - ReplaceVariable oldStates -> oldVals
   * 41 Weak Mutation 397: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:186 - ReplaceVariable oldStates -> _states
   * 42 Weak Mutation 396: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - ReplaceComparisonOperator <= -> -1
   * 43 Weak Mutation 387: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - ReplaceVariable i -> newCapacity
   * 44 Weak Mutation 386: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - InsertUnaryOp IINC -1 oldCapacity
   * 45 Weak Mutation 385: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - InsertUnaryOp IINC 1 oldCapacity
   * 46 Weak Mutation 384: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - InsertUnaryOp Negation of oldCapacity
   * 47 Weak Mutation 391: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - InsertUnaryOp IINC -1 i
   * 48 Weak Mutation 390: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - InsertUnaryOp IINC 1 i
   * 49 Weak Mutation 389: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - InsertUnaryOp Negation of i
   * 50 Weak Mutation 388: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:185 - ReplaceVariable i -> oldCapacity
   * 51 Weak Mutation 425: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - ReplaceVariable oldVals -> oldStates
   * 52 Weak Mutation 424: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - ReplaceVariable oldVals -> _states
   * 53 Weak Mutation 427: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - ReplaceVariable i -> newCapacity
   * 54 Weak Mutation 429: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - InsertUnaryOp Negation of i
   * 55 Weak Mutation 428: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - ReplaceVariable i -> oldCapacity
   * 56 Weak Mutation 431: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - InsertUnaryOp IINC -1 i
   * 57 Weak Mutation 430: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - InsertUnaryOp IINC 1 i
   * 58 Weak Mutation 417: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - DeleteField: _values[B
   * 59 Weak Mutation 416: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - ReplaceVariable _values -> _states
   * 60 Weak Mutation 419: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - ReplaceVariable index -> oldCapacity
   * 61 Weak Mutation 418: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - ReplaceVariable index -> newCapacity
   * 62 Weak Mutation 421: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - InsertUnaryOp Negation of index
   * 63 Weak Mutation 423: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - InsertUnaryOp IINC -1 index
   * 64 Weak Mutation 422: gnu.trove.map.hash.TCharByteHashMap.rehash(I)V:189 - InsertUnaryOp IINC 1 index
   * 65 Weak Mutation 544: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:245 - DeleteStatement: put(CB)B
   * 66 Weak Mutation 541: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:244 - DeleteStatement: advance()V
   * 67 Weak Mutation 540: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:243 - ReplaceComparisonOperator == -> !=
   * 68 Weak Mutation 543: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:245 - DeleteStatement: value()B
   * 69 Weak Mutation 542: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:245 - DeleteStatement: key()C
   * 70 Weak Mutation 537: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:241 - DeleteStatement: ensureCapacity(I)V
   * 71 Weak Mutation 536: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:241 - DeleteStatement: size()I
   * 72 Weak Mutation 539: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:243 - DeleteStatement: hasNext()Z
   * 73 Weak Mutation 538: gnu.trove.map.hash.TCharByteHashMap.putAll(Lgnu/trove/map/TCharByteMap;)V:242 - DeleteStatement: iterator()Lgnu/trove/iterator/TCharByteIterator;
   * 74 Weak Mutation 1105: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1189 - ReplaceConstant - 0 -> 1
   * 75 Weak Mutation 1532: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.key()C:1148 - DeleteField: this$0Lgnu/trove/map/hash/TCharByteHashMap;
   * 76 Weak Mutation 1533: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.key()C:1148 - DeleteField: _set[C
   * 77 Weak Mutation 1534: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.key()C:1148 - InsertUnaryOp Negation
   * 78 Weak Mutation 1535: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.key()C:1148 - InsertUnaryOp +1
   * 79 Weak Mutation 1531: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.advance()V:1143 - DeleteStatement: moveToNextIndex()V
   * 80 Weak Mutation 1540: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.value()B:1153 - InsertUnaryOp Negation
   * 81 Weak Mutation 1541: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.value()B:1153 - InsertUnaryOp +1
   * 82 Weak Mutation 1542: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.value()B:1153 - InsertUnaryOp -1
   * 83 Weak Mutation 1536: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.key()C:1148 - InsertUnaryOp -1
   * 84 Weak Mutation 1538: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.value()B:1153 - DeleteField: this$0Lgnu/trove/map/hash/TCharByteHashMap;
   * 85 Weak Mutation 1539: gnu.trove.map.hash.TCharByteHashMap$TCharByteHashIterator.value()B:1153 - DeleteField: _values[B
   * 86 Weak Mutation 1104: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1188 - ReplaceComparisonOperator == -> <=
   */

  @Test
  public void test38()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(0, 0);
      TCharByteHashMap tCharByteHashMap1 = new TCharByteHashMap(tCharByteHashMap0._set, tCharByteHashMap0._states);
      tCharByteHashMap0.putAll((TCharByteMap) tCharByteHashMap1);
      TCharByteHashMap tCharByteHashMap2 = new TCharByteHashMap(0, 1.0F);
      boolean boolean0 = tCharByteHashMap0.equals((Object) tCharByteHashMap2);
      assertEquals(1, tCharByteHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 39
  /*
   * 129 covered goals:
   * 1 Weak Mutation 1149: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable that_value -> this_no_entry_value
   * 2 Weak Mutation 1148: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable that_value -> FREE
   * 3 Weak Mutation 1143: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable this_value -> that_no_entry_value
   * 4 Weak Mutation 1140: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable this_value -> this_no_entry_value
   * 5 Weak Mutation 1139: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable this_value -> FREE
   * 6 Weak Mutation 1153: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable that_value -> that_no_entry_value
   * 7 Weak Mutation 550: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - InsertUnaryOp IINC 1 index
   * 8 Weak Mutation 551: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - InsertUnaryOp IINC -1 index
   * 9 Weak Mutation 548: gnu.trove.map.hash.TCharByteHashMap.get(C)B:252 - DeleteStatement: index(C)I
   * 10 Weak Mutation 549: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - InsertUnaryOp Negation of index
   * 11 Weak Mutation 546: gnu.trove.map.hash.TCharByteHashMap.get(C)B:252 - InsertUnaryOp IINC 1 key
   * 12 Weak Mutation 547: gnu.trove.map.hash.TCharByteHashMap.get(C)B:252 - InsertUnaryOp IINC -1 key
   * 13 Weak Mutation 545: gnu.trove.map.hash.TCharByteHashMap.get(C)B:252 - InsertUnaryOp Negation of key
   * 14 Weak Mutation 552: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - ReplaceComparisonOperator >= -> ==
   * 15 Weak Mutation 553: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - ReplaceComparisonOperator >= -> >
   * 16 Weak Mutation 564: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - InsertUnaryOp IINC -1 index
   * 17 Weak Mutation 563: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - InsertUnaryOp IINC 1 index
   * 18 Weak Mutation 562: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - InsertUnaryOp Negation of index
   * 19 Weak Mutation 561: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - DeleteField: _values[B
   * 20 Weak Mutation 560: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - ReplaceVariable _values -> _states
   * 21 Weak Mutation 1100: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1188 - DeleteStatement: size()I
   * 22 Weak Mutation 1101: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1188 - DeleteStatement: size()I
   * 23 Weak Mutation 1103: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1188 - ReplaceComparisonOperator == -> -2
   * 24 Weak Mutation 1098: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1184 - ReplaceComparisonOperator != -> ==
   * 25 Weak Mutation 1117: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1195 - ReplaceComparisonOperator <= -> <
   * 26 Weak Mutation 1118: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1195 - ReplaceComparisonOperator <= -> -1
   * 27 Weak Mutation 1113: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1195 - InsertUnaryOp Negation of i
   * 28 Weak Mutation 1112: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1195 - ReplaceVariable values -> states
   * 29 Weak Mutation 1115: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1195 - InsertUnaryOp IINC -1 i
   * 30 Weak Mutation 1114: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1195 - InsertUnaryOp IINC 1 i
   * 31 Weak Mutation 1109: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1193 - DeleteStatement: getNoEntryValue()B
   * 32 Weak Mutation 1108: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1192 - DeleteField: _states[B
   * 33 Weak Mutation 1111: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1195 - ReplaceVariable values -> _states
   * 34 Weak Mutation 1110: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1194 - DeleteStatement: getNoEntryValue()B
   * 35 Weak Mutation 1107: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1191 - DeleteField: _values[B
   * 36 Weak Mutation 1106: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1191 - ReplaceVariable _values -> _states
   * 37 Weak Mutation 1134: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1199 - ReplaceVariable values -> _states
   * 38 Weak Mutation 1135: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1199 - ReplaceVariable values -> states
   * 39 Weak Mutation 1132: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1198 - InsertUnaryOp IINC -1 key
   * 40 Weak Mutation 1133: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1198 - DeleteStatement: get(C)B
   * 41 Weak Mutation 1130: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1198 - InsertUnaryOp Negation of key
   * 42 Weak Mutation 1131: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1198 - InsertUnaryOp IINC 1 key
   * 43 Weak Mutation 1128: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1197 - InsertUnaryOp IINC 1 i
   * 44 Weak Mutation 1129: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1197 - InsertUnaryOp IINC -1 i
   * 45 Weak Mutation 1126: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1197 - DeleteField: _set[C
   * 46 Weak Mutation 1127: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1197 - InsertUnaryOp Negation of i
   * 47 Weak Mutation 1124: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1196 - ReplaceConstant - 1 -> 0
   * 48 Weak Mutation 1125: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1196 - ReplaceComparisonOperator != -> ==
   * 49 Weak Mutation 1122: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1196 - InsertUnaryOp IINC 1 i
   * 50 Weak Mutation 1123: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1196 - InsertUnaryOp IINC -1 i
   * 51 Weak Mutation 1120: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1196 - ReplaceVariable states -> values
   * 52 Weak Mutation 1121: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1196 - InsertUnaryOp Negation of i
   * 53 Weak Mutation 1150: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable that_value -> FULL
   * 54 Weak Mutation 1147: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp IINC -1 this_value
   * 55 Weak Mutation 1146: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp IINC 1 this_value
   * 56 Weak Mutation 1145: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp Negation of this_value
   * 57 Weak Mutation 1142: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable this_value -> REMOVED
   * 58 Weak Mutation 1141: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable this_value -> FULL
   * 59 Weak Mutation 1138: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1199 - InsertUnaryOp IINC -1 i
   * 60 Weak Mutation 1137: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1199 - InsertUnaryOp IINC 1 i
   * 61 Weak Mutation 1136: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1199 - InsertUnaryOp Negation of i
   * 62 Weak Mutation 1152: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable that_value -> REMOVED
   * 63 Weak Mutation 1155: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp IINC 1 that_value
   * 64 Weak Mutation 1154: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp Negation of that_value
   * 65 Weak Mutation 1156: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp IINC -1 that_value
   * 66 Weak Mutation 1158: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceComparisonOperator == -> -2
   * 67 Weak Mutation 552: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - ReplaceComparisonOperator >= -> ==
   * 68 Weak Mutation 553: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - ReplaceComparisonOperator >= -> >
   * 69 Weak Mutation 564: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - InsertUnaryOp IINC -1 index
   * 70 Weak Mutation 563: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - InsertUnaryOp IINC 1 index
   * 71 Weak Mutation 562: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - InsertUnaryOp Negation of index
   * 72 Weak Mutation 561: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - DeleteField: _values[B
   * 73 Weak Mutation 560: gnu.trove.map.hash.TCharByteHashMap.get(C)B:253 - ReplaceVariable _values -> _states
   * 74 Weak Mutation 1103: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1188 - ReplaceComparisonOperator == -> -2
   * 75 Weak Mutation 1117: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1195 - ReplaceComparisonOperator <= -> <
   * 76 Weak Mutation 1118: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1195 - ReplaceComparisonOperator <= -> -1
   * 77 Weak Mutation 1113: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1195 - InsertUnaryOp Negation of i
   * 78 Weak Mutation 1112: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1195 - ReplaceVariable values -> states
   * 79 Weak Mutation 1115: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1195 - InsertUnaryOp IINC -1 i
   * 80 Weak Mutation 1114: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1195 - InsertUnaryOp IINC 1 i
   * 81 Weak Mutation 1109: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1193 - DeleteStatement: getNoEntryValue()B
   * 82 Weak Mutation 1108: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1192 - DeleteField: _states[B
   * 83 Weak Mutation 1111: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1195 - ReplaceVariable values -> _states
   * 84 Weak Mutation 1110: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1194 - DeleteStatement: getNoEntryValue()B
   * 85 Weak Mutation 1107: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1191 - DeleteField: _values[B
   * 86 Weak Mutation 1106: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1191 - ReplaceVariable _values -> _states
   * 87 Weak Mutation 1134: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1199 - ReplaceVariable values -> _states
   * 88 Weak Mutation 1135: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1199 - ReplaceVariable values -> states
   * 89 Weak Mutation 1132: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1198 - InsertUnaryOp IINC -1 key
   * 90 Weak Mutation 1133: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1198 - DeleteStatement: get(C)B
   * 91 Weak Mutation 1130: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1198 - InsertUnaryOp Negation of key
   * 92 Weak Mutation 1131: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1198 - InsertUnaryOp IINC 1 key
   * 93 Weak Mutation 1128: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1197 - InsertUnaryOp IINC 1 i
   * 94 Weak Mutation 1129: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1197 - InsertUnaryOp IINC -1 i
   * 95 Weak Mutation 1126: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1197 - DeleteField: _set[C
   * 96 Weak Mutation 1127: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1197 - InsertUnaryOp Negation of i
   * 97 Weak Mutation 1124: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1196 - ReplaceConstant - 1 -> 0
   * 98 Weak Mutation 1125: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1196 - ReplaceComparisonOperator != -> ==
   * 99 Weak Mutation 1122: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1196 - InsertUnaryOp IINC 1 i
   * 100 Weak Mutation 1123: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1196 - InsertUnaryOp IINC -1 i
   * 101 Weak Mutation 1120: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1196 - ReplaceVariable states -> values
   * 102 Weak Mutation 1121: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1196 - InsertUnaryOp Negation of i
   * 103 Weak Mutation 1150: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable that_value -> FULL
   * 104 Weak Mutation 1149: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable that_value -> this_no_entry_value
   * 105 Weak Mutation 1148: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable that_value -> FREE
   * 106 Weak Mutation 1147: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp IINC -1 this_value
   * 107 Weak Mutation 1146: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp IINC 1 this_value
   * 108 Weak Mutation 1145: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp Negation of this_value
   * 109 Weak Mutation 1143: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable this_value -> that_no_entry_value
   * 110 Weak Mutation 1142: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable this_value -> REMOVED
   * 111 Weak Mutation 1141: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable this_value -> FULL
   * 112 Weak Mutation 1140: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable this_value -> this_no_entry_value
   * 113 Weak Mutation 1139: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable this_value -> FREE
   * 114 Weak Mutation 1138: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1199 - InsertUnaryOp IINC -1 i
   * 115 Weak Mutation 1137: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1199 - InsertUnaryOp IINC 1 i
   * 116 Weak Mutation 1136: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1199 - InsertUnaryOp Negation of i
   * 117 Weak Mutation 1153: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable that_value -> that_no_entry_value
   * 118 Weak Mutation 1152: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable that_value -> REMOVED
   * 119 Weak Mutation 1155: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp IINC 1 that_value
   * 120 Weak Mutation 1154: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp Negation of that_value
   * 121 Weak Mutation 1156: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp IINC -1 that_value
   * 122 Weak Mutation 1158: gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceComparisonOperator == -> -2
   * 123 gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 124 gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 125 gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 126 gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 127 gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 128 gnu.trove.map.hash.TCharByteHashMap.equals(Ljava/lang/Object;)Z: I84 Branch 78 IF_ICMPEQ L1200 - true
   * 129 gnu.trove.map.hash.TCharByteHashMap.get(C)B: I9 Branch 44 IFGE L253 - true
   */

  @Test
  public void test39()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = 'z';
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      boolean boolean0 = tCharByteHashMap0.equals((Object) tCharByteHashMap0);
      assertEquals("{z=-1, \u0000=0}", tCharByteHashMap0.toString());
      assertEquals(true, boolean0);
      assertEquals(23, tCharByteHashMap0.capacity());
      assertEquals(2, tCharByteHashMap0.size());
  }

  //Test case number: 40
  /*
   * 94 covered goals:
   * 1 Weak Mutation 1218: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - ReplaceBitwiseOperator ^ -> |
   * 2 Weak Mutation 439: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - ReplaceVariable value -> FREE
   * 3 Weak Mutation 509: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - ReplaceVariable value -> previous
   * 4 Weak Mutation 507: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - ReplaceVariable value -> FREE
   * 5 Weak Mutation 521: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:225 - ReplaceVariable previous -> value
   * 6 Weak Mutation 1221: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> /
   * 7 Weak Mutation 1220: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> %
   * 8 Weak Mutation 1223: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1222 - InsertUnaryOp Negation of hashcode
   * 9 Weak Mutation 1222: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> *
   * 10 Weak Mutation 1217: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - ReplaceBitwiseOperator ^ -> &
   * 11 Weak Mutation 1216: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - DeleteStatement: hash(I)I
   * 12 Weak Mutation 1219: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> -
   * 13 Weak Mutation 1225: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1222 - InsertUnaryOp IINC -1 hashcode
   * 14 Weak Mutation 1224: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1222 - InsertUnaryOp IINC 1 hashcode
   * 15 Weak Mutation 1181: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1214 - ReplaceConstant - 0 -> 1
   * 16 Weak Mutation 1182: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1215 - DeleteField: _states[B
   * 17 Weak Mutation 1183: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1216 - ReplaceVariable _values -> _states
   * 18 Weak Mutation 1187: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1216 - InsertUnaryOp IINC 1 i
   * 19 Weak Mutation 1186: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1216 - InsertUnaryOp Negation of i
   * 20 Weak Mutation 1185: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1216 - ReplaceVariable i -> hashcode
   * 21 Weak Mutation 1184: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1216 - DeleteField: _values[B
   * 22 Weak Mutation 1191: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1216 - ReplaceComparisonOperator <= -> <
   * 23 Weak Mutation 1189: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1216 - ReplaceVariable i -> hashcode
   * 24 Weak Mutation 1188: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1216 - InsertUnaryOp IINC -1 i
   * 25 Weak Mutation 1195: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1217 - InsertUnaryOp Negation of i
   * 26 Weak Mutation 1194: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1217 - ReplaceVariable i -> hashcode
   * 27 Weak Mutation 1192: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1216 - ReplaceComparisonOperator <= -> -1
   * 28 Weak Mutation 1199: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1217 - ReplaceComparisonOperator != -> ==
   * 29 Weak Mutation 1198: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1217 - ReplaceConstant - 1 -> 0
   * 30 Weak Mutation 1197: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1217 - InsertUnaryOp IINC -1 i
   * 31 Weak Mutation 1196: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1217 - InsertUnaryOp IINC 1 i
   * 32 Weak Mutation 1202: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - InsertUnaryOp IINC 1 hashcode
   * 33 Weak Mutation 1203: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - InsertUnaryOp IINC -1 hashcode
   * 34 Weak Mutation 1200: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - ReplaceVariable hashcode -> i
   * 35 Weak Mutation 1201: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - InsertUnaryOp Negation of hashcode
   * 36 Weak Mutation 1206: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - InsertUnaryOp Negation of i
   * 37 Weak Mutation 1207: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - InsertUnaryOp IINC 1 i
   * 38 Weak Mutation 1204: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - DeleteField: _set[C
   * 39 Weak Mutation 1205: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - ReplaceVariable i -> hashcode
   * 40 Weak Mutation 1210: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - ReplaceVariable _values -> _states
   * 41 Weak Mutation 1211: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - DeleteField: _values[B
   * 42 Weak Mutation 1208: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - InsertUnaryOp IINC -1 i
   * 43 Weak Mutation 1209: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - DeleteStatement: hash(I)I
   * 44 Weak Mutation 1214: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - InsertUnaryOp IINC 1 i
   * 45 Weak Mutation 1215: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - InsertUnaryOp IINC -1 i
   * 46 Weak Mutation 1212: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - ReplaceVariable i -> hashcode
   * 47 Weak Mutation 1213: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - InsertUnaryOp Negation of i
   * 48 Weak Mutation 1221: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> /
   * 49 Weak Mutation 1220: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> %
   * 50 Weak Mutation 1223: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1222 - InsertUnaryOp Negation of hashcode
   * 51 Weak Mutation 1222: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> *
   * 52 Weak Mutation 1217: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - ReplaceBitwiseOperator ^ -> &
   * 53 Weak Mutation 1216: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - DeleteStatement: hash(I)I
   * 54 Weak Mutation 1219: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> -
   * 55 Weak Mutation 1218: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - ReplaceBitwiseOperator ^ -> |
   * 56 Weak Mutation 1225: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1222 - InsertUnaryOp IINC -1 hashcode
   * 57 Weak Mutation 1224: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1222 - InsertUnaryOp IINC 1 hashcode
   * 58 Weak Mutation 1181: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1214 - ReplaceConstant - 0 -> 1
   * 59 Weak Mutation 1182: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1215 - DeleteField: _states[B
   * 60 Weak Mutation 1183: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1216 - ReplaceVariable _values -> _states
   * 61 Weak Mutation 1187: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1216 - InsertUnaryOp IINC 1 i
   * 62 Weak Mutation 1186: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1216 - InsertUnaryOp Negation of i
   * 63 Weak Mutation 1185: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1216 - ReplaceVariable i -> hashcode
   * 64 Weak Mutation 1184: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1216 - DeleteField: _values[B
   * 65 Weak Mutation 1191: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1216 - ReplaceComparisonOperator <= -> <
   * 66 Weak Mutation 1189: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1216 - ReplaceVariable i -> hashcode
   * 67 Weak Mutation 1188: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1216 - InsertUnaryOp IINC -1 i
   * 68 Weak Mutation 1195: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1217 - InsertUnaryOp Negation of i
   * 69 Weak Mutation 1194: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1217 - ReplaceVariable i -> hashcode
   * 70 Weak Mutation 1192: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1216 - ReplaceComparisonOperator <= -> -1
   * 71 Weak Mutation 1199: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1217 - ReplaceComparisonOperator != -> ==
   * 72 Weak Mutation 1198: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1217 - ReplaceConstant - 1 -> 0
   * 73 Weak Mutation 1197: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1217 - InsertUnaryOp IINC -1 i
   * 74 Weak Mutation 1196: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1217 - InsertUnaryOp IINC 1 i
   * 75 Weak Mutation 1202: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - InsertUnaryOp IINC 1 hashcode
   * 76 Weak Mutation 1203: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - InsertUnaryOp IINC -1 hashcode
   * 77 Weak Mutation 1200: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - ReplaceVariable hashcode -> i
   * 78 Weak Mutation 1201: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - InsertUnaryOp Negation of hashcode
   * 79 Weak Mutation 1206: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - InsertUnaryOp Negation of i
   * 80 Weak Mutation 1207: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - InsertUnaryOp IINC 1 i
   * 81 Weak Mutation 1204: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - DeleteField: _set[C
   * 82 Weak Mutation 1205: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - ReplaceVariable i -> hashcode
   * 83 Weak Mutation 1210: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - ReplaceVariable _values -> _states
   * 84 Weak Mutation 1211: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - DeleteField: _values[B
   * 85 Weak Mutation 1208: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - InsertUnaryOp IINC -1 i
   * 86 Weak Mutation 1209: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - DeleteStatement: hash(I)I
   * 87 Weak Mutation 1214: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - InsertUnaryOp IINC 1 i
   * 88 Weak Mutation 1215: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - InsertUnaryOp IINC -1 i
   * 89 Weak Mutation 1212: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - ReplaceVariable i -> hashcode
   * 90 Weak Mutation 1213: gnu.trove.map.hash.TCharByteHashMap.hashCode()I:1218 - InsertUnaryOp Negation of i
   * 91 gnu.trove.map.hash.TCharByteHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 92 gnu.trove.map.hash.TCharByteHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 93 gnu.trove.map.hash.TCharByteHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   * 94 gnu.trove.map.hash.TCharByteHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - false
   */

  @Test
  public void test40()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = 'S';
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)112;
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      int int0 = tCharByteHashMap0.hashCode();
      assertEquals(35, int0);
      assertEquals("{S=112, \u0000=0}", tCharByteHashMap0.toString());
      assertEquals(2, tCharByteHashMap0.size());
  }

  //Test case number: 41
  /*
   * 57 covered goals:
   * 1 Weak Mutation 1597: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1234 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 2 Weak Mutation 1596: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1234 - ReplaceConstant - ,  -> 
   * 3 Weak Mutation 1595: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1234 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 4 gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z: I4 Branch 115 IFEQ L1233 - true
   * 5 Weak Mutation 487: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:214 - ReplaceComparisonOperator >= -> ==
   * 6 Weak Mutation 895: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:418 - DeleteField: _states[B
   * 7 Weak Mutation 925: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:426 - ReplaceConstant - 1 -> 0
   * 8 Weak Mutation 922: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - DeleteStatement: execute(CB)Z
   * 9 Weak Mutation 923: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - ReplaceComparisonOperator != -> ==
   * 10 Weak Mutation 920: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp IINC 1 i
   * 11 Weak Mutation 921: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp IINC -1 i
   * 12 Weak Mutation 918: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - ReplaceVariable values -> states
   * 13 Weak Mutation 919: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp Negation of i
   * 14 Weak Mutation 916: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp IINC -1 i
   * 15 Weak Mutation 917: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - ReplaceVariable values -> _states
   * 16 Weak Mutation 914: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp Negation of i
   * 17 Weak Mutation 915: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp IINC 1 i
   * 18 Weak Mutation 912: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - ReplaceComparisonOperator != -> ==
   * 19 Weak Mutation 911: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - ReplaceConstant - 1 -> 0
   * 20 Weak Mutation 910: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp IINC -1 i
   * 21 Weak Mutation 909: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp IINC 1 i
   * 22 Weak Mutation 908: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - InsertUnaryOp Negation of i
   * 23 Weak Mutation 907: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:422 - ReplaceVariable states -> values
   * 24 Weak Mutation 905: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:421 - ReplaceComparisonOperator <= -> -1
   * 25 Weak Mutation 904: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:421 - ReplaceComparisonOperator <= -> <
   * 26 Weak Mutation 902: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:421 - InsertUnaryOp IINC -1 i
   * 27 Weak Mutation 901: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:421 - InsertUnaryOp IINC 1 i
   * 28 Weak Mutation 900: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:421 - InsertUnaryOp Negation of i
   * 29 Weak Mutation 898: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:420 - DeleteField: _values[B
   * 30 Weak Mutation 897: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:420 - ReplaceVariable _values -> _states
   * 31 Weak Mutation 896: gnu.trove.map.hash.TCharByteHashMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:419 - DeleteField: _set[C
   * 32 Weak Mutation 1229: gnu.trove.map.hash.TCharByteHashMap.toString()Ljava/lang/String;:1242 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 33 Weak Mutation 1228: gnu.trove.map.hash.TCharByteHashMap.toString()Ljava/lang/String;:1242 - ReplaceConstant - } -> 
   * 34 Weak Mutation 1230: gnu.trove.map.hash.TCharByteHashMap.toString()Ljava/lang/String;:1243 - DeleteStatement: toString()Ljava/lang/String;
   * 35 Weak Mutation 1227: gnu.trove.map.hash.TCharByteHashMap.toString()Ljava/lang/String;:1230 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z
   * 36 Weak Mutation 1226: gnu.trove.map.hash.TCharByteHashMap.toString()Ljava/lang/String;:1229 - ReplaceConstant - { -> 
   * 37 Weak Mutation 1608: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1238 - InsertUnaryOp IINC 1 value
   * 38 Weak Mutation 1609: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1238 - InsertUnaryOp IINC -1 value
   * 39 Weak Mutation 1610: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1238 - DeleteStatement: append(I)Ljava/lang/StringBuilder;
   * 40 Weak Mutation 1611: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1239 - ReplaceConstant - 1 -> 0
   * 41 Weak Mutation 1600: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1236 - InsertUnaryOp IINC 1 key
   * 42 Weak Mutation 1601: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1236 - InsertUnaryOp IINC -1 key
   * 43 Weak Mutation 1602: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1236 - DeleteStatement: append(C)Ljava/lang/StringBuilder;
   * 44 Weak Mutation 1603: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1237 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 45 Weak Mutation 1604: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1237 - ReplaceConstant - = -> 
   * 46 Weak Mutation 1605: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1237 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 47 Weak Mutation 1606: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1238 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 48 Weak Mutation 1607: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1238 - InsertUnaryOp Negation of value
   * 49 Weak Mutation 1599: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1236 - InsertUnaryOp Negation of key
   * 50 Weak Mutation 1598: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1236 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 51 Weak Mutation 1594: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1233 - ReplaceConstant - 0 -> 1
   * 52 Weak Mutation 1593: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1233 - ReplaceComparisonOperator == -> !=
   * 53 Weak Mutation 1592: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1233 - DeleteField: firstZ
   * 54 Weak Mutation 1591: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1233 - InsertUnaryOp Negation
   * 55 Weak Mutation 1597: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1234 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 56 Weak Mutation 1596: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1234 - ReplaceConstant - ,  -> 
   * 57 Weak Mutation 1595: gnu.trove.map.hash.TCharByteHashMap$1.execute(CB)Z:1234 - DeleteField: val$bufLjava/lang/StringBuilder;
   */

  @Test
  public void test41()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((int) '1', (-1.0F), 'l', (byte) (-71));
      char[] charArray0 = new char[8];
      charArray0[0] = '1';
      TCharByteHashMap tCharByteHashMap1 = new TCharByteHashMap(charArray0, tCharByteHashMap0._states);
      String string0 = tCharByteHashMap1.toString();
      assertEquals(2, tCharByteHashMap1.size());
      assertNotNull(string0);
      assertEquals("{1=0, \u0000=0}", string0);
  }

  //Test case number: 42
  /*
   * 64 covered goals:
   * 1 Weak Mutation 1231: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1250 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 1232: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1250 - DeleteStatement: writeByte(I)V
   * 3 Weak Mutation 1236: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - DeleteField: _sizeI
   * 4 Weak Mutation 1237: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - DeleteStatement: writeInt(I)V
   * 5 Weak Mutation 1233: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - InsertUnaryOp Negation
   * 6 Weak Mutation 1234: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - InsertUnaryOp +1
   * 7 Weak Mutation 1235: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - InsertUnaryOp -1
   * 8 Weak Mutation 1238: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - DeleteField: _states[B
   * 9 Weak Mutation 1239: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - InsertUnaryOp Negation of i
   * 10 Weak Mutation 1244: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - ReplaceComparisonOperator <= -> -1
   * 11 Weak Mutation 1240: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - InsertUnaryOp IINC 1 i
   * 12 Weak Mutation 1241: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - InsertUnaryOp IINC -1 i
   * 13 Weak Mutation 1243: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - ReplaceComparisonOperator <= -> <
   * 14 Weak Mutation 1245: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - DeleteField: _states[B
   * 15 Weak Mutation 1246: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - InsertUnaryOp Negation of i
   * 16 Weak Mutation 1247: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - InsertUnaryOp IINC 1 i
   * 17 Weak Mutation 1250: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - ReplaceComparisonOperator != -> ==
   * 18 Weak Mutation 1249: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - ReplaceConstant - 1 -> 0
   * 19 Weak Mutation 1248: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - InsertUnaryOp IINC -1 i
   * 20 Weak Mutation 1255: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - DeleteStatement: writeChar(I)V
   * 21 Weak Mutation 1254: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - InsertUnaryOp IINC -1 i
   * 22 Weak Mutation 1253: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - InsertUnaryOp IINC 1 i
   * 23 Weak Mutation 1252: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - InsertUnaryOp Negation of i
   * 24 Weak Mutation 1251: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - DeleteField: _set[C
   * 25 Weak Mutation 1261: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - DeleteStatement: writeByte(I)V
   * 26 Weak Mutation 1260: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - InsertUnaryOp IINC -1 i
   * 27 Weak Mutation 1259: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - InsertUnaryOp IINC 1 i
   * 28 Weak Mutation 1258: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - InsertUnaryOp Negation of i
   * 29 Weak Mutation 1257: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - DeleteField: _values[B
   * 30 Weak Mutation 1256: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - ReplaceVariable _values -> _states
   * 31 gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - true
   * 32 gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - false
   * 33 gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - true
   * 34 gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - false
   * 35 Weak Mutation 1231: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1250 - ReplaceConstant - 0 -> 1
   * 36 Weak Mutation 1236: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - DeleteField: _sizeI
   * 37 Weak Mutation 1237: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - DeleteStatement: writeInt(I)V
   * 38 Weak Mutation 1238: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - DeleteField: _states[B
   * 39 Weak Mutation 1239: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - InsertUnaryOp Negation of i
   * 40 Weak Mutation 1232: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1250 - DeleteStatement: writeByte(I)V
   * 41 Weak Mutation 1233: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - InsertUnaryOp Negation
   * 42 Weak Mutation 1234: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - InsertUnaryOp +1
   * 43 Weak Mutation 1235: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - InsertUnaryOp -1
   * 44 Weak Mutation 1244: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - ReplaceComparisonOperator <= -> -1
   * 45 Weak Mutation 1245: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - DeleteField: _states[B
   * 46 Weak Mutation 1246: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - InsertUnaryOp Negation of i
   * 47 Weak Mutation 1247: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - InsertUnaryOp IINC 1 i
   * 48 Weak Mutation 1240: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - InsertUnaryOp IINC 1 i
   * 49 Weak Mutation 1241: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - InsertUnaryOp IINC -1 i
   * 50 Weak Mutation 1243: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - ReplaceComparisonOperator <= -> <
   * 51 Weak Mutation 1255: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - DeleteStatement: writeChar(I)V
   * 52 Weak Mutation 1254: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - InsertUnaryOp IINC -1 i
   * 53 Weak Mutation 1253: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - InsertUnaryOp IINC 1 i
   * 54 Weak Mutation 1252: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - InsertUnaryOp Negation of i
   * 55 Weak Mutation 1251: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - DeleteField: _set[C
   * 56 Weak Mutation 1250: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - ReplaceComparisonOperator != -> ==
   * 57 Weak Mutation 1249: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - ReplaceConstant - 1 -> 0
   * 58 Weak Mutation 1248: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - InsertUnaryOp IINC -1 i
   * 59 Weak Mutation 1261: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - DeleteStatement: writeByte(I)V
   * 60 Weak Mutation 1260: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - InsertUnaryOp IINC -1 i
   * 61 Weak Mutation 1259: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - InsertUnaryOp IINC 1 i
   * 62 Weak Mutation 1258: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - InsertUnaryOp Negation of i
   * 63 Weak Mutation 1257: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - DeleteField: _values[B
   * 64 Weak Mutation 1256: gnu.trove.map.hash.TCharByteHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - ReplaceVariable _values -> _states
   */

  @Test
  public void test42()  throws Throwable  {
      char[] charArray0 = new char[8];
      byte[] byteArray0 = new byte[9];
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tCharByteHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(23, tCharByteHashMap0.capacity());
      assertEquals(1, tCharByteHashMap0.size());
      assertEquals("{\u0000=0}", tCharByteHashMap0.toString());
  }

  //Test case number: 43
  /*
   * 2 covered goals:
   * 1 Weak Mutation 1262: gnu.trove.map.hash.TCharByteHashMap.readExternal(Ljava/io/ObjectInput;)V:1271 - DeleteStatement: readByte()B
   * 2 Weak Mutation 1262: gnu.trove.map.hash.TCharByteHashMap.readExternal(Ljava/io/ObjectInput;)V:1271 - DeleteStatement: readByte()B
   */

  @Test
  public void test43()  throws Throwable  {
      char[] charArray0 = new char[8];
      byte[] byteArray0 = new byte[6];
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      // Undeclared exception!
      try {
        tCharByteHashMap0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 44
  /*
   * 90 covered goals:
   * 1 gnu.trove.map.hash.TCharByteHashMap$TValueView.<init>(Lgnu/trove/map/hash/TCharByteHashMap;)V: root-Branch
   * 2 gnu.trove.map.hash.TCharByteHashMap.valueCollection()Lgnu/trove/TByteCollection;: root-Branch
   * 3 Weak Mutation 279: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:118 - ReplaceVariable keys -> _set
   * 4 Weak Mutation 283: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - ReplaceVariable i -> size
   * 5 Weak Mutation 282: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 281: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:118 - DeleteStatement: min(II)I
   * 7 Weak Mutation 280: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:118 - ReplaceVariable values -> _states
   * 8 Weak Mutation 287: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - ReplaceVariable size -> i
   * 9 Weak Mutation 286: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - InsertUnaryOp IINC -1 i
   * 10 Weak Mutation 285: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - InsertUnaryOp IINC 1 i
   * 11 Weak Mutation 284: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - InsertUnaryOp Negation of i
   * 12 Weak Mutation 305: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - ReplaceVariable i -> size
   * 13 Weak Mutation 304: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:120 - DeleteStatement: put(CB)B
   * 14 Weak Mutation 288: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - InsertUnaryOp Negation of size
   * 15 Weak Mutation 289: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - InsertUnaryOp IINC 1 size
   * 16 Weak Mutation 290: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - InsertUnaryOp IINC -1 size
   * 17 Weak Mutation 292: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - ReplaceComparisonOperator >= -> >
   * 18 Weak Mutation 293: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:119 - ReplaceComparisonOperator >= -> -1
   * 19 Weak Mutation 294: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:120 - ReplaceVariable keys -> _set
   * 20 Weak Mutation 295: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:120 - ReplaceVariable i -> size
   * 21 Weak Mutation 296: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:120 - InsertUnaryOp Negation of i
   * 22 Weak Mutation 297: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:120 - InsertUnaryOp IINC 1 i
   * 23 Weak Mutation 298: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:120 - InsertUnaryOp IINC -1 i
   * 24 Weak Mutation 299: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:120 - ReplaceVariable values -> _states
   * 25 Weak Mutation 300: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:120 - ReplaceVariable i -> size
   * 26 Weak Mutation 301: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:120 - InsertUnaryOp Negation of i
   * 27 Weak Mutation 302: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:120 - InsertUnaryOp IINC 1 i
   * 28 Weak Mutation 303: gnu.trove.map.hash.TCharByteHashMap.<init>([C[B)V:120 - InsertUnaryOp IINC -1 i
   * 29 Weak Mutation 356: gnu.trove.map.hash.TCharByteHashMap.setUp(I)I:162 - InsertUnaryOp IINC 1 initialCapacity
   * 30 Weak Mutation 357: gnu.trove.map.hash.TCharByteHashMap.setUp(I)I:162 - InsertUnaryOp IINC -1 initialCapacity
   * 31 Weak Mutation 358: gnu.trove.map.hash.TCharByteHashMap.setUp(I)I:163 - ReplaceVariable capacity -> initialCapacity
   * 32 Weak Mutation 359: gnu.trove.map.hash.TCharByteHashMap.setUp(I)I:163 - InsertUnaryOp Negation of capacity
   * 33 Weak Mutation 355: gnu.trove.map.hash.TCharByteHashMap.setUp(I)I:162 - InsertUnaryOp Negation of initialCapacity
   * 34 Weak Mutation 364: gnu.trove.map.hash.TCharByteHashMap.setUp(I)I:164 - InsertUnaryOp IINC 1 capacity
   * 35 Weak Mutation 365: gnu.trove.map.hash.TCharByteHashMap.setUp(I)I:164 - InsertUnaryOp IINC -1 capacity
   * 36 Weak Mutation 360: gnu.trove.map.hash.TCharByteHashMap.setUp(I)I:163 - InsertUnaryOp IINC 1 capacity
   * 37 Weak Mutation 361: gnu.trove.map.hash.TCharByteHashMap.setUp(I)I:163 - InsertUnaryOp IINC -1 capacity
   * 38 Weak Mutation 362: gnu.trove.map.hash.TCharByteHashMap.setUp(I)I:164 - ReplaceVariable capacity -> initialCapacity
   * 39 Weak Mutation 363: gnu.trove.map.hash.TCharByteHashMap.setUp(I)I:164 - InsertUnaryOp Negation of capacity
   * 40 Weak Mutation 440: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - ReplaceVariable value -> FULL
   * 41 Weak Mutation 441: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - ReplaceVariable value -> REMOVED
   * 42 Weak Mutation 442: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - InsertUnaryOp Negation of value
   * 43 Weak Mutation 443: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - InsertUnaryOp IINC 1 value
   * 44 Weak Mutation 444: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - InsertUnaryOp IINC -1 value
   * 45 Weak Mutation 445: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - InsertUnaryOp Negation of index
   * 46 Weak Mutation 446: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - InsertUnaryOp IINC 1 index
   * 47 Weak Mutation 447: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - InsertUnaryOp IINC -1 index
   * 48 Weak Mutation 432: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:197 - InsertUnaryOp Negation of key
   * 49 Weak Mutation 433: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:197 - InsertUnaryOp IINC 1 key
   * 50 Weak Mutation 434: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:197 - InsertUnaryOp IINC -1 key
   * 51 Weak Mutation 435: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:197 - DeleteStatement: insertKey(C)I
   * 52 Weak Mutation 436: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - InsertUnaryOp Negation of key
   * 53 Weak Mutation 437: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - InsertUnaryOp IINC 1 key
   * 54 Weak Mutation 438: gnu.trove.map.hash.TCharByteHashMap.put(CB)B:198 - InsertUnaryOp IINC -1 key
   * 55 Weak Mutation 508: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - ReplaceVariable value -> FULL
   * 56 Weak Mutation 510: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - ReplaceVariable value -> REMOVED
   * 57 Weak Mutation 511: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - InsertUnaryOp Negation of value
   * 58 Weak Mutation 504: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - InsertUnaryOp Negation of index
   * 59 Weak Mutation 505: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - InsertUnaryOp IINC 1 index
   * 60 Weak Mutation 506: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - InsertUnaryOp IINC -1 index
   * 61 Weak Mutation 500: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:216 - InsertUnaryOp IINC -1 index
   * 62 Weak Mutation 501: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:217 - ReplaceConstant - 0 -> 1
   * 63 Weak Mutation 502: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - ReplaceVariable _values -> _states
   * 64 Weak Mutation 503: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - DeleteField: _values[B
   * 65 Weak Mutation 496: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:216 - ReplaceVariable _values -> _states
   * 66 Weak Mutation 497: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:216 - DeleteField: _values[B
   * 67 Weak Mutation 498: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:216 - InsertUnaryOp Negation of index
   * 68 Weak Mutation 499: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:216 - InsertUnaryOp IINC 1 index
   * 69 Weak Mutation 492: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:215 - ReplaceArithmeticOperator - -> +
   * 70 Weak Mutation 495: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:215 - ReplaceArithmeticOperator - -> *
   * 71 Weak Mutation 494: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:215 - ReplaceArithmeticOperator - -> /
   * 72 Weak Mutation 489: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:214 - ReplaceComparisonOperator >= -> -1
   * 73 Weak Mutation 488: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:214 - ReplaceComparisonOperator >= -> >
   * 74 Weak Mutation 491: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:215 - ReplaceConstant - 1 -> 0
   * 75 Weak Mutation 490: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:215 - InsertUnaryOp Negation of index
   * 76 Weak Mutation 485: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:213 - ReplaceConstant - 1 -> 0
   * 77 Weak Mutation 486: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:214 - InsertUnaryOp Negation of index
   * 78 Weak Mutation 481: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:212 - ReplaceVariable no_entry_value -> FULL
   * 79 Weak Mutation 483: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:212 - InsertUnaryOp Negation
   * 80 Weak Mutation 482: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:212 - ReplaceVariable no_entry_value -> REMOVED
   * 81 Weak Mutation 516: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:222 - InsertUnaryOp Negation
   * 82 Weak Mutation 517: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:222 - DeleteField: consumeFreeSlotZ
   * 83 Weak Mutation 518: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:222 - DeleteStatement: postInsertHook(Z)V
   * 84 Weak Mutation 512: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - InsertUnaryOp IINC 1 value
   * 85 Weak Mutation 513: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:219 - InsertUnaryOp IINC -1 value
   * 86 Weak Mutation 514: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:221 - InsertUnaryOp Negation of isNewMapping
   * 87 Weak Mutation 515: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:221 - ReplaceComparisonOperator == -> !=
   * 88 Weak Mutation 520: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:225 - ReplaceVariable previous -> FULL
   * 89 Weak Mutation 522: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:225 - ReplaceVariable previous -> REMOVED
   * 90 Weak Mutation 523: gnu.trove.map.hash.TCharByteHashMap.doPut(CBI)B:225 - InsertUnaryOp Negation of previous
   */

  @Test
  public void test44()  throws Throwable  {
      char[] charArray0 = new char[8];
      byte[] byteArray0 = new byte[6];
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      tCharByteHashMap0.valueCollection();
      assertEquals(17, tCharByteHashMap0.capacity());
      assertEquals("{\u0000=0}", tCharByteHashMap0.toString());
      assertEquals(1, tCharByteHashMap0.size());
  }
}

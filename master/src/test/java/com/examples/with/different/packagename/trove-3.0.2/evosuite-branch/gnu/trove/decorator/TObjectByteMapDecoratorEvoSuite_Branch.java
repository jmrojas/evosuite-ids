/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TObjectByteMapDecorator;
import gnu.trove.map.TObjectByteMap;
import gnu.trove.map.custom_hash.TObjectByteCustomHashMap;
import gnu.trove.map.hash.TObjectByteHashMap;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TObjectByteMapDecoratorEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 gnu.trove.decorator.TObjectByteMapDecorator$1$1.<init>(Lgnu/trove/decorator/TObjectByteMapDecorator$1;)V: root-Branch
   * 2 gnu.trove.decorator.TObjectByteMapDecorator.size()I: root-Branch
   * 3 gnu.trove.decorator.TObjectByteMapDecorator.entrySet()Ljava/util/Set;: root-Branch
   * 4 gnu.trove.decorator.TObjectByteMapDecorator.<init>()V: root-Branch
   * 5 gnu.trove.decorator.TObjectByteMapDecorator.<init>(Lgnu/trove/map/TObjectByteMap;)V: root-Branch
   * 6 gnu.trove.decorator.TObjectByteMapDecorator$1.<init>(Lgnu/trove/decorator/TObjectByteMapDecorator;)V: root-Branch
   * 7 gnu.trove.decorator.TObjectByteMapDecorator$1.iterator()Ljava/util/Iterator;: root-Branch
   * 8 gnu.trove.decorator.TObjectByteMapDecorator.putAll(Ljava/util/Map;)V: I14 Branch 11 IFLE L297 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TObjectByteMapDecorator<Object> tObjectByteMapDecorator0 = new TObjectByteMapDecorator<Object>();
      TObjectByteHashMap<String> tObjectByteHashMap0 = new TObjectByteHashMap<String>((int) (byte)0);
      TObjectByteMapDecorator<String> tObjectByteMapDecorator1 = new TObjectByteMapDecorator<String>((TObjectByteMap<String>) tObjectByteHashMap0);
      tObjectByteMapDecorator0.putAll((Map<?, ? extends Byte>) tObjectByteMapDecorator1);
      assertEquals("{}", tObjectByteMapDecorator1.toString());
  }

  //Test case number: 1
  /*
   * 13 covered goals:
   * 1 gnu.trove.decorator.TObjectByteMapDecorator$1$1.next()Ljava/util/Map$Entry;: root-Branch
   * 2 gnu.trove.decorator.TObjectByteMapDecorator.unwrapValue(Ljava/lang/Object;)B: root-Branch
   * 3 gnu.trove.decorator.TObjectByteMapDecorator.wrapValue(B)Ljava/lang/Byte;: root-Branch
   * 4 gnu.trove.decorator.TObjectByteMapDecorator$1$1$1.getKey()Ljava/lang/Object;: root-Branch
   * 5 gnu.trove.decorator.TObjectByteMapDecorator$1$1$1.getValue()Ljava/lang/Byte;: root-Branch
   * 6 gnu.trove.decorator.TObjectByteMapDecorator$1$1$1.<init>(Lgnu/trove/decorator/TObjectByteMapDecorator$1$1;Ljava/lang/Byte;Ljava/lang/Object;)V: root-Branch
   * 7 gnu.trove.decorator.TObjectByteMapDecorator.put(Ljava/lang/Object;Ljava/lang/Byte;)Ljava/lang/Byte;: I3 Branch 5 IFNONNULL L97 - true
   * 8 gnu.trove.decorator.TObjectByteMapDecorator.putAll(Ljava/util/Map;)V: I14 Branch 11 IFLE L297 - false
   * 9 gnu.trove.decorator.TObjectByteMapDecorator$1$1.<init>(Lgnu/trove/decorator/TObjectByteMapDecorator$1;)V: root-Branch
   * 10 gnu.trove.decorator.TObjectByteMapDecorator.size()I: root-Branch
   * 11 gnu.trove.decorator.TObjectByteMapDecorator.entrySet()Ljava/util/Set;: root-Branch
   * 12 gnu.trove.decorator.TObjectByteMapDecorator$1.<init>(Lgnu/trove/decorator/TObjectByteMapDecorator;)V: root-Branch
   * 13 gnu.trove.decorator.TObjectByteMapDecorator$1.iterator()Ljava/util/Iterator;: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TObjectByteMapDecorator<Object> tObjectByteMapDecorator0 = new TObjectByteMapDecorator<Object>();
      TObjectByteHashMap<String> tObjectByteHashMap0 = new TObjectByteHashMap<String>((int) (byte)0);
      TObjectByteMapDecorator<String> tObjectByteMapDecorator1 = new TObjectByteMapDecorator<String>((TObjectByteMap<String>) tObjectByteHashMap0);
      tObjectByteMapDecorator1.put("px", (Byte) (byte)0);
      // Undeclared exception!
      try {
        tObjectByteMapDecorator0.putAll((Map<?, ? extends Byte>) tObjectByteMapDecorator1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectByteMapDecorator.readExternal(Ljava/io/ObjectInput;)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TObjectByteHashMap<Byte> tObjectByteHashMap0 = new TObjectByteHashMap<Byte>(0);
      TObjectByteMapDecorator<Byte> tObjectByteMapDecorator0 = new TObjectByteMapDecorator<Byte>((TObjectByteMap<Byte>) tObjectByteHashMap0);
      // Undeclared exception!
      try {
        tObjectByteMapDecorator0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectByteMapDecorator.getMap()Lgnu/trove/map/TObjectByteMap;: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TObjectByteMapDecorator<String> tObjectByteMapDecorator0 = new TObjectByteMapDecorator<String>();
      TObjectByteMap<String> tObjectByteMap0 = tObjectByteMapDecorator0.getMap();
      assertNull(tObjectByteMap0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectByteMapDecorator.writeExternal(Ljava/io/ObjectOutput;)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TObjectByteMapDecorator<Object> tObjectByteMapDecorator0 = new TObjectByteMapDecorator<Object>();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1644);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) pipedOutputStream0);
      tObjectByteMapDecorator0.writeExternal((ObjectOutput) objectOutputStream0);
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 gnu.trove.decorator.TObjectByteMapDecorator.clear()V: root-Branch
   * 2 gnu.trove.decorator.TObjectByteMapDecorator.<init>()V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TObjectByteMapDecorator<Object> tObjectByteMapDecorator0 = new TObjectByteMapDecorator<Object>();
      // Undeclared exception!
      try {
        tObjectByteMapDecorator0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectByteMapDecorator.containsKey(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Byte> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Byte>((HashingStrategy<? super Byte>) identityHashingStrategy0, 1818, (float) 1818);
      TObjectByteMapDecorator<Byte> tObjectByteMapDecorator0 = new TObjectByteMapDecorator<Byte>((TObjectByteMap<Byte>) tObjectByteCustomHashMap0);
      boolean boolean0 = tObjectByteMapDecorator0.containsKey((Object) tObjectByteCustomHashMap0);
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectByteMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Byte;: I13 Branch 6 IF_ICMPNE L113 - false
   */

  @Test
  public void test7()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1818, (float) 1818, (byte) (-41));
      TObjectByteMapDecorator<Integer> tObjectByteMapDecorator0 = new TObjectByteMapDecorator<Integer>((TObjectByteMap<Integer>) tObjectByteCustomHashMap0);
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap1 = new TObjectByteCustomHashMap<Object>();
      tObjectByteMapDecorator0.get((Object) tObjectByteCustomHashMap1);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectByteMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Byte;: I13 Branch 7 IF_ICMPNE L140 - false
   */

  @Test
  public void test8()  throws Throwable  {
      TObjectByteHashMap<String> tObjectByteHashMap0 = new TObjectByteHashMap<String>((int) (byte)0);
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectByteMap<?>) tObjectByteHashMap0);
      TObjectByteMapDecorator<Object> tObjectByteMapDecorator0 = new TObjectByteMapDecorator<Object>((TObjectByteMap<Object>) tObjectByteCustomHashMap0);
      tObjectByteMapDecorator0.remove((Object) "");
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectByteMapDecorator.containsValue(Ljava/lang/Object;)Z: I4 Branch 8 IFEQ L253 - true
   */

  @Test
  public void test9()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1818, (float) 1818, (byte) (-41));
      TObjectByteMapDecorator<Integer> tObjectByteMapDecorator0 = new TObjectByteMapDecorator<Integer>((TObjectByteMap<Integer>) tObjectByteCustomHashMap0);
      boolean boolean0 = tObjectByteMapDecorator0.containsValue((Object) tObjectByteCustomHashMap0);
      assertEquals(false, boolean0);
  }

  //Test case number: 10
  /*
   * 3 covered goals:
   * 1 gnu.trove.decorator.TObjectByteMapDecorator.containsValue(Ljava/lang/Object;)Z: I4 Branch 8 IFEQ L253 - false
   * 2 gnu.trove.decorator.TObjectByteMapDecorator.containsValue(Ljava/lang/Object;)Z: I11 Branch 9 IFEQ L253 - false
   * 3 gnu.trove.decorator.TObjectByteMapDecorator.put(Ljava/lang/Object;Ljava/lang/Byte;)Ljava/lang/Byte;: I3 Branch 5 IFNONNULL L97 - false
   */

  @Test
  public void test10()  throws Throwable  {
      TObjectByteHashMap<String> tObjectByteHashMap0 = new TObjectByteHashMap<String>((int) (byte)0);
      TObjectByteMapDecorator<String> tObjectByteMapDecorator0 = new TObjectByteMapDecorator<String>((TObjectByteMap<String>) tObjectByteHashMap0);
      Byte byte0 = tObjectByteMapDecorator0.put("", (Byte) null);
      boolean boolean0 = tObjectByteMapDecorator0.containsValue((Object) byte0);
      assertEquals("{=0}", tObjectByteMapDecorator0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 11
  /*
   * 2 covered goals:
   * 1 gnu.trove.decorator.TObjectByteMapDecorator.containsValue(Ljava/lang/Object;)Z: I11 Branch 9 IFEQ L253 - true
   * 2 gnu.trove.decorator.TObjectByteMapDecorator.containsValue(Ljava/lang/Object;)Z: I4 Branch 8 IFEQ L253 - false
   */

  @Test
  public void test11()  throws Throwable  {
      TObjectByteHashMap<String> tObjectByteHashMap0 = new TObjectByteHashMap<String>((int) (byte)0);
      TObjectByteMapDecorator<String> tObjectByteMapDecorator0 = new TObjectByteMapDecorator<String>((TObjectByteMap<String>) tObjectByteHashMap0);
      boolean boolean0 = tObjectByteMapDecorator0.containsValue((Object) (byte)0);
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 4 covered goals:
   * 1 gnu.trove.decorator.TObjectByteMapDecorator.isEmpty()Z: I5 Branch 10 IFNE L284 - true
   * 2 gnu.trove.decorator.TObjectByteMapDecorator.unwrapValue(Ljava/lang/Object;)B: root-Branch
   * 3 gnu.trove.decorator.TObjectByteMapDecorator.wrapValue(B)Ljava/lang/Byte;: root-Branch
   * 4 gnu.trove.decorator.TObjectByteMapDecorator.put(Ljava/lang/Object;Ljava/lang/Byte;)Ljava/lang/Byte;: I3 Branch 5 IFNONNULL L97 - true
   */

  @Test
  public void test12()  throws Throwable  {
      TObjectByteHashMap<String> tObjectByteHashMap0 = new TObjectByteHashMap<String>((int) (byte)0);
      TObjectByteMapDecorator<String> tObjectByteMapDecorator0 = new TObjectByteMapDecorator<String>((TObjectByteMap<String>) tObjectByteHashMap0);
      tObjectByteMapDecorator0.put("px", (Byte) (byte)0);
      boolean boolean0 = tObjectByteMapDecorator0.isEmpty();
      assertEquals("{px=0}", tObjectByteHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 2 covered goals:
   * 1 gnu.trove.decorator.TObjectByteMapDecorator.isEmpty()Z: I5 Branch 10 IFNE L284 - false
   * 2 gnu.trove.decorator.TObjectByteMapDecorator.<init>(Lgnu/trove/map/TObjectByteMap;)V: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TObjectByteHashMap<String> tObjectByteHashMap0 = new TObjectByteHashMap<String>((int) (byte)0);
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectByteMap<?>) tObjectByteHashMap0);
      TObjectByteMapDecorator<Object> tObjectByteMapDecorator0 = new TObjectByteMapDecorator<Object>((TObjectByteMap<Object>) tObjectByteCustomHashMap0);
      boolean boolean0 = tObjectByteMapDecorator0.isEmpty();
      assertEquals(true, boolean0);
  }
}

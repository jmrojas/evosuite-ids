/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap;
import gnu.trove.map.TByteIntMap;
import gnu.trove.map.hash.TByteIntHashMap;
import gnu.trove.procedure.TByteProcedure;
import java.util.Locale;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableByteIntMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = 338;
      byte byte0 = (byte) (-2);
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(int0, (float) int0, byte0, (int) byte0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      tUnmodifiableByteIntMap0.iterator();
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap1 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap1.remove(byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = 990;
      float float0 = 0.0F;
      byte[] byteArray0 = new byte[10];
      byte byte0 = (byte)31;
      byteArray0[0] = byte0;
      byte byte1 = (byte)1;
      byteArray0[1] = byte1;
      byte byte2 = (byte)14;
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      byte byte4 = (byte)71;
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-10);
      byteArray0[5] = byte5;
      byte byte6 = (byte)116;
      byteArray0[6] = byte6;
      byte byte7 = (byte) (-32);
      byteArray0[7] = byte7;
      byte byte8 = (byte)31;
      byteArray0[8] = byte8;
      byte byte9 = (byte)0;
      byteArray0[9] = byte9;
      int[] intArray0 = new int[2];
      int int1 = (-1921);
      intArray0[0] = int1;
      int int2 = (-1129);
      intArray0[1] = int2;
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      tUnmodifiableByteIntMap0.keySet();
      TByteIntHashMap tByteIntHashMap1 = new TByteIntHashMap(int0, float0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap1 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap1);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap2 = new TUnmodifiableByteIntMap((TByteIntMap) tUnmodifiableByteIntMap1);
      byte byte10 = (byte) (-72);
      int int3 = 49;
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap2.adjustValue(byte10, int3);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = (-1);
      byte byte0 = (byte) (-124);
      int int1 = (-1189);
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(int0, (float) int0, byte0, int1);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      TByteProcedure tByteProcedure0 = null;
      boolean boolean0 = tUnmodifiableByteIntMap0.forEachKey(tByteProcedure0);
      int int2 = 205759;
      Object object0 = null;
      boolean boolean1 = tUnmodifiableByteIntMap0.equals(object0);
      assertFalse(boolean1 == boolean0);
      
      TByteIntHashMap tByteIntHashMap1 = new TByteIntHashMap(int2);
      byte byte1 = (byte)16;
      int int3 = 1;
      tByteIntHashMap1.adjustValue(byte1, int3);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap1 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap1);
      byte[] byteArray0 = tUnmodifiableByteIntMap1.keys(tByteIntHashMap1._states);
      assertNotNull(byteArray0);
      
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap2 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap1);
      byte byte2 = (byte)107;
      tUnmodifiableByteIntMap2.get(byte2);
      assertTrue(tUnmodifiableByteIntMap2.equals(tUnmodifiableByteIntMap1));
      assertTrue(tUnmodifiableByteIntMap2.equals(tUnmodifiableByteIntMap0));
  }

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byte byte0 = (byte)75;
      byteArray0[0] = byte0;
      byte byte1 = (byte)1;
      byteArray0[1] = byte1;
      byte byte2 = (byte)1;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-9);
      byteArray0[3] = byte3;
      byte byte4 = (byte)0;
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-77);
      byteArray0[5] = byte5;
      byte byte6 = (byte)126;
      byteArray0[6] = byte6;
      byte byte7 = (byte)0;
      byteArray0[7] = byte7;
      byte byte8 = (byte)1;
      byteArray0[8] = byte8;
      byte byte9 = (byte)57;
      byteArray0[9] = byte9;
      int[] intArray0 = new int[7];
      intArray0[0] = (int) byte1;
      intArray0[1] = (int) byte5;
      intArray0[2] = (int) byte6;
      intArray0[3] = (int) byte2;
      intArray0[4] = (int) byteArray0[2];
      intArray0[5] = (int) byte3;
      intArray0[6] = (int) byte6;
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      byte byte10 = (byte)1;
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap0.adjustValue(byte10, intArray0[1]);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      int[] intArray0 = new int[1];
      intArray0[0] = (int) byteArray0[0];
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      String string0 = tUnmodifiableByteIntMap0.toString();
      assertEquals("{0=0}", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = 1694;
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(int0, int0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = 25002389;
      float float0 = 0.0F;
      byte byte0 = (byte)60;
      int int1 = 217;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = byte0;
      byteArray0[1] = byte0;
      byteArray0[2] = byte0;
      byteArray0[3] = byte0;
      byte byte1 = (byte) (-72);
      byteArray0[4] = byte1;
      int[] intArray0 = new int[2];
      intArray0[0] = (int) byteArray0[1];
      intArray0[1] = (int) byteArray0[3];
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      int int2 = 1;
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap0.adjustValue(byteArray0[1], int2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = (-31);
      TByteIntMap tByteIntMap0 = null;
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = null;
      try {
        tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap(tByteIntMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TByteIntMap tByteIntMap0 = null;
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = null;
      try {
        tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap(tByteIntMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 0;
      byte byte0 = (byte) (-105);
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(int0, (float) int0, byte0, int0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      int int1 = 0;
      int int2 = 0;
      float float0 = 0.0F;
      TByteIntHashMap tByteIntHashMap1 = new TByteIntHashMap(int2);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap1 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap1);
      tUnmodifiableByteIntMap1.keySet();
      byte byte1 = (byte)0;
      int int3 = 1306;
      TByteIntHashMap tByteIntHashMap2 = new TByteIntHashMap(int2, float0, byte1, int3);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap2 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap2);
      TByteIntHashMap tByteIntHashMap3 = null;
      try {
        tByteIntHashMap3 = new TByteIntHashMap((TByteIntMap) tByteIntHashMap2);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)61;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-88);
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-36);
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-92);
      byteArray0[4] = byte4;
      byte byte5 = (byte)0;
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-63);
      byteArray0[6] = byte6;
      byte byte7 = (byte) (-62);
      byteArray0[7] = byte7;
      int[] intArray0 = new int[10];
      intArray0[0] = (int) byteArray0[7];
      intArray0[1] = (int) byte3;
      intArray0[2] = (int) byteArray0[1];
      intArray0[3] = (int) byte7;
      intArray0[4] = (int) byteArray0[7];
      int int0 = 1236;
      intArray0[5] = int0;
      intArray0[6] = (int) byteArray0[7];
      intArray0[7] = (int) byte0;
      intArray0[8] = (int) byte6;
      intArray0[9] = (int) byte3;
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap0.putAll((TByteIntMap) tByteIntHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap();
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap1 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      int int0 = tUnmodifiableByteIntMap1.getNoEntryValue();
      tUnmodifiableByteIntMap0.containsValue(int0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap2 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      byte byte0 = (byte) (-22);
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap2.put(byte0, byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-100);
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-114);
      byteArray0[4] = byte4;
      int[] intArray0 = new int[8];
      intArray0[0] = (int) byte0;
      intArray0[1] = (int) byte1;
      intArray0[2] = (int) byte0;
      intArray0[3] = (int) byte1;
      intArray0[4] = (int) byteArray0[4];
      intArray0[5] = (int) byte2;
      intArray0[6] = (int) byteArray0[0];
      intArray0[7] = (int) byte3;
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap0.putAll((TByteIntMap) tByteIntHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte) (-39);
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte)73;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-1);
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-40);
      byteArray0[4] = byte4;
      byte byte5 = (byte)0;
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-26);
      byteArray0[6] = byte6;
      byte byte7 = (byte)0;
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((int) byte5);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      byteArray0[7] = byte7;
      byte byte8 = (byte) (-54);
      byteArray0[8] = byte8;
      int[] intArray0 = new int[1];
      intArray0[0] = (int) byte2;
      TByteIntHashMap tByteIntHashMap1 = new TByteIntHashMap(byteArray0, intArray0);
      intArray0[0] = (int) byteArray0[0];
      tUnmodifiableByteIntMap0.getNoEntryValue();
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap1 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap1);
      int int0 = 168;
      TByteIntHashMap tByteIntHashMap2 = new TByteIntHashMap(int0, int0);
      TByteIntHashMap tByteIntHashMap3 = new TByteIntHashMap((TByteIntMap) tByteIntHashMap2);
      tByteIntHashMap3.getNoEntryKey();
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap2 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap3);
      tByteIntHashMap3.tempDisableAutoCompaction();
      Locale locale0 = Locale.PRC;
      String string0 = locale0.getDisplayVariant();
      boolean boolean0 = tUnmodifiableByteIntMap2.equals((Object) string0);
      assertTrue(tUnmodifiableByteIntMap2.equals(tUnmodifiableByteIntMap0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 17;
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(int0, int0);
      TByteIntHashMap tByteIntHashMap1 = new TByteIntHashMap((TByteIntMap) tByteIntHashMap0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap1);
      byte byte0 = (byte)42;
      int int1 = 0;
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap0.put(byte0, int1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)67;
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((int) byte1);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      tUnmodifiableByteIntMap0.keys();
      byteArray0[0] = byte1;
      int[] intArray0 = new int[8];
      intArray0[0] = (int) byte1;
      int int0 = 1400;
      intArray0[1] = int0;
      intArray0[2] = (int) byteArray0[0];
      intArray0[3] = (int) byte1;
      intArray0[4] = (int) byte1;
      intArray0[5] = (int) byte1;
      intArray0[6] = (int) byte1;
      intArray0[7] = (int) byte1;
      TByteIntHashMap tByteIntHashMap1 = new TByteIntHashMap(byteArray0, intArray0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap1 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap1);
      tUnmodifiableByteIntMap0.isEmpty();
      tUnmodifiableByteIntMap1.iterator();
      TByteIntHashMap tByteIntHashMap2 = new TByteIntHashMap(byteArray0, intArray0);
      TByteIntHashMap tByteIntHashMap3 = new TByteIntHashMap((TByteIntMap) tByteIntHashMap2);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap2 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap3);
      int int1 = 1;
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap2.putIfAbsent(byte1, int1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = (-546);
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(int0, int0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      byte byte0 = (byte) (-118);
      int int1 = 1671;
      int int2 = 0;
      int[] intArray0 = new int[8];
      intArray0[0] = (int) byte0;
      intArray0[1] = int0;
      intArray0[2] = int2;
      intArray0[3] = int2;
      int int3 = 0;
      intArray0[4] = int3;
      intArray0[5] = int2;
      int int4 = 0;
      intArray0[6] = int4;
      intArray0[0] = int1;
      intArray0[1] = int2;
      int int5 = 230;
      intArray0[2] = int5;
      intArray0[3] = int0;
      intArray0[4] = int5;
      intArray0[5] = int0;
      intArray0[6] = (int) byte0;
      intArray0[7] = int1;
      intArray0[7] = (int) byte0;
      tUnmodifiableByteIntMap0.values(intArray0);
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap0.adjustOrPutValue(byte0, int1, int2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap();
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      TByteIntMap tByteIntMap0 = null;
      byte byte0 = (byte)95;
      tUnmodifiableByteIntMap0.containsKey(byte0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap1 = null;
      try {
        tUnmodifiableByteIntMap1 = new TUnmodifiableByteIntMap(tByteIntMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      int int0 = 799;
      byte byte0 = (byte)56;
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap();
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap0.adjustValue(byte0, int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TShortShortMapDecorator;
import gnu.trove.map.TShortShortMap;
import gnu.trove.map.hash.TShortShortHashMap;
import java.io.ByteArrayOutputStream;
import java.io.FileNotFoundException;
import java.io.PrintStream;
import java.io.RandomAccessFile;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Collection;
import java.util.Locale;
import java.util.Set;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

public class TShortShortMapDecoratorEvoSuite_Random {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = 1935;
      float float0 = 1843.1095F;
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(int0, float0);
      TShortShortMapDecorator tShortShortMapDecorator0 = new TShortShortMapDecorator((TShortShortMap) tShortShortHashMap0);
      Locale locale0 = Locale.JAPAN;
      Locale locale1 = null;
      // Undeclared exception!
      try {
        locale0.getDisplayName(locale1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = 1803;
      int int1 = 658;
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(int1);
      TShortShortMapDecorator tShortShortMapDecorator0 = new TShortShortMapDecorator((TShortShortMap) tShortShortHashMap0);
      TShortShortHashMap tShortShortHashMap1 = (TShortShortHashMap)tShortShortMapDecorator0.getMap();
      TShortShortHashMap tShortShortHashMap2 = new TShortShortHashMap((TShortShortMap) tShortShortHashMap1);
      TShortShortMapDecorator tShortShortMapDecorator1 = new TShortShortMapDecorator((TShortShortMap) tShortShortHashMap2);
      tShortShortMapDecorator1.entrySet();
      int int2 = 111;
      float float0 = 0.0F;
      TShortShortHashMap tShortShortHashMap3 = new TShortShortHashMap(int2, float0);
      TShortShortMapDecorator tShortShortMapDecorator2 = new TShortShortMapDecorator((TShortShortMap) tShortShortHashMap3);
      tShortShortMapDecorator2.clear();
      float float1 = (-1.0F);
      TShortShortMap tShortShortMap0 = null;
      TShortShortHashMap tShortShortHashMap4 = null;
      try {
        tShortShortHashMap4 = new TShortShortHashMap(tShortShortMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TShortShortMapDecorator tShortShortMapDecorator0 = new TShortShortMapDecorator();
      int int0 = (-499);
      ByteArrayOutputStream byteArrayOutputStream0 = null;
      try {
        byteArrayOutputStream0 = new ByteArrayOutputStream(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative initial size: -499
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          short short0 = (short)0;
          TShortShortMapDecorator tShortShortMapDecorator0 = new TShortShortMapDecorator();
          String string0 = "-w|#?lal";
          PrintStream printStream0 = null;
          try {
            printStream0 = new PrintStream(string0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.io.FilePermission\" \"-w|#?lal\" \"write\")
             // java.lang.Thread.getStackTrace(Thread.java:1567)
             // org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
             // java.io.FileOutputStream.<init>(FileOutputStream.java:203)
             // java.io.FileOutputStream.<init>(FileOutputStream.java:104)
             // java.io.PrintStream.<init>(PrintStream.java:208)
             // sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
             // sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
             // sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
             // java.lang.reflect.Constructor.newInstance(Constructor.java:525)
             // org.evosuite.testcase.ConstructorStatement$1.execute(ConstructorStatement.java:226)
             // org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:144)
             // org.evosuite.testcase.ConstructorStatement.execute(ConstructorStatement.java:188)
             // org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             // org.evosuite.testcase.TestRunnable.call(TestRunnable.java:1)
             // java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
             // java.util.concurrent.FutureTask.run(FutureTask.java:166)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
             // java.lang.Thread.run(Thread.java:722)
             //
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test4()  throws Throwable  {
      String string0 = "{";
      String string1 = "";
      TShortShortMapDecorator tShortShortMapDecorator0 = new TShortShortMapDecorator();
      short short0 = (short)0;
      Short short1 = new Short(short0);
      // Undeclared exception!
      try {
        tShortShortMapDecorator0.put(short1, short1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = 1488;
      short short0 = (short) (-708);
      short short1 = (short) (-487);
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(int0, (float) int0, short0, short1);
      TShortShortMapDecorator tShortShortMapDecorator0 = new TShortShortMapDecorator((TShortShortMap) tShortShortHashMap0);
      Set<Short> set0 = tShortShortMapDecorator0.keySet();
      assertEquals(true, set0.isEmpty());
  }

  @Test
  public void test6()  throws Throwable  {
      TShortShortMapDecorator tShortShortMapDecorator0 = new TShortShortMapDecorator();
      tShortShortMapDecorator0.keySet();
      int int0 = (-158);
      TShortShortMapDecorator tShortShortMapDecorator1 = new TShortShortMapDecorator();
      TShortShortMapDecorator tShortShortMapDecorator2 = new TShortShortMapDecorator();
      // Undeclared exception!
      try {
        tShortShortMapDecorator2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      short[] shortArray0 = new short[4];
      short short0 = (short)0;
      shortArray0[0] = short0;
      shortArray0[0] = short0;
      shortArray0[1] = short0;
      shortArray0[2] = short0;
      shortArray0[3] = short0;
      short short1 = (short)0;
      shortArray0[1] = short1;
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      TShortShortHashMap tShortShortHashMap1 = new TShortShortHashMap((TShortShortMap) tShortShortHashMap0);
      TShortShortMapDecorator tShortShortMapDecorator0 = new TShortShortMapDecorator((TShortShortMap) tShortShortHashMap1);
      String string0 = "PZk5v('7qdk:D//";
      RandomAccessFile randomAccessFile0 = null;
      try {
        randomAccessFile0 = new RandomAccessFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"PZk5v('7qdk:D//\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TShortShortMapDecorator tShortShortMapDecorator0 = new TShortShortMapDecorator();
      String string0 = " greater than last index ";
      try {
        Short.valueOf(string0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \" greater than last index \"
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TShortShortMapDecorator tShortShortMapDecorator0 = new TShortShortMapDecorator();
      short short0 = (short)95;
      Short short1 = new Short(short0);
      // Undeclared exception!
      try {
        tShortShortMapDecorator0.put(short1, short1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TShortShortMapDecorator tShortShortMapDecorator0 = new TShortShortMapDecorator();
      short short0 = (short) (-185);
      Short short1 = new Short(short0);
      // Undeclared exception!
      try {
        tShortShortMapDecorator0.put(short1, short1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TShortShortMapDecorator tShortShortMapDecorator0 = new TShortShortMapDecorator();
      short short0 = (short) (-1744);
      tShortShortMapDecorator0.getMap();
      tShortShortMapDecorator0.entrySet();
      Short short1 = new Short(short0);
      // Undeclared exception!
      try {
        tShortShortMapDecorator0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      short[] shortArray0 = new short[6];
      short short0 = (short)0;
      shortArray0[0] = short0;
      short short1 = (short) (-1569);
      shortArray0[1] = short1;
      short short2 = (short) (-109);
      shortArray0[2] = short2;
      short short3 = (short)0;
      shortArray0[3] = short3;
      short short4 = (short)76;
      shortArray0[4] = short4;
      short short5 = (short)1556;
      shortArray0[5] = short5;
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(shortArray0, shortArray0);
      TShortShortMapDecorator tShortShortMapDecorator0 = new TShortShortMapDecorator((TShortShortMap) tShortShortHashMap0);
      Object object0 = null;
      tShortShortMapDecorator0.equals(object0);
      TShortShortMapDecorator tShortShortMapDecorator1 = new TShortShortMapDecorator();
      short short6 = (short) (-1594);
      Short short7 = new Short(short6);
      // Undeclared exception!
      try {
        tShortShortMapDecorator1.put(short7, short7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = 0;
      short short0 = (short)201;
      short short1 = (short)1;
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(int0, (float) int0, short0, short1);
      TShortShortMapDecorator tShortShortMapDecorator0 = new TShortShortMapDecorator((TShortShortMap) tShortShortHashMap0);
      Locale locale0 = Locale.getDefault();
      String string0 = locale0.getCountry();
      tShortShortMapDecorator0.containsValue((Object) string0);
      TShortShortMapDecorator tShortShortMapDecorator1 = new TShortShortMapDecorator();
      Locale locale1 = Locale.JAPAN;
      String string1 = locale1.getDisplayCountry();
      tShortShortMapDecorator1.get((Object) string1);
      TShortShortMapDecorator tShortShortMapDecorator2 = new TShortShortMapDecorator();
      String string2 = "wq";
      boolean boolean0 = false;
      // Undeclared exception!
      try {
        tShortShortMapDecorator2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      short[] shortArray0 = new short[1];
      short short0 = (short)1;
      shortArray0[0] = short0;
      short short1 = (short)1;
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      TShortShortHashMap tShortShortHashMap1 = new TShortShortHashMap((TShortShortMap) tShortShortHashMap0);
      TShortShortMapDecorator tShortShortMapDecorator0 = new TShortShortMapDecorator((TShortShortMap) tShortShortHashMap1);
      Collection<Short> collection0 = tShortShortMapDecorator0.values();
      shortArray0[0] = short1;
      TShortShortMapDecorator tShortShortMapDecorator1 = new TShortShortMapDecorator();
      TShortShortHashMap tShortShortHashMap2 = new TShortShortHashMap(shortArray0, shortArray0);
      TShortShortMapDecorator tShortShortMapDecorator2 = new TShortShortMapDecorator((TShortShortMap) tShortShortHashMap2);
      tShortShortHashMap0.tempDisableAutoCompaction();
      short[] shortArray1 = new short[9];
      shortArray1[0] = short1;
      shortArray1[1] = short0;
      shortArray1[2] = short0;
      shortArray1[3] = short1;
      shortArray1[4] = short1;
      short short2 = (short)0;
      shortArray1[5] = short2;
      shortArray1[6] = short1;
      shortArray1[7] = short1;
      shortArray1[8] = short0;
      tShortShortHashMap0.values(shortArray1);
      Collection<Short> collection1 = tShortShortMapDecorator2.values();
      assertNotSame(collection1, collection0);
  }

  @Test
  public void test15()  throws Throwable  {
      TShortShortMapDecorator tShortShortMapDecorator0 = new TShortShortMapDecorator();
      short short0 = (short)199;
      String string0 = "";
      String string1 = " greater than last index ";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string1, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: :%20greater%20than%20last%20index%20#
         //
      }
  }
}

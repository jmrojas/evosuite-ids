/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TFloatFunction;
import gnu.trove.impl.sync.TSynchronizedCharFloatMap;
import gnu.trove.impl.sync.TSynchronizedCharSet;
import gnu.trove.impl.sync.TSynchronizedFloatCollection;
import gnu.trove.iterator.TCharFloatIterator;
import gnu.trove.map.TCharFloatMap;
import gnu.trove.map.hash.TCharFloatHashMap;
import gnu.trove.procedure.TCharFloatProcedure;
import gnu.trove.procedure.TCharProcedure;
import gnu.trove.procedure.TFloatProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedCharFloatMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.size()I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedCharFloatMap.<init>(Lgnu/trove/map/TCharFloatMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap();
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      int int0 = tSynchronizedCharFloatMap0.size();
      assertEquals(0, int0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.containsValue(F)Z: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(782, (float) 782, 'g', (float) 782);
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      boolean boolean0 = tSynchronizedCharFloatMap0.containsValue((float) 782);
      assertEquals(false, boolean0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((int) 'I');
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      boolean boolean0 = tSynchronizedCharFloatMap0.forEachValue((TFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.transformValues(Lgnu/trove/function/TFloatFunction;)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(61, 61);
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      tSynchronizedCharFloatMap0.transformValues((TFloatFunction) null);
      assertEquals('\u0000', tSynchronizedCharFloatMap0.getNoEntryKey());
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.forEachEntry(Lgnu/trove/procedure/TCharFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((-43), (float) (-43), '%', (float) (-43));
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      boolean boolean0 = tSynchronizedCharFloatMap0.forEachEntry((TCharFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(61, 61);
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      String string0 = tSynchronizedCharFloatMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.keys([C)[C: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      char[] charArray0 = new char[3];
      float[] floatArray0 = new float[7];
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(charArray0, floatArray0);
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      char[] charArray1 = tSynchronizedCharFloatMap0.keys(tCharFloatHashMap0._set);
      assertFalse(charArray1.equals(charArray0));
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.get(C)F: root-Branch
   */

//   @Test
//   public void test7()  throws Throwable  {
//       TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((int) 'U');
//       TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
//       float float0 = tSynchronizedCharFloatMap0.get('U');
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.put(CF)F: root-Branch
   */

//   @Test
//   public void test8()  throws Throwable  {
//       TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((-43), (float) (-43), '%', (float) (-43));
//       TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
//       float float0 = tSynchronizedCharFloatMap0.put('%', '%');
//       assertEquals(false, tCharFloatHashMap0.isEmpty());
//       assertEquals((-43.0F), float0, 0.01F);
//   }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(782, (float) 782, 'g', (float) 782);
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      boolean boolean0 = tSynchronizedCharFloatMap0.forEachKey((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.adjustOrPutValue(CFF)F: root-Branch
   */

//   @Test
//   public void test10()  throws Throwable  {
//       TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((int) 'U');
//       TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
//       float float0 = tSynchronizedCharFloatMap0.adjustOrPutValue('U', 'U', 'U');
//       assertEquals(1, tCharFloatHashMap0.size());
//       assertEquals(85.0F, float0, 0.01F);
//   }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.<init>(Lgnu/trove/map/TCharFloatMap;Ljava/lang/Object;)V: root-Branch
   */

//   @Test
//   public void test11()  throws Throwable  {
//       TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(61, 61);
//       TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0, (Object) "end index > size: ");
//       assertEquals(0.0F, tSynchronizedCharFloatMap0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.putAll(Lgnu/trove/map/TCharFloatMap;)V: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(1480);
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      tSynchronizedCharFloatMap0.putAll((TCharFloatMap) tCharFloatHashMap0);
      assertEquals(3049, tCharFloatHashMap0.capacity());
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.remove(C)F: root-Branch
   */

//   @Test
//   public void test13()  throws Throwable  {
//       TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((int) 'I');
//       TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
//       float float0 = tSynchronizedCharFloatMap0.remove('I');
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 14
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.values([F)[F: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedCharFloatMap.values()[F: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(61, 61);
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      float[] floatArray0 = tSynchronizedCharFloatMap0.values();
      float[] floatArray1 = tSynchronizedCharFloatMap0.values(floatArray0);
      assertSame(floatArray0, floatArray1);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(61, 61);
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      HashMap<Character, Float> hashMap0 = new HashMap<Character, Float>();
      tSynchronizedCharFloatMap0.putAll((Map<? extends Character, ? extends Float>) hashMap0);
      assertEquals(0, hashMap0.size());
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.retainEntries(Lgnu/trove/procedure/TCharFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap();
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      boolean boolean0 = tSynchronizedCharFloatMap0.retainEntries((TCharFloatProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.putIfAbsent(CF)F: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap();
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      tSynchronizedCharFloatMap0.putIfAbsent('B', 'B');
      assertEquals(1, tCharFloatHashMap0.size());
      assertEquals("{B=66.0}", tCharFloatHashMap0.toString());
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.hashCode()I: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(61, 61);
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      int int0 = tSynchronizedCharFloatMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.adjustValue(CF)Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((int) 'U');
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      Character character0 = Character.valueOf('U');
      boolean boolean0 = tSynchronizedCharFloatMap0.adjustValue((char) character0, 0.0F);
      assertEquals(false, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.getNoEntryValue()F: root-Branch
   */

//   @Test
//   public void test20()  throws Throwable  {
//       TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(782, (float) 782, 'g', (float) 782);
//       TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
//       float float0 = tSynchronizedCharFloatMap0.getNoEntryValue();
//       assertEquals(782.0F, float0, 0.01F);
//   }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap();
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      boolean boolean0 = tSynchronizedCharFloatMap0.equals((Object) "{}");
      assertEquals(false, boolean0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.getNoEntryKey()C: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((int) 'I');
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      char char0 = tSynchronizedCharFloatMap0.getNoEntryKey();
      assertEquals('\u0000', char0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.clear()V: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(782, (float) 782, 'g', (float) 782);
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      tSynchronizedCharFloatMap0.clear();
      assertEquals(0, tSynchronizedCharFloatMap0.size());
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[3];
      float[] floatArray0 = new float[7];
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(charArray0, floatArray0);
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      boolean boolean0 = tSynchronizedCharFloatMap0.isEmpty();
      assertEquals(false, boolean0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.keys()[C: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((-43), (float) (-43), '%', (float) (-43));
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      char[] charArray0 = tSynchronizedCharFloatMap0.keys();
      assertNotNull(charArray0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.containsKey(C)Z: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((int) 'I');
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      boolean boolean0 = tSynchronizedCharFloatMap0.containsKey('\u0000');
      assertEquals(false, boolean0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.increment(C)Z: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap();
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      boolean boolean0 = tSynchronizedCharFloatMap0.increment('B');
      assertEquals(false, boolean0);
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.iterator()Lgnu/trove/iterator/TCharFloatIterator;: root-Branch
   */

  @Test
  public void test28()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap();
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      TCharFloatIterator tCharFloatIterator0 = tSynchronizedCharFloatMap0.iterator();
      assertEquals(false, tCharFloatIterator0.hasNext());
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.<init>(Lgnu/trove/map/TCharFloatMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = null;
      try {
        tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.keySet()Lgnu/trove/set/TCharSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedCharFloatMap.keySet()Lgnu/trove/set/TCharSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test30()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap(1480);
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      TSynchronizedCharSet tSynchronizedCharSet0 = (TSynchronizedCharSet)tSynchronizedCharFloatMap0.keySet();
      assertNotNull(tSynchronizedCharSet0);
      
      TSynchronizedCharSet tSynchronizedCharSet1 = (TSynchronizedCharSet)tSynchronizedCharFloatMap0.keySet();
      assertSame(tSynchronizedCharSet1, tSynchronizedCharSet0);
  }

  //Test case number: 31
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 gnu.trove.impl.sync.TSynchronizedCharFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I11 Branch 3 IFNONNULL L121 - false
   * 3 gnu.trove.impl.sync.TSynchronizedCharFloatMap.<init>(Lgnu/trove/map/TCharFloatMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TCharFloatHashMap tCharFloatHashMap0 = new TCharFloatHashMap((int) 'I');
      TSynchronizedCharFloatMap tSynchronizedCharFloatMap0 = new TSynchronizedCharFloatMap((TCharFloatMap) tCharFloatHashMap0);
      TSynchronizedFloatCollection tSynchronizedFloatCollection0 = (TSynchronizedFloatCollection)tSynchronizedCharFloatMap0.valueCollection();
      assertNotNull(tSynchronizedFloatCollection0);
      
      TSynchronizedFloatCollection tSynchronizedFloatCollection1 = (TSynchronizedFloatCollection)tSynchronizedCharFloatMap0.valueCollection();
      assertSame(tSynchronizedFloatCollection1, tSynchronizedFloatCollection0);
  }
}

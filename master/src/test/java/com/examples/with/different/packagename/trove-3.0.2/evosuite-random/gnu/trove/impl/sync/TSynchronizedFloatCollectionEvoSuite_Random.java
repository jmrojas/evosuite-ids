/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TFloatCollection;
import gnu.trove.impl.sync.TSynchronizedFloatCollection;
import gnu.trove.impl.sync.TSynchronizedFloatList;
import gnu.trove.impl.sync.TSynchronizedFloatSet;
import gnu.trove.impl.sync.TSynchronizedRandomAccessFloatList;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatList;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessFloatList;
import gnu.trove.list.TFloatList;
import gnu.trove.list.array.TFloatArrayList;
import gnu.trove.list.linked.TFloatLinkedList;
import gnu.trove.set.TFloatSet;
import gnu.trove.set.hash.TFloatHashSet;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Locale;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedFloatCollectionEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = 0;
      TFloatCollection tFloatCollection0 = null;
      TSynchronizedFloatCollection tSynchronizedFloatCollection0 = null;
      try {
        tSynchronizedFloatCollection0 = new TSynchronizedFloatCollection(tFloatCollection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = (-669);
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet(int0, int0);
      String string0 = "}.8LX-e[";
      // Undeclared exception!
      try {
        URI.create(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in path at index 0: }.8LX-e[
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      float[] floatArray0 = new float[2];
      TFloatSet tFloatSet0 = null;
      String string0 = "Yz]\"GL";
      File file0 = new File(string0, string0);
      String string1 = file0.getParent();
      TSynchronizedFloatSet tSynchronizedFloatSet0 = new TSynchronizedFloatSet(tFloatSet0, (Object) string1);
      float float0 = (-851.80817F);
      // Undeclared exception!
      try {
        tSynchronizedFloatSet0.contains(float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      float[] floatArray0 = new float[3];
      float float0 = 0.0F;
      floatArray0[0] = float0;
      float float1 = 0.0F;
      floatArray0[1] = float1;
      float float2 = (-731.4235F);
      floatArray0[2] = float2;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      TSynchronizedFloatCollection tSynchronizedFloatCollection0 = new TSynchronizedFloatCollection((TFloatCollection) tFloatArrayList0);
      assertEquals(false, tSynchronizedFloatCollection0.isEmpty());
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 155;
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet(int0);
      InputStream inputStream0 = null;
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(inputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = (-1885);
      float float0 = 1914.0923F;
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet(int0);
      TSynchronizedFloatSet tSynchronizedFloatSet0 = new TSynchronizedFloatSet((TFloatSet) tFloatHashSet0);
      TSynchronizedFloatCollection tSynchronizedFloatCollection0 = new TSynchronizedFloatCollection((TFloatCollection) tSynchronizedFloatSet0);
      tSynchronizedFloatCollection0.retainAll(tFloatHashSet0._set);
      TFloatHashSet tFloatHashSet1 = new TFloatHashSet(int0, (float) int0, float0);
      TUnmodifiableFloatSet tUnmodifiableFloatSet0 = new TUnmodifiableFloatSet((TFloatSet) tFloatHashSet1);
      Locale locale0 = Locale.KOREAN;
      String string0 = locale0.getCountry();
      TSynchronizedFloatCollection tSynchronizedFloatCollection1 = new TSynchronizedFloatCollection((TFloatCollection) tFloatHashSet1, (Object) string0);
      boolean boolean0 = tSynchronizedFloatCollection1.containsAll((TFloatCollection) tFloatHashSet1);
      assertEquals(true, boolean0);
      
      tSynchronizedFloatCollection1.size();
      tSynchronizedFloatCollection1.size();
      tSynchronizedFloatCollection1.clear();
      TSynchronizedFloatSet tSynchronizedFloatSet1 = new TSynchronizedFloatSet((TFloatSet) tUnmodifiableFloatSet0);
      String string1 = "tSsv";
      File file0 = new File(string1);
      File file1 = file0.getCanonicalFile();
      String string2 = file1.getName();
      boolean boolean1 = tSynchronizedFloatSet1.equals((Object) string2);
      assertFalse(boolean1 == boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      TFloatList tFloatList0 = null;
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = null;
      try {
        tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList(tFloatList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = (-646);
      float float0 = 1.4E-45F;
      TFloatArrayList tFloatArrayList0 = null;
      try {
        tFloatArrayList0 = new TFloatArrayList(int0, float0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = (-245);
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet(int0, int0);
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) int0;
      floatArray0[0] = (float) int0;
      floatArray0[1] = (float) int0;
      floatArray0[2] = (float) int0;
      floatArray0[1] = (float) int0;
      floatArray0[2] = (float) int0;
      floatArray0[0] = (float) int0;
      floatArray0[1] = (float) int0;
      floatArray0[2] = (float) int0;
      tFloatHashSet0.retainAll(floatArray0);
      TUnmodifiableFloatSet tUnmodifiableFloatSet0 = new TUnmodifiableFloatSet((TFloatSet) tFloatHashSet0);
      TFloatList tFloatList0 = null;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      int int1 = 1009;
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, int1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Already connected
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 1641;
      float float0 = (-1149.437F);
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(int0, float0);
      int int1 = 0;
      // Undeclared exception!
      try {
        tFloatArrayList0.subList(int0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // end index 0 greater than begin index 1641
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      float[] floatArray0 = new float[8];
      float float0 = 1.0F;
      floatArray0[0] = float0;
      float float1 = 0.0F;
      floatArray0[1] = float1;
      float float2 = (-819.2014F);
      floatArray0[2] = float2;
      float float3 = 0.0F;
      floatArray0[3] = float3;
      float float4 = 0.0F;
      floatArray0[4] = float4;
      float float5 = (-927.0469F);
      floatArray0[5] = float5;
      float float6 = 1882.4851F;
      floatArray0[6] = float6;
      float float7 = 380.35843F;
      floatArray0[7] = float7;
      float float8 = 0.0F;
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, float8);
      TFloatArrayList tFloatArrayList1 = new TFloatArrayList((TFloatCollection) tFloatArrayList0);
      Locale locale0 = Locale.CANADA_FRENCH;
      String string0 = locale0.getDisplayName();
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList1, (Object) string0);
      TFloatArrayList tFloatArrayList2 = (TFloatArrayList)tSynchronizedRandomAccessFloatList0.list;
      int int0 = 0;
      float float9 = 935.8511F;
      float float10 = 1965.118F;
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet(int0, float9, float10);
      TUnmodifiableFloatSet tUnmodifiableFloatSet0 = new TUnmodifiableFloatSet((TFloatSet) tFloatHashSet0);
      String string1 = tUnmodifiableFloatSet0.toString();
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList1 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList2, (Object) string1);
      int int1 = tSynchronizedRandomAccessFloatList1.size();
      assertEquals(8, int1);
  }

  @Test
  public void test11()  throws Throwable  {
      float[] floatArray0 = new float[10];
      float float0 = 1.0F;
      floatArray0[0] = float0;
      float float1 = 1.0F;
      floatArray0[1] = float1;
      float float2 = (-885.5939F);
      floatArray0[2] = float2;
      float float3 = 337.63452F;
      floatArray0[3] = float3;
      float float4 = 193.17514F;
      floatArray0[4] = float4;
      float float5 = Float.NEGATIVE_INFINITY;
      floatArray0[5] = float5;
      float float6 = (-1.0F);
      floatArray0[6] = float6;
      float float7 = 1077.2701F;
      floatArray0[7] = float7;
      float float8 = 1525.2323F;
      floatArray0[8] = float8;
      float float9 = 0.0F;
      floatArray0[9] = float9;
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet(floatArray0);
      String string0 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: :#
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 0;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(int0);
      Float float0 = new Float((double) int0);
      TSynchronizedFloatCollection tSynchronizedFloatCollection0 = new TSynchronizedFloatCollection((TFloatCollection) tFloatArrayList0, (Object) float0);
      float[] floatArray0 = new float[5];
      float float1 = 0.0F;
      floatArray0[0] = float1;
      floatArray0[1] = (float) float0;
      floatArray0[2] = (float) float0;
      floatArray0[3] = (float) int0;
      floatArray0[4] = (float) int0;
      tSynchronizedFloatCollection0.addAll(floatArray0);
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList0);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tUnmodifiableFloatList0);
      tSynchronizedRandomAccessFloatList0.getNoEntryValue();
      assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0}", tFloatArrayList0.toString());
      assertEquals(5, tUnmodifiableFloatList0.size());
  }

  @Test
  public void test13()  throws Throwable  {
      TFloatList tFloatList0 = null;
      TFloatLinkedList tFloatLinkedList0 = null;
      try {
        tFloatLinkedList0 = new TFloatLinkedList(tFloatList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = (-1973);
      TFloatArrayList tFloatArrayList0 = null;
      try {
        tFloatArrayList0 = new TFloatArrayList(int0, int0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      float[] floatArray0 = new float[1];
      float float0 = 0.0F;
      floatArray0[0] = float0;
      floatArray0[0] = float0;
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tUnmodifiableRandomAccessFloatList0);
      int int0 = 0;
      int int1 = (-1944);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessFloatList0.subList(int0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // end index -1944 greater than begin index 0
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      float[] floatArray0 = new float[5];
      float float0 = (-1110.641F);
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
      Object object0 = null;
      TSynchronizedFloatList tSynchronizedFloatList0 = new TSynchronizedFloatList((TFloatList) tFloatArrayList0, object0);
      // Undeclared exception!
      try {
        tSynchronizedFloatList0.retainAll(floatArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      TFloatSet tFloatSet0 = null;
      TSynchronizedFloatSet tSynchronizedFloatSet0 = null;
      try {
        tSynchronizedFloatSet0 = new TSynchronizedFloatSet(tFloatSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      float[] floatArray0 = new float[4];
      float float0 = 719.3562F;
      floatArray0[0] = float0;
      float float1 = 0.0F;
      floatArray0[1] = float1;
      float float2 = 1.0F;
      floatArray0[2] = float2;
      float float3 = 10.0F;
      floatArray0[3] = float3;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      String string0 = "C";
      int int0 = 129;
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, int0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: C://C@C:129C?C#C
         //
      }
  }

  @Test
  public void test19()  throws Throwable  {
      int int0 = 200;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(int0);
      int int1 = 37;
      float float0 = (-227.04646F);
      tFloatArrayList0.setQuick(int1, float0);
      int int2 = 0;
      // Undeclared exception!
      try {
        tFloatArrayList0.subList(int0, int2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // end index 0 greater than begin index 200
         //
      }
  }
}

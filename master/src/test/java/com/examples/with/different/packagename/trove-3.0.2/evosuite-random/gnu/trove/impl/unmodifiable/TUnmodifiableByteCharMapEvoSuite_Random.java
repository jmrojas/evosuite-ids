/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap;
import gnu.trove.map.TByteCharMap;
import gnu.trove.map.hash.TByteCharHashMap;
import gnu.trove.procedure.TCharProcedure;
import java.util.Locale;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableByteCharMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)110;
      byteArray0[0] = byte0;
      byte byte1 = (byte)1;
      byteArray0[1] = byte1;
      byte byte2 = (byte)10;
      byteArray0[2] = byte2;
      char[] charArray0 = new char[7];
      char char0 = 'n';
      charArray0[0] = char0;
      char char1 = 'b';
      charArray0[1] = char1;
      char char2 = '\"';
      charArray0[2] = char2;
      char char3 = '&';
      charArray0[3] = char3;
      char char4 = 'j';
      charArray0[4] = char4;
      char char5 = '\'';
      charArray0[5] = char5;
      char char6 = '>';
      charArray0[6] = char6;
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap1 = new TUnmodifiableByteCharMap((TByteCharMap) tUnmodifiableByteCharMap0);
      tUnmodifiableByteCharMap1.keySet();
      int int0 = 1;
      TByteCharHashMap tByteCharHashMap1 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap2 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap1);
      byte byte3 = (byte) (-1);
      char char7 = '*';
      // Undeclared exception!
      try {
        tUnmodifiableByteCharMap2.put(byte3, char7);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TByteCharMap tByteCharMap0 = null;
      TByteCharHashMap tByteCharHashMap0 = null;
      try {
        tByteCharHashMap0 = new TByteCharHashMap(tByteCharMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = 0;
      byte byte0 = (byte)105;
      char char0 = 'G';
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(int0, (float) int0, byte0, char0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteCharMap0.remove(byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      tUnmodifiableByteCharMap0.getNoEntryValue();
      int int0 = (-384);
      TByteCharHashMap tByteCharHashMap1 = new TByteCharHashMap(int0, int0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap1 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap1);
      tByteCharHashMap1.getAutoCompactionFactor();
      tUnmodifiableByteCharMap1.getNoEntryKey();
      int int1 = 595;
      TByteCharHashMap tByteCharHashMap2 = new TByteCharHashMap(int1);
      TByteCharHashMap tByteCharHashMap3 = new TByteCharHashMap((TByteCharMap) tByteCharHashMap2);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap2 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap3);
      assertTrue(tUnmodifiableByteCharMap2.equals(tUnmodifiableByteCharMap1));
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 0;
      float float0 = 1.0F;
      byte byte0 = (byte)0;
      char char0 = 'M';
      int int1 = 1;
      float float1 = 1500.5989F;
      byte byte1 = (byte) (-82);
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(int1, float1, byte1, char0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      TByteCharHashMap tByteCharHashMap1 = new TByteCharHashMap((TByteCharMap) tUnmodifiableByteCharMap0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap1 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap1);
      char char1 = '8';
      // Undeclared exception!
      try {
        tUnmodifiableByteCharMap1.put(byte1, char1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = (-1577);
      byte byte0 = (byte)62;
      char char0 = '6';
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(int0, (float) int0, byte0, char0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      char char1 = tUnmodifiableByteCharMap0.getNoEntryValue();
      assertEquals('6', char1);
      
      // Undeclared exception!
      try {
        tUnmodifiableByteCharMap0.increment(byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)1;
      byteArray0[0] = byte0;
      byte byte1 = (byte)96;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      char[] charArray0 = new char[10];
      char char0 = 'y';
      charArray0[0] = char0;
      char char1 = 'r';
      charArray0[1] = char1;
      char char2 = 'I';
      charArray0[2] = char2;
      char char3 = ']';
      charArray0[3] = char3;
      char char4 = 't';
      charArray0[4] = char4;
      char char5 = 'r';
      charArray0[5] = char5;
      char char6 = 'R';
      charArray0[6] = char6;
      char char7 = 'd';
      charArray0[7] = char7;
      char char8 = 'R';
      charArray0[8] = char8;
      char char9 = 'H';
      charArray0[9] = char9;
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap1 = new TUnmodifiableByteCharMap((TByteCharMap) tUnmodifiableByteCharMap0);
      boolean boolean0 = tUnmodifiableByteCharMap1.isEmpty();
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)115;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte)1;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-9);
      byteArray0[3] = byte3;
      char[] charArray0 = new char[5];
      char char0 = 'W';
      charArray0[0] = char0;
      char char1 = '0';
      charArray0[1] = char1;
      char char2 = 'C';
      charArray0[2] = char2;
      char char3 = '3';
      charArray0[3] = char3;
      char char4 = '}';
      charArray0[4] = char4;
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap1 = new TUnmodifiableByteCharMap((TByteCharMap) tUnmodifiableByteCharMap0);
      boolean boolean0 = tUnmodifiableByteCharMap1.containsKey(byte0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = (-873);
      byte byte0 = (byte) (-100);
      char char0 = 'S';
      byte byte1 = (byte)0;
      char char1 = 'U';
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(int0, (float) int0, byte1, char1);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      tUnmodifiableByteCharMap0.getNoEntryKey();
      TByteCharHashMap tByteCharHashMap1 = new TByteCharHashMap(int0, (float) int0, byte0, char0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap1 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap1);
      tUnmodifiableByteCharMap1.hashCode();
      TByteCharMap tByteCharMap0 = null;
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap2 = null;
      try {
        tUnmodifiableByteCharMap2 = new TUnmodifiableByteCharMap(tByteCharMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-49);
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-34);
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-45);
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-75);
      byteArray0[4] = byte4;
      byte byte5 = (byte)1;
      byteArray0[5] = byte5;
      char[] charArray0 = new char[5];
      char char0 = '|';
      charArray0[0] = char0;
      char char1 = ']';
      charArray0[1] = char1;
      char char2 = 'H';
      charArray0[2] = char2;
      char char3 = '^';
      charArray0[3] = char3;
      char char4 = 'Z';
      charArray0[4] = char4;
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      tUnmodifiableByteCharMap0.keys(tByteCharHashMap0._states);
      TByteCharMap tByteCharMap0 = null;
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap1 = null;
      try {
        tUnmodifiableByteCharMap1 = new TUnmodifiableByteCharMap(tByteCharMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)79;
      byteArray0[1] = byte1;
      byte byte2 = (byte)41;
      byteArray0[2] = byte2;
      byte byte3 = (byte)1;
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-33);
      byteArray0[4] = byte4;
      byte byte5 = (byte)0;
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-103);
      byteArray0[6] = byte6;
      byte byte7 = (byte)0;
      byteArray0[7] = byte7;
      byte byte8 = (byte) (-7);
      byteArray0[8] = byte8;
      byte byte9 = (byte) (-51);
      byteArray0[9] = byte9;
      char[] charArray0 = new char[7];
      char char0 = 'R';
      charArray0[0] = char0;
      char char1 = '-';
      charArray0[1] = char1;
      char char2 = 'J';
      charArray0[2] = char2;
      char char3 = 'Y';
      charArray0[3] = char3;
      char char4 = 'U';
      charArray0[4] = char4;
      char char5 = '@';
      charArray0[5] = char5;
      char char6 = 'V';
      charArray0[6] = char6;
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap1 = new TUnmodifiableByteCharMap((TByteCharMap) tUnmodifiableByteCharMap0);
      tUnmodifiableByteCharMap1.values();
      TByteCharMap tByteCharMap0 = null;
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap2 = null;
      try {
        tUnmodifiableByteCharMap2 = new TUnmodifiableByteCharMap(tByteCharMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = (-1);
      float float0 = 53.42958F;
      byte byte0 = (byte)0;
      char char0 = 'A';
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(int0, float0, byte0, char0);
      byte byte1 = (byte)24;
      char char1 = 'H';
      TByteCharHashMap tByteCharHashMap1 = new TByteCharHashMap((int) byte0, (float) char0, byte1, char1);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap1);
      tByteCharHashMap0.putAll((TByteCharMap) tUnmodifiableByteCharMap0);
      tByteCharHashMap0.containsValue(char0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap1 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      byte[] byteArray0 = tUnmodifiableByteCharMap1.keys(tByteCharHashMap0._set);
      assertNotNull(byteArray0);
      
      TByteCharHashMap tByteCharHashMap2 = new TByteCharHashMap(int0, int0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap2 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap2);
      byte byte2 = (byte)16;
      boolean boolean0 = tUnmodifiableByteCharMap2.isEmpty();
      tUnmodifiableByteCharMap2.containsKey(byte2);
      Locale locale0 = Locale.PRC;
      Locale locale1 = null;
      String string0 = locale0.getDisplayVariant(locale1);
      boolean boolean1 = tUnmodifiableByteCharMap2.equals((Object) string0);
      assertFalse(boolean1 == boolean0);
      
      TByteCharHashMap tByteCharHashMap3 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap3 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap3);
      tUnmodifiableByteCharMap3.size();
      // Undeclared exception!
      try {
        tUnmodifiableByteCharMap3.remove(byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 0;
      byte byte0 = (byte)126;
      char char0 = 'S';
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(int0, (float) int0, byte0, char0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      TCharProcedure tCharProcedure0 = null;
      tUnmodifiableByteCharMap0.forEachValue(tCharProcedure0);
      TByteCharMap tByteCharMap0 = null;
      TByteCharHashMap tByteCharHashMap1 = null;
      try {
        tByteCharHashMap1 = new TByteCharHashMap(tByteCharMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)35;
      byteArray0[0] = byte0;
      byte byte1 = (byte)77;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      byte byte3 = (byte)1;
      byteArray0[3] = byte3;
      byte byte4 = (byte)25;
      byteArray0[4] = byte4;
      byte byte5 = (byte)66;
      byteArray0[5] = byte5;
      char[] charArray0 = new char[1];
      char char0 = 'c';
      charArray0[0] = char0;
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteCharMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)11;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      byte byte3 = (byte)105;
      byteArray0[3] = byte3;
      byte byte4 = (byte)0;
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-12);
      byteArray0[5] = byte5;
      byte byte6 = (byte)78;
      byteArray0[6] = byte6;
      char[] charArray0 = new char[2];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = byte0;
      byteArray1[1] = byte4;
      byteArray1[2] = byte3;
      byteArray1[3] = byte3;
      byteArray1[4] = byte1;
      byteArray1[5] = byte0;
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray1, charArray0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      char char0 = 'J';
      charArray0[0] = char0;
      char char1 = 'd';
      charArray0[1] = char1;
      TByteCharHashMap tByteCharHashMap1 = new TByteCharHashMap(byteArray0, charArray0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap1 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap1);
      int int0 = tUnmodifiableByteCharMap1.hashCode();
      assertEquals(185, int0);
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = 0;
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(int0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-102);
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      tByteCharHashMap0.clear();
      byteArray0[1] = byte1;
      tByteCharHashMap0.capacity();
      // Undeclared exception!
      try {
        tUnmodifiableByteCharMap0.putAll((TByteCharMap) tByteCharHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-46);
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-10);
      byteArray0[3] = byte3;
      byte byte4 = (byte)55;
      byteArray0[4] = byte4;
      int int0 = (-1626);
      float float0 = (-1674.9375F);
      byte byte5 = (byte)74;
      char char0 = '+';
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(int0, float0, byte5, char0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      tUnmodifiableByteCharMap0.hashCode();
      char[] charArray0 = new char[2];
      char char1 = '';
      charArray0[0] = char1;
      TByteCharHashMap tByteCharHashMap1 = new TByteCharHashMap(byteArray0, charArray0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap1 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap1);
      tUnmodifiableByteCharMap1.hashCode();
      char char2 = 'm';
      charArray0[1] = char2;
      TByteCharHashMap tByteCharHashMap2 = new TByteCharHashMap(byteArray0, charArray0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap2 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap2);
      char char3 = '(';
      // Undeclared exception!
      try {
        tUnmodifiableByteCharMap2.adjustValue(byte0, char3);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      int int0 = 195;
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(int0, int0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      byte byte0 = (byte) (-95);
      char char0 = ']';
      char char1 = 'i';
      // Undeclared exception!
      try {
        tUnmodifiableByteCharMap0.adjustOrPutValue(byte0, char0, char1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      int int0 = (-781);
      float float0 = 1789.6381F;
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(int0, float0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)21;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-124);
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-42);
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-63);
      byteArray0[3] = byte3;
      byte byte4 = (byte)114;
      byteArray0[4] = byte4;
      byte byte5 = (byte)0;
      byteArray0[5] = byte5;
      byte byte6 = (byte)0;
      byteArray0[6] = byte6;
      byte[] byteArray1 = tUnmodifiableByteCharMap0.keys(byteArray0);
      assertNotNull(byteArray1);
      
      float float1 = (-951.7279F);
      TByteCharHashMap tByteCharHashMap1 = new TByteCharHashMap(int0, float1);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap1 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap1);
      tUnmodifiableByteCharMap1.size();
      int int1 = (-972);
      TByteCharHashMap tByteCharHashMap2 = new TByteCharHashMap(int1);
      byte[] byteArray2 = tUnmodifiableByteCharMap1.keys();
      assertNotNull(byteArray2);
      
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap2 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap2);
      char char0 = '%';
      tUnmodifiableByteCharMap2.containsValue(char0);
      TCharProcedure tCharProcedure0 = null;
      String string0 = tUnmodifiableByteCharMap1.toString();
      assertNotNull(string0);
      
      tUnmodifiableByteCharMap1.forEachValue(tCharProcedure0);
      tUnmodifiableByteCharMap2.iterator();
      tUnmodifiableByteCharMap2.iterator();
      tUnmodifiableByteCharMap1.hashCode();
      tByteCharHashMap2.size();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap3 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap2);
      byte byte7 = (byte) (-39);
      char char1 = 'f';
      tByteCharHashMap1.put(byte7, char1);
      // Undeclared exception!
      try {
        tUnmodifiableByteCharMap3.increment(byte7);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test19()  throws Throwable  {
      int int0 = (-104);
      int int1 = 1570;
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(int1);
      TByteCharHashMap tByteCharHashMap1 = new TByteCharHashMap((TByteCharMap) tByteCharHashMap0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap1);
      TByteCharHashMap tByteCharHashMap2 = new TByteCharHashMap(int0, int0);
      tByteCharHashMap2.getNoEntryValue();
      tByteCharHashMap2.keys();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap1 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap2);
      int int2 = tUnmodifiableByteCharMap1.hashCode();
      assertFalse(int2 == int0);
  }
}

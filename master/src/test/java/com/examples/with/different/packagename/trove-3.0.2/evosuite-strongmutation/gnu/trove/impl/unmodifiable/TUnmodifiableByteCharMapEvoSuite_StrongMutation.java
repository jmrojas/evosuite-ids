/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection;
import gnu.trove.map.TByteCharMap;
import gnu.trove.map.hash.TByteCharHashMap;
import gnu.trove.procedure.TByteCharProcedure;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TCharProcedure;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableByteCharMapEvoSuite_StrongMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 5 covered goals:
   * 1 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.isEmpty()Z: root-Branch
   * 3 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.<init>(Lgnu/trove/map/TByteCharMap;)V:58 - ReplaceComparisonOperator != null -> = null
   * 4 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.<init>(Lgnu/trove/map/TByteCharMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tUnmodifiableByteCharMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 9 covered goals:
   * 1 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.containsKey(B)Z:65 - InsertUnaryOp IINC -1 key
   * 2 Strong Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.containsKey(B)Z:65 - InsertUnaryOp Negation of key
   * 3 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.containsKey(B)Z:65 - InsertUnaryOp IINC 1 key
   * 4 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.containsKey(B)Z:65 - DeleteStatement: containsKey(B)Z
   * 5 Strong Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.containsKey(B)Z:65 - InsertUnaryOp Negation of key
   * 6 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.containsKey(B)Z:65 - InsertUnaryOp IINC 1 key
   * 7 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.containsKey(B)Z:65 - DeleteStatement: containsKey(B)Z
   * 8 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.containsKey(B)Z:65 - InsertUnaryOp IINC -1 key
   * 9 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.containsKey(B)Z: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-123);
      char[] charArray0 = new char[9];
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tUnmodifiableByteCharMap0.containsKey((byte) (-123));
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 9 covered goals:
   * 1 Strong Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.containsValue(C)Z:66 - DeleteStatement: containsValue(C)Z
   * 2 Strong Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.containsValue(C)Z:66 - InsertUnaryOp Negation of val
   * 3 Strong Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.containsValue(C)Z:66 - InsertUnaryOp IINC -1 val
   * 4 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.containsValue(C)Z:66 - InsertUnaryOp IINC 1 val
   * 5 Strong Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.containsValue(C)Z:66 - InsertUnaryOp Negation of val
   * 6 Strong Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.containsValue(C)Z:66 - InsertUnaryOp IINC -1 val
   * 7 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.containsValue(C)Z:66 - InsertUnaryOp IINC 1 val
   * 8 Strong Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.containsValue(C)Z:66 - DeleteStatement: containsValue(C)Z
   * 9 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.containsValue(C)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte) (-42);
      char[] charArray0 = new char[6];
      charArray0[2] = 'y';
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tUnmodifiableByteCharMap0.containsValue('y');
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 9 covered goals:
   * 1 Strong Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.get(B)C:67 - InsertUnaryOp IINC -1 key
   * 2 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.get(B)C:67 - InsertUnaryOp IINC 1 key
   * 3 Strong Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.get(B)C:67 - InsertUnaryOp Negation of key
   * 4 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.get(B)C:67 - DeleteStatement: get(B)C
   * 5 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.get(B)C:67 - InsertUnaryOp IINC 1 key
   * 6 Strong Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.get(B)C:67 - InsertUnaryOp Negation of key
   * 7 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.get(B)C:67 - DeleteStatement: get(B)C
   * 8 Strong Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.get(B)C:67 - InsertUnaryOp IINC -1 key
   * 9 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.get(B)C: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      char[] charArray0 = new char[2];
      charArray0[0] = 'b';
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      char char0 = tUnmodifiableByteCharMap0.get((byte) (-1));
      assertEquals('b', char0);
  }

  //Test case number: 4
  /*
   * 11 covered goals:
   * 1 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keySet()Lgnu/trove/set/TByteSet;:81 - DeleteField: keySetLgnu/trove/set/TByteSet;
   * 2 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keySet()Lgnu/trove/set/TByteSet;:79 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keySet()Lgnu/trove/set/TByteSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TByteSet;
   * 4 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keySet()Lgnu/trove/set/TByteSet;:80 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 5 Strong Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keySet()Lgnu/trove/set/TByteSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TByteSet;)Lgnu/trove/set/TByteSet;
   * 6 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keySet()Lgnu/trove/set/TByteSet;:79 - ReplaceComparisonOperator != null -> = null
   * 7 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keySet()Lgnu/trove/set/TByteSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TByteSet;
   * 8 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keySet()Lgnu/trove/set/TByteSet;:80 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 9 Strong Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keySet()Lgnu/trove/set/TByteSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TByteSet;)Lgnu/trove/set/TByteSet;
   * 10 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keySet()Lgnu/trove/set/TByteSet;:81 - DeleteField: keySetLgnu/trove/set/TByteSet;
   * 11 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keySet()Lgnu/trove/set/TByteSet;: I4 Branch 2 IFNONNULL L79 - false
   */

//   @Test
//   public void test4()  throws Throwable  {
//       TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((-1858), (-1602.0376F));
//       TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
//       TUnmodifiableByteSet tUnmodifiableByteSet0 = (TUnmodifiableByteSet)tUnmodifiableByteCharMap0.keySet();
//       assertEquals(0, tUnmodifiableByteSet0.getNoEntryValue());
//   }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keys()[B:83 - DeleteStatement: keys()[B
   * 2 Strong Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keys()[B:83 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 3 Strong Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keys()[B:83 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 4 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keys()[B:83 - DeleteStatement: keys()[B
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keys()[B: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((int) (byte)0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      byte[] byteArray0 = tUnmodifiableByteCharMap0.keys();
      assertNotNull(byteArray0);
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keys([B)[B:84 - DeleteStatement: keys([B)[B
   * 2 Strong Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keys([B)[B:84 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 3 Strong Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keys([B)[B:84 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 4 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keys([B)[B:84 - DeleteStatement: keys([B)[B
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keys([B)[B: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(0, 1488.6974F, (byte) (-104), 'A');
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      byte[] byteArray0 = tUnmodifiableByteCharMap0.keys(tByteCharHashMap0._set);
      assertNotNull(byteArray0);
  }

  //Test case number: 7
  /*
   * 11 covered goals:
   * 1 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.valueCollection()Lgnu/trove/TCharCollection;:89 - DeleteField: valuesLgnu/trove/TCharCollection;
   * 2 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.valueCollection()Lgnu/trove/TCharCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.valueCollection()Lgnu/trove/TCharCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TCharCollection;)Lgnu/trove/TCharCollection;
   * 4 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.valueCollection()Lgnu/trove/TCharCollection;:88 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 5 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.valueCollection()Lgnu/trove/TCharCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TCharCollection;
   * 6 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.valueCollection()Lgnu/trove/TCharCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 7 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.valueCollection()Lgnu/trove/TCharCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TCharCollection;)Lgnu/trove/TCharCollection;
   * 8 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.valueCollection()Lgnu/trove/TCharCollection;:89 - DeleteField: valuesLgnu/trove/TCharCollection;
   * 9 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.valueCollection()Lgnu/trove/TCharCollection;:88 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 10 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.valueCollection()Lgnu/trove/TCharCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TCharCollection;
   * 11 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.valueCollection()Lgnu/trove/TCharCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test7()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      TUnmodifiableCharCollection tUnmodifiableCharCollection0 = (TUnmodifiableCharCollection)tUnmodifiableByteCharMap0.valueCollection();
      assertEquals('\u0000', tUnmodifiableCharCollection0.getNoEntryValue());
  }

  //Test case number: 8
  /*
   * 5 covered goals:
   * 1 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.values()[C:91 - DeleteStatement: values()[C
   * 2 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.values()[C:91 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 3 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.values()[C:91 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 4 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.values()[C:91 - DeleteStatement: values()[C
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.values()[C: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      char[] charArray0 = tUnmodifiableByteCharMap0.values();
      assertNotNull(charArray0);
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.values([C)[C:92 - DeleteStatement: values([C)[C
   * 2 Strong Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.values([C)[C:92 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 3 Strong Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.values([C)[C:92 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 4 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.values([C)[C:92 - DeleteStatement: values([C)[C
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.values([C)[C: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((-1883), (float) (-1883), (byte)116, 'O');
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      char[] charArray0 = new char[8];
      char[] charArray1 = tUnmodifiableByteCharMap0.values(charArray0);
      assertSame(charArray1, charArray0);
  }

  //Test case number: 10
  /*
   * 7 covered goals:
   * 1 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 2 Strong Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 3 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 4 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 5 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   */

  @Test
  public void test10()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap1 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tUnmodifiableByteCharMap1.equals((Object) "");
      assertTrue(tUnmodifiableByteCharMap1.equals(tUnmodifiableByteCharMap0));
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 3 covered goals:
   * 1 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   * 2 Strong Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 3 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test11()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tUnmodifiableByteCharMap0.equals((Object) "");
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 3 covered goals:
   * 1 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.hashCode()I:95 - DeleteStatement: hashCode()I
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.hashCode()I: root-Branch
   * 3 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.hashCode()I:95 - DeleteStatement: hashCode()I
   */

  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)36;
      char[] charArray0 = new char[9];
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      int int0 = tUnmodifiableByteCharMap0.hashCode();
      assertEquals(36, int0);
  }

  //Test case number: 13
  /*
   * 5 covered goals:
   * 1 Strong Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 2 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 3 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 4 Strong Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((-469), (float) (-469), (byte)0, 'v');
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      String string0 = tUnmodifiableByteCharMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 14
  /*
   * 3 covered goals:
   * 1 Strong Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.getNoEntryKey()B:97 - DeleteStatement: getNoEntryKey()B
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.getNoEntryKey()B: root-Branch
   * 3 Strong Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.getNoEntryKey()B:97 - DeleteStatement: getNoEntryKey()B
   */

  @Test
  public void test14()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(1863, 1993.6082F, (byte) (-42), '?');
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      byte byte0 = tUnmodifiableByteCharMap0.getNoEntryKey();
      assertEquals((byte) (-42), byte0);
  }

  //Test case number: 15
  /*
   * 3 covered goals:
   * 1 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.getNoEntryValue()C:98 - DeleteStatement: getNoEntryValue()C
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.getNoEntryValue()C: root-Branch
   * 3 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.getNoEntryValue()C:98 - DeleteStatement: getNoEntryValue()C
   */

  @Test
  public void test15()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(0, 0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      tUnmodifiableByteCharMap0.getNoEntryValue();
      TByteCharHashMap tByteCharHashMap1 = new TByteCharHashMap(0, 1698.6777F, (byte)0, '>');
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap1 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap1);
      assertEquals('>', tUnmodifiableByteCharMap1.getNoEntryValue());
  }

  //Test case number: 16
  /*
   * 3 covered goals:
   * 1 Strong Mutation 63: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   * 3 Strong Mutation 63: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z
   */

  @Test
  public void test16()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(1116);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tUnmodifiableByteCharMap0.forEachKey((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 3 covered goals:
   * 1 Strong Mutation 65: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   * 3 Strong Mutation 65: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z
   */

  @Test
  public void test17()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(0, 0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tUnmodifiableByteCharMap0.forEachValue((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 18
  /*
   * 3 covered goals:
   * 1 Strong Mutation 67: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.forEachEntry(Lgnu/trove/procedure/TByteCharProcedure;)Z:107 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TByteCharProcedure;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.forEachEntry(Lgnu/trove/procedure/TByteCharProcedure;)Z: root-Branch
   * 3 Strong Mutation 67: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.forEachEntry(Lgnu/trove/procedure/TByteCharProcedure;)Z:107 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TByteCharProcedure;)Z
   */

  @Test
  public void test18()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(872, (float) 872, (byte)98, 'u');
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tUnmodifiableByteCharMap0.forEachEntry((TByteCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 19
  /*
   * 19 covered goals:
   * 1 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.value()C:115 - DeleteStatement: value()C
   * 2 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.key()B:114 - DeleteStatement: key()B
   * 3 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.key()B:114 - DeleteField: iterLgnu/trove/iterator/TByteCharIterator;
   * 4 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.key()B:114 - DeleteStatement: key()B
   * 5 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.value()C:115 - DeleteField: iterLgnu/trove/iterator/TByteCharIterator;
   * 6 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.value()C:115 - DeleteStatement: value()C
   * 7 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TByteCharIterator;
   * 8 Strong Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.advance()V:116 - DeleteStatement: advance()V
   * 9 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TByteCharIterator;
   * 10 Strong Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 11 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.size()I:63 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 12 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.size()I:63 - DeleteStatement: size()I
   * 13 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.size()I: root-Branch
   * 14 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.iterator()Lgnu/trove/iterator/TByteCharIterator;: root-Branch
   * 15 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.value()C: root-Branch
   * 16 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.hasNext()Z: root-Branch
   * 17 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.advance()V: root-Branch
   * 18 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.key()B: root-Branch
   * 19 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableByteCharMap;)V: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-84);
      char[] charArray0 = new char[4];
      charArray0[0] = '>';
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      TByteCharHashMap tByteCharHashMap1 = new TByteCharHashMap((TByteCharMap) tUnmodifiableByteCharMap0);
      assertEquals("{-84=>, 0=\u0000}", tByteCharHashMap1.toString());
      assertEquals(2, tUnmodifiableByteCharMap0.size());
  }

  //Test case number: 20
  /*
   * 8 covered goals:
   * 1 Strong Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 2 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.key()B:114 - DeleteField: iterLgnu/trove/iterator/TByteCharIterator;
   * 3 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.value()C:115 - DeleteField: iterLgnu/trove/iterator/TByteCharIterator;
   * 4 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TByteCharIterator;
   * 5 Strong Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.advance()V:116 - DeleteStatement: advance()V
   * 6 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TByteCharIterator;
   * 7 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.size()I:63 - DeleteField: mLgnu/trove/map/TByteCharMap;
   * 8 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.size()I:63 - DeleteStatement: size()I
   */

  @Test
  public void test20()  throws Throwable  {
      char[] charArray0 = new char[9];
      byte[] byteArray0 = new byte[4];
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      TByteCharHashMap tByteCharHashMap1 = new TByteCharHashMap((TByteCharMap) tUnmodifiableByteCharMap0);
      assertEquals(1, tUnmodifiableByteCharMap0.size());
      assertEquals(false, tByteCharHashMap1.isEmpty());
  }

  //Test case number: 21
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.<init>(Lgnu/trove/map/TByteCharMap;)V: I17 Branch 1 IFNONNULL L58 - false
   * 2 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.<init>(Lgnu/trove/map/TByteCharMap;)V:58 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test21()  throws Throwable  {
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = null;
      try {
        tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharDoubleMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharSet;
import gnu.trove.map.TCharDoubleMap;
import gnu.trove.map.hash.TCharDoubleHashMap;
import java.util.Locale;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableCharDoubleMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      char[] charArray0 = new char[5];
      char char0 = 'y';
      charArray0[0] = char0;
      char char1 = 'J';
      charArray0[1] = char1;
      char char2 = ')';
      charArray0[2] = char2;
      char char3 = 'x';
      charArray0[3] = char3;
      char char4 = 'T';
      charArray0[4] = char4;
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) char3;
      doubleArray0[1] = (double) char3;
      doubleArray0[2] = (double) char2;
      doubleArray0[3] = (double) char3;
      doubleArray0[4] = (double) charArray0[2];
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(charArray0, doubleArray0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap1 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tUnmodifiableCharDoubleMap0);
      tUnmodifiableCharDoubleMap1.values();
      TCharDoubleHashMap tCharDoubleHashMap1 = new TCharDoubleHashMap();
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap2 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap1);
      tUnmodifiableCharDoubleMap2.keys();
      char char5 = '4';
      double double0 = (-737.7023845381027);
      // Undeclared exception!
      try {
        tUnmodifiableCharDoubleMap2.put(char5, double0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TCharDoubleMap tCharDoubleMap0 = null;
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = null;
      try {
        tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap(tCharDoubleMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap();
      char char0 = 'C';
      tCharDoubleHashMap0.containsKey(char0);
      tCharDoubleHashMap0.size();
      tCharDoubleHashMap0.size();
      char char1 = '?';
      double double0 = (-1330.069343162403);
      tCharDoubleHashMap0.adjustValue(char1, double0);
      tCharDoubleHashMap0.isEmpty();
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      tUnmodifiableCharDoubleMap0.isEmpty();
      double double1 = (-240.45389225168546);
      boolean boolean0 = tUnmodifiableCharDoubleMap0.isEmpty();
      assertEquals(true, boolean0);
      
      // Undeclared exception!
      try {
        tUnmodifiableCharDoubleMap0.adjustOrPutValue(char0, double0, double1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = 1367;
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(int0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      char char0 = '$';
      // Undeclared exception!
      try {
        tUnmodifiableCharDoubleMap0.adjustValue(char0, char0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 0;
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(int0);
      char char0 = 'S';
      tCharDoubleHashMap0.remove(char0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      char char1 = 'n';
      double double0 = 1.0;
      // Undeclared exception!
      try {
        tUnmodifiableCharDoubleMap0.putIfAbsent(char1, char1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = 63;
      char[] charArray0 = new char[9];
      char char0 = '?';
      charArray0[0] = char0;
      char char1 = 'T';
      charArray0[1] = char1;
      char char2 = 'k';
      charArray0[2] = char2;
      char char3 = 'r';
      charArray0[3] = char3;
      char char4 = 't';
      charArray0[4] = char4;
      char char5 = 'l';
      charArray0[5] = char5;
      char char6 = '2';
      charArray0[6] = char6;
      char char7 = '%';
      charArray0[7] = char7;
      char char8 = 'R';
      charArray0[8] = char8;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) charArray0[8];
      doubleArray0[1] = (double) char5;
      doubleArray0[2] = (double) char6;
      doubleArray0[3] = (double) char8;
      doubleArray0[4] = (double) charArray0[6];
      doubleArray0[5] = (double) charArray0[5];
      doubleArray0[6] = (double) charArray0[7];
      doubleArray0[7] = (double) char5;
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(charArray0, doubleArray0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      TCharDoubleMap tCharDoubleMap0 = null;
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap1 = null;
      try {
        tUnmodifiableCharDoubleMap1 = new TUnmodifiableCharDoubleMap(tCharDoubleMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      char[] charArray0 = new char[10];
      char char0 = '\\';
      charArray0[0] = char0;
      char char1 = 'r';
      charArray0[1] = char1;
      char char2 = '*';
      charArray0[2] = char2;
      char char3 = '0';
      charArray0[3] = char3;
      char char4 = '|';
      charArray0[4] = char4;
      char char5 = '*';
      charArray0[5] = char5;
      char char6 = '!';
      charArray0[6] = char6;
      char char7 = 's';
      charArray0[7] = char7;
      char char8 = '|';
      charArray0[8] = char8;
      char char9 = '(';
      charArray0[9] = char9;
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) char3;
      doubleArray0[1] = (double) char8;
      doubleArray0[2] = (double) charArray0[4];
      double double0 = 0.0;
      doubleArray0[3] = double0;
      doubleArray0[4] = (double) charArray0[9];
      doubleArray0[5] = (double) char1;
      doubleArray0[6] = (double) char5;
      doubleArray0[7] = (double) charArray0[1];
      double double1 = 84.76167227052885;
      doubleArray0[8] = double1;
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(charArray0, doubleArray0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      Locale locale0 = Locale.CANADA_FRENCH;
      Locale locale1 = Locale.FRENCH;
      String string0 = locale0.getDisplayName(locale1);
      boolean boolean0 = tUnmodifiableCharDoubleMap0.equals((Object) string0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      char[] charArray0 = new char[10];
      char char0 = '[';
      charArray0[0] = char0;
      char char1 = 'N';
      charArray0[1] = char1;
      char char2 = '%';
      charArray0[2] = char2;
      char char3 = 'Z';
      charArray0[3] = char3;
      char char4 = ':';
      charArray0[4] = char4;
      char char5 = 't';
      charArray0[5] = char5;
      char char6 = '1';
      charArray0[6] = char6;
      char char7 = '\\';
      charArray0[7] = char7;
      char char8 = 'o';
      charArray0[8] = char8;
      char char9 = 'C';
      charArray0[9] = char9;
      double[] doubleArray0 = new double[10];
      doubleArray0[0] = (double) char7;
      doubleArray0[1] = (double) charArray0[2];
      doubleArray0[2] = (double) charArray0[5];
      doubleArray0[3] = (double) char2;
      doubleArray0[4] = (double) char3;
      doubleArray0[5] = (double) charArray0[0];
      doubleArray0[6] = (double) charArray0[7];
      doubleArray0[7] = (double) charArray0[1];
      doubleArray0[8] = (double) charArray0[4];
      doubleArray0[9] = (double) char8;
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(charArray0, doubleArray0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      double double0 = 0.0;
      // Undeclared exception!
      try {
        tUnmodifiableCharDoubleMap0.adjustOrPutValue(char7, double0, (double) char7);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      char[] charArray0 = new char[8];
      char char0 = 'B';
      charArray0[0] = char0;
      char char1 = 'Y';
      charArray0[1] = char1;
      char char2 = 'D';
      charArray0[2] = char2;
      char char3 = '_';
      charArray0[3] = char3;
      char char4 = 'Z';
      charArray0[4] = char4;
      char char5 = 'w';
      charArray0[5] = char5;
      char char6 = '>';
      charArray0[6] = char6;
      char char7 = '+';
      charArray0[7] = char7;
      double[] doubleArray0 = new double[5];
      double double0 = 0.0;
      doubleArray0[0] = double0;
      doubleArray0[1] = (double) char5;
      doubleArray0[2] = (double) char1;
      doubleArray0[3] = (double) char6;
      doubleArray0[4] = (double) charArray0[1];
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(charArray0, doubleArray0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      TCharDoubleHashMap tCharDoubleHashMap1 = new TCharDoubleHashMap((TCharDoubleMap) tUnmodifiableCharDoubleMap0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap1 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap1);
      int int0 = tUnmodifiableCharDoubleMap1.size();
      assertEquals(5, int0);
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 0;
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(int0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      char char0 = 'z';
      double double0 = 470.6394710767699;
      // Undeclared exception!
      try {
        tUnmodifiableCharDoubleMap0.putIfAbsent(char0, double0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[4];
      char char0 = 'd';
      charArray0[0] = char0;
      char char1 = 'C';
      charArray0[1] = char1;
      char char2 = 'E';
      charArray0[2] = char2;
      char char3 = 'G';
      charArray0[3] = char3;
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) char2;
      charArray0[0] = char2;
      charArray0[1] = char0;
      charArray0[2] = char1;
      charArray0[3] = char0;
      doubleArray0[1] = (double) char0;
      doubleArray0[2] = (double) charArray0[0];
      doubleArray0[3] = (double) charArray0[1];
      doubleArray0[4] = (double) char0;
      doubleArray0[5] = (double) char0;
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(charArray0, doubleArray0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      double double0 = (-1445.3010370912416);
      double double1 = (-1873.8010333771913);
      // Undeclared exception!
      try {
        tUnmodifiableCharDoubleMap0.adjustOrPutValue(charArray0[2], double0, double1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap();
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      char char0 = '7';
      tUnmodifiableCharDoubleMap0.containsKey(char0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap1 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap2 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tUnmodifiableCharDoubleMap1);
      tUnmodifiableCharDoubleMap1.toString();
      // Undeclared exception!
      try {
        tUnmodifiableCharDoubleMap2.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = (-18);
      int int1 = 898;
      float float0 = 0.0F;
      char char0 = '3';
      double double0 = 14.960973750948655;
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(int1, float0, char0, double0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      tUnmodifiableCharDoubleMap0.size();
      TCharDoubleHashMap tCharDoubleHashMap1 = new TCharDoubleHashMap(int0);
      tCharDoubleHashMap1.iterator();
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap1 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap1);
      tUnmodifiableCharDoubleMap1.getNoEntryKey();
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap2 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap1);
      char char1 = 'W';
      double double1 = (-1674.630336522941);
      // Undeclared exception!
      try {
        tUnmodifiableCharDoubleMap2.adjustValue(char1, double1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[7];
      char char0 = '*';
      charArray0[0] = char0;
      char char1 = 'O';
      charArray0[1] = char1;
      char char2 = '9';
      charArray0[2] = char2;
      char char3 = '?';
      charArray0[3] = char3;
      char char4 = 'f';
      charArray0[4] = char4;
      char char5 = 's';
      charArray0[5] = char5;
      char char6 = '`';
      charArray0[6] = char6;
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) charArray0[4];
      doubleArray0[1] = (double) char2;
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap((int) char0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      doubleArray0[2] = (double) char1;
      doubleArray0[3] = (double) char6;
      doubleArray0[4] = (double) char4;
      doubleArray0[5] = (double) char3;
      doubleArray0[6] = (double) charArray0[4];
      doubleArray0[7] = (double) charArray0[6];
      doubleArray0[8] = (double) charArray0[0];
      TCharDoubleHashMap tCharDoubleHashMap1 = new TCharDoubleHashMap(charArray0, doubleArray0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap1 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap1);
      double double0 = (-811.8722799635711);
      boolean boolean0 = tUnmodifiableCharDoubleMap1.containsValue(double0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 823117;
      char[] charArray0 = new char[3];
      char char0 = '#';
      charArray0[0] = char0;
      char char1 = '';
      charArray0[1] = char1;
      char char2 = '0';
      charArray0[2] = char2;
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) charArray0[0];
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(charArray0, doubleArray0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      tUnmodifiableCharDoubleMap0.values();
      float float0 = (-198.2508F);
      char char3 = 'A';
      double double0 = 0.0;
      TCharDoubleMap tCharDoubleMap0 = null;
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap1 = null;
      try {
        tUnmodifiableCharDoubleMap1 = new TUnmodifiableCharDoubleMap(tCharDoubleMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

//   @Test
//   public void test15()  throws Throwable  {
//       int int0 = 73467739;
//       TCharDoubleHashMap tCharDoubleHashMap0 = null;
//       try {
//         tCharDoubleHashMap0 = new TCharDoubleHashMap(int0);
//         fail("Expecting exception: OutOfMemoryError");
//       
//       } catch(OutOfMemoryError e) {
//          //
//          // Java heap space
//          //
//       }
//   }

  @Test
  public void test16()  throws Throwable  {
      int int0 = (-1665);
      char char0 = '&';
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(int0, (float) int0, char0, (double) char0);
      TCharDoubleHashMap tCharDoubleHashMap1 = new TCharDoubleHashMap((TCharDoubleMap) tCharDoubleHashMap0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap1);
      // Undeclared exception!
      try {
        tUnmodifiableCharDoubleMap0.remove(char0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      int int0 = (-811);
      char char0 = '~';
      char[] charArray0 = new char[4];
      char char1 = '-';
      int int1 = 436;
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(int1, (float) char0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      charArray0[0] = char1;
      charArray0[1] = char0;
      char char2 = 'U';
      charArray0[2] = char2;
      charArray0[3] = char0;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) char1;
      double double0 = 0.0;
      doubleArray0[1] = double0;
      doubleArray0[2] = (double) charArray0[3];
      doubleArray0[3] = (double) char2;
      TCharDoubleHashMap tCharDoubleHashMap1 = new TCharDoubleHashMap(int0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap1 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap1);
      tUnmodifiableCharDoubleMap1.iterator();
      doubleArray0[4] = (double) charArray0[0];
      doubleArray0[5] = (double) charArray0[0];
      doubleArray0[6] = (double) char0;
      doubleArray0[7] = (double) char0;
      TCharDoubleHashMap tCharDoubleHashMap2 = new TCharDoubleHashMap(charArray0, doubleArray0);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap2 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap2);
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap3 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tUnmodifiableCharDoubleMap2);
      double[] doubleArray1 = tUnmodifiableCharDoubleMap3.values();
      assertNotNull(doubleArray1);
      
      TCharDoubleHashMap tCharDoubleHashMap3 = new TCharDoubleHashMap(int0, (float) int0, char0, (double) int0);
      tCharDoubleHashMap3.keySet();
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap4 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap3);
      boolean boolean0 = tUnmodifiableCharDoubleMap4.isEmpty();
      assertEquals(true, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap();
      TUnmodifiableCharDoubleMap tUnmodifiableCharDoubleMap0 = new TUnmodifiableCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      tUnmodifiableCharDoubleMap0.hashCode();
      TUnmodifiableCharSet tUnmodifiableCharSet0 = (TUnmodifiableCharSet)tUnmodifiableCharDoubleMap0.keySet();
      assertNotNull(tUnmodifiableCharSet0);
      
      tUnmodifiableCharDoubleMap0.isEmpty();
      char char0 = tUnmodifiableCharDoubleMap0.getNoEntryKey();
      TUnmodifiableCharSet tUnmodifiableCharSet1 = (TUnmodifiableCharSet)tUnmodifiableCharDoubleMap0.keySet();
      assertSame(tUnmodifiableCharSet1, tUnmodifiableCharSet0);
      
      tUnmodifiableCharDoubleMap0.containsKey(char0);
      int int0 = (-1694);
      TCharDoubleHashMap tCharDoubleHashMap1 = new TCharDoubleHashMap(int0, int0);
      boolean boolean0 = tUnmodifiableCharDoubleMap0.isEmpty();
      assertEquals(true, boolean0);
      
      char char1 = 'T';
      double double0 = 0.0;
      // Undeclared exception!
      try {
        tUnmodifiableCharDoubleMap0.put(char1, double0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

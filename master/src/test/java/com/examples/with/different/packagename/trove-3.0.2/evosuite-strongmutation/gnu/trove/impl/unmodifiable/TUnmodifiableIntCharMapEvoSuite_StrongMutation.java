/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntSet;
import gnu.trove.map.TIntCharMap;
import gnu.trove.map.hash.TIntCharHashMap;
import gnu.trove.procedure.TCharProcedure;
import gnu.trove.procedure.TIntCharProcedure;
import gnu.trove.procedure.TIntProcedure;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableIntCharMapEvoSuite_StrongMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 5 covered goals:
   * 1 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.isEmpty()Z: root-Branch
   * 3 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.<init>(Lgnu/trove/map/TIntCharMap;)V:58 - ReplaceComparisonOperator != null -> = null
   * 4 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.<init>(Lgnu/trove/map/TIntCharMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap((-1091), (-1091));
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      boolean boolean0 = tUnmodifiableIntCharMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 5 covered goals:
   * 1 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.containsKey(I)Z:65 - InsertUnaryOp IINC 1 key
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.containsKey(I)Z: root-Branch
   * 3 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.containsKey(I)Z:65 - InsertUnaryOp IINC 1 key
   * 4 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.containsKey(I)Z:65 - DeleteStatement: containsKey(I)Z
   * 5 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.containsKey(I)Z:65 - InsertUnaryOp IINC -1 key
   */

  @Test
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[10];
      intArray0[5] = (-1);
      char[] charArray0 = new char[7];
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(intArray0, charArray0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap1 = new TUnmodifiableIntCharMap((TIntCharMap) tUnmodifiableIntCharMap0);
      boolean boolean0 = tUnmodifiableIntCharMap1.containsKey((-1));
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 4 covered goals:
   * 1 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.containsKey(I)Z:65 - InsertUnaryOp IINC -1 key
   * 2 Strong Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.containsKey(I)Z:65 - InsertUnaryOp Negation of key
   * 3 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.containsKey(I)Z:65 - DeleteStatement: containsKey(I)Z
   * 4 Strong Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.containsKey(I)Z:65 - InsertUnaryOp Negation of key
   */

  @Test
  public void test2()  throws Throwable  {
      int[] intArray0 = new int[10];
      intArray0[5] = (-1);
      char[] charArray0 = new char[7];
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(intArray0, charArray0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      boolean boolean0 = tUnmodifiableIntCharMap0.containsKey((-1));
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 9 covered goals:
   * 1 Strong Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.containsValue(C)Z:66 - DeleteStatement: containsValue(C)Z
   * 2 Strong Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.containsValue(C)Z:66 - InsertUnaryOp Negation of val
   * 3 Strong Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.containsValue(C)Z:66 - InsertUnaryOp IINC -1 val
   * 4 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.containsValue(C)Z:66 - InsertUnaryOp IINC 1 val
   * 5 Strong Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.containsValue(C)Z:66 - InsertUnaryOp Negation of val
   * 6 Strong Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.containsValue(C)Z:66 - InsertUnaryOp IINC -1 val
   * 7 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.containsValue(C)Z:66 - InsertUnaryOp IINC 1 val
   * 8 Strong Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.containsValue(C)Z:66 - DeleteStatement: containsValue(C)Z
   * 9 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.containsValue(C)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      tIntCharHashMap0.adjustOrPutValue(0, 'g', 'g');
      boolean boolean0 = tUnmodifiableIntCharMap0.containsValue('g');
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * 1 Strong Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.get(I)C:67 - DeleteField: mLgnu/trove/map/TIntCharMap;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.get(I)C: root-Branch
   * 3 Strong Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.get(I)C:67 - DeleteField: mLgnu/trove/map/TIntCharMap;
   */

  @Test
  public void test4()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      tUnmodifiableIntCharMap0.get(1695);
      intArray0[0] = (-463);
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 Strong Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.get(I)C:67 - InsertUnaryOp Negation of key
   * 2 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.get(I)C:67 - InsertUnaryOp IINC 1 key
   * 3 Strong Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.get(I)C:67 - InsertUnaryOp Negation of key
   * 4 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.get(I)C:67 - DeleteStatement: get(I)C
   * 5 Strong Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.get(I)C:67 - InsertUnaryOp IINC -1 key
   */

  @Test
  public void test5()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = (-1274);
      char[] charArray0 = new char[5];
      charArray0[0] = '3';
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(intArray0, charArray0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      char char0 = tUnmodifiableIntCharMap0.get((-1274));
      assertEquals('3', char0);
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * 1 Strong Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.get(I)C:67 - InsertUnaryOp IINC -1 key
   * 2 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.get(I)C:67 - InsertUnaryOp IINC 1 key
   * 3 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.get(I)C:67 - DeleteStatement: get(I)C
   */

  @Test
  public void test6()  throws Throwable  {
      int[] intArray0 = new int[10];
      char[] charArray0 = new char[2];
      charArray0[1] = 'e';
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(intArray0, charArray0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      char char0 = tUnmodifiableIntCharMap0.get(0);
      assertEquals('e', char0);
  }

  //Test case number: 7
  /*
   * 5 covered goals:
   * 1 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.keys()[I:83 - DeleteStatement: keys()[I
   * 2 Strong Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.keys()[I:83 - DeleteField: mLgnu/trove/map/TIntCharMap;
   * 3 Strong Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.keys()[I:83 - DeleteField: mLgnu/trove/map/TIntCharMap;
   * 4 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.keys()[I:83 - DeleteStatement: keys()[I
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.keys()[I: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      int[] intArray0 = tUnmodifiableIntCharMap0.keys();
      assertNotNull(intArray0);
  }

  //Test case number: 8
  /*
   * 5 covered goals:
   * 1 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.keys([I)[I:84 - DeleteStatement: keys([I)[I
   * 2 Strong Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.keys([I)[I:84 - DeleteField: mLgnu/trove/map/TIntCharMap;
   * 3 Strong Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.keys([I)[I:84 - DeleteField: mLgnu/trove/map/TIntCharMap;
   * 4 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.keys([I)[I:84 - DeleteStatement: keys([I)[I
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.keys([I)[I: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap((-1091), (-1091));
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      int[] intArray0 = tUnmodifiableIntCharMap0.keys(tIntCharHashMap0._set);
      assertNotNull(intArray0);
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.values()[C:91 - DeleteStatement: values()[C
   * 2 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.values()[C:91 - DeleteField: mLgnu/trove/map/TIntCharMap;
   * 3 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.values()[C:91 - DeleteField: mLgnu/trove/map/TIntCharMap;
   * 4 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.values()[C:91 - DeleteStatement: values()[C
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.values()[C: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap((-1), (float) (-1), 360, 'K');
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      char[] charArray0 = tUnmodifiableIntCharMap0.values();
      assertNotNull(charArray0);
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.values([C)[C:92 - DeleteStatement: values([C)[C
   * 2 Strong Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.values([C)[C:92 - DeleteField: mLgnu/trove/map/TIntCharMap;
   * 3 Strong Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.values([C)[C:92 - DeleteField: mLgnu/trove/map/TIntCharMap;
   * 4 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.values([C)[C:92 - DeleteStatement: values([C)[C
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.values([C)[C: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      char[] charArray0 = new char[6];
      char[] charArray1 = tUnmodifiableIntCharMap0.values(charArray0);
      assertSame(charArray1, charArray0);
  }

  //Test case number: 11
  /*
   * 7 covered goals:
   * 1 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 2 Strong Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 3 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 4 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 5 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   */

  @Test
  public void test11()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap((-1091), (-1091));
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      boolean boolean0 = tUnmodifiableIntCharMap0.equals((Object) null);
      assertEquals(false, boolean0);
      
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap1 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      assertTrue(tUnmodifiableIntCharMap1.equals(tUnmodifiableIntCharMap0));
  }

  //Test case number: 12
  /*
   * 2 covered goals:
   * 1 Strong Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.equals(Ljava/lang/Object;)Z:94 - DeleteField: mLgnu/trove/map/TIntCharMap;
   * 2 Strong Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.equals(Ljava/lang/Object;)Z:94 - DeleteField: mLgnu/trove/map/TIntCharMap;
   */

  @Test
  public void test12()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      int[] intArray0 = new int[6];
      intArray0[1] = 1965;
      Character character0 = new Character('f');
      tUnmodifiableIntCharMap0.equals((Object) character0);
      intArray0[1] = (int) 'L';
  }

  //Test case number: 13
  /*
   * 3 covered goals:
   * 1 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   * 2 Strong Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 3 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test13()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap((-1091), (-1091));
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      boolean boolean0 = tUnmodifiableIntCharMap0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 14
  /*
   * 3 covered goals:
   * 1 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.hashCode()I:95 - DeleteStatement: hashCode()I
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.hashCode()I: root-Branch
   * 3 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.hashCode()I:95 - DeleteStatement: hashCode()I
   */

  @Test
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[1] = 721;
      char[] charArray0 = new char[10];
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(intArray0, charArray0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      int int0 = tUnmodifiableIntCharMap0.hashCode();
      assertEquals(721, int0);
  }

  //Test case number: 15
  /*
   * 2 covered goals:
   * 1 Strong Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.hashCode()I:95 - DeleteField: mLgnu/trove/map/TIntCharMap;
   * 2 Strong Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.hashCode()I:95 - DeleteField: mLgnu/trove/map/TIntCharMap;
   */

  @Test
  public void test15()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      int[] intArray0 = new int[6];
      intArray0[1] = 1965;
      tUnmodifiableIntCharMap0.hashCode();
      intArray0[1] = (int) 'L';
  }

  //Test case number: 16
  /*
   * 5 covered goals:
   * 1 Strong Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TIntCharMap;
   * 2 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 3 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 4 Strong Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TIntCharMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      String string0 = tUnmodifiableIntCharMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 17
  /*
   * 3 covered goals:
   * 1 Strong Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.getNoEntryKey()I:97 - DeleteStatement: getNoEntryKey()I
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.getNoEntryKey()I: root-Branch
   * 3 Strong Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.getNoEntryKey()I:97 - DeleteStatement: getNoEntryKey()I
   */

  @Test
  public void test17()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(706, (float) 1, 136, 'T');
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      int int0 = tUnmodifiableIntCharMap0.getNoEntryKey();
      assertEquals(136, int0);
  }

  //Test case number: 18
  /*
   * 3 covered goals:
   * 1 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.getNoEntryValue()C:98 - DeleteStatement: getNoEntryValue()C
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.getNoEntryValue()C: root-Branch
   * 3 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.getNoEntryValue()C:98 - DeleteStatement: getNoEntryValue()C
   */

  @Test
  public void test18()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(1513, (float) 1513, 1513, '9');
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      char char0 = tUnmodifiableIntCharMap0.getNoEntryValue();
      assertEquals('9', char0);
  }

  //Test case number: 19
  /*
   * 3 covered goals:
   * 1 Strong Mutation 63: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.forEachKey(Lgnu/trove/procedure/TIntProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TIntProcedure;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.forEachKey(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   * 3 Strong Mutation 63: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.forEachKey(Lgnu/trove/procedure/TIntProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TIntProcedure;)Z
   */

  @Test
  public void test19()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      boolean boolean0 = tUnmodifiableIntCharMap0.forEachKey((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 20
  /*
   * 3 covered goals:
   * 1 Strong Mutation 65: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   * 3 Strong Mutation 65: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z
   */

  @Test
  public void test20()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      boolean boolean0 = tUnmodifiableIntCharMap0.forEachValue((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 4 covered goals:
   * 1 Strong Mutation 66: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.forEachEntry(Lgnu/trove/procedure/TIntCharProcedure;)Z:107 - DeleteField: mLgnu/trove/map/TIntCharMap;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.forEachEntry(Lgnu/trove/procedure/TIntCharProcedure;)Z: root-Branch
   * 3 Strong Mutation 66: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.forEachEntry(Lgnu/trove/procedure/TIntCharProcedure;)Z:107 - DeleteField: mLgnu/trove/map/TIntCharMap;
   * 4 Strong Mutation 67: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.forEachEntry(Lgnu/trove/procedure/TIntCharProcedure;)Z:107 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TIntCharProcedure;)Z
   */

  @Test
  public void test21()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      int[] intArray0 = new int[6];
      intArray0[1] = 1965;
      tUnmodifiableIntCharMap0.forEachEntry((TIntCharProcedure) null);
      intArray0[1] = (int) 'L';
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 Strong Mutation 67: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.forEachEntry(Lgnu/trove/procedure/TIntCharProcedure;)Z:107 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TIntCharProcedure;)Z
   */

  @Test
  public void test22()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      boolean boolean0 = tUnmodifiableIntCharMap0.forEachEntry((TIntCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 18 covered goals:
   * 1 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap$1.key()I:114 - DeleteStatement: key()I
   * 2 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap$1.key()I:114 - DeleteField: iterLgnu/trove/iterator/TIntCharIterator;
   * 3 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap$1.key()I:114 - DeleteStatement: key()I
   * 4 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap$1.value()C:115 - DeleteField: iterLgnu/trove/iterator/TIntCharIterator;
   * 5 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap$1.value()C:115 - DeleteStatement: value()C
   * 6 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TIntCharIterator;
   * 7 Strong Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap$1.advance()V:116 - DeleteStatement: advance()V
   * 8 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TIntCharIterator;
   * 9 Strong Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 10 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.size()I:63 - DeleteField: mLgnu/trove/map/TIntCharMap;
   * 11 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.size()I:63 - DeleteStatement: size()I
   * 12 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap$1.hasNext()Z: root-Branch
   * 13 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap$1.key()I: root-Branch
   * 14 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap$1.value()C: root-Branch
   * 15 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap$1.advance()V: root-Branch
   * 16 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableIntCharMap;)V: root-Branch
   * 17 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.size()I: root-Branch
   * 18 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.iterator()Lgnu/trove/iterator/TIntCharIterator;: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      tIntCharHashMap0.adjustOrPutValue(15, 'g', 'g');
      TIntCharHashMap tIntCharHashMap1 = new TIntCharHashMap((TIntCharMap) tUnmodifiableIntCharMap0);
      assertEquals(1, tUnmodifiableIntCharMap0.size());
      assertEquals("{15=g}", tIntCharHashMap1.toString());
  }

  //Test case number: 24
  /*
   * 9 covered goals:
   * 1 Strong Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 2 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap$1.key()I:114 - DeleteField: iterLgnu/trove/iterator/TIntCharIterator;
   * 3 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap$1.value()C:115 - DeleteField: iterLgnu/trove/iterator/TIntCharIterator;
   * 4 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap$1.value()C:115 - DeleteStatement: value()C
   * 5 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TIntCharIterator;
   * 6 Strong Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap$1.advance()V:116 - DeleteStatement: advance()V
   * 7 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TIntCharIterator;
   * 8 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.size()I:63 - DeleteField: mLgnu/trove/map/TIntCharMap;
   * 9 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.size()I:63 - DeleteStatement: size()I
   */

  @Test
  public void test24()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      tIntCharHashMap0.adjustOrPutValue(0, 'g', 'g');
      TIntCharHashMap tIntCharHashMap1 = new TIntCharHashMap((TIntCharMap) tUnmodifiableIntCharMap0);
      assertEquals(1, tUnmodifiableIntCharMap0.size());
      assertEquals("{0=g}", tIntCharHashMap1.toString());
  }

  //Test case number: 25
  /*
   * 12 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.keySet()Lgnu/trove/set/TIntSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.keySet()Lgnu/trove/set/TIntSet;:79 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.keySet()Lgnu/trove/set/TIntSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TIntSet;
   * 4 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.keySet()Lgnu/trove/set/TIntSet;:80 - DeleteField: mLgnu/trove/map/TIntCharMap;
   * 5 Strong Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.keySet()Lgnu/trove/set/TIntSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TIntSet;)Lgnu/trove/set/TIntSet;
   * 6 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.keySet()Lgnu/trove/set/TIntSet;:81 - DeleteField: keySetLgnu/trove/set/TIntSet;
   * 7 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.keySet()Lgnu/trove/set/TIntSet;:79 - ReplaceComparisonOperator != null -> = null
   * 8 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.keySet()Lgnu/trove/set/TIntSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TIntSet;
   * 9 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.keySet()Lgnu/trove/set/TIntSet;:80 - DeleteField: mLgnu/trove/map/TIntCharMap;
   * 10 Strong Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.keySet()Lgnu/trove/set/TIntSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TIntSet;)Lgnu/trove/set/TIntSet;
   * 11 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.keySet()Lgnu/trove/set/TIntSet;:81 - DeleteField: keySetLgnu/trove/set/TIntSet;
   * 12 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.keySet()Lgnu/trove/set/TIntSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test25()  throws Throwable  {
      int[] intArray0 = new int[5];
      char[] charArray0 = new char[9];
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(intArray0, charArray0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = (TUnmodifiableIntSet)tUnmodifiableIntCharMap0.keySet();
      assertNotNull(tUnmodifiableIntSet0);
      
      TUnmodifiableIntSet tUnmodifiableIntSet1 = (TUnmodifiableIntSet)tUnmodifiableIntCharMap0.keySet();
      assertSame(tUnmodifiableIntSet1, tUnmodifiableIntSet0);
  }

  //Test case number: 26
  /*
   * 13 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.valueCollection()Lgnu/trove/TCharCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.<init>(Lgnu/trove/map/TIntCharMap;)V:58 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.valueCollection()Lgnu/trove/TCharCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 4 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.valueCollection()Lgnu/trove/TCharCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TCharCollection;)Lgnu/trove/TCharCollection;
   * 5 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.valueCollection()Lgnu/trove/TCharCollection;:89 - DeleteField: valuesLgnu/trove/TCharCollection;
   * 6 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.valueCollection()Lgnu/trove/TCharCollection;:88 - DeleteField: mLgnu/trove/map/TIntCharMap;
   * 7 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.valueCollection()Lgnu/trove/TCharCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TCharCollection;
   * 8 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.valueCollection()Lgnu/trove/TCharCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 9 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.valueCollection()Lgnu/trove/TCharCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TCharCollection;)Lgnu/trove/TCharCollection;
   * 10 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.valueCollection()Lgnu/trove/TCharCollection;:89 - DeleteField: valuesLgnu/trove/TCharCollection;
   * 11 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.valueCollection()Lgnu/trove/TCharCollection;:88 - DeleteField: mLgnu/trove/map/TIntCharMap;
   * 12 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.valueCollection()Lgnu/trove/TCharCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TCharCollection;
   * 13 gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap.valueCollection()Lgnu/trove/TCharCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test26()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      TUnmodifiableCharCollection tUnmodifiableCharCollection0 = (TUnmodifiableCharCollection)tUnmodifiableIntCharMap0.valueCollection();
      assertNotNull(tUnmodifiableCharCollection0);
      
      TUnmodifiableCharCollection tUnmodifiableCharCollection1 = (TUnmodifiableCharCollection)tUnmodifiableIntCharMap0.valueCollection();
      assertSame(tUnmodifiableCharCollection1, tUnmodifiableCharCollection0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleLongMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongCollection;
import gnu.trove.map.TDoubleLongMap;
import gnu.trove.map.hash.TDoubleLongHashMap;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Locale;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableDoubleLongMapEvoSuite_Random {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          int int0 = 1195;
          TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(int0);
          String string0 = "";
          File file0 = new File(string0, string0);
          file0.getParentFile();
          file0.listFiles();
          boolean boolean0 = false;
          TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
          long long0 = (-1L);
          tUnmodifiableDoubleLongMap0.containsValue(long0);
          FileOutputStream fileOutputStream0 = null;
          try {
            fileOutputStream0 = new FileOutputStream(file0, boolean0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.io.FilePermission\" \"/\" \"write\")
             // java.lang.Thread.getStackTrace(Thread.java:1567)
             // org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
             // java.io.FileOutputStream.<init>(FileOutputStream.java:203)
             // sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
             // sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
             // sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
             // java.lang.reflect.Constructor.newInstance(Constructor.java:525)
             // org.evosuite.testcase.ConstructorStatement$1.execute(ConstructorStatement.java:226)
             // org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:144)
             // org.evosuite.testcase.ConstructorStatement.execute(ConstructorStatement.java:188)
             // org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             // org.evosuite.testcase.TestRunnable.call(TestRunnable.java:1)
             // java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
             // java.util.concurrent.FutureTask.run(FutureTask.java:166)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
             // java.lang.Thread.run(Thread.java:722)
             //
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test1()  throws Throwable  {
      TDoubleLongMap tDoubleLongMap0 = null;
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = null;
      try {
        tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap(tDoubleLongMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = 0;
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(int0);
      TDoubleLongHashMap tDoubleLongHashMap1 = new TDoubleLongHashMap((TDoubleLongMap) tDoubleLongHashMap0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap1);
      double double0 = 0.0;
      long long0 = 0L;
      // Undeclared exception!
      try {
        tUnmodifiableDoubleLongMap0.adjustValue(double0, long0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      double double0 = Double.NEGATIVE_INFINITY;
      doubleArray0[0] = double0;
      double double1 = (-1284.1502499186852);
      doubleArray0[1] = double1;
      double double2 = (-1186.9158235737548);
      doubleArray0[2] = double2;
      double double3 = (-1083.6051521885547);
      doubleArray0[3] = double3;
      double double4 = (-1581.2775619809643);
      doubleArray0[4] = double4;
      double double5 = 1183.1672073739694;
      doubleArray0[5] = double5;
      double double6 = 1.0;
      doubleArray0[6] = double6;
      double double7 = 888.4866761890949;
      doubleArray0[7] = double7;
      long[] longArray0 = new long[10];
      long long0 = 0L;
      longArray0[0] = long0;
      long long1 = 0L;
      longArray0[1] = long1;
      long long2 = 0L;
      longArray0[2] = long2;
      long long3 = 0L;
      longArray0[3] = long3;
      long long4 = 0L;
      longArray0[4] = long4;
      long long5 = 0L;
      longArray0[5] = long5;
      long long6 = 1L;
      longArray0[6] = long6;
      long long7 = (-854L);
      longArray0[7] = long7;
      long long8 = 0L;
      longArray0[8] = long8;
      long long9 = 1L;
      longArray0[9] = long9;
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      long[] longArray1 = tUnmodifiableDoubleLongMap0.values(longArray0);
      assertSame(longArray0, longArray1);
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 0;
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(int0);
      TDoubleLongHashMap tDoubleLongHashMap1 = new TDoubleLongHashMap((TDoubleLongMap) tDoubleLongHashMap0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap1);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleLongMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      double double0 = 0.0;
      doubleArray0[0] = double0;
      double double1 = (-1942.7233611257466);
      doubleArray0[1] = double1;
      double double2 = (-1575.5506976212962);
      doubleArray0[2] = double2;
      long[] longArray0 = new long[9];
      long long0 = 0L;
      longArray0[0] = long0;
      long long1 = 1L;
      longArray0[1] = long1;
      long long2 = (-9223372036854775808L);
      longArray0[0] = long0;
      longArray0[1] = long2;
      longArray0[2] = long2;
      longArray0[3] = long2;
      longArray0[4] = long1;
      longArray0[5] = long0;
      longArray0[6] = long2;
      longArray0[7] = long2;
      longArray0[8] = long1;
      longArray0[2] = long2;
      long long3 = (-670L);
      longArray0[3] = long3;
      long long4 = 0L;
      longArray0[4] = long4;
      long long5 = 1513L;
      longArray0[5] = long5;
      long long6 = (-1461L);
      longArray0[6] = long6;
      long long7 = (-1L);
      longArray0[7] = long7;
      long long8 = 1448L;
      longArray0[8] = long8;
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      String string0 = "";
      // Undeclared exception!
      try {
        File.createTempFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = (-1);
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(int0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      double double0 = (-1562.5738499489435);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleLongMap0.increment(double0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      double double0 = 0.0;
      doubleArray0[0] = double0;
      double double1 = 379.1284610315202;
      doubleArray0[1] = double1;
      long[] longArray0 = new long[7];
      long long0 = 0L;
      longArray0[0] = long0;
      long long1 = (-507L);
      longArray0[1] = long1;
      long long2 = (-559L);
      longArray0[2] = long2;
      long long3 = (-1521L);
      longArray0[3] = long3;
      long long4 = 0L;
      longArray0[4] = long4;
      long long5 = 144L;
      longArray0[5] = long5;
      long long6 = 0L;
      longArray0[6] = long6;
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      TDoubleLongMap tDoubleLongMap0 = null;
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap1 = null;
      try {
        tUnmodifiableDoubleLongMap1 = new TUnmodifiableDoubleLongMap(tDoubleLongMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = 353;
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      String string0 = "";
      // Undeclared exception!
      try {
        File.createTempFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 1440;
      double double0 = 0.0;
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(int0, (float) int0, double0, (long) int0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap1 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tUnmodifiableDoubleLongMap0);
      Locale locale0 = Locale.ENGLISH;
      char char0 = 'A';
      String string0 = locale0.getExtension(char0);
      tUnmodifiableDoubleLongMap1.equals((Object) string0);
      double[] doubleArray0 = new double[5];
      double double1 = 0.0;
      doubleArray0[0] = double1;
      double double2 = 0.0;
      doubleArray0[1] = double2;
      TDoubleLongHashMap tDoubleLongHashMap1 = new TDoubleLongHashMap();
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap2 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap1);
      tUnmodifiableDoubleLongMap2.iterator();
      double double3 = 0.0;
      doubleArray0[2] = double3;
      double double4 = 131.91723483689253;
      doubleArray0[3] = double4;
      long long0 = 1L;
      tDoubleLongHashMap1.putIfAbsent(double1, long0);
      double double5 = 0.0;
      doubleArray0[4] = double5;
      tDoubleLongHashMap1.iterator();
      long[] longArray0 = new long[2];
      long long1 = (-907L);
      longArray0[0] = long1;
      long long2 = 1L;
      longArray0[1] = long2;
      TDoubleLongHashMap tDoubleLongHashMap2 = new TDoubleLongHashMap(doubleArray0, longArray0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap3 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap2);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleLongMap3.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      tUnmodifiableDoubleLongMap0.keys();
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap1 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      tDoubleLongHashMap0.clear();
      float float0 = (-1308.7062F);
      // Undeclared exception!
      try {
        tDoubleLongHashMap0.setAutoCompactionFactor(float0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Factor must be >= 0: -1308.7062
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 0;
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(int0, int0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      tUnmodifiableDoubleLongMap0.getNoEntryKey();
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)34;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-79);
      byteArray0[3] = byte3;
      byte byte4 = (byte)0;
      byteArray0[4] = byte4;
      byte byte5 = (byte)72;
      byteArray0[5] = byte5;
      byte byte6 = (byte)0;
      byteArray0[6] = byte6;
      byte byte7 = (byte) (-23);
      byteArray0[7] = byte7;
      byte byte8 = (byte) (-55);
      byteArray0[8] = byte8;
      tDoubleLongHashMap0._states = byteArray0;
      float float0 = 1.0F;
      TDoubleLongHashMap tDoubleLongHashMap1 = new TDoubleLongHashMap(int0, float0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap1 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap1);
      TDoubleLongHashMap tDoubleLongHashMap2 = new TDoubleLongHashMap((TDoubleLongMap) tUnmodifiableDoubleLongMap1);
      tUnmodifiableDoubleLongMap1.keySet();
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap2 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap2);
      TUnmodifiableLongCollection tUnmodifiableLongCollection0 = (TUnmodifiableLongCollection)tUnmodifiableDoubleLongMap2.valueCollection();
      assertEquals(true, tUnmodifiableLongCollection0.isEmpty());
  }

  @Test
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      double double0 = 0.0;
      doubleArray0[0] = double0;
      double double1 = 916.2481112517327;
      doubleArray0[1] = double1;
      double double2 = 1.0;
      doubleArray0[2] = double2;
      double double3 = (-1027.8861335804006);
      doubleArray0[3] = double3;
      long[] longArray0 = new long[8];
      long long0 = 1349L;
      longArray0[0] = long0;
      long long1 = (-1607L);
      longArray0[1] = long1;
      long long2 = 606L;
      longArray0[2] = long2;
      long long3 = (-1L);
      longArray0[3] = long3;
      long long4 = 0L;
      longArray0[4] = long4;
      long long5 = 1212L;
      longArray0[5] = long5;
      long long6 = 0L;
      longArray0[6] = long6;
      long long7 = 0L;
      longArray0[7] = long7;
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      assertEquals(4, tUnmodifiableDoubleLongMap0.size());
  }

  @Test
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      double double0 = 1745.0633281403727;
      doubleArray0[0] = double0;
      double double1 = Double.NEGATIVE_INFINITY;
      doubleArray0[1] = double1;
      double double2 = (-141.3377247915725);
      doubleArray0[2] = double2;
      double double3 = (-243.74279345861387);
      doubleArray0[3] = double3;
      double double4 = 0.0;
      doubleArray0[4] = double4;
      double double5 = 0.0;
      doubleArray0[5] = double5;
      double double6 = (-648.513913284668);
      doubleArray0[6] = double6;
      double double7 = 0.0;
      doubleArray0[7] = double7;
      long[] longArray0 = new long[8];
      long long0 = 0L;
      longArray0[0] = long0;
      long long1 = 1L;
      longArray0[1] = long1;
      long long2 = 1974L;
      longArray0[2] = long2;
      long long3 = (-957L);
      longArray0[3] = long3;
      long long4 = 140L;
      longArray0[4] = long4;
      long long5 = 0L;
      longArray0[5] = long5;
      long long6 = 0L;
      longArray0[6] = long6;
      long long7 = 704L;
      longArray0[7] = long7;
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      double double8 = 1785.780388526526;
      // Undeclared exception!
      try {
        tUnmodifiableDoubleLongMap0.remove(double8);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      double double0 = (-765.9067465387983);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleLongMap0.increment(double0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = 1043;
      float float0 = 1328.2147F;
      long long0 = 685L;
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(int0, float0, (double) float0, long0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      String string0 = Long.toString((long) int0, int0);
      boolean boolean0 = tUnmodifiableDoubleLongMap0.equals((Object) string0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = 0;
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(int0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      double double0 = (-989.6464955039932);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleLongMap0.increment(double0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      int int0 = 441;
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(int0);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleLongMap0.adjustValue((double) int0, (long) int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      int int0 = (-917);
      float float0 = (-386.0412F);
      int int1 = 0;
      float float1 = (-1017.7895F);
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(int1, float1);
      TUnmodifiableDoubleLongMap tUnmodifiableDoubleLongMap0 = new TUnmodifiableDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleLongMap0.adjustValue((double) int0, (long) int1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test19()  throws Throwable  {
      int int0 = 0;
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(int0, int0);
      TDoubleLongHashMap tDoubleLongHashMap1 = null;
      try {
        tDoubleLongHashMap1 = new TDoubleLongHashMap((TDoubleLongMap) tDoubleLongHashMap0);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }
}

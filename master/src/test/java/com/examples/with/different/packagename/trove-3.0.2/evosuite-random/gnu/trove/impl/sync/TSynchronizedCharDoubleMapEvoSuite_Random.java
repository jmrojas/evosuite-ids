/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TDoubleFunction;
import gnu.trove.impl.sync.TSynchronizedCharDoubleMap;
import gnu.trove.map.TCharDoubleMap;
import gnu.trove.map.hash.TCharDoubleHashMap;
import gnu.trove.procedure.TDoubleProcedure;
import java.io.File;
import java.io.IOException;
import java.io.ObjectInput;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Locale;
import java.util.MissingResourceException;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedCharDoubleMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TCharDoubleMap tCharDoubleMap0 = null;
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = null;
      try {
        tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap(tCharDoubleMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = 1;
      float float0 = 2029.5327F;
      char char0 = '5';
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(int0, float0, char0, (double) int0);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      assertEquals('5', tSynchronizedCharDoubleMap0.getNoEntryKey());
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = 242;
      float float0 = 0.0F;
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(int0, float0);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      double[] doubleArray0 = new double[10];
      doubleArray0[0] = (double) float0;
      doubleArray0[1] = (double) float0;
      doubleArray0[2] = (double) float0;
      doubleArray0[3] = (double) float0;
      doubleArray0[4] = (double) int0;
      doubleArray0[5] = (double) float0;
      doubleArray0[6] = (double) float0;
      double double0 = 0.0;
      doubleArray0[7] = double0;
      doubleArray0[8] = (double) int0;
      doubleArray0[9] = (double) float0;
      double[] doubleArray1 = tSynchronizedCharDoubleMap0.values(doubleArray0);
      assertSame(doubleArray0, doubleArray1);
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = (-1692);
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(int0);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap1 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tSynchronizedCharDoubleMap0);
      float float0 = 10.0F;
      TCharDoubleHashMap tCharDoubleHashMap1 = new TCharDoubleHashMap(int0, float0);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap2 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap1);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap3 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tSynchronizedCharDoubleMap2);
      boolean boolean0 = false;
      tCharDoubleHashMap1.reenableAutoCompaction(boolean0);
      tSynchronizedCharDoubleMap2.getNoEntryValue();
      String string0 = "s!'7.bvc^2.";
      TDoubleFunction tDoubleFunction0 = null;
      tCharDoubleHashMap1.transformValues(tDoubleFunction0);
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in path at index 8: s!'7.bvc^2.
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 0;
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(int0);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      Locale locale0 = Locale.CHINA;
      String string0 = locale0.getCountry();
      File file0 = new File(string0, string0);
      String string1 = file0.toString();
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap1 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tSynchronizedCharDoubleMap0, (Object) string1);
      file0.isDirectory();
      char[] charArray0 = new char[5];
      char char0 = 'u';
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.getDefault(locale_Category0);
      charArray0[0] = char0;
      char char1 = '\"';
      charArray0[1] = char1;
      char char2 = '\"';
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) char0;
      doubleArray0[1] = (double) char0;
      double double0 = (-1025.2336205605066);
      doubleArray0[2] = double0;
      tSynchronizedCharDoubleMap1.values(doubleArray0);
      charArray0[2] = char2;
      char char3 = ',';
      file0.toPath();
      charArray0[3] = char3;
      char char4 = '@';
      // Undeclared exception!
      try {
        File.createTempFile(string0, string1, file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TCharDoubleMap tCharDoubleMap0 = null;
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = null;
      try {
        tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap(tCharDoubleMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      char[] charArray0 = new char[10];
      char char0 = '@';
      charArray0[0] = char0;
      char char1 = 'E';
      charArray0[1] = char1;
      char char2 = '\'';
      charArray0[2] = char2;
      char char3 = 'n';
      charArray0[3] = char3;
      char char4 = 'u';
      charArray0[4] = char4;
      char char5 = '5';
      charArray0[5] = char5;
      char char6 = 't';
      charArray0[6] = char6;
      char char7 = 'Z';
      charArray0[7] = char7;
      char char8 = 'i';
      charArray0[8] = char8;
      char char9 = '`';
      charArray0[9] = char9;
      double[] doubleArray0 = new double[10];
      double double0 = 0.0;
      doubleArray0[0] = double0;
      doubleArray0[1] = (double) charArray0[1];
      double double1 = (-1286.2201583106682);
      doubleArray0[2] = double1;
      doubleArray0[3] = (double) charArray0[5];
      double double2 = 0.0;
      doubleArray0[4] = double2;
      doubleArray0[5] = (double) charArray0[9];
      doubleArray0[6] = (double) charArray0[0];
      doubleArray0[7] = (double) charArray0[6];
      doubleArray0[8] = (double) char0;
      doubleArray0[9] = (double) charArray0[8];
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(charArray0, doubleArray0);
      Object object0 = null;
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0, object0);
      char char10 = '\'';
      double double3 = 0.0;
      // Undeclared exception!
      try {
        tSynchronizedCharDoubleMap0.adjustValue(char10, double3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = 293871013;
      char char0 = '-';
      double double0 = 0.0;
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(int0, (float) int0, char0, double0);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      tSynchronizedCharDoubleMap0.valueCollection();
      TCharDoubleMap tCharDoubleMap0 = null;
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap1 = null;
      try {
        tSynchronizedCharDoubleMap1 = new TSynchronizedCharDoubleMap(tCharDoubleMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = 1;
      float float0 = 869.6041F;
      char char0 = 'X';
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(int0, float0, char0, (double) int0);
      Object object0 = null;
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0, object0);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap1 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tSynchronizedCharDoubleMap0, object0);
      TDoubleProcedure tDoubleProcedure0 = null;
      // Undeclared exception!
      try {
        tSynchronizedCharDoubleMap1.forEachValue(tDoubleProcedure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap();
      int int0 = 0;
      TCharDoubleHashMap tCharDoubleHashMap1 = new TCharDoubleHashMap(int0);
      ObjectInput objectInput0 = null;
      // Undeclared exception!
      try {
        tCharDoubleHashMap0.readExternal(objectInput0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap();
      String string0 = "";
      int int0 = 0;
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, int0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://@:0?#
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[1];
      char char0 = '^';
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) char0;
      doubleArray0[1] = (double) char0;
      doubleArray0[2] = (double) char0;
      doubleArray0[3] = (double) char0;
      doubleArray0[4] = (double) char0;
      doubleArray0[5] = (double) char0;
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(charArray0, doubleArray0);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      charArray0[0] = char0;
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) char0;
      doubleArray1[1] = (double) char0;
      doubleArray1[2] = (double) charArray0[0];
      doubleArray1[3] = (double) charArray0[0];
      doubleArray1[4] = (double) charArray0[0];
      doubleArray1[5] = (double) charArray0[0];
      TCharDoubleHashMap tCharDoubleHashMap1 = new TCharDoubleHashMap(charArray0, doubleArray1);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap1 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap1);
      tSynchronizedCharDoubleMap1.keys(tCharDoubleHashMap1._set);
      TCharDoubleMap tCharDoubleMap0 = null;
      Locale locale0 = Locale.CHINA;
      String string0 = locale0.getLanguage();
      locale0.getISO3Country();
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap2 = new TSynchronizedCharDoubleMap(tCharDoubleMap0, (Object) string0);
      Locale locale1 = null;
      // Undeclared exception!
      try {
        locale0.getDisplayName(locale1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 0;
      float float0 = (-175.24504F);
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(int0, float0);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      char char0 = 'C';
      tSynchronizedCharDoubleMap0.containsKey(char0);
      TCharDoubleHashMap tCharDoubleHashMap1 = new TCharDoubleHashMap(int0);
      Locale locale0 = Locale.CHINA;
      String string0 = locale0.getLanguage();
      String string1 = "";
      int int1 = 0;
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string1, string1, int1, string0, string0, string1);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: zh://@:0zh?zh#
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[2];
      char char0 = 'M';
      charArray0[0] = char0;
      char char1 = 'o';
      charArray0[1] = char1;
      charArray0[0] = char0;
      charArray0[1] = char1;
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) char0;
      doubleArray0[1] = (double) charArray0[0];
      doubleArray0[2] = (double) charArray0[1];
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(charArray0, doubleArray0);
      TSynchronizedCharDoubleMap tSynchronizedCharDoubleMap0 = new TSynchronizedCharDoubleMap((TCharDoubleMap) tCharDoubleHashMap0);
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) charArray0[1];
      doubleArray1[1] = (double) char0;
      TCharDoubleHashMap tCharDoubleHashMap1 = new TCharDoubleHashMap(charArray0, doubleArray1);
      Locale locale0 = Locale.JAPANESE;
      char char2 = '@';
      doubleArray0[0] = (double) char1;
      doubleArray0[1] = (double) char2;
      doubleArray0[2] = (double) char0;
      tCharDoubleHashMap0._states = tCharDoubleHashMap1._states;
      // Undeclared exception!
      try {
        locale0.getExtension(char2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Ill-formed extension key: @
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      char[] charArray0 = new char[5];
      char char0 = 'I';
      charArray0[0] = char0;
      char char1 = '!';
      charArray0[1] = char1;
      char char2 = '%';
      charArray0[2] = char2;
      char char3 = '=';
      charArray0[3] = char3;
      char char4 = 'U';
      charArray0[4] = char4;
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) charArray0[2];
      doubleArray0[1] = (double) char1;
      doubleArray0[2] = (double) charArray0[1];
      doubleArray0[3] = (double) char4;
      doubleArray0[4] = (double) char1;
      doubleArray0[5] = (double) charArray0[3];
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(charArray0, doubleArray0);
      String string0 = "";
      // Undeclared exception!
      try {
        File.createTempFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[2];
      char char0 = '2';
      charArray0[0] = char0;
      char char1 = '`';
      charArray0[1] = char1;
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) charArray0[0];
      double double0 = 622.9112003426283;
      doubleArray0[1] = double0;
      doubleArray0[2] = (double) charArray0[1];
      doubleArray0[3] = (double) charArray0[0];
      doubleArray0[4] = (double) charArray0[1];
      doubleArray0[5] = (double) charArray0[0];
      doubleArray0[6] = (double) charArray0[0];
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap();
      String string0 = "!4Q\"4Jf&>y(\"A@'A";
      String string1 = "";
      Locale locale0 = new Locale(string0, string0, string1);
      Locale locale1 = null;
      // Undeclared exception!
      try {
        locale0.getDisplayLanguage(locale1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      char[] charArray0 = new char[8];
      char char0 = '?';
      charArray0[0] = char0;
      char char1 = 'z';
      charArray0[1] = char1;
      int int0 = 0;
      float float0 = 0.0F;
      char char2 = ',';
      TCharDoubleHashMap tCharDoubleHashMap0 = new TCharDoubleHashMap(int0, float0, char2, (double) charArray0[1]);
      TCharDoubleHashMap tCharDoubleHashMap1 = null;
      try {
        tCharDoubleHashMap1 = new TCharDoubleHashMap((TCharDoubleMap) tCharDoubleHashMap0);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }
}

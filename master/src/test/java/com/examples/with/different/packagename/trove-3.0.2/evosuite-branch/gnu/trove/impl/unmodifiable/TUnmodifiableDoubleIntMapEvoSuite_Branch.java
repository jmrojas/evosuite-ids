/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TIntFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection;
import gnu.trove.map.TDoubleIntMap;
import gnu.trove.map.hash.TDoubleIntHashMap;
import gnu.trove.procedure.TDoubleIntProcedure;
import gnu.trove.procedure.TDoubleProcedure;
import gnu.trove.procedure.TIntProcedure;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableDoubleIntMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.values()[I: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.<init>(Lgnu/trove/map/TDoubleIntMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap((-20), (-20));
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      int[] intArray0 = tUnmodifiableDoubleIntMap0.values();
      assertNotNull(intArray0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.remove(D)I: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap();
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleIntMap0.remove((-31.105896536415205));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.containsKey(D)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(1493, 1493);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      boolean boolean0 = tUnmodifiableDoubleIntMap0.containsKey((double) 1493);
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.values([I)[I: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(1493, 1493);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      int[] intArray0 = new int[8];
      int[] intArray1 = tUnmodifiableDoubleIntMap0.values(intArray0);
      assertSame(intArray1, intArray0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.putAll(Lgnu/trove/map/TDoubleIntMap;)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap();
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleIntMap0.putAll((TDoubleIntMap) tDoubleIntHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.containsValue(I)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap((-20), (-20));
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      boolean boolean0 = tUnmodifiableDoubleIntMap0.containsValue((-20));
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.forEachKey(Lgnu/trove/procedure/TDoubleProcedure;)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap();
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      boolean boolean0 = tUnmodifiableDoubleIntMap0.forEachKey((TDoubleProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 7 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.iterator()Lgnu/trove/iterator/TDoubleIntIterator;: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.size()I: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap$1.advance()V: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap$1.key()D: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap$1.value()I: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableDoubleIntMap;)V: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap$1.hasNext()Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      int[] intArray0 = new int[5];
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(doubleArray0, intArray0);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      TDoubleIntHashMap tDoubleIntHashMap1 = new TDoubleIntHashMap((TDoubleIntMap) tUnmodifiableDoubleIntMap0);
      assertEquals(1, tUnmodifiableDoubleIntMap0.size());
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap();
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      boolean boolean0 = tUnmodifiableDoubleIntMap0.forEachValue((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.putIfAbsent(DI)I: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(1063, 1063);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleIntMap0.putIfAbsent((double) 1063, 1063);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.getNoEntryKey()D: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(0);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      double double0 = tUnmodifiableDoubleIntMap0.getNoEntryKey();
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.clear()V: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap((-2035), (-2035));
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleIntMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.keys([D)[D: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap();
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      double[] doubleArray0 = tUnmodifiableDoubleIntMap0.keys(tDoubleIntHashMap0._set);
      assertNotNull(doubleArray0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.adjustOrPutValue(DII)I: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap();
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleIntMap0.adjustOrPutValue((double) 0, 0, 0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.put(DI)I: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap();
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleIntMap0.put(1471.151442745956, (-1179));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.keys()[D: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(0);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      double[] doubleArray0 = tUnmodifiableDoubleIntMap0.keys();
      assertNotNull(doubleArray0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.hashCode()I: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap((-20), (-20));
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      int int0 = tUnmodifiableDoubleIntMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.transformValues(Lgnu/trove/function/TIntFunction;)V: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap((-1793), (-1793), (-1793), (-1793));
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleIntMap0.transformValues((TIntFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap();
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleIntMap0.putAll((Map<? extends Double, ? extends Integer>) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.adjustValue(DI)Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      int[] intArray0 = new int[10];
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(doubleArray0, intArray0);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleIntMap0.adjustValue(Double.NEGATIVE_INFINITY, 0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.forEachEntry(Lgnu/trove/procedure/TDoubleIntProcedure;)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(1493, 1493);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      boolean boolean0 = tUnmodifiableDoubleIntMap0.forEachEntry((TDoubleIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap((-20), (-20));
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      String string0 = tUnmodifiableDoubleIntMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap((-2035), (-2035));
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      boolean boolean0 = tUnmodifiableDoubleIntMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.increment(D)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(0);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleIntMap0.increment(0.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.retainEntries(Lgnu/trove/procedure/TDoubleIntProcedure;)Z: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(467, 467, 467, 467);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleIntMap0.retainEntries((TDoubleIntProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.get(D)I: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap();
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      int int0 = tUnmodifiableDoubleIntMap0.get((double) 0);
      assertEquals(0, int0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.getNoEntryValue()I: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      int[] intArray0 = new int[5];
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(doubleArray0, intArray0);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      int int0 = tUnmodifiableDoubleIntMap0.getNoEntryValue();
      assertEquals(0, int0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.<init>(Lgnu/trove/map/TDoubleIntMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = null;
      try {
        tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.keySet()Lgnu/trove/set/TDoubleSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.keySet()Lgnu/trove/set/TDoubleSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap();
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet0 = (TUnmodifiableDoubleSet)tUnmodifiableDoubleIntMap0.keySet();
      assertNotNull(tUnmodifiableDoubleSet0);
      
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet1 = (TUnmodifiableDoubleSet)tUnmodifiableDoubleIntMap0.keySet();
      assertSame(tUnmodifiableDoubleSet1, tUnmodifiableDoubleSet0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.valueCollection()Lgnu/trove/TIntCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.valueCollection()Lgnu/trove/TIntCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(0);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      TUnmodifiableIntCollection tUnmodifiableIntCollection0 = (TUnmodifiableIntCollection)tUnmodifiableDoubleIntMap0.valueCollection();
      assertNotNull(tUnmodifiableIntCollection0);
      
      TUnmodifiableIntCollection tUnmodifiableIntCollection1 = (TUnmodifiableIntCollection)tUnmodifiableDoubleIntMap0.valueCollection();
      assertSame(tUnmodifiableIntCollection1, tUnmodifiableIntCollection0);
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - false
   */

  @Test
  public void test30()  throws Throwable  {
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap((-2035), (-2035));
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      boolean boolean0 = tUnmodifiableDoubleIntMap0.equals((Object) tDoubleIntHashMap0);
      assertEquals(true, boolean0);
  }

  //Test case number: 31
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleIntMap.<init>(Lgnu/trove/map/TDoubleIntMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test31()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      int[] intArray0 = new int[5];
      TDoubleIntHashMap tDoubleIntHashMap0 = new TDoubleIntHashMap(doubleArray0, intArray0);
      TUnmodifiableDoubleIntMap tUnmodifiableDoubleIntMap0 = new TUnmodifiableDoubleIntMap((TDoubleIntMap) tDoubleIntHashMap0);
      boolean boolean0 = tUnmodifiableDoubleIntMap0.equals((Object) ":");
      assertEquals(false, boolean0);
  }
}

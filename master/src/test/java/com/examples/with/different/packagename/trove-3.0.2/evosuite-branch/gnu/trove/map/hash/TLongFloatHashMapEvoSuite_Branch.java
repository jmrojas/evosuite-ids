/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TFloatFunction;
import gnu.trove.map.TLongFloatMap;
import gnu.trove.map.hash.TLongFloatHashMap;
import gnu.trove.procedure.TFloatProcedure;
import gnu.trove.procedure.TLongFloatProcedure;
import gnu.trove.procedure.TLongProcedure;
import java.io.BufferedOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TLongFloatHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap$TValueView.<init>(Lgnu/trove/map/hash/TLongFloatHashMap;)V: root-Branch
   * 2 gnu.trove.map.hash.TLongFloatHashMap.valueCollection()Lgnu/trove/TFloatCollection;: root-Branch
   * 3 gnu.trove.map.hash.TLongFloatHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.hash.TLongFloatHashMap.<init>()V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      tLongFloatHashMap0.valueCollection();
      assertEquals(23, tLongFloatHashMap0.capacity());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap$TKeyView.<init>(Lgnu/trove/map/hash/TLongFloatHashMap;)V: root-Branch
   * 2 gnu.trove.map.hash.TLongFloatHashMap.keySet()Lgnu/trove/set/TLongSet;: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      tLongFloatHashMap0.keySet();
      assertEquals(23, tLongFloatHashMap0.capacity());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.increment(J)Z: root-Branch
   * 2 gnu.trove.map.hash.TLongFloatHashMap.adjustValue(JF)Z: I9 Branch 71 IFGE L477 - false
   */

  @Test
  public void test2()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      boolean boolean0 = tLongFloatHashMap0.increment(0L);
      assertEquals(23, tLongFloatHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.clear()V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      tLongFloatHashMap0.clear();
      assertEquals(23, tLongFloatHashMap0.capacity());
      assertEquals("{}", tLongFloatHashMap0.toString());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   * 2 gnu.trove.map.hash.TLongFloatHashMap.<init>(I)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(774);
      boolean boolean0 = tLongFloatHashMap0.forEachKey((TLongProcedure) null);
      assertEquals(1597, tLongFloatHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.removeAt(I)V: root-Branch
   * 2 gnu.trove.map.hash.TLongFloatHashMap.remove(J)F: I14 Branch 46 IFLT L276 - false
   * 3 gnu.trove.map.hash.TLongFloatHashMap.put(JF)F: root-Branch
   * 4 gnu.trove.map.hash.TLongFloatHashMap.doPut(JFI)F: I12 Branch 40 IFGE L214 - true
   * 5 gnu.trove.map.hash.TLongFloatHashMap.doPut(JFI)F: I12 Branch 40 IFGE L214 - false
   * 6 gnu.trove.map.hash.TLongFloatHashMap.doPut(JFI)F: I41 Branch 41 IFEQ L221 - true
   * 7 gnu.trove.map.hash.TLongFloatHashMap.doPut(JFI)F: I41 Branch 41 IFEQ L221 - false
   * 8 gnu.trove.map.hash.TLongFloatHashMap.<init>([J[F)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 9 gnu.trove.map.hash.TLongFloatHashMap.<init>([J[F)V: I24 Branch 33 IF_ICMPGE L119 - false
   */

//   @Test
//   public void test5()  throws Throwable  {
//       long[] longArray0 = new long[8];
//       float[] floatArray0 = new float[10];
//       TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(longArray0, floatArray0);
//       assertEquals(false, tLongFloatHashMap0.isEmpty());
//       
//       float float0 = tLongFloatHashMap0.remove(0L);
//       assertEquals(0, tLongFloatHashMap0.size());
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.containsKey(J)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      tLongFloatHashMap0.containsKey(1040L);
      assertEquals(23, tLongFloatHashMap0.capacity());
  }

  //Test case number: 7
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.<init>(Lgnu/trove/map/TLongFloatMap;)V: I10 Branch 34 IFEQ L133 - false
   * 2 gnu.trove.map.hash.TLongFloatHashMap.<init>(Lgnu/trove/map/TLongFloatMap;)V: I40 Branch 35 IFEQ L139 - false
   * 3 gnu.trove.map.hash.TLongFloatHashMap.<init>(Lgnu/trove/map/TLongFloatMap;)V: I54 Branch 36 IFEQ L143 - false
   * 4 gnu.trove.map.hash.TLongFloatHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 5 gnu.trove.map.hash.TLongFloatHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 6 gnu.trove.map.hash.TLongFloatHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 7 gnu.trove.map.hash.TLongFloatHashMap$TLongFloatHashIterator.<init>(Lgnu/trove/map/hash/TLongFloatHashMap;Lgnu/trove/map/hash/TLongFloatHashMap;)V: root-Branch
   * 8 gnu.trove.map.hash.TLongFloatHashMap.<init>(IFJF)V: root-Branch
   * 9 gnu.trove.map.hash.TLongFloatHashMap.iterator()Lgnu/trove/iterator/TLongFloatIterator;: root-Branch
   * 10 gnu.trove.map.hash.TLongFloatHashMap.putAll(Lgnu/trove/map/TLongFloatMap;)V: I15 Branch 43 IFEQ L243 - true
   */

//   @Test
//   public void test7()  throws Throwable  {
//       TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap((-1881), (-1881), (-1881), (-1881));
//       TLongFloatHashMap tLongFloatHashMap1 = new TLongFloatHashMap((TLongFloatMap) tLongFloatHashMap0);
//       assertEquals((-1881L), tLongFloatHashMap1.getNoEntryKey());
//       assertEquals(3, tLongFloatHashMap1.capacity());
//       assertEquals((-1881.0F), tLongFloatHashMap1.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.<init>(Lgnu/trove/map/TLongFloatMap;)V: I40 Branch 35 IFEQ L139 - true
   * 2 gnu.trove.map.hash.TLongFloatHashMap.<init>(Lgnu/trove/map/TLongFloatMap;)V: I54 Branch 36 IFEQ L143 - true
   * 3 gnu.trove.map.hash.TLongFloatHashMap.<init>(Lgnu/trove/map/TLongFloatMap;)V: I10 Branch 34 IFEQ L133 - false
   */

//   @Test
//   public void test8()  throws Throwable  {
//       TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
//       TLongFloatHashMap tLongFloatHashMap1 = new TLongFloatHashMap((TLongFloatMap) tLongFloatHashMap0);
//       assertEquals(0.0F, tLongFloatHashMap1.getNoEntryValue(), 0.01F);
//       assertEquals(0L, tLongFloatHashMap1.getNoEntryKey());
//       assertEquals(23, tLongFloatHashMap1.capacity());
//   }

  //Test case number: 9
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.putIfAbsent(JF)F: I9 Branch 39 IFGE L205 - false
   * 2 gnu.trove.map.hash.TLongFloatHashMap.adjustOrPutValue(JFF)F: I9 Branch 72 IFGE L491 - true
   * 3 gnu.trove.map.hash.TLongFloatHashMap.adjustOrPutValue(JFF)F: I58 Branch 73 IFEQ L502 - false
   */

//   @Test
//   public void test9()  throws Throwable  {
//       TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
//       tLongFloatHashMap0.adjustOrPutValue(1040L, (-1.0F), 1224.8359F);
//       float float0 = tLongFloatHashMap0.putIfAbsent(1040L, 1449.4476F);
//       assertEquals(false, tLongFloatHashMap0.isEmpty());
//       assertEquals(1224.8359F, float0, 0.01F);
//   }

  //Test case number: 10
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.get(J)F: I9 Branch 44 IFGE L253 - true
   * 2 gnu.trove.map.hash.TLongFloatHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 3 gnu.trove.map.hash.TLongFloatHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 4 gnu.trove.map.hash.TLongFloatHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 5 gnu.trove.map.hash.TLongFloatHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 6 gnu.trove.map.hash.TLongFloatHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 7 gnu.trove.map.hash.TLongFloatHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 8 gnu.trove.map.hash.TLongFloatHashMap.equals(Ljava/lang/Object;)Z: I85 Branch 78 IFEQ L1200 - true
   * 9 gnu.trove.map.hash.TLongFloatHashMap.putIfAbsent(JF)F: I9 Branch 39 IFGE L205 - true
   * 10 gnu.trove.map.hash.TLongFloatHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   */

  @Test
  public void test10()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap((-1881), (-1881), (-1881), (-1881));
      tLongFloatHashMap0.putIfAbsent((long) 0, (float) (-1881));
      boolean boolean0 = tLongFloatHashMap0.equals((Object) tLongFloatHashMap0);
      assertEquals(1, tLongFloatHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.get(J)F: I9 Branch 44 IFGE L253 - false
   */

//   @Test
//   public void test11()  throws Throwable  {
//       TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(774);
//       float float0 = tLongFloatHashMap0.get(0L);
//       assertEquals(1597, tLongFloatHashMap0.capacity());
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - true
   */

  @Test
  public void test12()  throws Throwable  {
      long[] longArray0 = new long[8];
      float[] floatArray0 = new float[10];
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(longArray0, floatArray0);
      boolean boolean0 = tLongFloatHashMap0.isEmpty();
      assertEquals(1, tLongFloatHashMap0.size());
      assertEquals(23, tLongFloatHashMap0.capacity());
      assertEquals("{0=0.0}", tLongFloatHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - false
   * 2 gnu.trove.map.hash.TLongFloatHashMap.<init>(I)V: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(170);
      boolean boolean0 = tLongFloatHashMap0.isEmpty();
      assertEquals(true, boolean0);
      assertEquals(359, tLongFloatHashMap0.capacity());
  }

  //Test case number: 14
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.remove(J)F: I14 Branch 46 IFLT L276 - true
   * 2 gnu.trove.map.hash.TLongFloatHashMap.<init>(IF)V: root-Branch
   */

//   @Test
//   public void test14()  throws Throwable  {
//       TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(2147483637, (-1497.6847F));
//       float float0 = tLongFloatHashMap0.remove((long) (-2147483634));
//       assertEquals(0.0F, float0, 0.01F);
//       assertEquals(true, tLongFloatHashMap0.isEmpty());
//   }

  //Test case number: 15
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.keys()[J: I34 Branch 48 IF_ICMPNE L304 - false
   * 2 gnu.trove.map.hash.TLongFloatHashMap.keys()[J: I27 Branch 47 IFLE L303 - true
   * 3 gnu.trove.map.hash.TLongFloatHashMap.keys()[J: I27 Branch 47 IFLE L303 - false
   * 4 gnu.trove.map.hash.TLongFloatHashMap.keys()[J: I34 Branch 48 IF_ICMPNE L304 - true
   */

  @Test
  public void test15()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      tLongFloatHashMap0.putIfAbsent(0L, 1605.5623F);
      tLongFloatHashMap0.keys();
      assertEquals(1, tLongFloatHashMap0.size());
      assertEquals("{0=1605.5623}", tLongFloatHashMap0.toString());
  }

  //Test case number: 16
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.keys([J)[J: I10 Branch 49 IF_ICMPGE L315 - true
   * 2 gnu.trove.map.hash.TLongFloatHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - true
   * 3 gnu.trove.map.hash.TLongFloatHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - false
   * 4 gnu.trove.map.hash.TLongFloatHashMap.keys([J)[J: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test16()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(2147483637, (-1497.6847F));
      long[] longArray0 = tLongFloatHashMap0.keys(tLongFloatHashMap0._set);
      assertNotNull(longArray0);
  }

  //Test case number: 17
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.keys([J)[J: I10 Branch 49 IF_ICMPGE L315 - false
   * 2 gnu.trove.map.hash.TLongFloatHashMap.keys([J)[J: I44 Branch 51 IF_ICMPNE L323 - false
   * 3 gnu.trove.map.hash.TLongFloatHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - true
   * 4 gnu.trove.map.hash.TLongFloatHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - false
   * 5 gnu.trove.map.hash.TLongFloatHashMap.keys([J)[J: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test17()  throws Throwable  {
      long[] longArray0 = new long[2];
      longArray0[1] = (long) (-1);
      float[] floatArray0 = new float[2];
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(longArray0, floatArray0);
      long[] longArray1 = new long[1];
      long[] longArray2 = tLongFloatHashMap0.keys(longArray1);
      assertNotNull(longArray2);
      assertEquals("{-1=0.0, 0=0.0}", tLongFloatHashMap0.toString());
      assertEquals(2, tLongFloatHashMap0.size());
  }

  //Test case number: 18
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.values()[F: I27 Branch 52 IFLE L343 - true
   * 2 gnu.trove.map.hash.TLongFloatHashMap.values()[F: I27 Branch 52 IFLE L343 - false
   * 3 gnu.trove.map.hash.TLongFloatHashMap.values()[F: I34 Branch 53 IF_ICMPNE L344 - true
   * 4 gnu.trove.map.hash.TLongFloatHashMap.values()[F: I34 Branch 53 IF_ICMPNE L344 - false
   */

  @Test
  public void test18()  throws Throwable  {
      long[] longArray0 = new long[2];
      float[] floatArray0 = new float[5];
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(longArray0, floatArray0);
      float[] floatArray1 = tLongFloatHashMap0.values();
      assertNotNull(floatArray1);
      assertEquals(1, tLongFloatHashMap0.size());
      assertEquals("{0=0.0}", tLongFloatHashMap0.toString());
      assertEquals(11, tLongFloatHashMap0.capacity());
      assertEquals(false, tLongFloatHashMap0.isEmpty());
  }

  //Test case number: 19
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.values([F)[F: I10 Branch 54 IF_ICMPGE L355 - true
   * 2 gnu.trove.map.hash.TLongFloatHashMap.values([F)[F: I37 Branch 55 IFLE L362 - true
   * 3 gnu.trove.map.hash.TLongFloatHashMap.values([F)[F: I37 Branch 55 IFLE L362 - false
   * 4 gnu.trove.map.hash.TLongFloatHashMap.values([F)[F: I44 Branch 56 IF_ICMPNE L363 - true
   */

  @Test
  public void test19()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      float[] floatArray0 = new float[10];
      float[] floatArray1 = tLongFloatHashMap0.values(floatArray0);
      assertEquals(23, tLongFloatHashMap0.capacity());
      assertSame(floatArray0, floatArray1);
      assertNotNull(floatArray1);
  }

  //Test case number: 20
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.values([F)[F: I10 Branch 54 IF_ICMPGE L355 - false
   * 2 gnu.trove.map.hash.TLongFloatHashMap.values([F)[F: I44 Branch 56 IF_ICMPNE L363 - false
   * 3 gnu.trove.map.hash.TLongFloatHashMap.values([F)[F: I37 Branch 55 IFLE L362 - true
   * 4 gnu.trove.map.hash.TLongFloatHashMap.values([F)[F: I37 Branch 55 IFLE L362 - false
   * 5 gnu.trove.map.hash.TLongFloatHashMap.values([F)[F: I44 Branch 56 IF_ICMPNE L363 - true
   */

  @Test
  public void test20()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      tLongFloatHashMap0.putIfAbsent(0L, 1605.5623F);
      tLongFloatHashMap0.adjustOrPutValue(1040L, (-1.0F), 1224.8359F);
      float[] floatArray0 = new float[1];
      tLongFloatHashMap0.values(floatArray0);
      assertEquals("{1040=1224.8359, 0=1605.5623}", tLongFloatHashMap0.toString());
      assertEquals(2, tLongFloatHashMap0.size());
  }

  //Test case number: 21
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.containsValue(F)Z: I25 Branch 58 IF_ICMPNE L377 - false
   * 2 gnu.trove.map.hash.TLongFloatHashMap.containsValue(F)Z: I31 Branch 59 IFNE L377 - true
   * 3 gnu.trove.map.hash.TLongFloatHashMap.containsValue(F)Z: I18 Branch 57 IFLE L376 - true
   * 4 gnu.trove.map.hash.TLongFloatHashMap.containsValue(F)Z: I18 Branch 57 IFLE L376 - false
   * 5 gnu.trove.map.hash.TLongFloatHashMap.containsValue(F)Z: I25 Branch 58 IF_ICMPNE L377 - true
   */

  @Test
  public void test21()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      tLongFloatHashMap0.adjustOrPutValue(1040L, (-1.0F), (-1.0F));
      boolean boolean0 = tLongFloatHashMap0.containsValue((-1734.3922F));
      assertEquals(1, tLongFloatHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 22
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.containsValue(F)Z: I31 Branch 59 IFNE L377 - false
   * 2 gnu.trove.map.hash.TLongFloatHashMap.containsValue(F)Z: I18 Branch 57 IFLE L376 - false
   * 3 gnu.trove.map.hash.TLongFloatHashMap.containsValue(F)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 4 gnu.trove.map.hash.TLongFloatHashMap.containsValue(F)Z: I25 Branch 58 IF_ICMPNE L377 - false
   */

  @Test
  public void test22()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      tLongFloatHashMap0.adjustOrPutValue(1040L, (-1.0F), 1224.8359F);
      boolean boolean0 = tLongFloatHashMap0.containsValue(1224.8359F);
      assertEquals("{1040=1224.8359}", tLongFloatHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: I18 Branch 60 IFLE L407 - true
   * 2 gnu.trove.map.hash.TLongFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TLongFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test23()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      boolean boolean0 = tLongFloatHashMap0.forEachValue((TFloatProcedure) null);
      assertEquals(true, boolean0);
      assertEquals(23, tLongFloatHashMap0.capacity());
  }

  //Test case number: 24
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - false
   * 2 gnu.trove.map.hash.TLongFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TLongFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test24()  throws Throwable  {
      long[] longArray0 = new long[2];
      float[] floatArray0 = new float[2];
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(longArray0, floatArray0);
      // Undeclared exception!
      try {
        tLongFloatHashMap0.forEachValue((TFloatProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V: I18 Branch 66 IFLE L434 - true
   * 2 gnu.trove.map.hash.TLongFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V: I18 Branch 66 IFLE L434 - false
   * 3 gnu.trove.map.hash.TLongFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test25()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      tLongFloatHashMap0.transformValues((TFloatFunction) null);
      assertEquals(23, tLongFloatHashMap0.capacity());
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V: I25 Branch 67 IF_ICMPNE L435 - false
   * 2 gnu.trove.map.hash.TLongFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V: I18 Branch 66 IFLE L434 - false
   * 3 gnu.trove.map.hash.TLongFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test26()  throws Throwable  {
      long[] longArray0 = new long[5];
      float[] floatArray0 = new float[1];
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(longArray0, floatArray0);
      // Undeclared exception!
      try {
        tLongFloatHashMap0.transformValues((TFloatFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.retainEntries(Lgnu/trove/procedure/TLongFloatProcedure;)Z: I31 Branch 68 IFLE L453 - true
   * 2 gnu.trove.map.hash.TLongFloatHashMap.retainEntries(Lgnu/trove/procedure/TLongFloatProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TLongFloatHashMap.retainEntries(Lgnu/trove/procedure/TLongFloatProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test27()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      boolean boolean0 = tLongFloatHashMap0.retainEntries((TLongFloatProcedure) null);
      assertEquals(23, tLongFloatHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 28
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.retainEntries(Lgnu/trove/procedure/TLongFloatProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - false
   * 2 gnu.trove.map.hash.TLongFloatHashMap.retainEntries(Lgnu/trove/procedure/TLongFloatProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TLongFloatHashMap.retainEntries(Lgnu/trove/procedure/TLongFloatProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test28()  throws Throwable  {
      long[] longArray0 = new long[9];
      float[] floatArray0 = new float[5];
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(longArray0, floatArray0);
      // Undeclared exception!
      try {
        tLongFloatHashMap0.retainEntries((TLongFloatProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 29
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.adjustValue(JF)Z: I9 Branch 71 IFGE L477 - true
   * 2 gnu.trove.map.hash.TLongFloatHashMap$TLongFloatHashIterator.key()J: root-Branch
   * 3 gnu.trove.map.hash.TLongFloatHashMap$TLongFloatHashIterator.<init>(Lgnu/trove/map/hash/TLongFloatHashMap;Lgnu/trove/map/hash/TLongFloatHashMap;)V: root-Branch
   * 4 gnu.trove.map.hash.TLongFloatHashMap$TLongFloatHashIterator.value()F: root-Branch
   * 5 gnu.trove.map.hash.TLongFloatHashMap$TLongFloatHashIterator.advance()V: root-Branch
   * 6 gnu.trove.map.hash.TLongFloatHashMap.iterator()Lgnu/trove/iterator/TLongFloatIterator;: root-Branch
   * 7 gnu.trove.map.hash.TLongFloatHashMap.putAll(Lgnu/trove/map/TLongFloatMap;)V: I15 Branch 43 IFEQ L243 - true
   * 8 gnu.trove.map.hash.TLongFloatHashMap.putAll(Lgnu/trove/map/TLongFloatMap;)V: I15 Branch 43 IFEQ L243 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      float[] floatArray0 = new float[10];
      TLongFloatHashMap tLongFloatHashMap1 = new TLongFloatHashMap(tLongFloatHashMap0._set, floatArray0);
      tLongFloatHashMap0.putAll((TLongFloatMap) tLongFloatHashMap1);
      boolean boolean0 = tLongFloatHashMap0.adjustValue(0L, 1.0F);
      assertEquals(1, tLongFloatHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.adjustOrPutValue(JFF)F: I9 Branch 72 IFGE L491 - false
   * 2 gnu.trove.map.hash.TLongFloatHashMap.adjustOrPutValue(JFF)F: I58 Branch 73 IFEQ L502 - true
   */

//   @Test
//   public void test30()  throws Throwable  {
//       long[] longArray0 = new long[2];
//       longArray0[1] = (-1936L);
//       float[] floatArray0 = new float[5];
//       TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(longArray0, floatArray0);
//       float float0 = tLongFloatHashMap0.adjustOrPutValue((-1936L), (-1450L), (-1734L));
//       assertEquals("{-1936=-1450.0, 0=0.0}", tLongFloatHashMap0.toString());
//       assertEquals((-1450.0F), float0, 0.01F);
//   }

  //Test case number: 31
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - false
   */

  @Test
  public void test31()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      boolean boolean0 = tLongFloatHashMap0.equals((Object) null);
      assertEquals(23, tLongFloatHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - false
   */

  @Test
  public void test32()  throws Throwable  {
      long[] longArray0 = new long[3];
      float[] floatArray0 = new float[1];
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(longArray0, floatArray0);
      TLongFloatHashMap tLongFloatHashMap1 = new TLongFloatHashMap();
      boolean boolean0 = tLongFloatHashMap0.equals((Object) tLongFloatHashMap1);
      assertEquals(false, boolean0);
      assertEquals(7, tLongFloatHashMap0.capacity());
      assertFalse(tLongFloatHashMap1.equals(tLongFloatHashMap0));
      assertEquals("{0=0.0}", tLongFloatHashMap0.toString());
  }

  //Test case number: 33
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.equals(Ljava/lang/Object;)Z: I85 Branch 78 IFEQ L1200 - false
   * 2 gnu.trove.map.hash.TLongFloatHashMap.equals(Ljava/lang/Object;)Z: I89 Branch 79 IFEQ L1200 - true
   * 3 gnu.trove.map.hash.TLongFloatHashMap.<init>(IFJF)V: root-Branch
   * 4 gnu.trove.map.hash.TLongFloatHashMap.putIfAbsent(JF)F: I9 Branch 39 IFGE L205 - true
   */

  @Test
  public void test33()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap((-1881), (-1881), (-1881), (-1881));
      tLongFloatHashMap0.putIfAbsent((long) 0, (float) (-1881));
      float[] floatArray0 = new float[6];
      TLongFloatHashMap tLongFloatHashMap1 = new TLongFloatHashMap(tLongFloatHashMap0._set, floatArray0);
      boolean boolean0 = tLongFloatHashMap0.equals((Object) tLongFloatHashMap1);
      assertEquals(7, tLongFloatHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 34
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.equals(Ljava/lang/Object;)Z: I89 Branch 79 IFEQ L1200 - false
   * 2 gnu.trove.map.hash.TLongFloatHashMap.equals(Ljava/lang/Object;)Z: I93 Branch 80 IFEQ L1200 - true
   * 3 gnu.trove.map.hash.TLongFloatHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   */

  @Test
  public void test34()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      float[] floatArray0 = new float[10];
      tLongFloatHashMap0.adjustOrPutValue(0L, (-1734.3922F), (-1.0F));
      TLongFloatHashMap tLongFloatHashMap1 = new TLongFloatHashMap(tLongFloatHashMap0._set, floatArray0);
      boolean boolean0 = tLongFloatHashMap0.equals((Object) tLongFloatHashMap1);
      assertEquals("{0=-1.0}", tLongFloatHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 35
  /*
   * 11 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.equals(Ljava/lang/Object;)Z: I93 Branch 80 IFEQ L1200 - false
   * 2 gnu.trove.map.hash.TLongFloatHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 3 gnu.trove.map.hash.TLongFloatHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 4 gnu.trove.map.hash.TLongFloatHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 5 gnu.trove.map.hash.TLongFloatHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 6 gnu.trove.map.hash.TLongFloatHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 7 gnu.trove.map.hash.TLongFloatHashMap.equals(Ljava/lang/Object;)Z: I85 Branch 78 IFEQ L1200 - false
   * 8 gnu.trove.map.hash.TLongFloatHashMap.equals(Ljava/lang/Object;)Z: I89 Branch 79 IFEQ L1200 - false
   * 9 gnu.trove.map.hash.TLongFloatHashMap.doPut(JFI)F: I12 Branch 40 IFGE L214 - false
   * 10 gnu.trove.map.hash.TLongFloatHashMap.doPut(JFI)F: I41 Branch 41 IFEQ L221 - true
   * 11 gnu.trove.map.hash.TLongFloatHashMap.get(J)F: I9 Branch 44 IFGE L253 - true
   */

  @Test
  public void test35()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      float[] floatArray0 = new float[10];
      floatArray0[9] = 1224.8359F;
      tLongFloatHashMap0.adjustOrPutValue(0L, (-1734.3922F), (-1.0F));
      TLongFloatHashMap tLongFloatHashMap1 = new TLongFloatHashMap(tLongFloatHashMap0._set, floatArray0);
      boolean boolean0 = tLongFloatHashMap0.equals((Object) tLongFloatHashMap1);
      assertEquals("{0=-1.0}", tLongFloatHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 36
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - false
   * 2 gnu.trove.map.hash.TLongFloatHashMap.<init>()V: root-Branch
   * 3 gnu.trove.map.hash.TLongFloatHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - true
   * 4 gnu.trove.map.hash.TLongFloatHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - false
   * 5 gnu.trove.map.hash.TLongFloatHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 6 gnu.trove.map.hash.TLongFloatHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 7 gnu.trove.map.hash.TLongFloatHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   */

  @Test
  public void test36()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      HashMap<Long, Float> hashMap0 = new HashMap<Long, Float>();
      Long long0 = new Long((long) 1751);
      hashMap0.put(long0, (Float) 0.0F);
      tLongFloatHashMap0.putAll((Map<? extends Long, ? extends Float>) hashMap0);
      int int0 = tLongFloatHashMap0.hashCode();
      assertEquals("{1751=0.0}", tLongFloatHashMap0.toString());
      assertEquals(1751, int0);
  }

  //Test case number: 37
  /*
   * 14 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap$1.execute(JF)Z: I4 Branch 115 IFEQ L1233 - true
   * 2 gnu.trove.map.hash.TLongFloatHashMap$1.<init>(Lgnu/trove/map/hash/TLongFloatHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 3 gnu.trove.map.hash.TLongFloatHashMap$1.execute(JF)Z: I4 Branch 115 IFEQ L1233 - false
   * 4 gnu.trove.map.hash.TLongFloatHashMap.put(JF)F: root-Branch
   * 5 gnu.trove.map.hash.TLongFloatHashMap.toString()Ljava/lang/String;: root-Branch
   * 6 gnu.trove.map.hash.TLongFloatHashMap.doPut(JFI)F: I12 Branch 40 IFGE L214 - true
   * 7 gnu.trove.map.hash.TLongFloatHashMap.doPut(JFI)F: I41 Branch 41 IFEQ L221 - false
   * 8 gnu.trove.map.hash.TLongFloatHashMap.<init>([J[F)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 9 gnu.trove.map.hash.TLongFloatHashMap.<init>([J[F)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 10 gnu.trove.map.hash.TLongFloatHashMap.forEachEntry(Lgnu/trove/procedure/TLongFloatProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 11 gnu.trove.map.hash.TLongFloatHashMap.forEachEntry(Lgnu/trove/procedure/TLongFloatProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 12 gnu.trove.map.hash.TLongFloatHashMap.forEachEntry(Lgnu/trove/procedure/TLongFloatProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 13 gnu.trove.map.hash.TLongFloatHashMap.forEachEntry(Lgnu/trove/procedure/TLongFloatProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 14 gnu.trove.map.hash.TLongFloatHashMap.forEachEntry(Lgnu/trove/procedure/TLongFloatProcedure;)Z: I39 Branch 65 IFNE L422 - true
   */

  @Test
  public void test37()  throws Throwable  {
      long[] longArray0 = new long[2];
      longArray0[0] = (-1734L);
      float[] floatArray0 = new float[5];
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(longArray0, floatArray0);
      String string0 = tLongFloatHashMap0.toString();
      assertEquals("{-1734=0.0, 0=0.0}", string0);
      assertNotNull(string0);
      assertEquals(11, tLongFloatHashMap0.capacity());
      assertEquals(2, tLongFloatHashMap0.size());
  }

  //Test case number: 38
  /*
   * 12 covered goals:
   * 1 gnu.trove.map.hash.TLongFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - false
   * 2 gnu.trove.map.hash.TLongFloatHashMap.<init>(IF)V: root-Branch
   * 3 gnu.trove.map.hash.TLongFloatHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.hash.TLongFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - true
   * 5 gnu.trove.map.hash.TLongFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - false
   * 6 gnu.trove.map.hash.TLongFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - true
   * 7 gnu.trove.map.hash.TLongFloatHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 8 gnu.trove.map.hash.TLongFloatHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 9 gnu.trove.map.hash.TLongFloatHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 10 gnu.trove.map.hash.TLongFloatHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 11 gnu.trove.map.hash.TLongFloatHashMap.adjustOrPutValue(JFF)F: I9 Branch 72 IFGE L491 - true
   * 12 gnu.trove.map.hash.TLongFloatHashMap.adjustOrPutValue(JFF)F: I58 Branch 73 IFEQ L502 - false
   */

  @Test
  public void test38()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(2147483637, (-1497.6847F));
      tLongFloatHashMap0.adjustOrPutValue(0L, (-1497.6847F), (float) (-2147483634));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PrintStream printStream0 = new PrintStream((OutputStream) pipedOutputStream0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) printStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) bufferedOutputStream0);
      tLongFloatHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
  }
}

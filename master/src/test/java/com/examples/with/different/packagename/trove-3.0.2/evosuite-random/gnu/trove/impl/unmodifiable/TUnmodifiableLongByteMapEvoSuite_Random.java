/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TByteFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongByteMap;
import gnu.trove.map.TLongByteMap;
import gnu.trove.map.hash.TLongByteHashMap;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Locale;
import javax.swing.text.Segment;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableLongByteMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = 127;
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(int0);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap0 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap0);
      tUnmodifiableLongByteMap0.get((long) int0);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap1 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap0);
      tUnmodifiableLongByteMap1.getNoEntryValue();
      byte byte0 = (byte)0;
      tUnmodifiableLongByteMap1.containsValue(byte0);
      TLongByteHashMap tLongByteHashMap1 = new TLongByteHashMap();
      tUnmodifiableLongByteMap0.size();
      tUnmodifiableLongByteMap1.containsValue(byte0);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap2 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap1);
      byte byte1 = (byte)0;
      tUnmodifiableLongByteMap2.containsValue(byte1);
      TLongByteMap tLongByteMap0 = null;
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap3 = null;
      try {
        tUnmodifiableLongByteMap3 = new TUnmodifiableLongByteMap(tLongByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap();
      long long0 = 0L;
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap0 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap0);
      Locale locale0 = Locale.UK;
      Locale locale1 = Locale.ENGLISH;
      String string0 = locale0.getDisplayVariant(locale1);
      boolean boolean0 = tUnmodifiableLongByteMap0.equals((Object) string0);
      assertEquals(false, boolean0);
      
      tLongByteHashMap0.containsKey(long0);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap1 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap0);
      String string1 = tUnmodifiableLongByteMap1.toString();
      assertNotNull(string1);
      
      tUnmodifiableLongByteMap1.iterator();
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap2 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap0);
      tUnmodifiableLongByteMap1.size();
      TUnmodifiableByteCollection tUnmodifiableByteCollection0 = (TUnmodifiableByteCollection)tUnmodifiableLongByteMap2.valueCollection();
      assertNotNull(tUnmodifiableByteCollection0);
      
      tUnmodifiableLongByteMap2.toString();
      assertTrue(tUnmodifiableLongByteMap2.equals(tUnmodifiableLongByteMap0));
      assertTrue(tUnmodifiableLongByteMap2.equals(tUnmodifiableLongByteMap1));
  }

  @Test
  public void test2()  throws Throwable  {
      long[] longArray0 = new long[5];
      long long0 = 1351L;
      longArray0[0] = long0;
      long long1 = 0L;
      longArray0[1] = long1;
      long long2 = 392L;
      longArray0[2] = long2;
      long long3 = 0L;
      longArray0[3] = long3;
      long long4 = 1299L;
      longArray0[4] = long4;
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte) (-35);
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-58);
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      byte byte4 = (byte)30;
      byteArray0[4] = byte4;
      byte byte5 = (byte)63;
      byteArray0[5] = byte5;
      byte byte6 = (byte)102;
      byteArray0[6] = byte6;
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(longArray0, byteArray0);
      TLongByteHashMap tLongByteHashMap1 = new TLongByteHashMap((TLongByteMap) tLongByteHashMap0);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap0 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap1);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap1 = new TUnmodifiableLongByteMap((TLongByteMap) tUnmodifiableLongByteMap0);
      tUnmodifiableLongByteMap1.isEmpty();
      int int0 = (-1964);
      float float0 = 0.5F;
      TLongByteHashMap tLongByteHashMap2 = new TLongByteHashMap(int0, int0);
      TLongByteHashMap tLongByteHashMap3 = new TLongByteHashMap((TLongByteMap) tLongByteHashMap2);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap2 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap3);
      long[] longArray1 = tUnmodifiableLongByteMap2.keys();
      assertNotNull(longArray1);
      
      long long5 = (-159L);
      byte byte7 = (byte)0;
      float float1 = 0.0F;
      TLongByteHashMap tLongByteHashMap4 = new TLongByteHashMap((int) byte7, float1);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap3 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap4);
      tUnmodifiableLongByteMap3.size();
      long long6 = (-1784L);
      // Undeclared exception!
      try {
        tUnmodifiableLongByteMap3.remove(long6);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = 0;
      byte byte0 = (byte) (-51);
      int int1 = 1182;
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(int1, int1);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap0 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap0);
      tUnmodifiableLongByteMap0.values();
      tLongByteHashMap0.iterator();
      TLongByteMap tLongByteMap0 = null;
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap1 = null;
      try {
        tUnmodifiableLongByteMap1 = new TUnmodifiableLongByteMap(tLongByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap();
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap0 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap0);
      long long0 = (-1329L);
      // Undeclared exception!
      try {
        tUnmodifiableLongByteMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = 64;
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(int0);
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)95;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-17);
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-108);
      byteArray0[2] = byte2;
      byte byte3 = (byte)34;
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-60);
      byteArray0[4] = byte4;
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap0 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap0);
      long[] longArray0 = tUnmodifiableLongByteMap0.keys();
      assertNotNull(longArray0);
      
      tLongByteHashMap0._states = byteArray0;
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap1 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap0);
      boolean boolean0 = tUnmodifiableLongByteMap1.isEmpty();
      assertEquals(true, boolean0);
      
      byte byte5 = (byte) (-109);
      byte byte6 = (byte) (-1);
      long long0 = 1L;
      long long1 = (-724L);
      // Undeclared exception!
      try {
        tUnmodifiableLongByteMap1.get(long1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 91
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = 1201;
      long long0 = 0L;
      byte byte0 = (byte) (-24);
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(int0, (float) int0, long0, byte0);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap0 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap0);
      tUnmodifiableLongByteMap0.containsKey(long0);
      int int1 = (-994);
      byte byte1 = (byte)19;
      TLongByteHashMap tLongByteHashMap1 = new TLongByteHashMap(int1, (float) int0, (long) int1, byte1);
      TLongByteHashMap tLongByteHashMap2 = new TLongByteHashMap((TLongByteMap) tLongByteHashMap1);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap1 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap2);
      long long1 = tUnmodifiableLongByteMap1.getNoEntryKey();
      assertEquals((-994L), long1);
      
      byte[] byteArray0 = tUnmodifiableLongByteMap1.values();
      assertNotNull(byteArray0);
      
      TLongByteHashMap tLongByteHashMap3 = new TLongByteHashMap(int0, int0);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap2 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap3);
      boolean boolean0 = tUnmodifiableLongByteMap2.isEmpty();
      assertEquals(true, boolean0);
      
      tUnmodifiableLongByteMap2.iterator();
      long long2 = 0L;
      tUnmodifiableLongByteMap1.containsKey(long2);
      assertFalse(long2 == long1);
  }

  @Test
  public void test7()  throws Throwable  {
      TLongByteMap tLongByteMap0 = null;
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap0 = null;
      try {
        tUnmodifiableLongByteMap0 = new TUnmodifiableLongByteMap(tLongByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      long[] longArray0 = new long[2];
      long long0 = 9223372036854775807L;
      longArray0[0] = long0;
      long long1 = (-9223372036854775808L);
      longArray0[1] = long1;
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)107;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-108);
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-1);
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      byte byte4 = (byte)88;
      byteArray0[4] = byte4;
      byte byte5 = (byte)0;
      byteArray0[5] = byte5;
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(longArray0, byteArray0);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap0 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap0);
      assertEquals(2, tUnmodifiableLongByteMap0.size());
  }

  @Test
  public void test9()  throws Throwable  {
      long[] longArray0 = new long[1];
      long long0 = (-1L);
      longArray0[0] = long0;
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte) (-43);
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-119);
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      byte byte3 = (byte)39;
      byteArray0[3] = byte3;
      int int0 = 0;
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(int0, (float) byteArray0[3]);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap0 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap0);
      tUnmodifiableLongByteMap0.keys();
      byte byte4 = (byte) (-4);
      byteArray0[4] = byte4;
      byte byte5 = (byte)55;
      byteArray0[5] = byte5;
      byte byte6 = (byte)67;
      byteArray0[6] = byte6;
      TLongByteHashMap tLongByteHashMap1 = new TLongByteHashMap(longArray0, byteArray0);
      byteArray0[0] = byte1;
      byteArray0[1] = byte3;
      byteArray0[2] = byte3;
      byte byte7 = (byte) (-1);
      byteArray0[3] = byte7;
      byteArray0[4] = byte0;
      byteArray0[5] = byte6;
      byteArray0[6] = byte6;
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap1 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap1);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap2 = new TUnmodifiableLongByteMap((TLongByteMap) tUnmodifiableLongByteMap1);
      tUnmodifiableLongByteMap2.keySet();
      long long1 = 1763L;
      byte byte8 = tLongByteHashMap0.remove(long1);
      assertFalse(byte8 == byte5);
  }

  @Test
  public void test10()  throws Throwable  {
      long[] longArray0 = new long[6];
      long long0 = 899L;
      longArray0[0] = long0;
      long long1 = (-764L);
      longArray0[1] = long1;
      long long2 = 9223372036854775807L;
      longArray0[2] = long2;
      long long3 = 1812L;
      longArray0[3] = long3;
      long long4 = 783L;
      longArray0[4] = long4;
      long long5 = (-1104L);
      longArray0[5] = long5;
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-92);
      byteArray0[1] = byte1;
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(longArray0, byteArray0);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap0 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap0);
      Object object0 = null;
      boolean boolean0 = tUnmodifiableLongByteMap0.equals(object0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 1330;
      float float0 = 57.550728F;
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(int0, float0);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap0 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap0);
      long[] longArray0 = tUnmodifiableLongByteMap0.keys(tLongByteHashMap0._set);
      assertNotNull(longArray0);
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = (-1800);
      float float0 = 39.465843F;
      long long0 = 0L;
      byte byte0 = (byte) (-57);
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(int0, float0, long0, byte0);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap0 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap0);
      long long1 = 669L;
      // Undeclared exception!
      try {
        tUnmodifiableLongByteMap0.remove(long1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = 11861791;
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(int0);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap0 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap0);
      TByteFunction tByteFunction0 = null;
      // Undeclared exception!
      try {
        tUnmodifiableLongByteMap0.transformValues(tByteFunction0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 160;
      byte byte0 = (byte) (-107);
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(int0, (float) int0, (long) int0, byte0);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap0 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap0);
      assertEquals("{}", tUnmodifiableLongByteMap0.toString());
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = 38747;
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(int0);
      boolean boolean0 = true;
      tLongByteHashMap0.iterator();
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap0 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap0);
      String string0 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://#
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      long[] longArray0 = new long[3];
      long long0 = 470L;
      longArray0[0] = long0;
      long long1 = (-192L);
      longArray0[1] = long1;
      long long2 = 0L;
      longArray0[2] = long2;
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte) (-44);
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-1);
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-62);
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(longArray0, byteArray0);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap0 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap0);
      tUnmodifiableLongByteMap0.keys(longArray0);
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      byte byte4 = (byte)0;
      byteArray0[4] = byte4;
      TLongByteHashMap tLongByteHashMap1 = new TLongByteHashMap(longArray0, byteArray0);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap1 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap1);
      long long3 = (-736L);
      tLongByteHashMap1.containsKey((long) byteArray0[4]);
      // Undeclared exception!
      try {
        tUnmodifiableLongByteMap1.increment(long3);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      long[] longArray0 = new long[5];
      long long0 = 290L;
      longArray0[0] = long0;
      long long1 = (-2027L);
      longArray0[1] = long1;
      long long2 = 0L;
      longArray0[2] = long2;
      long long3 = (-386L);
      longArray0[3] = long3;
      long long4 = (-1736L);
      longArray0[4] = long4;
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte) (-30);
      byteArray0[0] = byte0;
      byte byte1 = (byte)25;
      byteArray0[1] = byte1;
      byte byte2 = (byte)34;
      byteArray0[2] = byte2;
      byte byte3 = (byte)100;
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-67);
      byteArray0[4] = byte4;
      byte byte5 = (byte)0;
      byteArray0[0] = byte4;
      byteArray0[1] = byte5;
      byteArray0[2] = byte4;
      byte byte6 = (byte)0;
      byteArray0[3] = byte6;
      byte byte7 = (byte) (-121);
      byteArray0[4] = byte7;
      byteArray0[5] = byte2;
      byteArray0[6] = byte6;
      byteArray0[5] = byte5;
      byte byte8 = (byte) (-75);
      byteArray0[6] = byte8;
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(longArray0, byteArray0);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap0 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap0);
      tUnmodifiableLongByteMap0.keySet();
      int int0 = (-1468);
      TLongByteHashMap tLongByteHashMap1 = new TLongByteHashMap(int0);
      // Undeclared exception!
      try {
        tUnmodifiableLongByteMap0.putAll((TLongByteMap) tLongByteHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      TLongByteMap tLongByteMap0 = null;
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap0 = null;
      try {
        tUnmodifiableLongByteMap0 = new TUnmodifiableLongByteMap(tLongByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test19()  throws Throwable  {
      long[] longArray0 = new long[2];
      long long0 = 0L;
      longArray0[0] = long0;
      long long1 = 823L;
      longArray0[0] = long0;
      longArray0[1] = long1;
      longArray0[1] = long1;
      int int0 = 0;
      long long2 = 0L;
      byte byte0 = (byte) (-27);
      TLongByteHashMap tLongByteHashMap0 = new TLongByteHashMap(int0, (float) longArray0[1], long2, byte0);
      TUnmodifiableLongByteMap tUnmodifiableLongByteMap0 = new TUnmodifiableLongByteMap((TLongByteMap) tLongByteHashMap0);
      char[] charArray0 = new char[9];
      char char0 = 'C';
      charArray0[0] = char0;
      char char1 = '8';
      charArray0[1] = char1;
      char char2 = '|';
      charArray0[2] = char2;
      char char3 = '\\';
      charArray0[3] = char3;
      char char4 = ']';
      charArray0[4] = char4;
      char char5 = 'r';
      charArray0[5] = char5;
      char char6 = 'I';
      charArray0[6] = char6;
      char char7 = '+';
      charArray0[7] = char7;
      char char8 = '0';
      charArray0[8] = char8;
      Segment segment0 = new Segment(charArray0, (int) charArray0[3], (int) char4);
      // Undeclared exception!
      try {
        segment0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 185
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.set.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TCharCollection;
import gnu.trove.list.array.TCharArrayList;
import gnu.trove.set.hash.TCharHashSet;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.Collection;
import java.util.LinkedList;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TCharHashSetEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 12 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet$TCharHashIterator.next()C: root-Branch
   * 2 gnu.trove.set.hash.TCharHashSet$TCharHashIterator.<init>(Lgnu/trove/set/hash/TCharHashSet;Lgnu/trove/impl/hash/TCharHash;)V: root-Branch
   * 3 gnu.trove.set.hash.TCharHashSet.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 4 gnu.trove.set.hash.TCharHashSet.<init>(I)V: root-Branch
   * 5 gnu.trove.set.hash.TCharHashSet.<init>(Ljava/util/Collection;)V: root-Branch
   * 6 gnu.trove.set.hash.TCharHashSet.add(C)Z: I9 Branch 9 IFGE L196 - true
   * 7 gnu.trove.set.hash.TCharHashSet.addAll(Ljava/util/Collection;)Z: I12 Branch 18 IFEQ L261 - true
   * 8 gnu.trove.set.hash.TCharHashSet.addAll(Ljava/util/Collection;)Z: I12 Branch 18 IFEQ L261 - false
   * 9 gnu.trove.set.hash.TCharHashSet.addAll(Ljava/util/Collection;)Z: I27 Branch 19 IFEQ L263 - false
   * 10 gnu.trove.set.hash.TCharHashSet.retainAll(Ljava/util/Collection;)Z: I13 Branch 24 IFEQ L302 - true
   * 11 gnu.trove.set.hash.TCharHashSet.retainAll(Ljava/util/Collection;)Z: I13 Branch 24 IFEQ L302 - false
   * 12 gnu.trove.set.hash.TCharHashSet.retainAll(Ljava/util/Collection;)Z: I21 Branch 25 IFGT L303 - true
   */

  @Test
  public void test0()  throws Throwable  {
      LinkedList<Character> linkedList0 = new LinkedList<Character>();
      Character character0 = Character.valueOf('l');
      linkedList0.add(character0);
      TCharHashSet tCharHashSet0 = new TCharHashSet((Collection<? extends Character>) linkedList0);
      boolean boolean0 = tCharHashSet0.retainAll((Collection<?>) linkedList0);
      assertEquals(false, boolean0);
      assertEquals(1, tCharHashSet0.size());
      assertEquals("{l}", tCharHashSet0.toString());
  }

  //Test case number: 1
  /*
   * 11 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.<init>(Lgnu/trove/TCharCollection;)V: I12 Branch 2 IFEQ L127 - true
   * 2 gnu.trove.set.hash.TCharHashSet.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 20 IFEQ L275 - true
   * 3 gnu.trove.set.hash.TCharHashSet.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 20 IFEQ L275 - false
   * 4 gnu.trove.set.hash.TCharHashSet.addAll(Lgnu/trove/TCharCollection;)Z: I24 Branch 21 IFEQ L277 - true
   * 5 gnu.trove.set.hash.TCharHashSet.addAll(Lgnu/trove/TCharCollection;)Z: I24 Branch 21 IFEQ L277 - false
   * 6 gnu.trove.set.hash.TCharHashSet.<init>([C)V: root-Branch
   * 7 gnu.trove.set.hash.TCharHashSet.addAll([C)Z: I12 Branch 22 IFLE L288 - true
   * 8 gnu.trove.set.hash.TCharHashSet.addAll([C)Z: I12 Branch 22 IFLE L288 - false
   * 9 gnu.trove.set.hash.TCharHashSet.addAll([C)Z: I20 Branch 23 IFEQ L289 - true
   * 10 gnu.trove.set.hash.TCharHashSet.addAll([C)Z: I20 Branch 23 IFEQ L289 - false
   * 11 gnu.trove.set.hash.TCharHashSet.add(C)Z: I9 Branch 9 IFGE L196 - false
   */

  @Test
  public void test1()  throws Throwable  {
      char[] charArray0 = new char[13];
      TCharHashSet tCharHashSet0 = new TCharHashSet(charArray0);
      TCharArrayList tCharArrayList0 = new TCharArrayList(tCharHashSet0._set);
      TCharHashSet tCharHashSet1 = new TCharHashSet((TCharCollection) tCharArrayList0);
      assertTrue(tCharHashSet1.equals(tCharHashSet0));
      assertEquals(1, tCharHashSet1.size());
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.<init>(Lgnu/trove/TCharCollection;)V: I12 Branch 2 IFEQ L127 - false
   * 2 gnu.trove.set.hash.TCharHashSet.<init>(Lgnu/trove/TCharCollection;)V: I34 Branch 3 IFEQ L132 - true
   * 3 gnu.trove.set.hash.TCharHashSet.<init>()V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      TCharHashSet tCharHashSet1 = new TCharHashSet((TCharCollection) tCharHashSet0);
      assertEquals(23, tCharHashSet1.capacity());
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.<init>(Lgnu/trove/TCharCollection;)V: I34 Branch 3 IFEQ L132 - false
   * 2 gnu.trove.set.hash.TCharHashSet.<init>(Lgnu/trove/TCharCollection;)V: I12 Branch 2 IFEQ L127 - false
   * 3 gnu.trove.set.hash.TCharHashSet.<init>(IFC)V: I10 Branch 1 IFEQ L101 - false
   */

  @Test
  public void test3()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet(10, (float) 10, '_');
      TCharHashSet tCharHashSet1 = new TCharHashSet((TCharCollection) tCharHashSet0);
      assertEquals('_', tCharHashSet1.getNoEntryValue());
      assertEquals(3, tCharHashSet1.capacity());
  }

  //Test case number: 4
  /*
   * 4 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.toArray()[C: I34 Branch 5 IF_ICMPNE L166 - false
   * 2 gnu.trove.set.hash.TCharHashSet.toArray()[C: I27 Branch 4 IFLE L165 - true
   * 3 gnu.trove.set.hash.TCharHashSet.toArray()[C: I27 Branch 4 IFLE L165 - false
   * 4 gnu.trove.set.hash.TCharHashSet.toArray()[C: I34 Branch 5 IF_ICMPNE L166 - true
   */

  @Test
  public void test4()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      tCharHashSet0.addAll(tCharHashSet0._set);
      tCharHashSet0.toArray();
      assertEquals(false, tCharHashSet0.isEmpty());
      assertEquals(1, tCharHashSet0.size());
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.toArray([C)[C: I28 Branch 7 IF_ICMPNE L180 - false
   * 2 gnu.trove.set.hash.TCharHashSet.toArray([C)[C: I45 Branch 8 IF_ICMPLE L185 - false
   * 3 gnu.trove.set.hash.TCharHashSet.toArray([C)[C: I21 Branch 6 IFLE L179 - true
   * 4 gnu.trove.set.hash.TCharHashSet.toArray([C)[C: I21 Branch 6 IFLE L179 - false
   * 5 gnu.trove.set.hash.TCharHashSet.toArray([C)[C: I28 Branch 7 IF_ICMPNE L180 - true
   */

  @Test
  public void test5()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      tCharHashSet0.add('\u0089');
      tCharHashSet0.toArray(tCharHashSet0._set);
      assertEquals("{\u0089}", tCharHashSet0.toString());
      assertEquals(1, tCharHashSet0.size());
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.toArray([C)[C: I45 Branch 8 IF_ICMPLE L185 - true
   * 2 gnu.trove.set.hash.TCharHashSet.toArray([C)[C: I21 Branch 6 IFLE L179 - true
   * 3 gnu.trove.set.hash.TCharHashSet.toArray([C)[C: I21 Branch 6 IFLE L179 - false
   * 4 gnu.trove.set.hash.TCharHashSet.toArray([C)[C: I28 Branch 7 IF_ICMPNE L180 - true
   * 5 gnu.trove.set.hash.TCharHashSet.toArray([C)[C: I28 Branch 7 IF_ICMPNE L180 - false
   */

  @Test
  public void test6()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet(10, (float) 10, '\u0001');
      char[] charArray0 = new char[1];
      tCharHashSet0.addAll(charArray0);
      char[] charArray1 = tCharHashSet0.toArray(charArray0);
      assertEquals(false, tCharHashSet0.isEmpty());
      assertSame(charArray1, charArray0);
  }

  //Test case number: 7
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.containsAll(Ljava/util/Collection;)Z: I8 Branch 11 IFEQ L219 - false
   * 2 gnu.trove.set.hash.TCharHashSet.containsAll(Ljava/util/Collection;)Z: I16 Branch 12 IFEQ L220 - false
   * 3 gnu.trove.set.hash.TCharHashSet.containsAll(Ljava/util/Collection;)Z: I28 Branch 13 IFNE L222 - false
   */

  @Test
  public void test7()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      Character character0 = new Character('/');
      linkedList0.add((Object) character0);
      boolean boolean0 = tCharHashSet0.containsAll((Collection<?>) linkedList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.set.hash.TCharHashSet.containsAll(Ljava/util/Collection;)Z: I16 Branch 12 IFEQ L220 - true
   */

  @Test
  public void test8()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      linkedList0.add((Object) "[]");
      boolean boolean0 = tCharHashSet0.containsAll((Collection<?>) linkedList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 9
  /*
   * 4 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.containsAll(Ljava/util/Collection;)Z: I28 Branch 13 IFNE L222 - true
   * 2 gnu.trove.set.hash.TCharHashSet.containsAll(Ljava/util/Collection;)Z: I8 Branch 11 IFEQ L219 - true
   * 3 gnu.trove.set.hash.TCharHashSet.containsAll(Ljava/util/Collection;)Z: I8 Branch 11 IFEQ L219 - false
   * 4 gnu.trove.set.hash.TCharHashSet.containsAll(Ljava/util/Collection;)Z: I16 Branch 12 IFEQ L220 - false
   */

  @Test
  public void test9()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      Character character0 = new Character('/');
      linkedList0.add((Object) character0);
      char[] charArray0 = new char[7];
      charArray0[2] = '/';
      tCharHashSet0.addAll(charArray0);
      boolean boolean0 = tCharHashSet0.containsAll((Collection<?>) linkedList0);
      assertEquals(false, tCharHashSet0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.containsAll(Lgnu/trove/TCharCollection;)Z: I9 Branch 14 IFEQ L237 - false
   * 2 gnu.trove.set.hash.TCharHashSet.containsAll(Lgnu/trove/TCharCollection;)Z: I20 Branch 15 IFNE L239 - false
   */

  @Test
  public void test10()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(tCharHashSet0._set, 'W');
      boolean boolean0 = tCharHashSet0.containsAll((TCharCollection) tCharArrayList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.containsAll(Lgnu/trove/TCharCollection;)Z: I20 Branch 15 IFNE L239 - true
   * 2 gnu.trove.set.hash.TCharHashSet.containsAll(Lgnu/trove/TCharCollection;)Z: I9 Branch 14 IFEQ L237 - true
   * 3 gnu.trove.set.hash.TCharHashSet.containsAll(Lgnu/trove/TCharCollection;)Z: I9 Branch 14 IFEQ L237 - false
   */

  @Test
  public void test11()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      tCharHashSet0.addAll(tCharHashSet0._set);
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(tCharHashSet0._set, 'W');
      boolean boolean0 = tCharHashSet0.containsAll((TCharCollection) tCharArrayList0);
      assertEquals("{\u0000}", tCharHashSet0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 12
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.containsAll([C)Z: I8 Branch 16 IFLE L249 - true
   * 2 gnu.trove.set.hash.TCharHashSet.containsAll([C)Z: I8 Branch 16 IFLE L249 - false
   * 3 gnu.trove.set.hash.TCharHashSet.containsAll([C)Z: I16 Branch 17 IFNE L250 - true
   */

  @Test
  public void test12()  throws Throwable  {
      char[] charArray0 = new char[13];
      TCharHashSet tCharHashSet0 = new TCharHashSet(charArray0);
      boolean boolean0 = tCharHashSet0.containsAll(tCharHashSet0._set);
      assertEquals(1, tCharHashSet0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 2 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.containsAll([C)Z: I16 Branch 17 IFNE L250 - false
   * 2 gnu.trove.set.hash.TCharHashSet.containsAll([C)Z: I8 Branch 16 IFLE L249 - false
   */

  @Test
  public void test13()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet((-1), (float) (-1), '\u0004');
      boolean boolean0 = tCharHashSet0.containsAll(tCharHashSet0._set);
      assertEquals(false, boolean0);
  }

  //Test case number: 14
  /*
   * 5 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.addAll(Ljava/util/Collection;)Z: I27 Branch 19 IFEQ L263 - true
   * 2 gnu.trove.set.hash.TCharHashSet.<init>(Ljava/util/Collection;)V: root-Branch
   * 3 gnu.trove.set.hash.TCharHashSet.addAll(Ljava/util/Collection;)Z: I12 Branch 18 IFEQ L261 - true
   * 4 gnu.trove.set.hash.TCharHashSet.addAll(Ljava/util/Collection;)Z: I12 Branch 18 IFEQ L261 - false
   * 5 gnu.trove.set.hash.TCharHashSet.addAll(Ljava/util/Collection;)Z: I27 Branch 19 IFEQ L263 - false
   */

  @Test
  public void test14()  throws Throwable  {
      LinkedList<Character> linkedList0 = new LinkedList<Character>();
      Character character0 = Character.valueOf('l');
      linkedList0.add(character0);
      linkedList0.add((Character) 'l');
      TCharHashSet tCharHashSet0 = new TCharHashSet((Collection<? extends Character>) linkedList0);
      assertEquals(false, tCharHashSet0.isEmpty());
      assertEquals("{l}", tCharHashSet0.toString());
  }

  //Test case number: 15
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.retainAll(Ljava/util/Collection;)Z: I21 Branch 25 IFGT L303 - false
   * 2 gnu.trove.set.hash.TCharHashSet.retainAll(Ljava/util/Collection;)Z: I13 Branch 24 IFEQ L302 - true
   * 3 gnu.trove.set.hash.TCharHashSet.retainAll(Ljava/util/Collection;)Z: I13 Branch 24 IFEQ L302 - false
   */

  @Test
  public void test15()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      tCharHashSet0.addAll(tCharHashSet0._set);
      assertEquals(false, tCharHashSet0.isEmpty());
      
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      boolean boolean0 = tCharHashSet0.retainAll((Collection<?>) linkedList0);
      assertEquals(true, boolean0);
  }

  //Test case number: 16
  /*
   * 9 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.retainAll(Lgnu/trove/TCharCollection;)Z: I4 Branch 26 IF_ACMPNE L314 - true
   * 2 gnu.trove.set.hash.TCharHashSet.retainAll(Lgnu/trove/TCharCollection;)Z: I22 Branch 27 IFEQ L319 - true
   * 3 gnu.trove.set.hash.TCharHashSet.retainAll(Lgnu/trove/TCharCollection;)Z: I22 Branch 27 IFEQ L319 - false
   * 4 gnu.trove.set.hash.TCharHashSet.retainAll(Lgnu/trove/TCharCollection;)Z: I29 Branch 28 IFNE L320 - false
   * 5 gnu.trove.set.hash.TCharHashSet.rehash(I)V: I35 Branch 40 IFLE L410 - true
   * 6 gnu.trove.set.hash.TCharHashSet.rehash(I)V: I35 Branch 40 IFLE L410 - false
   * 7 gnu.trove.set.hash.TCharHashSet.rehash(I)V: I42 Branch 41 IF_ICMPNE L411 - true
   * 8 gnu.trove.set.hash.TCharHashSet.rehash(I)V: I42 Branch 41 IF_ICMPNE L411 - false
   * 9 gnu.trove.set.hash.TCharHashSet.<init>(IF)V: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet(0, (-392.5746F));
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(tCharHashSet0._set, '\u001D');
      tCharHashSet0.addAll((TCharCollection) tCharArrayList0);
      TCharHashSet tCharHashSet1 = new TCharHashSet(0, 0);
      boolean boolean0 = tCharHashSet0.retainAll((TCharCollection) tCharHashSet1);
      assertEquals(7, tCharHashSet0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 7 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.retainAll(Lgnu/trove/TCharCollection;)Z: I29 Branch 28 IFNE L320 - true
   * 2 gnu.trove.set.hash.TCharHashSet$TCharHashIterator.next()C: root-Branch
   * 3 gnu.trove.set.hash.TCharHashSet$TCharHashIterator.<init>(Lgnu/trove/set/hash/TCharHashSet;Lgnu/trove/impl/hash/TCharHash;)V: root-Branch
   * 4 gnu.trove.set.hash.TCharHashSet.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 5 gnu.trove.set.hash.TCharHashSet.retainAll(Lgnu/trove/TCharCollection;)Z: I4 Branch 26 IF_ACMPNE L314 - false
   * 6 gnu.trove.set.hash.TCharHashSet.retainAll(Lgnu/trove/TCharCollection;)Z: I22 Branch 27 IFEQ L319 - true
   * 7 gnu.trove.set.hash.TCharHashSet.retainAll(Lgnu/trove/TCharCollection;)Z: I22 Branch 27 IFEQ L319 - false
   */

  @Test
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[8];
      TCharHashSet tCharHashSet0 = new TCharHashSet(charArray0);
      TCharHashSet tCharHashSet1 = new TCharHashSet(charArray0);
      boolean boolean0 = tCharHashSet0.retainAll((TCharCollection) tCharHashSet1);
      assertEquals(false, boolean0);
      assertEquals(1, tCharHashSet0.size());
      assertEquals("{\u0000}", tCharHashSet1.toString());
  }

  //Test case number: 18
  /*
   * 6 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.retainAll([C)Z: I39 Branch 31 IFGE L337 - false
   * 2 gnu.trove.set.hash.TCharHashSet.retainAll([C)Z: I26 Branch 29 IFLE L336 - true
   * 3 gnu.trove.set.hash.TCharHashSet.retainAll([C)Z: I26 Branch 29 IFLE L336 - false
   * 4 gnu.trove.set.hash.TCharHashSet.retainAll([C)Z: I33 Branch 30 IF_ICMPNE L337 - true
   * 5 gnu.trove.set.hash.TCharHashSet.retainAll([C)Z: I33 Branch 30 IF_ICMPNE L337 - false
   * 6 gnu.trove.set.hash.TCharHashSet.retainAll([C)Z: I39 Branch 31 IFGE L337 - true
   */

  @Test
  public void test18()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      char[] charArray0 = new char[6];
      charArray0[0] = 'x';
      tCharHashSet0.addAll(charArray0);
      tCharHashSet0.retainAll(charArray0);
      charArray0[5] = 'A';
      boolean boolean0 = tCharHashSet0.retainAll(charArray0);
      assertEquals(false, tCharHashSet0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 19
  /*
   * 5 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.removeAll(Ljava/util/Collection;)Z: I12 Branch 32 IFEQ L349 - false
   * 2 gnu.trove.set.hash.TCharHashSet.removeAll(Ljava/util/Collection;)Z: I20 Branch 33 IFEQ L350 - false
   * 3 gnu.trove.set.hash.TCharHashSet.removeAll(Ljava/util/Collection;)Z: I32 Branch 34 IFEQ L352 - true
   * 4 gnu.trove.set.hash.TCharHashSet.removeAll(Ljava/util/Collection;)Z: I12 Branch 32 IFEQ L349 - true
   * 5 gnu.trove.set.hash.TCharHashSet.remove(C)Z: I9 Branch 10 IFLT L209 - true
   */

  @Test
  public void test19()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      Character character0 = new Character('/');
      linkedList0.add((Object) character0);
      boolean boolean0 = tCharHashSet0.removeAll((Collection<?>) linkedList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.set.hash.TCharHashSet.removeAll(Ljava/util/Collection;)Z: I20 Branch 33 IFEQ L350 - true
   */

  @Test
  public void test20()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      linkedList0.add((Object) "[]");
      boolean boolean0 = tCharHashSet0.removeAll((Collection<?>) linkedList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 21
  /*
   * 5 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.removeAll(Ljava/util/Collection;)Z: I32 Branch 34 IFEQ L352 - false
   * 2 gnu.trove.set.hash.TCharHashSet.removeAll(Ljava/util/Collection;)Z: I12 Branch 32 IFEQ L349 - true
   * 3 gnu.trove.set.hash.TCharHashSet.removeAll(Ljava/util/Collection;)Z: I12 Branch 32 IFEQ L349 - false
   * 4 gnu.trove.set.hash.TCharHashSet.removeAll(Ljava/util/Collection;)Z: I20 Branch 33 IFEQ L350 - false
   * 5 gnu.trove.set.hash.TCharHashSet.remove(C)Z: I9 Branch 10 IFLT L209 - false
   */

  @Test
  public void test21()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      Character character0 = new Character('/');
      linkedList0.add((Object) character0);
      char[] charArray0 = new char[7];
      charArray0[2] = '/';
      tCharHashSet0.addAll(charArray0);
      boolean boolean0 = tCharHashSet0.removeAll((Collection<?>) linkedList0);
      assertEquals(false, tCharHashSet0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 22
  /*
   * 4 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.removeAll(Lgnu/trove/TCharCollection;)Z: I24 Branch 36 IFEQ L367 - false
   * 2 gnu.trove.set.hash.TCharHashSet.removeAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 35 IFEQ L365 - true
   * 3 gnu.trove.set.hash.TCharHashSet.removeAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 35 IFEQ L365 - false
   * 4 gnu.trove.set.hash.TCharHashSet.removeAll(Lgnu/trove/TCharCollection;)Z: I24 Branch 36 IFEQ L367 - true
   */

  @Test
  public void test22()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      tCharHashSet0.addAll(tCharHashSet0._set);
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(tCharHashSet0._set, 'W');
      assertEquals("{\u0000}", tCharHashSet0.toString());
      
      boolean boolean0 = tCharHashSet0.removeAll((TCharCollection) tCharArrayList0);
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 6 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.removeAll([C)Z: I20 Branch 38 IFEQ L379 - false
   * 2 gnu.trove.set.hash.TCharHashSet.removeAll([C)Z: I12 Branch 37 IFLE L378 - true
   * 3 gnu.trove.set.hash.TCharHashSet.removeAll([C)Z: I12 Branch 37 IFLE L378 - false
   * 4 gnu.trove.set.hash.TCharHashSet.removeAll([C)Z: I20 Branch 38 IFEQ L379 - true
   * 5 gnu.trove.set.hash.TCharHashSet.remove(C)Z: I9 Branch 10 IFLT L209 - true
   * 6 gnu.trove.set.hash.TCharHashSet.remove(C)Z: I9 Branch 10 IFLT L209 - false
   */

  @Test
  public void test23()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet((-1), (float) (-1), '\u0004');
      tCharHashSet0.add('\u0004');
      assertEquals(1, tCharHashSet0.size());
      
      boolean boolean0 = tCharHashSet0.removeAll(tCharHashSet0._set);
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 2 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.clear()V: I22 Branch 39 IFLE L393 - true
   * 2 gnu.trove.set.hash.TCharHashSet.clear()V: I22 Branch 39 IFLE L393 - false
   */

  @Test
  public void test24()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      tCharHashSet0.clear();
      assertEquals("{}", tCharHashSet0.toString());
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.set.hash.TCharHashSet.equals(Ljava/lang/Object;)Z: I4 Branch 42 IFNE L421 - false
   */

  @Test
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[8];
      TCharHashSet tCharHashSet0 = new TCharHashSet(charArray0);
      boolean boolean0 = tCharHashSet0.equals((Object) "{a,\u0000}");
      assertEquals("{\u0000}", tCharHashSet0.toString());
      assertEquals(false, boolean0);
      assertEquals(1, tCharHashSet0.size());
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.equals(Ljava/lang/Object;)Z: I20 Branch 43 IF_ICMPEQ L425 - false
   * 2 gnu.trove.set.hash.TCharHashSet.<init>(IFC)V: I10 Branch 1 IFEQ L101 - false
   * 3 gnu.trove.set.hash.TCharHashSet.equals(Ljava/lang/Object;)Z: I4 Branch 42 IFNE L421 - true
   */

  @Test
  public void test26()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      TCharHashSet tCharHashSet1 = new TCharHashSet(10, (float) 10, '_');
      tCharHashSet1.add('\u0089');
      boolean boolean0 = tCharHashSet1.equals((Object) tCharHashSet0);
      assertEquals("{\u0089}", tCharHashSet1.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 27
  /*
   * 7 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.equals(Ljava/lang/Object;)Z: I42 Branch 45 IF_ICMPNE L429 - false
   * 2 gnu.trove.set.hash.TCharHashSet.equals(Ljava/lang/Object;)Z: I51 Branch 46 IFNE L430 - true
   * 3 gnu.trove.set.hash.TCharHashSet.equals(Ljava/lang/Object;)Z: I4 Branch 42 IFNE L421 - true
   * 4 gnu.trove.set.hash.TCharHashSet.equals(Ljava/lang/Object;)Z: I20 Branch 43 IF_ICMPEQ L425 - true
   * 5 gnu.trove.set.hash.TCharHashSet.equals(Ljava/lang/Object;)Z: I34 Branch 44 IFLE L428 - true
   * 6 gnu.trove.set.hash.TCharHashSet.equals(Ljava/lang/Object;)Z: I34 Branch 44 IFLE L428 - false
   * 7 gnu.trove.set.hash.TCharHashSet.equals(Ljava/lang/Object;)Z: I42 Branch 45 IF_ICMPNE L429 - true
   */

  @Test
  public void test27()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      tCharHashSet0.addAll(tCharHashSet0._set);
      boolean boolean0 = tCharHashSet0.equals((Object) tCharHashSet0);
      assertEquals(false, tCharHashSet0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 28
  /*
   * 5 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.hashCode()I: I21 Branch 48 IF_ICMPNE L443 - false
   * 2 gnu.trove.set.hash.TCharHashSet.<init>()V: root-Branch
   * 3 gnu.trove.set.hash.TCharHashSet.hashCode()I: I13 Branch 47 IFLE L442 - true
   * 4 gnu.trove.set.hash.TCharHashSet.hashCode()I: I13 Branch 47 IFLE L442 - false
   * 5 gnu.trove.set.hash.TCharHashSet.hashCode()I: I21 Branch 48 IF_ICMPNE L443 - true
   */

  @Test
  public void test28()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      tCharHashSet0.add('\u0089');
      int int0 = tCharHashSet0.hashCode();
      assertEquals(1, tCharHashSet0.size());
      assertEquals(137, int0);
  }

  //Test case number: 29
  /*
   * 12 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.toString()Ljava/lang/String;: I54 Branch 51 IF_ICMPGE L458 - false
   * 2 gnu.trove.set.hash.TCharHashSet.<init>(I)V: root-Branch
   * 3 gnu.trove.set.hash.TCharHashSet.<init>([C)V: root-Branch
   * 4 gnu.trove.set.hash.TCharHashSet.addAll([C)Z: I12 Branch 22 IFLE L288 - true
   * 5 gnu.trove.set.hash.TCharHashSet.addAll([C)Z: I12 Branch 22 IFLE L288 - false
   * 6 gnu.trove.set.hash.TCharHashSet.addAll([C)Z: I20 Branch 23 IFEQ L289 - true
   * 7 gnu.trove.set.hash.TCharHashSet.addAll([C)Z: I20 Branch 23 IFEQ L289 - false
   * 8 gnu.trove.set.hash.TCharHashSet.toString()Ljava/lang/String;: I30 Branch 49 IFLE L455 - true
   * 9 gnu.trove.set.hash.TCharHashSet.toString()Ljava/lang/String;: I30 Branch 49 IFLE L455 - false
   * 10 gnu.trove.set.hash.TCharHashSet.toString()Ljava/lang/String;: I38 Branch 50 IF_ICMPNE L456 - true
   * 11 gnu.trove.set.hash.TCharHashSet.toString()Ljava/lang/String;: I38 Branch 50 IF_ICMPNE L456 - false
   * 12 gnu.trove.set.hash.TCharHashSet.toString()Ljava/lang/String;: I54 Branch 51 IF_ICMPGE L458 - true
   */

  @Test
  public void test29()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[3] = 'a';
      TCharHashSet tCharHashSet0 = new TCharHashSet(charArray0);
      String string0 = tCharHashSet0.toString();
      assertNotNull(string0);
      assertEquals("{a,\u0000}", string0);
  }

  //Test case number: 30
  /*
   * 15 covered goals:
   * 1 gnu.trove.set.hash.TCharHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I45 Branch 53 IF_ICMPNE L507 - false
   * 2 gnu.trove.set.hash.TCharHashSet.<init>(IF)V: root-Branch
   * 3 gnu.trove.set.hash.TCharHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 52 IFLE L506 - true
   * 4 gnu.trove.set.hash.TCharHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 52 IFLE L506 - false
   * 5 gnu.trove.set.hash.TCharHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I45 Branch 53 IF_ICMPNE L507 - true
   * 6 gnu.trove.set.hash.TCharHashSet.rehash(I)V: I35 Branch 40 IFLE L410 - true
   * 7 gnu.trove.set.hash.TCharHashSet.rehash(I)V: I35 Branch 40 IFLE L410 - false
   * 8 gnu.trove.set.hash.TCharHashSet.rehash(I)V: I42 Branch 41 IF_ICMPNE L411 - true
   * 9 gnu.trove.set.hash.TCharHashSet.rehash(I)V: I42 Branch 41 IF_ICMPNE L411 - false
   * 10 gnu.trove.set.hash.TCharHashSet.add(C)Z: I9 Branch 9 IFGE L196 - true
   * 11 gnu.trove.set.hash.TCharHashSet.add(C)Z: I9 Branch 9 IFGE L196 - false
   * 12 gnu.trove.set.hash.TCharHashSet.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 20 IFEQ L275 - true
   * 13 gnu.trove.set.hash.TCharHashSet.addAll(Lgnu/trove/TCharCollection;)Z: I13 Branch 20 IFEQ L275 - false
   * 14 gnu.trove.set.hash.TCharHashSet.addAll(Lgnu/trove/TCharCollection;)Z: I24 Branch 21 IFEQ L277 - true
   * 15 gnu.trove.set.hash.TCharHashSet.addAll(Lgnu/trove/TCharCollection;)Z: I24 Branch 21 IFEQ L277 - false
   */

  @Test
  public void test30()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet(0, (-392.5746F));
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(tCharHashSet0._set, '\u001D');
      tCharHashSet0.addAll((TCharCollection) tCharArrayList0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) pipedOutputStream0);
      tCharHashSet0.writeExternal((ObjectOutput) objectOutputStream0);
  }
}

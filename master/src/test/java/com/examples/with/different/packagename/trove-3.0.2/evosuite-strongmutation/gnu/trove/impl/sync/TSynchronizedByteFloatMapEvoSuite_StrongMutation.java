/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedByteFloatMap;
import gnu.trove.impl.sync.TSynchronizedByteSet;
import gnu.trove.impl.sync.TSynchronizedFloatCollection;
import gnu.trove.iterator.TByteFloatIterator;
import gnu.trove.map.TByteFloatMap;
import gnu.trove.map.hash.TByteFloatHashMap;
import gnu.trove.procedure.TByteFloatProcedure;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TFloatProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedByteFloatMapEvoSuite_StrongMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 10 covered goals:
   * 1 Strong Mutation 3: gnu.trove.impl.sync.TSynchronizedByteFloatMap.size()I:71 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 2 Strong Mutation 2: gnu.trove.impl.sync.TSynchronizedByteFloatMap.size()I:71 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 1: gnu.trove.impl.sync.TSynchronizedByteFloatMap.<init>(Lgnu/trove/map/TByteFloatMap;Ljava/lang/Object;)V:67 - ReplaceVariable mutex -> mutex
   * 4 Strong Mutation 2: gnu.trove.impl.sync.TSynchronizedByteFloatMap.size()I:71 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 3: gnu.trove.impl.sync.TSynchronizedByteFloatMap.size()I:71 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 6 Strong Mutation 72: gnu.trove.impl.sync.TSynchronizedByteFloatMap.iterator()Lgnu/trove/iterator/TByteFloatIterator;:134 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 7 Strong Mutation 73: gnu.trove.impl.sync.TSynchronizedByteFloatMap.iterator()Lgnu/trove/iterator/TByteFloatIterator;:134 - DeleteStatement: iterator()Lgnu/trove/iterator/TByteFloatIterator;
   * 8 gnu.trove.impl.sync.TSynchronizedByteFloatMap.<init>(Lgnu/trove/map/TByteFloatMap;Ljava/lang/Object;)V: root-Branch
   * 9 gnu.trove.impl.sync.TSynchronizedByteFloatMap.iterator()Lgnu/trove/iterator/TByteFloatIterator;: root-Branch
   * 10 gnu.trove.impl.sync.TSynchronizedByteFloatMap.size()I: root-Branch
   */

//   @Test
//   public void test0()  throws Throwable  {
//       TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-1715), 10.0F);
//       TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0, (Object) "10.0");
//       TByteFloatHashMap tByteFloatHashMap1 = new TByteFloatHashMap((TByteFloatMap) tSynchronizedByteFloatMap0);
//       assertEquals(0.0F, tByteFloatHashMap1.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 1
  /*
   * 14 covered goals:
   * 1 Strong Mutation 4: gnu.trove.impl.sync.TSynchronizedByteFloatMap.size()I:71 - DeleteStatement: size()I
   * 2 gnu.trove.impl.sync.TSynchronizedByteFloatMap.putAll(Lgnu/trove/map/TByteFloatMap;)V: root-Branch
   * 3 gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustOrPutValue(BFF)F: root-Branch
   * 4 Strong Mutation 0: gnu.trove.impl.sync.TSynchronizedByteFloatMap.<init>(Lgnu/trove/map/TByteFloatMap;)V:59 - ReplaceComparisonOperator != null -> = null
   * 5 Strong Mutation 4: gnu.trove.impl.sync.TSynchronizedByteFloatMap.size()I:71 - DeleteStatement: size()I
   * 6 Strong Mutation 117: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustOrPutValue(BFF)F:166 - InsertUnaryOp IINC -1 key
   * 7 Strong Mutation 116: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustOrPutValue(BFF)F:166 - InsertUnaryOp IINC 1 key
   * 8 Strong Mutation 115: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustOrPutValue(BFF)F:166 - InsertUnaryOp Negation of key
   * 9 Strong Mutation 114: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustOrPutValue(BFF)F:166 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 10 Strong Mutation 113: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustOrPutValue(BFF)F:166 - DeleteField: mutexLjava/lang/Object;
   * 11 Strong Mutation 122: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustOrPutValue(BFF)F:166 - DeleteStatement: adjustOrPutValue(BFF)F
   * 12 Strong Mutation 121: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustOrPutValue(BFF)F:166 - InsertUnaryOp Negation of put_amount
   * 13 Strong Mutation 120: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustOrPutValue(BFF)F:166 - ReplaceVariable put_amount -> adjust_amount
   * 14 gnu.trove.impl.sync.TSynchronizedByteFloatMap.<init>(Lgnu/trove/map/TByteFloatMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test1()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap();
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      tSynchronizedByteFloatMap0.adjustOrPutValue((byte) (-90), (float) (byte) (-90), 10.0F);
      tSynchronizedByteFloatMap0.putAll((TByteFloatMap) tSynchronizedByteFloatMap0);
      assertEquals(false, tByteFloatHashMap0.isEmpty());
      assertEquals(1, tSynchronizedByteFloatMap0.size());
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 Strong Mutation 7: gnu.trove.impl.sync.TSynchronizedByteFloatMap.isEmpty()Z:74 - DeleteStatement: isEmpty()Z
   * 2 gnu.trove.impl.sync.TSynchronizedByteFloatMap.isEmpty()Z: root-Branch
   * 3 Strong Mutation 7: gnu.trove.impl.sync.TSynchronizedByteFloatMap.isEmpty()Z:74 - DeleteStatement: isEmpty()Z
   */

  @Test
  public void test2()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-60), (-60));
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      boolean boolean0 = tSynchronizedByteFloatMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * 1 Strong Mutation 10: gnu.trove.impl.sync.TSynchronizedByteFloatMap.containsKey(B)Z:77 - InsertUnaryOp Negation of key
   * 2 gnu.trove.impl.sync.TSynchronizedByteFloatMap.containsKey(B)Z: root-Branch
   * 3 Strong Mutation 10: gnu.trove.impl.sync.TSynchronizedByteFloatMap.containsKey(B)Z:77 - InsertUnaryOp Negation of key
   * 4 Strong Mutation 11: gnu.trove.impl.sync.TSynchronizedByteFloatMap.containsKey(B)Z:77 - InsertUnaryOp IINC 1 key
   * 5 Strong Mutation 12: gnu.trove.impl.sync.TSynchronizedByteFloatMap.containsKey(B)Z:77 - InsertUnaryOp IINC -1 key
   */

  @Test
  public void test3()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-968));
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      tSynchronizedByteFloatMap0.adjustOrPutValue((byte)83, (float) (byte)83, (-1.0F));
      boolean boolean0 = tSynchronizedByteFloatMap0.containsKey((byte)83);
      assertEquals(false, tByteFloatHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 9 covered goals:
   * 1 Strong Mutation 12: gnu.trove.impl.sync.TSynchronizedByteFloatMap.containsKey(B)Z:77 - InsertUnaryOp IINC -1 key
   * 2 Strong Mutation 11: gnu.trove.impl.sync.TSynchronizedByteFloatMap.containsKey(B)Z:77 - InsertUnaryOp IINC 1 key
   * 3 Strong Mutation 25: gnu.trove.impl.sync.TSynchronizedByteFloatMap.put(BF)F:87 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 4 Strong Mutation 24: gnu.trove.impl.sync.TSynchronizedByteFloatMap.put(BF)F:87 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 27: gnu.trove.impl.sync.TSynchronizedByteFloatMap.put(BF)F:87 - InsertUnaryOp IINC 1 key
   * 6 Strong Mutation 29: gnu.trove.impl.sync.TSynchronizedByteFloatMap.put(BF)F:87 - InsertUnaryOp Negation of value
   * 7 Strong Mutation 28: gnu.trove.impl.sync.TSynchronizedByteFloatMap.put(BF)F:87 - InsertUnaryOp IINC -1 key
   * 8 Strong Mutation 30: gnu.trove.impl.sync.TSynchronizedByteFloatMap.put(BF)F:87 - DeleteStatement: put(BF)F
   * 9 gnu.trove.impl.sync.TSynchronizedByteFloatMap.put(BF)F: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-1238), 0.0F);
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      tSynchronizedByteFloatMap0.put((byte)0, 0.0F);
      boolean boolean0 = tSynchronizedByteFloatMap0.containsKey((byte)0);
      assertEquals(false, tByteFloatHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 Strong Mutation 16: gnu.trove.impl.sync.TSynchronizedByteFloatMap.containsValue(F)Z:80 - InsertUnaryOp Negation of value
   * 2 Strong Mutation 17: gnu.trove.impl.sync.TSynchronizedByteFloatMap.containsValue(F)Z:80 - DeleteStatement: containsValue(F)Z
   * 3 Strong Mutation 17: gnu.trove.impl.sync.TSynchronizedByteFloatMap.containsValue(F)Z:80 - DeleteStatement: containsValue(F)Z
   * 4 Strong Mutation 16: gnu.trove.impl.sync.TSynchronizedByteFloatMap.containsValue(F)Z:80 - InsertUnaryOp Negation of value
   * 5 gnu.trove.impl.sync.TSynchronizedByteFloatMap.containsValue(F)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) (byte) (-67);
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(byteArray0, floatArray0);
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0, (Object) "{}");
      boolean boolean0 = tSynchronizedByteFloatMap0.containsValue((-67.0F));
      assertEquals(true, boolean0);
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 Strong Mutation 18: gnu.trove.impl.sync.TSynchronizedByteFloatMap.get(B)F:83 - DeleteField: mutexLjava/lang/Object;
   * 2 Strong Mutation 19: gnu.trove.impl.sync.TSynchronizedByteFloatMap.get(B)F:83 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 3 Strong Mutation 19: gnu.trove.impl.sync.TSynchronizedByteFloatMap.get(B)F:83 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 4 Strong Mutation 18: gnu.trove.impl.sync.TSynchronizedByteFloatMap.get(B)F:83 - DeleteField: mutexLjava/lang/Object;
   * 5 gnu.trove.impl.sync.TSynchronizedByteFloatMap.get(B)F: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap();
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0, (Object) "\u30A4\u30BF\u30EA\u30A2\u8A9E");
      byteArray0[5] = (byte) (-38);
      tSynchronizedByteFloatMap0.get((byte)18);
      byteArray0[5] = (byte)0;
  }

  //Test case number: 7
  /*
   * 4 covered goals:
   * 1 Strong Mutation 20: gnu.trove.impl.sync.TSynchronizedByteFloatMap.get(B)F:83 - InsertUnaryOp Negation of key
   * 2 Strong Mutation 21: gnu.trove.impl.sync.TSynchronizedByteFloatMap.get(B)F:83 - InsertUnaryOp IINC 1 key
   * 3 Strong Mutation 20: gnu.trove.impl.sync.TSynchronizedByteFloatMap.get(B)F:83 - InsertUnaryOp Negation of key
   * 4 Strong Mutation 22: gnu.trove.impl.sync.TSynchronizedByteFloatMap.get(B)F:83 - InsertUnaryOp IINC -1 key
   */

  @Test
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-38);
      byteArray0[1] = (byte) (-38);
      byteArray0[2] = (byte) (-38);
      byteArray0[3] = (byte) (-38);
      byteArray0[4] = (byte) (-38);
      byteArray0[5] = (byte) (-38);
      byteArray0[6] = (byte) (-38);
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((int) (byte) (-38), (-204.01471F), (byte)47, (float) (byte) (-38));
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      tSynchronizedByteFloatMap0.adjustOrPutValue((byte) (-38), (float) (byte) (-38), 0.0F);
      assertEquals(1, tByteFloatHashMap0.size());
      
      float[] floatArray0 = new float[8];
      floatArray0[6] = (float) (byte) (-38);
      TByteFloatHashMap tByteFloatHashMap1 = new TByteFloatHashMap(byteArray0, floatArray0);
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap1 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap1, (Object) "GBR");
      tSynchronizedByteFloatMap1.get((byte) (-40));
      assertFalse(tSynchronizedByteFloatMap1.equals(tSynchronizedByteFloatMap0));
  }

  //Test case number: 8
  /*
   * 4 covered goals:
   * 1 Strong Mutation 22: gnu.trove.impl.sync.TSynchronizedByteFloatMap.get(B)F:83 - InsertUnaryOp IINC -1 key
   * 2 Strong Mutation 21: gnu.trove.impl.sync.TSynchronizedByteFloatMap.get(B)F:83 - InsertUnaryOp IINC 1 key
   * 3 Strong Mutation 23: gnu.trove.impl.sync.TSynchronizedByteFloatMap.get(B)F:83 - DeleteStatement: get(B)F
   * 4 Strong Mutation 23: gnu.trove.impl.sync.TSynchronizedByteFloatMap.get(B)F:83 - DeleteStatement: get(B)F
   */

//   @Test
//   public void test8()  throws Throwable  {
//       byte[] byteArray0 = new byte[5];
//       float[] floatArray0 = new float[6];
//       floatArray0[4] = (-238.40741F);
//       TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(byteArray0, floatArray0);
//       TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
//       float float0 = tSynchronizedByteFloatMap0.get((byte)0);
//       assertEquals((-238.40741F), float0, 0.01F);
//   }

  //Test case number: 9
  /*
   * 14 covered goals:
   * 1 Strong Mutation 36: gnu.trove.impl.sync.TSynchronizedByteFloatMap.remove(B)F:90 - DeleteStatement: remove(B)F
   * 2 Strong Mutation 31: gnu.trove.impl.sync.TSynchronizedByteFloatMap.remove(B)F:90 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 34: gnu.trove.impl.sync.TSynchronizedByteFloatMap.remove(B)F:90 - InsertUnaryOp IINC 1 key
   * 4 Strong Mutation 35: gnu.trove.impl.sync.TSynchronizedByteFloatMap.remove(B)F:90 - InsertUnaryOp IINC -1 key
   * 5 Strong Mutation 32: gnu.trove.impl.sync.TSynchronizedByteFloatMap.remove(B)F:90 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 6 Strong Mutation 33: gnu.trove.impl.sync.TSynchronizedByteFloatMap.remove(B)F:90 - InsertUnaryOp Negation of key
   * 7 Strong Mutation 26: gnu.trove.impl.sync.TSynchronizedByteFloatMap.put(BF)F:87 - InsertUnaryOp Negation of key
   * 8 Strong Mutation 31: gnu.trove.impl.sync.TSynchronizedByteFloatMap.remove(B)F:90 - DeleteField: mutexLjava/lang/Object;
   * 9 Strong Mutation 34: gnu.trove.impl.sync.TSynchronizedByteFloatMap.remove(B)F:90 - InsertUnaryOp IINC 1 key
   * 10 Strong Mutation 35: gnu.trove.impl.sync.TSynchronizedByteFloatMap.remove(B)F:90 - InsertUnaryOp IINC -1 key
   * 11 Strong Mutation 32: gnu.trove.impl.sync.TSynchronizedByteFloatMap.remove(B)F:90 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 12 Strong Mutation 33: gnu.trove.impl.sync.TSynchronizedByteFloatMap.remove(B)F:90 - InsertUnaryOp Negation of key
   * 13 Strong Mutation 36: gnu.trove.impl.sync.TSynchronizedByteFloatMap.remove(B)F:90 - DeleteStatement: remove(B)F
   * 14 gnu.trove.impl.sync.TSynchronizedByteFloatMap.remove(B)F: root-Branch
   */

//   @Test
//   public void test9()  throws Throwable  {
//       TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-434));
//       Float float0 = new Float((double) (-434));
//       TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0, (Object) float0);
//       tSynchronizedByteFloatMap0.put((byte)51, (-1.0F));
//       assertEquals(false, tByteFloatHashMap0.isEmpty());
//       
//       float float1 = tSynchronizedByteFloatMap0.remove((byte)51);
//       assertEquals((-1.0F), float1, 0.01F);
//   }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 Strong Mutation 37: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putAll(Ljava/util/Map;)V:93 - DeleteField: mutexLjava/lang/Object;
   * 2 Strong Mutation 38: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putAll(Ljava/util/Map;)V:93 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 3 Strong Mutation 38: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putAll(Ljava/util/Map;)V:93 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 4 Strong Mutation 37: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putAll(Ljava/util/Map;)V:93 - DeleteField: mutexLjava/lang/Object;
   * 5 gnu.trove.impl.sync.TSynchronizedByteFloatMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap();
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0, (Object) "");
      float[] floatArray0 = new float[8];
      floatArray0[5] = (float) (byte) (-38);
      HashMap<Byte, Float> hashMap0 = new HashMap<Byte, Float>();
      tSynchronizedByteFloatMap0.putAll((Map<? extends Byte, ? extends Float>) hashMap0);
      floatArray0[5] = (-1348.8052F);
  }

  //Test case number: 11
  /*
   * 7 covered goals:
   * 1 Strong Mutation 41: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putAll(Lgnu/trove/map/TByteFloatMap;)V:96 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 2 Strong Mutation 26: gnu.trove.impl.sync.TSynchronizedByteFloatMap.put(BF)F:87 - InsertUnaryOp Negation of key
   * 3 Strong Mutation 42: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putAll(Lgnu/trove/map/TByteFloatMap;)V:96 - DeleteStatement: putAll(Lgnu/trove/map/TByteFloatMap;)V
   * 4 Strong Mutation 40: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putAll(Lgnu/trove/map/TByteFloatMap;)V:96 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 42: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putAll(Lgnu/trove/map/TByteFloatMap;)V:96 - DeleteStatement: putAll(Lgnu/trove/map/TByteFloatMap;)V
   * 6 Strong Mutation 40: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putAll(Lgnu/trove/map/TByteFloatMap;)V:96 - DeleteField: mutexLjava/lang/Object;
   * 7 Strong Mutation 41: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putAll(Lgnu/trove/map/TByteFloatMap;)V:96 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   */

  @Test
  public void test11()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(127, (-1661.988F));
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      tSynchronizedByteFloatMap0.put((byte)6, (float) 127);
      tSynchronizedByteFloatMap0.putAll((TByteFloatMap) tByteFloatHashMap0);
      assertEquals(false, tByteFloatHashMap0.isEmpty());
      assertEquals("{6=127.0}", tSynchronizedByteFloatMap0.toString());
  }

  //Test case number: 12
  /*
   * 7 covered goals:
   * 1 Strong Mutation 45: gnu.trove.impl.sync.TSynchronizedByteFloatMap.clear()V:99 - DeleteStatement: clear()V
   * 2 Strong Mutation 43: gnu.trove.impl.sync.TSynchronizedByteFloatMap.clear()V:99 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 44: gnu.trove.impl.sync.TSynchronizedByteFloatMap.clear()V:99 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 4 Strong Mutation 43: gnu.trove.impl.sync.TSynchronizedByteFloatMap.clear()V:99 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 44: gnu.trove.impl.sync.TSynchronizedByteFloatMap.clear()V:99 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 6 Strong Mutation 45: gnu.trove.impl.sync.TSynchronizedByteFloatMap.clear()V:99 - DeleteStatement: clear()V
   * 7 gnu.trove.impl.sync.TSynchronizedByteFloatMap.clear()V: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(0);
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0, (Object) "zh_CN");
      tByteFloatHashMap0.adjustOrPutValue((byte)32, 1.0F, 1.0F);
      tSynchronizedByteFloatMap0.clear();
      assertEquals(0, tByteFloatHashMap0.size());
      assertEquals("{}", tByteFloatHashMap0.toString());
  }

  //Test case number: 13
  /*
   * 2 covered goals:
   * 1 Strong Mutation 50: gnu.trove.impl.sync.TSynchronizedByteFloatMap.keySet()Lgnu/trove/set/TByteSet;:108 - DeleteStatement: keySet()Lgnu/trove/set/TByteSet;
   * 2 gnu.trove.impl.sync.TSynchronizedByteFloatMap.keySet()Lgnu/trove/set/TByteSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test13()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(1);
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0, (Object) null);
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap1 = new TSynchronizedByteFloatMap((TByteFloatMap) tSynchronizedByteFloatMap0);
      // Undeclared exception!
      try {
        tSynchronizedByteFloatMap1.keySet();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 7 covered goals:
   * 1 Strong Mutation 53: gnu.trove.impl.sync.TSynchronizedByteFloatMap.keys()[B:113 - DeleteField: mutexLjava/lang/Object;
   * 2 Strong Mutation 55: gnu.trove.impl.sync.TSynchronizedByteFloatMap.keys()[B:113 - DeleteStatement: keys()[B
   * 3 Strong Mutation 54: gnu.trove.impl.sync.TSynchronizedByteFloatMap.keys()[B:113 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 4 Strong Mutation 55: gnu.trove.impl.sync.TSynchronizedByteFloatMap.keys()[B:113 - DeleteStatement: keys()[B
   * 5 Strong Mutation 54: gnu.trove.impl.sync.TSynchronizedByteFloatMap.keys()[B:113 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 6 Strong Mutation 53: gnu.trove.impl.sync.TSynchronizedByteFloatMap.keys()[B:113 - DeleteField: mutexLjava/lang/Object;
   * 7 gnu.trove.impl.sync.TSynchronizedByteFloatMap.keys()[B: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-1238), 0.0F);
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      byte[] byteArray0 = tSynchronizedByteFloatMap0.keys();
      assertNotNull(byteArray0);
  }

  //Test case number: 15
  /*
   * 7 covered goals:
   * 1 Strong Mutation 56: gnu.trove.impl.sync.TSynchronizedByteFloatMap.keys([B)[B:116 - DeleteField: mutexLjava/lang/Object;
   * 2 Strong Mutation 58: gnu.trove.impl.sync.TSynchronizedByteFloatMap.keys([B)[B:116 - DeleteStatement: keys([B)[B
   * 3 Strong Mutation 57: gnu.trove.impl.sync.TSynchronizedByteFloatMap.keys([B)[B:116 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 4 Strong Mutation 58: gnu.trove.impl.sync.TSynchronizedByteFloatMap.keys([B)[B:116 - DeleteStatement: keys([B)[B
   * 5 Strong Mutation 57: gnu.trove.impl.sync.TSynchronizedByteFloatMap.keys([B)[B:116 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 6 Strong Mutation 56: gnu.trove.impl.sync.TSynchronizedByteFloatMap.keys([B)[B:116 - DeleteField: mutexLjava/lang/Object;
   * 7 gnu.trove.impl.sync.TSynchronizedByteFloatMap.keys([B)[B: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-968));
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      byte[] byteArray0 = tSynchronizedByteFloatMap0.keys(tByteFloatHashMap0._states);
      assertNotNull(byteArray0);
  }

  //Test case number: 16
  /*
   * 2 covered goals:
   * 1 Strong Mutation 63: gnu.trove.impl.sync.TSynchronizedByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:122 - DeleteStatement: valueCollection()Lgnu/trove/TFloatCollection;
   * 2 gnu.trove.impl.sync.TSynchronizedByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I11 Branch 3 IFNONNULL L121 - false
   */

  @Test
  public void test16()  throws Throwable  {
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) null, (Object) "/");
      // Undeclared exception!
      try {
        tSynchronizedByteFloatMap0.valueCollection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 17
  /*
   * 7 covered goals:
   * 1 Strong Mutation 67: gnu.trove.impl.sync.TSynchronizedByteFloatMap.values()[F:127 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 2 Strong Mutation 68: gnu.trove.impl.sync.TSynchronizedByteFloatMap.values()[F:127 - DeleteStatement: values()[F
   * 3 Strong Mutation 66: gnu.trove.impl.sync.TSynchronizedByteFloatMap.values()[F:127 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 68: gnu.trove.impl.sync.TSynchronizedByteFloatMap.values()[F:127 - DeleteStatement: values()[F
   * 5 Strong Mutation 66: gnu.trove.impl.sync.TSynchronizedByteFloatMap.values()[F:127 - DeleteField: mutexLjava/lang/Object;
   * 6 Strong Mutation 67: gnu.trove.impl.sync.TSynchronizedByteFloatMap.values()[F:127 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 7 gnu.trove.impl.sync.TSynchronizedByteFloatMap.values()[F: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-1715), 10.0F);
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0, (Object) "10.0");
      float[] floatArray0 = tSynchronizedByteFloatMap0.values();
      assertNotNull(floatArray0);
  }

  //Test case number: 18
  /*
   * 7 covered goals:
   * 1 Strong Mutation 71: gnu.trove.impl.sync.TSynchronizedByteFloatMap.values([F)[F:130 - DeleteStatement: values([F)[F
   * 2 Strong Mutation 69: gnu.trove.impl.sync.TSynchronizedByteFloatMap.values([F)[F:130 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 70: gnu.trove.impl.sync.TSynchronizedByteFloatMap.values([F)[F:130 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 4 Strong Mutation 69: gnu.trove.impl.sync.TSynchronizedByteFloatMap.values([F)[F:130 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 70: gnu.trove.impl.sync.TSynchronizedByteFloatMap.values([F)[F:130 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 6 Strong Mutation 71: gnu.trove.impl.sync.TSynchronizedByteFloatMap.values([F)[F:130 - DeleteStatement: values([F)[F
   * 7 gnu.trove.impl.sync.TSynchronizedByteFloatMap.values([F)[F: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-36));
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0, (Object) "\u30D5\u30E9\u30F3\u30B9\u8A9E");
      float[] floatArray0 = new float[5];
      float[] floatArray1 = tSynchronizedByteFloatMap0.values(floatArray0);
      assertSame(floatArray0, floatArray1);
  }

  //Test case number: 19
  /*
   * 2 covered goals:
   * 1 Strong Mutation 73: gnu.trove.impl.sync.TSynchronizedByteFloatMap.iterator()Lgnu/trove/iterator/TByteFloatIterator;:134 - DeleteStatement: iterator()Lgnu/trove/iterator/TByteFloatIterator;
   * 2 Strong Mutation 72: gnu.trove.impl.sync.TSynchronizedByteFloatMap.iterator()Lgnu/trove/iterator/TByteFloatIterator;:134 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   */

  @Test
  public void test19()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-1371), (-1371));
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      TByteFloatIterator tByteFloatIterator0 = tSynchronizedByteFloatMap0.iterator();
      assertEquals(false, tByteFloatIterator0.hasNext());
  }

  //Test case number: 20
  /*
   * 3 covered goals:
   * 1 Strong Mutation 75: gnu.trove.impl.sync.TSynchronizedByteFloatMap.getNoEntryKey()B:138 - DeleteStatement: getNoEntryKey()B
   * 2 gnu.trove.impl.sync.TSynchronizedByteFloatMap.getNoEntryKey()B: root-Branch
   * 3 Strong Mutation 75: gnu.trove.impl.sync.TSynchronizedByteFloatMap.getNoEntryKey()B:138 - DeleteStatement: getNoEntryKey()B
   */

  @Test
  public void test20()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-36));
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0, (Object) "\u30D5\u30E9\u30F3\u30B9\u8A9E");
      TByteFloatHashMap tByteFloatHashMap1 = new TByteFloatHashMap(1, (float) 1, (byte) (-10), 1224.4515F);
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap1 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap1, (Object) "{}");
      byte byte0 = tSynchronizedByteFloatMap0.getNoEntryKey();
      assertEquals((byte)0, byte0);
  }

  //Test case number: 21
  /*
   * 3 covered goals:
   * 1 Strong Mutation 76: gnu.trove.impl.sync.TSynchronizedByteFloatMap.getNoEntryValue()F:139 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 2 gnu.trove.impl.sync.TSynchronizedByteFloatMap.getNoEntryValue()F: root-Branch
   * 3 Strong Mutation 76: gnu.trove.impl.sync.TSynchronizedByteFloatMap.getNoEntryValue()F:139 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   */

  @Test
  public void test21()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(127, (-1661.988F));
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      float[] floatArray0 = new float[7];
      floatArray0[1] = (float) 0;
      tSynchronizedByteFloatMap0.getNoEntryValue();
      floatArray0[1] = (-276.9967F);
  }

  //Test case number: 22
  /*
   * 2 covered goals:
   * 1 Strong Mutation 77: gnu.trove.impl.sync.TSynchronizedByteFloatMap.getNoEntryValue()F:139 - DeleteStatement: getNoEntryValue()F
   * 2 Strong Mutation 77: gnu.trove.impl.sync.TSynchronizedByteFloatMap.getNoEntryValue()F:139 - DeleteStatement: getNoEntryValue()F
   */

//   @Test
//   public void test22()  throws Throwable  {
//       TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(1);
//       TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
//       tSynchronizedByteFloatMap0.getNoEntryValue();
//       TByteFloatHashMap tByteFloatHashMap1 = new TByteFloatHashMap(1908, (float) 1908, (byte) (-1), (float) (byte) (-1));
//       TSynchronizedByteFloatMap tSynchronizedByteFloatMap1 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap1, (Object) "/");
//       assertEquals((-1.0F), tSynchronizedByteFloatMap1.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 23
  /*
   * 2 covered goals:
   * 1 Strong Mutation 87: gnu.trove.impl.sync.TSynchronizedByteFloatMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z:145 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z
   * 2 gnu.trove.impl.sync.TSynchronizedByteFloatMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-219), (-219));
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      boolean boolean0 = tSynchronizedByteFloatMap0.forEachKey((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 3 covered goals:
   * 1 Strong Mutation 90: gnu.trove.impl.sync.TSynchronizedByteFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:148 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z
   * 2 gnu.trove.impl.sync.TSynchronizedByteFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   * 3 Strong Mutation 90: gnu.trove.impl.sync.TSynchronizedByteFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:148 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z
   */

  @Test
  public void test24()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap();
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      boolean boolean0 = tSynchronizedByteFloatMap0.forEachValue((TFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 25
  /*
   * 3 covered goals:
   * 1 Strong Mutation 93: gnu.trove.impl.sync.TSynchronizedByteFloatMap.forEachEntry(Lgnu/trove/procedure/TByteFloatProcedure;)Z:151 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TByteFloatProcedure;)Z
   * 2 gnu.trove.impl.sync.TSynchronizedByteFloatMap.forEachEntry(Lgnu/trove/procedure/TByteFloatProcedure;)Z: root-Branch
   * 3 Strong Mutation 93: gnu.trove.impl.sync.TSynchronizedByteFloatMap.forEachEntry(Lgnu/trove/procedure/TByteFloatProcedure;)Z:151 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TByteFloatProcedure;)Z
   */

  @Test
  public void test25()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(0);
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0, (Object) "");
      boolean boolean0 = tSynchronizedByteFloatMap0.forEachEntry((TByteFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 26
  /*
   * 21 covered goals:
   * 1 Strong Mutation 105: gnu.trove.impl.sync.TSynchronizedByteFloatMap.increment(B)Z:160 - DeleteStatement: increment(B)Z
   * 2 Strong Mutation 102: gnu.trove.impl.sync.TSynchronizedByteFloatMap.increment(B)Z:160 - InsertUnaryOp Negation of key
   * 3 Strong Mutation 103: gnu.trove.impl.sync.TSynchronizedByteFloatMap.increment(B)Z:160 - InsertUnaryOp IINC 1 key
   * 4 Strong Mutation 100: gnu.trove.impl.sync.TSynchronizedByteFloatMap.increment(B)Z:160 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 101: gnu.trove.impl.sync.TSynchronizedByteFloatMap.increment(B)Z:160 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 6 Strong Mutation 104: gnu.trove.impl.sync.TSynchronizedByteFloatMap.increment(B)Z:160 - InsertUnaryOp IINC -1 key
   * 7 Strong Mutation 78: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putIfAbsent(BF)F:142 - DeleteField: mutexLjava/lang/Object;
   * 8 Strong Mutation 79: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putIfAbsent(BF)F:142 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 9 Strong Mutation 84: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putIfAbsent(BF)F:142 - DeleteStatement: putIfAbsent(BF)F
   * 10 Strong Mutation 81: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putIfAbsent(BF)F:142 - InsertUnaryOp IINC 1 key
   * 11 Strong Mutation 80: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putIfAbsent(BF)F:142 - InsertUnaryOp Negation of key
   * 12 Strong Mutation 83: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putIfAbsent(BF)F:142 - InsertUnaryOp Negation of value
   * 13 Strong Mutation 82: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putIfAbsent(BF)F:142 - InsertUnaryOp IINC -1 key
   * 14 Strong Mutation 102: gnu.trove.impl.sync.TSynchronizedByteFloatMap.increment(B)Z:160 - InsertUnaryOp Negation of key
   * 15 Strong Mutation 103: gnu.trove.impl.sync.TSynchronizedByteFloatMap.increment(B)Z:160 - InsertUnaryOp IINC 1 key
   * 16 Strong Mutation 100: gnu.trove.impl.sync.TSynchronizedByteFloatMap.increment(B)Z:160 - DeleteField: mutexLjava/lang/Object;
   * 17 Strong Mutation 101: gnu.trove.impl.sync.TSynchronizedByteFloatMap.increment(B)Z:160 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 18 Strong Mutation 104: gnu.trove.impl.sync.TSynchronizedByteFloatMap.increment(B)Z:160 - InsertUnaryOp IINC -1 key
   * 19 Strong Mutation 105: gnu.trove.impl.sync.TSynchronizedByteFloatMap.increment(B)Z:160 - DeleteStatement: increment(B)Z
   * 20 gnu.trove.impl.sync.TSynchronizedByteFloatMap.increment(B)Z: root-Branch
   * 21 gnu.trove.impl.sync.TSynchronizedByteFloatMap.putIfAbsent(BF)F: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap();
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      tSynchronizedByteFloatMap0.putIfAbsent((byte) (-68), (byte) (-68));
      boolean boolean0 = tSynchronizedByteFloatMap0.increment((byte) (-68));
      assertEquals(false, tByteFloatHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 27
  /*
   * 10 covered goals:
   * 1 Strong Mutation 109: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustValue(BF)Z:163 - InsertUnaryOp IINC 1 key
   * 2 Strong Mutation 25: gnu.trove.impl.sync.TSynchronizedByteFloatMap.put(BF)F:87 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 3 Strong Mutation 24: gnu.trove.impl.sync.TSynchronizedByteFloatMap.put(BF)F:87 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 27: gnu.trove.impl.sync.TSynchronizedByteFloatMap.put(BF)F:87 - InsertUnaryOp IINC 1 key
   * 5 Strong Mutation 29: gnu.trove.impl.sync.TSynchronizedByteFloatMap.put(BF)F:87 - InsertUnaryOp Negation of value
   * 6 Strong Mutation 28: gnu.trove.impl.sync.TSynchronizedByteFloatMap.put(BF)F:87 - InsertUnaryOp IINC -1 key
   * 7 Strong Mutation 30: gnu.trove.impl.sync.TSynchronizedByteFloatMap.put(BF)F:87 - DeleteStatement: put(BF)F
   * 8 Strong Mutation 110: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustValue(BF)Z:163 - InsertUnaryOp IINC -1 key
   * 9 Strong Mutation 109: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustValue(BF)Z:163 - InsertUnaryOp IINC 1 key
   * 10 gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustValue(BF)Z: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-1238), 0.0F);
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      tSynchronizedByteFloatMap0.put((byte)0, 0.0F);
      boolean boolean0 = tSynchronizedByteFloatMap0.adjustValue((byte)0, (byte)0);
      assertEquals(7, tByteFloatHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 28
  /*
   * 10 covered goals:
   * 1 Strong Mutation 107: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustValue(BF)Z:163 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 2 Strong Mutation 110: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustValue(BF)Z:163 - InsertUnaryOp IINC -1 key
   * 3 Strong Mutation 111: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustValue(BF)Z:163 - InsertUnaryOp Negation of amount
   * 4 Strong Mutation 108: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustValue(BF)Z:163 - InsertUnaryOp Negation of key
   * 5 Strong Mutation 109: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustValue(BF)Z:163 - InsertUnaryOp IINC 1 key
   * 6 Strong Mutation 106: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustValue(BF)Z:163 - DeleteField: mutexLjava/lang/Object;
   * 7 Strong Mutation 111: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustValue(BF)Z:163 - InsertUnaryOp Negation of amount
   * 8 Strong Mutation 108: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustValue(BF)Z:163 - InsertUnaryOp Negation of key
   * 9 Strong Mutation 106: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustValue(BF)Z:163 - DeleteField: mutexLjava/lang/Object;
   * 10 Strong Mutation 107: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustValue(BF)Z:163 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   */

  @Test
  public void test28()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap();
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      tSynchronizedByteFloatMap0.adjustOrPutValue((byte) (-90), (float) (byte) (-90), 10.0F);
      boolean boolean0 = tSynchronizedByteFloatMap0.adjustValue((byte) (-90), 10.0F);
      assertEquals(1, tByteFloatHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 29
  /*
   * 5 covered goals:
   * 1 Strong Mutation 118: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustOrPutValue(BFF)F:166 - ReplaceVariable adjust_amount -> put_amount
   * 2 Strong Mutation 80: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putIfAbsent(BF)F:142 - InsertUnaryOp Negation of key
   * 3 Strong Mutation 119: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustOrPutValue(BFF)F:166 - InsertUnaryOp Negation of adjust_amount
   * 4 Strong Mutation 119: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustOrPutValue(BFF)F:166 - InsertUnaryOp Negation of adjust_amount
   * 5 Strong Mutation 118: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustOrPutValue(BFF)F:166 - ReplaceVariable adjust_amount -> put_amount
   */

//   @Test
//   public void test29()  throws Throwable  {
//       TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(1);
//       TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0, (Object) "-1");
//       tSynchronizedByteFloatMap0.putIfAbsent((byte) (-1), (float) 1);
//       float float0 = tSynchronizedByteFloatMap0.adjustOrPutValue((byte) (-1), (float) 1, (-227.37822F));
//       assertEquals("{-1=2.0}", tByteFloatHashMap0.toString());
//       assertEquals(2.0F, float0, 0.01F);
//   }

  //Test case number: 30
  /*
   * 8 covered goals:
   * 1 Strong Mutation 120: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustOrPutValue(BFF)F:166 - ReplaceVariable put_amount -> adjust_amount
   * 2 Strong Mutation 117: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustOrPutValue(BFF)F:166 - InsertUnaryOp IINC -1 key
   * 3 Strong Mutation 116: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustOrPutValue(BFF)F:166 - InsertUnaryOp IINC 1 key
   * 4 Strong Mutation 115: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustOrPutValue(BFF)F:166 - InsertUnaryOp Negation of key
   * 5 Strong Mutation 114: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustOrPutValue(BFF)F:166 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 6 Strong Mutation 113: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustOrPutValue(BFF)F:166 - DeleteField: mutexLjava/lang/Object;
   * 7 Strong Mutation 122: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustOrPutValue(BFF)F:166 - DeleteStatement: adjustOrPutValue(BFF)F
   * 8 Strong Mutation 121: gnu.trove.impl.sync.TSynchronizedByteFloatMap.adjustOrPutValue(BFF)F:166 - InsertUnaryOp Negation of put_amount
   */

//   @Test
//   public void test30()  throws Throwable  {
//       TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-968));
//       TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
//       float float0 = tSynchronizedByteFloatMap0.adjustOrPutValue((byte)83, (float) (byte)83, (-1.0F));
//       assertEquals(1, tByteFloatHashMap0.size());
//       assertEquals((-1.0F), float0, 0.01F);
//   }

  //Test case number: 31
  /*
   * 5 covered goals:
   * 1 Strong Mutation 125: gnu.trove.impl.sync.TSynchronizedByteFloatMap.equals(Ljava/lang/Object;)Z:170 - ReplaceVariable o -> mutex
   * 2 Strong Mutation 126: gnu.trove.impl.sync.TSynchronizedByteFloatMap.equals(Ljava/lang/Object;)Z:170 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 3 Strong Mutation 126: gnu.trove.impl.sync.TSynchronizedByteFloatMap.equals(Ljava/lang/Object;)Z:170 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 4 Strong Mutation 125: gnu.trove.impl.sync.TSynchronizedByteFloatMap.equals(Ljava/lang/Object;)Z:170 - ReplaceVariable o -> mutex
   * 5 gnu.trove.impl.sync.TSynchronizedByteFloatMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test31()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-434));
      Float float0 = new Float((double) (-434));
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0, (Object) float0);
      tSynchronizedByteFloatMap0.equals((Object) "-1.0");
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap1 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      tSynchronizedByteFloatMap0.getNoEntryKey();
      assertTrue(tSynchronizedByteFloatMap0.equals(tSynchronizedByteFloatMap1));
  }

  //Test case number: 32
  /*
   * 5 covered goals:
   * 1 Strong Mutation 123: gnu.trove.impl.sync.TSynchronizedByteFloatMap.equals(Ljava/lang/Object;)Z:170 - DeleteField: mutexLjava/lang/Object;
   * 2 Strong Mutation 125: gnu.trove.impl.sync.TSynchronizedByteFloatMap.equals(Ljava/lang/Object;)Z:170 - ReplaceVariable o -> mutex
   * 3 Strong Mutation 124: gnu.trove.impl.sync.TSynchronizedByteFloatMap.equals(Ljava/lang/Object;)Z:170 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 4 Strong Mutation 124: gnu.trove.impl.sync.TSynchronizedByteFloatMap.equals(Ljava/lang/Object;)Z:170 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 5 Strong Mutation 123: gnu.trove.impl.sync.TSynchronizedByteFloatMap.equals(Ljava/lang/Object;)Z:170 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)57;
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap();
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      tSynchronizedByteFloatMap0.equals((Object) "-0x1.b957dcp9");
      byteArray0[1] = (byte)36;
  }

  //Test case number: 33
  /*
   * 9 covered goals:
   * 1 Strong Mutation 129: gnu.trove.impl.sync.TSynchronizedByteFloatMap.hashCode()I:173 - DeleteStatement: hashCode()I
   * 2 Strong Mutation 78: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putIfAbsent(BF)F:142 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 79: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putIfAbsent(BF)F:142 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 4 Strong Mutation 84: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putIfAbsent(BF)F:142 - DeleteStatement: putIfAbsent(BF)F
   * 5 Strong Mutation 81: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putIfAbsent(BF)F:142 - InsertUnaryOp IINC 1 key
   * 6 Strong Mutation 83: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putIfAbsent(BF)F:142 - InsertUnaryOp Negation of value
   * 7 Strong Mutation 82: gnu.trove.impl.sync.TSynchronizedByteFloatMap.putIfAbsent(BF)F:142 - InsertUnaryOp IINC -1 key
   * 8 Strong Mutation 129: gnu.trove.impl.sync.TSynchronizedByteFloatMap.hashCode()I:173 - DeleteStatement: hashCode()I
   * 9 gnu.trove.impl.sync.TSynchronizedByteFloatMap.hashCode()I: root-Branch
   */

  @Test
  public void test33()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap();
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      tSynchronizedByteFloatMap0.putIfAbsent((byte)0, (float) 31);
      int int0 = tSynchronizedByteFloatMap0.hashCode();
      assertEquals(false, tByteFloatHashMap0.isEmpty());
      assertEquals(1352222142, int0);
  }

  //Test case number: 34
  /*
   * 4 covered goals:
   * 1 Strong Mutation 128: gnu.trove.impl.sync.TSynchronizedByteFloatMap.hashCode()I:173 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 2 Strong Mutation 127: gnu.trove.impl.sync.TSynchronizedByteFloatMap.hashCode()I:173 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 127: gnu.trove.impl.sync.TSynchronizedByteFloatMap.hashCode()I:173 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 128: gnu.trove.impl.sync.TSynchronizedByteFloatMap.hashCode()I:173 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   */

  @Test
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      float[] floatArray0 = new float[5];
      floatArray0[0] = (float) (byte) (-1);
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(byteArray0, floatArray0);
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0, (Object) "1");
      tSynchronizedByteFloatMap0.hashCode();
      floatArray0[0] = (-719.8963F);
  }

  //Test case number: 35
  /*
   * 7 covered goals:
   * 1 Strong Mutation 132: gnu.trove.impl.sync.TSynchronizedByteFloatMap.toString()Ljava/lang/String;:176 - DeleteStatement: toString()Ljava/lang/String;
   * 2 Strong Mutation 131: gnu.trove.impl.sync.TSynchronizedByteFloatMap.toString()Ljava/lang/String;:176 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 3 Strong Mutation 130: gnu.trove.impl.sync.TSynchronizedByteFloatMap.toString()Ljava/lang/String;:176 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 131: gnu.trove.impl.sync.TSynchronizedByteFloatMap.toString()Ljava/lang/String;:176 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 5 Strong Mutation 130: gnu.trove.impl.sync.TSynchronizedByteFloatMap.toString()Ljava/lang/String;:176 - DeleteField: mutexLjava/lang/Object;
   * 6 Strong Mutation 132: gnu.trove.impl.sync.TSynchronizedByteFloatMap.toString()Ljava/lang/String;:176 - DeleteStatement: toString()Ljava/lang/String;
   * 7 gnu.trove.impl.sync.TSynchronizedByteFloatMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test35()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-637));
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      String string0 = tSynchronizedByteFloatMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 36
  /*
   * 10 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteFloatMap.keySet()Lgnu/trove/set/TByteSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 Strong Mutation 0: gnu.trove.impl.sync.TSynchronizedByteFloatMap.<init>(Lgnu/trove/map/TByteFloatMap;)V:59 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 46: gnu.trove.impl.sync.TSynchronizedByteFloatMap.keySet()Lgnu/trove/set/TByteSet;:106 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 49: gnu.trove.impl.sync.TSynchronizedByteFloatMap.keySet()Lgnu/trove/set/TByteSet;:108 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 5 Strong Mutation 48: gnu.trove.impl.sync.TSynchronizedByteFloatMap.keySet()Lgnu/trove/set/TByteSet;:107 - ReplaceComparisonOperator != null -> = null
   * 6 Strong Mutation 52: gnu.trove.impl.sync.TSynchronizedByteFloatMap.keySet()Lgnu/trove/set/TByteSet;:109 - DeleteField: keySetLgnu/trove/set/TByteSet;
   * 7 Strong Mutation 46: gnu.trove.impl.sync.TSynchronizedByteFloatMap.keySet()Lgnu/trove/set/TByteSet;:106 - DeleteField: mutexLjava/lang/Object;
   * 8 Strong Mutation 49: gnu.trove.impl.sync.TSynchronizedByteFloatMap.keySet()Lgnu/trove/set/TByteSet;:108 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 9 Strong Mutation 48: gnu.trove.impl.sync.TSynchronizedByteFloatMap.keySet()Lgnu/trove/set/TByteSet;:107 - ReplaceComparisonOperator != null -> = null
   * 10 Strong Mutation 52: gnu.trove.impl.sync.TSynchronizedByteFloatMap.keySet()Lgnu/trove/set/TByteSet;:109 - DeleteField: keySetLgnu/trove/set/TByteSet;
   */

  @Test
  public void test36()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(1857);
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      TSynchronizedByteSet tSynchronizedByteSet0 = (TSynchronizedByteSet)tSynchronizedByteFloatMap0.keySet();
      assertNotNull(tSynchronizedByteSet0);
      
      TSynchronizedByteSet tSynchronizedByteSet1 = (TSynchronizedByteSet)tSynchronizedByteFloatMap0.keySet();
      assertSame(tSynchronizedByteSet1, tSynchronizedByteSet0);
  }

  //Test case number: 37
  /*
   * 10 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 Strong Mutation 1: gnu.trove.impl.sync.TSynchronizedByteFloatMap.<init>(Lgnu/trove/map/TByteFloatMap;Ljava/lang/Object;)V:67 - ReplaceVariable mutex -> mutex
   * 3 Strong Mutation 59: gnu.trove.impl.sync.TSynchronizedByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:120 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 62: gnu.trove.impl.sync.TSynchronizedByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:122 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 5 Strong Mutation 61: gnu.trove.impl.sync.TSynchronizedByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:121 - ReplaceComparisonOperator != null -> = null
   * 6 Strong Mutation 65: gnu.trove.impl.sync.TSynchronizedByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:123 - DeleteField: valuesLgnu/trove/TFloatCollection;
   * 7 Strong Mutation 59: gnu.trove.impl.sync.TSynchronizedByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:120 - DeleteField: mutexLjava/lang/Object;
   * 8 Strong Mutation 62: gnu.trove.impl.sync.TSynchronizedByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:122 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 9 Strong Mutation 61: gnu.trove.impl.sync.TSynchronizedByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:121 - ReplaceComparisonOperator != null -> = null
   * 10 Strong Mutation 65: gnu.trove.impl.sync.TSynchronizedByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:123 - DeleteField: valuesLgnu/trove/TFloatCollection;
   */

  @Test
  public void test37()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(1);
      TSynchronizedByteFloatMap tSynchronizedByteFloatMap0 = new TSynchronizedByteFloatMap((TByteFloatMap) tByteFloatHashMap0, (Object) "-1");
      TSynchronizedFloatCollection tSynchronizedFloatCollection0 = (TSynchronizedFloatCollection)tSynchronizedByteFloatMap0.valueCollection();
      assertNotNull(tSynchronizedFloatCollection0);
      
      TSynchronizedFloatCollection tSynchronizedFloatCollection1 = (TSynchronizedFloatCollection)tSynchronizedByteFloatMap0.valueCollection();
      assertSame(tSynchronizedFloatCollection1, tSynchronizedFloatCollection0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TCharCollection;
import gnu.trove.function.TObjectFunction;
import gnu.trove.impl.sync.TSynchronizedCharSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharSet;
import gnu.trove.map.TCharObjectMap;
import gnu.trove.map.hash.TCharObjectHashMap;
import gnu.trove.procedure.TCharObjectProcedure;
import gnu.trove.procedure.TCharProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.set.TCharSet;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TCharObjectHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 17 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap$KeyView$TCharHashIterator.next()C: root-Branch
   * 2 gnu.trove.map.hash.TCharObjectHashMap.removeAt(I)V: root-Branch
   * 3 gnu.trove.map.hash.TCharObjectHashMap.remove(C)Ljava/lang/Object;: I13 Branch 50 IFLT L259 - false
   * 4 gnu.trove.map.hash.TCharObjectHashMap$KeyView.remove(C)Z: I7 Branch 2 IF_ACMPEQ L556 - false
   * 5 gnu.trove.map.hash.TCharObjectHashMap$KeyView.removeAll(Lgnu/trove/TCharCollection;)Z: I26 Branch 22 IFEQ L678 - false
   * 6 gnu.trove.map.hash.TCharObjectHashMap$KeyView.removeAll(Lgnu/trove/TCharCollection;)Z: I37 Branch 23 IFEQ L680 - false
   * 7 gnu.trove.map.hash.TCharObjectHashMap$1.<init>(Lgnu/trove/map/hash/TCharObjectHashMap;)V: root-Branch
   * 8 gnu.trove.map.hash.TCharObjectHashMap$KeyView$TCharHashIterator.<init>(Lgnu/trove/map/hash/TCharObjectHashMap$KeyView;Lgnu/trove/impl/hash/TCharHash;)V: root-Branch
   * 9 gnu.trove.map.hash.TCharObjectHashMap$KeyView.<init>(Lgnu/trove/map/hash/TCharObjectHashMap;)V: root-Branch
   * 10 gnu.trove.map.hash.TCharObjectHashMap$KeyView.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 11 gnu.trove.map.hash.TCharObjectHashMap$KeyView.removeAll(Lgnu/trove/TCharCollection;)Z: I4 Branch 21 IF_ACMPNE L672 - false
   * 12 gnu.trove.map.hash.TCharObjectHashMap.<init>()V: root-Branch
   * 13 gnu.trove.map.hash.TCharObjectHashMap.keySet()Lgnu/trove/set/TCharSet;: root-Branch
   * 14 gnu.trove.map.hash.TCharObjectHashMap.setUp(I)I: root-Branch
   * 15 gnu.trove.map.hash.TCharObjectHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I11 Branch 48 IFGE L239 - true
   * 16 gnu.trove.map.hash.TCharObjectHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I40 Branch 49 IFEQ L247 - false
   * 17 gnu.trove.map.hash.TCharObjectHashMap.putIfAbsent(CLjava/lang/Object;)Ljava/lang/Object;: I9 Branch 47 IFGE L229 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TCharObjectHashMap<Object> tCharObjectHashMap0 = new TCharObjectHashMap<Object>();
      TCharSet tCharSet0 = tCharObjectHashMap0.keySet();
      TUnmodifiableCharSet tUnmodifiableCharSet0 = new TUnmodifiableCharSet(tCharSet0);
      tCharObjectHashMap0.putIfAbsent('m', (Object) "{");
      TSynchronizedCharSet tSynchronizedCharSet0 = new TSynchronizedCharSet(tCharSet0, (Object) "{");
      assertEquals(false, tCharSet0.isEmpty());
      
      // Undeclared exception!
      try {
        tSynchronizedCharSet0.removeAll((TCharCollection) tUnmodifiableCharSet0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 1
  /*
   * 13 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap$TCharObjectHashIterator.key()C: root-Branch
   * 2 gnu.trove.map.hash.TCharObjectHashMap$TCharObjectHashIterator.value()Ljava/lang/Object;: root-Branch
   * 3 gnu.trove.map.hash.TCharObjectHashMap$TCharObjectHashIterator.advance()V: root-Branch
   * 4 gnu.trove.map.hash.TCharObjectHashMap.get(C)Ljava/lang/Object;: I9 Branch 46 IFGE L213 - true
   * 5 gnu.trove.map.hash.TCharObjectHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 75 IFEQ L476 - false
   * 6 gnu.trove.map.hash.TCharObjectHashMap.equals(Ljava/lang/Object;)Z: I52 Branch 76 IFNONNULL L480 - true
   * 7 gnu.trove.map.hash.TCharObjectHashMap.equals(Ljava/lang/Object;)Z: I75 Branch 79 IFNE L485 - true
   * 8 gnu.trove.map.hash.TCharObjectHashMap$TCharObjectHashIterator.<init>(Lgnu/trove/map/hash/TCharObjectHashMap;Lgnu/trove/map/hash/TCharObjectHashMap;)V: root-Branch
   * 9 gnu.trove.map.hash.TCharObjectHashMap.<init>(I)V: root-Branch
   * 10 gnu.trove.map.hash.TCharObjectHashMap.iterator()Lgnu/trove/iterator/TCharObjectIterator;: root-Branch
   * 11 gnu.trove.map.hash.TCharObjectHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 73 IFNE L467 - true
   * 12 gnu.trove.map.hash.TCharObjectHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 74 IF_ICMPEQ L471 - true
   * 13 gnu.trove.map.hash.TCharObjectHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 75 IFEQ L476 - true
   */

  @Test
  public void test1()  throws Throwable  {
      TCharObjectHashMap<Character> tCharObjectHashMap0 = new TCharObjectHashMap<Character>((-16));
      tCharObjectHashMap0.putIfAbsent('\u0000', (Character) '\u0000');
      boolean boolean0 = tCharObjectHashMap0.equals((Object) tCharObjectHashMap0);
      assertEquals("{\u0000=\u0000}", tCharObjectHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap$ValueView.<init>(Lgnu/trove/map/hash/TCharObjectHashMap;)V: root-Branch
   * 2 gnu.trove.map.hash.TCharObjectHashMap.valueCollection()Ljava/util/Collection;: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TCharObjectHashMap<Integer> tCharObjectHashMap0 = new TCharObjectHashMap<Integer>();
      tCharObjectHashMap0.valueCollection();
      assertEquals(23, tCharObjectHashMap0.capacity());
  }

  //Test case number: 3
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap$KeyView.toArray()[C: root-Branch
   * 2 gnu.trove.map.hash.TCharObjectHashMap.keys()[C: I27 Branch 52 IFLE L315 - true
   * 3 gnu.trove.map.hash.TCharObjectHashMap.keys()[C: I27 Branch 52 IFLE L315 - false
   * 4 gnu.trove.map.hash.TCharObjectHashMap.keys()[C: I34 Branch 53 IF_ICMPNE L316 - true
   */

  @Test
  public void test3()  throws Throwable  {
      TCharObjectHashMap<Object> tCharObjectHashMap0 = new TCharObjectHashMap<Object>();
      TCharSet tCharSet0 = tCharObjectHashMap0.keySet();
      TSynchronizedCharSet tSynchronizedCharSet0 = new TSynchronizedCharSet(tCharSet0, (Object) "{");
      char[] charArray0 = tSynchronizedCharSet0.toArray();
      assertEquals(23, tCharObjectHashMap0.capacity());
      assertNotNull(charArray0);
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap$KeyView.clear()V: root-Branch
   * 2 gnu.trove.map.hash.TCharObjectHashMap.clear()V: root-Branch
   * 3 gnu.trove.map.hash.TCharObjectHashMap$KeyView.removeAll(Lgnu/trove/TCharCollection;)Z: I4 Branch 21 IF_ACMPNE L672 - false
   */

  @Test
  public void test4()  throws Throwable  {
      TCharObjectHashMap<Object> tCharObjectHashMap0 = new TCharObjectHashMap<Object>();
      TCharSet tCharSet0 = tCharObjectHashMap0.keySet();
      TSynchronizedCharSet tSynchronizedCharSet0 = new TSynchronizedCharSet(tCharSet0, (Object) "{");
      tSynchronizedCharSet0.removeAll((TCharCollection) tCharSet0);
      assertEquals(23, tCharObjectHashMap0.capacity());
      assertEquals("{}", tCharObjectHashMap0.toString());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TCharObjectHashMap$KeyView.getNoEntryValue()C: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TCharObjectHashMap<Object> tCharObjectHashMap0 = new TCharObjectHashMap<Object>();
      TCharSet tCharSet0 = tCharObjectHashMap0.keySet();
      TSynchronizedCharSet tSynchronizedCharSet0 = new TSynchronizedCharSet(tCharSet0, (Object) "{");
      tSynchronizedCharSet0.getNoEntryValue();
      assertEquals(23, tCharObjectHashMap0.capacity());
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap$KeyView.toArray([C)[C: root-Branch
   * 2 gnu.trove.map.hash.TCharObjectHashMap.keys([C)[C: I6 Branch 54 IF_ICMPGE L327 - true
   * 3 gnu.trove.map.hash.TCharObjectHashMap.keys([C)[C: I34 Branch 55 IFLE L334 - true
   * 4 gnu.trove.map.hash.TCharObjectHashMap.keys([C)[C: I34 Branch 55 IFLE L334 - false
   * 5 gnu.trove.map.hash.TCharObjectHashMap.keys([C)[C: I41 Branch 56 IF_ICMPNE L335 - true
   */

  @Test
  public void test6()  throws Throwable  {
      TCharObjectHashMap<Object> tCharObjectHashMap0 = new TCharObjectHashMap<Object>();
      TCharSet tCharSet0 = tCharObjectHashMap0.keySet();
      TSynchronizedCharSet tSynchronizedCharSet0 = new TSynchronizedCharSet(tCharSet0, (Object) "{");
      char[] charArray0 = tSynchronizedCharSet0.toArray(tCharObjectHashMap0._set);
      assertEquals(23, tCharObjectHashMap0.capacity());
      assertNotNull(charArray0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TCharObjectHashMap<String> tCharObjectHashMap0 = new TCharObjectHashMap<String>();
      boolean boolean0 = tCharObjectHashMap0.forEachKey((TCharProcedure) null);
      assertEquals(23, tCharObjectHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.<init>(IF)V: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TCharObjectHashMap<Integer> tCharObjectHashMap0 = new TCharObjectHashMap<Integer>((-16), (-16));
      assertEquals("{}", tCharObjectHashMap0.toString());
  }

  //Test case number: 9
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.containsValue(Ljava/lang/Object;)Z: I30 Branch 40 IF_ICMPNE L194 - false
   * 2 gnu.trove.map.hash.TCharObjectHashMap.containsValue(Ljava/lang/Object;)Z: I35 Branch 41 IF_ACMPNE L194 - true
   * 3 gnu.trove.map.hash.TCharObjectHashMap.containsValue(Ljava/lang/Object;)Z: I23 Branch 39 IFLE L193 - true
   * 4 gnu.trove.map.hash.TCharObjectHashMap.put(CLjava/lang/Object;)Ljava/lang/Object;: root-Branch
   * 5 gnu.trove.map.hash.TCharObjectHashMap.containsValue(Ljava/lang/Object;)Z: I14 Branch 38 IF_ACMPNE L192 - false
   * 6 gnu.trove.map.hash.TCharObjectHashMap.containsValue(Ljava/lang/Object;)Z: I23 Branch 39 IFLE L193 - false
   * 7 gnu.trove.map.hash.TCharObjectHashMap.containsValue(Ljava/lang/Object;)Z: I30 Branch 40 IF_ICMPNE L194 - true
   */

  @Test
  public void test9()  throws Throwable  {
      TCharObjectHashMap<Integer> tCharObjectHashMap0 = new TCharObjectHashMap<Integer>();
      tCharObjectHashMap0.put('R', (Integer) 0);
      boolean boolean0 = tCharObjectHashMap0.containsValue((Object) null);
      assertEquals(false, tCharObjectHashMap0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.containsValue(Ljava/lang/Object;)Z: I35 Branch 41 IF_ACMPNE L194 - false
   * 2 gnu.trove.map.hash.TCharObjectHashMap.containsValue(Ljava/lang/Object;)Z: I14 Branch 38 IF_ACMPNE L192 - false
   * 3 gnu.trove.map.hash.TCharObjectHashMap.containsValue(Ljava/lang/Object;)Z: I23 Branch 39 IFLE L193 - false
   * 4 gnu.trove.map.hash.TCharObjectHashMap.containsValue(Ljava/lang/Object;)Z: I30 Branch 40 IF_ICMPNE L194 - true
   * 5 gnu.trove.map.hash.TCharObjectHashMap.containsValue(Ljava/lang/Object;)Z: I30 Branch 40 IF_ICMPNE L194 - false
   */

  @Test
  public void test10()  throws Throwable  {
      TCharObjectHashMap<Integer> tCharObjectHashMap0 = new TCharObjectHashMap<Integer>();
      tCharObjectHashMap0.putIfAbsent('H', (Integer) null);
      boolean boolean0 = tCharObjectHashMap0.containsValue((Object) null);
      assertEquals(1, tCharObjectHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 11
  /*
   * 18 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.containsValue(Ljava/lang/Object;)Z: I57 Branch 43 IF_ICMPNE L200 - false
   * 2 gnu.trove.map.hash.TCharObjectHashMap.containsValue(Ljava/lang/Object;)Z: I62 Branch 44 IF_ACMPEQ L200 - false
   * 3 gnu.trove.map.hash.TCharObjectHashMap.containsValue(Ljava/lang/Object;)Z: I68 Branch 45 IFEQ L200 - true
   * 4 gnu.trove.map.hash.TCharObjectHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 73 IFNE L467 - false
   * 5 gnu.trove.map.hash.TCharObjectHashMap$1.execute(CLjava/lang/Object;)Z: root-Branch
   * 6 gnu.trove.map.hash.TCharObjectHashMap.putAll(Lgnu/trove/map/TCharObjectMap;)V: root-Branch
   * 7 gnu.trove.map.hash.TCharObjectHashMap.getNoEntryKey()C: root-Branch
   * 8 gnu.trove.map.hash.TCharObjectHashMap.<init>(Lgnu/trove/map/TCharObjectMap;)V: root-Branch
   * 9 gnu.trove.map.hash.TCharObjectHashMap.containsValue(Ljava/lang/Object;)Z: I14 Branch 38 IF_ACMPNE L192 - true
   * 10 gnu.trove.map.hash.TCharObjectHashMap.containsValue(Ljava/lang/Object;)Z: I50 Branch 42 IFLE L199 - true
   * 11 gnu.trove.map.hash.TCharObjectHashMap.containsValue(Ljava/lang/Object;)Z: I50 Branch 42 IFLE L199 - false
   * 12 gnu.trove.map.hash.TCharObjectHashMap.containsValue(Ljava/lang/Object;)Z: I57 Branch 43 IF_ICMPNE L200 - true
   * 13 gnu.trove.map.hash.TCharObjectHashMap.<init>(IFC)V: root-Branch
   * 14 gnu.trove.map.hash.TCharObjectHashMap.forEachEntry(Lgnu/trove/procedure/TCharObjectProcedure;)Z: I23 Branch 65 IFLE L416 - true
   * 15 gnu.trove.map.hash.TCharObjectHashMap.forEachEntry(Lgnu/trove/procedure/TCharObjectProcedure;)Z: I23 Branch 65 IFLE L416 - false
   * 16 gnu.trove.map.hash.TCharObjectHashMap.forEachEntry(Lgnu/trove/procedure/TCharObjectProcedure;)Z: I30 Branch 66 IF_ICMPNE L417 - true
   * 17 gnu.trove.map.hash.TCharObjectHashMap.forEachEntry(Lgnu/trove/procedure/TCharObjectProcedure;)Z: I30 Branch 66 IF_ICMPNE L417 - false
   * 18 gnu.trove.map.hash.TCharObjectHashMap.forEachEntry(Lgnu/trove/procedure/TCharObjectProcedure;)Z: I39 Branch 67 IFNE L417 - true
   */

  @Test
  public void test11()  throws Throwable  {
      TCharObjectHashMap<Integer> tCharObjectHashMap0 = new TCharObjectHashMap<Integer>((-6));
      tCharObjectHashMap0.putIfAbsent('\u0083', (Integer) (-6));
      TCharObjectHashMap<Object> tCharObjectHashMap1 = new TCharObjectHashMap<Object>((TCharObjectMap<?>) tCharObjectHashMap0);
      boolean boolean0 = tCharObjectHashMap0.containsValue((Object) tCharObjectHashMap1);
      assertEquals(false, tCharObjectHashMap0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.get(C)Ljava/lang/Object;: I9 Branch 46 IFGE L213 - false
   */

  @Test
  public void test12()  throws Throwable  {
      TCharObjectHashMap<Object> tCharObjectHashMap0 = new TCharObjectHashMap<Object>();
      tCharObjectHashMap0.get('N');
      assertEquals(23, tCharObjectHashMap0.capacity());
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.putIfAbsent(CLjava/lang/Object;)Ljava/lang/Object;: I9 Branch 47 IFGE L229 - false
   */

  @Test
  public void test13()  throws Throwable  {
      TCharObjectHashMap<Integer> tCharObjectHashMap0 = new TCharObjectHashMap<Integer>();
      tCharObjectHashMap0.put('R', (Integer) 11);
      tCharObjectHashMap0.putIfAbsent('R', (Integer) 11);
      assertEquals(false, tCharObjectHashMap0.isEmpty());
      assertEquals("{R=11}", tCharObjectHashMap0.toString());
  }

  //Test case number: 14
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I11 Branch 48 IFGE L239 - false
   * 2 gnu.trove.map.hash.TCharObjectHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I40 Branch 49 IFEQ L247 - true
   */

  @Test
  public void test14()  throws Throwable  {
      TCharObjectHashMap<Integer> tCharObjectHashMap0 = new TCharObjectHashMap<Integer>();
      tCharObjectHashMap0.put('B', (Integer) 0);
      tCharObjectHashMap0.put('B', (Integer) 0);
      assertEquals(false, tCharObjectHashMap0.isEmpty());
      assertEquals("{B=0}", tCharObjectHashMap0.toString());
  }

  //Test case number: 15
  /*
   * 11 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.remove(C)Ljava/lang/Object;: I13 Branch 50 IFLT L259 - true
   * 2 gnu.trove.map.hash.TCharObjectHashMap$KeyView.remove(C)Z: I7 Branch 2 IF_ACMPEQ L556 - true
   * 3 gnu.trove.map.hash.TCharObjectHashMap$KeyView.retainAll([C)Z: I28 Branch 15 IFLE L647 - true
   * 4 gnu.trove.map.hash.TCharObjectHashMap$KeyView.retainAll([C)Z: I28 Branch 15 IFLE L647 - false
   * 5 gnu.trove.map.hash.TCharObjectHashMap$KeyView.retainAll([C)Z: I35 Branch 16 IF_ICMPNE L648 - true
   * 6 gnu.trove.map.hash.TCharObjectHashMap$KeyView.retainAll([C)Z: I35 Branch 16 IF_ICMPNE L648 - false
   * 7 gnu.trove.map.hash.TCharObjectHashMap$KeyView.retainAll([C)Z: I41 Branch 17 IFGE L648 - true
   * 8 gnu.trove.map.hash.TCharObjectHashMap$KeyView.removeAll(Lgnu/trove/TCharCollection;)Z: I4 Branch 21 IF_ACMPNE L672 - true
   * 9 gnu.trove.map.hash.TCharObjectHashMap$KeyView.removeAll(Lgnu/trove/TCharCollection;)Z: I37 Branch 23 IFEQ L680 - true
   * 10 gnu.trove.map.hash.TCharObjectHashMap$KeyView.removeAll(Lgnu/trove/TCharCollection;)Z: I26 Branch 22 IFEQ L678 - true
   * 11 gnu.trove.map.hash.TCharObjectHashMap$KeyView.removeAll(Lgnu/trove/TCharCollection;)Z: I26 Branch 22 IFEQ L678 - false
   */

  @Test
  public void test15()  throws Throwable  {
      TCharObjectHashMap<Object> tCharObjectHashMap0 = new TCharObjectHashMap<Object>();
      TCharSet tCharSet0 = tCharObjectHashMap0.keySet();
      TUnmodifiableCharSet tUnmodifiableCharSet0 = new TUnmodifiableCharSet(tCharSet0);
      tCharObjectHashMap0.putIfAbsent('m', (Object) "{");
      TSynchronizedCharSet tSynchronizedCharSet0 = new TSynchronizedCharSet(tCharSet0, (Object) "{");
      tSynchronizedCharSet0.retainAll(tCharObjectHashMap0._set);
      tSynchronizedCharSet0.removeAll((TCharCollection) tUnmodifiableCharSet0);
      assertEquals("{\u0000", tUnmodifiableCharSet0.toString());
      assertEquals("{\u0000={}", tCharObjectHashMap0.toString());
  }

  //Test case number: 16
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.putAll(Ljava/util/Map;)V: I13 Branch 51 IFEQ L279 - false
   * 2 gnu.trove.map.hash.TCharObjectHashMap.putAll(Ljava/util/Map;)V: I13 Branch 51 IFEQ L279 - true
   */

  @Test
  public void test16()  throws Throwable  {
      TCharObjectHashMap<Object> tCharObjectHashMap0 = new TCharObjectHashMap<Object>(1);
      HashMap<Character, Integer> hashMap0 = new HashMap<Character, Integer>();
      Character character0 = Character.valueOf('/');
      hashMap0.put(character0, (Integer) 1);
      tCharObjectHashMap0.putAll((Map<? extends Character, ?>) hashMap0);
      assertEquals(1, tCharObjectHashMap0.size());
      assertEquals("{/=1}", tCharObjectHashMap0.toString());
  }

  //Test case number: 17
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.keys()[C: I34 Branch 53 IF_ICMPNE L316 - false
   * 2 gnu.trove.map.hash.TCharObjectHashMap.keys()[C: I27 Branch 52 IFLE L315 - true
   * 3 gnu.trove.map.hash.TCharObjectHashMap.keys()[C: I27 Branch 52 IFLE L315 - false
   * 4 gnu.trove.map.hash.TCharObjectHashMap.keys()[C: I34 Branch 53 IF_ICMPNE L316 - true
   */

  @Test
  public void test17()  throws Throwable  {
      TCharObjectHashMap<Character> tCharObjectHashMap0 = new TCharObjectHashMap<Character>((-16));
      tCharObjectHashMap0.putIfAbsent('\u0000', (Character) '\u0000');
      tCharObjectHashMap0.keys();
      assertEquals(1, tCharObjectHashMap0.size());
      assertEquals("{\u0000=\u0000}", tCharObjectHashMap0.toString());
  }

  //Test case number: 18
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.keys([C)[C: I41 Branch 56 IF_ICMPNE L335 - false
   * 2 gnu.trove.map.hash.TCharObjectHashMap.keys([C)[C: I6 Branch 54 IF_ICMPGE L327 - true
   * 3 gnu.trove.map.hash.TCharObjectHashMap.keys([C)[C: I34 Branch 55 IFLE L334 - true
   * 4 gnu.trove.map.hash.TCharObjectHashMap.keys([C)[C: I34 Branch 55 IFLE L334 - false
   * 5 gnu.trove.map.hash.TCharObjectHashMap.keys([C)[C: I41 Branch 56 IF_ICMPNE L335 - true
   */

  @Test
  public void test18()  throws Throwable  {
      TCharObjectHashMap<Integer> tCharObjectHashMap0 = new TCharObjectHashMap<Integer>(1);
      TCharObjectHashMap<String> tCharObjectHashMap1 = new TCharObjectHashMap<String>(1);
      tCharObjectHashMap0.putIfAbsent('7', (Integer) 1);
      tCharObjectHashMap0.keys(tCharObjectHashMap1._set);
      assertEquals(false, tCharObjectHashMap0.isEmpty());
      assertEquals("{7=1}", tCharObjectHashMap0.toString());
  }

  //Test case number: 19
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I6 Branch 59 IF_ICMPGE L368 - true
   * 2 gnu.trove.map.hash.TCharObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I39 Branch 60 IFLE L376 - true
   * 3 gnu.trove.map.hash.TCharObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I39 Branch 60 IFLE L376 - false
   * 4 gnu.trove.map.hash.TCharObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I46 Branch 61 IF_ICMPNE L377 - true
   * 5 gnu.trove.map.hash.TCharObjectHashMap.values()[Ljava/lang/Object;: I28 Branch 57 IFLE L356 - true
   * 6 gnu.trove.map.hash.TCharObjectHashMap.values()[Ljava/lang/Object;: I28 Branch 57 IFLE L356 - false
   * 7 gnu.trove.map.hash.TCharObjectHashMap.values()[Ljava/lang/Object;: I35 Branch 58 IF_ICMPNE L357 - true
   */

//   @Test
//   public void test19()  throws Throwable  {
//       TCharObjectHashMap<Integer> tCharObjectHashMap0 = new TCharObjectHashMap<Integer>();
//       Integer[] integerArray0 = tCharObjectHashMap0.values();
//       assertNotNull(integerArray0);
//       
//       TCharObjectHashMap<Object> tCharObjectHashMap1 = new TCharObjectHashMap<Object>((int) 'R');
//       Object[] objectArray0 = tCharObjectHashMap1.values((Object[]) integerArray0);
//       assertEquals(179, tCharObjectHashMap1.capacity());
//       assertSame(objectArray0, integerArray0);
//       assertNotNull(objectArray0);
//   }

  //Test case number: 20
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I6 Branch 59 IF_ICMPGE L368 - false
   * 2 gnu.trove.map.hash.TCharObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I46 Branch 61 IF_ICMPNE L377 - false
   * 3 gnu.trove.map.hash.TCharObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I39 Branch 60 IFLE L376 - true
   * 4 gnu.trove.map.hash.TCharObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I39 Branch 60 IFLE L376 - false
   * 5 gnu.trove.map.hash.TCharObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I46 Branch 61 IF_ICMPNE L377 - true
   */

//   @Test
//   public void test20()  throws Throwable  {
//       TCharObjectHashMap<Integer> tCharObjectHashMap0 = new TCharObjectHashMap<Integer>();
//       Integer[] integerArray0 = tCharObjectHashMap0.values();
//       assertNotNull(integerArray0);
//       
//       TCharObjectHashMap<Object> tCharObjectHashMap1 = new TCharObjectHashMap<Object>((int) '{');
//       tCharObjectHashMap1.putIfAbsent('{', (Object) "{}");
//       tCharObjectHashMap1.values((Object[]) integerArray0);
//       assertEquals(1, tCharObjectHashMap1.size());
//       assertEquals("{{={}}", tCharObjectHashMap1.toString());
//   }

  //Test case number: 21
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I25 Branch 63 IF_ICMPNE L402 - false
   * 2 gnu.trove.map.hash.TCharObjectHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I31 Branch 64 IFNE L402 - true
   * 3 gnu.trove.map.hash.TCharObjectHashMap.values()[Ljava/lang/Object;: I28 Branch 57 IFLE L356 - true
   * 4 gnu.trove.map.hash.TCharObjectHashMap.values()[Ljava/lang/Object;: I28 Branch 57 IFLE L356 - false
   * 5 gnu.trove.map.hash.TCharObjectHashMap.values()[Ljava/lang/Object;: I35 Branch 58 IF_ICMPNE L357 - true
   * 6 gnu.trove.map.hash.TCharObjectHashMap.values()[Ljava/lang/Object;: I35 Branch 58 IF_ICMPNE L357 - false
   * 7 gnu.trove.map.hash.TCharObjectHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I18 Branch 62 IFLE L401 - true
   * 8 gnu.trove.map.hash.TCharObjectHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I18 Branch 62 IFLE L401 - false
   * 9 gnu.trove.map.hash.TCharObjectHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I25 Branch 63 IF_ICMPNE L402 - true
   */

//   @Test
//   public void test21()  throws Throwable  {
//       TCharObjectHashMap<Integer> tCharObjectHashMap0 = new TCharObjectHashMap<Integer>();
//       tCharObjectHashMap0.put('R', (Integer) 0);
//       Integer[] integerArray0 = tCharObjectHashMap0.values();
//       ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>((Object[]) integerArray0);
//       boolean boolean0 = tCharObjectHashMap0.forEachValue((TObjectProcedure<? super Integer>) toObjectArrayProceedure0);
//       assertEquals("{R=0}", tCharObjectHashMap0.toString());
//       assertEquals(true, boolean0);
//   }

  //Test case number: 22
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.retainEntries(Lgnu/trove/procedure/TCharObjectProcedure;)Z: I31 Branch 68 IFLE L436 - true
   * 2 gnu.trove.map.hash.TCharObjectHashMap.retainEntries(Lgnu/trove/procedure/TCharObjectProcedure;)Z: I31 Branch 68 IFLE L436 - false
   * 3 gnu.trove.map.hash.TCharObjectHashMap.retainEntries(Lgnu/trove/procedure/TCharObjectProcedure;)Z: I38 Branch 69 IF_ICMPNE L437 - true
   */

  @Test
  public void test22()  throws Throwable  {
      TCharObjectHashMap<String> tCharObjectHashMap0 = new TCharObjectHashMap<String>((-16));
      boolean boolean0 = tCharObjectHashMap0.retainEntries((TCharObjectProcedure<? super String>) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: I18 Branch 71 IFLE L455 - true
   * 2 gnu.trove.map.hash.TCharObjectHashMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: I18 Branch 71 IFLE L455 - false
   * 3 gnu.trove.map.hash.TCharObjectHashMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: I25 Branch 72 IF_ICMPNE L456 - true
   */

  @Test
  public void test23()  throws Throwable  {
      TCharObjectHashMap<Character> tCharObjectHashMap0 = new TCharObjectHashMap<Character>();
      tCharObjectHashMap0.transformValues((TObjectFunction<Character, Character>) null);
      assertEquals(23, tCharObjectHashMap0.capacity());
  }

  //Test case number: 24
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: I25 Branch 72 IF_ICMPNE L456 - false
   * 2 gnu.trove.map.hash.TCharObjectHashMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: I18 Branch 71 IFLE L455 - false
   * 3 gnu.trove.map.hash.TCharObjectHashMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: I25 Branch 72 IF_ICMPNE L456 - true
   */

  @Test
  public void test24()  throws Throwable  {
      TCharObjectHashMap<Character> tCharObjectHashMap0 = new TCharObjectHashMap<Character>();
      tCharObjectHashMap0.putIfAbsent(',', (Character) ',');
      // Undeclared exception!
      try {
        tCharObjectHashMap0.transformValues((TObjectFunction<Character, Character>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 74 IF_ICMPEQ L471 - false
   */

  @Test
  public void test25()  throws Throwable  {
      TCharObjectHashMap<Integer> tCharObjectHashMap0 = new TCharObjectHashMap<Integer>((-6));
      tCharObjectHashMap0.putIfAbsent('\u0083', (Integer) (-6));
      TCharObjectHashMap<String> tCharObjectHashMap1 = new TCharObjectHashMap<String>(0);
      boolean boolean0 = tCharObjectHashMap0.equals((Object) tCharObjectHashMap1);
      assertEquals("{\u0083=-6}", tCharObjectHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 26
  /*
   * 14 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.equals(Ljava/lang/Object;)Z: I52 Branch 76 IFNONNULL L480 - false
   * 2 gnu.trove.map.hash.TCharObjectHashMap.equals(Ljava/lang/Object;)Z: I58 Branch 77 IFNONNULL L481 - false
   * 3 gnu.trove.map.hash.TCharObjectHashMap.equals(Ljava/lang/Object;)Z: I62 Branch 78 IFNE L481 - true
   * 4 gnu.trove.map.hash.TCharObjectHashMap$TCharObjectHashIterator.<init>(Lgnu/trove/map/hash/TCharObjectHashMap;Lgnu/trove/map/hash/TCharObjectHashMap;)V: root-Branch
   * 5 gnu.trove.map.hash.TCharObjectHashMap$TCharObjectHashIterator.key()C: root-Branch
   * 6 gnu.trove.map.hash.TCharObjectHashMap$TCharObjectHashIterator.value()Ljava/lang/Object;: root-Branch
   * 7 gnu.trove.map.hash.TCharObjectHashMap$TCharObjectHashIterator.advance()V: root-Branch
   * 8 gnu.trove.map.hash.TCharObjectHashMap.iterator()Lgnu/trove/iterator/TCharObjectIterator;: root-Branch
   * 9 gnu.trove.map.hash.TCharObjectHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 73 IFNE L467 - true
   * 10 gnu.trove.map.hash.TCharObjectHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 74 IF_ICMPEQ L471 - true
   * 11 gnu.trove.map.hash.TCharObjectHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 75 IFEQ L476 - true
   * 12 gnu.trove.map.hash.TCharObjectHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 75 IFEQ L476 - false
   * 13 gnu.trove.map.hash.TCharObjectHashMap.get(C)Ljava/lang/Object;: I9 Branch 46 IFGE L213 - true
   * 14 gnu.trove.map.hash.TCharObjectHashMap.containsKey(C)Z: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TCharObjectHashMap<String> tCharObjectHashMap0 = new TCharObjectHashMap<String>();
      tCharObjectHashMap0.put('R', (String) null);
      boolean boolean0 = tCharObjectHashMap0.equals((Object) tCharObjectHashMap0);
      assertEquals("{R=null}", tCharObjectHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 27
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.hashCode()I: I29 Branch 81 IF_ICMPNE L503 - false
   * 2 gnu.trove.map.hash.TCharObjectHashMap.hashCode()I: I41 Branch 82 IFNONNULL L504 - true
   * 3 gnu.trove.map.hash.TCharObjectHashMap.hashCode()I: I22 Branch 80 IFLE L502 - true
   * 4 gnu.trove.map.hash.TCharObjectHashMap.hashCode()I: I22 Branch 80 IFLE L502 - false
   * 5 gnu.trove.map.hash.TCharObjectHashMap.hashCode()I: I29 Branch 81 IF_ICMPNE L503 - true
   */

  @Test
  public void test27()  throws Throwable  {
      TCharObjectHashMap<Integer> tCharObjectHashMap0 = new TCharObjectHashMap<Integer>();
      tCharObjectHashMap0.put('B', (Integer) 0);
      int int0 = tCharObjectHashMap0.hashCode();
      assertEquals(false, tCharObjectHashMap0.isEmpty());
      assertEquals(66, int0);
  }

  //Test case number: 28
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.hashCode()I: I41 Branch 82 IFNONNULL L504 - false
   * 2 gnu.trove.map.hash.TCharObjectHashMap.hashCode()I: I22 Branch 80 IFLE L502 - true
   * 3 gnu.trove.map.hash.TCharObjectHashMap.hashCode()I: I22 Branch 80 IFLE L502 - false
   * 4 gnu.trove.map.hash.TCharObjectHashMap.hashCode()I: I29 Branch 81 IF_ICMPNE L503 - true
   * 5 gnu.trove.map.hash.TCharObjectHashMap.hashCode()I: I29 Branch 81 IF_ICMPNE L503 - false
   * 6 gnu.trove.map.hash.TCharObjectHashMap.putIfAbsent(CLjava/lang/Object;)Ljava/lang/Object;: I9 Branch 47 IFGE L229 - true
   */

  @Test
  public void test28()  throws Throwable  {
      TCharObjectHashMap<Object> tCharObjectHashMap0 = new TCharObjectHashMap<Object>((int) 'R');
      tCharObjectHashMap0.putIfAbsent('R', (Object) null);
      int int0 = tCharObjectHashMap0.hashCode();
      assertEquals(false, tCharObjectHashMap0.isEmpty());
      assertEquals(82, int0);
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TCharObjectHashMap$KeyView.isEmpty()Z: I5 Branch 1 IFNE L526 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TCharObjectHashMap<Object> tCharObjectHashMap0 = new TCharObjectHashMap<Object>();
      TCharSet tCharSet0 = tCharObjectHashMap0.keySet();
      TUnmodifiableCharSet tUnmodifiableCharSet0 = new TUnmodifiableCharSet(tCharSet0);
      tUnmodifiableCharSet0.isEmpty();
      assertEquals(23, tCharObjectHashMap0.capacity());
  }

  //Test case number: 30
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TCharObjectHashMap$KeyView.containsAll(Ljava/util/Collection;)Z: I8 Branch 3 IFEQ L561 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TCharObjectHashMap<Object> tCharObjectHashMap0 = new TCharObjectHashMap<Object>();
      TCharSet tCharSet0 = tCharObjectHashMap0.keySet();
      TUnmodifiableCharSet tUnmodifiableCharSet0 = new TUnmodifiableCharSet(tCharSet0);
      Locale locale0 = new Locale("{", "{");
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      tUnmodifiableCharSet0.containsAll((Collection<?>) set0);
      assertEquals(23, tCharObjectHashMap0.capacity());
  }

  //Test case number: 31
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap$KeyView.containsAll([C)Z: I14 Branch 8 IF_ICMPGE L587 - false
   * 2 gnu.trove.map.hash.TCharObjectHashMap$KeyView.containsAll([C)Z: I25 Branch 9 IFNE L588 - false
   */

  @Test
  public void test31()  throws Throwable  {
      TCharObjectHashMap<Object> tCharObjectHashMap0 = new TCharObjectHashMap<Object>();
      TCharSet tCharSet0 = tCharObjectHashMap0.keySet();
      TSynchronizedCharSet tSynchronizedCharSet0 = new TSynchronizedCharSet(tCharSet0, (Object) "{");
      tSynchronizedCharSet0.containsAll(tCharObjectHashMap0._set);
      assertEquals(23, tCharObjectHashMap0.capacity());
  }

  //Test case number: 32
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap$KeyView.retainAll(Ljava/util/Collection;)Z: I13 Branch 10 IFEQ L614 - false
   * 2 gnu.trove.map.hash.TCharObjectHashMap$KeyView.retainAll(Ljava/util/Collection;)Z: I21 Branch 11 IFGT L616 - false
   * 3 gnu.trove.map.hash.TCharObjectHashMap$KeyView$TCharHashIterator.next()C: root-Branch
   * 4 gnu.trove.map.hash.TCharObjectHashMap$KeyView.retainAll(Ljava/util/Collection;)Z: I13 Branch 10 IFEQ L614 - true
   * 5 gnu.trove.map.hash.TCharObjectHashMap.removeAt(I)V: root-Branch
   */

  @Test
  public void test32()  throws Throwable  {
      TCharObjectHashMap<Object> tCharObjectHashMap0 = new TCharObjectHashMap<Object>();
      TCharSet tCharSet0 = tCharObjectHashMap0.keySet();
      TSynchronizedCharSet tSynchronizedCharSet0 = new TSynchronizedCharSet(tCharSet0, (Object) "{");
      Locale locale0 = Locale.CANADA_FRENCH;
      tCharObjectHashMap0.put('\'', (Object) "{");
      assertEquals("{'={}", tCharObjectHashMap0.toString());
      
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      boolean boolean0 = tSynchronizedCharSet0.retainAll((Collection<?>) set0);
      assertEquals(true, boolean0);
  }

  //Test case number: 33
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap$KeyView.retainAll(Lgnu/trove/TCharCollection;)Z: I4 Branch 12 IF_ACMPNE L626 - false
   * 2 gnu.trove.map.hash.TCharObjectHashMap$KeyView.retainAll(Lgnu/trove/TCharCollection;)Z: I22 Branch 13 IFEQ L631 - true
   * 3 gnu.trove.map.hash.TCharObjectHashMap$KeyView$TCharHashIterator.<init>(Lgnu/trove/map/hash/TCharObjectHashMap$KeyView;Lgnu/trove/impl/hash/TCharHash;)V: root-Branch
   * 4 gnu.trove.map.hash.TCharObjectHashMap$KeyView.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   */

  @Test
  public void test33()  throws Throwable  {
      TCharObjectHashMap<Object> tCharObjectHashMap0 = new TCharObjectHashMap<Object>();
      TCharSet tCharSet0 = tCharObjectHashMap0.keySet();
      TUnmodifiableCharSet tUnmodifiableCharSet0 = new TUnmodifiableCharSet(tCharSet0);
      TSynchronizedCharSet tSynchronizedCharSet0 = new TSynchronizedCharSet(tCharSet0, (Object) "{");
      tSynchronizedCharSet0.retainAll((TCharCollection) tUnmodifiableCharSet0);
      assertEquals(23, tCharObjectHashMap0.capacity());
  }

  //Test case number: 34
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TCharObjectHashMap$KeyView.removeAll(Ljava/util/Collection;)Z: I12 Branch 18 IFEQ L659 - true
   */

  @Test
  public void test34()  throws Throwable  {
      TCharObjectHashMap<Object> tCharObjectHashMap0 = new TCharObjectHashMap<Object>();
      TCharSet tCharSet0 = tCharObjectHashMap0.keySet();
      TSynchronizedCharSet tSynchronizedCharSet0 = new TSynchronizedCharSet(tCharSet0, (Object) "{");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      tSynchronizedCharSet0.removeAll((Collection<?>) linkedList0);
      assertEquals(23, tCharObjectHashMap0.capacity());
  }

  //Test case number: 35
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap$KeyView.removeAll([C)Z: I12 Branch 24 IFLE L690 - true
   * 2 gnu.trove.map.hash.TCharObjectHashMap$KeyView.removeAll([C)Z: I12 Branch 24 IFLE L690 - false
   * 3 gnu.trove.map.hash.TCharObjectHashMap$KeyView.removeAll([C)Z: I20 Branch 25 IFEQ L691 - true
   * 4 gnu.trove.map.hash.TCharObjectHashMap$KeyView.remove(C)Z: I7 Branch 2 IF_ACMPEQ L556 - true
   * 5 gnu.trove.map.hash.TCharObjectHashMap.<init>(I)V: root-Branch
   * 6 gnu.trove.map.hash.TCharObjectHashMap.remove(C)Ljava/lang/Object;: I13 Branch 50 IFLT L259 - true
   */

  @Test
  public void test35()  throws Throwable  {
      TCharObjectHashMap<Integer> tCharObjectHashMap0 = new TCharObjectHashMap<Integer>(843);
      TCharObjectHashMap<Object> tCharObjectHashMap1 = new TCharObjectHashMap<Object>();
      TCharSet tCharSet0 = tCharObjectHashMap1.keySet();
      TSynchronizedCharSet tSynchronizedCharSet0 = new TSynchronizedCharSet(tCharSet0, (Object) "{");
      tSynchronizedCharSet0.removeAll(tCharObjectHashMap0._set);
      assertEquals(23, tCharObjectHashMap1.capacity());
      assertEquals(1759, tCharObjectHashMap0.capacity());
  }

  //Test case number: 36
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TCharObjectHashMap$KeyView.equals(Ljava/lang/Object;)Z: I4 Branch 26 IFNE L710 - false
   */

  @Test
  public void test36()  throws Throwable  {
      TCharObjectHashMap<Object> tCharObjectHashMap0 = new TCharObjectHashMap<Object>();
      TCharSet tCharSet0 = tCharObjectHashMap0.keySet();
      TUnmodifiableCharSet tUnmodifiableCharSet0 = new TUnmodifiableCharSet(tCharSet0);
      tUnmodifiableCharSet0.equals((Object) null);
      assertEquals(23, tCharObjectHashMap0.capacity());
  }

  //Test case number: 37
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap$KeyView.equals(Ljava/lang/Object;)Z: I44 Branch 29 IF_ICMPNE L718 - false
   * 2 gnu.trove.map.hash.TCharObjectHashMap$KeyView.equals(Ljava/lang/Object;)Z: I54 Branch 30 IFNE L719 - true
   * 3 gnu.trove.map.hash.TCharObjectHashMap$KeyView.size()I: root-Branch
   * 4 gnu.trove.map.hash.TCharObjectHashMap$KeyView.contains(C)Z: root-Branch
   * 5 gnu.trove.map.hash.TCharObjectHashMap$KeyView.equals(Ljava/lang/Object;)Z: I4 Branch 26 IFNE L710 - true
   * 6 gnu.trove.map.hash.TCharObjectHashMap$KeyView.equals(Ljava/lang/Object;)Z: I20 Branch 27 IF_ICMPEQ L714 - true
   * 7 gnu.trove.map.hash.TCharObjectHashMap$KeyView.equals(Ljava/lang/Object;)Z: I35 Branch 28 IFLE L717 - true
   * 8 gnu.trove.map.hash.TCharObjectHashMap$KeyView.equals(Ljava/lang/Object;)Z: I35 Branch 28 IFLE L717 - false
   * 9 gnu.trove.map.hash.TCharObjectHashMap$KeyView.equals(Ljava/lang/Object;)Z: I44 Branch 29 IF_ICMPNE L718 - true
   * 10 gnu.trove.map.hash.TCharObjectHashMap.containsKey(C)Z: root-Branch
   */

  @Test
  public void test37()  throws Throwable  {
      TCharObjectHashMap<Object> tCharObjectHashMap0 = new TCharObjectHashMap<Object>();
      TCharSet tCharSet0 = tCharObjectHashMap0.keySet();
      TUnmodifiableCharSet tUnmodifiableCharSet0 = new TUnmodifiableCharSet(tCharSet0);
      TSynchronizedCharSet tSynchronizedCharSet0 = new TSynchronizedCharSet(tCharSet0, (Object) "{");
      tCharObjectHashMap0.put('\'', (Object) "{");
      boolean boolean0 = tUnmodifiableCharSet0.equals((Object) tSynchronizedCharSet0);
      assertEquals(false, tUnmodifiableCharSet0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 38
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap$KeyView.toString()Ljava/lang/String;: I21 Branch 33 IFLE L742 - true
   * 2 gnu.trove.map.hash.TCharObjectHashMap$KeyView.toString()Ljava/lang/String;: I21 Branch 33 IFLE L742 - false
   * 3 gnu.trove.map.hash.TCharObjectHashMap$KeyView.toString()Ljava/lang/String;: I30 Branch 34 IF_ICMPNE L743 - true
   * 4 gnu.trove.map.hash.TCharObjectHashMap$KeyView.<init>(Lgnu/trove/map/hash/TCharObjectHashMap;)V: root-Branch
   * 5 gnu.trove.map.hash.TCharObjectHashMap.keySet()Lgnu/trove/set/TCharSet;: root-Branch
   */

  @Test
  public void test38()  throws Throwable  {
      TCharObjectHashMap<Object> tCharObjectHashMap0 = new TCharObjectHashMap<Object>();
      TCharSet tCharSet0 = tCharObjectHashMap0.keySet();
      TUnmodifiableCharSet tUnmodifiableCharSet0 = new TUnmodifiableCharSet(tCharSet0);
      tUnmodifiableCharSet0.toString();
      assertEquals(23, tCharObjectHashMap0.capacity());
  }

  //Test case number: 39
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I39 Branch 84 IF_ICMPNE L974 - false
   * 2 gnu.trove.map.hash.TCharObjectHashMap.<init>(IFC)V: root-Branch
   * 3 gnu.trove.map.hash.TCharObjectHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I31 Branch 83 IFLE L973 - true
   * 4 gnu.trove.map.hash.TCharObjectHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I31 Branch 83 IFLE L973 - false
   * 5 gnu.trove.map.hash.TCharObjectHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I39 Branch 84 IF_ICMPNE L974 - true
   * 6 gnu.trove.map.hash.TCharObjectHashMap.rehash(I)V: I47 Branch 36 IFLE L161 - true
   * 7 gnu.trove.map.hash.TCharObjectHashMap.rehash(I)V: I47 Branch 36 IFLE L161 - false
   * 8 gnu.trove.map.hash.TCharObjectHashMap.rehash(I)V: I54 Branch 37 IF_ICMPNE L162 - true
   * 9 gnu.trove.map.hash.TCharObjectHashMap.rehash(I)V: I54 Branch 37 IF_ICMPNE L162 - false
   */

  @Test
  public void test39()  throws Throwable  {
      TCharObjectHashMap<Integer> tCharObjectHashMap0 = new TCharObjectHashMap<Integer>(0, (float) 0, 'x');
      tCharObjectHashMap0.put('x', (Integer) 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PrintStream printStream0 = new PrintStream((OutputStream) pipedOutputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) printStream0);
      tCharObjectHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(false, tCharObjectHashMap0.isEmpty());
      assertEquals("{x=0}", tCharObjectHashMap0.toString());
  }

  //Test case number: 40
  /*
   * 15 covered goals:
   * 1 gnu.trove.map.hash.TCharObjectHashMap$2.execute(CLjava/lang/Object;)Z: I4 Branch 97 IFEQ L1013 - true
   * 2 gnu.trove.map.hash.TCharObjectHashMap$2.execute(CLjava/lang/Object;)Z: I4 Branch 97 IFEQ L1013 - false
   * 3 gnu.trove.map.hash.TCharObjectHashMap$2.<init>(Lgnu/trove/map/hash/TCharObjectHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 4 gnu.trove.map.hash.TCharObjectHashMap$1.<init>(Lgnu/trove/map/hash/TCharObjectHashMap;)V: root-Branch
   * 5 gnu.trove.map.hash.TCharObjectHashMap.<init>()V: root-Branch
   * 6 gnu.trove.map.hash.TCharObjectHashMap.toString()Ljava/lang/String;: root-Branch
   * 7 gnu.trove.map.hash.TCharObjectHashMap.setUp(I)I: root-Branch
   * 8 gnu.trove.map.hash.TCharObjectHashMap.put(CLjava/lang/Object;)Ljava/lang/Object;: root-Branch
   * 9 gnu.trove.map.hash.TCharObjectHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I11 Branch 48 IFGE L239 - true
   * 10 gnu.trove.map.hash.TCharObjectHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I40 Branch 49 IFEQ L247 - false
   * 11 gnu.trove.map.hash.TCharObjectHashMap.forEachEntry(Lgnu/trove/procedure/TCharObjectProcedure;)Z: I23 Branch 65 IFLE L416 - true
   * 12 gnu.trove.map.hash.TCharObjectHashMap.forEachEntry(Lgnu/trove/procedure/TCharObjectProcedure;)Z: I23 Branch 65 IFLE L416 - false
   * 13 gnu.trove.map.hash.TCharObjectHashMap.forEachEntry(Lgnu/trove/procedure/TCharObjectProcedure;)Z: I30 Branch 66 IF_ICMPNE L417 - true
   * 14 gnu.trove.map.hash.TCharObjectHashMap.forEachEntry(Lgnu/trove/procedure/TCharObjectProcedure;)Z: I30 Branch 66 IF_ICMPNE L417 - false
   * 15 gnu.trove.map.hash.TCharObjectHashMap.forEachEntry(Lgnu/trove/procedure/TCharObjectProcedure;)Z: I39 Branch 67 IFNE L417 - true
   */

  @Test
  public void test40()  throws Throwable  {
      TCharObjectHashMap<String> tCharObjectHashMap0 = new TCharObjectHashMap<String>();
      tCharObjectHashMap0.put('R', (String) null);
      tCharObjectHashMap0.put('H', (String) null);
      String string0 = tCharObjectHashMap0.toString();
      assertEquals(false, tCharObjectHashMap0.isEmpty());
      assertEquals("{R=null,H=null}", string0);
  }
}

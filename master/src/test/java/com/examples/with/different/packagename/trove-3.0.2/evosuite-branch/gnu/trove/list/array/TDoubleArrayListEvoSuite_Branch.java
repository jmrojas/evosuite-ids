/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.list.array;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TDoubleCollection;
import gnu.trove.function.TDoubleFunction;
import gnu.trove.impl.sync.TSynchronizedRandomAccessDoubleList;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet;
import gnu.trove.list.TDoubleList;
import gnu.trove.list.array.TDoubleArrayList;
import gnu.trove.procedure.TDoubleProcedure;
import gnu.trove.set.TDoubleSet;
import gnu.trove.set.hash.TDoubleHashSet;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Random;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TDoubleArrayListEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 7 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.sort(II)V: root-Branch
   * 2 gnu.trove.list.array.TDoubleArrayList.<init>(ID)V: root-Branch
   * 3 gnu.trove.list.array.TDoubleArrayList.<init>(I)V: root-Branch
   * 4 gnu.trove.list.array.TDoubleArrayList.add([DII)V: root-Branch
   * 5 gnu.trove.list.array.TDoubleArrayList.add([D)V: root-Branch
   * 6 gnu.trove.list.array.TDoubleArrayList.<init>([D)V: root-Branch
   * 7 gnu.trove.list.array.TDoubleArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   */

  @Test
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      tDoubleArrayList0.sort(0, 0);
      assertEquals(3, tDoubleArrayList0.size());
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.clear()V: root-Branch
   * 2 gnu.trove.list.array.TDoubleArrayList.clear(I)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(43842);
      tDoubleArrayList0.clear();
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals("{}", tDoubleArrayList0.toString());
      assertEquals(0, tDoubleArrayList0.size());
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.reset()V: root-Branch
   * 2 gnu.trove.list.array.TDoubleArrayList.wrap([DD)Lgnu/trove/list/array/TDoubleArrayList;: root-Branch
   * 3 gnu.trove.list.array.TDoubleArrayList$1.<init>([DDZ)V: root-Branch
   * 4 gnu.trove.list.array.TDoubleArrayList.<init>([DDZ)V: I7 Branch 2 IFNE L123 - true
   * 5 gnu.trove.list.array.TDoubleArrayList.<init>([DDZ)V: I18 Branch 3 IFNONNULL L126 - true
   */

  @Test
  public void test2()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0, Double.NEGATIVE_INFINITY);
      assertNotNull(tDoubleArrayList0);
      
      tDoubleArrayList0.reset();
      assertEquals(0, tDoubleArrayList0.size());
      assertEquals(0.0, tDoubleArrayList0.sum(), 0.01D);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.reverse()V: root-Branch
   * 2 gnu.trove.list.array.TDoubleArrayList.reverse(II)V: I4 Branch 51 IF_ICMPNE L626 - false
   */

  @Test
  public void test3()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(43, 43);
      tDoubleArrayList0.reverse();
      assertEquals(43.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals(0, tDoubleArrayList0.size());
      assertEquals(true, tDoubleArrayList0.isEmpty());
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.sort()V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(16, 0.0);
      tDoubleArrayList0.sort();
      assertEquals("{}", tDoubleArrayList0.toString());
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals(true, tDoubleArrayList0.isEmpty());
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.fill(D)V: root-Branch
   * 2 gnu.trove.list.array.TDoubleArrayList.<init>(Lgnu/trove/TDoubleCollection;)V: root-Branch
   * 3 gnu.trove.list.array.TDoubleArrayList.addAll(Lgnu/trove/TDoubleCollection;)Z: I13 Branch 31 IFEQ L495 - true
   */

  @Test
  public void test5()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((-2024), (-2024), (-2024));
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList((TDoubleCollection) tDoubleHashSet0);
      tDoubleArrayList0.fill(626.581001470122);
      assertEquals(0, tDoubleArrayList0.size());
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.size()I: root-Branch
   * 2 gnu.trove.list.array.TDoubleArrayList.max()D: I4 Branch 91 IFNE L928 - false
   */

  @Test
  public void test6()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(10, 10);
      // Undeclared exception!
      try {
        tDoubleArrayList0.max();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // cannot find maximum of an empty list
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.setQuick(ID)V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(0, 0);
      // Undeclared exception!
      try {
        tDoubleArrayList0.setQuick(1964, 982.6511366676401);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1964
         //
      }
  }

  //Test case number: 8
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.set(I[D)V: root-Branch
   * 2 gnu.trove.list.array.TDoubleArrayList.wrap([D)Lgnu/trove/list/array/TDoubleArrayList;: root-Branch
   * 3 gnu.trove.list.array.TDoubleArrayList.set(I[DII)V: I3 Branch 12 IFLT L326 - false
   * 4 gnu.trove.list.array.TDoubleArrayList.set(I[DII)V: I9 Branch 13 IF_ICMPLE L326 - true
   */

  @Test
  public void test8()  throws Throwable  {
      double[] doubleArray0 = new double[10];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0);
      assertNotNull(tDoubleArrayList0);
      
      tDoubleArrayList0.set(0, doubleArray0);
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.removeAt(I)D: root-Branch
   * 2 gnu.trove.list.array.TDoubleArrayList.get(I)D: I5 Branch 9 IF_ICMPLT L280 - false
   */

  @Test
  public void test9()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(401, 401);
      // Undeclared exception!
      try {
        tDoubleArrayList0.removeAt(401);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 401
         //
      }
  }

  //Test case number: 10
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.insert(I[D)V: root-Branch
   * 2 gnu.trove.list.array.TDoubleArrayList.insert(I[DII)V: I5 Branch 8 IF_ICMPNE L264 - true
   * 3 gnu.trove.list.array.TDoubleArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - false
   */

  @Test
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      tDoubleArrayList0.insert(0, doubleArray0);
      assertEquals(4, tDoubleArrayList0.size());
      assertEquals("{0.0, 0.0, 0.0, 0.0}", tDoubleArrayList0.toString());
  }

  //Test case number: 11
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.toArray()[D: root-Branch
   * 2 gnu.trove.list.array.TDoubleArrayList.toArray(II)[D: root-Branch
   * 3 gnu.trove.list.array.TDoubleArrayList.toArray([DII)[D: I3 Branch 60 IFNE L709 - false
   */

  @Test
  public void test11()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(401, 401);
      double[] doubleArray0 = tDoubleArrayList0.toArray();
      assertNotNull(doubleArray0);
      assertEquals(401.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals(true, tDoubleArrayList0.isEmpty());
      assertEquals(0, tDoubleArrayList0.size());
  }

  //Test case number: 12
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.swap(II)V: root-Branch
   * 2 gnu.trove.list.array.TDoubleArrayList.shuffle(Ljava/util/Random;)V: I9 Branch 54 IF_ICMPLE L640 - true
   * 3 gnu.trove.list.array.TDoubleArrayList.shuffle(Ljava/util/Random;)V: I9 Branch 54 IF_ICMPLE L640 - false
   */

  @Test
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[15];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0, 281.39220716682365);
      assertNotNull(tDoubleArrayList0);
      
      Random random0 = new Random(0L);
      tDoubleArrayList0.shuffle(random0);
      assertEquals(281.39220716682365, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}", tDoubleArrayList0.toString());
  }

  //Test case number: 13
  /*
   * 18 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.lastIndexOf(D)I: root-Branch
   * 2 gnu.trove.list.array.TDoubleArrayList$TDoubleArrayIterator.next()D: root-Branch
   * 3 gnu.trove.list.array.TDoubleArrayList.get(I)D: I5 Branch 9 IF_ICMPLT L280 - true
   * 4 gnu.trove.list.array.TDoubleArrayList.containsAll(Lgnu/trove/TDoubleCollection;)Z: I4 Branch 24 IF_ACMPNE L453 - false
   * 5 gnu.trove.list.array.TDoubleArrayList.containsAll(Lgnu/trove/TDoubleCollection;)Z: I18 Branch 25 IFEQ L457 - true
   * 6 gnu.trove.list.array.TDoubleArrayList.containsAll(Lgnu/trove/TDoubleCollection;)Z: I18 Branch 25 IFEQ L457 - false
   * 7 gnu.trove.list.array.TDoubleArrayList.containsAll(Lgnu/trove/TDoubleCollection;)Z: I29 Branch 26 IFNE L459 - true
   * 8 gnu.trove.list.array.TDoubleArrayList.lastIndexOf(ID)I: I7 Branch 84 IFLE L887 - false
   * 9 gnu.trove.list.array.TDoubleArrayList.lastIndexOf(ID)I: I16 Branch 85 IFNE L888 - false
   * 10 gnu.trove.list.array.TDoubleArrayList.contains(D)Z: I5 Branch 86 IFLT L898 - false
   * 11 gnu.trove.list.array.TDoubleArrayList$TDoubleArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 12 gnu.trove.list.array.TDoubleArrayList$TDoubleArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - false
   * 13 gnu.trove.list.array.TDoubleArrayList.add(D)Z: root-Branch
   * 14 gnu.trove.list.array.TDoubleArrayList.iterator()Lgnu/trove/iterator/TDoubleIterator;: root-Branch
   * 15 gnu.trove.list.array.TDoubleArrayList.addAll([D)Z: I18 Branch 33 IF_ICMPGE L508 - true
   * 16 gnu.trove.list.array.TDoubleArrayList.addAll([D)Z: I18 Branch 33 IF_ICMPGE L508 - false
   * 17 gnu.trove.list.array.TDoubleArrayList.addAll([D)Z: I28 Branch 34 IFEQ L509 - false
   * 18 gnu.trove.list.array.TDoubleArrayList$TDoubleArrayIterator.<init>(Lgnu/trove/list/array/TDoubleArrayList;I)V: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(0, 0);
      double[] doubleArray0 = new double[15];
      tDoubleArrayList0.addAll(doubleArray0);
      TDoubleArrayList tDoubleArrayList1 = new TDoubleArrayList(doubleArray0);
      boolean boolean0 = tDoubleArrayList1.containsAll((TDoubleCollection) tDoubleArrayList0);
      assertEquals(false, tDoubleArrayList0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.getNoEntryValue()D: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(401, 401);
      double double0 = tDoubleArrayList0.getNoEntryValue();
      assertEquals(401.0, double0, 0.01D);
      assertEquals(true, tDoubleArrayList0.isEmpty());
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.getQuick(I)D: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(43, 43);
      tDoubleArrayList0.getQuick(0);
      assertEquals(43.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals(0, tDoubleArrayList0.size());
      assertEquals("{}", tDoubleArrayList0.toString());
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.resetQuick()V: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[10];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0);
      assertNotNull(tDoubleArrayList0);
      
      tDoubleArrayList0.resetQuick();
      assertEquals(0, tDoubleArrayList0.size());
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList$1.ensureCapacity(I)V: I6 Branch 1 IF_ICMPLE L164 - true
   */

  @Test
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0, 1396.8841469414022);
      assertNotNull(tDoubleArrayList0);
      
      tDoubleArrayList0.ensureCapacity(1);
      assertEquals(1396.8841469414022, tDoubleArrayList0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList$1.ensureCapacity(I)V: I6 Branch 1 IF_ICMPLE L164 - false
   */

  @Test
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0, 1479.7403292574968);
      assertNotNull(tDoubleArrayList0);
      
      // Undeclared exception!
      try {
        tDoubleArrayList0.addAll(doubleArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Can not grow ArrayList wrapped external array
         //
      }
  }

  //Test case number: 19
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.isEmpty()Z: I4 Branch 5 IFNE L201 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.fill(IID)V: I5 Branch 76 IF_ICMPLE L816 - false
   */

  @Test
  public void test19()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(10, 10);
      tDoubleArrayList0.fill(1945, 1945, (-1.0));
      tDoubleArrayList0.isEmpty();
  }

  //Test case number: 20
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.isEmpty()Z: I4 Branch 5 IFNE L201 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.<init>()V: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      boolean boolean0 = tDoubleArrayList0.isEmpty();
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.trimToSize()V: I7 Branch 6 IF_ICMPLE L209 - true
   */

  @Test
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      tDoubleArrayList0.trimToSize();
      assertEquals(7, tDoubleArrayList0.size());
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}", tDoubleArrayList0.toString());
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.trimToSize()V: I7 Branch 6 IF_ICMPLE L209 - false
   */

  @Test
  public void test22()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(16, 0.0);
      tDoubleArrayList0.trimToSize();
      assertEquals(0, tDoubleArrayList0.size());
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.insert(ID)V: I5 Branch 7 IF_ICMPNE L243 - true
   */

  @Test
  public void test23()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      // Undeclared exception!
      try {
        tDoubleArrayList0.insert(11, (-1262.3055560407638));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.insert(ID)V: I5 Branch 7 IF_ICMPNE L243 - false
   */

  @Test
  public void test24()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(0, 6.0218687F);
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet0 = new TUnmodifiableDoubleSet((TDoubleSet) tDoubleHashSet0);
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList((TDoubleCollection) tUnmodifiableDoubleSet0);
      tDoubleArrayList0.insert(0, 18366926);
      assertEquals("{1.8366926E7}", tDoubleArrayList0.toString());
      assertEquals(1, tDoubleArrayList0.size());
  }

  //Test case number: 25
  /*
   * 11 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.insert(I[DII)V: I5 Branch 8 IF_ICMPNE L264 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.remove(D)Z: I8 Branch 14 IF_ICMPGE L383 - false
   * 3 gnu.trove.list.array.TDoubleArrayList.remove(D)Z: I17 Branch 15 IFNE L384 - false
   * 4 gnu.trove.list.array.TDoubleArrayList.remove(II)V: I3 Branch 16 IFNE L403 - true
   * 5 gnu.trove.list.array.TDoubleArrayList.remove(II)V: I8 Branch 17 IFLT L404 - false
   * 6 gnu.trove.list.array.TDoubleArrayList.remove(II)V: I12 Branch 18 IF_ICMPLT L404 - true
   * 7 gnu.trove.list.array.TDoubleArrayList.remove(II)V: I23 Branch 19 IFNE L408 - false
   * 8 gnu.trove.list.array.TDoubleArrayList.removeAll([D)Z: I12 Branch 48 IFLE L601 - true
   * 9 gnu.trove.list.array.TDoubleArrayList.removeAll([D)Z: I12 Branch 48 IFLE L601 - false
   * 10 gnu.trove.list.array.TDoubleArrayList.removeAll([D)Z: I20 Branch 49 IFEQ L602 - false
   * 11 gnu.trove.list.array.TDoubleArrayList.insert(I[D)V: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      boolean boolean0 = tDoubleArrayList0.removeAll(doubleArray0);
      assertEquals(true, boolean0);
      assertEquals(0, tDoubleArrayList0.size());
      
      tDoubleArrayList0.insert(0, doubleArray0);
      assertEquals(2, tDoubleArrayList0.size());
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.set(ID)D: I5 Branch 10 IF_ICMPLT L297 - true
   */

  @Test
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      double double0 = tDoubleArrayList0.set(0, 2.9438954742842416);
      assertEquals(3, tDoubleArrayList0.size());
      assertEquals(2.9438954742842416, tDoubleArrayList0.sum(), 0.01D);
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.set(ID)D: I5 Branch 10 IF_ICMPLT L297 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(16, 0.0);
      // Undeclared exception!
      try {
        tDoubleArrayList0.set(16, 0.0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 16
         //
      }
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.replace(ID)D: I5 Branch 11 IF_ICMPLT L309 - true
   */

  @Test
  public void test28()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(10, 10);
      tDoubleArrayList0.fill(1945, 1945, (-1.0));
      tDoubleArrayList0.replace(10, 1945);
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.replace(ID)D: I5 Branch 11 IF_ICMPLT L309 - false
   */

  @Test
  public void test29()  throws Throwable  {
      double[] doubleArray0 = new double[15];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0, 281.39220716682365);
      assertNotNull(tDoubleArrayList0);
      
      // Undeclared exception!
      try {
        tDoubleArrayList0.replace(1224, (-1438.7779069712756));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1224
         //
      }
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.set(I[DII)V: I3 Branch 12 IFLT L326 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.set(I[D)V: root-Branch
   */

  @Test
  public void test30()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      double[] doubleArray0 = new double[8];
      // Undeclared exception!
      try {
        tDoubleArrayList0.set((-672), doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -672
         //
      }
  }

  //Test case number: 31
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.set(I[DII)V: I9 Branch 13 IF_ICMPLE L326 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.set(I[DII)V: I3 Branch 12 IFLT L326 - false
   */

  @Test
  public void test31()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0, 0.0);
      assertNotNull(tDoubleArrayList0);
      
      // Undeclared exception!
      try {
        tDoubleArrayList0.set(47447201, doubleArray0, 1965, 47447201);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 47447201
         //
      }
  }

  //Test case number: 32
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.remove(D)Z: I8 Branch 14 IF_ICMPGE L383 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.removeAll(Ljava/util/Collection;)Z: I12 Branch 42 IFEQ L568 - true
   * 3 gnu.trove.list.array.TDoubleArrayList.removeAll(Ljava/util/Collection;)Z: I12 Branch 42 IFEQ L568 - false
   * 4 gnu.trove.list.array.TDoubleArrayList.removeAll(Ljava/util/Collection;)Z: I20 Branch 43 IFEQ L569 - false
   * 5 gnu.trove.list.array.TDoubleArrayList.removeAll(Ljava/util/Collection;)Z: I32 Branch 44 IFEQ L571 - true
   */

  @Test
  public void test32()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(62);
      TSynchronizedRandomAccessDoubleList tSynchronizedRandomAccessDoubleList0 = new TSynchronizedRandomAccessDoubleList((TDoubleList) tDoubleArrayList0);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double((double) 62);
      linkedList0.add(double0);
      boolean boolean0 = tSynchronizedRandomAccessDoubleList0.removeAll((Collection<?>) linkedList0);
      assertEquals(0.0, tSynchronizedRandomAccessDoubleList0.getNoEntryValue(), 0.01D);
      assertEquals(0, tSynchronizedRandomAccessDoubleList0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 33
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.remove(II)V: I3 Branch 16 IFNE L403 - false
   */

  @Test
  public void test33()  throws Throwable  {
      double[] doubleArray0 = new double[10];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0);
      assertNotNull(tDoubleArrayList0);
      
      tDoubleArrayList0.remove((-857), 0);
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 34
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.remove(II)V: I8 Branch 17 IFLT L404 - true
   */

  @Test
  public void test34()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      // Undeclared exception!
      try {
        tDoubleArrayList0.remove((-1001), (-1001));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -1001
         //
      }
  }

  //Test case number: 35
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.remove(II)V: I12 Branch 18 IF_ICMPLT L404 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.retainAll([D)Z: I21 Branch 40 IFLE L555 - false
   * 3 gnu.trove.list.array.TDoubleArrayList.retainAll([D)Z: I29 Branch 41 IFGE L556 - false
   */

  @Test
  public void test35()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 1584;
      doubleArray0[1] = (double) 1956;
      // Undeclared exception!
      try {
        tDoubleArrayList0.retainAll(doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 9
         //
      }
  }

  //Test case number: 36
  /*
   * 9 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.remove(II)V: I23 Branch 19 IFNE L408 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.remove(II)V: I45 Branch 20 IF_ICMPNE L412 - true
   * 3 gnu.trove.list.array.TDoubleArrayList.remove(II)V: I45 Branch 20 IF_ICMPNE L412 - false
   * 4 gnu.trove.list.array.TDoubleArrayList.removeAll(Lgnu/trove/TDoubleCollection;)Z: I4 Branch 45 IF_ACMPNE L582 - true
   * 5 gnu.trove.list.array.TDoubleArrayList.removeAll(Lgnu/trove/TDoubleCollection;)Z: I26 Branch 46 IFEQ L588 - true
   * 6 gnu.trove.list.array.TDoubleArrayList.removeAll(Lgnu/trove/TDoubleCollection;)Z: I26 Branch 46 IFEQ L588 - false
   * 7 gnu.trove.list.array.TDoubleArrayList.removeAll(Lgnu/trove/TDoubleCollection;)Z: I37 Branch 47 IFEQ L590 - true
   * 8 gnu.trove.list.array.TDoubleArrayList.removeAll(Lgnu/trove/TDoubleCollection;)Z: I37 Branch 47 IFEQ L590 - false
   * 9 gnu.trove.list.array.TDoubleArrayList.remove(D)Z: I17 Branch 15 IFNE L384 - true
   */

  @Test
  public void test36()  throws Throwable  {
      double[] doubleArray0 = new double[15];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0, 281.39220716682365);
      assertNotNull(tDoubleArrayList0);
      
      TDoubleArrayList tDoubleArrayList1 = new TDoubleArrayList(doubleArray0);
      doubleArray0[2] = (-1156.2036742199352);
      boolean boolean0 = tDoubleArrayList0.removeAll((TDoubleCollection) tDoubleArrayList1);
      assertEquals((-1156.2036742199352), tDoubleArrayList0.sum(), 0.01D);
      assertEquals(true, boolean0);
  }

  //Test case number: 37
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.containsAll(Ljava/util/Collection;)Z: I8 Branch 21 IFEQ L436 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.containsAll(Ljava/util/Collection;)Z: I16 Branch 22 IFEQ L437 - false
   * 3 gnu.trove.list.array.TDoubleArrayList.containsAll(Ljava/util/Collection;)Z: I28 Branch 23 IFNE L439 - false
   * 4 gnu.trove.list.array.TDoubleArrayList.lastIndexOf(ID)I: I7 Branch 84 IFLE L887 - true
   * 5 gnu.trove.list.array.TDoubleArrayList.contains(D)Z: I5 Branch 86 IFLT L898 - true
   */

  @Test
  public void test37()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(62);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double((double) 62);
      linkedList0.add(double0);
      boolean boolean0 = tDoubleArrayList0.containsAll((Collection<?>) linkedList0);
      assertEquals(false, boolean0);
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals(0, tDoubleArrayList0.size());
  }

  //Test case number: 38
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.containsAll(Ljava/util/Collection;)Z: I28 Branch 23 IFNE L439 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.containsAll(Ljava/util/Collection;)Z: I8 Branch 21 IFEQ L436 - true
   * 3 gnu.trove.list.array.TDoubleArrayList.containsAll(Ljava/util/Collection;)Z: I8 Branch 21 IFEQ L436 - false
   * 4 gnu.trove.list.array.TDoubleArrayList.containsAll(Ljava/util/Collection;)Z: I16 Branch 22 IFEQ L437 - false
   */

  @Test
  public void test38()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(62);
      TSynchronizedRandomAccessDoubleList tSynchronizedRandomAccessDoubleList0 = new TSynchronizedRandomAccessDoubleList((TDoubleList) tDoubleArrayList0);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double(1.0);
      tSynchronizedRandomAccessDoubleList0.add(1.0);
      linkedList0.add(double0);
      boolean boolean0 = tDoubleArrayList0.containsAll((Collection<?>) linkedList0);
      assertEquals(1, tDoubleArrayList0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 39
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.containsAll(Lgnu/trove/TDoubleCollection;)Z: I4 Branch 24 IF_ACMPNE L453 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.containsAll(Lgnu/trove/TDoubleCollection;)Z: I18 Branch 25 IFEQ L457 - true
   */

  @Test
  public void test39()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(0, 0);
      double[] doubleArray0 = new double[15];
      TDoubleArrayList tDoubleArrayList1 = new TDoubleArrayList(doubleArray0);
      boolean boolean0 = tDoubleArrayList1.containsAll((TDoubleCollection) tDoubleArrayList0);
      assertEquals(0.0, tDoubleArrayList1.getNoEntryValue(), 0.01D);
      assertEquals(true, boolean0);
      assertEquals(15, tDoubleArrayList1.size());
  }

  //Test case number: 40
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.containsAll(Lgnu/trove/TDoubleCollection;)Z: I29 Branch 26 IFNE L459 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.containsAll(Lgnu/trove/TDoubleCollection;)Z: I4 Branch 24 IF_ACMPNE L453 - true
   * 3 gnu.trove.list.array.TDoubleArrayList.containsAll(Lgnu/trove/TDoubleCollection;)Z: I18 Branch 25 IFEQ L457 - false
   */

  @Test
  public void test40()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      tDoubleArrayList0.removeAll(doubleArray0);
      TDoubleArrayList tDoubleArrayList1 = new TDoubleArrayList(doubleArray0);
      boolean boolean0 = tDoubleArrayList0.containsAll((TDoubleCollection) tDoubleArrayList1);
      assertEquals(false, boolean0);
      assertEquals(0, tDoubleArrayList0.size());
  }

  //Test case number: 41
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.containsAll([D)Z: I8 Branch 27 IFLE L469 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.containsAll([D)Z: I8 Branch 27 IFLE L469 - false
   * 3 gnu.trove.list.array.TDoubleArrayList.containsAll([D)Z: I16 Branch 28 IFNE L470 - true
   */

  @Test
  public void test41()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      boolean boolean0 = tDoubleArrayList0.containsAll(doubleArray0);
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals(true, boolean0);
      assertEquals(7, tDoubleArrayList0.size());
  }

  //Test case number: 42
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.containsAll([D)Z: I16 Branch 28 IFNE L470 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.containsAll([D)Z: I8 Branch 27 IFLE L469 - false
   */

  @Test
  public void test42()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(807, 0.0);
      boolean boolean0 = tDoubleArrayList0.containsAll(doubleArray0);
      assertEquals(false, boolean0);
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 43
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.addAll(Ljava/util/Collection;)Z: I12 Branch 29 IFEQ L481 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.addAll(Ljava/util/Collection;)Z: I27 Branch 30 IFEQ L483 - false
   * 3 gnu.trove.list.array.TDoubleArrayList.addAll(Ljava/util/Collection;)Z: I12 Branch 29 IFEQ L481 - true
   */

  @Test
  public void test43()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      linkedList0.add((Double) (-34.87975839284308));
      boolean boolean0 = tDoubleArrayList0.addAll((Collection<? extends Double>) linkedList0);
      assertEquals("{0.0, 0.0, 0.0, -34.87975839284308}", tDoubleArrayList0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 44
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.addAll(Lgnu/trove/TDoubleCollection;)Z: I13 Branch 31 IFEQ L495 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.addAll(Lgnu/trove/TDoubleCollection;)Z: I24 Branch 32 IFEQ L497 - false
   */

  @Test
  public void test44()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(0, 0);
      double[] doubleArray0 = new double[15];
      tDoubleArrayList0.addAll(doubleArray0);
      TDoubleArrayList tDoubleArrayList1 = new TDoubleArrayList((TDoubleCollection) tDoubleArrayList0);
      assertEquals(15, tDoubleArrayList0.size());
      assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}", tDoubleArrayList1.toString());
  }

  //Test case number: 45
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.retainAll(Ljava/util/Collection;)Z: I13 Branch 35 IFEQ L522 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.retainAll(Ljava/util/Collection;)Z: I21 Branch 36 IFGT L523 - false
   * 3 gnu.trove.list.array.TDoubleArrayList$TDoubleArrayIterator.remove()V: I5 Branch 103 IF_ICMPNE L1023 - true
   * 4 gnu.trove.list.array.TDoubleArrayList$TDoubleArrayIterator.remove()V: I26 Branch 104 IF_ICMPGE L1028 - false
   * 5 gnu.trove.list.array.TDoubleArrayList.retainAll(Ljava/util/Collection;)Z: I13 Branch 35 IFEQ L522 - true
   */

  @Test
  public void test45()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      boolean boolean0 = tDoubleArrayList0.retainAll((Collection<?>) linkedList0);
      assertEquals(true, boolean0);
      assertEquals(true, tDoubleArrayList0.isEmpty());
  }

  //Test case number: 46
  /*
   * 8 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.retainAll(Lgnu/trove/TDoubleCollection;)Z: I4 Branch 37 IF_ACMPNE L534 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.retainAll(Lgnu/trove/TDoubleCollection;)Z: I22 Branch 38 IFEQ L539 - true
   * 3 gnu.trove.list.array.TDoubleArrayList.retainAll(Lgnu/trove/TDoubleCollection;)Z: I22 Branch 38 IFEQ L539 - false
   * 4 gnu.trove.list.array.TDoubleArrayList.retainAll(Lgnu/trove/TDoubleCollection;)Z: I29 Branch 39 IFNE L540 - false
   * 5 gnu.trove.list.array.TDoubleArrayList.contains(D)Z: I5 Branch 86 IFLT L898 - true
   * 6 gnu.trove.list.array.TDoubleArrayList.lastIndexOf(ID)I: I7 Branch 84 IFLE L887 - true
   * 7 gnu.trove.list.array.TDoubleArrayList$TDoubleArrayIterator.remove()V: I5 Branch 103 IF_ICMPNE L1023 - true
   * 8 gnu.trove.list.array.TDoubleArrayList$TDoubleArrayIterator.remove()V: I26 Branch 104 IF_ICMPGE L1028 - false
   */

  @Test
  public void test46()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      tDoubleArrayList0.removeAll(doubleArray0);
      TDoubleArrayList tDoubleArrayList1 = new TDoubleArrayList(doubleArray0);
      boolean boolean0 = tDoubleArrayList1.retainAll((TDoubleCollection) tDoubleArrayList0);
      assertEquals(true, boolean0);
      assertEquals(true, tDoubleArrayList0.isEmpty());
  }

  //Test case number: 47
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.retainAll(Lgnu/trove/TDoubleCollection;)Z: I29 Branch 39 IFNE L540 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.contains(D)Z: I5 Branch 86 IFLT L898 - false
   * 3 gnu.trove.list.array.TDoubleArrayList.retainAll(Lgnu/trove/TDoubleCollection;)Z: I4 Branch 37 IF_ACMPNE L534 - false
   * 4 gnu.trove.list.array.TDoubleArrayList.retainAll(Lgnu/trove/TDoubleCollection;)Z: I22 Branch 38 IFEQ L539 - true
   * 5 gnu.trove.list.array.TDoubleArrayList.retainAll(Lgnu/trove/TDoubleCollection;)Z: I22 Branch 38 IFEQ L539 - false
   */

  @Test
  public void test47()  throws Throwable  {
      double[] doubleArray0 = new double[15];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0, 281.39220716682365);
      assertNotNull(tDoubleArrayList0);
      
      TDoubleArrayList tDoubleArrayList1 = new TDoubleArrayList(doubleArray0);
      boolean boolean0 = tDoubleArrayList0.retainAll((TDoubleCollection) tDoubleArrayList1);
      assertEquals(false, boolean0);
      assertEquals(15, tDoubleArrayList0.size());
      assertEquals(281.39220716682365, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals(0.0, tDoubleArrayList1.getNoEntryValue(), 0.01D);
      assertTrue(tDoubleArrayList1.equals(tDoubleArrayList0));
  }

  //Test case number: 48
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.retainAll([D)Z: I21 Branch 40 IFLE L555 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.retainAll([D)Z: I29 Branch 41 IFGE L556 - true
   * 3 gnu.trove.list.array.TDoubleArrayList.retainAll([D)Z: I21 Branch 40 IFLE L555 - false
   */

  @Test
  public void test48()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      boolean boolean0 = tDoubleArrayList0.retainAll(doubleArray0);
      assertEquals(false, boolean0);
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals(0, tDoubleArrayList0.size());
  }

  //Test case number: 49
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.removeAll(Ljava/util/Collection;)Z: I20 Branch 43 IFEQ L569 - true
   */

  @Test
  public void test49()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0, (double) (-584));
      assertNotNull(tDoubleArrayList0);
      
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      linkedList0.add((Integer) (-584));
      boolean boolean0 = tDoubleArrayList0.removeAll((Collection<?>) linkedList0);
      assertEquals((-584.0), tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals(false, boolean0);
  }

  //Test case number: 50
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.removeAll(Ljava/util/Collection;)Z: I32 Branch 44 IFEQ L571 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.removeAll(Ljava/util/Collection;)Z: I12 Branch 42 IFEQ L568 - true
   * 3 gnu.trove.list.array.TDoubleArrayList.removeAll(Ljava/util/Collection;)Z: I12 Branch 42 IFEQ L568 - false
   * 4 gnu.trove.list.array.TDoubleArrayList.removeAll(Ljava/util/Collection;)Z: I20 Branch 43 IFEQ L569 - false
   */

  @Test
  public void test50()  throws Throwable  {
      double[] doubleArray0 = new double[18];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      linkedList0.add((Double) 0.0);
      boolean boolean0 = tDoubleArrayList0.removeAll((Collection<?>) linkedList0);
      assertEquals(17, tDoubleArrayList0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 51
  /*
   * 10 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.removeAll(Lgnu/trove/TDoubleCollection;)Z: I4 Branch 45 IF_ACMPNE L582 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.iterator()Lgnu/trove/iterator/TDoubleIterator;: root-Branch
   * 3 gnu.trove.list.array.TDoubleArrayList.removeAll(Lgnu/trove/TDoubleCollection;)Z: I26 Branch 46 IFEQ L588 - true
   * 4 gnu.trove.list.array.TDoubleArrayList.removeAll(Lgnu/trove/TDoubleCollection;)Z: I26 Branch 46 IFEQ L588 - false
   * 5 gnu.trove.list.array.TDoubleArrayList.removeAll(Lgnu/trove/TDoubleCollection;)Z: I37 Branch 47 IFEQ L590 - false
   * 6 gnu.trove.list.array.TDoubleArrayList.get(I)D: I5 Branch 9 IF_ICMPLT L280 - true
   * 7 gnu.trove.list.array.TDoubleArrayList$TDoubleArrayIterator.next()D: root-Branch
   * 8 gnu.trove.list.array.TDoubleArrayList$TDoubleArrayIterator.<init>(Lgnu/trove/list/array/TDoubleArrayList;I)V: root-Branch
   * 9 gnu.trove.list.array.TDoubleArrayList$TDoubleArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 10 gnu.trove.list.array.TDoubleArrayList$TDoubleArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - false
   */

  @Test
  public void test51()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0, Double.NEGATIVE_INFINITY);
      assertNotNull(tDoubleArrayList0);
      
      TSynchronizedRandomAccessDoubleList tSynchronizedRandomAccessDoubleList0 = new TSynchronizedRandomAccessDoubleList((TDoubleList) tDoubleArrayList0);
      boolean boolean0 = tDoubleArrayList0.removeAll((TDoubleCollection) tSynchronizedRandomAccessDoubleList0);
      assertEquals(2, tDoubleArrayList0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 52
  /*
   * 11 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.removeAll([D)Z: I20 Branch 49 IFEQ L602 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.removeAll([D)Z: I12 Branch 48 IFLE L601 - true
   * 3 gnu.trove.list.array.TDoubleArrayList.removeAll([D)Z: I12 Branch 48 IFLE L601 - false
   * 4 gnu.trove.list.array.TDoubleArrayList.removeAll([D)Z: I20 Branch 49 IFEQ L602 - false
   * 5 gnu.trove.list.array.TDoubleArrayList.remove(D)Z: I8 Branch 14 IF_ICMPGE L383 - true
   * 6 gnu.trove.list.array.TDoubleArrayList.remove(D)Z: I8 Branch 14 IF_ICMPGE L383 - false
   * 7 gnu.trove.list.array.TDoubleArrayList.remove(D)Z: I17 Branch 15 IFNE L384 - false
   * 8 gnu.trove.list.array.TDoubleArrayList.remove(II)V: I3 Branch 16 IFNE L403 - true
   * 9 gnu.trove.list.array.TDoubleArrayList.remove(II)V: I8 Branch 17 IFLT L404 - false
   * 10 gnu.trove.list.array.TDoubleArrayList.remove(II)V: I12 Branch 18 IF_ICMPLT L404 - true
   * 11 gnu.trove.list.array.TDoubleArrayList.remove(II)V: I23 Branch 19 IFNE L408 - false
   */

  @Test
  public void test52()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      double[] doubleArray1 = new double[5];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray1);
      boolean boolean0 = tDoubleArrayList0.removeAll(doubleArray0);
      assertEquals(true, boolean0);
      assertEquals(0, tDoubleArrayList0.size());
  }

  //Test case number: 53
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.transformValues(Lgnu/trove/function/TDoubleFunction;)V: I8 Branch 50 IFLE L612 - true
   */

  @Test
  public void test53()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(43, 43);
      tDoubleArrayList0.transformValues((TDoubleFunction) null);
      assertEquals(43.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals(true, tDoubleArrayList0.isEmpty());
  }

  //Test case number: 54
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.transformValues(Lgnu/trove/function/TDoubleFunction;)V: I8 Branch 50 IFLE L612 - false
   */

  @Test
  public void test54()  throws Throwable  {
      double[] doubleArray0 = new double[10];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0);
      assertNotNull(tDoubleArrayList0);
      
      // Undeclared exception!
      try {
        tDoubleArrayList0.transformValues((TDoubleFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 55
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.reverse(II)V: I4 Branch 51 IF_ICMPNE L626 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.reverse(II)V: I12 Branch 52 IF_ICMPLE L629 - false
   */

  @Test
  public void test55()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(0, 1126.1707475796675);
      // Undeclared exception!
      try {
        tDoubleArrayList0.reverse(10, 6);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // from cannot be greater than to
         //
      }
  }

  //Test case number: 56
  /*
   * 6 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.reverse(II)V: I12 Branch 52 IF_ICMPLE L629 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.reverse(II)V: I32 Branch 53 IF_ICMPGE L632 - true
   * 3 gnu.trove.list.array.TDoubleArrayList.reverse(II)V: I32 Branch 53 IF_ICMPGE L632 - false
   * 4 gnu.trove.list.array.TDoubleArrayList.reverse()V: root-Branch
   * 5 gnu.trove.list.array.TDoubleArrayList.swap(II)V: root-Branch
   * 6 gnu.trove.list.array.TDoubleArrayList.reverse(II)V: I4 Branch 51 IF_ICMPNE L626 - true
   */

  @Test
  public void test56()  throws Throwable  {
      double[] doubleArray0 = new double[18];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      tDoubleArrayList0.reverse();
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}", tDoubleArrayList0.toString());
  }

  //Test case number: 57
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.subList(II)Lgnu/trove/list/TDoubleList;: I4 Branch 55 IF_ICMPGE L663 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.subList(II)Lgnu/trove/list/TDoubleList;: I26 Branch 56 IFGE L667 - true
   * 3 gnu.trove.list.array.TDoubleArrayList.subList(II)Lgnu/trove/list/TDoubleList;: I40 Branch 57 IF_ICMPLE L670 - true
   * 4 gnu.trove.list.array.TDoubleArrayList.subList(II)Lgnu/trove/list/TDoubleList;: I73 Branch 58 IF_ICMPGE L674 - true
   * 5 gnu.trove.list.array.TDoubleArrayList.subList(II)Lgnu/trove/list/TDoubleList;: I73 Branch 58 IF_ICMPGE L674 - false
   */

  @Test
  public void test57()  throws Throwable  {
      double[] doubleArray0 = new double[10];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0);
      assertNotNull(tDoubleArrayList0);
      
      TDoubleArrayList tDoubleArrayList1 = (TDoubleArrayList)tDoubleArrayList0.subList(0, 1);
      assertEquals("{0.0}", tDoubleArrayList1.toString());
      assertNotNull(tDoubleArrayList1);
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals(0.0, tDoubleArrayList1.getNoEntryValue(), 0.01D);
  }

  //Test case number: 58
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.subList(II)Lgnu/trove/list/TDoubleList;: I4 Branch 55 IF_ICMPGE L663 - false
   */

  @Test
  public void test58()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      // Undeclared exception!
      try {
        tDoubleArrayList0.subList(58, (-1043));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // end index -1043 greater than begin index 58
         //
      }
  }

  //Test case number: 59
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.subList(II)Lgnu/trove/list/TDoubleList;: I26 Branch 56 IFGE L667 - false
   */

  @Test
  public void test59()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(620171, 0.0);
      // Undeclared exception!
      try {
        tDoubleArrayList0.subList((-20), (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  //Test case number: 60
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.subList(II)Lgnu/trove/list/TDoubleList;: I40 Branch 57 IF_ICMPLE L670 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.subList(II)Lgnu/trove/list/TDoubleList;: I4 Branch 55 IF_ICMPGE L663 - true
   * 3 gnu.trove.list.array.TDoubleArrayList.subList(II)Lgnu/trove/list/TDoubleList;: I26 Branch 56 IFGE L667 - true
   */

  @Test
  public void test60()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      // Undeclared exception!
      try {
        tDoubleArrayList0.subList(193, 193);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index < 3
         //
      }
  }

  //Test case number: 61
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.toArray([D)[D: I11 Branch 59 IF_ICMPLE L698 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.toArray([DII)[D: I3 Branch 60 IFNE L709 - true
   * 3 gnu.trove.list.array.TDoubleArrayList.toArray([DII)[D: I11 Branch 61 IFLT L712 - false
   * 4 gnu.trove.list.array.TDoubleArrayList.toArray([DII)[D: I15 Branch 62 IF_ICMPLT L712 - true
   */

  @Test
  public void test61()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      double[] doubleArray0 = new double[16];
      tDoubleArrayList0.add(doubleArray0);
      tDoubleArrayList0.toArray(doubleArray0);
      assertEquals(false, tDoubleArrayList0.isEmpty());
      assertEquals(16, tDoubleArrayList0.size());
  }

  //Test case number: 62
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.toArray([D)[D: I11 Branch 59 IF_ICMPLE L698 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.toArray([DII)[D: I3 Branch 60 IFNE L709 - false
   */

  @Test
  public void test62()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      double[] doubleArray0 = new double[8];
      double[] doubleArray1 = tDoubleArrayList0.toArray(doubleArray0);
      assertNotNull(doubleArray1);
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals("{}", tDoubleArrayList0.toString());
  }

  //Test case number: 63
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.toArray([DII)[D: I11 Branch 61 IFLT L712 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.toArray(II)[D: root-Branch
   */

  @Test
  public void test63()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(807, 0.0);
      // Undeclared exception!
      try {
        tDoubleArrayList0.toArray((-18), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -18
         //
      }
  }

  //Test case number: 64
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.toArray([DII)[D: I15 Branch 62 IF_ICMPLT L712 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.toArray([DII)[D: I3 Branch 60 IFNE L709 - true
   * 3 gnu.trove.list.array.TDoubleArrayList.toArray([DII)[D: I11 Branch 61 IFLT L712 - false
   */

  @Test
  public void test64()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(43842);
      double[] doubleArray0 = new double[9];
      // Undeclared exception!
      try {
        tDoubleArrayList0.toArray(doubleArray0, 43842, (-106));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 43842
         //
      }
  }

  //Test case number: 65
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.toArray([DIII)[D: I3 Branch 63 IFNE L722 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.toArray([DIII)[D: I11 Branch 64 IFLT L725 - false
   * 3 gnu.trove.list.array.TDoubleArrayList.toArray([DIII)[D: I15 Branch 65 IF_ICMPLT L725 - true
   */

  @Test
  public void test65()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      // Undeclared exception!
      try {
        tDoubleArrayList0.toArray(doubleArray0, 0, 210, 210);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 66
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.toArray([DIII)[D: I3 Branch 63 IFNE L722 - false
   */

  @Test
  public void test66()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(0, 289.0869711259185);
      double[] doubleArray0 = new double[7];
      double[] doubleArray1 = tDoubleArrayList0.toArray(doubleArray0, 0, 0, 0);
      assertNotNull(doubleArray1);
      assertEquals(289.0869711259185, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals(true, tDoubleArrayList0.isEmpty());
  }

  //Test case number: 67
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.toArray([DIII)[D: I11 Branch 64 IFLT L725 - true
   */

  @Test
  public void test67()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0);
      assertNotNull(tDoubleArrayList0);
      
      // Undeclared exception!
      try {
        tDoubleArrayList0.toArray(doubleArray0, (-1796), (-1796), (-1796));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -1796
         //
      }
  }

  //Test case number: 68
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.toArray([DIII)[D: I15 Branch 65 IF_ICMPLT L725 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.toArray([DIII)[D: I3 Branch 63 IFNE L722 - true
   * 3 gnu.trove.list.array.TDoubleArrayList.toArray([DIII)[D: I11 Branch 64 IFLT L725 - false
   */

  @Test
  public void test68()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      double[] doubleArray0 = new double[8];
      // Undeclared exception!
      try {
        tDoubleArrayList0.toArray(doubleArray0, 17, 17, (-1504));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 17
         //
      }
  }

  //Test case number: 69
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.equals(Ljava/lang/Object;)Z: I4 Branch 66 IF_ACMPNE L738 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.equals(Ljava/lang/Object;)Z: I13 Branch 67 IFEQ L741 - true
   */

  @Test
  public void test69()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      boolean boolean0 = tDoubleArrayList0.equals((Object) null);
      assertEquals(false, boolean0);
      assertEquals(3, tDoubleArrayList0.size());
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 70
  /*
   * 6 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.equals(Ljava/lang/Object;)Z: I13 Branch 67 IFEQ L741 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.equals(Ljava/lang/Object;)Z: I25 Branch 68 IF_ICMPEQ L743 - true
   * 3 gnu.trove.list.array.TDoubleArrayList.equals(Ljava/lang/Object;)Z: I36 Branch 69 IFLE L745 - true
   * 4 gnu.trove.list.array.TDoubleArrayList.equals(Ljava/lang/Object;)Z: I36 Branch 69 IFLE L745 - false
   * 5 gnu.trove.list.array.TDoubleArrayList.equals(Ljava/lang/Object;)Z: I48 Branch 70 IFEQ L746 - true
   * 6 gnu.trove.list.array.TDoubleArrayList.equals(Ljava/lang/Object;)Z: I4 Branch 66 IF_ACMPNE L738 - false
   */

  @Test
  public void test70()  throws Throwable  {
      double[] doubleArray0 = new double[15];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0, 281.39220716682365);
      assertNotNull(tDoubleArrayList0);
      
      TDoubleArrayList tDoubleArrayList1 = new TDoubleArrayList(doubleArray0);
      boolean boolean0 = tDoubleArrayList1.equals((Object) tDoubleArrayList0);
      assertEquals(281.39220716682365, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals(0.0, tDoubleArrayList1.getNoEntryValue(), 0.01D);
      assertEquals(true, boolean0);
      assertEquals(15, tDoubleArrayList0.size());
  }

  //Test case number: 71
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.equals(Ljava/lang/Object;)Z: I25 Branch 68 IF_ICMPEQ L743 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.equals(Ljava/lang/Object;)Z: I4 Branch 66 IF_ACMPNE L738 - true
   * 3 gnu.trove.list.array.TDoubleArrayList.equals(Ljava/lang/Object;)Z: I13 Branch 67 IFEQ L741 - false
   */

  @Test
  public void test71()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(620171, 0.0);
      TDoubleArrayList tDoubleArrayList1 = new TDoubleArrayList(doubleArray0);
      boolean boolean0 = tDoubleArrayList0.equals((Object) tDoubleArrayList1);
      assertEquals(false, boolean0);
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals(6, tDoubleArrayList1.size());
      assertFalse(tDoubleArrayList1.equals(tDoubleArrayList0));
  }

  //Test case number: 72
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.hashCode()I: I12 Branch 71 IFLE L761 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.hashCode()I: I12 Branch 71 IFLE L761 - false
   */

  @Test
  public void test72()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      int int0 = tDoubleArrayList0.hashCode();
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals(0, int0);
      assertEquals(7, tDoubleArrayList0.size());
  }

  //Test case number: 73
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.forEach(Lgnu/trove/procedure/TDoubleProcedure;)Z: I8 Branch 72 IF_ICMPGE L772 - true
   */

  @Test
  public void test73()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(43, 43);
      boolean boolean0 = tDoubleArrayList0.forEach((TDoubleProcedure) null);
      assertEquals("{}", tDoubleArrayList0.toString());
      assertEquals(43.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals(true, boolean0);
  }

  //Test case number: 74
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.forEach(Lgnu/trove/procedure/TDoubleProcedure;)Z: I8 Branch 72 IF_ICMPGE L772 - false
   */

  @Test
  public void test74()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0);
      assertNotNull(tDoubleArrayList0);
      
      // Undeclared exception!
      try {
        tDoubleArrayList0.forEach((TDoubleProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 75
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.forEachDescending(Lgnu/trove/procedure/TDoubleProcedure;)Z: I8 Branch 74 IFLE L783 - true
   */

  @Test
  public void test75()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      boolean boolean0 = tDoubleArrayList0.forEachDescending((TDoubleProcedure) null);
      assertEquals(true, boolean0);
      assertEquals(0, tDoubleArrayList0.size());
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 76
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.forEachDescending(Lgnu/trove/procedure/TDoubleProcedure;)Z: I8 Branch 74 IFLE L783 - false
   */

  @Test
  public void test76()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      double[] doubleArray0 = new double[16];
      tDoubleArrayList0.add(doubleArray0);
      // Undeclared exception!
      try {
        tDoubleArrayList0.forEachDescending((TDoubleProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 77
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.fill(IID)V: I5 Branch 76 IF_ICMPLE L816 - true
   */

  @Test
  public void test77()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0, (double) (-584));
      assertNotNull(tDoubleArrayList0);
      
      // Undeclared exception!
      try {
        tDoubleArrayList0.fill((-584), (-959), (-584.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(-584) > toIndex(-959)
         //
      }
  }

  //Test case number: 78
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.binarySearch(DII)I: I3 Branch 77 IFGE L834 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.<init>(Lgnu/trove/TDoubleCollection;)V: root-Branch
   * 3 gnu.trove.list.array.TDoubleArrayList.addAll(Lgnu/trove/TDoubleCollection;)Z: I13 Branch 31 IFEQ L495 - true
   */

  @Test
  public void test78()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((-2024), (-2024), (-2024));
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList((TDoubleCollection) tDoubleHashSet0);
      // Undeclared exception!
      try {
        tDoubleArrayList0.binarySearch(0.0, (-2024), (-1323));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -2024
         //
      }
  }

  //Test case number: 79
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.binarySearch(DII)I: I16 Branch 78 IF_ICMPLE L837 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.binarySearch(DII)I: I3 Branch 77 IFGE L834 - true
   */

  @Test
  public void test79()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(401, 401);
      // Undeclared exception!
      try {
        tDoubleArrayList0.binarySearch((double) 401, 401, 484);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 484
         //
      }
  }

  //Test case number: 80
  /*
   * 9 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.binarySearch(DII)I: I38 Branch 79 IF_ICMPGT L844 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.binarySearch(DII)I: I59 Branch 80 IFGE L848 - true
   * 3 gnu.trove.list.array.TDoubleArrayList.binarySearch(DII)I: I72 Branch 81 IFLE L851 - true
   * 4 gnu.trove.list.array.TDoubleArrayList.add(D)Z: root-Branch
   * 5 gnu.trove.list.array.TDoubleArrayList.addAll([D)Z: I18 Branch 33 IF_ICMPGE L508 - true
   * 6 gnu.trove.list.array.TDoubleArrayList.addAll([D)Z: I18 Branch 33 IF_ICMPGE L508 - false
   * 7 gnu.trove.list.array.TDoubleArrayList.addAll([D)Z: I28 Branch 34 IFEQ L509 - false
   * 8 gnu.trove.list.array.TDoubleArrayList.binarySearch(D)I: root-Branch
   * 9 gnu.trove.list.array.TDoubleArrayList.binarySearch(DII)I: I16 Branch 78 IF_ICMPLE L837 - true
   */

  @Test
  public void test80()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(0, 0);
      double[] doubleArray0 = new double[15];
      tDoubleArrayList0.addAll(doubleArray0);
      int int0 = tDoubleArrayList0.binarySearch(0.0);
      assertEquals(15, tDoubleArrayList0.size());
      assertEquals(7, int0);
  }

  //Test case number: 81
  /*
   * 8 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.binarySearch(DII)I: I72 Branch 81 IFLE L851 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.binarySearch(D)I: root-Branch
   * 3 gnu.trove.list.array.TDoubleArrayList.binarySearch(DII)I: I3 Branch 77 IFGE L834 - true
   * 4 gnu.trove.list.array.TDoubleArrayList.binarySearch(DII)I: I16 Branch 78 IF_ICMPLE L837 - true
   * 5 gnu.trove.list.array.TDoubleArrayList.binarySearch(DII)I: I38 Branch 79 IF_ICMPGT L844 - true
   * 6 gnu.trove.list.array.TDoubleArrayList.binarySearch(DII)I: I38 Branch 79 IF_ICMPGT L844 - false
   * 7 gnu.trove.list.array.TDoubleArrayList.binarySearch(DII)I: I59 Branch 80 IFGE L848 - true
   * 8 gnu.trove.list.array.TDoubleArrayList.binarySearch(DII)I: I59 Branch 80 IFGE L848 - false
   */

  @Test
  public void test81()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[5] = 1305.3451244658193;
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      int int0 = tDoubleArrayList0.binarySearch(439.49634158791974);
      assertEquals(8, tDoubleArrayList0.size());
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals((-6), int0);
  }

  //Test case number: 82
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.indexOf(ID)I: I8 Branch 82 IF_ICMPGE L870 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.indexOf(ID)I: I17 Branch 83 IFNE L871 - true
   * 3 gnu.trove.list.array.TDoubleArrayList.indexOf(ID)I: I8 Branch 82 IF_ICMPGE L870 - true
   * 4 gnu.trove.list.array.TDoubleArrayList.indexOf(D)I: root-Branch
   */

  @Test
  public void test82()  throws Throwable  {
      double[] doubleArray0 = new double[15];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0, 281.39220716682365);
      assertNotNull(tDoubleArrayList0);
      
      int int0 = tDoubleArrayList0.indexOf(281.39220716682365);
      assertEquals(281.39220716682365, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals((-1), int0);
  }

  //Test case number: 83
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.indexOf(ID)I: I17 Branch 83 IFNE L871 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.indexOf(D)I: root-Branch
   * 3 gnu.trove.list.array.TDoubleArrayList.indexOf(ID)I: I8 Branch 82 IF_ICMPGE L870 - false
   * 4 gnu.trove.list.array.TDoubleArrayList.indexOf(ID)I: I17 Branch 83 IFNE L871 - true
   */

  @Test
  public void test83()  throws Throwable  {
      double[] doubleArray0 = new double[15];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0, 281.39220716682365);
      assertNotNull(tDoubleArrayList0);
      
      doubleArray0[2] = 281.39220716682365;
      int int0 = tDoubleArrayList0.indexOf(281.39220716682365);
      assertEquals(281.39220716682365, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals(2, int0);
  }

  //Test case number: 84
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.lastIndexOf(ID)I: I16 Branch 85 IFNE L888 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.lastIndexOf(D)I: root-Branch
   * 3 gnu.trove.list.array.TDoubleArrayList.lastIndexOf(ID)I: I7 Branch 84 IFLE L887 - false
   * 4 gnu.trove.list.array.TDoubleArrayList.lastIndexOf(ID)I: I16 Branch 85 IFNE L888 - false
   */

  @Test
  public void test84()  throws Throwable  {
      double[] doubleArray0 = new double[10];
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0);
      assertNotNull(tDoubleArrayList0);
      
      doubleArray0[9] = (-297.19335154040675);
      int int0 = tDoubleArrayList0.lastIndexOf(0.0);
      assertEquals(8, int0);
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 85
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.grep(Lgnu/trove/procedure/TDoubleProcedure;)Lgnu/trove/list/TDoubleList;: I14 Branch 87 IF_ICMPGE L905 - true
   */

  @Test
  public void test85()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(43, 43);
      TDoubleArrayList tDoubleArrayList1 = (TDoubleArrayList)tDoubleArrayList0.grep((TDoubleProcedure) null);
      assertNotNull(tDoubleArrayList1);
      assertEquals(0.0, tDoubleArrayList1.getNoEntryValue(), 0.01D);
  }

  //Test case number: 86
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.grep(Lgnu/trove/procedure/TDoubleProcedure;)Lgnu/trove/list/TDoubleList;: I14 Branch 87 IF_ICMPGE L905 - false
   */

  @Test
  public void test86()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      // Undeclared exception!
      try {
        tDoubleArrayList0.grep((TDoubleProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 87
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.inverseGrep(Lgnu/trove/procedure/TDoubleProcedure;)Lgnu/trove/list/TDoubleList;: I14 Branch 89 IF_ICMPGE L917 - true
   */

  @Test
  public void test87()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(401, 401);
      TDoubleArrayList tDoubleArrayList1 = (TDoubleArrayList)tDoubleArrayList0.inverseGrep((TDoubleProcedure) null);
      assertNotNull(tDoubleArrayList1);
      assertEquals(0.0, tDoubleArrayList1.getNoEntryValue(), 0.01D);
  }

  //Test case number: 88
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.inverseGrep(Lgnu/trove/procedure/TDoubleProcedure;)Lgnu/trove/list/TDoubleList;: I14 Branch 89 IF_ICMPGE L917 - false
   */

  @Test
  public void test88()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      // Undeclared exception!
      try {
        tDoubleArrayList0.inverseGrep((TDoubleProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 89
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.max()D: I4 Branch 91 IFNE L928 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.max()D: I24 Branch 92 IF_ICMPGE L932 - true
   * 3 gnu.trove.list.array.TDoubleArrayList.max()D: I24 Branch 92 IF_ICMPGE L932 - false
   * 4 gnu.trove.list.array.TDoubleArrayList.max()D: I33 Branch 93 IFLE L933 - true
   */

  @Test
  public void test89()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(10, 10);
      tDoubleArrayList0.fill(1945, 1945, (-1.0));
      tDoubleArrayList0.max();
  }

  //Test case number: 90
  /*
   * 9 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.min()D: I4 Branch 94 IFNE L943 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.min()D: I24 Branch 95 IF_ICMPGE L947 - true
   * 3 gnu.trove.list.array.TDoubleArrayList.min()D: I24 Branch 95 IF_ICMPGE L947 - false
   * 4 gnu.trove.list.array.TDoubleArrayList.min()D: I33 Branch 96 IFGE L948 - true
   * 5 gnu.trove.list.array.TDoubleArrayList.wrap([DD)Lgnu/trove/list/array/TDoubleArrayList;: root-Branch
   * 6 gnu.trove.list.array.TDoubleArrayList.wrap([D)Lgnu/trove/list/array/TDoubleArrayList;: root-Branch
   * 7 gnu.trove.list.array.TDoubleArrayList.<init>([DDZ)V: I7 Branch 2 IFNE L123 - true
   * 8 gnu.trove.list.array.TDoubleArrayList.<init>([DDZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 9 gnu.trove.list.array.TDoubleArrayList$1.<init>([DDZ)V: root-Branch
   */

//   @Test
//   public void test90()  throws Throwable  {
//       double[] doubleArray0 = new double[10];
//       TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0);
//       assertNotNull(tDoubleArrayList0);
//       
//       double double0 = tDoubleArrayList0.min();
//       assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
//       assertEquals(10, tDoubleArrayList0.size());
//       assertEquals(Double.POSITIVE_INFINITY, double0, 0.01D);
//   }

  //Test case number: 91
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TDoubleArrayList.min()D: I4 Branch 94 IFNE L943 - false
   */

  @Test
  public void test91()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(43, 43);
      // Undeclared exception!
      try {
        tDoubleArrayList0.min();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // cannot find minimum of an empty list
         //
      }
  }

  //Test case number: 92
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.sum()D: I12 Branch 97 IF_ICMPGE L959 - false
   * 2 gnu.trove.list.array.TDoubleArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - false
   * 3 gnu.trove.list.array.TDoubleArrayList.sum()D: I12 Branch 97 IF_ICMPGE L959 - true
   * 4 gnu.trove.list.array.TDoubleArrayList.fill(IID)V: I5 Branch 76 IF_ICMPLE L816 - false
   */

  @Test
  public void test92()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(10, 10);
      tDoubleArrayList0.fill(1945, 1945, (-1.0));
      tDoubleArrayList0.sum();
  }

  //Test case number: 93
  /*
   * 7 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.toString()Ljava/lang/String;: I20 Branch 98 IF_ICMPGE L972 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.toString()Ljava/lang/String;: I20 Branch 98 IF_ICMPGE L972 - false
   * 3 gnu.trove.list.array.TDoubleArrayList.toString()Ljava/lang/String;: I44 Branch 99 IFLE L976 - false
   * 4 gnu.trove.list.array.TDoubleArrayList.add([DII)V: root-Branch
   * 5 gnu.trove.list.array.TDoubleArrayList.add([D)V: root-Branch
   * 6 gnu.trove.list.array.TDoubleArrayList.<init>([D)V: root-Branch
   * 7 gnu.trove.list.array.TDoubleArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   */

  @Test
  public void test93()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      TSynchronizedRandomAccessDoubleList tSynchronizedRandomAccessDoubleList0 = new TSynchronizedRandomAccessDoubleList((TDoubleList) tDoubleArrayList0);
      String string0 = tSynchronizedRandomAccessDoubleList0.toString();
      assertNotNull(string0);
      assertEquals("{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}", string0);
      assertEquals(7, tDoubleArrayList0.size());
  }

  //Test case number: 94
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.toString()Ljava/lang/String;: I44 Branch 99 IFLE L976 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.<init>(I)V: root-Branch
   * 3 gnu.trove.list.array.TDoubleArrayList.size()I: root-Branch
   * 4 gnu.trove.list.array.TDoubleArrayList.toString()Ljava/lang/String;: I20 Branch 98 IF_ICMPGE L972 - true
   */

  @Test
  public void test94()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(1);
      String string0 = tDoubleArrayList0.toString();
      assertEquals(0, tDoubleArrayList0.size());
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals("{}", string0);
      assertNotNull(string0);
  }

  //Test case number: 95
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TDoubleArrayList.writeExternal(Ljava/io/ObjectOutput;)V: I35 Branch 100 IF_ICMPGE L1051 - true
   * 2 gnu.trove.list.array.TDoubleArrayList.writeExternal(Ljava/io/ObjectOutput;)V: I35 Branch 100 IF_ICMPGE L1051 - false
   * 3 gnu.trove.list.array.TDoubleArrayList.<init>(ID)V: root-Branch
   * 4 gnu.trove.list.array.TDoubleArrayList.<init>()V: root-Branch
   */

  @Test
  public void test95()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tDoubleArrayList0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0.0, tDoubleArrayList0.getNoEntryValue(), 0.01D);
      assertEquals(true, tDoubleArrayList0.isEmpty());
  }
}

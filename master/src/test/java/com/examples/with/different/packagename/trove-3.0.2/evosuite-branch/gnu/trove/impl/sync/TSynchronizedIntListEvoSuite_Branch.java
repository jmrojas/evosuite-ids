/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TIntFunction;
import gnu.trove.impl.sync.TSynchronizedIntList;
import gnu.trove.impl.sync.TSynchronizedRandomAccessIntList;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntList;
import gnu.trove.list.TIntList;
import gnu.trove.list.array.TIntArrayList;
import gnu.trove.list.linked.TIntLinkedList;
import gnu.trove.procedure.TIntProcedure;
import java.util.Random;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedIntListEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.reverse()V: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedIntList.<init>(Lgnu/trove/list/TIntList;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList();
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntArrayList0);
      tSynchronizedIntList0.reverse();
      assertEquals("{}", tSynchronizedIntList0.toString());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.toArray([IIII)[I: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList(1706);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntArrayList0);
      int[] intArray0 = new int[7];
      int[] intArray1 = tSynchronizedRandomAccessIntList0.toArray(intArray0, 0, 0, 0);
      assertSame(intArray1, intArray0);
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.forEachDescending(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedIntList.<init>(Lgnu/trove/list/TIntList;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntLinkedList0, (Object) "R,Nkam/R,Nkam");
      boolean boolean0 = tSynchronizedIntList0.forEachDescending((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.grep(Lgnu/trove/procedure/TIntProcedure;)Lgnu/trove/list/TIntList;: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntLinkedList0, (Object) "R,Nkam/R,Nkam");
      TIntLinkedList tIntLinkedList1 = (TIntLinkedList)tSynchronizedIntList0.grep((TIntProcedure) null);
      assertNotSame(tIntLinkedList1, tIntLinkedList0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.insert(I[I)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList(0);
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntArrayList0);
      int[] intArray0 = new int[6];
      tSynchronizedIntList0.insert(0, intArray0);
      assertEquals(6, tSynchronizedIntList0.size());
      assertEquals("{0, 0, 0, 0, 0, 0}", tIntArrayList0.toString());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.toArray([III)[I: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntLinkedList0);
      int[] intArray0 = new int[7];
      int[] intArray1 = tSynchronizedIntList0.toArray(intArray0, 0, 0);
      assertSame(intArray1, intArray0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.min()I: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList(0);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntLinkedList0, (Object) "English");
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessIntList0.min();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.binarySearch(I)I: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntLinkedList0);
      int int0 = tSynchronizedRandomAccessIntList0.binarySearch((-18));
      assertEquals((-1), int0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.replace(II)I: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntLinkedList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessIntList0.replace((-18), (-18));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // at offset -18
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.reverse(II)V: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      int[] intArray0 = new int[13];
      TIntArrayList tIntArrayList0 = new TIntArrayList(intArray0);
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntArrayList0);
      tSynchronizedIntList0.reverse((-1996), (-1996));
      assertEquals("{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}", tSynchronizedIntList0.toString());
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.fill(I)V: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList(0);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntLinkedList0, (Object) "English");
      tSynchronizedRandomAccessIntList0.fill(0);
      assertEquals(true, tSynchronizedRandomAccessIntList0.isEmpty());
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.insert(I[III)V: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList();
      int[] intArray0 = new int[5];
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntArrayList0);
      // Undeclared exception!
      try {
        tSynchronizedIntList0.insert((-1), intArray0, 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.lastIndexOf(I)I: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList(237);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntLinkedList0, (Object) "\uD55C\uAD6D\uC5B4");
      int int0 = tSynchronizedRandomAccessIntList0.lastIndexOf(237);
      assertEquals((-1), int0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.subList(II)Lgnu/trove/list/TIntList;: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntLinkedList0, (Object) "R,Nkam/R,Nkam");
      TSynchronizedIntList tSynchronizedIntList1 = (TSynchronizedIntList)tSynchronizedIntList0.subList(0, 0);
      assertEquals(true, tSynchronizedIntList1.isEmpty());
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.max()I: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[8];
      TIntArrayList tIntArrayList0 = new TIntArrayList(intArray0);
      TUnmodifiableIntList tUnmodifiableIntList0 = new TUnmodifiableIntList((TIntList) tIntArrayList0);
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tUnmodifiableIntList0);
      int int0 = tSynchronizedIntList0.max();
      assertEquals(0, int0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.removeAt(I)I: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList(1706);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntArrayList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessIntList0.removeAt(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
      }
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.indexOf(I)I: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList(1706);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntArrayList0);
      int int0 = tSynchronizedRandomAccessIntList0.indexOf(1706);
      assertEquals((-1), int0);
  }

  //Test case number: 17
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.set(I[III)V: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedIntList.toArray(II)[I: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntLinkedList0, (Object) "R,Nkam/R,Nkam");
      int[] intArray0 = tSynchronizedIntList0.toArray(0, 0);
      tSynchronizedIntList0.set(0, intArray0, 0, 0);
      assertEquals("{}", tSynchronizedIntList0.toString());
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.sum()I: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList();
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntArrayList0);
      int int0 = tSynchronizedIntList0.sum();
      assertEquals(0, int0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.sort()V: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList(1706);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntArrayList0);
      tSynchronizedRandomAccessIntList0.sort();
      assertEquals(true, tSynchronizedRandomAccessIntList0.isEmpty());
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.fill(III)V: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList();
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntArrayList0);
      tSynchronizedIntList0.fill(0, 0, (-1));
      assertEquals(true, tIntArrayList0.isEmpty());
      assertEquals(0, tSynchronizedIntList0.size());
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.lastIndexOf(II)I: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntLinkedList0);
      int int0 = tSynchronizedIntList0.lastIndexOf(0, 0);
      assertEquals((-1), int0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.add([III)V: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList(719);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntArrayList0);
      int[] intArray0 = new int[4];
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessIntList0.add(intArray0, 0, 719);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.set(II)I: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[8];
      TIntArrayList tIntArrayList0 = TIntArrayList.wrap(intArray0);
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntArrayList0);
      tSynchronizedIntList0.set(0, 1032);
      assertEquals("{1032, 0, 0, 0, 0, 0, 0, 0}", tIntArrayList0.toString());
      assertEquals(1032, tSynchronizedIntList0.sum());
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.inverseGrep(Lgnu/trove/procedure/TIntProcedure;)Lgnu/trove/list/TIntList;: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList(17);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntLinkedList0);
      TIntLinkedList tIntLinkedList1 = (TIntLinkedList)tSynchronizedRandomAccessIntList0.inverseGrep((TIntProcedure) null);
      assertEquals(0, tIntLinkedList1.getNoEntryValue());
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.indexOf(II)I: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList();
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntArrayList0);
      int int0 = tSynchronizedIntList0.indexOf(0, 0);
      assertEquals((-1), int0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.add([I)V: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList(1706);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntArrayList0);
      int[] intArray0 = new int[7];
      tSynchronizedRandomAccessIntList0.add(intArray0);
      assertEquals("{0, 0, 0, 0, 0, 0, 0}", tSynchronizedRandomAccessIntList0.toString());
      assertEquals("{0, 0, 0, 0, 0, 0, 0}", tIntArrayList0.toString());
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.shuffle(Ljava/util/Random;)V: root-Branch
   */

//   @Test
//   public void test27()  throws Throwable  {
//       TIntLinkedList tIntLinkedList0 = new TIntLinkedList(237);
//       TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntLinkedList0, (Object) "\uD55C\uAD6D\uC5B4");
//       Random random0 = new Random();
//       tSynchronizedRandomAccessIntList0.shuffle(random0);
//       assertEquals((-997311942864680572L), random0.nextLong());
//       assertEquals(false, random0.nextBoolean());
//   }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.set(I[I)V: root-Branch
   */

  @Test
  public void test28()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList(0);
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntArrayList0);
      int[] intArray0 = new int[6];
      // Undeclared exception!
      try {
        tSynchronizedIntList0.set(0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
      }
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.insert(II)V: root-Branch
   */

  @Test
  public void test29()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList(1706);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntArrayList0);
      tSynchronizedRandomAccessIntList0.insert(0, 1706);
      assertEquals(false, tIntArrayList0.isEmpty());
      assertEquals("{1706}", tSynchronizedRandomAccessIntList0.toString());
  }

  //Test case number: 30
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.hashCode()I: root-Branch
   */

  @Test
  public void test30()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList(1706);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntArrayList0);
      int int0 = tSynchronizedRandomAccessIntList0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.binarySearch(III)I: root-Branch
   */

  @Test
  public void test31()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList(0);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntLinkedList0, (Object) "English");
      int int0 = tSynchronizedRandomAccessIntList0.binarySearch(0, 0, 0);
      assertEquals((-1), int0);
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.transformValues(Lgnu/trove/function/TIntFunction;)V: root-Branch
   */

  @Test
  public void test32()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntLinkedList0);
      tSynchronizedIntList0.transformValues((TIntFunction) null);
      assertEquals(true, tSynchronizedIntList0.isEmpty());
  }

  //Test case number: 33
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.remove(II)V: root-Branch
   */

  @Test
  public void test33()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntLinkedList0);
      tSynchronizedIntList0.remove(0, 0);
      assertEquals(0, tSynchronizedIntList0.getNoEntryValue());
  }

  //Test case number: 34
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test34()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntLinkedList0);
      boolean boolean0 = tSynchronizedIntList0.equals((Object) "{}");
      assertEquals(false, boolean0);
  }

  //Test case number: 35
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.sort(II)V: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedIntList.<init>(Lgnu/trove/list/TIntList;)V: root-Branch
   */

  @Test
  public void test35()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList();
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntArrayList0);
      tSynchronizedIntList0.sort(0, 0);
      assertEquals(0, tSynchronizedIntList0.size());
  }

  //Test case number: 36
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntList.get(I)I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedIntList.<init>(Lgnu/trove/list/TIntList;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test36()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList(237);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntLinkedList0, (Object) "\uD55C\uAD6D\uC5B4");
      int int0 = tSynchronizedRandomAccessIntList0.get((-1));
      assertEquals(237, int0);
  }
}

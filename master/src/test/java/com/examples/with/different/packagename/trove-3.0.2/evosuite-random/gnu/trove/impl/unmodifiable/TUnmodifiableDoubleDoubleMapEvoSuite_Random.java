/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap;
import gnu.trove.map.TDoubleDoubleMap;
import gnu.trove.map.hash.TDoubleDoubleHashMap;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableDoubleDoubleMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = 0;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleDoubleMap0.adjustValue((double) int0, (double) int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TDoubleDoubleMap tDoubleDoubleMap0 = null;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = null;
      try {
        tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(tDoubleDoubleMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      tUnmodifiableDoubleDoubleMap0.toString();
      TDoubleDoubleMap tDoubleDoubleMap0 = null;
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap1 = null;
      try {
        tUnmodifiableDoubleDoubleMap1 = new TUnmodifiableDoubleDoubleMap(tDoubleDoubleMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      int int0 = 0;
      doubleArray0[0] = (double) int0;
      doubleArray0[1] = (double) int0;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(int0);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      tUnmodifiableDoubleDoubleMap0.containsKey((double) int0);
      double double0 = 1514.303901927821;
      doubleArray0[0] = double0;
      doubleArray0[0] = double0;
      doubleArray0[1] = double0;
      doubleArray0[1] = double0;
      double double1 = (-1.0);
      double double2 = (-1.0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleDoubleMap0.adjustOrPutValue(double1, doubleArray0[1], double2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 1259;
      TDoubleDoubleMap tDoubleDoubleMap0 = null;
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = null;
      try {
        tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap(tDoubleDoubleMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = 1592;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(int0);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      double double0 = 1.0;
      double double1 = 0.0;
      // Undeclared exception!
      try {
        tUnmodifiableDoubleDoubleMap0.adjustOrPutValue((double) int0, double0, double1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = (-1);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) int0;
      doubleArray0[1] = (double) int0;
      doubleArray0[2] = (double) int0;
      int int1 = 831;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(int1, int0);
      double double0 = Double.NEGATIVE_INFINITY;
      tDoubleDoubleHashMap0.containsValue(double0);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      tUnmodifiableDoubleDoubleMap0.iterator();
      doubleArray0[3] = (double) int0;
      doubleArray0[4] = (double) int0;
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap1 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tUnmodifiableDoubleDoubleMap0);
      doubleArray0[5] = (double) int0;
      doubleArray0[6] = (double) int0;
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap(doubleArray0, doubleArray0);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap2 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap1);
      tUnmodifiableDoubleDoubleMap2.keys();
      float float0 = 1826.1338F;
      TDoubleDoubleHashMap tDoubleDoubleHashMap2 = new TDoubleDoubleHashMap(int0, float0);
      tDoubleDoubleHashMap2.getAutoCompactionFactor();
      // Undeclared exception!
      try {
        tUnmodifiableDoubleDoubleMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      double double0 = (-1969.8405717181458);
      double double1 = (-682.0547435206248);
      tDoubleDoubleHashMap0.putIfAbsent(double0, double1);
      tDoubleDoubleHashMap0.trimToSize();
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      double double2 = 1671.035001714065;
      tUnmodifiableDoubleDoubleMap0.getNoEntryValue();
      // Undeclared exception!
      try {
        tUnmodifiableDoubleDoubleMap0.remove(double2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = 708;
      float float0 = 0.0F;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(int0, float0);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      assertEquals("{}", tUnmodifiableDoubleDoubleMap0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 1;
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) int0;
      doubleArray0[1] = (double) int0;
      doubleArray0[2] = (double) int0;
      doubleArray0[3] = (double) int0;
      doubleArray0[4] = (double) int0;
      doubleArray0[5] = (double) int0;
      doubleArray0[6] = (double) int0;
      doubleArray0[7] = (double) int0;
      doubleArray0[8] = (double) int0;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(doubleArray0, doubleArray0);
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap1);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap1 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tUnmodifiableDoubleDoubleMap0);
      TDoubleDoubleHashMap tDoubleDoubleHashMap2 = new TDoubleDoubleHashMap(int0);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap2 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap2);
      double double0 = 761.0263707890365;
      // Undeclared exception!
      try {
        tUnmodifiableDoubleDoubleMap2.putIfAbsent(double0, (double) int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = (-1352);
      double double0 = (-1583.8345410140098);
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(int0, (float) int0, (double) int0, double0);
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap1);
      double double1 = (-74.72356810994827);
      boolean boolean0 = tUnmodifiableDoubleDoubleMap0.containsKey(double1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      TDoubleDoubleMap tDoubleDoubleMap0 = null;
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = null;
      try {
        tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap(tDoubleDoubleMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 1;
      int int1 = 311;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(int1);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      tUnmodifiableDoubleDoubleMap0.getNoEntryValue();
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap(int0, int0);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap1 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap1);
      double double0 = Double.NEGATIVE_INFINITY;
      tUnmodifiableDoubleDoubleMap1.keySet();
      tUnmodifiableDoubleDoubleMap1.keys();
      // Undeclared exception!
      try {
        tUnmodifiableDoubleDoubleMap1.put((double) int0, double0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      tDoubleDoubleHashMap0.values();
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      TDoubleDoubleMap tDoubleDoubleMap0 = null;
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap1 = null;
      try {
        tUnmodifiableDoubleDoubleMap1 = new TUnmodifiableDoubleDoubleMap(tDoubleDoubleMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 65;
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) int0;
      int int1 = (-357);
      float float0 = 621.53455F;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(int1, float0);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      doubleArray0[1] = (double) int0;
      doubleArray0[2] = (double) int0;
      doubleArray0[3] = (double) int0;
      doubleArray0[4] = (double) int0;
      double double0 = 928.6727473206456;
      doubleArray0[5] = double0;
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap(doubleArray0, doubleArray0);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap1 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap1);
      tUnmodifiableDoubleDoubleMap1.getNoEntryValue();
      TDoubleDoubleHashMap tDoubleDoubleHashMap2 = new TDoubleDoubleHashMap(int0, int0);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap2 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap2);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap3 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tUnmodifiableDoubleDoubleMap2);
      boolean boolean0 = tUnmodifiableDoubleDoubleMap2.isEmpty();
      assertEquals(true, boolean0);
      
      // Undeclared exception!
      try {
        tUnmodifiableDoubleDoubleMap3.remove((double) int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TCharCollection;
import gnu.trove.impl.sync.TSynchronizedCharList;
import gnu.trove.impl.sync.TSynchronizedCharSet;
import gnu.trove.impl.sync.TSynchronizedRandomAccessCharList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessCharList;
import gnu.trove.list.TCharList;
import gnu.trove.list.array.TCharArrayList;
import gnu.trove.list.linked.TCharLinkedList;
import gnu.trove.set.TCharSet;
import gnu.trove.set.hash.TCharHashSet;
import java.io.ByteArrayOutputStream;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Locale;
import java.util.MissingResourceException;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedCharListEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TCharList tCharList0 = null;
      TUnmodifiableRandomAccessCharList tUnmodifiableRandomAccessCharList0 = null;
      try {
        tUnmodifiableRandomAccessCharList0 = new TUnmodifiableRandomAccessCharList(tCharList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      char char0 = 'A';
      TCharList tCharList0 = null;
      ArrayList<String> arrayList0 = new ArrayList<String>();
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList(tCharList0, (Object) arrayList0);
      TCharList tCharList1 = tSynchronizedRandomAccessCharList0.list;
      TCharArrayList tCharArrayList0 = null;
      try {
        tCharArrayList0 = new TCharArrayList((TCharCollection) tCharList1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = (-109);
      TCharArrayList tCharArrayList0 = null;
      try {
        tCharArrayList0 = new TCharArrayList(int0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      char[] charArray0 = new char[5];
      char char0 = '{';
      charArray0[0] = char0;
      char char1 = 'N';
      char char2 = '~';
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList(char2);
      int int0 = 497;
      // Undeclared exception!
      try {
        tCharLinkedList0.subList(int0, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 497 greater than last index 0
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      char[] charArray0 = new char[6];
      char char0 = 'j';
      charArray0[0] = char0;
      char char1 = '|';
      charArray0[1] = char1;
      char char2 = 'r';
      charArray0[2] = char2;
      char char3 = 'm';
      charArray0[3] = char3;
      char char4 = 'B';
      charArray0[4] = char4;
      char char5 = 'g';
      charArray0[5] = char5;
      // Undeclared exception!
      try {
        tCharArrayList0.retainAll(charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 9
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      char[] charArray0 = new char[10];
      char char0 = '8';
      charArray0[0] = char0;
      char char1 = 'c';
      charArray0[1] = char1;
      char char2 = 'i';
      char[] charArray1 = new char[3];
      charArray1[0] = char0;
      char char3 = '?';
      charArray1[1] = char3;
      charArray1[2] = char1;
      TCharArrayList tCharArrayList0 = new TCharArrayList(charArray1);
      Object object0 = null;
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0, object0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessCharList0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      char char0 = '?';
      char[] charArray0 = new char[2];
      charArray0[0] = char0;
      charArray0[1] = char0;
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0);
      int int0 = (-54);
      int int1 = 0;
      // Undeclared exception!
      try {
        tCharArrayList0.subList(int0, int1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TCharList tCharList0 = null;
      String string0 = "";
      Locale locale0 = new Locale(string0, string0);
      TSynchronizedCharList tSynchronizedCharList0 = null;
      try {
        tSynchronizedCharList0 = new TSynchronizedCharList(tCharList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TCharList tCharList0 = null;
      Locale locale0 = Locale.PRC;
      locale0.getISO3Language();
      int int0 = (-1093);
      ByteArrayOutputStream byteArrayOutputStream0 = null;
      try {
        byteArrayOutputStream0 = new ByteArrayOutputStream(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative initial size: -1093
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      tCharLinkedList0.removeAll((Collection<?>) linkedList0);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharLinkedList0);
      int int0 = 1;
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessCharList0.sort(int0, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 1 greater than last index 0
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[9];
      char char0 = '@';
      charArray0[0] = char0;
      char char1 = 'y';
      charArray0[1] = char1;
      char char2 = 'q';
      charArray0[2] = char2;
      char char3 = 'd';
      charArray0[3] = char3;
      char char4 = '\\';
      charArray0[4] = char4;
      char char5 = '/';
      charArray0[5] = char5;
      char char6 = ' ';
      charArray0[6] = char6;
      char char7 = '\'';
      charArray0[7] = char7;
      char char8 = 'E';
      charArray0[8] = char8;
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      int int0 = (-1);
      int int1 = 0;
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessCharList0.fill(int0, int1, charArray0[1]);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -1
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TCharList tCharList0 = null;
      TSynchronizedCharList tSynchronizedCharList0 = null;
      try {
        tSynchronizedCharList0 = new TSynchronizedCharList(tCharList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TCharList tCharList0 = null;
      TUnmodifiableRandomAccessCharList tUnmodifiableRandomAccessCharList0 = null;
      try {
        tUnmodifiableRandomAccessCharList0 = new TUnmodifiableRandomAccessCharList(tCharList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = (-1392);
      char char0 = '>';
      TCharArrayList tCharArrayList0 = null;
      try {
        tCharArrayList0 = new TCharArrayList(int0, char0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TCharList tCharList0 = null;
      String string0 = "\"b-WWzoO~2S/,_s";
      Locale locale0 = Locale.TAIWAN;
      // Undeclared exception!
      try {
        locale0.getUnicodeLocaleType(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Ill-formed Unicode locale key: \"b-WWzoO~2S/,_s
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[8];
      char char0 = 'k';
      charArray0[0] = char0;
      char char1 = ')';
      charArray0[1] = char1;
      char char2 = 'L';
      charArray0[2] = char2;
      char char3 = 'Z';
      charArray0[3] = char3;
      char char4 = ',';
      charArray0[4] = char4;
      char char5 = '&';
      charArray0[5] = char5;
      char char6 = '|';
      charArray0[6] = char6;
      char char7 = '+';
      charArray0[7] = char7;
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0);
      int int0 = 1809;
      // Undeclared exception!
      try {
        tCharArrayList0.subList((int) char5, int0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index < 8
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      char[] charArray0 = new char[3];
      char char0 = '7';
      charArray0[0] = char0;
      char char1 = 'p';
      charArray0[1] = char1;
      int int0 = (-1361);
      TCharArrayList tCharArrayList0 = null;
      try {
        tCharArrayList0 = new TCharArrayList(int0, char1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[5];
      char char0 = '{';
      charArray0[0] = char0;
      char char1 = '~';
      charArray0[1] = char1;
      char char2 = 'N';
      charArray0[2] = char2;
      char char3 = '8';
      charArray0[3] = char3;
      char char4 = '`';
      charArray0[4] = char4;
      TCharArrayList tCharArrayList0 = new TCharArrayList(charArray0);
      int int0 = 1591;
      TCharHashSet tCharHashSet0 = new TCharHashSet(int0);
      TSynchronizedCharSet tSynchronizedCharSet0 = new TSynchronizedCharSet((TCharSet) tCharHashSet0);
      Locale locale0 = Locale.JAPAN;
      String string0 = locale0.getDisplayVariant();
      TSynchronizedCharSet tSynchronizedCharSet1 = new TSynchronizedCharSet((TCharSet) tSynchronizedCharSet0, (Object) string0);
      String string1 = (String)tSynchronizedCharSet1.mutex;
      TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) tCharArrayList0, (Object) string1);
      int int1 = (-1);
      // Undeclared exception!
      try {
        tSynchronizedCharList0.replace(int1, char0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
      }
  }
}

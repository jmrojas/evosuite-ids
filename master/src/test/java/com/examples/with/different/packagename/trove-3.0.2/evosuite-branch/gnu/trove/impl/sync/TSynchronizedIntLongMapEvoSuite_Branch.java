/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TLongFunction;
import gnu.trove.impl.sync.TSynchronizedIntLongMap;
import gnu.trove.impl.sync.TSynchronizedIntSet;
import gnu.trove.impl.sync.TSynchronizedLongCollection;
import gnu.trove.map.TIntLongMap;
import gnu.trove.map.hash.TIntLongHashMap;
import gnu.trove.procedure.TIntLongProcedure;
import gnu.trove.procedure.TIntProcedure;
import gnu.trove.procedure.TLongProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedIntLongMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedIntLongMap.<init>(Lgnu/trove/map/TIntLongMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap((-1216), (-1216), (-1216), (-1216));
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0, (Object) "/");
      boolean boolean0 = tSynchronizedIntLongMap0.forEachValue((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.getNoEntryKey()I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedIntLongMap.<init>(Lgnu/trove/map/TIntLongMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test1()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap((-5), (-5), (-5), (-5));
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      int int0 = tSynchronizedIntLongMap0.getNoEntryKey();
      assertEquals((-5), int0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.forEachKey(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(77527, 77527, 77527, 77527);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      boolean boolean0 = tSynchronizedIntLongMap0.forEachKey((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap((-20), (-20));
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0, (Object) "-20");
      boolean boolean0 = tSynchronizedIntLongMap0.equals((Object) "-20");
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(77527, 77527, 77527, 77527);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      String string0 = tSynchronizedIntLongMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.remove(I)J: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(957);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0, (Object) "zh");
      long long0 = tSynchronizedIntLongMap0.remove(957);
      assertEquals(0L, long0);
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.size()I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedIntLongMap.iterator()Lgnu/trove/iterator/TIntLongIterator;: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(77527, 77527, 77527, 77527);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      TIntLongHashMap tIntLongHashMap1 = new TIntLongHashMap((TIntLongMap) tSynchronizedIntLongMap0);
      assertEquals(3, tIntLongHashMap1.capacity());
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(77527, 77527, 77527, 77527);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      boolean boolean0 = tSynchronizedIntLongMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.keys([I)[I: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(77527, 77527, 77527, 77527);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      int[] intArray0 = tSynchronizedIntLongMap0.keys(tIntLongHashMap0._set);
      assertNotNull(intArray0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.getNoEntryValue()J: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(77527, 77527, 77527, 77527);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      long long0 = tSynchronizedIntLongMap0.getNoEntryValue();
      assertEquals(77527L, long0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.containsKey(I)Z: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(77527, 77527, 77527, 77527);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      boolean boolean0 = tSynchronizedIntLongMap0.containsKey(77527);
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.values()[J: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(77527, 77527, 77527, 77527);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      long[] longArray0 = tSynchronizedIntLongMap0.values();
      assertNotNull(longArray0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(957);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0, (Object) "zh");
      HashMap<Integer, Long> hashMap0 = new HashMap<Integer, Long>();
      tSynchronizedIntLongMap0.putAll((Map<? extends Integer, ? extends Long>) hashMap0);
      assertEquals(true, hashMap0.isEmpty());
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.put(IJ)J: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(77527, 77527, 77527, 77527);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      long long0 = tSynchronizedIntLongMap0.put(77527, 77527);
      assertEquals("{77527=77527}", tIntLongHashMap0.toString());
      assertEquals(77527L, long0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.keys()[I: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      int[] intArray0 = tSynchronizedIntLongMap0.keys();
      assertNotNull(intArray0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.containsValue(J)Z: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(77527, 77527, 77527, 77527);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      boolean boolean0 = tSynchronizedIntLongMap0.containsValue((long) 77527);
      assertEquals(false, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.get(I)J: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(957);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0, (Object) "zh");
      long long0 = tSynchronizedIntLongMap0.get(957);
      assertEquals(0L, long0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.putIfAbsent(IJ)J: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap((-20), (-20));
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0, (Object) "-20");
      tSynchronizedIntLongMap0.putIfAbsent((-20), (-20));
      assertEquals(false, tIntLongHashMap0.isEmpty());
      assertEquals("{-20=-20}", tIntLongHashMap0.toString());
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.putAll(Lgnu/trove/map/TIntLongMap;)V: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(957);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0, (Object) "zh");
      tSynchronizedIntLongMap0.putAll((TIntLongMap) tIntLongHashMap0);
      assertEquals(0, tIntLongHashMap0.size());
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.increment(I)Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap((-5), (-5), (-5), (-5));
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      boolean boolean0 = tSynchronizedIntLongMap0.increment((-5));
      assertEquals(false, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.forEachEntry(Lgnu/trove/procedure/TIntLongProcedure;)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap((-5), (-5), (-5), (-5));
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      boolean boolean0 = tSynchronizedIntLongMap0.forEachEntry((TIntLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.transformValues(Lgnu/trove/function/TLongFunction;)V: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap((-5), (-5), (-5), (-5));
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      tSynchronizedIntLongMap0.transformValues((TLongFunction) null);
      assertEquals(0, tSynchronizedIntLongMap0.size());
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.clear()V: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(77527, 77527, 77527, 77527);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      tSynchronizedIntLongMap0.clear();
      assertEquals("{}", tSynchronizedIntLongMap0.toString());
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.adjustOrPutValue(IJJ)J: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap((-20), (-20));
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0, (Object) "-20");
      long long0 = tSynchronizedIntLongMap0.adjustOrPutValue((-20), (-20), (-20));
      assertEquals("{-20=-20}", tIntLongHashMap0.toString());
      assertEquals((-20L), long0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.values([J)[J: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap((-1216), (-1216), (-1216), (-1216));
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0, (Object) "/");
      long[] longArray0 = new long[2];
      long[] longArray1 = tSynchronizedIntLongMap0.values(longArray0);
      assertSame(longArray1, longArray0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.hashCode()I: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(957);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0, (Object) "zh");
      int int0 = tSynchronizedIntLongMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.retainEntries(Lgnu/trove/procedure/TIntLongProcedure;)Z: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap((-5), (-5), (-5), (-5));
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      boolean boolean0 = tSynchronizedIntLongMap0.retainEntries((TIntLongProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 27
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.adjustValue(IJ)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedIntLongMap.<init>(Lgnu/trove/map/TIntLongMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(957);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0, (Object) "zh");
      boolean boolean0 = tSynchronizedIntLongMap0.adjustValue(957, 957);
      assertEquals(false, boolean0);
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.<init>(Lgnu/trove/map/TIntLongMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = null;
      try {
        tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.keySet()Lgnu/trove/set/TIntSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedIntLongMap.keySet()Lgnu/trove/set/TIntSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap((-5), (-5), (-5), (-5));
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      TSynchronizedIntSet tSynchronizedIntSet0 = (TSynchronizedIntSet)tSynchronizedIntLongMap0.keySet();
      assertNotNull(tSynchronizedIntSet0);
      
      TSynchronizedIntSet tSynchronizedIntSet1 = (TSynchronizedIntSet)tSynchronizedIntLongMap0.keySet();
      assertSame(tSynchronizedIntSet1, tSynchronizedIntSet0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntLongMap.valueCollection()Lgnu/trove/TLongCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 gnu.trove.impl.sync.TSynchronizedIntLongMap.valueCollection()Lgnu/trove/TLongCollection;: I11 Branch 3 IFNONNULL L121 - false
   * 3 gnu.trove.impl.sync.TSynchronizedIntLongMap.<init>(Lgnu/trove/map/TIntLongMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      TSynchronizedLongCollection tSynchronizedLongCollection0 = (TSynchronizedLongCollection)tSynchronizedIntLongMap0.valueCollection();
      assertNotNull(tSynchronizedLongCollection0);
      
      TSynchronizedLongCollection tSynchronizedLongCollection1 = (TSynchronizedLongCollection)tSynchronizedIntLongMap0.valueCollection();
      assertSame(tSynchronizedLongCollection1, tSynchronizedLongCollection0);
  }
}

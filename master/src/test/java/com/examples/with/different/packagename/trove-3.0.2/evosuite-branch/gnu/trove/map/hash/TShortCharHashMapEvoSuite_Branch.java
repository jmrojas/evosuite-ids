/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TCharCollection;
import gnu.trove.function.TCharFunction;
import gnu.trove.map.TShortCharMap;
import gnu.trove.map.hash.TShortCharHashMap;
import gnu.trove.procedure.TCharProcedure;
import gnu.trove.procedure.TShortCharProcedure;
import gnu.trove.procedure.TShortProcedure;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.util.AbstractMap;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TShortCharHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap$TValueView.<init>(Lgnu/trove/map/hash/TShortCharHashMap;)V: root-Branch
   * 2 gnu.trove.map.hash.TShortCharHashMap.valueCollection()Lgnu/trove/TCharCollection;: root-Branch
   * 3 gnu.trove.map.hash.TShortCharHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.hash.TShortCharHashMap.put(SC)C: root-Branch
   * 5 gnu.trove.map.hash.TShortCharHashMap.<init>([S[C)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 6 gnu.trove.map.hash.TShortCharHashMap.<init>([S[C)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 7 gnu.trove.map.hash.TShortCharHashMap.doPut(SCI)C: I12 Branch 40 IFGE L214 - true
   * 8 gnu.trove.map.hash.TShortCharHashMap.doPut(SCI)C: I12 Branch 40 IFGE L214 - false
   * 9 gnu.trove.map.hash.TShortCharHashMap.doPut(SCI)C: I41 Branch 41 IFEQ L221 - true
   * 10 gnu.trove.map.hash.TShortCharHashMap.doPut(SCI)C: I41 Branch 41 IFEQ L221 - false
   */

  @Test
  public void test0()  throws Throwable  {
      short[] shortArray0 = new short[6];
      char[] charArray0 = new char[3];
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap(shortArray0, charArray0);
      TCharCollection tCharCollection0 = tShortCharHashMap0.valueCollection();
      assertEquals(1, tCharCollection0.size());
      assertEquals("{0=\u0000}", tShortCharHashMap0.toString());
      assertEquals(17, tShortCharHashMap0.capacity());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   * 2 gnu.trove.map.hash.TShortCharHashMap.<init>()V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      boolean boolean0 = tShortCharHashMap0.forEachKey((TShortProcedure) null);
      assertEquals(true, boolean0);
      assertEquals(23, tShortCharHashMap0.capacity());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortCharHashMap.containsKey(S)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      tShortCharHashMap0.containsKey((short)0);
      assertEquals(23, tShortCharHashMap0.capacity());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.clear()V: root-Branch
   * 2 gnu.trove.map.hash.TShortCharHashMap.<init>(I)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap(959);
      tShortCharHashMap0.clear();
      assertEquals("{}", tShortCharHashMap0.toString());
      assertEquals(2081, tShortCharHashMap0.capacity());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.removeAt(I)V: root-Branch
   * 2 gnu.trove.map.hash.TShortCharHashMap.remove(S)C: I14 Branch 46 IFLT L276 - false
   */

  @Test
  public void test4()  throws Throwable  {
      short[] shortArray0 = new short[8];
      char[] charArray0 = new char[8];
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap(shortArray0, charArray0);
      assertEquals("{0=\u0000}", tShortCharHashMap0.toString());
      
      char char0 = tShortCharHashMap0.remove((short)0);
      assertEquals(0, tShortCharHashMap0.size());
      assertEquals('\u0000', char0);
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.keySet()Lgnu/trove/set/TShortSet;: root-Branch
   * 2 gnu.trove.map.hash.TShortCharHashMap$TKeyView.<init>(Lgnu/trove/map/hash/TShortCharHashMap;)V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      tShortCharHashMap0.keySet();
      assertEquals(23, tShortCharHashMap0.capacity());
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.increment(S)Z: root-Branch
   * 2 gnu.trove.map.hash.TShortCharHashMap.adjustValue(SC)Z: I9 Branch 71 IFGE L477 - false
   */

  @Test
  public void test6()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      boolean boolean0 = tShortCharHashMap0.increment((short)0);
      assertEquals(23, tShortCharHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap$TShortCharHashIterator.value()C: root-Branch
   * 2 gnu.trove.map.hash.TShortCharHashMap$TShortCharHashIterator.advance()V: root-Branch
   * 3 gnu.trove.map.hash.TShortCharHashMap$TShortCharHashIterator.key()S: root-Branch
   * 4 gnu.trove.map.hash.TShortCharHashMap.<init>(Lgnu/trove/map/TShortCharMap;)V: I10 Branch 34 IFEQ L133 - false
   * 5 gnu.trove.map.hash.TShortCharHashMap.<init>(Lgnu/trove/map/TShortCharMap;)V: I38 Branch 35 IFEQ L139 - true
   * 6 gnu.trove.map.hash.TShortCharHashMap.<init>(Lgnu/trove/map/TShortCharMap;)V: I50 Branch 36 IFEQ L143 - true
   * 7 gnu.trove.map.hash.TShortCharHashMap.putAll(Lgnu/trove/map/TShortCharMap;)V: I15 Branch 43 IFEQ L243 - true
   * 8 gnu.trove.map.hash.TShortCharHashMap.putAll(Lgnu/trove/map/TShortCharMap;)V: I15 Branch 43 IFEQ L243 - false
   * 9 gnu.trove.map.hash.TShortCharHashMap.iterator()Lgnu/trove/iterator/TShortCharIterator;: root-Branch
   * 10 gnu.trove.map.hash.TShortCharHashMap$TShortCharHashIterator.<init>(Lgnu/trove/map/hash/TShortCharHashMap;Lgnu/trove/map/hash/TShortCharHashMap;)V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      short[] shortArray0 = new short[6];
      char[] charArray0 = new char[3];
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap(shortArray0, charArray0);
      TShortCharHashMap tShortCharHashMap1 = new TShortCharHashMap((TShortCharMap) tShortCharHashMap0);
      assertEquals("{0=\u0000}", tShortCharHashMap1.toString());
      assertEquals(17, tShortCharHashMap0.capacity());
      assertEquals(23, tShortCharHashMap1.capacity());
      assertEquals(1, tShortCharHashMap0.size());
  }

  //Test case number: 8
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.<init>(Lgnu/trove/map/TShortCharMap;)V: I38 Branch 35 IFEQ L139 - false
   * 2 gnu.trove.map.hash.TShortCharHashMap.<init>(Lgnu/trove/map/TShortCharMap;)V: I50 Branch 36 IFEQ L143 - false
   * 3 gnu.trove.map.hash.TShortCharHashMap.<init>(IFSC)V: root-Branch
   * 4 gnu.trove.map.hash.TShortCharHashMap.<init>(Lgnu/trove/map/TShortCharMap;)V: I10 Branch 34 IFEQ L133 - false
   */

  @Test
  public void test8()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap((-840), (float) 0, (short)10, 'e');
      TShortCharHashMap tShortCharHashMap1 = null;
      try {
        tShortCharHashMap1 = new TShortCharHashMap((TShortCharMap) tShortCharHashMap0);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  //Test case number: 9
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 2 gnu.trove.map.hash.TShortCharHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 3 gnu.trove.map.hash.TShortCharHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 4 gnu.trove.map.hash.TShortCharHashMap.retainEntries(Lgnu/trove/procedure/TShortCharProcedure;)Z: I31 Branch 68 IFLE L453 - true
   * 5 gnu.trove.map.hash.TShortCharHashMap.retainEntries(Lgnu/trove/procedure/TShortCharProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 6 gnu.trove.map.hash.TShortCharHashMap.retainEntries(Lgnu/trove/procedure/TShortCharProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   * 7 gnu.trove.map.hash.TShortCharHashMap.<init>(IF)V: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap((-1749), (-1749));
      boolean boolean0 = tShortCharHashMap0.retainEntries((TShortCharProcedure) null);
      assertEquals(false, boolean0);
      assertEquals(3, tShortCharHashMap0.capacity());
      assertEquals("{}", tShortCharHashMap0.toString());
  }

  //Test case number: 10
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 2 gnu.trove.map.hash.TShortCharHashMap.adjustOrPutValue(SCC)C: I9 Branch 72 IFGE L491 - true
   * 3 gnu.trove.map.hash.TShortCharHashMap.adjustOrPutValue(SCC)C: I59 Branch 73 IFEQ L502 - false
   * 4 gnu.trove.map.hash.TShortCharHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 5 gnu.trove.map.hash.TShortCharHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 6 gnu.trove.map.hash.TShortCharHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   */

  @Test
  public void test10()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      tShortCharHashMap0.adjustOrPutValue((short) (-1489), 'T', 'T');
      tShortCharHashMap0.compact();
      assertEquals(1, tShortCharHashMap0.size());
      assertEquals("{-1489=T}", tShortCharHashMap0.toString());
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortCharHashMap.putIfAbsent(SC)C: I9 Branch 39 IFGE L205 - false
   */

  @Test
  public void test11()  throws Throwable  {
      short[] shortArray0 = new short[6];
      char[] charArray0 = new char[9];
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap(shortArray0, charArray0);
      char char0 = tShortCharHashMap0.putIfAbsent((short)0, 'm');
      assertEquals("{0=\u0000}", tShortCharHashMap0.toString());
      assertEquals(23, tShortCharHashMap0.capacity());
      assertEquals(1, tShortCharHashMap0.size());
      assertEquals('\u0000', char0);
  }

  //Test case number: 12
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - false
   * 2 gnu.trove.map.hash.TShortCharHashMap.<init>(IF)V: root-Branch
   * 3 gnu.trove.map.hash.TShortCharHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - true
   */

  @Test
  public void test12()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap(1, 1);
      HashMap<Short, Character> hashMap0 = new HashMap<Short, Character>();
      Short short0 = new Short((short)0);
      Character character0 = new Character('x');
      hashMap0.put(short0, character0);
      tShortCharHashMap0.putAll((Map<? extends Short, ? extends Character>) hashMap0);
      assertEquals(1, tShortCharHashMap0.size());
      assertEquals("{0=x}", tShortCharHashMap0.toString());
  }

  //Test case number: 13
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.get(S)C: I9 Branch 44 IFGE L253 - true
   * 2 gnu.trove.map.hash.TShortCharHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 3 gnu.trove.map.hash.TShortCharHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 4 gnu.trove.map.hash.TShortCharHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 5 gnu.trove.map.hash.TShortCharHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 6 gnu.trove.map.hash.TShortCharHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 7 gnu.trove.map.hash.TShortCharHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 8 gnu.trove.map.hash.TShortCharHashMap.equals(Ljava/lang/Object;)Z: I84 Branch 78 IF_ICMPEQ L1200 - true
   */

  @Test
  public void test13()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap((-542));
      tShortCharHashMap0.put((short)0, '4');
      boolean boolean0 = tShortCharHashMap0.equals((Object) tShortCharHashMap0);
      assertEquals(false, tShortCharHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortCharHashMap.get(S)C: I9 Branch 44 IFGE L253 - false
   */

  @Test
  public void test14()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      tShortCharHashMap0.get((short)0);
      assertEquals(23, tShortCharHashMap0.capacity());
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortCharHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - true
   */

  @Test
  public void test15()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      tShortCharHashMap0.adjustOrPutValue((short)1, '^', '!');
      boolean boolean0 = tShortCharHashMap0.isEmpty();
      assertEquals(1, tShortCharHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortCharHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - false
   */

  @Test
  public void test16()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      boolean boolean0 = tShortCharHashMap0.isEmpty();
      assertEquals(23, tShortCharHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortCharHashMap.remove(S)C: I14 Branch 46 IFLT L276 - true
   */

  @Test
  public void test17()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      char char0 = tShortCharHashMap0.remove((short)0);
      assertEquals(23, tShortCharHashMap0.capacity());
      assertEquals(0, tShortCharHashMap0.size());
      assertEquals('\u0000', char0);
  }

  //Test case number: 18
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.keys()[S: I34 Branch 48 IF_ICMPNE L304 - false
   * 2 gnu.trove.map.hash.TShortCharHashMap.keys()[S: I27 Branch 47 IFLE L303 - true
   * 3 gnu.trove.map.hash.TShortCharHashMap.keys()[S: I27 Branch 47 IFLE L303 - false
   * 4 gnu.trove.map.hash.TShortCharHashMap.keys()[S: I34 Branch 48 IF_ICMPNE L304 - true
   */

  @Test
  public void test18()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      tShortCharHashMap0.adjustOrPutValue((short) (-1489), 'T', 'T');
      tShortCharHashMap0.keys();
      assertEquals("{-1489=T}", tShortCharHashMap0.toString());
      assertEquals(23, tShortCharHashMap0.capacity());
  }

  //Test case number: 19
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.keys([S)[S: I10 Branch 49 IF_ICMPGE L315 - true
   * 2 gnu.trove.map.hash.TShortCharHashMap.keys([S)[S: I37 Branch 50 IFLE L322 - true
   * 3 gnu.trove.map.hash.TShortCharHashMap.keys([S)[S: I37 Branch 50 IFLE L322 - false
   * 4 gnu.trove.map.hash.TShortCharHashMap.keys([S)[S: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test19()  throws Throwable  {
      short[] shortArray0 = new short[6];
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap((int) (short)0);
      short[] shortArray1 = tShortCharHashMap0.keys(shortArray0);
      assertNotNull(shortArray1);
      assertSame(shortArray1, shortArray0);
  }

  //Test case number: 20
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.keys([S)[S: I10 Branch 49 IF_ICMPGE L315 - false
   * 2 gnu.trove.map.hash.TShortCharHashMap.keys([S)[S: I44 Branch 51 IF_ICMPNE L323 - false
   * 3 gnu.trove.map.hash.TShortCharHashMap.keys([S)[S: I37 Branch 50 IFLE L322 - true
   * 4 gnu.trove.map.hash.TShortCharHashMap.keys([S)[S: I37 Branch 50 IFLE L322 - false
   * 5 gnu.trove.map.hash.TShortCharHashMap.keys([S)[S: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test20()  throws Throwable  {
      short[] shortArray0 = new short[6];
      shortArray0[1] = (short) (-1006);
      shortArray0[2] = (short)1933;
      char[] charArray0 = new char[4];
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap(shortArray0, charArray0);
      short[] shortArray1 = new short[2];
      short[] shortArray2 = tShortCharHashMap0.keys(shortArray1);
      assertEquals("{1933=\u0000, -1006=\u0000, 0=\u0000}", tShortCharHashMap0.toString());
      assertEquals(3, tShortCharHashMap0.size());
      assertNotNull(shortArray2);
      assertNotSame(shortArray2, shortArray1);
  }

  //Test case number: 21
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.values()[C: I34 Branch 53 IF_ICMPNE L344 - false
   * 2 gnu.trove.map.hash.TShortCharHashMap.values()[C: I27 Branch 52 IFLE L343 - true
   * 3 gnu.trove.map.hash.TShortCharHashMap.values()[C: I27 Branch 52 IFLE L343 - false
   * 4 gnu.trove.map.hash.TShortCharHashMap.values()[C: I34 Branch 53 IF_ICMPNE L344 - true
   */

  @Test
  public void test21()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      tShortCharHashMap0.adjustOrPutValue((short) (-1489), 'T', 'T');
      tShortCharHashMap0.values();
      assertEquals("{-1489=T}", tShortCharHashMap0.toString());
      assertEquals(false, tShortCharHashMap0.isEmpty());
  }

  //Test case number: 22
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.values([C)[C: I10 Branch 54 IF_ICMPGE L355 - true
   * 2 gnu.trove.map.hash.TShortCharHashMap.values([C)[C: I37 Branch 55 IFLE L362 - true
   * 3 gnu.trove.map.hash.TShortCharHashMap.values([C)[C: I37 Branch 55 IFLE L362 - false
   * 4 gnu.trove.map.hash.TShortCharHashMap.values([C)[C: I44 Branch 56 IF_ICMPNE L363 - true
   */

  @Test
  public void test22()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap(959);
      char[] charArray0 = new char[1];
      char[] charArray1 = tShortCharHashMap0.values(charArray0);
      assertEquals(2081, tShortCharHashMap0.capacity());
      assertNotNull(charArray1);
      assertSame(charArray1, charArray0);
  }

  //Test case number: 23
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.values([C)[C: I10 Branch 54 IF_ICMPGE L355 - false
   * 2 gnu.trove.map.hash.TShortCharHashMap.values([C)[C: I44 Branch 56 IF_ICMPNE L363 - false
   * 3 gnu.trove.map.hash.TShortCharHashMap.values([C)[C: I37 Branch 55 IFLE L362 - true
   * 4 gnu.trove.map.hash.TShortCharHashMap.values([C)[C: I37 Branch 55 IFLE L362 - false
   * 5 gnu.trove.map.hash.TShortCharHashMap.values([C)[C: I44 Branch 56 IF_ICMPNE L363 - true
   * 6 gnu.trove.map.hash.TShortCharHashMap.values()[C: I27 Branch 52 IFLE L343 - true
   * 7 gnu.trove.map.hash.TShortCharHashMap.values()[C: I27 Branch 52 IFLE L343 - false
   * 8 gnu.trove.map.hash.TShortCharHashMap.values()[C: I34 Branch 53 IF_ICMPNE L344 - true
   * 9 gnu.trove.map.hash.TShortCharHashMap.putIfAbsent(SC)C: I9 Branch 39 IFGE L205 - true
   */

  @Test
  public void test23()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      char[] charArray0 = tShortCharHashMap0.values();
      tShortCharHashMap0.putIfAbsent((short) (-602), 'q');
      tShortCharHashMap0.values(charArray0);
      assertEquals("{-602=q}", tShortCharHashMap0.toString());
      assertEquals(false, tShortCharHashMap0.isEmpty());
  }

  //Test case number: 24
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.containsValue(C)Z: I25 Branch 58 IF_ICMPNE L377 - false
   * 2 gnu.trove.map.hash.TShortCharHashMap.containsValue(C)Z: I30 Branch 59 IF_ICMPNE L377 - true
   * 3 gnu.trove.map.hash.TShortCharHashMap.containsValue(C)Z: I18 Branch 57 IFLE L376 - true
   * 4 gnu.trove.map.hash.TShortCharHashMap.containsValue(C)Z: I18 Branch 57 IFLE L376 - false
   * 5 gnu.trove.map.hash.TShortCharHashMap.containsValue(C)Z: I25 Branch 58 IF_ICMPNE L377 - true
   */

  @Test
  public void test24()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      tShortCharHashMap0.putIfAbsent((short)0, 'w');
      boolean boolean0 = tShortCharHashMap0.containsValue('$');
      assertEquals(1, tShortCharHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 25
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.containsValue(C)Z: I30 Branch 59 IF_ICMPNE L377 - false
   * 2 gnu.trove.map.hash.TShortCharHashMap.containsValue(C)Z: I18 Branch 57 IFLE L376 - false
   * 3 gnu.trove.map.hash.TShortCharHashMap.containsValue(C)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 4 gnu.trove.map.hash.TShortCharHashMap.containsValue(C)Z: I25 Branch 58 IF_ICMPNE L377 - false
   */

  @Test
  public void test25()  throws Throwable  {
      short[] shortArray0 = new short[1];
      char[] charArray0 = new char[19];
      charArray0[0] = 'W';
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap(shortArray0, charArray0);
      boolean boolean0 = tShortCharHashMap0.containsValue('W');
      assertEquals("{0=W}", tShortCharHashMap0.toString());
      assertEquals(43, tShortCharHashMap0.capacity());
      assertEquals(true, boolean0);
      assertEquals(false, tShortCharHashMap0.isEmpty());
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: I18 Branch 60 IFLE L407 - true
   * 2 gnu.trove.map.hash.TShortCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TShortCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test26()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      boolean boolean0 = tShortCharHashMap0.forEachValue((TCharProcedure) null);
      assertEquals(23, tShortCharHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 27
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - false
   * 2 gnu.trove.map.hash.TShortCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TShortCharHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test27()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap((-542));
      tShortCharHashMap0.put((short)0, '4');
      // Undeclared exception!
      try {
        tShortCharHashMap0.forEachValue((TCharProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V: I18 Branch 66 IFLE L434 - true
   * 2 gnu.trove.map.hash.TShortCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V: I18 Branch 66 IFLE L434 - false
   * 3 gnu.trove.map.hash.TShortCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test28()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      tShortCharHashMap0.transformValues((TCharFunction) null);
      assertEquals(23, tShortCharHashMap0.capacity());
  }

  //Test case number: 29
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V: I25 Branch 67 IF_ICMPNE L435 - false
   * 2 gnu.trove.map.hash.TShortCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V: I18 Branch 66 IFLE L434 - false
   * 3 gnu.trove.map.hash.TShortCharHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test29()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      tShortCharHashMap0.adjustOrPutValue((short)1902, 'm', 'm');
      // Undeclared exception!
      try {
        tShortCharHashMap0.transformValues((TCharFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.retainEntries(Lgnu/trove/procedure/TShortCharProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - false
   * 2 gnu.trove.map.hash.TShortCharHashMap.retainEntries(Lgnu/trove/procedure/TShortCharProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TShortCharHashMap.retainEntries(Lgnu/trove/procedure/TShortCharProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      tShortCharHashMap0.adjustOrPutValue((short)1, '^', '!');
      // Undeclared exception!
      try {
        tShortCharHashMap0.retainEntries((TShortCharProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 31
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.adjustValue(SC)Z: I9 Branch 71 IFGE L477 - true
   * 2 gnu.trove.map.hash.TShortCharHashMap.increment(S)Z: root-Branch
   */

  @Test
  public void test31()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      tShortCharHashMap0.putIfAbsent((short)0, 'w');
      boolean boolean0 = tShortCharHashMap0.increment((short)0);
      assertEquals(false, tShortCharHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 32
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.adjustOrPutValue(SCC)C: I9 Branch 72 IFGE L491 - false
   * 2 gnu.trove.map.hash.TShortCharHashMap.adjustOrPutValue(SCC)C: I59 Branch 73 IFEQ L502 - true
   * 3 gnu.trove.map.hash.TShortCharHashMap.adjustOrPutValue(SCC)C: I9 Branch 72 IFGE L491 - true
   * 4 gnu.trove.map.hash.TShortCharHashMap.adjustOrPutValue(SCC)C: I59 Branch 73 IFEQ L502 - false
   */

  @Test
  public void test32()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      tShortCharHashMap0.adjustOrPutValue((short)1, '^', '!');
      char char0 = tShortCharHashMap0.adjustOrPutValue((short)1, '!', ')');
      assertEquals(false, tShortCharHashMap0.isEmpty());
      assertEquals('B', char0);
  }

  //Test case number: 33
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortCharHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - false
   */

  @Test
  public void test33()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      AbstractMap.SimpleEntry<Character, TShortCharHashMap> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Character, TShortCharHashMap>((Character) 'U', tShortCharHashMap0);
      boolean boolean0 = tShortCharHashMap0.equals((Object) abstractMap_SimpleEntry0);
      assertEquals(false, boolean0);
      assertEquals(23, tShortCharHashMap0.capacity());
  }

  //Test case number: 34
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.equals(Ljava/lang/Object;)Z: I84 Branch 78 IF_ICMPEQ L1200 - false
   * 2 gnu.trove.map.hash.TShortCharHashMap.equals(Ljava/lang/Object;)Z: I87 Branch 79 IF_ICMPEQ L1200 - false
   * 3 gnu.trove.map.hash.TShortCharHashMap.equals(Ljava/lang/Object;)Z: I90 Branch 80 IF_ICMPEQ L1200 - true
   * 4 gnu.trove.map.hash.TShortCharHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   */

  @Test
  public void test34()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap((-542));
      tShortCharHashMap0.put((short)0, '4');
      char[] charArray0 = new char[3];
      TShortCharHashMap tShortCharHashMap1 = new TShortCharHashMap(tShortCharHashMap0._set, charArray0);
      boolean boolean0 = tShortCharHashMap0.equals((Object) tShortCharHashMap1);
      assertEquals(false, tShortCharHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 35
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.equals(Ljava/lang/Object;)Z: I90 Branch 80 IF_ICMPEQ L1200 - false
   * 2 gnu.trove.map.hash.TShortCharHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 3 gnu.trove.map.hash.TShortCharHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 4 gnu.trove.map.hash.TShortCharHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 5 gnu.trove.map.hash.TShortCharHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 6 gnu.trove.map.hash.TShortCharHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 7 gnu.trove.map.hash.TShortCharHashMap.equals(Ljava/lang/Object;)Z: I84 Branch 78 IF_ICMPEQ L1200 - false
   * 8 gnu.trove.map.hash.TShortCharHashMap.equals(Ljava/lang/Object;)Z: I87 Branch 79 IF_ICMPEQ L1200 - false
   * 9 gnu.trove.map.hash.TShortCharHashMap.get(S)C: I9 Branch 44 IFGE L253 - true
   */

  @Test
  public void test35()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap((-542));
      tShortCharHashMap0.put((short)0, '4');
      char[] charArray0 = new char[3];
      charArray0[2] = 'D';
      TShortCharHashMap tShortCharHashMap1 = new TShortCharHashMap(tShortCharHashMap0._set, charArray0);
      boolean boolean0 = tShortCharHashMap0.equals((Object) tShortCharHashMap1);
      assertEquals(1, tShortCharHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 36
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - false
   * 2 gnu.trove.map.hash.TShortCharHashMap.<init>(I)V: root-Branch
   * 3 gnu.trove.map.hash.TShortCharHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 4 gnu.trove.map.hash.TShortCharHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 5 gnu.trove.map.hash.TShortCharHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   */

  @Test
  public void test36()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap((-542));
      tShortCharHashMap0.put((short)0, '4');
      int int0 = tShortCharHashMap0.hashCode();
      assertEquals("{0=4}", tShortCharHashMap0.toString());
      assertEquals(52, int0);
  }

  //Test case number: 37
  /*
   * 14 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap$1.execute(SC)Z: I4 Branch 115 IFEQ L1233 - true
   * 2 gnu.trove.map.hash.TShortCharHashMap.toString()Ljava/lang/String;: root-Branch
   * 3 gnu.trove.map.hash.TShortCharHashMap.put(SC)C: root-Branch
   * 4 gnu.trove.map.hash.TShortCharHashMap.<init>([S[C)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 5 gnu.trove.map.hash.TShortCharHashMap.<init>([S[C)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 6 gnu.trove.map.hash.TShortCharHashMap.forEachEntry(Lgnu/trove/procedure/TShortCharProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 7 gnu.trove.map.hash.TShortCharHashMap.forEachEntry(Lgnu/trove/procedure/TShortCharProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 8 gnu.trove.map.hash.TShortCharHashMap.forEachEntry(Lgnu/trove/procedure/TShortCharProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 9 gnu.trove.map.hash.TShortCharHashMap.forEachEntry(Lgnu/trove/procedure/TShortCharProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 10 gnu.trove.map.hash.TShortCharHashMap.forEachEntry(Lgnu/trove/procedure/TShortCharProcedure;)Z: I39 Branch 65 IFNE L422 - true
   * 11 gnu.trove.map.hash.TShortCharHashMap.doPut(SCI)C: I12 Branch 40 IFGE L214 - false
   * 12 gnu.trove.map.hash.TShortCharHashMap.doPut(SCI)C: I41 Branch 41 IFEQ L221 - true
   * 13 gnu.trove.map.hash.TShortCharHashMap$1.<init>(Lgnu/trove/map/hash/TShortCharHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 14 gnu.trove.map.hash.TShortCharHashMap$1.execute(SC)Z: I4 Branch 115 IFEQ L1233 - false
   */

  @Test
  public void test37()  throws Throwable  {
      short[] shortArray0 = new short[6];
      shortArray0[1] = (short)307;
      char[] charArray0 = new char[4];
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap(shortArray0, charArray0);
      String string0 = tShortCharHashMap0.toString();
      assertEquals(2, tShortCharHashMap0.size());
      assertEquals(17, tShortCharHashMap0.capacity());
      assertNotNull(string0);
      assertEquals("{307=\u0000, 0=\u0000}", string0);
  }

  //Test case number: 38
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TShortCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - false
   * 2 gnu.trove.map.hash.TShortCharHashMap.setUp(I)I: root-Branch
   * 3 gnu.trove.map.hash.TShortCharHashMap.<init>()V: root-Branch
   * 4 gnu.trove.map.hash.TShortCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - true
   * 5 gnu.trove.map.hash.TShortCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - false
   * 6 gnu.trove.map.hash.TShortCharHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - true
   * 7 gnu.trove.map.hash.TShortCharHashMap.putIfAbsent(SC)C: I9 Branch 39 IFGE L205 - true
   * 8 gnu.trove.map.hash.TShortCharHashMap.doPut(SCI)C: I12 Branch 40 IFGE L214 - true
   * 9 gnu.trove.map.hash.TShortCharHashMap.doPut(SCI)C: I41 Branch 41 IFEQ L221 - false
   */

  @Test
  public void test38()  throws Throwable  {
      TShortCharHashMap tShortCharHashMap0 = new TShortCharHashMap();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PrintStream printStream0 = new PrintStream((OutputStream) pipedOutputStream0, false);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) printStream0);
      tShortCharHashMap0.putIfAbsent((short)0, 'w');
      tShortCharHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(false, tShortCharHashMap0.isEmpty());
      assertEquals("{0=w}", tShortCharHashMap0.toString());
  }
}

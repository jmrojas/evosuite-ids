/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongCharMap;
import gnu.trove.map.TLongCharMap;
import gnu.trove.map.hash.TLongCharHashMap;
import java.util.Locale;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableLongCharMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      long[] longArray0 = new long[2];
      long long0 = 217L;
      longArray0[0] = long0;
      long long1 = (-1L);
      longArray0[1] = long1;
      char[] charArray0 = new char[8];
      char char0 = 'B';
      charArray0[0] = char0;
      char char1 = 'e';
      charArray0[1] = char1;
      char char2 = ',';
      charArray0[2] = char2;
      char char3 = '3';
      charArray0[3] = char3;
      char char4 = 'K';
      charArray0[4] = char4;
      char char5 = '4';
      charArray0[5] = char5;
      char char6 = '%';
      charArray0[6] = char6;
      char char7 = 'p';
      charArray0[7] = char7;
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(longArray0, charArray0);
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap0 = new TUnmodifiableLongCharMap((TLongCharMap) tLongCharHashMap0);
      char[] charArray1 = new char[4];
      charArray1[0] = char3;
      charArray1[1] = char1;
      charArray1[2] = char1;
      char char8 = 'Y';
      charArray1[3] = char8;
      char[] charArray2 = tUnmodifiableLongCharMap0.values(charArray1);
      assertSame(charArray2, charArray1);
  }

  @Test
  public void test1()  throws Throwable  {
      long[] longArray0 = new long[6];
      long long0 = 0L;
      longArray0[0] = long0;
      long long1 = 0L;
      longArray0[1] = long1;
      long long2 = 9223372036854775807L;
      longArray0[2] = long2;
      long long3 = 0L;
      longArray0[3] = long3;
      long long4 = (-1L);
      longArray0[4] = long4;
      long long5 = 9223372036854775807L;
      longArray0[5] = long5;
      char[] charArray0 = new char[10];
      char char0 = ']';
      charArray0[0] = char0;
      char char1 = 'O';
      charArray0[1] = char1;
      char char2 = '7';
      charArray0[2] = char2;
      char char3 = 'H';
      charArray0[3] = char3;
      char char4 = '<';
      charArray0[4] = char4;
      char char5 = 'i';
      charArray0[5] = char5;
      char char6 = 'R';
      charArray0[6] = char6;
      char char7 = 'A';
      charArray0[7] = char7;
      char char8 = 'c';
      charArray0[8] = char8;
      char char9 = 'p';
      charArray0[9] = char9;
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(longArray0, charArray0);
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap0 = new TUnmodifiableLongCharMap((TLongCharMap) tLongCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableLongCharMap0.putAll((TLongCharMap) tLongCharHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      long[] longArray0 = new long[10];
      long long0 = (-428L);
      longArray0[0] = long0;
      long long1 = (-1945L);
      longArray0[1] = long1;
      long long2 = 0L;
      longArray0[2] = long2;
      long long3 = 9L;
      longArray0[3] = long3;
      long long4 = 0L;
      longArray0[4] = long4;
      long long5 = (-1988L);
      longArray0[5] = long5;
      long long6 = 1439L;
      longArray0[6] = long6;
      long long7 = (-1L);
      longArray0[7] = long7;
      long long8 = 9223372036854775807L;
      longArray0[8] = long8;
      long long9 = (-9223372036854775808L);
      longArray0[9] = long9;
      char[] charArray0 = new char[6];
      char char0 = 'm';
      charArray0[0] = char0;
      char char1 = 'C';
      charArray0[1] = char1;
      char char2 = 'd';
      charArray0[2] = char2;
      char char3 = '.';
      charArray0[3] = char3;
      char char4 = 'J';
      charArray0[4] = char4;
      char char5 = '~';
      charArray0[5] = char5;
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(longArray0, charArray0);
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap0 = new TUnmodifiableLongCharMap((TLongCharMap) tLongCharHashMap0);
      assertEquals("{-1988=~, -428=m, -1945=C, 9=., 0=J}", tUnmodifiableLongCharMap0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap();
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap0 = new TUnmodifiableLongCharMap((TLongCharMap) tLongCharHashMap0);
      tUnmodifiableLongCharMap0.getNoEntryKey();
      // Undeclared exception!
      try {
        tUnmodifiableLongCharMap0.putAll((TLongCharMap) tLongCharHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TLongCharMap tLongCharMap0 = null;
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap0 = null;
      try {
        tUnmodifiableLongCharMap0 = new TUnmodifiableLongCharMap(tLongCharMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      long[] longArray0 = new long[5];
      long long0 = 367L;
      longArray0[0] = long0;
      long long1 = 737L;
      longArray0[1] = long1;
      long long2 = 0L;
      longArray0[2] = long2;
      long long3 = (-728L);
      longArray0[3] = long3;
      long long4 = 588L;
      longArray0[4] = long4;
      char[] charArray0 = new char[9];
      char char0 = 'x';
      charArray0[0] = char0;
      char char1 = '7';
      charArray0[1] = char1;
      char char2 = '=';
      charArray0[2] = char2;
      char char3 = 'P';
      float float0 = 0.0F;
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap((int) char0, float0);
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap0 = new TUnmodifiableLongCharMap((TLongCharMap) tLongCharHashMap0);
      tUnmodifiableLongCharMap0.containsKey(long2);
      charArray0[3] = char3;
      char char4 = '?';
      charArray0[4] = char4;
      char char5 = 'P';
      charArray0[5] = char5;
      char char6 = '>';
      charArray0[6] = char6;
      char char7 = '^';
      charArray0[7] = char7;
      char char8 = ')';
      TLongCharMap tLongCharMap0 = null;
      TLongCharHashMap tLongCharHashMap1 = null;
      try {
        tLongCharHashMap1 = new TLongCharHashMap(tLongCharMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap();
      float float0 = 1986.1425F;
      tLongCharHashMap0.setAutoCompactionFactor(float0);
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap0 = new TUnmodifiableLongCharMap((TLongCharMap) tLongCharHashMap0);
      long long0 = (-382L);
      tUnmodifiableLongCharMap0.get(long0);
      Locale locale0 = Locale.KOREAN;
      String string0 = tUnmodifiableLongCharMap0.toString();
      assertNotNull(string0);
      
      char char0 = '-';
      tUnmodifiableLongCharMap0.containsValue(char0);
      Locale locale1 = Locale.ENGLISH;
      String string1 = locale0.getDisplayCountry(locale1);
      tUnmodifiableLongCharMap0.iterator();
      boolean boolean0 = tUnmodifiableLongCharMap0.equals((Object) string1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = (-1592);
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(int0, int0);
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap0 = new TUnmodifiableLongCharMap((TLongCharMap) tLongCharHashMap0);
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap1 = new TUnmodifiableLongCharMap((TLongCharMap) tUnmodifiableLongCharMap0);
      tUnmodifiableLongCharMap1.toString();
      TLongCharHashMap tLongCharHashMap1 = new TLongCharHashMap();
      tLongCharHashMap1.compact();
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap2 = new TUnmodifiableLongCharMap((TLongCharMap) tLongCharHashMap1);
      tUnmodifiableLongCharMap2.getNoEntryKey();
      tLongCharHashMap1.getNoEntryKey();
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap3 = new TUnmodifiableLongCharMap((TLongCharMap) tLongCharHashMap1);
      long long0 = 0L;
      char char0 = 'X';
      // Undeclared exception!
      try {
        tUnmodifiableLongCharMap3.putIfAbsent(long0, char0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      long[] longArray0 = new long[6];
      long long0 = (-1341L);
      longArray0[0] = long0;
      long long1 = 988L;
      longArray0[1] = long1;
      long long2 = 127L;
      longArray0[2] = long2;
      long long3 = 0L;
      longArray0[3] = long3;
      long long4 = (-829L);
      longArray0[4] = long4;
      long long5 = 0L;
      longArray0[5] = long5;
      char[] charArray0 = new char[2];
      char char0 = '.';
      charArray0[0] = char0;
      char char1 = '9';
      charArray0[1] = char1;
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(longArray0, charArray0);
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap0 = new TUnmodifiableLongCharMap((TLongCharMap) tLongCharHashMap0);
      TLongCharMap tLongCharMap0 = null;
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap1 = null;
      try {
        tUnmodifiableLongCharMap1 = new TUnmodifiableLongCharMap(tLongCharMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      long[] longArray0 = new long[8];
      long long0 = (-1410L);
      longArray0[0] = long0;
      long long1 = 2029L;
      longArray0[1] = long1;
      long long2 = 42L;
      longArray0[2] = long2;
      long long3 = (-485L);
      longArray0[3] = long3;
      long long4 = 0L;
      longArray0[4] = long4;
      long long5 = 414L;
      longArray0[5] = long5;
      long long6 = 9223372036854775807L;
      longArray0[6] = long6;
      long long7 = 1L;
      longArray0[7] = long7;
      char[] charArray0 = new char[8];
      char char0 = 't';
      charArray0[0] = char0;
      char char1 = 'y';
      charArray0[1] = char1;
      char char2 = 'L';
      charArray0[2] = char2;
      char char3 = 'O';
      charArray0[3] = char3;
      char char4 = 'R';
      charArray0[4] = char4;
      char char5 = 'M';
      charArray0[5] = char5;
      char char6 = 'F';
      charArray0[6] = char6;
      char char7 = 'K';
      charArray0[7] = char7;
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(longArray0, charArray0);
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap0 = new TUnmodifiableLongCharMap((TLongCharMap) tLongCharHashMap0);
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap1 = new TUnmodifiableLongCharMap((TLongCharMap) tUnmodifiableLongCharMap0);
      TUnmodifiableCharCollection tUnmodifiableCharCollection0 = (TUnmodifiableCharCollection)tUnmodifiableLongCharMap1.valueCollection();
      assertEquals('\u0000', tUnmodifiableCharCollection0.getNoEntryValue());
  }

  @Test
  public void test10()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap();
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap0 = new TUnmodifiableLongCharMap((TLongCharMap) tLongCharHashMap0);
      tUnmodifiableLongCharMap0.getNoEntryValue();
      int int0 = 1;
      TLongCharMap tLongCharMap0 = null;
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap1 = null;
      try {
        tUnmodifiableLongCharMap1 = new TUnmodifiableLongCharMap(tLongCharMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      long[] longArray0 = new long[4];
      long long0 = 0L;
      longArray0[0] = long0;
      long long1 = (-1852L);
      longArray0[1] = long1;
      long long2 = 1052L;
      longArray0[2] = long2;
      long long3 = 0L;
      longArray0[3] = long3;
      char[] charArray0 = new char[6];
      char char0 = '-';
      charArray0[0] = char0;
      char char1 = ':';
      charArray0[1] = char1;
      char char2 = '@';
      charArray0[2] = char2;
      char char3 = 't';
      charArray0[3] = char3;
      char char4 = '^';
      charArray0[4] = char4;
      char char5 = 'y';
      charArray0[5] = char5;
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(longArray0, charArray0);
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap0 = new TUnmodifiableLongCharMap((TLongCharMap) tLongCharHashMap0);
      String string0 = tUnmodifiableLongCharMap0.toString();
      assertEquals("{-1852=:, 1052=@, 0=t}", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = (-1);
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap();
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap0 = new TUnmodifiableLongCharMap((TLongCharMap) tLongCharHashMap0);
      boolean boolean0 = tUnmodifiableLongCharMap0.isEmpty();
      assertEquals(true, boolean0);
      
      TLongCharHashMap tLongCharHashMap1 = new TLongCharHashMap();
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap1 = new TUnmodifiableLongCharMap((TLongCharMap) tLongCharHashMap1);
      // Undeclared exception!
      try {
        tUnmodifiableLongCharMap1.remove((long) int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap();
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap0 = new TUnmodifiableLongCharMap((TLongCharMap) tLongCharHashMap0);
      char char0 = '\'';
      // Undeclared exception!
      try {
        tUnmodifiableLongCharMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = (-1738);
      TLongCharMap tLongCharMap0 = null;
      TLongCharHashMap tLongCharHashMap0 = null;
      try {
        tLongCharHashMap0 = new TLongCharHashMap(tLongCharMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap();
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap0 = new TUnmodifiableLongCharMap((TLongCharMap) tLongCharHashMap0);
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap1 = new TUnmodifiableLongCharMap((TLongCharMap) tUnmodifiableLongCharMap0);
      tUnmodifiableLongCharMap1.iterator();
      TLongCharHashMap tLongCharHashMap1 = new TLongCharHashMap();
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap2 = new TUnmodifiableLongCharMap((TLongCharMap) tLongCharHashMap1);
      float float0 = 805.6134F;
      tLongCharHashMap1.setAutoCompactionFactor(float0);
      assertTrue(tLongCharHashMap1.equals(tLongCharHashMap0));
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = 948;
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(int0);
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap0 = new TUnmodifiableLongCharMap((TLongCharMap) tLongCharHashMap0);
      long long0 = tUnmodifiableLongCharMap0.getNoEntryKey();
      assertEquals(0L, long0);
  }

  @Test
  public void test17()  throws Throwable  {
      long[] longArray0 = new long[1];
      long long0 = 1L;
      longArray0[0] = long0;
      char[] charArray0 = new char[2];
      char char0 = '+';
      charArray0[0] = char0;
      char char1 = '[';
      charArray0[1] = char1;
      TLongCharHashMap tLongCharHashMap0 = new TLongCharHashMap(longArray0, charArray0);
      TUnmodifiableLongCharMap tUnmodifiableLongCharMap0 = new TUnmodifiableLongCharMap((TLongCharMap) tLongCharHashMap0);
      assertEquals(1, tUnmodifiableLongCharMap0.size());
  }
}

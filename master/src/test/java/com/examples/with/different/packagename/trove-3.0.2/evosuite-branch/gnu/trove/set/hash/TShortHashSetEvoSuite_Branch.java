/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.set.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TShortCollection;
import gnu.trove.impl.sync.TSynchronizedShortSet;
import gnu.trove.list.array.TShortArrayList;
import gnu.trove.set.TShortSet;
import gnu.trove.set.hash.TShortHashSet;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.Collection;
import java.util.LinkedList;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TShortHashSetEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 17 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet$TShortHashIterator.next()S: root-Branch
   * 2 gnu.trove.set.hash.TShortHashSet$TShortHashIterator.<init>(Lgnu/trove/set/hash/TShortHashSet;Lgnu/trove/impl/hash/TShortHash;)V: root-Branch
   * 3 gnu.trove.set.hash.TShortHashSet.<init>(Ljava/util/Collection;)V: root-Branch
   * 4 gnu.trove.set.hash.TShortHashSet.iterator()Lgnu/trove/iterator/TShortIterator;: root-Branch
   * 5 gnu.trove.set.hash.TShortHashSet.<init>([S)V: root-Branch
   * 6 gnu.trove.set.hash.TShortHashSet.<init>(I)V: root-Branch
   * 7 gnu.trove.set.hash.TShortHashSet.add(S)Z: I9 Branch 9 IFGE L196 - true
   * 8 gnu.trove.set.hash.TShortHashSet.add(S)Z: I9 Branch 9 IFGE L196 - false
   * 9 gnu.trove.set.hash.TShortHashSet.addAll(Ljava/util/Collection;)Z: I12 Branch 18 IFEQ L261 - true
   * 10 gnu.trove.set.hash.TShortHashSet.addAll([S)Z: I12 Branch 22 IFLE L288 - true
   * 11 gnu.trove.set.hash.TShortHashSet.addAll([S)Z: I12 Branch 22 IFLE L288 - false
   * 12 gnu.trove.set.hash.TShortHashSet.addAll([S)Z: I20 Branch 23 IFEQ L289 - true
   * 13 gnu.trove.set.hash.TShortHashSet.addAll([S)Z: I20 Branch 23 IFEQ L289 - false
   * 14 gnu.trove.set.hash.TShortHashSet.retainAll(Lgnu/trove/TShortCollection;)Z: I4 Branch 26 IF_ACMPNE L314 - true
   * 15 gnu.trove.set.hash.TShortHashSet.retainAll(Lgnu/trove/TShortCollection;)Z: I22 Branch 27 IFEQ L319 - true
   * 16 gnu.trove.set.hash.TShortHashSet.retainAll(Lgnu/trove/TShortCollection;)Z: I22 Branch 27 IFEQ L319 - false
   * 17 gnu.trove.set.hash.TShortHashSet.retainAll(Lgnu/trove/TShortCollection;)Z: I29 Branch 28 IFNE L320 - false
   */

  @Test
  public void test0()  throws Throwable  {
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      TShortHashSet tShortHashSet0 = new TShortHashSet((Collection<? extends Short>) linkedList0);
      TShortHashSet tShortHashSet1 = new TShortHashSet(tShortHashSet0._set);
      boolean boolean0 = tShortHashSet1.retainAll((TShortCollection) tShortHashSet0);
      assertEquals(true, boolean0);
      assertEquals(true, tShortHashSet1.isEmpty());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.set.hash.TShortHashSet.<init>(IFS)V: I10 Branch 1 IFEQ L101 - true
   */

  @Test
  public void test1()  throws Throwable  {
      TShortHashSet tShortHashSet0 = new TShortHashSet((int) (short)0, (float) (short)0, (short)0);
      assertEquals(true, tShortHashSet0.isEmpty());
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.<init>(Lgnu/trove/TShortCollection;)V: I12 Branch 2 IFEQ L127 - true
   * 2 gnu.trove.set.hash.TShortHashSet.addAll(Lgnu/trove/TShortCollection;)Z: I13 Branch 20 IFEQ L275 - true
   * 3 gnu.trove.set.hash.TShortHashSet.addAll(Lgnu/trove/TShortCollection;)Z: I13 Branch 20 IFEQ L275 - false
   * 4 gnu.trove.set.hash.TShortHashSet.addAll(Lgnu/trove/TShortCollection;)Z: I24 Branch 21 IFEQ L277 - true
   * 5 gnu.trove.set.hash.TShortHashSet.addAll(Lgnu/trove/TShortCollection;)Z: I24 Branch 21 IFEQ L277 - false
   */

  @Test
  public void test2()  throws Throwable  {
      short[] shortArray0 = new short[2];
      TShortHashSet tShortHashSet0 = new TShortHashSet(shortArray0);
      TShortArrayList tShortArrayList0 = new TShortArrayList(tShortHashSet0._set);
      TShortHashSet tShortHashSet1 = new TShortHashSet((TShortCollection) tShortArrayList0);
      assertTrue(tShortHashSet0.equals(tShortHashSet1));
      assertEquals(false, tShortHashSet0.isEmpty());
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.<init>(Lgnu/trove/TShortCollection;)V: I12 Branch 2 IFEQ L127 - false
   * 2 gnu.trove.set.hash.TShortHashSet.<init>(Lgnu/trove/TShortCollection;)V: I34 Branch 3 IFEQ L132 - false
   * 3 gnu.trove.set.hash.TShortHashSet.<init>(IFS)V: I10 Branch 1 IFEQ L101 - false
   */

//   @Test
//   public void test3()  throws Throwable  {
//       TShortHashSet tShortHashSet0 = new TShortHashSet((int) (short) (-636), (-1022.88043F), (short) (-636));
//       TShortHashSet tShortHashSet1 = new TShortHashSet((TShortCollection) tShortHashSet0);
//       assertEquals(-636, tShortHashSet1.getNoEntryValue());
//       assertEquals(3, tShortHashSet1.capacity());
//   }

  //Test case number: 4
  /*
   * 5 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.toArray()[S: I34 Branch 5 IF_ICMPNE L166 - false
   * 2 gnu.trove.set.hash.TShortHashSet.toArray()[S: I27 Branch 4 IFLE L165 - true
   * 3 gnu.trove.set.hash.TShortHashSet.toArray()[S: I27 Branch 4 IFLE L165 - false
   * 4 gnu.trove.set.hash.TShortHashSet.toArray()[S: I34 Branch 5 IF_ICMPNE L166 - true
   * 5 gnu.trove.set.hash.TShortHashSet.<init>(IF)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TShortHashSet tShortHashSet0 = new TShortHashSet(200019221, 200019221);
      tShortHashSet0.addAll(tShortHashSet0._set);
      tShortHashSet0.toArray();
      assertEquals("{0}", tShortHashSet0.toString());
      assertEquals(1, tShortHashSet0.size());
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.toArray([S)[S: I45 Branch 8 IF_ICMPLE L185 - true
   * 2 gnu.trove.set.hash.TShortHashSet.toArray([S)[S: I21 Branch 6 IFLE L179 - true
   * 3 gnu.trove.set.hash.TShortHashSet.toArray([S)[S: I21 Branch 6 IFLE L179 - false
   * 4 gnu.trove.set.hash.TShortHashSet.toArray([S)[S: I28 Branch 7 IF_ICMPNE L180 - true
   * 5 gnu.trove.set.hash.TShortHashSet.toArray([S)[S: I28 Branch 7 IF_ICMPNE L180 - false
   */

  @Test
  public void test5()  throws Throwable  {
      short[] shortArray0 = new short[2];
      shortArray0[1] = (short)246;
      TShortHashSet tShortHashSet0 = new TShortHashSet(shortArray0);
      short[] shortArray1 = tShortHashSet0.toArray(shortArray0);
      assertNotNull(shortArray1);
      assertEquals("{246,0}", tShortHashSet0.toString());
      assertSame(shortArray0, shortArray1);
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.remove(S)Z: I9 Branch 10 IFLT L209 - true
   * 2 gnu.trove.set.hash.TShortHashSet.removeAll(Ljava/util/Collection;)Z: I12 Branch 32 IFEQ L349 - true
   * 3 gnu.trove.set.hash.TShortHashSet.removeAll(Ljava/util/Collection;)Z: I12 Branch 32 IFEQ L349 - false
   * 4 gnu.trove.set.hash.TShortHashSet.removeAll(Ljava/util/Collection;)Z: I20 Branch 33 IFEQ L350 - false
   * 5 gnu.trove.set.hash.TShortHashSet.removeAll(Ljava/util/Collection;)Z: I32 Branch 34 IFEQ L352 - true
   */

  @Test
  public void test6()  throws Throwable  {
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      TShortHashSet tShortHashSet0 = new TShortHashSet((Collection<? extends Short>) linkedList0);
      linkedList0.offer((Short) (short)1);
      boolean boolean0 = tShortHashSet0.removeAll((Collection<?>) linkedList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.remove(S)Z: I9 Branch 10 IFLT L209 - false
   * 2 gnu.trove.set.hash.TShortHashSet.removeAll(Ljava/util/Collection;)Z: I32 Branch 34 IFEQ L352 - false
   * 3 gnu.trove.set.hash.TShortHashSet.removeAll(Ljava/util/Collection;)Z: I20 Branch 33 IFEQ L350 - false
   */

  @Test
  public void test7()  throws Throwable  {
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      TShortHashSet tShortHashSet0 = new TShortHashSet((Collection<? extends Short>) linkedList0);
      linkedList0.offer((Short) (short)1);
      tShortHashSet0.add((short)1);
      boolean boolean0 = tShortHashSet0.removeAll((Collection<?>) linkedList0);
      assertEquals(0, tShortHashSet0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.containsAll(Ljava/util/Collection;)Z: I8 Branch 11 IFEQ L219 - false
   * 2 gnu.trove.set.hash.TShortHashSet.containsAll(Ljava/util/Collection;)Z: I16 Branch 12 IFEQ L220 - false
   * 3 gnu.trove.set.hash.TShortHashSet.containsAll(Ljava/util/Collection;)Z: I28 Branch 13 IFNE L222 - false
   */

  @Test
  public void test8()  throws Throwable  {
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      TShortHashSet tShortHashSet0 = new TShortHashSet((Collection<? extends Short>) linkedList0);
      linkedList0.offer((Short) (short)1);
      boolean boolean0 = tShortHashSet0.containsAll((Collection<?>) linkedList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.set.hash.TShortHashSet.containsAll(Ljava/util/Collection;)Z: I16 Branch 12 IFEQ L220 - true
   */

  @Test
  public void test9()  throws Throwable  {
      TShortHashSet tShortHashSet0 = new TShortHashSet((-1824));
      LinkedList<TShortHashSet> linkedList0 = new LinkedList<TShortHashSet>();
      linkedList0.add(tShortHashSet0);
      boolean boolean0 = tShortHashSet0.containsAll((Collection<?>) linkedList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 10
  /*
   * 4 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.containsAll(Ljava/util/Collection;)Z: I28 Branch 13 IFNE L222 - true
   * 2 gnu.trove.set.hash.TShortHashSet.containsAll(Ljava/util/Collection;)Z: I8 Branch 11 IFEQ L219 - true
   * 3 gnu.trove.set.hash.TShortHashSet.containsAll(Ljava/util/Collection;)Z: I8 Branch 11 IFEQ L219 - false
   * 4 gnu.trove.set.hash.TShortHashSet.containsAll(Ljava/util/Collection;)Z: I16 Branch 12 IFEQ L220 - false
   */

  @Test
  public void test10()  throws Throwable  {
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      TShortHashSet tShortHashSet0 = new TShortHashSet((Collection<? extends Short>) linkedList0);
      linkedList0.offer((Short) (short)1);
      tShortHashSet0.add((short)1);
      boolean boolean0 = tShortHashSet0.containsAll((Collection<?>) linkedList0);
      assertEquals(1, tShortHashSet0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 11
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.containsAll(Lgnu/trove/TShortCollection;)Z: I9 Branch 14 IFEQ L237 - true
   * 2 gnu.trove.set.hash.TShortHashSet.containsAll(Lgnu/trove/TShortCollection;)Z: I9 Branch 14 IFEQ L237 - false
   * 3 gnu.trove.set.hash.TShortHashSet.containsAll(Lgnu/trove/TShortCollection;)Z: I20 Branch 15 IFNE L239 - true
   */

  @Test
  public void test11()  throws Throwable  {
      short[] shortArray0 = new short[14];
      TShortHashSet tShortHashSet0 = new TShortHashSet(shortArray0);
      boolean boolean0 = tShortHashSet0.containsAll((TShortCollection) tShortHashSet0);
      assertEquals("{0}", tShortHashSet0.toString());
      assertEquals(true, boolean0);
      assertEquals(1, tShortHashSet0.size());
  }

  //Test case number: 12
  /*
   * 2 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.containsAll(Lgnu/trove/TShortCollection;)Z: I20 Branch 15 IFNE L239 - false
   * 2 gnu.trove.set.hash.TShortHashSet.containsAll(Lgnu/trove/TShortCollection;)Z: I9 Branch 14 IFEQ L237 - false
   */

  @Test
  public void test12()  throws Throwable  {
      TShortHashSet tShortHashSet0 = new TShortHashSet(200019221, 200019221);
      TShortArrayList tShortArrayList0 = TShortArrayList.wrap(tShortHashSet0._set, (short) (-1));
      boolean boolean0 = tShortHashSet0.containsAll((TShortCollection) tShortArrayList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.containsAll([S)Z: I8 Branch 16 IFLE L249 - true
   * 2 gnu.trove.set.hash.TShortHashSet.containsAll([S)Z: I8 Branch 16 IFLE L249 - false
   * 3 gnu.trove.set.hash.TShortHashSet.containsAll([S)Z: I16 Branch 17 IFNE L250 - true
   */

  @Test
  public void test13()  throws Throwable  {
      short[] shortArray0 = new short[2];
      TShortHashSet tShortHashSet0 = new TShortHashSet(shortArray0);
      boolean boolean0 = tShortHashSet0.containsAll(shortArray0);
      assertEquals(true, boolean0);
      assertEquals(1, tShortHashSet0.size());
  }

  //Test case number: 14
  /*
   * 2 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.containsAll([S)Z: I16 Branch 17 IFNE L250 - false
   * 2 gnu.trove.set.hash.TShortHashSet.containsAll([S)Z: I8 Branch 16 IFLE L249 - false
   */

  @Test
  public void test14()  throws Throwable  {
      TShortHashSet tShortHashSet0 = new TShortHashSet((-1824));
      boolean boolean0 = tShortHashSet0.containsAll(tShortHashSet0._set);
      assertEquals(false, boolean0);
  }

  //Test case number: 15
  /*
   * 5 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.addAll(Ljava/util/Collection;)Z: I27 Branch 19 IFEQ L263 - true
   * 2 gnu.trove.set.hash.TShortHashSet.<init>(Ljava/util/Collection;)V: root-Branch
   * 3 gnu.trove.set.hash.TShortHashSet.addAll(Ljava/util/Collection;)Z: I12 Branch 18 IFEQ L261 - true
   * 4 gnu.trove.set.hash.TShortHashSet.addAll(Ljava/util/Collection;)Z: I12 Branch 18 IFEQ L261 - false
   * 5 gnu.trove.set.hash.TShortHashSet.addAll(Ljava/util/Collection;)Z: I27 Branch 19 IFEQ L263 - false
   */

  @Test
  public void test15()  throws Throwable  {
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      linkedList0.offer((Short) (short)1);
      linkedList0.add((Short) (short)1);
      TShortHashSet tShortHashSet0 = new TShortHashSet((Collection<? extends Short>) linkedList0);
      assertEquals("{1}", tShortHashSet0.toString());
      assertEquals(false, tShortHashSet0.isEmpty());
  }

  //Test case number: 16
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.retainAll(Ljava/util/Collection;)Z: I13 Branch 24 IFEQ L302 - false
   * 2 gnu.trove.set.hash.TShortHashSet.retainAll(Ljava/util/Collection;)Z: I21 Branch 25 IFGT L303 - false
   * 3 gnu.trove.set.hash.TShortHashSet.retainAll(Ljava/util/Collection;)Z: I13 Branch 24 IFEQ L302 - true
   */

  @Test
  public void test16()  throws Throwable  {
      TShortHashSet tShortHashSet0 = new TShortHashSet(200019221, 200019221);
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      tShortHashSet0.addAll(tShortHashSet0._set);
      assertEquals("{0}", tShortHashSet0.toString());
      
      boolean boolean0 = tShortHashSet0.retainAll((Collection<?>) linkedList0);
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.retainAll(Ljava/util/Collection;)Z: I21 Branch 25 IFGT L303 - true
   * 2 gnu.trove.set.hash.TShortHashSet.retainAll(Ljava/util/Collection;)Z: I13 Branch 24 IFEQ L302 - true
   * 3 gnu.trove.set.hash.TShortHashSet.retainAll(Ljava/util/Collection;)Z: I13 Branch 24 IFEQ L302 - false
   */

  @Test
  public void test17()  throws Throwable  {
      TShortHashSet tShortHashSet0 = new TShortHashSet(200019221, 200019221);
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      linkedList0.add((Short) (short) (-1));
      tShortHashSet0.add((short) (-1));
      boolean boolean0 = tShortHashSet0.retainAll((Collection<?>) linkedList0);
      assertEquals("{-1}", tShortHashSet0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 18
  /*
   * 4 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.retainAll(Lgnu/trove/TShortCollection;)Z: I4 Branch 26 IF_ACMPNE L314 - false
   * 2 gnu.trove.set.hash.TShortHashSet.retainAll(Lgnu/trove/TShortCollection;)Z: I29 Branch 28 IFNE L320 - true
   * 3 gnu.trove.set.hash.TShortHashSet.retainAll(Lgnu/trove/TShortCollection;)Z: I22 Branch 27 IFEQ L319 - true
   * 4 gnu.trove.set.hash.TShortHashSet.retainAll(Lgnu/trove/TShortCollection;)Z: I22 Branch 27 IFEQ L319 - false
   */

  @Test
  public void test18()  throws Throwable  {
      short[] shortArray0 = new short[2];
      TShortHashSet tShortHashSet0 = new TShortHashSet(shortArray0);
      TSynchronizedShortSet tSynchronizedShortSet0 = new TSynchronizedShortSet((TShortSet) tShortHashSet0);
      boolean boolean0 = tShortHashSet0.retainAll((TShortCollection) tSynchronizedShortSet0);
      assertEquals(false, boolean0);
      assertEquals("{0}", tShortHashSet0.toString());
      assertEquals(1, tShortHashSet0.size());
  }

  //Test case number: 19
  /*
   * 6 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.retainAll([S)Z: I39 Branch 31 IFGE L337 - false
   * 2 gnu.trove.set.hash.TShortHashSet.retainAll([S)Z: I26 Branch 29 IFLE L336 - true
   * 3 gnu.trove.set.hash.TShortHashSet.retainAll([S)Z: I26 Branch 29 IFLE L336 - false
   * 4 gnu.trove.set.hash.TShortHashSet.retainAll([S)Z: I33 Branch 30 IF_ICMPNE L337 - true
   * 5 gnu.trove.set.hash.TShortHashSet.retainAll([S)Z: I33 Branch 30 IF_ICMPNE L337 - false
   * 6 gnu.trove.set.hash.TShortHashSet.retainAll([S)Z: I39 Branch 31 IFGE L337 - true
   */

  @Test
  public void test19()  throws Throwable  {
      short[] shortArray0 = new short[2];
      shortArray0[0] = (short)1;
      TShortHashSet tShortHashSet0 = new TShortHashSet(shortArray0);
      TSynchronizedShortSet tSynchronizedShortSet0 = new TSynchronizedShortSet((TShortSet) tShortHashSet0);
      shortArray0[0] = (short) (-1438);
      boolean boolean0 = tSynchronizedShortSet0.retainAll(shortArray0);
      assertEquals(1, tShortHashSet0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 20
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.removeAll(Ljava/util/Collection;)Z: I20 Branch 33 IFEQ L350 - true
   * 2 gnu.trove.set.hash.TShortHashSet.removeAll(Ljava/util/Collection;)Z: I12 Branch 32 IFEQ L349 - true
   * 3 gnu.trove.set.hash.TShortHashSet.removeAll(Ljava/util/Collection;)Z: I12 Branch 32 IFEQ L349 - false
   */

  @Test
  public void test20()  throws Throwable  {
      TShortHashSet tShortHashSet0 = new TShortHashSet((-1824));
      LinkedList<TShortHashSet> linkedList0 = new LinkedList<TShortHashSet>();
      linkedList0.add(tShortHashSet0);
      boolean boolean0 = tShortHashSet0.removeAll((Collection<?>) linkedList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 21
  /*
   * 17 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.removeAll(Lgnu/trove/TShortCollection;)Z: I24 Branch 36 IFEQ L367 - true
   * 2 gnu.trove.set.hash.TShortHashSet$TShortHashIterator.next()S: root-Branch
   * 3 gnu.trove.set.hash.TShortHashSet$TShortHashIterator.<init>(Lgnu/trove/set/hash/TShortHashSet;Lgnu/trove/impl/hash/TShortHash;)V: root-Branch
   * 4 gnu.trove.set.hash.TShortHashSet.iterator()Lgnu/trove/iterator/TShortIterator;: root-Branch
   * 5 gnu.trove.set.hash.TShortHashSet.toArray([S)[S: I21 Branch 6 IFLE L179 - true
   * 6 gnu.trove.set.hash.TShortHashSet.toArray([S)[S: I21 Branch 6 IFLE L179 - false
   * 7 gnu.trove.set.hash.TShortHashSet.toArray([S)[S: I28 Branch 7 IF_ICMPNE L180 - true
   * 8 gnu.trove.set.hash.TShortHashSet.toArray([S)[S: I28 Branch 7 IF_ICMPNE L180 - false
   * 9 gnu.trove.set.hash.TShortHashSet.toArray([S)[S: I45 Branch 8 IF_ICMPLE L185 - false
   * 10 gnu.trove.set.hash.TShortHashSet.addAll(Lgnu/trove/TShortCollection;)Z: I13 Branch 20 IFEQ L275 - true
   * 11 gnu.trove.set.hash.TShortHashSet.addAll(Lgnu/trove/TShortCollection;)Z: I13 Branch 20 IFEQ L275 - false
   * 12 gnu.trove.set.hash.TShortHashSet.addAll(Lgnu/trove/TShortCollection;)Z: I24 Branch 21 IFEQ L277 - false
   * 13 gnu.trove.set.hash.TShortHashSet.<init>(Lgnu/trove/TShortCollection;)V: I12 Branch 2 IFEQ L127 - false
   * 14 gnu.trove.set.hash.TShortHashSet.<init>(Lgnu/trove/TShortCollection;)V: I34 Branch 3 IFEQ L132 - true
   * 15 gnu.trove.set.hash.TShortHashSet.removeAll(Lgnu/trove/TShortCollection;)Z: I13 Branch 35 IFEQ L365 - true
   * 16 gnu.trove.set.hash.TShortHashSet.removeAll(Lgnu/trove/TShortCollection;)Z: I13 Branch 35 IFEQ L365 - false
   * 17 gnu.trove.set.hash.TShortHashSet.removeAll(Lgnu/trove/TShortCollection;)Z: I24 Branch 36 IFEQ L367 - false
   */

  @Test
  public void test21()  throws Throwable  {
      short[] shortArray0 = new short[5];
      shortArray0[4] = (short)1276;
      TShortHashSet tShortHashSet0 = new TShortHashSet(shortArray0);
      TShortHashSet tShortHashSet1 = new TShortHashSet((TShortCollection) tShortHashSet0);
      tShortHashSet0.toArray(tShortHashSet1._set);
      boolean boolean0 = tShortHashSet1.removeAll((TShortCollection) tShortHashSet0);
      assertEquals(1, tShortHashSet1.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 22
  /*
   * 6 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.removeAll([S)Z: I20 Branch 38 IFEQ L379 - false
   * 2 gnu.trove.set.hash.TShortHashSet.removeAll([S)Z: I12 Branch 37 IFLE L378 - true
   * 3 gnu.trove.set.hash.TShortHashSet.removeAll([S)Z: I12 Branch 37 IFLE L378 - false
   * 4 gnu.trove.set.hash.TShortHashSet.removeAll([S)Z: I20 Branch 38 IFEQ L379 - true
   * 5 gnu.trove.set.hash.TShortHashSet.remove(S)Z: I9 Branch 10 IFLT L209 - true
   * 6 gnu.trove.set.hash.TShortHashSet.remove(S)Z: I9 Branch 10 IFLT L209 - false
   */

  @Test
  public void test22()  throws Throwable  {
      short[] shortArray0 = new short[2];
      TShortHashSet tShortHashSet0 = new TShortHashSet(shortArray0);
      boolean boolean0 = tShortHashSet0.removeAll(tShortHashSet0._set);
      assertEquals(0, tShortHashSet0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 2 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.clear()V: I22 Branch 39 IFLE L393 - true
   * 2 gnu.trove.set.hash.TShortHashSet.clear()V: I22 Branch 39 IFLE L393 - false
   */

  @Test
  public void test23()  throws Throwable  {
      TShortHashSet tShortHashSet0 = new TShortHashSet((-1824));
      tShortHashSet0.clear();
      assertEquals("{}", tShortHashSet0.toString());
  }

  //Test case number: 24
  /*
   * 4 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.rehash(I)V: I35 Branch 40 IFLE L410 - true
   * 2 gnu.trove.set.hash.TShortHashSet.rehash(I)V: I35 Branch 40 IFLE L410 - false
   * 3 gnu.trove.set.hash.TShortHashSet.rehash(I)V: I42 Branch 41 IF_ICMPNE L411 - false
   * 4 gnu.trove.set.hash.TShortHashSet.<init>(IF)V: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TShortHashSet tShortHashSet0 = new TShortHashSet(200019221, 200019221);
      tShortHashSet0.addAll(tShortHashSet0._set);
      tShortHashSet0.add((short)1);
      boolean boolean0 = tShortHashSet0.add((short)78);
      assertEquals(false, tShortHashSet0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 25
  /*
   * 4 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.rehash(I)V: I42 Branch 41 IF_ICMPNE L411 - true
   * 2 gnu.trove.set.hash.TShortHashSet.rehash(I)V: I35 Branch 40 IFLE L410 - true
   * 3 gnu.trove.set.hash.TShortHashSet.rehash(I)V: I35 Branch 40 IFLE L410 - false
   * 4 gnu.trove.set.hash.TShortHashSet.rehash(I)V: I42 Branch 41 IF_ICMPNE L411 - false
   */

  @Test
  public void test25()  throws Throwable  {
      TShortHashSet tShortHashSet0 = new TShortHashSet((int) (short) (-1));
      tShortHashSet0.add((short)1);
      boolean boolean0 = tShortHashSet0.add((short)78);
      assertEquals(false, tShortHashSet0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.set.hash.TShortHashSet.equals(Ljava/lang/Object;)Z: I4 Branch 42 IFNE L421 - false
   */

  @Test
  public void test26()  throws Throwable  {
      short[] shortArray0 = new short[2];
      TShortHashSet tShortHashSet0 = new TShortHashSet(shortArray0);
      boolean boolean0 = tShortHashSet0.equals((Object) "{1,0}");
      assertEquals(1, tShortHashSet0.size());
      assertEquals("{0}", tShortHashSet0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 27
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.equals(Ljava/lang/Object;)Z: I20 Branch 43 IF_ICMPEQ L425 - false
   * 2 gnu.trove.set.hash.TShortHashSet.<init>(IFS)V: I10 Branch 1 IFEQ L101 - false
   * 3 gnu.trove.set.hash.TShortHashSet.equals(Ljava/lang/Object;)Z: I4 Branch 42 IFNE L421 - true
   */

  @Test
  public void test27()  throws Throwable  {
      TShortHashSet tShortHashSet0 = new TShortHashSet(781301, (float) 781301, (short)10);
      TShortHashSet tShortHashSet1 = new TShortHashSet(tShortHashSet0._set);
      boolean boolean0 = tShortHashSet0.equals((Object) tShortHashSet1);
      assertEquals("{10}", tShortHashSet1.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 28
  /*
   * 8 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.equals(Ljava/lang/Object;)Z: I42 Branch 45 IF_ICMPNE L429 - false
   * 2 gnu.trove.set.hash.TShortHashSet.equals(Ljava/lang/Object;)Z: I51 Branch 46 IFNE L430 - true
   * 3 gnu.trove.set.hash.TShortHashSet.equals(Ljava/lang/Object;)Z: I4 Branch 42 IFNE L421 - true
   * 4 gnu.trove.set.hash.TShortHashSet.equals(Ljava/lang/Object;)Z: I20 Branch 43 IF_ICMPEQ L425 - true
   * 5 gnu.trove.set.hash.TShortHashSet.equals(Ljava/lang/Object;)Z: I34 Branch 44 IFLE L428 - true
   * 6 gnu.trove.set.hash.TShortHashSet.equals(Ljava/lang/Object;)Z: I34 Branch 44 IFLE L428 - false
   * 7 gnu.trove.set.hash.TShortHashSet.equals(Ljava/lang/Object;)Z: I42 Branch 45 IF_ICMPNE L429 - true
   * 8 gnu.trove.set.hash.TShortHashSet.<init>()V: root-Branch
   */

  @Test
  public void test28()  throws Throwable  {
      TShortHashSet tShortHashSet0 = new TShortHashSet();
      TShortHashSet tShortHashSet1 = new TShortHashSet(tShortHashSet0._set);
      boolean boolean0 = tShortHashSet1.equals((Object) tShortHashSet1);
      assertEquals(true, boolean0);
      assertEquals(1, tShortHashSet1.size());
      assertFalse(tShortHashSet0.equals(tShortHashSet1));
      assertEquals("{0}", tShortHashSet1.toString());
  }

  //Test case number: 29
  /*
   * 5 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.hashCode()I: I21 Branch 48 IF_ICMPNE L443 - false
   * 2 gnu.trove.set.hash.TShortHashSet.<init>()V: root-Branch
   * 3 gnu.trove.set.hash.TShortHashSet.hashCode()I: I13 Branch 47 IFLE L442 - true
   * 4 gnu.trove.set.hash.TShortHashSet.hashCode()I: I13 Branch 47 IFLE L442 - false
   * 5 gnu.trove.set.hash.TShortHashSet.hashCode()I: I21 Branch 48 IF_ICMPNE L443 - true
   */

  @Test
  public void test29()  throws Throwable  {
      TShortHashSet tShortHashSet0 = new TShortHashSet();
      tShortHashSet0.add((short)0);
      int int0 = tShortHashSet0.hashCode();
      assertEquals(1, tShortHashSet0.size());
      assertEquals(0, int0);
  }

  //Test case number: 30
  /*
   * 6 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.toString()Ljava/lang/String;: I54 Branch 51 IF_ICMPGE L458 - false
   * 2 gnu.trove.set.hash.TShortHashSet.toString()Ljava/lang/String;: I30 Branch 49 IFLE L455 - true
   * 3 gnu.trove.set.hash.TShortHashSet.toString()Ljava/lang/String;: I30 Branch 49 IFLE L455 - false
   * 4 gnu.trove.set.hash.TShortHashSet.toString()Ljava/lang/String;: I38 Branch 50 IF_ICMPNE L456 - true
   * 5 gnu.trove.set.hash.TShortHashSet.toString()Ljava/lang/String;: I38 Branch 50 IF_ICMPNE L456 - false
   * 6 gnu.trove.set.hash.TShortHashSet.toString()Ljava/lang/String;: I54 Branch 51 IF_ICMPGE L458 - true
   */

  @Test
  public void test30()  throws Throwable  {
      short[] shortArray0 = new short[2];
      shortArray0[0] = (short)1;
      TShortHashSet tShortHashSet0 = new TShortHashSet(shortArray0);
      TSynchronizedShortSet tSynchronizedShortSet0 = new TSynchronizedShortSet((TShortSet) tShortHashSet0);
      String string0 = tSynchronizedShortSet0.toString();
      assertEquals("{1,0}", string0);
      assertNotNull(string0);
  }

  //Test case number: 31
  /*
   * 12 covered goals:
   * 1 gnu.trove.set.hash.TShortHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 52 IFLE L506 - true
   * 2 gnu.trove.set.hash.TShortHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 52 IFLE L506 - false
   * 3 gnu.trove.set.hash.TShortHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I45 Branch 53 IF_ICMPNE L507 - true
   * 4 gnu.trove.set.hash.TShortHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I45 Branch 53 IF_ICMPNE L507 - false
   * 5 gnu.trove.set.hash.TShortHashSet.<init>([S)V: root-Branch
   * 6 gnu.trove.set.hash.TShortHashSet.<init>(I)V: root-Branch
   * 7 gnu.trove.set.hash.TShortHashSet.addAll([S)Z: I12 Branch 22 IFLE L288 - true
   * 8 gnu.trove.set.hash.TShortHashSet.addAll([S)Z: I12 Branch 22 IFLE L288 - false
   * 9 gnu.trove.set.hash.TShortHashSet.addAll([S)Z: I20 Branch 23 IFEQ L289 - true
   * 10 gnu.trove.set.hash.TShortHashSet.addAll([S)Z: I20 Branch 23 IFEQ L289 - false
   * 11 gnu.trove.set.hash.TShortHashSet.add(S)Z: I9 Branch 9 IFGE L196 - true
   * 12 gnu.trove.set.hash.TShortHashSet.add(S)Z: I9 Branch 9 IFGE L196 - false
   */

  @Test
  public void test31()  throws Throwable  {
      short[] shortArray0 = new short[2];
      TShortHashSet tShortHashSet0 = new TShortHashSet(shortArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) byteArrayOutputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) bufferedOutputStream0);
      tShortHashSet0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals("{0}", tShortHashSet0.toString());
      assertEquals(1, tShortHashSet0.size());
  }
}

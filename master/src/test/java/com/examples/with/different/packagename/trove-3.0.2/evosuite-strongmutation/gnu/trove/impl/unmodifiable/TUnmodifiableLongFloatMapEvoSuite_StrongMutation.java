/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongSet;
import gnu.trove.map.TLongFloatMap;
import gnu.trove.map.hash.TLongFloatHashMap;
import gnu.trove.procedure.TFloatProcedure;
import gnu.trove.procedure.TLongFloatProcedure;
import gnu.trove.procedure.TLongProcedure;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableLongFloatMapEvoSuite_StrongMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 5 covered goals:
   * 1 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.isEmpty()Z: root-Branch
   * 3 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.<init>(Lgnu/trove/map/TLongFloatMap;)V:58 - ReplaceComparisonOperator != null -> = null
   * 4 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.<init>(Lgnu/trove/map/TLongFloatMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap((-956));
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tUnmodifiableLongFloatMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 5 covered goals:
   * 1 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.containsKey(J)Z:65 - DeleteStatement: containsKey(J)Z
   * 2 Strong Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.containsKey(J)Z:65 - InsertUnaryOp Negation of key
   * 3 Strong Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.containsKey(J)Z:65 - InsertUnaryOp Negation of key
   * 4 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.containsKey(J)Z:65 - DeleteStatement: containsKey(J)Z
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.containsKey(J)Z: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      long[] longArray0 = new long[7];
      longArray0[0] = (long) (-1308);
      float[] floatArray0 = new float[9];
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(longArray0, floatArray0);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tUnmodifiableLongFloatMap0.containsKey((-1308L));
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 4 covered goals:
   * 1 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.containsValue(F)Z:66 - InsertUnaryOp Negation of val
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.containsValue(F)Z: root-Branch
   * 3 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.containsValue(F)Z:66 - InsertUnaryOp Negation of val
   * 4 Strong Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.containsValue(F)Z:66 - DeleteStatement: containsValue(F)Z
   */

  @Test
  public void test2()  throws Throwable  {
      long[] longArray0 = new long[7];
      longArray0[2] = 159L;
      float[] floatArray0 = new float[7];
      floatArray0[2] = (float) (-1943L);
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(longArray0, floatArray0);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tUnmodifiableLongFloatMap0.containsValue((float) (-1943L));
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.containsValue(F)Z:66 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   * 2 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.containsValue(F)Z:66 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   */

  @Test
  public void test3()  throws Throwable  {
      long[] longArray0 = new long[4];
      float[] floatArray0 = new float[5];
      floatArray0[2] = (float) (-9223372036854775808L);
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(longArray0, floatArray0);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      tUnmodifiableLongFloatMap0.containsValue(0.0F);
      floatArray0[2] = 1495.6974F;
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 Strong Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.containsValue(F)Z:66 - DeleteStatement: containsValue(F)Z
   */

  @Test
  public void test4()  throws Throwable  {
      long[] longArray0 = new long[10];
      float[] floatArray0 = new float[3];
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(longArray0, floatArray0);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tUnmodifiableLongFloatMap0.containsValue(0.0F);
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.get(J)F:67 - InsertUnaryOp Negation of key
   * 2 Strong Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.get(J)F:67 - DeleteStatement: get(J)F
   * 3 Strong Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.get(J)F:67 - DeleteStatement: get(J)F
   * 4 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.get(J)F:67 - InsertUnaryOp Negation of key
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.get(J)F: root-Branch
   */

//   @Test
//   public void test5()  throws Throwable  {
//       long[] longArray0 = new long[6];
//       longArray0[3] = 1905L;
//       float[] floatArray0 = new float[5];
//       floatArray0[3] = (float) 1505L;
//       TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(longArray0, floatArray0);
//       TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
//       float float0 = tUnmodifiableLongFloatMap0.get(1905L);
//       assertEquals(1505.0F, float0, 0.01F);
//   }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 Strong Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keys()[J:83 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   * 2 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keys()[J:83 - DeleteStatement: keys()[J
   * 3 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keys()[J:83 - DeleteStatement: keys()[J
   * 4 Strong Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keys()[J:83 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keys()[J: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap((-1764), 0.0F, 1402L, (float) (-1764));
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      long[] longArray0 = tUnmodifiableLongFloatMap0.keys();
      assertNotNull(longArray0);
  }

  //Test case number: 7
  /*
   * 5 covered goals:
   * 1 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keys([J)[J:84 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   * 2 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keys([J)[J:84 - DeleteStatement: keys([J)[J
   * 3 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keys([J)[J:84 - DeleteStatement: keys([J)[J
   * 4 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keys([J)[J:84 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keys([J)[J: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      long[] longArray0 = tUnmodifiableLongFloatMap0.keys(tLongFloatHashMap0._set);
      assertNotNull(longArray0);
  }

  //Test case number: 8
  /*
   * 5 covered goals:
   * 1 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.values()[F:91 - DeleteStatement: values()[F
   * 2 Strong Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.values()[F:91 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   * 3 Strong Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.values()[F:91 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   * 4 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.values()[F:91 - DeleteStatement: values()[F
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.values()[F: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      float[] floatArray0 = tUnmodifiableLongFloatMap0.values();
      assertNotNull(floatArray0);
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.values([F)[F:92 - DeleteStatement: values([F)[F
   * 2 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.values([F)[F:92 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   * 3 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.values([F)[F:92 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   * 4 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.values([F)[F:92 - DeleteStatement: values([F)[F
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.values([F)[F: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap((-1308));
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      float[] floatArray0 = new float[9];
      float[] floatArray1 = tUnmodifiableLongFloatMap0.values(floatArray0);
      assertSame(floatArray0, floatArray1);
  }

  //Test case number: 10
  /*
   * 8 covered goals:
   * 1 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 2 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 3 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   * 4 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 5 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   * 6 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   */

  @Test
  public void test10()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tUnmodifiableLongFloatMap0.equals((Object) "0.0");
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 5 covered goals:
   * 1 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.hashCode()I:95 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   * 2 Strong Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.hashCode()I:95 - DeleteStatement: hashCode()I
   * 3 Strong Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.hashCode()I:95 - DeleteStatement: hashCode()I
   * 4 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.hashCode()I:95 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.hashCode()I: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      long[] longArray0 = new long[1];
      longArray0[0] = 1081L;
      float[] floatArray0 = new float[10];
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(longArray0, floatArray0);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      tUnmodifiableLongFloatMap0.hashCode();
      longArray0[0] = 0L;
  }

  //Test case number: 12
  /*
   * 5 covered goals:
   * 1 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   * 2 Strong Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 3 Strong Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 4 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap((-1764), 0.0F, 1402L, (float) (-1764));
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      String string0 = tUnmodifiableLongFloatMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 13
  /*
   * 3 covered goals:
   * 1 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.getNoEntryKey()J:97 - DeleteStatement: getNoEntryKey()J
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.getNoEntryKey()J: root-Branch
   * 3 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.getNoEntryKey()J:97 - DeleteStatement: getNoEntryKey()J
   */

  @Test
  public void test13()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap((-956));
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      tUnmodifiableLongFloatMap0.getNoEntryKey();
      TLongFloatHashMap tLongFloatHashMap1 = new TLongFloatHashMap((-956), (float) (-956), (long) (-956), 0.0F);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap1 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap1);
      assertEquals((-956L), tUnmodifiableLongFloatMap1.getNoEntryKey());
  }

  //Test case number: 14
  /*
   * 2 covered goals:
   * 1 Strong Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.getNoEntryKey()J:97 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   * 2 Strong Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.getNoEntryKey()J:97 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   */

  @Test
  public void test14()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap((-1308));
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      float[] floatArray0 = new float[9];
      floatArray0[3] = (float) 0;
      tUnmodifiableLongFloatMap0.getNoEntryKey();
      floatArray0[3] = 1.0F;
  }

  //Test case number: 15
  /*
   * 3 covered goals:
   * 1 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.getNoEntryValue()F:98 - DeleteStatement: getNoEntryValue()F
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.getNoEntryValue()F: root-Branch
   * 3 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.getNoEntryValue()F:98 - DeleteStatement: getNoEntryValue()F
   */

//   @Test
//   public void test15()  throws Throwable  {
//       TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap((-1764), 0.0F, 1402L, (float) (-1764));
//       TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
//       float float0 = tUnmodifiableLongFloatMap0.getNoEntryValue();
//       assertEquals((-1764.0F), float0, 0.01F);
//   }

  //Test case number: 16
  /*
   * 3 covered goals:
   * 1 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   * 3 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z
   */

  @Test
  public void test16()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tUnmodifiableLongFloatMap0.forEachKey((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 5 covered goals:
   * 1 Strong Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:104 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   * 2 Strong Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z
   * 3 Strong Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z
   * 4 Strong Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:104 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      float[] floatArray0 = new float[8];
      floatArray0[7] = (float) (-1L);
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap((-1308));
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      tUnmodifiableLongFloatMap0.forEachValue((TFloatProcedure) null);
      floatArray0[7] = 0.0F;
  }

  //Test case number: 18
  /*
   * 3 covered goals:
   * 1 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.forEachEntry(Lgnu/trove/procedure/TLongFloatProcedure;)Z:107 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TLongFloatProcedure;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.forEachEntry(Lgnu/trove/procedure/TLongFloatProcedure;)Z: root-Branch
   * 3 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.forEachEntry(Lgnu/trove/procedure/TLongFloatProcedure;)Z:107 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TLongFloatProcedure;)Z
   */

  @Test
  public void test18()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap((-1), (float) (-1), (-1130L), (-852.8498F));
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tUnmodifiableLongFloatMap0.forEachEntry((TLongFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 19
  /*
   * 27 covered goals:
   * 1 Strong Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 2 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.key()J:114 - DeleteField: iterLgnu/trove/iterator/TLongFloatIterator;
   * 3 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.key()J:114 - DeleteStatement: key()J
   * 4 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.value()F:115 - DeleteField: iterLgnu/trove/iterator/TLongFloatIterator;
   * 5 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.value()F:115 - DeleteStatement: value()F
   * 6 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TLongFloatIterator;
   * 7 Strong Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.advance()V:116 - DeleteStatement: advance()V
   * 8 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TLongFloatIterator;
   * 9 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.size()I:63 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   * 10 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.size()I:63 - DeleteStatement: size()I
   * 11 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.key()J:114 - DeleteField: iterLgnu/trove/iterator/TLongFloatIterator;
   * 12 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.key()J:114 - DeleteStatement: key()J
   * 13 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.value()F:115 - DeleteField: iterLgnu/trove/iterator/TLongFloatIterator;
   * 14 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.value()F:115 - DeleteStatement: value()F
   * 15 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TLongFloatIterator;
   * 16 Strong Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.advance()V:116 - DeleteStatement: advance()V
   * 17 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TLongFloatIterator;
   * 18 Strong Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 19 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.size()I:63 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   * 20 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.size()I:63 - DeleteStatement: size()I
   * 21 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.size()I: root-Branch
   * 22 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.iterator()Lgnu/trove/iterator/TLongFloatIterator;: root-Branch
   * 23 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.hasNext()Z: root-Branch
   * 24 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.advance()V: root-Branch
   * 25 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.key()J: root-Branch
   * 26 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.value()F: root-Branch
   * 27 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableLongFloatMap;)V: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap((-1));
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      TLongFloatHashMap tLongFloatHashMap1 = new TLongFloatHashMap((TLongFloatMap) tUnmodifiableLongFloatMap0);
      tLongFloatHashMap0.putIfAbsent((-1L), (-1L));
      tLongFloatHashMap1.putAll((TLongFloatMap) tUnmodifiableLongFloatMap0);
      assertEquals(1, tUnmodifiableLongFloatMap0.size());
      assertEquals("{-1=-1.0}", tLongFloatHashMap1.toString());
  }

  //Test case number: 20
  /*
   * 12 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keySet()Lgnu/trove/set/TLongSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 Strong Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keySet()Lgnu/trove/set/TLongSet;:79 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keySet()Lgnu/trove/set/TLongSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TLongSet;
   * 4 Strong Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keySet()Lgnu/trove/set/TLongSet;:80 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   * 5 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keySet()Lgnu/trove/set/TLongSet;:81 - DeleteField: keySetLgnu/trove/set/TLongSet;
   * 6 Strong Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keySet()Lgnu/trove/set/TLongSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TLongSet;)Lgnu/trove/set/TLongSet;
   * 7 Strong Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keySet()Lgnu/trove/set/TLongSet;:79 - ReplaceComparisonOperator != null -> = null
   * 8 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keySet()Lgnu/trove/set/TLongSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TLongSet;
   * 9 Strong Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keySet()Lgnu/trove/set/TLongSet;:80 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   * 10 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keySet()Lgnu/trove/set/TLongSet;:81 - DeleteField: keySetLgnu/trove/set/TLongSet;
   * 11 Strong Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keySet()Lgnu/trove/set/TLongSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TLongSet;)Lgnu/trove/set/TLongSet;
   * 12 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.keySet()Lgnu/trove/set/TLongSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test20()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      TUnmodifiableLongSet tUnmodifiableLongSet0 = (TUnmodifiableLongSet)tUnmodifiableLongFloatMap0.keySet();
      assertNotNull(tUnmodifiableLongSet0);
      
      TUnmodifiableLongSet tUnmodifiableLongSet1 = (TUnmodifiableLongSet)tUnmodifiableLongFloatMap0.keySet();
      assertSame(tUnmodifiableLongSet1, tUnmodifiableLongSet0);
  }

  //Test case number: 21
  /*
   * 12 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 Strong Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:88 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   * 3 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TFloatCollection;
   * 4 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 5 Strong Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TFloatCollection;)Lgnu/trove/TFloatCollection;
   * 6 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:89 - DeleteField: valuesLgnu/trove/TFloatCollection;
   * 7 Strong Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:88 - DeleteField: mLgnu/trove/map/TLongFloatMap;
   * 8 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TFloatCollection;
   * 9 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 10 Strong Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TFloatCollection;)Lgnu/trove/TFloatCollection;
   * 11 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:89 - DeleteField: valuesLgnu/trove/TFloatCollection;
   * 12 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test21()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap(0);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = (TUnmodifiableFloatCollection)tUnmodifiableLongFloatMap0.valueCollection();
      assertNotNull(tUnmodifiableFloatCollection0);
      
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection1 = (TUnmodifiableFloatCollection)tUnmodifiableLongFloatMap0.valueCollection();
      assertSame(tUnmodifiableFloatCollection1, tUnmodifiableFloatCollection0);
  }

  //Test case number: 22
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - false
   * 2 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.<init>(Lgnu/trove/map/TLongFloatMap;)V:58 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 1 -> 0
   * 4 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 5 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 6 Strong Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 1 -> 0
   * 7 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableLongFloatMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - true
   */

  @Test
  public void test22()  throws Throwable  {
      TLongFloatHashMap tLongFloatHashMap0 = new TLongFloatHashMap();
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap0 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      TUnmodifiableLongFloatMap tUnmodifiableLongFloatMap1 = new TUnmodifiableLongFloatMap((TLongFloatMap) tLongFloatHashMap0);
      boolean boolean0 = tUnmodifiableLongFloatMap1.equals((Object) tUnmodifiableLongFloatMap0);
      assertEquals(true, boolean0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TIntFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection;
import gnu.trove.map.TByteIntMap;
import gnu.trove.map.hash.TByteIntHashMap;
import gnu.trove.procedure.TByteIntProcedure;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TIntProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableByteIntMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap$1.value()I: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableByteIntMap;)V: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap$1.advance()V: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap$1.hasNext()Z: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap$1.key()B: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.size()I: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.iterator()Lgnu/trove/iterator/TByteIntIterator;: root-Branch
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.<init>(Lgnu/trove/map/TByteIntMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      int[] intArray0 = new int[8];
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      TByteIntHashMap tByteIntHashMap1 = new TByteIntHashMap((TByteIntMap) tUnmodifiableByteIntMap0);
      assertEquals(1, tUnmodifiableByteIntMap0.size());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.getNoEntryKey()B: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((-11));
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      byte byte0 = tUnmodifiableByteIntMap0.getNoEntryKey();
      assertEquals((byte)0, byte0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.remove(B)I: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      int[] intArray0 = new int[14];
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap0.remove((byte)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.hashCode()I: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      int[] intArray0 = new int[8];
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      int int0 = tUnmodifiableByteIntMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.put(BI)I: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((-11));
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap0.put((byte)0, (byte)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.increment(B)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      int[] intArray0 = new int[8];
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap0.increment((byte)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((-11));
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      String string0 = tUnmodifiableByteIntMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.clear()V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      int[] intArray0 = new int[2];
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap();
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      HashMap<Byte, Integer> hashMap0 = new HashMap<Byte, Integer>();
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap0.putAll((Map<? extends Byte, ? extends Integer>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap();
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      boolean boolean0 = tUnmodifiableByteIntMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.values([I)[I: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((-11));
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      int[] intArray0 = new int[3];
      int[] intArray1 = tUnmodifiableByteIntMap0.values(intArray0);
      assertSame(intArray1, intArray0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.retainEntries(Lgnu/trove/procedure/TByteIntProcedure;)Z: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap();
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap0.retainEntries((TByteIntProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.containsValue(I)Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((-11));
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      boolean boolean0 = tUnmodifiableByteIntMap0.containsValue((-11));
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.keys()[B: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((-11));
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      byte[] byteArray0 = tUnmodifiableByteIntMap0.keys();
      assertNotNull(byteArray0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.putIfAbsent(BI)I: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((int) (byte) (-6), (float) (-158), (byte) (-6), (int) (byte) (-6));
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap0.putIfAbsent((byte) (-6), (byte) (-6));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.transformValues(Lgnu/trove/function/TIntFunction;)V: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      int[] intArray0 = new int[7];
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap0.transformValues((TIntFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.values()[I: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((int) (byte) (-6), (float) (-158), (byte) (-6), (int) (byte) (-6));
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      int[] intArray0 = tUnmodifiableByteIntMap0.values();
      assertNotNull(intArray0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.adjustValue(BI)Z: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap();
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap0.adjustValue((byte) (-23), (byte) (-23));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.keys([B)[B: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((int) (byte) (-6), (float) (-158), (byte) (-6), (int) (byte) (-6));
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      byte[] byteArray0 = tUnmodifiableByteIntMap0.keys(tByteIntHashMap0._set);
      assertNotNull(byteArray0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.adjustOrPutValue(BII)I: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(158767094, 158767094);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap0.adjustOrPutValue((byte) (-65), (byte) (-65), (byte) (-65));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(158767094, 158767094);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      boolean boolean0 = tUnmodifiableByteIntMap0.forEachValue((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((-11));
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      boolean boolean0 = tUnmodifiableByteIntMap0.forEachKey((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.forEachEntry(Lgnu/trove/procedure/TByteIntProcedure;)Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((-11));
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      boolean boolean0 = tUnmodifiableByteIntMap0.forEachEntry((TByteIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.containsKey(B)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(158767094, 158767094);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      boolean boolean0 = tUnmodifiableByteIntMap0.containsKey((byte) (-65));
      assertEquals(false, boolean0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.putAll(Lgnu/trove/map/TByteIntMap;)V: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((-918));
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteIntMap0.putAll((TByteIntMap) tUnmodifiableByteIntMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.get(B)I: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((-11));
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      int int0 = tUnmodifiableByteIntMap0.get((byte)0);
      assertEquals(0, int0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.getNoEntryValue()I: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((-11));
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      int int0 = tUnmodifiableByteIntMap0.getNoEntryValue();
      assertEquals(0, int0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.<init>(Lgnu/trove/map/TByteIntMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = null;
      try {
        tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.keySet()Lgnu/trove/set/TByteSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.keySet()Lgnu/trove/set/TByteSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap();
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      TUnmodifiableByteSet tUnmodifiableByteSet0 = (TUnmodifiableByteSet)tUnmodifiableByteIntMap0.keySet();
      assertNotNull(tUnmodifiableByteSet0);
      
      TUnmodifiableByteSet tUnmodifiableByteSet1 = (TUnmodifiableByteSet)tUnmodifiableByteIntMap0.keySet();
      assertSame(tUnmodifiableByteSet1, tUnmodifiableByteSet0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.valueCollection()Lgnu/trove/TIntCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.valueCollection()Lgnu/trove/TIntCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap();
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      TUnmodifiableIntCollection tUnmodifiableIntCollection0 = (TUnmodifiableIntCollection)tUnmodifiableByteIntMap0.valueCollection();
      assertNotNull(tUnmodifiableIntCollection0);
      
      TUnmodifiableIntCollection tUnmodifiableIntCollection1 = (TUnmodifiableIntCollection)tUnmodifiableByteIntMap0.valueCollection();
      assertSame(tUnmodifiableIntCollection1, tUnmodifiableIntCollection0);
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - false
   */

  @Test
  public void test30()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(0);
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      boolean boolean0 = tUnmodifiableByteIntMap0.equals((Object) tByteIntHashMap0);
      assertEquals(true, boolean0);
  }

  //Test case number: 31
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableByteIntMap.<init>(Lgnu/trove/map/TByteIntMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((-918));
      TUnmodifiableByteIntMap tUnmodifiableByteIntMap0 = new TUnmodifiableByteIntMap((TByteIntMap) tByteIntHashMap0);
      boolean boolean0 = tUnmodifiableByteIntMap0.equals((Object) "");
      assertEquals(false, boolean0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteByteMap;
import gnu.trove.iterator.TByteByteIterator;
import gnu.trove.map.TByteByteMap;
import gnu.trove.map.hash.TByteByteHashMap;
import gnu.trove.procedure.TByteByteProcedure;
import gnu.trove.procedure.TByteProcedure;
import java.util.Locale;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableByteByteMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TByteByteMap tByteByteMap0 = null;
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = null;
      try {
        tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap(tByteByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)43;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-61);
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      byte byte4 = (byte)0;
      byteArray0[4] = byte4;
      byte byte5 = (byte)88;
      byteArray0[5] = byte5;
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = byte2;
      byteArray1[1] = byte5;
      byteArray1[2] = byte3;
      byte byte6 = (byte) (-1);
      byteArray1[3] = byte6;
      byteArray1[4] = byte3;
      byteArray1[5] = byte4;
      byteArray1[6] = byte3;
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(byteArray0, byteArray1);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteByteMap0.putAll((TByteByteMap) tByteByteHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      tUnmodifiableByteByteMap0.keySet();
      TByteByteMap tByteByteMap0 = null;
      Locale locale0 = Locale.ENGLISH;
      String string0 = locale0.getDisplayCountry();
      tByteByteHashMap0.equals((Object) string0);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap1 = null;
      try {
        tUnmodifiableByteByteMap1 = new TUnmodifiableByteByteMap(tByteByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

//   @Test
//   public void test3()  throws Throwable  {
//       byte[] byteArray0 = new byte[10];
//       byte byte0 = (byte)20;
//       byteArray0[0] = byte0;
//       byte byte1 = (byte)88;
//       byteArray0[1] = byte1;
//       byte byte2 = (byte)0;
//       byteArray0[2] = byte2;
//       byte byte3 = (byte) (-1);
//       byteArray0[3] = byte3;
//       byte byte4 = (byte)0;
//       byteArray0[4] = byte4;
//       byte byte5 = (byte) (-1);
//       byteArray0[5] = byte5;
//       byte byte6 = (byte) (-39);
//       byteArray0[6] = byte6;
//       int int0 = 616;
//       TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(int0, (float) byteArray0[1]);
//       TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
//       byte byte7 = (byte)60;
//       byteArray0[7] = byte7;
//       byte byte8 = (byte)1;
//       byteArray0[8] = byte8;
//       byte byte9 = (byte)33;
//       byteArray0[9] = byte9;
//       TByteByteHashMap tByteByteHashMap1 = new TByteByteHashMap();
//       TUnmodifiableByteByteMap tUnmodifiableByteByteMap1 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap1);
//       TByteByteHashMap tByteByteHashMap2 = new TByteByteHashMap(byteArray0, byteArray0);
//       TUnmodifiableByteByteMap tUnmodifiableByteByteMap2 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap2);
//       assertEquals(0, tUnmodifiableByteByteMap2.getNoEntryValue());
//   }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 0;
      float float0 = 1030.4211F;
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(int0, float0);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap1 = new TUnmodifiableByteByteMap((TByteByteMap) tUnmodifiableByteByteMap0);
      tUnmodifiableByteByteMap1.values();
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)33;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      TByteByteHashMap tByteByteHashMap1 = new TByteByteHashMap(byteArray0, byteArray0);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap2 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap1);
      tUnmodifiableByteByteMap2.getNoEntryValue();
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap3 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap1);
      tUnmodifiableByteByteMap3.getNoEntryKey();
      TByteByteMap tByteByteMap0 = null;
      tByteByteHashMap1.keys(byteArray0);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap4 = null;
      try {
        tUnmodifiableByteByteMap4 = new TUnmodifiableByteByteMap(tByteByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = (-1);
      byte byte0 = (byte)0;
      byte byte1 = (byte)0;
      TByteByteMap tByteByteMap0 = null;
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = null;
      try {
        tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap(tByteByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = (-1);
      int int1 = (-1);
      byte byte0 = (byte)0;
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(int1, (float) int1, byte0, byte0);
      TByteByteHashMap tByteByteHashMap1 = new TByteByteHashMap((TByteByteMap) tByteByteHashMap0);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap1);
      tUnmodifiableByteByteMap0.containsValue(byte0);
      TByteByteHashMap tByteByteHashMap2 = new TByteByteHashMap();
      TByteByteHashMap tByteByteHashMap3 = new TByteByteHashMap((TByteByteMap) tByteByteHashMap2);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap1 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap3);
      byte byte1 = (byte)87;
      tUnmodifiableByteByteMap1.get(byte1);
      byte byte2 = (byte) (-57);
      tUnmodifiableByteByteMap1.get(byte2);
      TByteByteHashMap tByteByteHashMap4 = new TByteByteHashMap(int0, int0);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap2 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap4);
      byte byte3 = (byte) (-40);
      // Undeclared exception!
      try {
        tUnmodifiableByteByteMap2.increment(byte3);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)0;
      byte byte1 = (byte) (-22);
      byteArray0[0] = byte1;
      byteArray0[1] = byte0;
      byteArray0[0] = byte0;
      byte byte2 = (byte) (-81);
      byteArray0[1] = byte2;
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(byteArray0, byteArray0);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      TByteByteIterator tByteByteIterator0 = tUnmodifiableByteByteMap0.iterator();
      assertEquals(true, tByteByteIterator0.hasNext());
  }

  @Test
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-56);
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-20);
      byteArray0[3] = byte3;
      byte byte4 = (byte)62;
      byteArray0[4] = byte4;
      int int0 = 0;
      float float0 = (-899.26044F);
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(int0, float0);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      tUnmodifiableByteByteMap0.get(byte3);
      byte byte5 = (byte)16;
      byteArray0[5] = byte5;
      TByteByteHashMap tByteByteHashMap1 = new TByteByteHashMap(byteArray0, byteArray0);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap1 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap1);
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = byte2;
      byteArray1[1] = byte5;
      byteArray1[2] = byte1;
      byte[] byteArray2 = tUnmodifiableByteByteMap1.values(byteArray1);
      assertFalse(byteArray2.equals(byteArray1));
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 0;
      float float0 = (-1.0F);
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(int0, float0);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte byte0 = (byte)21;
      boolean boolean0 = tUnmodifiableByteByteMap0.containsKey(byte0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = (-1482);
      int int1 = 0;
      byte byte0 = (byte) (-56);
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(int1, (float) int0, byte0, byte0);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      float float0 = 975.76196F;
      TByteByteHashMap tByteByteHashMap1 = new TByteByteHashMap(int0, float0);
      byte byte1 = (byte)0;
      byte byte2 = tByteByteHashMap1.remove(byte1);
      byte byte3 = (byte)0;
      byte byte4 = (byte) (-104);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap1 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap1);
      tUnmodifiableByteByteMap1.valueCollection();
      tByteByteHashMap1.adjustOrPutValue(byte3, byte3, byte4);
      tUnmodifiableByteByteMap1.toString();
      tByteByteHashMap1.contains(byte2);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap2 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap1);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap3 = new TUnmodifiableByteByteMap((TByteByteMap) tUnmodifiableByteByteMap2);
      TByteByteProcedure tByteByteProcedure0 = null;
      // Undeclared exception!
      try {
        tUnmodifiableByteByteMap2.retainEntries(tByteByteProcedure0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte byte0 = (byte)112;
      // Undeclared exception!
      try {
        tUnmodifiableByteByteMap0.putIfAbsent(byte0, byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 0;
      float float0 = (-1809.1215F);
      byte byte0 = (byte)96;
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(int0, float0, byte0, byte0);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte byte1 = (byte)1;
      // Undeclared exception!
      try {
        tUnmodifiableByteByteMap0.putIfAbsent(byte1, byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap();
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      TByteProcedure tByteProcedure0 = null;
      tUnmodifiableByteByteMap0.iterator();
      tUnmodifiableByteByteMap0.forEachKey(tByteProcedure0);
      tUnmodifiableByteByteMap0.toString();
      TByteByteMap tByteByteMap0 = null;
      byte byte0 = (byte)0;
      tUnmodifiableByteByteMap0.containsKey(byte0);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap1 = null;
      try {
        tUnmodifiableByteByteMap1 = new TUnmodifiableByteByteMap(tByteByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte) (-31);
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-1);
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-71);
      byteArray0[3] = byte3;
      byte byte4 = (byte)28;
      byteArray0[4] = byte4;
      byte byte5 = (byte)32;
      byteArray0[5] = byte5;
      byte byte6 = (byte)0;
      byteArray0[6] = byte6;
      byte byte7 = (byte) (-1);
      byteArray0[7] = byte7;
      TByteByteHashMap tByteByteHashMap0 = new TByteByteHashMap(byteArray0, byteArray0);
      TUnmodifiableByteByteMap tUnmodifiableByteByteMap0 = new TUnmodifiableByteByteMap((TByteByteMap) tByteByteHashMap0);
      byte byte8 = (byte)1;
      byte byte9 = (byte)0;
      // Undeclared exception!
      try {
        tUnmodifiableByteByteMap0.putIfAbsent(byte8, byte9);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

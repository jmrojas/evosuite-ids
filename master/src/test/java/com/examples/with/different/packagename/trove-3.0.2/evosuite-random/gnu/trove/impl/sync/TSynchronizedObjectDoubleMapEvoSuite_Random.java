/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.hash.TObjectHash;
import gnu.trove.impl.sync.TSynchronizedObjectDoubleMap;
import gnu.trove.map.TObjectDoubleMap;
import gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap;
import gnu.trove.map.hash.TObjectDoubleHashMap;
import gnu.trove.procedure.TObjectDoubleProcedure;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.util.Locale;
import java.util.MissingResourceException;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedObjectDoubleMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>();
      TSynchronizedObjectDoubleMap<Double> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Double>((TObjectDoubleMap<Double>) tObjectDoubleCustomHashMap0);
      int int0 = tSynchronizedObjectDoubleMap0.hashCode();
      assertEquals(0, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      HashingStrategy<Object> hashingStrategy0 = null;
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>(hashingStrategy0);
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap1 = new TObjectDoubleCustomHashMap<Double>();
      URI uRI0 = null;
      File file0 = null;
      try {
        file0 = new File(uRI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = (-363);
      float float0 = (-1534.6342F);
      double double0 = 0.0;
      TObjectDoubleHashMap<String> tObjectDoubleHashMap0 = new TObjectDoubleHashMap<String>(int0, float0, double0);
      String string0 = "";
      Locale locale0 = new Locale(string0, string0);
      // Undeclared exception!
      try {
        locale0.getUnicodeLocaleType(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Ill-formed Unicode locale key: 
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TObjectDoubleMap<Double> tObjectDoubleMap0 = null;
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      String string0 = locale0.getISO3Country();
      TSynchronizedObjectDoubleMap<Double> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Double>(tObjectDoubleMap0, (Object) string0);
      String string1 = (String)tSynchronizedObjectDoubleMap0.mutex;
      // Undeclared exception!
      try {
        tSynchronizedObjectDoubleMap0.equals((Object) string1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TObjectDoubleCustomHashMap<String> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<String>();
      TSynchronizedObjectDoubleMap<String> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<String>((TObjectDoubleMap<String>) tObjectDoubleCustomHashMap0);
      boolean boolean0 = tSynchronizedObjectDoubleMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      HashingStrategy<Object> hashingStrategy0 = null;
      TObjectDoubleMap<Object> tObjectDoubleMap0 = null;
      TSynchronizedObjectDoubleMap<Object> tSynchronizedObjectDoubleMap0 = null;
      try {
        tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Object>(tObjectDoubleMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int0 = 1650;
      TObjectDoubleCustomHashMap<Object> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, int0, (float) int0);
      TSynchronizedObjectDoubleMap<Object> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Object>((TObjectDoubleMap<Object>) tObjectDoubleCustomHashMap0);
      String string0 = "";
      // Undeclared exception!
      try {
        File.createTempFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int0 = (-833);
      TObjectDoubleCustomHashMap<Object> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, int0);
      Locale locale0 = Locale.CHINESE;
      String string0 = locale0.getLanguage();
      TSynchronizedObjectDoubleMap<Object> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Object>((TObjectDoubleMap<Object>) tObjectDoubleCustomHashMap0, (Object) string0);
      Object object0 = null;
      double double0 = 1775.111437981441;
      tSynchronizedObjectDoubleMap0.putIfAbsent(object0, double0);
      assertEquals(1, tObjectDoubleCustomHashMap0.size());
      assertEquals("{null=1775.111437981441}", tObjectDoubleCustomHashMap0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = (-1203);
      TObjectDoubleHashMap<Integer> tObjectDoubleHashMap0 = new TObjectDoubleHashMap<Integer>(int0);
      Object object0 = TObjectHash.REMOVED;
      TSynchronizedObjectDoubleMap<Integer> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Integer>((TObjectDoubleMap<Integer>) tObjectDoubleHashMap0, object0);
      TSynchronizedObjectDoubleMap<Integer> tSynchronizedObjectDoubleMap1 = new TSynchronizedObjectDoubleMap<Integer>((TObjectDoubleMap<Integer>) tSynchronizedObjectDoubleMap0, object0);
      TObjectDoubleHashMap<Double> tObjectDoubleHashMap1 = new TObjectDoubleHashMap<Double>();
      String string0 = "t@sCCm#fquU";
      File file0 = new File(string0);
      File file1 = new File(file0, string0);
      String string1 = file1.toString();
      TSynchronizedObjectDoubleMap<Double> tSynchronizedObjectDoubleMap2 = new TSynchronizedObjectDoubleMap<Double>((TObjectDoubleMap<Double>) tObjectDoubleHashMap1, (Object) string1);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) int0;
      doubleArray0[1] = (double) int0;
      doubleArray0[2] = (double) int0;
      doubleArray0[3] = (double) int0;
      tSynchronizedObjectDoubleMap2.values(doubleArray0);
      int int1 = tSynchronizedObjectDoubleMap1.size();
      assertEquals(0, int1);
  }

  @Test
  public void test9()  throws Throwable  {
      TObjectDoubleCustomHashMap<Object> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Object>();
      Object object0 = null;
      TSynchronizedObjectDoubleMap<Object> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Object>((TObjectDoubleMap<Object>) tObjectDoubleCustomHashMap0, object0);
      double double0 = (-57.59540605560945);
      // Undeclared exception!
      try {
        tSynchronizedObjectDoubleMap0.put(object0, double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = 1373;
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int1 = (-1);
      String string0 = "";
      File file0 = new File(string0);
      File file1 = file0.getCanonicalFile();
      String string1 = file1.getAbsolutePath();
      int int2 = identityHashingStrategy0.computeHashCode((Object) string1);
      float float0 = 0.0F;
      TObjectDoubleMap<Object> tObjectDoubleMap0 = null;
      TObjectDoubleHashMap<Object> tObjectDoubleHashMap0 = new TObjectDoubleHashMap<Object>(int2, (float) int2, (double) float0);
      TSynchronizedObjectDoubleMap<Object> tSynchronizedObjectDoubleMap0 = new TSynchronizedObjectDoubleMap<Object>((TObjectDoubleMap<Object>) tObjectDoubleHashMap0);
      tSynchronizedObjectDoubleMap0.keySet();
      Object object0 = null;
      TSynchronizedObjectDoubleMap<Object> tSynchronizedObjectDoubleMap1 = new TSynchronizedObjectDoubleMap<Object>(tObjectDoubleMap0, object0);
      TObjectDoubleProcedure<Double> tObjectDoubleProcedure0 = null;
      String string2 = "1^Caln]WAG\"zZ";
      // Undeclared exception!
      try {
        File.createTempFile(string0, string2, file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TCharFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection;
import gnu.trove.map.TByteCharMap;
import gnu.trove.map.hash.TByteCharHashMap;
import gnu.trove.procedure.TByteCharProcedure;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TCharProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableByteCharMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.size()I: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.iterator()Lgnu/trove/iterator/TByteCharIterator;: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.value()C: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.hasNext()Z: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.advance()V: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.key()B: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableByteCharMap;)V: root-Branch
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.<init>(Lgnu/trove/map/TByteCharMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      char[] charArray0 = new char[10];
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      TByteCharHashMap tByteCharHashMap1 = new TByteCharHashMap((TByteCharMap) tUnmodifiableByteCharMap0);
      assertEquals(1, tUnmodifiableByteCharMap0.size());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      String string0 = tUnmodifiableByteCharMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.get(B)C: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      char char0 = tUnmodifiableByteCharMap0.get((byte)0);
      assertEquals('\u0000', char0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.getNoEntryKey()B: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      byte byte0 = tUnmodifiableByteCharMap0.getNoEntryKey();
      assertEquals((byte)0, byte0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.getNoEntryValue()C: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      char char0 = tUnmodifiableByteCharMap0.getNoEntryValue();
      assertEquals('\u0000', char0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.forEachEntry(Lgnu/trove/procedure/TByteCharProcedure;)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((int) (byte)0, (float) (byte)0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tUnmodifiableByteCharMap0.forEachEntry((TByteCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.containsValue(C)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((int) (byte)0, (float) (byte)0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tUnmodifiableByteCharMap0.containsValue('Q');
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((-15), (-15));
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      HashMap<Byte, Character> hashMap0 = new HashMap<Byte, Character>();
      // Undeclared exception!
      try {
        tUnmodifiableByteCharMap0.putAll((Map<? extends Byte, ? extends Character>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.adjustValue(BC)Z: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((int) '\u0000');
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteCharMap0.adjustValue((byte)57, '\u0000');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tUnmodifiableByteCharMap0.forEachKey((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.remove(B)C: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((int) (byte)0, (float) (byte)0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteCharMap0.remove((byte)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.hashCode()I: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((int) '\u0000');
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      int int0 = tUnmodifiableByteCharMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.putAll(Lgnu/trove/map/TByteCharMap;)V: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      char[] charArray0 = new char[10];
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteCharMap0.putAll((TByteCharMap) tUnmodifiableByteCharMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.increment(B)Z: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(1119, (float) 1119, (byte) (-22), 'w');
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteCharMap0.increment((byte) (-22));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.putIfAbsent(BC)C: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteCharMap0.putIfAbsent((byte) (-98), 'd');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.containsKey(B)Z: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tUnmodifiableByteCharMap0.containsKey((byte) (-108));
      assertEquals(false, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keys()[B: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      byte[] byteArray0 = tUnmodifiableByteCharMap0.keys();
      assertNotNull(byteArray0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      char[] charArray0 = new char[10];
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tUnmodifiableByteCharMap0.isEmpty();
      assertEquals(false, boolean0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.retainEntries(Lgnu/trove/procedure/TByteCharProcedure;)Z: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[5];
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(byteArray0, charArray0);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteCharMap0.retainEntries((TByteCharProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keys([B)[B: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      byte[] byteArray0 = tUnmodifiableByteCharMap0.keys(tByteCharHashMap0._states);
      assertNotNull(byteArray0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.adjustOrPutValue(BCC)C: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteCharMap0.adjustOrPutValue((byte) (-108), '*', '*');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.clear()V: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteCharMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tUnmodifiableByteCharMap0.forEachValue((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.values()[C: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      char[] charArray0 = tUnmodifiableByteCharMap0.values();
      assertNotNull(charArray0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.values([C)[C: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      char[] charArray0 = new char[4];
      char[] charArray1 = tUnmodifiableByteCharMap0.values(charArray0);
      assertSame(charArray1, charArray0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.put(BC)C: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteCharMap0.put((byte)53, 'N');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.transformValues(Lgnu/trove/function/TCharFunction;)V: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap((int) '|', (float) '\u0000');
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteCharMap0.transformValues((TCharFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.<init>(Lgnu/trove/map/TByteCharMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = null;
      try {
        tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keySet()Lgnu/trove/set/TByteSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.keySet()Lgnu/trove/set/TByteSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      TUnmodifiableByteSet tUnmodifiableByteSet0 = (TUnmodifiableByteSet)tUnmodifiableByteCharMap0.keySet();
      assertNotNull(tUnmodifiableByteSet0);
      
      TUnmodifiableByteSet tUnmodifiableByteSet1 = (TUnmodifiableByteSet)tUnmodifiableByteCharMap0.keySet();
      assertSame(tUnmodifiableByteSet1, tUnmodifiableByteSet0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.valueCollection()Lgnu/trove/TCharCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.valueCollection()Lgnu/trove/TCharCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(540, (float) 540, (byte) (-37), '[');
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      TUnmodifiableCharCollection tUnmodifiableCharCollection0 = (TUnmodifiableCharCollection)tUnmodifiableByteCharMap0.valueCollection();
      assertNotNull(tUnmodifiableCharCollection0);
      
      TUnmodifiableCharCollection tUnmodifiableCharCollection1 = (TUnmodifiableCharCollection)tUnmodifiableByteCharMap0.valueCollection();
      assertSame(tUnmodifiableCharCollection1, tUnmodifiableCharCollection0);
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - false
   */

  @Test
  public void test30()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap(1773, 1773);
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tUnmodifiableByteCharMap0.equals((Object) tByteCharHashMap0);
      assertEquals(true, boolean0);
  }

  //Test case number: 31
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableByteCharMap.<init>(Lgnu/trove/map/TByteCharMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TByteCharHashMap tByteCharHashMap0 = new TByteCharHashMap();
      TUnmodifiableByteCharMap tUnmodifiableByteCharMap0 = new TUnmodifiableByteCharMap((TByteCharMap) tByteCharHashMap0);
      boolean boolean0 = tUnmodifiableByteCharMap0.equals((Object) '\u0000');
      assertEquals(false, boolean0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TDoubleCollection;
import gnu.trove.impl.sync.TSynchronizedRandomAccessDoubleList;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessDoubleList;
import gnu.trove.list.TDoubleList;
import gnu.trove.list.array.TDoubleArrayList;
import gnu.trove.list.linked.TDoubleLinkedList;
import gnu.trove.procedure.TDoubleProcedure;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableDoubleListEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TDoubleList tDoubleList0 = null;
      TUnmodifiableDoubleList tUnmodifiableDoubleList0 = null;
      try {
        tUnmodifiableDoubleList0 = new TUnmodifiableDoubleList(tDoubleList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      TUnmodifiableRandomAccessDoubleList tUnmodifiableRandomAccessDoubleList0 = new TUnmodifiableRandomAccessDoubleList((TDoubleList) tDoubleArrayList0);
      double double0 = 0.0;
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessDoubleList0.remove(double0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      // Undeclared exception!
      try {
        tDoubleLinkedList0.min();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      TUnmodifiableDoubleList tUnmodifiableDoubleList0 = new TUnmodifiableDoubleList((TDoubleList) tDoubleArrayList0);
      double double0 = (-1970.361011864667);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleList0.remove(double0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      TUnmodifiableDoubleList tUnmodifiableDoubleList0 = new TUnmodifiableDoubleList((TDoubleList) tDoubleArrayList0);
      tUnmodifiableDoubleList0.getNoEntryValue();
      double double0 = 0.0;
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList(double0);
      int int0 = 0;
      // Undeclared exception!
      try {
        tDoubleLinkedList0.min();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      double double0 = 0.0;
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList(double0);
      int int0 = 671;
      TUnmodifiableRandomAccessDoubleList tUnmodifiableRandomAccessDoubleList0 = new TUnmodifiableRandomAccessDoubleList((TDoubleList) tDoubleLinkedList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessDoubleList0.reverse();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      double double0 = 59.38747658223129;
      doubleArray0[0] = double0;
      double double1 = Double.POSITIVE_INFINITY;
      doubleArray0[1] = double1;
      double double2 = 280.1248276464924;
      doubleArray0[2] = double2;
      double double3 = 1528.1266611786946;
      doubleArray0[3] = double3;
      double double4 = 0.0;
      doubleArray0[4] = double4;
      double double5 = 526.4273188137722;
      doubleArray0[5] = double5;
      double double6 = 0.0;
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0, double6);
      TUnmodifiableRandomAccessDoubleList tUnmodifiableRandomAccessDoubleList0 = new TUnmodifiableRandomAccessDoubleList((TDoubleList) tDoubleArrayList0);
      TDoubleList tDoubleList0 = tUnmodifiableRandomAccessDoubleList0.list;
      TUnmodifiableDoubleList tUnmodifiableDoubleList0 = new TUnmodifiableDoubleList(tDoubleList0);
      assertEquals(Double.POSITIVE_INFINITY, tUnmodifiableDoubleList0.sum(), 0.01D);
  }

  @Test
  public void test7()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      TUnmodifiableRandomAccessDoubleList tUnmodifiableRandomAccessDoubleList0 = new TUnmodifiableRandomAccessDoubleList((TDoubleList) tDoubleArrayList0);
      int int0 = 0;
      int int1 = 1820;
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessDoubleList0.fill(int0, int1, int1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      double double0 = (-816.9201904526294);
      doubleArray0[0] = double0;
      double double1 = 1197.5695138488093;
      doubleArray0[1] = double1;
      int int0 = 222;
      double double2 = (-670.8282941033924);
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(int0, double2);
      TUnmodifiableRandomAccessDoubleList tUnmodifiableRandomAccessDoubleList0 = new TUnmodifiableRandomAccessDoubleList((TDoubleList) tDoubleArrayList0);
      tUnmodifiableRandomAccessDoubleList0.iterator();
      double double3 = 1008.0344524191908;
      doubleArray0[2] = double3;
      double double4 = 1.0;
      doubleArray0[3] = double4;
      double double5 = (-445.39544378834324);
      doubleArray0[4] = double5;
      double double6 = (-1.0);
      doubleArray0[5] = double6;
      double double7 = (-1629.2461663902861);
      doubleArray0[6] = double7;
      double double8 = 0.0;
      doubleArray0[7] = double8;
      double double9 = 0.0;
      doubleArray0[8] = double9;
      double double10 = 0.0;
      TDoubleArrayList tDoubleArrayList1 = TDoubleArrayList.wrap(doubleArray0, double10);
      TUnmodifiableDoubleList tUnmodifiableDoubleList0 = new TUnmodifiableDoubleList((TDoubleList) tDoubleArrayList1);
      int int1 = (-127);
      tUnmodifiableDoubleList0.iterator();
      tDoubleArrayList1.reset();
      double double11 = 0.0;
      // Undeclared exception!
      try {
        tUnmodifiableDoubleList0.replace(int1, double11);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      double double0 = 0.0;
      doubleArray0[0] = double0;
      double double1 = 1396.4305539867746;
      doubleArray0[1] = double1;
      double double2 = 0.0;
      doubleArray0[2] = double2;
      double double3 = 1020.1757151781422;
      doubleArray0[3] = double3;
      double double4 = (-752.6144853464046);
      doubleArray0[4] = double4;
      double double5 = 0.0;
      doubleArray0[5] = double5;
      double double6 = 1.0;
      doubleArray0[6] = double6;
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      TUnmodifiableDoubleList tUnmodifiableDoubleList0 = new TUnmodifiableDoubleList((TDoubleList) tDoubleArrayList0);
      int int0 = 848;
      // Undeclared exception!
      try {
        tUnmodifiableDoubleList0.set(int0, doubleArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      TSynchronizedRandomAccessDoubleList tSynchronizedRandomAccessDoubleList0 = new TSynchronizedRandomAccessDoubleList((TDoubleList) tDoubleArrayList0);
      TSynchronizedRandomAccessDoubleList tSynchronizedRandomAccessDoubleList1 = new TSynchronizedRandomAccessDoubleList((TDoubleList) tSynchronizedRandomAccessDoubleList0);
      TDoubleProcedure tDoubleProcedure0 = null;
      TDoubleArrayList tDoubleArrayList1 = (TDoubleArrayList)tSynchronizedRandomAccessDoubleList1.grep(tDoubleProcedure0);
      TUnmodifiableRandomAccessDoubleList tUnmodifiableRandomAccessDoubleList0 = new TUnmodifiableRandomAccessDoubleList((TDoubleList) tSynchronizedRandomAccessDoubleList1);
      TUnmodifiableRandomAccessDoubleList tUnmodifiableRandomAccessDoubleList1 = new TUnmodifiableRandomAccessDoubleList((TDoubleList) tDoubleArrayList1);
      double double0 = (-911.275004715185);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessDoubleList1.add(double0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TDoubleList tDoubleList0 = null;
      TUnmodifiableRandomAccessDoubleList tUnmodifiableRandomAccessDoubleList0 = null;
      try {
        tUnmodifiableRandomAccessDoubleList0 = new TUnmodifiableRandomAccessDoubleList(tDoubleList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TDoubleList tDoubleList0 = null;
      TUnmodifiableRandomAccessDoubleList tUnmodifiableRandomAccessDoubleList0 = null;
      try {
        tUnmodifiableRandomAccessDoubleList0 = new TUnmodifiableRandomAccessDoubleList(tDoubleList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double double0 = 0.0;
      doubleArray0[0] = double0;
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0, double0);
      TUnmodifiableDoubleList tUnmodifiableDoubleList0 = new TUnmodifiableDoubleList((TDoubleList) tDoubleArrayList0);
      int int0 = 1946;
      int int1 = 10;
      // Undeclared exception!
      try {
        tUnmodifiableDoubleList0.add(doubleArray0, int0, int1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = (-1);
      TDoubleArrayList tDoubleArrayList0 = null;
      try {
        tDoubleArrayList0 = new TDoubleArrayList(int0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      int int0 = 10;
      TDoubleArrayList tDoubleArrayList1 = (TDoubleArrayList)tDoubleArrayList0.subList(int0, int0);
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList((TDoubleList) tDoubleArrayList1);
      TUnmodifiableDoubleList tUnmodifiableDoubleList0 = new TUnmodifiableDoubleList((TDoubleList) tDoubleLinkedList0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleList0.insert(int0, int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = 0;
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(int0);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) int0;
      double double0 = 0.0;
      doubleArray0[1] = double0;
      doubleArray0[2] = (double) int0;
      doubleArray0[3] = (double) int0;
      doubleArray0[4] = (double) int0;
      doubleArray0[5] = (double) int0;
      doubleArray0[6] = (double) int0;
      doubleArray0[7] = (double) int0;
      doubleArray0[8] = (double) int0;
      TDoubleArrayList.wrap(doubleArray0, doubleArray0[6]);
      TUnmodifiableRandomAccessDoubleList tUnmodifiableRandomAccessDoubleList0 = new TUnmodifiableRandomAccessDoubleList((TDoubleList) tDoubleArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessDoubleList0.removeAll((TDoubleCollection) tDoubleArrayList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      double double0 = 0.0;
      doubleArray0[0] = double0;
      double double1 = (-437.1217370616237);
      doubleArray0[1] = double1;
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      int int0 = 0;
      int int1 = (-359);
      // Undeclared exception!
      try {
        tDoubleArrayList0.subList(int0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // end index -359 greater than begin index 0
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      TUnmodifiableDoubleList tUnmodifiableDoubleList0 = new TUnmodifiableDoubleList((TDoubleList) tDoubleArrayList0);
      TDoubleArrayList tDoubleArrayList1 = (TDoubleArrayList)tUnmodifiableDoubleList0.list;
      double[] doubleArray0 = new double[5];
      double double0 = 397.0530303101775;
      doubleArray0[0] = double0;
      double double1 = 604.5308047622042;
      doubleArray0[1] = double1;
      double double2 = 922.4472295756796;
      doubleArray0[2] = double2;
      double double3 = 1931.1423769936155;
      doubleArray0[3] = double3;
      double double4 = (-63.5033313679094);
      doubleArray0[4] = double4;
      int int0 = 2037;
      // Undeclared exception!
      try {
        tUnmodifiableDoubleList0.toArray(doubleArray0, int0, int0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2037
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.list.array;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TLongCollection;
import gnu.trove.function.TLongFunction;
import gnu.trove.impl.sync.TSynchronizedLongList;
import gnu.trove.impl.sync.TSynchronizedLongSet;
import gnu.trove.impl.sync.TSynchronizedRandomAccessLongList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessLongList;
import gnu.trove.list.TLongList;
import gnu.trove.list.array.TLongArrayList;
import gnu.trove.list.linked.TLongLinkedList;
import gnu.trove.procedure.TLongProcedure;
import gnu.trove.set.TLongSet;
import gnu.trove.set.hash.TLongHashSet;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Random;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TLongArrayListEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.reverse()V: root-Branch
   * 2 gnu.trove.list.array.TLongArrayList.<init>(IJ)V: root-Branch
   * 3 gnu.trove.list.array.TLongArrayList.<init>()V: root-Branch
   * 4 gnu.trove.list.array.TLongArrayList.reverse(II)V: I4 Branch 51 IF_ICMPNE L626 - false
   */

  @Test
  public void test0()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      tLongArrayList0.reverse();
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals(true, tLongArrayList0.isEmpty());
  }

  //Test case number: 1
  /*
   * 8 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.add(J)Z: root-Branch
   * 2 gnu.trove.list.array.TLongArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - false
   * 3 gnu.trove.list.array.TLongArrayList.addAll(Ljava/util/Collection;)Z: I12 Branch 29 IFEQ L481 - true
   * 4 gnu.trove.list.array.TLongArrayList.addAll(Ljava/util/Collection;)Z: I12 Branch 29 IFEQ L481 - false
   * 5 gnu.trove.list.array.TLongArrayList.addAll(Ljava/util/Collection;)Z: I27 Branch 30 IFEQ L483 - false
   * 6 gnu.trove.list.array.TLongArrayList.<init>(I)V: root-Branch
   * 7 gnu.trove.list.array.TLongArrayList.<init>(Lgnu/trove/TLongCollection;)V: root-Branch
   * 8 gnu.trove.list.array.TLongArrayList.addAll(Lgnu/trove/TLongCollection;)Z: I13 Branch 31 IFEQ L495 - true
   */

  @Test
  public void test1()  throws Throwable  {
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      TLongHashSet tLongHashSet0 = new TLongHashSet((Collection<? extends Long>) linkedList0);
      TLongArrayList tLongArrayList0 = new TLongArrayList((TLongCollection) tLongHashSet0);
      Long long0 = new Long((-150L));
      linkedList0.add(long0);
      boolean boolean0 = tLongArrayList0.addAll((Collection<? extends Long>) linkedList0);
      assertEquals("{-150}", tLongArrayList0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 6 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.getQuick(I)J: root-Branch
   * 2 gnu.trove.list.array.TLongArrayList.wrap([J)Lgnu/trove/list/array/TLongArrayList;: root-Branch
   * 3 gnu.trove.list.array.TLongArrayList.wrap([JJ)Lgnu/trove/list/array/TLongArrayList;: root-Branch
   * 4 gnu.trove.list.array.TLongArrayList.<init>([JJZ)V: I7 Branch 2 IFNE L123 - true
   * 5 gnu.trove.list.array.TLongArrayList.<init>([JJZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 6 gnu.trove.list.array.TLongArrayList$1.<init>([JJZ)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      long[] longArray0 = new long[6];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      assertNotNull(tLongArrayList0);
      
      tLongArrayList0.getQuick(0);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.setQuick(IJ)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      // Undeclared exception!
      try {
        tLongArrayList0.setQuick(1460, 1460);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1460
         //
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.sort()V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(704);
      tLongArrayList0.sort();
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals("{}", tLongArrayList0.toString());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.sort(II)V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(0);
      // Undeclared exception!
      try {
        tLongArrayList0.sort(0, (-18));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-18)
         //
      }
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.swap(II)V: root-Branch
   * 2 gnu.trove.list.array.TLongArrayList.shuffle(Ljava/util/Random;)V: I9 Branch 54 IF_ICMPLE L640 - true
   * 3 gnu.trove.list.array.TLongArrayList.shuffle(Ljava/util/Random;)V: I9 Branch 54 IF_ICMPLE L640 - false
   */

  @Test
  public void test6()  throws Throwable  {
      long[] longArray0 = new long[10];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0, 0L);
      assertNotNull(tLongArrayList0);
      
      Random random0 = new Random(0L);
      tLongArrayList0.shuffle(random0);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals("{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}", tLongArrayList0.toString());
      assertEquals(0L, tLongArrayList0.sum());
  }

  //Test case number: 7
  /*
   * 15 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.lastIndexOf(J)I: root-Branch
   * 2 gnu.trove.list.array.TLongArrayList.size()I: root-Branch
   * 3 gnu.trove.list.array.TLongArrayList.iterator()Lgnu/trove/iterator/TLongIterator;: root-Branch
   * 4 gnu.trove.list.array.TLongArrayList$TLongArrayIterator.next()J: root-Branch
   * 5 gnu.trove.list.array.TLongArrayList$TLongArrayIterator.<init>(Lgnu/trove/list/array/TLongArrayList;I)V: root-Branch
   * 6 gnu.trove.list.array.TLongArrayList.get(I)J: I5 Branch 9 IF_ICMPLT L280 - true
   * 7 gnu.trove.list.array.TLongArrayList.containsAll(Lgnu/trove/TLongCollection;)Z: I4 Branch 24 IF_ACMPNE L453 - false
   * 8 gnu.trove.list.array.TLongArrayList.containsAll(Lgnu/trove/TLongCollection;)Z: I18 Branch 25 IFEQ L457 - true
   * 9 gnu.trove.list.array.TLongArrayList.containsAll(Lgnu/trove/TLongCollection;)Z: I18 Branch 25 IFEQ L457 - false
   * 10 gnu.trove.list.array.TLongArrayList.containsAll(Lgnu/trove/TLongCollection;)Z: I29 Branch 26 IFNE L459 - true
   * 11 gnu.trove.list.array.TLongArrayList.lastIndexOf(IJ)I: I7 Branch 84 IFLE L887 - false
   * 12 gnu.trove.list.array.TLongArrayList.lastIndexOf(IJ)I: I16 Branch 85 IFNE L888 - false
   * 13 gnu.trove.list.array.TLongArrayList.contains(J)Z: I5 Branch 86 IFLT L898 - false
   * 14 gnu.trove.list.array.TLongArrayList$TLongArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 15 gnu.trove.list.array.TLongArrayList$TLongArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - false
   */

  @Test
  public void test7()  throws Throwable  {
      long[] longArray0 = new long[6];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      assertNotNull(tLongArrayList0);
      
      TLongArrayList tLongArrayList1 = TLongArrayList.wrap(longArray0);
      boolean boolean0 = tLongArrayList0.containsAll((TLongCollection) tLongArrayList1);
      assertEquals(6, tLongArrayList1.size());
      assertEquals(true, boolean0);
      assertEquals(0L, tLongArrayList1.getNoEntryValue());
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.toArray(II)[J: root-Branch
   * 2 gnu.trove.list.array.TLongArrayList.toArray()[J: root-Branch
   * 3 gnu.trove.list.array.TLongArrayList.toArray([JII)[J: I3 Branch 60 IFNE L709 - false
   */

  @Test
  public void test8()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(6101, (-9223372036854775808L));
      long[] longArray0 = tLongArrayList0.toArray();
      assertEquals((-9223372036854775808L), tLongArrayList0.getNoEntryValue());
      assertNotNull(longArray0);
      assertEquals(0, tLongArrayList0.size());
  }

  //Test case number: 9
  /*
   * 7 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.set(I[J)V: root-Branch
   * 2 gnu.trove.list.array.TLongArrayList.set(I[JII)V: I3 Branch 12 IFLT L326 - false
   * 3 gnu.trove.list.array.TLongArrayList.set(I[JII)V: I9 Branch 13 IF_ICMPLE L326 - true
   * 4 gnu.trove.list.array.TLongArrayList.add([J)V: root-Branch
   * 5 gnu.trove.list.array.TLongArrayList.<init>([J)V: root-Branch
   * 6 gnu.trove.list.array.TLongArrayList.add([JII)V: root-Branch
   * 7 gnu.trove.list.array.TLongArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   */

  @Test
  public void test9()  throws Throwable  {
      long[] longArray0 = new long[10];
      TLongArrayList tLongArrayList0 = new TLongArrayList(longArray0);
      tLongArrayList0.set(0, longArray0);
      assertEquals(10, tLongArrayList0.size());
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals("{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}", tLongArrayList0.toString());
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.resetQuick()V: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(704);
      tLongArrayList0.resetQuick();
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals(true, tLongArrayList0.isEmpty());
      assertEquals("{}", tLongArrayList0.toString());
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.fill(J)V: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(0);
      tLongArrayList0.fill((-9223372036854775808L));
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals(true, tLongArrayList0.isEmpty());
      assertEquals(0, tLongArrayList0.size());
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.reset()V: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(706);
      tLongArrayList0.reset();
      assertEquals(true, tLongArrayList0.isEmpty());
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.getNoEntryValue()J: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(6101, (-9223372036854775808L));
      long long0 = tLongArrayList0.getNoEntryValue();
      assertEquals((-9223372036854775808L), long0);
      assertEquals(0, tLongArrayList0.size());
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList$1.ensureCapacity(I)V: I6 Branch 1 IF_ICMPLE L164 - true
   */

  @Test
  public void test14()  throws Throwable  {
      long[] longArray0 = new long[10];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      assertNotNull(tLongArrayList0);
      
      tLongArrayList0.ensureCapacity(0);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
  }

  //Test case number: 15
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.isEmpty()Z: I4 Branch 5 IFNE L201 - true
   * 2 gnu.trove.list.array.TLongArrayList.insert(I[J)V: root-Branch
   * 3 gnu.trove.list.array.TLongArrayList.insert(I[JII)V: I5 Branch 8 IF_ICMPNE L264 - false
   */

  @Test
  public void test15()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(704);
      long[] longArray0 = new long[2];
      tLongArrayList0.insert(0, longArray0);
      boolean boolean0 = tLongArrayList0.isEmpty();
      assertEquals(2, tLongArrayList0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.isEmpty()Z: I4 Branch 5 IFNE L201 - false
   */

  @Test
  public void test16()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      boolean boolean0 = tLongArrayList0.isEmpty();
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.trimToSize()V: I7 Branch 6 IF_ICMPLE L209 - true
   */

  @Test
  public void test17()  throws Throwable  {
      long[] longArray0 = new long[4];
      TLongArrayList tLongArrayList0 = new TLongArrayList(longArray0);
      tLongArrayList0.trimToSize();
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals(4, tLongArrayList0.size());
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.trimToSize()V: I7 Branch 6 IF_ICMPLE L209 - false
   */

  @Test
  public void test18()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      tLongArrayList0.trimToSize();
      assertEquals(0, tLongArrayList0.size());
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals(true, tLongArrayList0.isEmpty());
  }

  //Test case number: 19
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.insert(IJ)V: I5 Branch 7 IF_ICMPNE L243 - true
   * 2 gnu.trove.list.array.TLongArrayList$1.ensureCapacity(I)V: I6 Branch 1 IF_ICMPLE L164 - false
   */

  @Test
  public void test19()  throws Throwable  {
      long[] longArray0 = new long[8];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0, 0L);
      assertNotNull(tLongArrayList0);
      
      // Undeclared exception!
      try {
        tLongArrayList0.insert(0, 0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Can not grow ArrayList wrapped external array
         //
      }
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.insert(I[JII)V: I5 Branch 8 IF_ICMPNE L264 - true
   */

  @Test
  public void test20()  throws Throwable  {
      long[] longArray0 = new long[7];
      TLongArrayList tLongArrayList0 = new TLongArrayList(longArray0);
      tLongArrayList0.insert(0, longArray0);
      assertEquals(14, tLongArrayList0.size());
      assertEquals("{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}", tLongArrayList0.toString());
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.get(I)J: I5 Branch 9 IF_ICMPLT L280 - false
   */

  @Test
  public void test21()  throws Throwable  {
      TLongLinkedList tLongLinkedList0 = new TLongLinkedList();
      TSynchronizedRandomAccessLongList tSynchronizedRandomAccessLongList0 = new TSynchronizedRandomAccessLongList((TLongList) tLongLinkedList0);
      TLongArrayList tLongArrayList0 = new TLongArrayList((TLongCollection) tSynchronizedRandomAccessLongList0);
      // Undeclared exception!
      try {
        tLongArrayList0.get(153);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 153
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.set(IJ)J: I5 Branch 10 IF_ICMPLT L297 - true
   */

  @Test
  public void test22()  throws Throwable  {
      long[] longArray0 = new long[8];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      assertNotNull(tLongArrayList0);
      
      long long0 = tLongArrayList0.set(0, 0L);
      assertEquals(0L, long0);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals("{0, 0, 0, 0, 0, 0, 0, 0}", tLongArrayList0.toString());
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.set(IJ)J: I5 Branch 10 IF_ICMPLT L297 - false
   */

  @Test
  public void test23()  throws Throwable  {
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      TLongHashSet tLongHashSet0 = new TLongHashSet((Collection<? extends Long>) linkedList0);
      TLongArrayList tLongArrayList0 = new TLongArrayList((TLongCollection) tLongHashSet0);
      // Undeclared exception!
      try {
        tLongArrayList0.set(4, 4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 4
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.replace(IJ)J: I5 Branch 11 IF_ICMPLT L309 - true
   */

  @Test
  public void test24()  throws Throwable  {
      long[] longArray0 = new long[6];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      assertNotNull(tLongArrayList0);
      
      long long0 = tLongArrayList0.replace(0, 0L);
      assertEquals(0L, long0);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals("{0, 0, 0, 0, 0, 0}", tLongArrayList0.toString());
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.replace(IJ)J: I5 Branch 11 IF_ICMPLT L309 - false
   */

  @Test
  public void test25()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(1378);
      // Undeclared exception!
      try {
        tLongArrayList0.replace(1378, (-1872));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1378
         //
      }
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.set(I[JII)V: I3 Branch 12 IFLT L326 - true
   */

  @Test
  public void test26()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(704);
      long[] longArray0 = new long[2];
      // Undeclared exception!
      try {
        tLongArrayList0.set((-1951), longArray0, 1421, 704);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -1951
         //
      }
  }

  //Test case number: 27
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.set(I[JII)V: I9 Branch 13 IF_ICMPLE L326 - false
   * 2 gnu.trove.list.array.TLongArrayList.set(I[J)V: root-Branch
   * 3 gnu.trove.list.array.TLongArrayList.set(I[JII)V: I3 Branch 12 IFLT L326 - false
   */

  @Test
  public void test27()  throws Throwable  {
      long[] longArray0 = new long[10];
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      // Undeclared exception!
      try {
        tLongArrayList0.set(0, longArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
      }
  }

  //Test case number: 28
  /*
   * 12 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.remove(J)Z: I8 Branch 14 IF_ICMPGE L383 - true
   * 2 gnu.trove.list.array.TLongArrayList.remove(J)Z: I8 Branch 14 IF_ICMPGE L383 - false
   * 3 gnu.trove.list.array.TLongArrayList.remove(J)Z: I17 Branch 15 IFNE L384 - true
   * 4 gnu.trove.list.array.TLongArrayList.remove(J)Z: I17 Branch 15 IFNE L384 - false
   * 5 gnu.trove.list.array.TLongArrayList.removeAll([J)Z: I12 Branch 48 IFLE L601 - true
   * 6 gnu.trove.list.array.TLongArrayList.removeAll([J)Z: I12 Branch 48 IFLE L601 - false
   * 7 gnu.trove.list.array.TLongArrayList.removeAll([J)Z: I20 Branch 49 IFEQ L602 - true
   * 8 gnu.trove.list.array.TLongArrayList.removeAll([J)Z: I20 Branch 49 IFEQ L602 - false
   * 9 gnu.trove.list.array.TLongArrayList.remove(II)V: I3 Branch 16 IFNE L403 - true
   * 10 gnu.trove.list.array.TLongArrayList.remove(II)V: I8 Branch 17 IFLT L404 - false
   * 11 gnu.trove.list.array.TLongArrayList.remove(II)V: I12 Branch 18 IF_ICMPLT L404 - true
   * 12 gnu.trove.list.array.TLongArrayList.remove(II)V: I23 Branch 19 IFNE L408 - false
   */

  @Test
  public void test28()  throws Throwable  {
      long[] longArray0 = new long[6];
      longArray0[1] = (long) 1044;
      longArray0[2] = (long) 90;
      longArray0[3] = (long) 1044;
      longArray0[4] = (long) 1044;
      longArray0[5] = (long) 1044;
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      assertNotNull(tLongArrayList0);
      
      long[] longArray1 = new long[2];
      boolean boolean0 = tLongArrayList0.removeAll(longArray1);
      assertEquals(90L, tLongArrayList0.min());
      assertEquals(true, boolean0);
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.remove(II)V: I3 Branch 16 IFNE L403 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TLongLinkedList tLongLinkedList0 = new TLongLinkedList();
      TSynchronizedRandomAccessLongList tSynchronizedRandomAccessLongList0 = new TSynchronizedRandomAccessLongList((TLongList) tLongLinkedList0);
      TLongArrayList tLongArrayList0 = new TLongArrayList((TLongCollection) tSynchronizedRandomAccessLongList0);
      tLongArrayList0.remove(0, 0);
      assertEquals(0, tLongArrayList0.size());
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals(true, tLongArrayList0.isEmpty());
  }

  //Test case number: 30
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.remove(II)V: I8 Branch 17 IFLT L404 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      // Undeclared exception!
      try {
        tLongArrayList0.remove((-551), (-551));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -551
         //
      }
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.remove(II)V: I12 Branch 18 IF_ICMPLT L404 - false
   */

  @Test
  public void test31()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(1872, 0L);
      // Undeclared exception!
      try {
        tLongArrayList0.remove(1872, 1872);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1872
         //
      }
  }

  //Test case number: 32
  /*
   * 6 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.remove(II)V: I23 Branch 19 IFNE L408 - true
   * 2 gnu.trove.list.array.TLongArrayList.remove(II)V: I45 Branch 20 IF_ICMPNE L412 - true
   * 3 gnu.trove.list.array.TLongArrayList.remove(J)Z: I17 Branch 15 IFNE L384 - true
   * 4 gnu.trove.list.array.TLongArrayList.removeAll([J)Z: I12 Branch 48 IFLE L601 - true
   * 5 gnu.trove.list.array.TLongArrayList.removeAll([J)Z: I12 Branch 48 IFLE L601 - false
   * 6 gnu.trove.list.array.TLongArrayList.removeAll([J)Z: I20 Branch 49 IFEQ L602 - false
   */

  @Test
  public void test32()  throws Throwable  {
      long[] longArray0 = new long[7];
      long[] longArray1 = new long[13];
      longArray1[1] = 9223372036854775807L;
      TLongArrayList tLongArrayList0 = new TLongArrayList(longArray1);
      boolean boolean0 = tLongArrayList0.removeAll(longArray0);
      assertEquals(6, tLongArrayList0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 33
  /*
   * 6 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.remove(II)V: I45 Branch 20 IF_ICMPNE L412 - false
   * 2 gnu.trove.list.array.TLongArrayList.retainAll([J)Z: I21 Branch 40 IFLE L555 - true
   * 3 gnu.trove.list.array.TLongArrayList.retainAll([J)Z: I21 Branch 40 IFLE L555 - false
   * 4 gnu.trove.list.array.TLongArrayList.retainAll([J)Z: I29 Branch 41 IFGE L556 - true
   * 5 gnu.trove.list.array.TLongArrayList.retainAll([J)Z: I29 Branch 41 IFGE L556 - false
   * 6 gnu.trove.list.array.TLongArrayList.remove(II)V: I23 Branch 19 IFNE L408 - true
   */

  @Test
  public void test33()  throws Throwable  {
      long[] longArray0 = new long[8];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      assertNotNull(tLongArrayList0);
      
      long[] longArray1 = new long[6];
      longArray0[7] = (-1L);
      boolean boolean0 = tLongArrayList0.retainAll(longArray1);
      assertEquals("{0, 0, 0, 0, 0, 0, 0}", tLongArrayList0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 34
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.containsAll(Ljava/util/Collection;)Z: I8 Branch 21 IFEQ L436 - true
   */

  @Test
  public void test34()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(10, 10);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      boolean boolean0 = tLongArrayList0.containsAll((Collection<?>) linkedList0);
      assertEquals(10L, tLongArrayList0.getNoEntryValue());
      assertEquals(true, boolean0);
      assertEquals("{}", tLongArrayList0.toString());
  }

  //Test case number: 35
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.containsAll(Ljava/util/Collection;)Z: I8 Branch 21 IFEQ L436 - false
   * 2 gnu.trove.list.array.TLongArrayList.containsAll(Ljava/util/Collection;)Z: I16 Branch 22 IFEQ L437 - true
   */

  @Test
  public void test35()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      LinkedList<TLongArrayList> linkedList0 = new LinkedList<TLongArrayList>();
      linkedList0.add(tLongArrayList0);
      boolean boolean0 = tLongArrayList0.containsAll((Collection<?>) linkedList0);
      assertEquals("[{}]", linkedList0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 36
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.containsAll(Lgnu/trove/TLongCollection;)Z: I4 Branch 24 IF_ACMPNE L453 - true
   * 2 gnu.trove.list.array.TLongArrayList.containsAll(Lgnu/trove/TLongCollection;)Z: I29 Branch 26 IFNE L459 - false
   * 3 gnu.trove.list.array.TLongArrayList.lastIndexOf(IJ)I: I7 Branch 84 IFLE L887 - true
   * 4 gnu.trove.list.array.TLongArrayList.contains(J)Z: I5 Branch 86 IFLT L898 - true
   * 5 gnu.trove.list.array.TLongArrayList.containsAll(Lgnu/trove/TLongCollection;)Z: I18 Branch 25 IFEQ L457 - false
   */

  @Test
  public void test36()  throws Throwable  {
      long[] longArray0 = new long[6];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      assertNotNull(tLongArrayList0);
      
      TLongArrayList tLongArrayList1 = new TLongArrayList(90, 90);
      boolean boolean0 = tLongArrayList1.containsAll((TLongCollection) tLongArrayList0);
      assertEquals(false, boolean0);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals(0, tLongArrayList1.size());
      assertEquals(90L, tLongArrayList1.getNoEntryValue());
  }

  //Test case number: 37
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.containsAll([J)Z: I16 Branch 28 IFNE L470 - false
   * 2 gnu.trove.list.array.TLongArrayList.contains(J)Z: I5 Branch 86 IFLT L898 - true
   * 3 gnu.trove.list.array.TLongArrayList.lastIndexOf(IJ)I: I7 Branch 84 IFLE L887 - true
   * 4 gnu.trove.list.array.TLongArrayList.containsAll([J)Z: I8 Branch 27 IFLE L469 - false
   */

  @Test
  public void test37()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(706);
      long[] longArray0 = new long[7];
      boolean boolean0 = tLongArrayList0.containsAll(longArray0);
      assertEquals(false, boolean0);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
  }

  //Test case number: 38
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.addAll(Lgnu/trove/TLongCollection;)Z: I13 Branch 31 IFEQ L495 - false
   * 2 gnu.trove.list.array.TLongArrayList.addAll(Lgnu/trove/TLongCollection;)Z: I24 Branch 32 IFEQ L497 - false
   */

  @Test
  public void test38()  throws Throwable  {
      long[] longArray0 = new long[6];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0, (-495L));
      assertNotNull(tLongArrayList0);
      
      TLongArrayList tLongArrayList1 = new TLongArrayList((TLongCollection) tLongArrayList0);
      assertEquals("{0, 0, 0, 0, 0, 0}", tLongArrayList1.toString());
      assertEquals((-495L), tLongArrayList0.getNoEntryValue());
      assertEquals(0L, tLongArrayList1.getNoEntryValue());
  }

  //Test case number: 39
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.retainAll(Ljava/util/Collection;)Z: I13 Branch 35 IFEQ L522 - true
   * 2 gnu.trove.list.array.TLongArrayList.retainAll(Ljava/util/Collection;)Z: I13 Branch 35 IFEQ L522 - false
   * 3 gnu.trove.list.array.TLongArrayList.retainAll(Ljava/util/Collection;)Z: I21 Branch 36 IFGT L523 - false
   * 4 gnu.trove.list.array.TLongArrayList$TLongArrayIterator.remove()V: I5 Branch 103 IF_ICMPNE L1023 - true
   * 5 gnu.trove.list.array.TLongArrayList$TLongArrayIterator.remove()V: I26 Branch 104 IF_ICMPGE L1028 - false
   */

  @Test
  public void test39()  throws Throwable  {
      long[] longArray0 = new long[2];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0, (-1L));
      assertNotNull(tLongArrayList0);
      
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      boolean boolean0 = tLongArrayList0.retainAll((Collection<?>) linkedList0);
      assertEquals("{}", tLongArrayList0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 40
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.retainAll(Lgnu/trove/TLongCollection;)Z: I4 Branch 37 IF_ACMPNE L534 - false
   */

  @Test
  public void test40()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      boolean boolean0 = tLongArrayList0.retainAll((TLongCollection) tLongArrayList0);
      assertEquals(false, boolean0);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals("{}", tLongArrayList0.toString());
  }

  //Test case number: 41
  /*
   * 9 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.retainAll(Lgnu/trove/TLongCollection;)Z: I22 Branch 38 IFEQ L539 - false
   * 2 gnu.trove.list.array.TLongArrayList.retainAll(Lgnu/trove/TLongCollection;)Z: I29 Branch 39 IFNE L540 - false
   * 3 gnu.trove.list.array.TLongArrayList$TLongArrayIterator.remove()V: I5 Branch 103 IF_ICMPNE L1023 - true
   * 4 gnu.trove.list.array.TLongArrayList$TLongArrayIterator.remove()V: I26 Branch 104 IF_ICMPGE L1028 - false
   * 5 gnu.trove.list.array.TLongArrayList.retainAll(Lgnu/trove/TLongCollection;)Z: I4 Branch 37 IF_ACMPNE L534 - true
   * 6 gnu.trove.list.array.TLongArrayList.retainAll(Lgnu/trove/TLongCollection;)Z: I22 Branch 38 IFEQ L539 - true
   * 7 gnu.trove.list.array.TLongArrayList.addAll([J)Z: I18 Branch 33 IF_ICMPGE L508 - true
   * 8 gnu.trove.list.array.TLongArrayList.addAll([J)Z: I18 Branch 33 IF_ICMPGE L508 - false
   * 9 gnu.trove.list.array.TLongArrayList.addAll([J)Z: I28 Branch 34 IFEQ L509 - false
   */

  @Test
  public void test41()  throws Throwable  {
      long[] longArray0 = new long[5];
      TLongArrayList tLongArrayList0 = new TLongArrayList(0);
      tLongArrayList0.addAll(longArray0);
      assertEquals("{0, 0, 0, 0, 0}", tLongArrayList0.toString());
      
      TLongHashSet tLongHashSet0 = new TLongHashSet();
      TSynchronizedLongSet tSynchronizedLongSet0 = new TSynchronizedLongSet((TLongSet) tLongHashSet0);
      boolean boolean0 = tLongArrayList0.retainAll((TLongCollection) tSynchronizedLongSet0);
      assertEquals(true, boolean0);
  }

  //Test case number: 42
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.retainAll(Lgnu/trove/TLongCollection;)Z: I29 Branch 39 IFNE L540 - true
   * 2 gnu.trove.list.array.TLongArrayList.retainAll(Lgnu/trove/TLongCollection;)Z: I4 Branch 37 IF_ACMPNE L534 - true
   * 3 gnu.trove.list.array.TLongArrayList.retainAll(Lgnu/trove/TLongCollection;)Z: I22 Branch 38 IFEQ L539 - true
   * 4 gnu.trove.list.array.TLongArrayList.retainAll(Lgnu/trove/TLongCollection;)Z: I22 Branch 38 IFEQ L539 - false
   */

  @Test
  public void test42()  throws Throwable  {
      long[] longArray0 = new long[9];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0, 0L);
      assertNotNull(tLongArrayList0);
      
      TSynchronizedLongList tSynchronizedLongList0 = new TSynchronizedLongList((TLongList) tLongArrayList0);
      boolean boolean0 = tLongArrayList0.retainAll((TLongCollection) tSynchronizedLongList0);
      assertEquals(false, boolean0);
      assertEquals(0L, tSynchronizedLongList0.getNoEntryValue());
      assertEquals(9, tSynchronizedLongList0.size());
  }

  //Test case number: 43
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.removeAll(Ljava/util/Collection;)Z: I12 Branch 42 IFEQ L568 - false
   * 2 gnu.trove.list.array.TLongArrayList.removeAll(Ljava/util/Collection;)Z: I20 Branch 43 IFEQ L569 - true
   * 3 gnu.trove.list.array.TLongArrayList.removeAll(Ljava/util/Collection;)Z: I12 Branch 42 IFEQ L568 - true
   */

  @Test
  public void test43()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      LinkedList<TLongArrayList> linkedList0 = new LinkedList<TLongArrayList>();
      linkedList0.add(tLongArrayList0);
      boolean boolean0 = tLongArrayList0.removeAll((Collection<?>) linkedList0);
      assertEquals("[{}]", linkedList0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 44
  /*
   * 19 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.removeAll(Lgnu/trove/TLongCollection;)Z: I4 Branch 45 IF_ACMPNE L582 - true
   * 2 gnu.trove.list.array.TLongArrayList.removeAll(Lgnu/trove/TLongCollection;)Z: I26 Branch 46 IFEQ L588 - true
   * 3 gnu.trove.list.array.TLongArrayList.removeAll(Lgnu/trove/TLongCollection;)Z: I26 Branch 46 IFEQ L588 - false
   * 4 gnu.trove.list.array.TLongArrayList.removeAll(Lgnu/trove/TLongCollection;)Z: I37 Branch 47 IFEQ L590 - true
   * 5 gnu.trove.list.array.TLongArrayList.removeAll(Lgnu/trove/TLongCollection;)Z: I37 Branch 47 IFEQ L590 - false
   * 6 gnu.trove.list.array.TLongArrayList.removeAt(I)J: root-Branch
   * 7 gnu.trove.list.array.TLongArrayList.iterator()Lgnu/trove/iterator/TLongIterator;: root-Branch
   * 8 gnu.trove.list.array.TLongArrayList.remove(J)Z: I8 Branch 14 IF_ICMPGE L383 - true
   * 9 gnu.trove.list.array.TLongArrayList.remove(J)Z: I8 Branch 14 IF_ICMPGE L383 - false
   * 10 gnu.trove.list.array.TLongArrayList.remove(J)Z: I17 Branch 15 IFNE L384 - false
   * 11 gnu.trove.list.array.TLongArrayList.remove(II)V: I3 Branch 16 IFNE L403 - true
   * 12 gnu.trove.list.array.TLongArrayList.remove(II)V: I8 Branch 17 IFLT L404 - false
   * 13 gnu.trove.list.array.TLongArrayList.remove(II)V: I12 Branch 18 IF_ICMPLT L404 - true
   * 14 gnu.trove.list.array.TLongArrayList.remove(II)V: I23 Branch 19 IFNE L408 - false
   * 15 gnu.trove.list.array.TLongArrayList.get(I)J: I5 Branch 9 IF_ICMPLT L280 - true
   * 16 gnu.trove.list.array.TLongArrayList$TLongArrayIterator.next()J: root-Branch
   * 17 gnu.trove.list.array.TLongArrayList$TLongArrayIterator.<init>(Lgnu/trove/list/array/TLongArrayList;I)V: root-Branch
   * 18 gnu.trove.list.array.TLongArrayList$TLongArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 19 gnu.trove.list.array.TLongArrayList$TLongArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - false
   */

  @Test
  public void test44()  throws Throwable  {
      long[] longArray0 = new long[3];
      TLongArrayList tLongArrayList0 = new TLongArrayList(longArray0);
      tLongArrayList0.removeAt(0);
      assertEquals(2, tLongArrayList0.size());
      
      TLongArrayList tLongArrayList1 = TLongArrayList.wrap(longArray0);
      boolean boolean0 = tLongArrayList0.removeAll((TLongCollection) tLongArrayList1);
      assertEquals(true, boolean0);
  }

  //Test case number: 45
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.removeAll(Lgnu/trove/TLongCollection;)Z: I4 Branch 45 IF_ACMPNE L582 - false
   * 2 gnu.trove.list.array.TLongArrayList.clear(I)V: root-Branch
   * 3 gnu.trove.list.array.TLongArrayList.clear()V: root-Branch
   */

  @Test
  public void test45()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      boolean boolean0 = tLongArrayList0.removeAll((TLongCollection) tLongArrayList0);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals(true, boolean0);
      assertEquals(true, tLongArrayList0.isEmpty());
  }

  //Test case number: 46
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.transformValues(Lgnu/trove/function/TLongFunction;)V: I8 Branch 50 IFLE L612 - true
   */

  @Test
  public void test46()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(6101, (-9223372036854775808L));
      tLongArrayList0.transformValues((TLongFunction) null);
      assertEquals((-9223372036854775808L), tLongArrayList0.getNoEntryValue());
      assertEquals(0, tLongArrayList0.size());
      assertEquals(true, tLongArrayList0.isEmpty());
  }

  //Test case number: 47
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.transformValues(Lgnu/trove/function/TLongFunction;)V: I8 Branch 50 IFLE L612 - false
   * 2 gnu.trove.list.array.TLongArrayList.insert(IJ)V: I5 Branch 7 IF_ICMPNE L243 - false
   */

  @Test
  public void test47()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(6101, (-9223372036854775808L));
      tLongArrayList0.insert(0, 781L);
      // Undeclared exception!
      try {
        tLongArrayList0.transformValues((TLongFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 48
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.reverse(II)V: I4 Branch 51 IF_ICMPNE L626 - true
   * 2 gnu.trove.list.array.TLongArrayList.reverse(II)V: I12 Branch 52 IF_ICMPLE L629 - false
   * 3 gnu.trove.list.array.TLongArrayList.<init>(Lgnu/trove/TLongCollection;)V: root-Branch
   * 4 gnu.trove.list.array.TLongArrayList.addAll(Lgnu/trove/TLongCollection;)Z: I13 Branch 31 IFEQ L495 - true
   */

  @Test
  public void test48()  throws Throwable  {
      TLongHashSet tLongHashSet0 = new TLongHashSet(25, 25);
      TLongArrayList tLongArrayList0 = new TLongArrayList((TLongCollection) tLongHashSet0);
      // Undeclared exception!
      try {
        tLongArrayList0.reverse(25, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // from cannot be greater than to
         //
      }
  }

  //Test case number: 49
  /*
   * 6 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.reverse(II)V: I12 Branch 52 IF_ICMPLE L629 - true
   * 2 gnu.trove.list.array.TLongArrayList.reverse(II)V: I32 Branch 53 IF_ICMPGE L632 - true
   * 3 gnu.trove.list.array.TLongArrayList.reverse(II)V: I32 Branch 53 IF_ICMPGE L632 - false
   * 4 gnu.trove.list.array.TLongArrayList.reverse()V: root-Branch
   * 5 gnu.trove.list.array.TLongArrayList.swap(II)V: root-Branch
   * 6 gnu.trove.list.array.TLongArrayList.reverse(II)V: I4 Branch 51 IF_ICMPNE L626 - true
   */

  @Test
  public void test49()  throws Throwable  {
      long[] longArray0 = new long[2];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0, (-1L));
      assertNotNull(tLongArrayList0);
      
      tLongArrayList0.reverse();
      assertEquals((-1L), tLongArrayList0.getNoEntryValue());
      assertEquals(0L, tLongArrayList0.sum());
  }

  //Test case number: 50
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.subList(II)Lgnu/trove/list/TLongList;: I4 Branch 55 IF_ICMPGE L663 - true
   * 2 gnu.trove.list.array.TLongArrayList.subList(II)Lgnu/trove/list/TLongList;: I26 Branch 56 IFGE L667 - true
   * 3 gnu.trove.list.array.TLongArrayList.subList(II)Lgnu/trove/list/TLongList;: I40 Branch 57 IF_ICMPLE L670 - true
   * 4 gnu.trove.list.array.TLongArrayList.subList(II)Lgnu/trove/list/TLongList;: I73 Branch 58 IF_ICMPGE L674 - true
   * 5 gnu.trove.list.array.TLongArrayList.subList(II)Lgnu/trove/list/TLongList;: I73 Branch 58 IF_ICMPGE L674 - false
   */

  @Test
  public void test50()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(706);
      TLongArrayList tLongArrayList1 = (TLongArrayList)tLongArrayList0.subList(0, 706);
      assertNotNull(tLongArrayList1);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals(706, tLongArrayList1.size());
  }

  //Test case number: 51
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.subList(II)Lgnu/trove/list/TLongList;: I4 Branch 55 IF_ICMPGE L663 - false
   */

  @Test
  public void test51()  throws Throwable  {
      long[] longArray0 = new long[7];
      TLongArrayList tLongArrayList0 = new TLongArrayList(longArray0);
      // Undeclared exception!
      try {
        tLongArrayList0.subList(0, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // end index -1 greater than begin index 0
         //
      }
  }

  //Test case number: 52
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.subList(II)Lgnu/trove/list/TLongList;: I26 Branch 56 IFGE L667 - false
   */

  @Test
  public void test52()  throws Throwable  {
      long[] longArray0 = new long[3];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0, 0L);
      assertNotNull(tLongArrayList0);
      
      // Undeclared exception!
      try {
        tLongArrayList0.subList((-1), (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  //Test case number: 53
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.subList(II)Lgnu/trove/list/TLongList;: I40 Branch 57 IF_ICMPLE L670 - false
   * 2 gnu.trove.list.array.TLongArrayList.subList(II)Lgnu/trove/list/TLongList;: I4 Branch 55 IF_ICMPGE L663 - true
   * 3 gnu.trove.list.array.TLongArrayList.subList(II)Lgnu/trove/list/TLongList;: I26 Branch 56 IFGE L667 - true
   */

  @Test
  public void test53()  throws Throwable  {
      long[] longArray0 = new long[6];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      assertNotNull(tLongArrayList0);
      
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList((TLongList) tLongArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessLongList0.subList(0, 1759);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index < 6
         //
      }
  }

  //Test case number: 54
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.toArray([J)[J: I11 Branch 59 IF_ICMPLE L698 - true
   * 2 gnu.trove.list.array.TLongArrayList.toArray([JII)[J: I3 Branch 60 IFNE L709 - true
   * 3 gnu.trove.list.array.TLongArrayList.toArray([JII)[J: I11 Branch 61 IFLT L712 - false
   * 4 gnu.trove.list.array.TLongArrayList.toArray([JII)[J: I15 Branch 62 IF_ICMPLT L712 - true
   */

  @Test
  public void test54()  throws Throwable  {
      long[] longArray0 = new long[8];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      assertNotNull(tLongArrayList0);
      
      long[] longArray1 = tLongArrayList0.toArray(longArray0);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertNotNull(longArray1);
  }

  //Test case number: 55
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.toArray([J)[J: I11 Branch 59 IF_ICMPLE L698 - false
   * 2 gnu.trove.list.array.TLongArrayList.toArray([JII)[J: I3 Branch 60 IFNE L709 - false
   */

  @Test
  public void test55()  throws Throwable  {
      long[] longArray0 = new long[3];
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      long[] longArray1 = tLongArrayList0.toArray(longArray0);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertNotNull(longArray1);
      assertEquals(0, tLongArrayList0.size());
      assertEquals("{}", tLongArrayList0.toString());
  }

  //Test case number: 56
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.toArray([JII)[J: I11 Branch 61 IFLT L712 - true
   */

  @Test
  public void test56()  throws Throwable  {
      long[] longArray0 = new long[8];
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      // Undeclared exception!
      try {
        tLongArrayList0.toArray(longArray0, (-1077), (-1077));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -1077
         //
      }
  }

  //Test case number: 57
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.toArray([JII)[J: I15 Branch 62 IF_ICMPLT L712 - false
   * 2 gnu.trove.list.array.TLongArrayList.toArray([JII)[J: I3 Branch 60 IFNE L709 - true
   * 3 gnu.trove.list.array.TLongArrayList.toArray([JII)[J: I11 Branch 61 IFLT L712 - false
   */

  @Test
  public void test57()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      long[] longArray0 = new long[8];
      // Undeclared exception!
      try {
        tLongArrayList0.toArray(longArray0, 211, 211);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 211
         //
      }
  }

  //Test case number: 58
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.toArray([JIII)[J: I3 Branch 63 IFNE L722 - true
   * 2 gnu.trove.list.array.TLongArrayList.toArray([JIII)[J: I11 Branch 64 IFLT L725 - false
   * 3 gnu.trove.list.array.TLongArrayList.toArray([JIII)[J: I15 Branch 65 IF_ICMPLT L725 - false
   */

  @Test
  public void test58()  throws Throwable  {
      long[] longArray0 = new long[3];
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      // Undeclared exception!
      try {
        tLongArrayList0.toArray(longArray0, 11, (-911), (-911));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 11
         //
      }
  }

  //Test case number: 59
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.toArray([JIII)[J: I3 Branch 63 IFNE L722 - false
   */

  @Test
  public void test59()  throws Throwable  {
      long[] longArray0 = new long[4];
      TLongArrayList tLongArrayList0 = new TLongArrayList(longArray0);
      long[] longArray1 = tLongArrayList0.toArray(longArray0, 0, (-4), 0);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals(4, tLongArrayList0.size());
      assertNotNull(longArray1);
  }

  //Test case number: 60
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.toArray([JIII)[J: I11 Branch 64 IFLT L725 - true
   */

  @Test
  public void test60()  throws Throwable  {
      long[] longArray0 = new long[6];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      assertNotNull(tLongArrayList0);
      
      // Undeclared exception!
      try {
        tLongArrayList0.toArray(longArray0, (-1450), 14, 132);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -1450
         //
      }
  }

  //Test case number: 61
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.toArray([JIII)[J: I15 Branch 65 IF_ICMPLT L725 - true
   * 2 gnu.trove.list.array.TLongArrayList.toArray([JIII)[J: I3 Branch 63 IFNE L722 - true
   * 3 gnu.trove.list.array.TLongArrayList.toArray([JIII)[J: I11 Branch 64 IFLT L725 - false
   */

  @Test
  public void test61()  throws Throwable  {
      long[] longArray0 = new long[3];
      TLongArrayList tLongArrayList0 = new TLongArrayList(longArray0);
      // Undeclared exception!
      try {
        tLongArrayList0.toArray(longArray0, 0, (-911), (-911));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 62
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.equals(Ljava/lang/Object;)Z: I4 Branch 66 IF_ACMPNE L738 - true
   * 2 gnu.trove.list.array.TLongArrayList.equals(Ljava/lang/Object;)Z: I13 Branch 67 IFEQ L741 - true
   */

  @Test
  public void test62()  throws Throwable  {
      long[] longArray0 = new long[4];
      TLongArrayList tLongArrayList0 = new TLongArrayList(longArray0);
      boolean boolean0 = tLongArrayList0.equals((Object) null);
      assertEquals(false, boolean0);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals(4, tLongArrayList0.size());
  }

  //Test case number: 63
  /*
   * 6 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.equals(Ljava/lang/Object;)Z: I13 Branch 67 IFEQ L741 - false
   * 2 gnu.trove.list.array.TLongArrayList.equals(Ljava/lang/Object;)Z: I25 Branch 68 IF_ICMPEQ L743 - true
   * 3 gnu.trove.list.array.TLongArrayList.equals(Ljava/lang/Object;)Z: I36 Branch 69 IFLE L745 - true
   * 4 gnu.trove.list.array.TLongArrayList.equals(Ljava/lang/Object;)Z: I36 Branch 69 IFLE L745 - false
   * 5 gnu.trove.list.array.TLongArrayList.equals(Ljava/lang/Object;)Z: I48 Branch 70 IFEQ L746 - true
   * 6 gnu.trove.list.array.TLongArrayList.equals(Ljava/lang/Object;)Z: I4 Branch 66 IF_ACMPNE L738 - false
   */

  @Test
  public void test63()  throws Throwable  {
      long[] longArray0 = new long[6];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0, (-495L));
      assertNotNull(tLongArrayList0);
      
      TLongArrayList tLongArrayList1 = TLongArrayList.wrap(longArray0);
      boolean boolean0 = tLongArrayList0.equals((Object) tLongArrayList1);
      assertEquals((-495L), tLongArrayList0.getNoEntryValue());
      assertEquals(true, boolean0);
      assertEquals(0L, tLongArrayList1.getNoEntryValue());
      assertEquals(6, tLongArrayList0.size());
  }

  //Test case number: 64
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.equals(Ljava/lang/Object;)Z: I25 Branch 68 IF_ICMPEQ L743 - false
   * 2 gnu.trove.list.array.TLongArrayList.equals(Ljava/lang/Object;)Z: I4 Branch 66 IF_ACMPNE L738 - true
   * 3 gnu.trove.list.array.TLongArrayList.equals(Ljava/lang/Object;)Z: I13 Branch 67 IFEQ L741 - false
   */

  @Test
  public void test64()  throws Throwable  {
      long[] longArray0 = new long[8];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      assertNotNull(tLongArrayList0);
      
      long[] longArray1 = new long[6];
      TLongArrayList tLongArrayList1 = new TLongArrayList(longArray1);
      boolean boolean0 = tLongArrayList0.equals((Object) tLongArrayList1);
      assertEquals(0L, tLongArrayList1.getNoEntryValue());
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals(6, tLongArrayList1.size());
      assertFalse(tLongArrayList1.equals(tLongArrayList0));
      assertEquals(false, boolean0);
  }

  //Test case number: 65
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.hashCode()I: I12 Branch 71 IFLE L761 - true
   * 2 gnu.trove.list.array.TLongArrayList.hashCode()I: I12 Branch 71 IFLE L761 - false
   */

  @Test
  public void test65()  throws Throwable  {
      long[] longArray0 = new long[8];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0, 0L);
      assertNotNull(tLongArrayList0);
      
      int int0 = tLongArrayList0.hashCode();
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals(0, int0);
  }

  //Test case number: 66
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.forEach(Lgnu/trove/procedure/TLongProcedure;)Z: I8 Branch 72 IF_ICMPGE L772 - true
   */

  @Test
  public void test66()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      boolean boolean0 = tLongArrayList0.forEach((TLongProcedure) null);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals(true, tLongArrayList0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 67
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.forEachDescending(Lgnu/trove/procedure/TLongProcedure;)Z: I8 Branch 74 IFLE L783 - true
   */

  @Test
  public void test67()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      boolean boolean0 = tLongArrayList0.forEachDescending((TLongProcedure) null);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals(true, boolean0);
      assertEquals(0, tLongArrayList0.size());
  }

  //Test case number: 68
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.forEachDescending(Lgnu/trove/procedure/TLongProcedure;)Z: I8 Branch 74 IFLE L783 - false
   */

  @Test
  public void test68()  throws Throwable  {
      long[] longArray0 = new long[7];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0, 0L);
      assertNotNull(tLongArrayList0);
      
      // Undeclared exception!
      try {
        tLongArrayList0.forEachDescending((TLongProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 69
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.fill(IIJ)V: I5 Branch 76 IF_ICMPLE L816 - true
   */

  @Test
  public void test69()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(0);
      tLongArrayList0.fill(0, 0, 0L);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals(0, tLongArrayList0.size());
  }

  //Test case number: 70
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.fill(IIJ)V: I5 Branch 76 IF_ICMPLE L816 - false
   */

  @Test
  public void test70()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      tLongArrayList0.fill(0, 10, 10);
      assertEquals(100L, tLongArrayList0.sum());
      assertEquals(10, tLongArrayList0.size());
  }

  //Test case number: 71
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.binarySearch(JII)I: I3 Branch 77 IFGE L834 - false
   */

  @Test
  public void test71()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(113, (-1813L));
      // Undeclared exception!
      try {
        tLongArrayList0.binarySearch((long) 10, (-1742), 14);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -1742
         //
      }
  }

  //Test case number: 72
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.binarySearch(JII)I: I16 Branch 78 IF_ICMPLE L837 - false
   * 2 gnu.trove.list.array.TLongArrayList.binarySearch(JII)I: I3 Branch 77 IFGE L834 - true
   */

  @Test
  public void test72()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(10, 10);
      // Undeclared exception!
      try {
        tLongArrayList0.binarySearch(1487L, 10, 10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 10
         //
      }
  }

  //Test case number: 73
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.binarySearch(JII)I: I38 Branch 79 IF_ICMPGT L844 - false
   * 2 gnu.trove.list.array.TLongArrayList.binarySearch(JII)I: I59 Branch 80 IFGE L848 - false
   * 3 gnu.trove.list.array.TLongArrayList.binarySearch(JII)I: I38 Branch 79 IF_ICMPGT L844 - true
   * 4 gnu.trove.list.array.TLongArrayList.binarySearch(J)I: root-Branch
   * 5 gnu.trove.list.array.TLongArrayList.binarySearch(JII)I: I16 Branch 78 IF_ICMPLE L837 - true
   */

  @Test
  public void test73()  throws Throwable  {
      long[] longArray0 = new long[2];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      assertNotNull(tLongArrayList0);
      
      int int0 = tLongArrayList0.binarySearch(708L);
      assertEquals((-3), int0);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
  }

  //Test case number: 74
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.binarySearch(JII)I: I59 Branch 80 IFGE L848 - true
   * 2 gnu.trove.list.array.TLongArrayList.binarySearch(JII)I: I72 Branch 81 IFLE L851 - true
   * 3 gnu.trove.list.array.TLongArrayList.binarySearch(JII)I: I59 Branch 80 IFGE L848 - false
   */

  @Test
  public void test74()  throws Throwable  {
      long[] longArray0 = new long[2];
      longArray0[1] = 708L;
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      assertNotNull(tLongArrayList0);
      
      int int0 = tLongArrayList0.binarySearch(708L);
      assertEquals(1, int0);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
  }

  //Test case number: 75
  /*
   * 7 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.binarySearch(JII)I: I72 Branch 81 IFLE L851 - false
   * 2 gnu.trove.list.array.TLongArrayList.binarySearch(J)I: root-Branch
   * 3 gnu.trove.list.array.TLongArrayList.binarySearch(JII)I: I3 Branch 77 IFGE L834 - true
   * 4 gnu.trove.list.array.TLongArrayList.binarySearch(JII)I: I16 Branch 78 IF_ICMPLE L837 - true
   * 5 gnu.trove.list.array.TLongArrayList.binarySearch(JII)I: I38 Branch 79 IF_ICMPGT L844 - false
   * 6 gnu.trove.list.array.TLongArrayList.binarySearch(JII)I: I59 Branch 80 IFGE L848 - true
   * 7 gnu.trove.list.array.TLongArrayList.binarySearch(JII)I: I72 Branch 81 IFLE L851 - true
   */

  @Test
  public void test75()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[3] = 1L;
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      assertNotNull(tLongArrayList0);
      
      int int0 = tLongArrayList0.binarySearch(0L);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals(1, int0);
  }

  //Test case number: 76
  /*
   * 6 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.indexOf(IJ)I: I8 Branch 82 IF_ICMPGE L870 - false
   * 2 gnu.trove.list.array.TLongArrayList.indexOf(IJ)I: I17 Branch 83 IFNE L871 - true
   * 3 gnu.trove.list.array.TLongArrayList.insert(I[J)V: root-Branch
   * 4 gnu.trove.list.array.TLongArrayList.indexOf(IJ)I: I8 Branch 82 IF_ICMPGE L870 - true
   * 5 gnu.trove.list.array.TLongArrayList.insert(I[JII)V: I5 Branch 8 IF_ICMPNE L264 - false
   * 6 gnu.trove.list.array.TLongArrayList.indexOf(J)I: root-Branch
   */

  @Test
  public void test76()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(704);
      long[] longArray0 = new long[2];
      tLongArrayList0.insert(0, longArray0);
      int int0 = tLongArrayList0.indexOf(1L);
      assertEquals(2, tLongArrayList0.size());
      assertEquals((-1), int0);
  }

  //Test case number: 77
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.indexOf(IJ)I: I17 Branch 83 IFNE L871 - false
   * 2 gnu.trove.list.array.TLongArrayList.indexOf(J)I: root-Branch
   * 3 gnu.trove.list.array.TLongArrayList.indexOf(IJ)I: I8 Branch 82 IF_ICMPGE L870 - false
   */

  @Test
  public void test77()  throws Throwable  {
      long[] longArray0 = new long[7];
      TLongArrayList tLongArrayList0 = new TLongArrayList(longArray0);
      int int0 = tLongArrayList0.indexOf(0L);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals(0, int0);
      assertEquals(7, tLongArrayList0.size());
  }

  //Test case number: 78
  /*
   * 8 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.lastIndexOf(IJ)I: I16 Branch 85 IFNE L888 - true
   * 2 gnu.trove.list.array.TLongArrayList.lastIndexOf(J)I: root-Branch
   * 3 gnu.trove.list.array.TLongArrayList.contains(J)Z: I5 Branch 86 IFLT L898 - false
   * 4 gnu.trove.list.array.TLongArrayList.lastIndexOf(IJ)I: I7 Branch 84 IFLE L887 - false
   * 5 gnu.trove.list.array.TLongArrayList.lastIndexOf(IJ)I: I16 Branch 85 IFNE L888 - false
   * 6 gnu.trove.list.array.TLongArrayList.containsAll([J)Z: I8 Branch 27 IFLE L469 - true
   * 7 gnu.trove.list.array.TLongArrayList.containsAll([J)Z: I8 Branch 27 IFLE L469 - false
   * 8 gnu.trove.list.array.TLongArrayList.containsAll([J)Z: I16 Branch 28 IFNE L470 - true
   */

  @Test
  public void test78()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(90, 90);
      long[] longArray0 = new long[2];
      longArray0[1] = (long) 90;
      tLongArrayList0.add(longArray0);
      boolean boolean0 = tLongArrayList0.containsAll(longArray0);
      assertEquals(90L, tLongArrayList0.sum());
      assertEquals(true, boolean0);
  }

  //Test case number: 79
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.grep(Lgnu/trove/procedure/TLongProcedure;)Lgnu/trove/list/TLongList;: I14 Branch 87 IF_ICMPGE L905 - true
   */

  @Test
  public void test79()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      TLongArrayList tLongArrayList1 = (TLongArrayList)tLongArrayList0.grep((TLongProcedure) null);
      assertNotSame(tLongArrayList1, tLongArrayList0);
      assertEquals(0L, tLongArrayList1.getNoEntryValue());
      assertNotNull(tLongArrayList1);
  }

  //Test case number: 80
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.grep(Lgnu/trove/procedure/TLongProcedure;)Lgnu/trove/list/TLongList;: I14 Branch 87 IF_ICMPGE L905 - false
   */

  @Test
  public void test80()  throws Throwable  {
      long[] longArray0 = new long[8];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      assertNotNull(tLongArrayList0);
      
      // Undeclared exception!
      try {
        tLongArrayList0.grep((TLongProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 81
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.inverseGrep(Lgnu/trove/procedure/TLongProcedure;)Lgnu/trove/list/TLongList;: I14 Branch 89 IF_ICMPGE L917 - true
   */

  @Test
  public void test81()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(706);
      TLongArrayList tLongArrayList1 = (TLongArrayList)tLongArrayList0.inverseGrep((TLongProcedure) null);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertNotSame(tLongArrayList0, tLongArrayList1);
      assertNotNull(tLongArrayList1);
  }

  //Test case number: 82
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.inverseGrep(Lgnu/trove/procedure/TLongProcedure;)Lgnu/trove/list/TLongList;: I14 Branch 89 IF_ICMPGE L917 - false
   */

  @Test
  public void test82()  throws Throwable  {
      long[] longArray0 = new long[6];
      TLongArrayList tLongArrayList0 = new TLongArrayList(longArray0);
      // Undeclared exception!
      try {
        tLongArrayList0.inverseGrep((TLongProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 83
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TLongArrayList.max()J: I4 Branch 91 IFNE L928 - false
   */

  @Test
  public void test83()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(1137, 17L);
      // Undeclared exception!
      try {
        tLongArrayList0.max();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // cannot find maximum of an empty list
         //
      }
  }

  //Test case number: 84
  /*
   * 8 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.max()J: I33 Branch 93 IFLE L933 - false
   * 2 gnu.trove.list.array.TLongArrayList.add([J)V: root-Branch
   * 3 gnu.trove.list.array.TLongArrayList.<init>([J)V: root-Branch
   * 4 gnu.trove.list.array.TLongArrayList.add([JII)V: root-Branch
   * 5 gnu.trove.list.array.TLongArrayList.max()J: I4 Branch 91 IFNE L928 - true
   * 6 gnu.trove.list.array.TLongArrayList.max()J: I24 Branch 92 IF_ICMPGE L932 - true
   * 7 gnu.trove.list.array.TLongArrayList.max()J: I24 Branch 92 IF_ICMPGE L932 - false
   * 8 gnu.trove.list.array.TLongArrayList.max()J: I33 Branch 93 IFLE L933 - true
   */

  @Test
  public void test84()  throws Throwable  {
      long[] longArray0 = new long[10];
      longArray0[0] = (-8L);
      TLongArrayList tLongArrayList0 = new TLongArrayList(longArray0);
      long long0 = tLongArrayList0.max();
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals(10, tLongArrayList0.size());
      assertEquals(0L, long0);
  }

  //Test case number: 85
  /*
   * 11 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.min()J: I4 Branch 94 IFNE L943 - true
   * 2 gnu.trove.list.array.TLongArrayList.min()J: I24 Branch 95 IF_ICMPGE L947 - true
   * 3 gnu.trove.list.array.TLongArrayList.min()J: I24 Branch 95 IF_ICMPGE L947 - false
   * 4 gnu.trove.list.array.TLongArrayList.min()J: I33 Branch 96 IFGE L948 - true
   * 5 gnu.trove.list.array.TLongArrayList.min()J: I33 Branch 96 IFGE L948 - false
   * 6 gnu.trove.list.array.TLongArrayList.add(J)Z: root-Branch
   * 7 gnu.trove.list.array.TLongArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 8 gnu.trove.list.array.TLongArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - false
   * 9 gnu.trove.list.array.TLongArrayList.addAll([J)Z: I18 Branch 33 IF_ICMPGE L508 - true
   * 10 gnu.trove.list.array.TLongArrayList.addAll([J)Z: I18 Branch 33 IF_ICMPGE L508 - false
   * 11 gnu.trove.list.array.TLongArrayList.addAll([J)Z: I28 Branch 34 IFEQ L509 - false
   */

  @Test
  public void test85()  throws Throwable  {
      long[] longArray0 = new long[5];
      TLongArrayList tLongArrayList0 = new TLongArrayList(0);
      tLongArrayList0.addAll(longArray0);
      long long0 = tLongArrayList0.min();
      assertEquals(5, tLongArrayList0.size());
      assertEquals(0L, long0);
  }

  //Test case number: 86
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.min()J: I4 Branch 94 IFNE L943 - false
   * 2 gnu.trove.list.array.TLongArrayList.<init>(I)V: root-Branch
   */

  @Test
  public void test86()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(0);
      // Undeclared exception!
      try {
        tLongArrayList0.min();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // cannot find minimum of an empty list
         //
      }
  }

  //Test case number: 87
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.sum()J: I12 Branch 97 IF_ICMPGE L959 - true
   * 2 gnu.trove.list.array.TLongArrayList.sum()J: I12 Branch 97 IF_ICMPGE L959 - false
   */

  @Test
  public void test87()  throws Throwable  {
      long[] longArray0 = new long[6];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      assertNotNull(tLongArrayList0);
      
      long long0 = tLongArrayList0.sum();
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals(0L, long0);
  }

  //Test case number: 88
  /*
   * 8 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.toString()Ljava/lang/String;: I20 Branch 98 IF_ICMPGE L972 - true
   * 2 gnu.trove.list.array.TLongArrayList.toString()Ljava/lang/String;: I20 Branch 98 IF_ICMPGE L972 - false
   * 3 gnu.trove.list.array.TLongArrayList.toString()Ljava/lang/String;: I44 Branch 99 IFLE L976 - false
   * 4 gnu.trove.list.array.TLongArrayList.wrap([JJ)Lgnu/trove/list/array/TLongArrayList;: root-Branch
   * 5 gnu.trove.list.array.TLongArrayList.wrap([J)Lgnu/trove/list/array/TLongArrayList;: root-Branch
   * 6 gnu.trove.list.array.TLongArrayList.<init>([JJZ)V: I7 Branch 2 IFNE L123 - true
   * 7 gnu.trove.list.array.TLongArrayList.<init>([JJZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 8 gnu.trove.list.array.TLongArrayList$1.<init>([JJZ)V: root-Branch
   */

  @Test
  public void test88()  throws Throwable  {
      long[] longArray0 = new long[6];
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0);
      assertNotNull(tLongArrayList0);
      
      String string0 = tLongArrayList0.toString();
      assertEquals(6, tLongArrayList0.size());
      assertNotNull(string0);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals("{0, 0, 0, 0, 0, 0}", string0);
  }

  //Test case number: 89
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.toString()Ljava/lang/String;: I44 Branch 99 IFLE L976 - true
   * 2 gnu.trove.list.array.TLongArrayList.size()I: root-Branch
   * 3 gnu.trove.list.array.TLongArrayList.<init>()V: root-Branch
   * 4 gnu.trove.list.array.TLongArrayList.toString()Ljava/lang/String;: I20 Branch 98 IF_ICMPGE L972 - true
   */

  @Test
  public void test89()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      String string0 = tLongArrayList0.toString();
      assertEquals(0, tLongArrayList0.size());
      assertNotNull(string0);
      assertEquals(0L, tLongArrayList0.getNoEntryValue());
      assertEquals("{}", string0);
  }

  //Test case number: 90
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TLongArrayList.writeExternal(Ljava/io/ObjectOutput;)V: I35 Branch 100 IF_ICMPGE L1051 - true
   * 2 gnu.trove.list.array.TLongArrayList.writeExternal(Ljava/io/ObjectOutput;)V: I35 Branch 100 IF_ICMPGE L1051 - false
   * 3 gnu.trove.list.array.TLongArrayList.<init>(IJ)V: root-Branch
   */

  @Test
  public void test90()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList(1690, (-1L));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tLongArrayList0.writeExternal((ObjectOutput) objectOutputStream0);
  }
}

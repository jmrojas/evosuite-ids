/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TCharFunction;
import gnu.trove.impl.sync.TSynchronizedCharCollection;
import gnu.trove.impl.sync.TSynchronizedIntCharMap;
import gnu.trove.impl.sync.TSynchronizedIntSet;
import gnu.trove.iterator.TIntCharIterator;
import gnu.trove.map.TIntCharMap;
import gnu.trove.map.hash.TIntCharHashMap;
import gnu.trove.procedure.TCharProcedure;
import gnu.trove.procedure.TIntCharProcedure;
import gnu.trove.procedure.TIntProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedIntCharMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.putAll(Ljava/util/Map;)V: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedIntCharMap.<init>(Lgnu/trove/map/TIntCharMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0, (Object) "");
      HashMap<Integer, Character> hashMap0 = new HashMap<Integer, Character>();
      tSynchronizedIntCharMap0.putAll((Map<? extends Integer, ? extends Character>) hashMap0);
      assertEquals(0, tSynchronizedIntCharMap0.size());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.toString()Ljava/lang/String;: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedIntCharMap.<init>(Lgnu/trove/map/TIntCharMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test1()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(1638, (float) 'c', 1638, 'c');
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      String string0 = tSynchronizedIntCharMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.increment(I)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(1100, (float) 1100, 1100, ')');
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      boolean boolean0 = tSynchronizedIntCharMap0.increment((int) ')');
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.keys([I)[I: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(1100, (float) 1100, 1100, ')');
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      int[] intArray0 = tSynchronizedIntCharMap0.keys(tIntCharHashMap0._set);
      assertNotNull(intArray0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.adjustValue(IC)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap((-617), (float) (-617), (-617), 'h');
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      boolean boolean0 = tSynchronizedIntCharMap0.adjustValue((int) 'h', 'h');
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.get(I)C: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      char char0 = tSynchronizedIntCharMap0.get(429);
      assertEquals('\u0000', char0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.transformValues(Lgnu/trove/function/TCharFunction;)V: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap((-617), (float) (-617), (-617), 'h');
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      tSynchronizedIntCharMap0.transformValues((TCharFunction) null);
      assertEquals(0, tSynchronizedIntCharMap0.size());
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.putAll(Lgnu/trove/map/TIntCharMap;)V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap((-617), (float) (-617), (-617), 'h');
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      tSynchronizedIntCharMap0.putAll((TIntCharMap) tIntCharHashMap0);
      assertEquals(-617, tIntCharHashMap0.getNoEntryKey());
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.put(IC)C: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0, (Object) "");
      tSynchronizedIntCharMap0.put((int) '(', '(');
      assertEquals(false, tIntCharHashMap0.isEmpty());
      assertEquals(1, tSynchronizedIntCharMap0.size());
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.getNoEntryKey()I: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0, (Object) "it_IT");
      int int0 = tSynchronizedIntCharMap0.getNoEntryKey();
      assertEquals(0, int0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.keys()[I: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap((-617), (float) (-617), (-617), 'h');
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      int[] intArray0 = tSynchronizedIntCharMap0.keys();
      assertNotNull(intArray0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.size()I: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      int int0 = tSynchronizedIntCharMap0.size();
      assertEquals(0, int0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.iterator()Lgnu/trove/iterator/TIntCharIterator;: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0, (Object) "");
      TIntCharIterator tIntCharIterator0 = tSynchronizedIntCharMap0.iterator();
      assertEquals(false, tIntCharIterator0.hasNext());
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(1100, (float) 1100, 1100, ')');
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      boolean boolean0 = tSynchronizedIntCharMap0.equals((Object) tIntCharHashMap0);
      assertEquals(true, boolean0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(1638, (float) 'c', 1638, 'c');
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      boolean boolean0 = tSynchronizedIntCharMap0.forEachValue((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.clear()V: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      tSynchronizedIntCharMap0.clear();
      assertEquals(0, tSynchronizedIntCharMap0.size());
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.adjustOrPutValue(ICC)C: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap((-617), (float) (-617), (-617), 'h');
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      char char0 = tSynchronizedIntCharMap0.adjustOrPutValue((int) 'h', 'h', 'h');
      assertEquals(1, tIntCharHashMap0.size());
      assertEquals('h', char0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.forEachKey(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(1100, (float) 1100, 1100, ')');
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      boolean boolean0 = tSynchronizedIntCharMap0.forEachKey((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0, (Object) "it_IT");
      boolean boolean0 = tSynchronizedIntCharMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.containsKey(I)Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0, (Object) "");
      boolean boolean0 = tSynchronizedIntCharMap0.containsKey((int) '(');
      assertEquals(false, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.forEachEntry(Lgnu/trove/procedure/TIntCharProcedure;)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap((-617), (float) (-617), (-617), 'h');
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      boolean boolean0 = tSynchronizedIntCharMap0.forEachEntry((TIntCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.retainEntries(Lgnu/trove/procedure/TIntCharProcedure;)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      boolean boolean0 = tSynchronizedIntCharMap0.retainEntries((TIntCharProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.remove(I)C: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap((-617), (float) (-617), (-617), 'h');
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      char char0 = tSynchronizedIntCharMap0.remove((int) 'h');
      assertEquals('h', char0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.values([C)[C: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(1638, (float) 'c', 1638, 'c');
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      char[] charArray0 = new char[1];
      char[] charArray1 = tSynchronizedIntCharMap0.values(charArray0);
      assertSame(charArray0, charArray1);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.getNoEntryValue()C: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(1638, (float) 'c', 1638, 'c');
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      char char0 = tSynchronizedIntCharMap0.getNoEntryValue();
      assertEquals('c', char0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.values()[C: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0, (Object) "");
      char[] charArray0 = tSynchronizedIntCharMap0.values();
      assertNotNull(charArray0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.putIfAbsent(IC)C: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      tSynchronizedIntCharMap0.putIfAbsent((int) '6', '6');
      assertEquals(false, tIntCharHashMap0.isEmpty());
      assertEquals("{54=6}", tIntCharHashMap0.toString());
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.containsValue(C)Z: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap((-617), (float) (-617), (-617), 'h');
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      boolean boolean0 = tSynchronizedIntCharMap0.containsValue('h');
      assertEquals(false, boolean0);
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.hashCode()I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedIntCharMap.<init>(Lgnu/trove/map/TIntCharMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test28()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0, (Object) "it_IT");
      int int0 = tSynchronizedIntCharMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.<init>(Lgnu/trove/map/TIntCharMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = null;
      try {
        tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.keySet()Lgnu/trove/set/TIntSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedIntCharMap.keySet()Lgnu/trove/set/TIntSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test30()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(1638, (float) 'c', 1638, 'c');
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      TSynchronizedIntSet tSynchronizedIntSet0 = (TSynchronizedIntSet)tSynchronizedIntCharMap0.keySet();
      assertNotNull(tSynchronizedIntSet0);
      
      TSynchronizedIntSet tSynchronizedIntSet1 = (TSynchronizedIntSet)tSynchronizedIntCharMap0.keySet();
      assertSame(tSynchronizedIntSet1, tSynchronizedIntSet0);
  }

  //Test case number: 31
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntCharMap.valueCollection()Lgnu/trove/TCharCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 gnu.trove.impl.sync.TSynchronizedIntCharMap.valueCollection()Lgnu/trove/TCharCollection;: I11 Branch 3 IFNONNULL L121 - false
   * 3 gnu.trove.impl.sync.TSynchronizedIntCharMap.<init>(Lgnu/trove/map/TIntCharMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(1100, (float) 1100, 1100, ')');
      TSynchronizedIntCharMap tSynchronizedIntCharMap0 = new TSynchronizedIntCharMap((TIntCharMap) tIntCharHashMap0);
      TSynchronizedCharCollection tSynchronizedCharCollection0 = (TSynchronizedCharCollection)tSynchronizedIntCharMap0.valueCollection();
      assertNotNull(tSynchronizedCharCollection0);
      
      TSynchronizedCharCollection tSynchronizedCharCollection1 = (TSynchronizedCharCollection)tSynchronizedIntCharMap0.valueCollection();
      assertSame(tSynchronizedCharCollection1, tSynchronizedCharCollection0);
  }
}

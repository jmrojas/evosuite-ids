/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedCharCharMap;
import gnu.trove.impl.sync.TSynchronizedCharCollection;
import gnu.trove.iterator.TCharCharIterator;
import gnu.trove.map.TCharCharMap;
import gnu.trove.map.hash.TCharCharHashMap;
import java.io.ByteArrayInputStream;
import java.io.EOFException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.RandomAccessFile;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.Locale;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedCharCharMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = 0;
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap(int0);
      float float0 = (-1646.7471F);
      TCharCharHashMap tCharCharHashMap1 = new TCharCharHashMap(int0, float0);
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap1);
      String string0 = tSynchronizedCharCharMap0.toString();
      TSynchronizedCharCharMap tSynchronizedCharCharMap1 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0, (Object) string0);
      char char0 = '*';
      tSynchronizedCharCharMap1.increment(char0);
      tSynchronizedCharCharMap1.values();
      TCharCharMap tCharCharMap0 = null;
      TSynchronizedCharCharMap tSynchronizedCharCharMap2 = null;
      try {
        tSynchronizedCharCharMap2 = new TSynchronizedCharCharMap(tCharCharMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      char[] charArray0 = new char[6];
      char char0 = '>';
      charArray0[0] = char0;
      char char1 = '^';
      charArray0[1] = char1;
      char char2 = '|';
      charArray0[2] = char2;
      char char3 = '0';
      charArray0[3] = char3;
      char char4 = 'K';
      charArray0[4] = char4;
      char char5 = 'n';
      charArray0[5] = char5;
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap(charArray0, charArray0);
      String string0 = "dR!B";
      RandomAccessFile randomAccessFile0 = null;
      try {
        randomAccessFile0 = new RandomAccessFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"dR!B\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      char[] charArray0 = new char[10];
      char char0 = '3';
      charArray0[0] = char0;
      char char1 = 'e';
      charArray0[1] = char1;
      char char2 = 'm';
      charArray0[2] = char2;
      char char3 = '/';
      charArray0[3] = char3;
      charArray0[0] = char3;
      charArray0[1] = char2;
      charArray0[2] = char0;
      charArray0[3] = char1;
      char char4 = 'w';
      charArray0[4] = char4;
      charArray0[5] = char2;
      char char5 = '[';
      charArray0[6] = char5;
      charArray0[7] = char0;
      char char6 = ')';
      charArray0[8] = char6;
      charArray0[9] = char2;
      char char7 = '6';
      charArray0[4] = char7;
      char char8 = '*';
      charArray0[5] = char8;
      char char9 = 'V';
      charArray0[6] = char9;
      char char10 = '*';
      charArray0[7] = char10;
      char char11 = 't';
      charArray0[8] = char11;
      char char12 = '/';
      charArray0[9] = char12;
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap(charArray0, charArray0);
      String string0 = "\"";
      File file0 = null;
      // Undeclared exception!
      try {
        File.createTempFile(string0, string0, file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = 0;
      float float0 = 0.0F;
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap(int0, float0);
      TCharCharHashMap tCharCharHashMap1 = null;
      try {
        tCharCharHashMap1 = new TCharCharHashMap((TCharCharMap) tCharCharHashMap0);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      char[] charArray0 = new char[1];
      char char0 = '5';
      charArray0[0] = char0;
      int int0 = (-971);
      float float0 = 0.0F;
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap(int0, float0);
      String string0 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: :#
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = (-41);
      char char0 = 'o';
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap(int0, (float) int0, char0, char0);
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      TSynchronizedCharCharMap tSynchronizedCharCharMap1 = new TSynchronizedCharCharMap((TCharCharMap) tSynchronizedCharCharMap0);
      char[] charArray0 = new char[9];
      charArray0[0] = char0;
      char char1 = 'U';
      charArray0[1] = char1;
      charArray0[2] = char0;
      char char2 = tSynchronizedCharCharMap0.get(charArray0[1]);
      charArray0[3] = char0;
      charArray0[4] = char0;
      charArray0[5] = char0;
      String string0 = "";
      File file0 = new File(string0, string0);
      String string1 = file0.getName();
      boolean boolean0 = tSynchronizedCharCharMap1.equals((Object) string1);
      assertEquals(false, boolean0);
      
      TSynchronizedCharCollection tSynchronizedCharCollection0 = (TSynchronizedCharCollection)tSynchronizedCharCharMap1.valueCollection();
      assertNotNull(tSynchronizedCharCollection0);
      
      charArray0[6] = char0;
      charArray0[7] = char0;
      charArray0[8] = char0;
      char[] charArray1 = tSynchronizedCharCharMap0.keys(charArray0);
      assertNotNull(charArray1);
      
      char char3 = tSynchronizedCharCharMap1.remove(char0);
      assertTrue(tSynchronizedCharCharMap0.equals(tSynchronizedCharCharMap1));
      assertTrue(char3 == char2);
  }

  @Test
  public void test6()  throws Throwable  {
      TCharCharMap tCharCharMap0 = null;
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = null;
      try {
        tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap(tCharCharMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = (-477);
      float float0 = 0.5F;
      char char0 = '}';
      char char1 = 'r';
      int int1 = 0;
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap(int1);
      // Undeclared exception!
      try {
        Character.getName(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = 1257;
      char[] charArray0 = new char[4];
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap(int0, int0);
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      tSynchronizedCharCharMap0.toString();
      tSynchronizedCharCharMap0.keys(tCharCharHashMap0._set);
      char char0 = '>';
      charArray0[0] = char0;
      char char1 = 'X';
      charArray0[1] = char1;
      char char2 = 'n';
      charArray0[0] = char2;
      charArray0[1] = char1;
      charArray0[2] = char2;
      charArray0[3] = char1;
      char char3 = '!';
      charArray0[2] = char3;
      char char4 = 'f';
      charArray0[3] = char4;
      TCharCharHashMap tCharCharHashMap1 = new TCharCharHashMap(charArray0, charArray0);
      TSynchronizedCharCharMap tSynchronizedCharCharMap1 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap1);
      TCharCharHashMap tCharCharHashMap2 = new TCharCharHashMap(int0);
      tCharCharHashMap1.size();
      TCharCharHashMap tCharCharHashMap3 = new TCharCharHashMap((TCharCharMap) tCharCharHashMap2);
      TSynchronizedCharCharMap tSynchronizedCharCharMap2 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap3);
      char char5 = tSynchronizedCharCharMap2.getNoEntryValue();
      assertFalse(char5 == char1);
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = (-1885);
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap(int0);
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      char[] charArray0 = new char[5];
      char char0 = 'd';
      tSynchronizedCharCharMap0.putIfAbsent(char0, char0);
      char char1 = '<';
      tSynchronizedCharCharMap0.get(char1);
      tSynchronizedCharCharMap0.toString();
      charArray0[0] = char0;
      char char2 = '=';
      charArray0[1] = char2;
      char char3 = '0';
      charArray0[2] = char3;
      char char4 = 'y';
      charArray0[3] = char4;
      char char5 = ')';
      charArray0[4] = char5;
      tSynchronizedCharCharMap0.values(charArray0);
      assertEquals(false, tCharCharHashMap0.isEmpty());
      assertEquals("{d=d}", tCharCharHashMap0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap();
      char char0 = '{';
      HashMap<String, Character> hashMap0 = new HashMap<String, Character>();
      String string0 = "";
      tCharCharHashMap0.compact();
      // Undeclared exception!
      try {
        File.createTempFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 0;
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap(int0, int0);
      String string0 = "end index > size: ";
      File file0 = new File(string0);
      RandomAccessFile randomAccessFile0 = null;
      try {
        randomAccessFile0 = new RandomAccessFile(file0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"end index > size: \" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TCharCharMap tCharCharMap0 = null;
      int int0 = (-604);
      // Undeclared exception!
      try {
        Character.getName(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap();
      String string0 = "";
      char char0 = 'n';
      tCharCharHashMap0.containsKey(char0);
      String string1 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string1, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: :#
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = (-1651);
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap();
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      tSynchronizedCharCharMap0.putAll((TCharCharMap) tCharCharHashMap0);
      TSynchronizedCharCharMap tSynchronizedCharCharMap1 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      TSynchronizedCharCharMap tSynchronizedCharCharMap2 = (TSynchronizedCharCharMap)tSynchronizedCharCharMap1.mutex;
      tSynchronizedCharCharMap1.isEmpty();
      char char0 = ' ';
      tCharCharHashMap0.containsKey(char0);
      TSynchronizedCharCharMap tSynchronizedCharCharMap3 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0, (Object) tSynchronizedCharCharMap2);
      tSynchronizedCharCharMap3.clear();
      char char1 = 'p';
      tSynchronizedCharCharMap3.put(char1, char1);
      TCharCharHashMap tCharCharHashMap1 = new TCharCharHashMap(int0);
      char char2 = 'U';
      tSynchronizedCharCharMap1.valueCollection();
      char char3 = 'S';
      tSynchronizedCharCharMap3.put(char2, char3);
      URI uRI0 = null;
      File file0 = null;
      try {
        file0 = new File(uRI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TCharCharMap tCharCharMap0 = null;
      Locale locale0 = Locale.CANADA_FRENCH;
      locale0.getDisplayLanguage();
      String string0 = locale0.getDisplayLanguage();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale1 = new Locale(string0, string0, string0);
      locale0.getDisplayScript(locale1);
      Locale locale2 = Locale.ITALY;
      String string1 = locale0.getDisplayVariant(locale2);
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap(tCharCharMap0, (Object) string1);
      // Undeclared exception!
      try {
        tSynchronizedCharCharMap0.iterator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      char[] charArray0 = new char[7];
      char char0 = 'E';
      charArray0[0] = char0;
      char char1 = 'T';
      charArray0[1] = char1;
      char char2 = '\"';
      charArray0[2] = char2;
      char char3 = 'L';
      charArray0[3] = char3;
      char char4 = '[';
      charArray0[4] = char4;
      char char5 = 'f';
      charArray0[5] = char5;
      char char6 = '\'';
      charArray0[6] = char6;
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap(charArray0, charArray0);
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap0);
      TCharCharIterator tCharCharIterator0 = tSynchronizedCharCharMap0.iterator();
      assertEquals(true, tCharCharIterator0.hasNext());
  }

  @Test
  public void test17()  throws Throwable  {
      int int0 = 0;
      float float0 = 369.93286F;
      int int1 = 0;
      int int2 = (-1);
      float float1 = (-93.90644F);
      char char0 = 'C';
      char char1 = '1';
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap(int2, float1, char0, char1);
      TCharCharHashMap tCharCharHashMap1 = new TCharCharHashMap((TCharCharMap) tCharCharHashMap0);
      TSynchronizedCharCharMap tSynchronizedCharCharMap0 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap1);
      tSynchronizedCharCharMap0.keys();
      TCharCharHashMap tCharCharHashMap2 = new TCharCharHashMap(int1, float0);
      TSynchronizedCharCharMap tSynchronizedCharCharMap1 = new TSynchronizedCharCharMap((TCharCharMap) tCharCharHashMap2);
      String string0 = "";
      String string1 = "begin index can not be < 0";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string1);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://#begin%20index%20can%20not%20be%20%3C%200
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      int int0 = 924;
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap(int0);
      int int1 = 35863;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(tCharCharHashMap0._states, int1, int1);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) byteArrayInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test19()  throws Throwable  {
      int int0 = (-1131);
      float float0 = (-802.66705F);
      TCharCharHashMap tCharCharHashMap0 = new TCharCharHashMap(int0, float0);
      String string0 = "";
      RandomAccessFile randomAccessFile0 = null;
      try {
        randomAccessFile0 = new RandomAccessFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
      }
  }
}

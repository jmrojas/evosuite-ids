/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap;
import gnu.trove.map.TFloatByteMap;
import gnu.trove.map.hash.TFloatByteHashMap;
import gnu.trove.procedure.TFloatByteProcedure;
import gnu.trove.procedure.TFloatProcedure;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableFloatByteMapEvoSuite_Random {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          int int0 = (-532);
          float float0 = 38.742256F;
          byte byte0 = (byte) (-1);
          TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(int0, float0, (float) int0, byte0);
          TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
          tUnmodifiableFloatByteMap0.keys(tFloatByteHashMap0._set);
          tUnmodifiableFloatByteMap0.values(tFloatByteHashMap0._states);
          tUnmodifiableFloatByteMap0.iterator();
          String string0 = "";
          PrintStream printStream0 = null;
          try {
            printStream0 = new PrintStream(string0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.io.FilePermission\" \"\" \"write\")
             // java.lang.Thread.getStackTrace(Thread.java:1567)
             // org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
             // java.io.FileOutputStream.<init>(FileOutputStream.java:203)
             // java.io.FileOutputStream.<init>(FileOutputStream.java:104)
             // java.io.PrintStream.<init>(PrintStream.java:208)
             // sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
             // sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
             // sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
             // java.lang.reflect.Constructor.newInstance(Constructor.java:525)
             // org.evosuite.testcase.ConstructorStatement$1.execute(ConstructorStatement.java:226)
             // org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:144)
             // org.evosuite.testcase.ConstructorStatement.execute(ConstructorStatement.java:188)
             // org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             // org.evosuite.testcase.TestRunnable.call(TestRunnable.java:1)
             // java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
             // java.util.concurrent.FutureTask.run(FutureTask.java:166)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
             // java.lang.Thread.run(Thread.java:722)
             //
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test1()  throws Throwable  {
      float[] floatArray0 = new float[7];
      float float0 = (-1443.5793F);
      floatArray0[0] = float0;
      float float1 = 645.56116F;
      floatArray0[1] = float1;
      float float2 = (-1.0F);
      floatArray0[2] = float2;
      float float3 = 0.0F;
      floatArray0[3] = float3;
      float float4 = 1317.6853F;
      floatArray0[4] = float4;
      float float5 = 0.0F;
      floatArray0[5] = float5;
      float float6 = 282.15903F;
      floatArray0[6] = float6;
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(floatArray0, byteArray0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      int int0 = 367;
      float float7 = 1680.3599F;
      TFloatByteHashMap tFloatByteHashMap1 = new TFloatByteHashMap(int0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap1 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap1);
      tUnmodifiableFloatByteMap1.valueCollection();
      byte byte1 = (byte)114;
      TFloatByteHashMap tFloatByteHashMap2 = new TFloatByteHashMap(int0, (float) int0, float7, byte1);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap2 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap2);
      float float8 = (-515.0488F);
      // Undeclared exception!
      try {
        tUnmodifiableFloatByteMap2.putIfAbsent(float8, byte1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      float[] floatArray0 = new float[7];
      float float0 = 0.5F;
      floatArray0[0] = float0;
      float float1 = (-1119.5425F);
      floatArray0[1] = float1;
      float float2 = 1.0F;
      floatArray0[2] = float2;
      float float3 = 317.83203F;
      floatArray0[3] = float3;
      float float4 = 1900.714F;
      floatArray0[4] = float4;
      float float5 = (-1299.7816F);
      floatArray0[5] = float5;
      float float6 = 0.0F;
      floatArray0[6] = float6;
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-56);
      byteArray0[0] = byte0;
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(floatArray0, byteArray0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      boolean boolean0 = tUnmodifiableFloatByteMap0.containsKey(float0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      TFloatByteMap tFloatByteMap0 = null;
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = null;
      try {
        tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap(tFloatByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = (-859);
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      float[] floatArray0 = new float[10];
      floatArray0[0] = (float) int0;
      floatArray0[1] = (float) int0;
      floatArray0[2] = (float) int0;
      floatArray0[3] = (float) int0;
      floatArray0[4] = (float) int0;
      floatArray0[5] = (float) int0;
      float float0 = 34.43955F;
      floatArray0[6] = float0;
      floatArray0[7] = (float) int0;
      float float1 = (-1753.1979F);
      floatArray0[8] = float1;
      floatArray0[9] = (float) int0;
      tFloatByteHashMap0._set = floatArray0;
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      tUnmodifiableFloatByteMap0.keys(tFloatByteHashMap0._set);
      TFloatByteHashMap tFloatByteHashMap1 = new TFloatByteHashMap(int0);
      byte byte0 = (byte) (-1);
      byte byte1 = (byte)0;
      // Undeclared exception!
      try {
        tUnmodifiableFloatByteMap0.putIfAbsent((float) byte0, byte1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = 2141977;
      float float0 = (-1245.5074F);
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(int0);
      TFloatByteHashMap tFloatByteHashMap1 = new TFloatByteHashMap((TFloatByteMap) tFloatByteHashMap0);
      float[] floatArray0 = new float[2];
      floatArray0[0] = float0;
      floatArray0[1] = float0;
      tFloatByteHashMap0._set = floatArray0;
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap1);
      byte byte0 = (byte)36;
      byte byte1 = (byte)60;
      // Undeclared exception!
      try {
        tUnmodifiableFloatByteMap0.adjustOrPutValue(float0, byte0, byte1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = 1461;
      int int1 = (-1);
      byte byte0 = (byte)77;
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(int1, (float) int0, (float) int1, byte0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      TFloatByteHashMap tFloatByteHashMap1 = new TFloatByteHashMap(int0, int0);
      TFloatByteHashMap tFloatByteHashMap2 = new TFloatByteHashMap((TFloatByteMap) tFloatByteHashMap1);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap1 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap2);
      tFloatByteHashMap0.getNoEntryKey();
      float float0 = 0.0F;
      byte byte1 = tUnmodifiableFloatByteMap1.get(float0);
      assertFalse(byte1 == byte0);
  }

  @Test
  public void test7()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      float float0 = (-502.3485F);
      byte byte0 = (byte)114;
      byte byte1 = (byte)115;
      // Undeclared exception!
      try {
        tUnmodifiableFloatByteMap0.adjustOrPutValue(float0, byte0, byte1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      tUnmodifiableFloatByteMap0.getNoEntryKey();
      byte byte0 = (byte)55;
      tFloatByteHashMap0.containsValue(byte0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap1 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      tUnmodifiableFloatByteMap1.get((float) byte0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap2 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap3 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      TFloatProcedure tFloatProcedure0 = null;
      tUnmodifiableFloatByteMap0.forEachKey(tFloatProcedure0);
      tUnmodifiableFloatByteMap2.getNoEntryValue();
      TFloatByteHashMap tFloatByteHashMap1 = new TFloatByteHashMap((TFloatByteMap) tFloatByteHashMap0);
      tUnmodifiableFloatByteMap3.keys(tFloatByteHashMap0._set);
      tUnmodifiableFloatByteMap2.getNoEntryValue();
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap4 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap1);
      tUnmodifiableFloatByteMap2.iterator();
      // Undeclared exception!
      try {
        tUnmodifiableFloatByteMap2.putAll((TFloatByteMap) tFloatByteHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 0;
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(int0, int0);
      float[] floatArray0 = new float[8];
      floatArray0[0] = (float) int0;
      floatArray0[1] = (float) int0;
      floatArray0[2] = (float) int0;
      floatArray0[3] = (float) int0;
      floatArray0[4] = (float) int0;
      floatArray0[5] = (float) int0;
      floatArray0[6] = (float) int0;
      floatArray0[7] = (float) int0;
      tFloatByteHashMap0.keys(floatArray0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      String string0 = tUnmodifiableFloatByteMap0.toString();
      assertNotNull(string0);
      
      Locale locale0 = Locale.GERMAN;
      String string1 = locale0.getISO3Country();
      boolean boolean0 = tUnmodifiableFloatByteMap0.equals((Object) string1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      float float0 = 1.0F;
      tUnmodifiableFloatByteMap0.get(float0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatByteMap0.remove(float0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 112;
      int int1 = 272;
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(int1, int1);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      byte byte0 = (byte)0;
      byte byte1 = (byte)0;
      // Undeclared exception!
      try {
        tUnmodifiableFloatByteMap0.adjustOrPutValue((float) int0, byte0, byte1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      TFloatByteMap tFloatByteMap0 = null;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Already connected
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      float[] floatArray0 = new float[6];
      float float0 = (-909.599F);
      floatArray0[0] = float0;
      float float1 = (-327.04535F);
      floatArray0[1] = float1;
      float float2 = (-740.1024F);
      floatArray0[2] = float2;
      float float3 = 0.0F;
      floatArray0[3] = float3;
      float float4 = (-21.33921F);
      floatArray0[4] = float4;
      float float5 = 0.0F;
      floatArray0[5] = float5;
      byte[] byteArray0 = new byte[10];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)3;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-13);
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      byte byte4 = (byte)0;
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-28);
      byteArray0[5] = byte5;
      byte byte6 = (byte)51;
      byteArray0[6] = byte6;
      byte byte7 = (byte)39;
      byteArray0[7] = byte7;
      byte byte8 = (byte)0;
      byteArray0[8] = byte8;
      byte byte9 = (byte)0;
      byteArray0[9] = byte9;
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(floatArray0, byteArray0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      TFloatByteProcedure tFloatByteProcedure0 = null;
      // Undeclared exception!
      try {
        tUnmodifiableFloatByteMap0.forEachEntry(tFloatByteProcedure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

//   @Test
//   public void test14()  throws Throwable  {
//       int int0 = (-1332);
//       float float0 = 1946.1937F;
//       byte byte0 = (byte)0;
//       float[] floatArray0 = new float[10];
//       floatArray0[0] = (float) int0;
//       floatArray0[1] = (float) int0;
//       floatArray0[0] = float0;
//       floatArray0[1] = (float) int0;
//       floatArray0[2] = float0;
//       floatArray0[3] = (float) byte0;
//       floatArray0[4] = float0;
//       floatArray0[5] = (float) byte0;
//       floatArray0[6] = (float) byte0;
//       floatArray0[7] = (float) int0;
//       floatArray0[8] = float0;
//       floatArray0[9] = (float) int0;
//       floatArray0[2] = (float) int0;
//       floatArray0[3] = (float) int0;
//       float float1 = 6.6360896E8F;
//       TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap((int) byte0, (float) byte0, floatArray0[2], byte0);
//       TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
//       floatArray0[4] = float1;
//       floatArray0[5] = (float) byte0;
//       floatArray0[6] = (float) byte0;
//       floatArray0[7] = (float) int0;
//       floatArray0[8] = (float) int0;
//       floatArray0[9] = float0;
//       byte[] byteArray0 = new byte[1];
//       float float2 = tUnmodifiableFloatByteMap0.getNoEntryKey();
//       assertEquals((-1332.0F), float2, 0.01F);
//       
//       byteArray0[0] = byte0;
//       TFloatByteHashMap tFloatByteHashMap1 = new TFloatByteHashMap(floatArray0, byteArray0);
//       TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap1 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap1);
//       tUnmodifiableFloatByteMap1.getNoEntryKey();
//       TFloatByteHashMap tFloatByteHashMap2 = new TFloatByteHashMap(int0, (float) int0, float0, byte0);
//       float float3 = 1.0F;
//       tFloatByteHashMap2.contains(float3);
//       TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap2 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap2);
//       tUnmodifiableFloatByteMap2.getNoEntryValue();
//       float float4 = 0.0F;
//       // Undeclared exception!
//       try {
//         tUnmodifiableFloatByteMap2.adjustValue(float4, byte0);
//         fail("Expecting exception: UnsupportedOperationException");
//       
//       } catch(UnsupportedOperationException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//       }
//   }

  @Test
  public void test15()  throws Throwable  {
      int int0 = 339;
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(int0);
      String string0 = "";
      String string1 = "=&s)E';ej&3GjEUS\"";
      PrintStream printStream0 = null;
      try {
        printStream0 = new PrintStream(string0, string1);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
         //
         // =&s)E';ej&3GjEUS\"
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = (-864);
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(int0, int0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatByteMap0.putAll((TFloatByteMap) tFloatByteHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      int int0 = (-999);
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(int0);
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-53);
      byteArray0[0] = byte0;
      tFloatByteHashMap0._states = byteArray0;
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      byte byte1 = (byte)2;
      // Undeclared exception!
      try {
        tUnmodifiableFloatByteMap0.containsValue(byte1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      float[] floatArray0 = new float[4];
      float float0 = 312.70215F;
      floatArray0[0] = float0;
      float float1 = 1815.6537F;
      floatArray0[1] = float1;
      float float2 = 246.31F;
      floatArray0[2] = float2;
      float float3 = 1.0F;
      floatArray0[3] = float3;
      byte[] byteArray0 = new byte[10];
      byte byte0 = (byte)36;
      byteArray0[0] = byte0;
      byte byte1 = (byte)1;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-104);
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-52);
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-107);
      byteArray0[4] = byte4;
      byte byte5 = (byte)12;
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-114);
      byteArray0[6] = byte6;
      byte byte7 = (byte) (-125);
      byteArray0[7] = byte7;
      byte byte8 = (byte)12;
      byteArray0[8] = byte8;
      byte byte9 = (byte)55;
      byteArray0[9] = byte9;
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(floatArray0, byteArray0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatByteMap0.putAll((TFloatByteMap) tFloatByteHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

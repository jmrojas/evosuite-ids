/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TFloatFunction;
import gnu.trove.impl.sync.TSynchronizedFloatCollection;
import gnu.trove.impl.sync.TSynchronizedShortFloatMap;
import gnu.trove.impl.sync.TSynchronizedShortSet;
import gnu.trove.iterator.TShortFloatIterator;
import gnu.trove.map.TShortFloatMap;
import gnu.trove.map.hash.TShortFloatHashMap;
import gnu.trove.procedure.TFloatProcedure;
import gnu.trove.procedure.TShortFloatProcedure;
import gnu.trove.procedure.TShortProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedShortFloatMapEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 9 covered goals:
   * 1 Weak Mutation 2: gnu.trove.impl.sync.TSynchronizedShortFloatMap.size()I:71 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 3: gnu.trove.impl.sync.TSynchronizedShortFloatMap.size()I:71 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 3 Weak Mutation 4: gnu.trove.impl.sync.TSynchronizedShortFloatMap.size()I:71 - DeleteStatement: size()I
   * 4 gnu.trove.impl.sync.TSynchronizedShortFloatMap.size()I: root-Branch
   * 5 Weak Mutation 1: gnu.trove.impl.sync.TSynchronizedShortFloatMap.<init>(Lgnu/trove/map/TShortFloatMap;Ljava/lang/Object;)V:67 - ReplaceVariable mutex -> mutex
   * 6 Weak Mutation 2: gnu.trove.impl.sync.TSynchronizedShortFloatMap.size()I:71 - DeleteField: mutexLjava/lang/Object;
   * 7 Weak Mutation 3: gnu.trove.impl.sync.TSynchronizedShortFloatMap.size()I:71 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 8 Weak Mutation 4: gnu.trove.impl.sync.TSynchronizedShortFloatMap.size()I:71 - DeleteStatement: size()I
   * 9 gnu.trove.impl.sync.TSynchronizedShortFloatMap.<init>(Lgnu/trove/map/TShortFloatMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(963, (float) 963, (short)31, (float) (short)31);
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0, (Object) "zh-TW");
      int int0 = tSynchronizedShortFloatMap0.size();
      assertEquals(0, int0);
  }

  //Test case number: 1
  /*
   * 7 covered goals:
   * 1 Weak Mutation 5: gnu.trove.impl.sync.TSynchronizedShortFloatMap.isEmpty()Z:74 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 6: gnu.trove.impl.sync.TSynchronizedShortFloatMap.isEmpty()Z:74 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 3 Weak Mutation 7: gnu.trove.impl.sync.TSynchronizedShortFloatMap.isEmpty()Z:74 - DeleteStatement: isEmpty()Z
   * 4 gnu.trove.impl.sync.TSynchronizedShortFloatMap.isEmpty()Z: root-Branch
   * 5 Weak Mutation 5: gnu.trove.impl.sync.TSynchronizedShortFloatMap.isEmpty()Z:74 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 6: gnu.trove.impl.sync.TSynchronizedShortFloatMap.isEmpty()Z:74 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 7 Weak Mutation 7: gnu.trove.impl.sync.TSynchronizedShortFloatMap.isEmpty()Z:74 - DeleteStatement: isEmpty()Z
   */

  @Test
  public void test1()  throws Throwable  {
      short[] shortArray0 = new short[1];
      float[] floatArray0 = new float[5];
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0, (Object) "fr");
      boolean boolean0 = tSynchronizedShortFloatMap0.isEmpty();
      assertEquals(false, boolean0);
  }

  //Test case number: 2
  /*
   * 13 covered goals:
   * 1 Weak Mutation 8: gnu.trove.impl.sync.TSynchronizedShortFloatMap.containsKey(S)Z:77 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 9: gnu.trove.impl.sync.TSynchronizedShortFloatMap.containsKey(S)Z:77 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 3 Weak Mutation 10: gnu.trove.impl.sync.TSynchronizedShortFloatMap.containsKey(S)Z:77 - InsertUnaryOp Negation of key
   * 4 Weak Mutation 11: gnu.trove.impl.sync.TSynchronizedShortFloatMap.containsKey(S)Z:77 - InsertUnaryOp IINC 1 key
   * 5 Weak Mutation 12: gnu.trove.impl.sync.TSynchronizedShortFloatMap.containsKey(S)Z:77 - InsertUnaryOp IINC -1 key
   * 6 Weak Mutation 13: gnu.trove.impl.sync.TSynchronizedShortFloatMap.containsKey(S)Z:77 - DeleteStatement: containsKey(S)Z
   * 7 gnu.trove.impl.sync.TSynchronizedShortFloatMap.containsKey(S)Z: root-Branch
   * 8 Weak Mutation 8: gnu.trove.impl.sync.TSynchronizedShortFloatMap.containsKey(S)Z:77 - DeleteField: mutexLjava/lang/Object;
   * 9 Weak Mutation 9: gnu.trove.impl.sync.TSynchronizedShortFloatMap.containsKey(S)Z:77 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 10 Weak Mutation 10: gnu.trove.impl.sync.TSynchronizedShortFloatMap.containsKey(S)Z:77 - InsertUnaryOp Negation of key
   * 11 Weak Mutation 11: gnu.trove.impl.sync.TSynchronizedShortFloatMap.containsKey(S)Z:77 - InsertUnaryOp IINC 1 key
   * 12 Weak Mutation 12: gnu.trove.impl.sync.TSynchronizedShortFloatMap.containsKey(S)Z:77 - InsertUnaryOp IINC -1 key
   * 13 Weak Mutation 13: gnu.trove.impl.sync.TSynchronizedShortFloatMap.containsKey(S)Z:77 - DeleteStatement: containsKey(S)Z
   */

  @Test
  public void test2()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-223), (float) (-223), (short)453, (float) (-223));
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0, (Object) "p/p");
      boolean boolean0 = tSynchronizedShortFloatMap0.containsKey((short)453);
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 11 covered goals:
   * 1 Weak Mutation 14: gnu.trove.impl.sync.TSynchronizedShortFloatMap.containsValue(F)Z:80 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 15: gnu.trove.impl.sync.TSynchronizedShortFloatMap.containsValue(F)Z:80 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 3 Weak Mutation 17: gnu.trove.impl.sync.TSynchronizedShortFloatMap.containsValue(F)Z:80 - DeleteStatement: containsValue(F)Z
   * 4 Weak Mutation 16: gnu.trove.impl.sync.TSynchronizedShortFloatMap.containsValue(F)Z:80 - InsertUnaryOp Negation of value
   * 5 gnu.trove.impl.sync.TSynchronizedShortFloatMap.containsValue(F)Z: root-Branch
   * 6 Weak Mutation 0: gnu.trove.impl.sync.TSynchronizedShortFloatMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:59 - ReplaceComparisonOperator != null -> = null
   * 7 Weak Mutation 14: gnu.trove.impl.sync.TSynchronizedShortFloatMap.containsValue(F)Z:80 - DeleteField: mutexLjava/lang/Object;
   * 8 Weak Mutation 15: gnu.trove.impl.sync.TSynchronizedShortFloatMap.containsValue(F)Z:80 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 9 Weak Mutation 17: gnu.trove.impl.sync.TSynchronizedShortFloatMap.containsValue(F)Z:80 - DeleteStatement: containsValue(F)Z
   * 10 Weak Mutation 16: gnu.trove.impl.sync.TSynchronizedShortFloatMap.containsValue(F)Z:80 - InsertUnaryOp Negation of value
   * 11 gnu.trove.impl.sync.TSynchronizedShortFloatMap.<init>(Lgnu/trove/map/TShortFloatMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test3()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap();
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      boolean boolean0 = tSynchronizedShortFloatMap0.containsValue((float) 1004);
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 13 covered goals:
   * 1 Weak Mutation 19: gnu.trove.impl.sync.TSynchronizedShortFloatMap.get(S)F:83 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 2 Weak Mutation 18: gnu.trove.impl.sync.TSynchronizedShortFloatMap.get(S)F:83 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 21: gnu.trove.impl.sync.TSynchronizedShortFloatMap.get(S)F:83 - InsertUnaryOp IINC 1 key
   * 4 Weak Mutation 20: gnu.trove.impl.sync.TSynchronizedShortFloatMap.get(S)F:83 - InsertUnaryOp Negation of key
   * 5 Weak Mutation 23: gnu.trove.impl.sync.TSynchronizedShortFloatMap.get(S)F:83 - DeleteStatement: get(S)F
   * 6 Weak Mutation 22: gnu.trove.impl.sync.TSynchronizedShortFloatMap.get(S)F:83 - InsertUnaryOp IINC -1 key
   * 7 gnu.trove.impl.sync.TSynchronizedShortFloatMap.get(S)F: root-Branch
   * 8 Weak Mutation 19: gnu.trove.impl.sync.TSynchronizedShortFloatMap.get(S)F:83 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 9 Weak Mutation 18: gnu.trove.impl.sync.TSynchronizedShortFloatMap.get(S)F:83 - DeleteField: mutexLjava/lang/Object;
   * 10 Weak Mutation 21: gnu.trove.impl.sync.TSynchronizedShortFloatMap.get(S)F:83 - InsertUnaryOp IINC 1 key
   * 11 Weak Mutation 20: gnu.trove.impl.sync.TSynchronizedShortFloatMap.get(S)F:83 - InsertUnaryOp Negation of key
   * 12 Weak Mutation 23: gnu.trove.impl.sync.TSynchronizedShortFloatMap.get(S)F:83 - DeleteStatement: get(S)F
   * 13 Weak Mutation 22: gnu.trove.impl.sync.TSynchronizedShortFloatMap.get(S)F:83 - InsertUnaryOp IINC -1 key
   */

//   @Test
//   public void test4()  throws Throwable  {
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(963, (float) 963, (short)31, (float) (short)31);
//       TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0, (Object) "zh-TW");
//       float float0 = tSynchronizedShortFloatMap0.get((short)31);
//       assertEquals(31.0F, float0, 0.01F);
//   }

  //Test case number: 5
  /*
   * 15 covered goals:
   * 1 Weak Mutation 25: gnu.trove.impl.sync.TSynchronizedShortFloatMap.put(SF)F:87 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 2 Weak Mutation 24: gnu.trove.impl.sync.TSynchronizedShortFloatMap.put(SF)F:87 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 27: gnu.trove.impl.sync.TSynchronizedShortFloatMap.put(SF)F:87 - InsertUnaryOp IINC 1 key
   * 4 Weak Mutation 26: gnu.trove.impl.sync.TSynchronizedShortFloatMap.put(SF)F:87 - InsertUnaryOp Negation of key
   * 5 Weak Mutation 29: gnu.trove.impl.sync.TSynchronizedShortFloatMap.put(SF)F:87 - InsertUnaryOp Negation of value
   * 6 Weak Mutation 28: gnu.trove.impl.sync.TSynchronizedShortFloatMap.put(SF)F:87 - InsertUnaryOp IINC -1 key
   * 7 Weak Mutation 30: gnu.trove.impl.sync.TSynchronizedShortFloatMap.put(SF)F:87 - DeleteStatement: put(SF)F
   * 8 gnu.trove.impl.sync.TSynchronizedShortFloatMap.put(SF)F: root-Branch
   * 9 Weak Mutation 25: gnu.trove.impl.sync.TSynchronizedShortFloatMap.put(SF)F:87 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 10 Weak Mutation 24: gnu.trove.impl.sync.TSynchronizedShortFloatMap.put(SF)F:87 - DeleteField: mutexLjava/lang/Object;
   * 11 Weak Mutation 27: gnu.trove.impl.sync.TSynchronizedShortFloatMap.put(SF)F:87 - InsertUnaryOp IINC 1 key
   * 12 Weak Mutation 26: gnu.trove.impl.sync.TSynchronizedShortFloatMap.put(SF)F:87 - InsertUnaryOp Negation of key
   * 13 Weak Mutation 29: gnu.trove.impl.sync.TSynchronizedShortFloatMap.put(SF)F:87 - InsertUnaryOp Negation of value
   * 14 Weak Mutation 28: gnu.trove.impl.sync.TSynchronizedShortFloatMap.put(SF)F:87 - InsertUnaryOp IINC -1 key
   * 15 Weak Mutation 30: gnu.trove.impl.sync.TSynchronizedShortFloatMap.put(SF)F:87 - DeleteStatement: put(SF)F
   */

//   @Test
//   public void test5()  throws Throwable  {
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-223), (float) (-223), (short)453, (float) (-223));
//       TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0, (Object) "p/p");
//       float float0 = tSynchronizedShortFloatMap0.put((short)453, (float) (-223));
//       assertEquals(false, tShortFloatHashMap0.isEmpty());
//       assertEquals((-223.0F), float0, 0.01F);
//   }

  //Test case number: 6
  /*
   * 13 covered goals:
   * 1 Weak Mutation 31: gnu.trove.impl.sync.TSynchronizedShortFloatMap.remove(S)F:90 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 34: gnu.trove.impl.sync.TSynchronizedShortFloatMap.remove(S)F:90 - InsertUnaryOp IINC 1 key
   * 3 Weak Mutation 35: gnu.trove.impl.sync.TSynchronizedShortFloatMap.remove(S)F:90 - InsertUnaryOp IINC -1 key
   * 4 Weak Mutation 32: gnu.trove.impl.sync.TSynchronizedShortFloatMap.remove(S)F:90 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 5 Weak Mutation 33: gnu.trove.impl.sync.TSynchronizedShortFloatMap.remove(S)F:90 - InsertUnaryOp Negation of key
   * 6 Weak Mutation 36: gnu.trove.impl.sync.TSynchronizedShortFloatMap.remove(S)F:90 - DeleteStatement: remove(S)F
   * 7 gnu.trove.impl.sync.TSynchronizedShortFloatMap.remove(S)F: root-Branch
   * 8 Weak Mutation 31: gnu.trove.impl.sync.TSynchronizedShortFloatMap.remove(S)F:90 - DeleteField: mutexLjava/lang/Object;
   * 9 Weak Mutation 34: gnu.trove.impl.sync.TSynchronizedShortFloatMap.remove(S)F:90 - InsertUnaryOp IINC 1 key
   * 10 Weak Mutation 35: gnu.trove.impl.sync.TSynchronizedShortFloatMap.remove(S)F:90 - InsertUnaryOp IINC -1 key
   * 11 Weak Mutation 32: gnu.trove.impl.sync.TSynchronizedShortFloatMap.remove(S)F:90 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 12 Weak Mutation 33: gnu.trove.impl.sync.TSynchronizedShortFloatMap.remove(S)F:90 - InsertUnaryOp Negation of key
   * 13 Weak Mutation 36: gnu.trove.impl.sync.TSynchronizedShortFloatMap.remove(S)F:90 - DeleteStatement: remove(S)F
   */

//   @Test
//   public void test6()  throws Throwable  {
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-223), (float) (-223), (short)453, (float) (-223));
//       TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0, (Object) "p/p");
//       float float0 = tSynchronizedShortFloatMap0.remove((short)453);
//       assertEquals((-223.0F), float0, 0.01F);
//   }

  //Test case number: 7
  /*
   * 7 covered goals:
   * 1 Weak Mutation 38: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putAll(Ljava/util/Map;)V:93 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 2 Weak Mutation 39: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putAll(Ljava/util/Map;)V:93 - DeleteStatement: putAll(Ljava/util/Map;)V
   * 3 Weak Mutation 37: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putAll(Ljava/util/Map;)V:93 - DeleteField: mutexLjava/lang/Object;
   * 4 gnu.trove.impl.sync.TSynchronizedShortFloatMap.putAll(Ljava/util/Map;)V: root-Branch
   * 5 Weak Mutation 38: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putAll(Ljava/util/Map;)V:93 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 6 Weak Mutation 39: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putAll(Ljava/util/Map;)V:93 - DeleteStatement: putAll(Ljava/util/Map;)V
   * 7 Weak Mutation 37: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putAll(Ljava/util/Map;)V:93 - DeleteField: mutexLjava/lang/Object;
   */

//   @Test
//   public void test7()  throws Throwable  {
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((int) (short) (-13349), (float) (short) (-13349), (short) (-13349), (float) (short) (-13349));
//       TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
//       HashMap<Short, Float> hashMap0 = new HashMap<Short, Float>();
//       tSynchronizedShortFloatMap0.putAll((Map<? extends Short, ? extends Float>) hashMap0);
//       assertEquals((-13349.0F), tSynchronizedShortFloatMap0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 8
  /*
   * 7 covered goals:
   * 1 Weak Mutation 42: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:96 - DeleteStatement: putAll(Lgnu/trove/map/TShortFloatMap;)V
   * 2 Weak Mutation 40: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:96 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 41: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:96 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 4 gnu.trove.impl.sync.TSynchronizedShortFloatMap.putAll(Lgnu/trove/map/TShortFloatMap;)V: root-Branch
   * 5 Weak Mutation 42: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:96 - DeleteStatement: putAll(Lgnu/trove/map/TShortFloatMap;)V
   * 6 Weak Mutation 40: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:96 - DeleteField: mutexLjava/lang/Object;
   * 7 Weak Mutation 41: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:96 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   */

//   @Test
//   public void test8()  throws Throwable  {
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-223), (float) (-223), (short)453, (float) (-223));
//       TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0, (Object) "p/p");
//       tSynchronizedShortFloatMap0.putAll((TShortFloatMap) tShortFloatHashMap0);
//       assertEquals((-223.0F), tShortFloatHashMap0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 9
  /*
   * 7 covered goals:
   * 1 Weak Mutation 43: gnu.trove.impl.sync.TSynchronizedShortFloatMap.clear()V:99 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 44: gnu.trove.impl.sync.TSynchronizedShortFloatMap.clear()V:99 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 3 Weak Mutation 45: gnu.trove.impl.sync.TSynchronizedShortFloatMap.clear()V:99 - DeleteStatement: clear()V
   * 4 gnu.trove.impl.sync.TSynchronizedShortFloatMap.clear()V: root-Branch
   * 5 Weak Mutation 43: gnu.trove.impl.sync.TSynchronizedShortFloatMap.clear()V:99 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 44: gnu.trove.impl.sync.TSynchronizedShortFloatMap.clear()V:99 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 7 Weak Mutation 45: gnu.trove.impl.sync.TSynchronizedShortFloatMap.clear()V:99 - DeleteStatement: clear()V
   */

//   @Test
//   public void test9()  throws Throwable  {
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap();
//       TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
//       tSynchronizedShortFloatMap0.clear();
//       assertEquals(0.0F, tSynchronizedShortFloatMap0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 10
  /*
   * 16 covered goals:
   * 1 Weak Mutation 47: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:107 - DeleteField: keySetLgnu/trove/set/TShortSet;
   * 2 gnu.trove.impl.sync.TSynchronizedShortFloatMap.keySet()Lgnu/trove/set/TShortSet;: I11 Branch 2 IFNONNULL L107 - true
   * 3 Weak Mutation 46: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:106 - DeleteField: mutexLjava/lang/Object;
   * 4 Weak Mutation 51: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:108 - DeleteField: mutexLjava/lang/Object;
   * 5 Weak Mutation 50: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:108 - DeleteStatement: keySet()Lgnu/trove/set/TShortSet;
   * 6 Weak Mutation 49: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:108 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 7 Weak Mutation 48: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:107 - ReplaceComparisonOperator != null -> = null
   * 8 Weak Mutation 52: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:109 - DeleteField: keySetLgnu/trove/set/TShortSet;
   * 9 Weak Mutation 46: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:106 - DeleteField: mutexLjava/lang/Object;
   * 10 Weak Mutation 47: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:107 - DeleteField: keySetLgnu/trove/set/TShortSet;
   * 11 Weak Mutation 51: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:108 - DeleteField: mutexLjava/lang/Object;
   * 12 Weak Mutation 50: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:108 - DeleteStatement: keySet()Lgnu/trove/set/TShortSet;
   * 13 Weak Mutation 49: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:108 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 14 Weak Mutation 48: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:107 - ReplaceComparisonOperator != null -> = null
   * 15 Weak Mutation 52: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keySet()Lgnu/trove/set/TShortSet;:109 - DeleteField: keySetLgnu/trove/set/TShortSet;
   * 16 gnu.trove.impl.sync.TSynchronizedShortFloatMap.keySet()Lgnu/trove/set/TShortSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test10()  throws Throwable  {
      short[] shortArray0 = new short[1];
      float[] floatArray0 = new float[5];
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0, (Object) "fr");
      TSynchronizedShortSet tSynchronizedShortSet0 = (TSynchronizedShortSet)tSynchronizedShortFloatMap0.keySet();
      assertNotNull(tSynchronizedShortSet0);
      
      TSynchronizedShortSet tSynchronizedShortSet1 = (TSynchronizedShortSet)tSynchronizedShortFloatMap0.keySet();
      assertSame(tSynchronizedShortSet1, tSynchronizedShortSet0);
  }

  //Test case number: 11
  /*
   * 7 covered goals:
   * 1 Weak Mutation 55: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keys()[S:113 - DeleteStatement: keys()[S
   * 2 Weak Mutation 54: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keys()[S:113 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 3 Weak Mutation 53: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keys()[S:113 - DeleteField: mutexLjava/lang/Object;
   * 4 gnu.trove.impl.sync.TSynchronizedShortFloatMap.keys()[S: root-Branch
   * 5 Weak Mutation 55: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keys()[S:113 - DeleteStatement: keys()[S
   * 6 Weak Mutation 54: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keys()[S:113 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 7 Weak Mutation 53: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keys()[S:113 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test11()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(963, (float) 963, (short)31, (float) (short)31);
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0, (Object) "zh-TW");
      short[] shortArray0 = tSynchronizedShortFloatMap0.keys();
      assertNotNull(shortArray0);
  }

  //Test case number: 12
  /*
   * 7 covered goals:
   * 1 Weak Mutation 58: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keys([S)[S:116 - DeleteStatement: keys([S)[S
   * 2 Weak Mutation 57: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keys([S)[S:116 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 3 Weak Mutation 56: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keys([S)[S:116 - DeleteField: mutexLjava/lang/Object;
   * 4 gnu.trove.impl.sync.TSynchronizedShortFloatMap.keys([S)[S: root-Branch
   * 5 Weak Mutation 58: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keys([S)[S:116 - DeleteStatement: keys([S)[S
   * 6 Weak Mutation 57: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keys([S)[S:116 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 7 Weak Mutation 56: gnu.trove.impl.sync.TSynchronizedShortFloatMap.keys([S)[S:116 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test12()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap();
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      short[] shortArray0 = tSynchronizedShortFloatMap0.keys(tShortFloatHashMap0._set);
      assertNotNull(shortArray0);
  }

  //Test case number: 13
  /*
   * 16 covered goals:
   * 1 Weak Mutation 60: gnu.trove.impl.sync.TSynchronizedShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:121 - DeleteField: valuesLgnu/trove/TFloatCollection;
   * 2 gnu.trove.impl.sync.TSynchronizedShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 3 Weak Mutation 59: gnu.trove.impl.sync.TSynchronizedShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:120 - DeleteField: mutexLjava/lang/Object;
   * 4 Weak Mutation 63: gnu.trove.impl.sync.TSynchronizedShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:122 - DeleteStatement: valueCollection()Lgnu/trove/TFloatCollection;
   * 5 Weak Mutation 62: gnu.trove.impl.sync.TSynchronizedShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:122 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 6 Weak Mutation 61: gnu.trove.impl.sync.TSynchronizedShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:121 - ReplaceComparisonOperator != null -> = null
   * 7 Weak Mutation 64: gnu.trove.impl.sync.TSynchronizedShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:122 - DeleteField: mutexLjava/lang/Object;
   * 8 Weak Mutation 65: gnu.trove.impl.sync.TSynchronizedShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:123 - DeleteField: valuesLgnu/trove/TFloatCollection;
   * 9 Weak Mutation 59: gnu.trove.impl.sync.TSynchronizedShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:120 - DeleteField: mutexLjava/lang/Object;
   * 10 Weak Mutation 63: gnu.trove.impl.sync.TSynchronizedShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:122 - DeleteStatement: valueCollection()Lgnu/trove/TFloatCollection;
   * 11 Weak Mutation 62: gnu.trove.impl.sync.TSynchronizedShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:122 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 12 Weak Mutation 61: gnu.trove.impl.sync.TSynchronizedShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:121 - ReplaceComparisonOperator != null -> = null
   * 13 Weak Mutation 60: gnu.trove.impl.sync.TSynchronizedShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:121 - DeleteField: valuesLgnu/trove/TFloatCollection;
   * 14 Weak Mutation 64: gnu.trove.impl.sync.TSynchronizedShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:122 - DeleteField: mutexLjava/lang/Object;
   * 15 Weak Mutation 65: gnu.trove.impl.sync.TSynchronizedShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:123 - DeleteField: valuesLgnu/trove/TFloatCollection;
   * 16 gnu.trove.impl.sync.TSynchronizedShortFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I11 Branch 3 IFNONNULL L121 - false
   */

  @Test
  public void test13()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-223), (float) (-223), (short)453, (float) (-223));
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0, (Object) "p/p");
      TSynchronizedFloatCollection tSynchronizedFloatCollection0 = (TSynchronizedFloatCollection)tSynchronizedShortFloatMap0.valueCollection();
      assertNotNull(tSynchronizedFloatCollection0);
      
      TSynchronizedFloatCollection tSynchronizedFloatCollection1 = (TSynchronizedFloatCollection)tSynchronizedShortFloatMap0.valueCollection();
      assertSame(tSynchronizedFloatCollection1, tSynchronizedFloatCollection0);
  }

  //Test case number: 14
  /*
   * 7 covered goals:
   * 1 Weak Mutation 68: gnu.trove.impl.sync.TSynchronizedShortFloatMap.values()[F:127 - DeleteStatement: values()[F
   * 2 Weak Mutation 66: gnu.trove.impl.sync.TSynchronizedShortFloatMap.values()[F:127 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 67: gnu.trove.impl.sync.TSynchronizedShortFloatMap.values()[F:127 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 4 gnu.trove.impl.sync.TSynchronizedShortFloatMap.values()[F: root-Branch
   * 5 Weak Mutation 68: gnu.trove.impl.sync.TSynchronizedShortFloatMap.values()[F:127 - DeleteStatement: values()[F
   * 6 Weak Mutation 66: gnu.trove.impl.sync.TSynchronizedShortFloatMap.values()[F:127 - DeleteField: mutexLjava/lang/Object;
   * 7 Weak Mutation 67: gnu.trove.impl.sync.TSynchronizedShortFloatMap.values()[F:127 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   */

  @Test
  public void test14()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-223), (float) (-223), (short)453, (float) (-223));
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0, (Object) "p/p");
      float[] floatArray0 = tSynchronizedShortFloatMap0.values();
      assertNotNull(floatArray0);
  }

  //Test case number: 15
  /*
   * 7 covered goals:
   * 1 Weak Mutation 69: gnu.trove.impl.sync.TSynchronizedShortFloatMap.values([F)[F:130 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 70: gnu.trove.impl.sync.TSynchronizedShortFloatMap.values([F)[F:130 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 3 Weak Mutation 71: gnu.trove.impl.sync.TSynchronizedShortFloatMap.values([F)[F:130 - DeleteStatement: values([F)[F
   * 4 gnu.trove.impl.sync.TSynchronizedShortFloatMap.values([F)[F: root-Branch
   * 5 Weak Mutation 69: gnu.trove.impl.sync.TSynchronizedShortFloatMap.values([F)[F:130 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 70: gnu.trove.impl.sync.TSynchronizedShortFloatMap.values([F)[F:130 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 7 Weak Mutation 71: gnu.trove.impl.sync.TSynchronizedShortFloatMap.values([F)[F:130 - DeleteStatement: values([F)[F
   */

  @Test
  public void test15()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap();
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      float[] floatArray0 = new float[4];
      float[] floatArray1 = tSynchronizedShortFloatMap0.values(floatArray0);
      assertSame(floatArray1, floatArray0);
  }

  //Test case number: 16
  /*
   * 5 covered goals:
   * 1 Weak Mutation 72: gnu.trove.impl.sync.TSynchronizedShortFloatMap.iterator()Lgnu/trove/iterator/TShortFloatIterator;:134 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 2 Weak Mutation 73: gnu.trove.impl.sync.TSynchronizedShortFloatMap.iterator()Lgnu/trove/iterator/TShortFloatIterator;:134 - DeleteStatement: iterator()Lgnu/trove/iterator/TShortFloatIterator;
   * 3 gnu.trove.impl.sync.TSynchronizedShortFloatMap.iterator()Lgnu/trove/iterator/TShortFloatIterator;: root-Branch
   * 4 Weak Mutation 72: gnu.trove.impl.sync.TSynchronizedShortFloatMap.iterator()Lgnu/trove/iterator/TShortFloatIterator;:134 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 5 Weak Mutation 73: gnu.trove.impl.sync.TSynchronizedShortFloatMap.iterator()Lgnu/trove/iterator/TShortFloatIterator;:134 - DeleteStatement: iterator()Lgnu/trove/iterator/TShortFloatIterator;
   */

  @Test
  public void test16()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(963, (float) 963, (short)31, (float) (short)31);
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0, (Object) "zh-TW");
      TShortFloatIterator tShortFloatIterator0 = tSynchronizedShortFloatMap0.iterator();
      assertEquals(false, tShortFloatIterator0.hasNext());
  }

  //Test case number: 17
  /*
   * 5 covered goals:
   * 1 Weak Mutation 74: gnu.trove.impl.sync.TSynchronizedShortFloatMap.getNoEntryKey()S:138 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 2 Weak Mutation 75: gnu.trove.impl.sync.TSynchronizedShortFloatMap.getNoEntryKey()S:138 - DeleteStatement: getNoEntryKey()S
   * 3 gnu.trove.impl.sync.TSynchronizedShortFloatMap.getNoEntryKey()S: root-Branch
   * 4 Weak Mutation 74: gnu.trove.impl.sync.TSynchronizedShortFloatMap.getNoEntryKey()S:138 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 5 Weak Mutation 75: gnu.trove.impl.sync.TSynchronizedShortFloatMap.getNoEntryKey()S:138 - DeleteStatement: getNoEntryKey()S
   */

  @Test
  public void test17()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(963, (float) 963, (short)31, (float) (short)31);
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0, (Object) "zh-TW");
      short short0 = tSynchronizedShortFloatMap0.getNoEntryKey();
      assertEquals((short)31, short0);
  }

  //Test case number: 18
  /*
   * 5 covered goals:
   * 1 Weak Mutation 76: gnu.trove.impl.sync.TSynchronizedShortFloatMap.getNoEntryValue()F:139 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 2 Weak Mutation 77: gnu.trove.impl.sync.TSynchronizedShortFloatMap.getNoEntryValue()F:139 - DeleteStatement: getNoEntryValue()F
   * 3 gnu.trove.impl.sync.TSynchronizedShortFloatMap.getNoEntryValue()F: root-Branch
   * 4 Weak Mutation 76: gnu.trove.impl.sync.TSynchronizedShortFloatMap.getNoEntryValue()F:139 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 5 Weak Mutation 77: gnu.trove.impl.sync.TSynchronizedShortFloatMap.getNoEntryValue()F:139 - DeleteStatement: getNoEntryValue()F
   */

//   @Test
//   public void test18()  throws Throwable  {
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-26), (float) (-26), (short) (-17), (float) (-26));
//       TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
//       float float0 = tSynchronizedShortFloatMap0.getNoEntryValue();
//       assertEquals((-26.0F), float0, 0.01F);
//   }

  //Test case number: 19
  /*
   * 15 covered goals:
   * 1 Weak Mutation 78: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putIfAbsent(SF)F:142 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 79: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putIfAbsent(SF)F:142 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 3 Weak Mutation 84: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putIfAbsent(SF)F:142 - DeleteStatement: putIfAbsent(SF)F
   * 4 Weak Mutation 81: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putIfAbsent(SF)F:142 - InsertUnaryOp IINC 1 key
   * 5 Weak Mutation 80: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putIfAbsent(SF)F:142 - InsertUnaryOp Negation of key
   * 6 Weak Mutation 83: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putIfAbsent(SF)F:142 - InsertUnaryOp Negation of value
   * 7 Weak Mutation 82: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putIfAbsent(SF)F:142 - InsertUnaryOp IINC -1 key
   * 8 gnu.trove.impl.sync.TSynchronizedShortFloatMap.putIfAbsent(SF)F: root-Branch
   * 9 Weak Mutation 78: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putIfAbsent(SF)F:142 - DeleteField: mutexLjava/lang/Object;
   * 10 Weak Mutation 79: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putIfAbsent(SF)F:142 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 11 Weak Mutation 84: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putIfAbsent(SF)F:142 - DeleteStatement: putIfAbsent(SF)F
   * 12 Weak Mutation 81: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putIfAbsent(SF)F:142 - InsertUnaryOp IINC 1 key
   * 13 Weak Mutation 80: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putIfAbsent(SF)F:142 - InsertUnaryOp Negation of key
   * 14 Weak Mutation 83: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putIfAbsent(SF)F:142 - InsertUnaryOp Negation of value
   * 15 Weak Mutation 82: gnu.trove.impl.sync.TSynchronizedShortFloatMap.putIfAbsent(SF)F:142 - InsertUnaryOp IINC -1 key
   */

  @Test
  public void test19()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(3);
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0, (Object) "France");
      tSynchronizedShortFloatMap0.putIfAbsent((short)1086, (short)1086);
      assertEquals(false, tShortFloatHashMap0.isEmpty());
      assertEquals("{1086=1086.0}", tShortFloatHashMap0.toString());
  }

  //Test case number: 20
  /*
   * 7 covered goals:
   * 1 Weak Mutation 85: gnu.trove.impl.sync.TSynchronizedShortFloatMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z:145 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 87: gnu.trove.impl.sync.TSynchronizedShortFloatMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z:145 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z
   * 3 Weak Mutation 86: gnu.trove.impl.sync.TSynchronizedShortFloatMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z:145 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 4 gnu.trove.impl.sync.TSynchronizedShortFloatMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   * 5 Weak Mutation 85: gnu.trove.impl.sync.TSynchronizedShortFloatMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z:145 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 87: gnu.trove.impl.sync.TSynchronizedShortFloatMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z:145 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z
   * 7 Weak Mutation 86: gnu.trove.impl.sync.TSynchronizedShortFloatMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z:145 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   */

  @Test
  public void test20()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(963, (float) 963, (short)31, (float) (short)31);
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0, (Object) "zh-TW");
      boolean boolean0 = tSynchronizedShortFloatMap0.forEachKey((TShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 7 covered goals:
   * 1 Weak Mutation 89: gnu.trove.impl.sync.TSynchronizedShortFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:148 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 2 Weak Mutation 88: gnu.trove.impl.sync.TSynchronizedShortFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:148 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 90: gnu.trove.impl.sync.TSynchronizedShortFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:148 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z
   * 4 gnu.trove.impl.sync.TSynchronizedShortFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   * 5 Weak Mutation 89: gnu.trove.impl.sync.TSynchronizedShortFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:148 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 6 Weak Mutation 88: gnu.trove.impl.sync.TSynchronizedShortFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:148 - DeleteField: mutexLjava/lang/Object;
   * 7 Weak Mutation 90: gnu.trove.impl.sync.TSynchronizedShortFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:148 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z
   */

  @Test
  public void test21()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(3);
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0, (Object) "France");
      boolean boolean0 = tSynchronizedShortFloatMap0.forEachValue((TFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 22
  /*
   * 7 covered goals:
   * 1 Weak Mutation 93: gnu.trove.impl.sync.TSynchronizedShortFloatMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:151 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z
   * 2 Weak Mutation 92: gnu.trove.impl.sync.TSynchronizedShortFloatMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:151 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 3 Weak Mutation 91: gnu.trove.impl.sync.TSynchronizedShortFloatMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:151 - DeleteField: mutexLjava/lang/Object;
   * 4 gnu.trove.impl.sync.TSynchronizedShortFloatMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z: root-Branch
   * 5 Weak Mutation 93: gnu.trove.impl.sync.TSynchronizedShortFloatMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:151 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z
   * 6 Weak Mutation 92: gnu.trove.impl.sync.TSynchronizedShortFloatMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:151 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 7 Weak Mutation 91: gnu.trove.impl.sync.TSynchronizedShortFloatMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:151 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test22()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((int) (short) (-13349), (float) (short) (-13349), (short) (-13349), (float) (short) (-13349));
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      boolean boolean0 = tSynchronizedShortFloatMap0.forEachEntry((TShortFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 7 covered goals:
   * 1 Weak Mutation 95: gnu.trove.impl.sync.TSynchronizedShortFloatMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:154 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 2 Weak Mutation 94: gnu.trove.impl.sync.TSynchronizedShortFloatMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:154 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 96: gnu.trove.impl.sync.TSynchronizedShortFloatMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:154 - DeleteStatement: transformValues(Lgnu/trove/function/TFloatFunction;)V
   * 4 gnu.trove.impl.sync.TSynchronizedShortFloatMap.transformValues(Lgnu/trove/function/TFloatFunction;)V: root-Branch
   * 5 Weak Mutation 95: gnu.trove.impl.sync.TSynchronizedShortFloatMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:154 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 6 Weak Mutation 94: gnu.trove.impl.sync.TSynchronizedShortFloatMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:154 - DeleteField: mutexLjava/lang/Object;
   * 7 Weak Mutation 96: gnu.trove.impl.sync.TSynchronizedShortFloatMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:154 - DeleteStatement: transformValues(Lgnu/trove/function/TFloatFunction;)V
   */

//   @Test
//   public void test23()  throws Throwable  {
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((int) (short) (-13349), (float) (short) (-13349), (short) (-13349), (float) (short) (-13349));
//       TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
//       tSynchronizedShortFloatMap0.transformValues((TFloatFunction) null);
//       assertEquals((-13349.0F), tSynchronizedShortFloatMap0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 24
  /*
   * 7 covered goals:
   * 1 Weak Mutation 98: gnu.trove.impl.sync.TSynchronizedShortFloatMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:157 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 2 Weak Mutation 99: gnu.trove.impl.sync.TSynchronizedShortFloatMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:157 - DeleteStatement: retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z
   * 3 Weak Mutation 97: gnu.trove.impl.sync.TSynchronizedShortFloatMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:157 - DeleteField: mutexLjava/lang/Object;
   * 4 gnu.trove.impl.sync.TSynchronizedShortFloatMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z: root-Branch
   * 5 Weak Mutation 98: gnu.trove.impl.sync.TSynchronizedShortFloatMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:157 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 6 Weak Mutation 99: gnu.trove.impl.sync.TSynchronizedShortFloatMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:157 - DeleteStatement: retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z
   * 7 Weak Mutation 97: gnu.trove.impl.sync.TSynchronizedShortFloatMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:157 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test24()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(963, (float) 963, (short)31, (float) (short)31);
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0, (Object) "zh-TW");
      boolean boolean0 = tSynchronizedShortFloatMap0.retainEntries((TShortFloatProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 25
  /*
   * 13 covered goals:
   * 1 Weak Mutation 102: gnu.trove.impl.sync.TSynchronizedShortFloatMap.increment(S)Z:160 - InsertUnaryOp Negation of key
   * 2 Weak Mutation 103: gnu.trove.impl.sync.TSynchronizedShortFloatMap.increment(S)Z:160 - InsertUnaryOp IINC 1 key
   * 3 Weak Mutation 100: gnu.trove.impl.sync.TSynchronizedShortFloatMap.increment(S)Z:160 - DeleteField: mutexLjava/lang/Object;
   * 4 Weak Mutation 101: gnu.trove.impl.sync.TSynchronizedShortFloatMap.increment(S)Z:160 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 5 Weak Mutation 104: gnu.trove.impl.sync.TSynchronizedShortFloatMap.increment(S)Z:160 - InsertUnaryOp IINC -1 key
   * 6 Weak Mutation 105: gnu.trove.impl.sync.TSynchronizedShortFloatMap.increment(S)Z:160 - DeleteStatement: increment(S)Z
   * 7 gnu.trove.impl.sync.TSynchronizedShortFloatMap.increment(S)Z: root-Branch
   * 8 Weak Mutation 102: gnu.trove.impl.sync.TSynchronizedShortFloatMap.increment(S)Z:160 - InsertUnaryOp Negation of key
   * 9 Weak Mutation 103: gnu.trove.impl.sync.TSynchronizedShortFloatMap.increment(S)Z:160 - InsertUnaryOp IINC 1 key
   * 10 Weak Mutation 100: gnu.trove.impl.sync.TSynchronizedShortFloatMap.increment(S)Z:160 - DeleteField: mutexLjava/lang/Object;
   * 11 Weak Mutation 101: gnu.trove.impl.sync.TSynchronizedShortFloatMap.increment(S)Z:160 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 12 Weak Mutation 104: gnu.trove.impl.sync.TSynchronizedShortFloatMap.increment(S)Z:160 - InsertUnaryOp IINC -1 key
   * 13 Weak Mutation 105: gnu.trove.impl.sync.TSynchronizedShortFloatMap.increment(S)Z:160 - DeleteStatement: increment(S)Z
   */

  @Test
  public void test25()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-223), (float) (-223), (short)453, (float) (-223));
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0, (Object) "p/p");
      boolean boolean0 = tSynchronizedShortFloatMap0.increment((short)453);
      assertEquals(false, boolean0);
  }

  //Test case number: 26
  /*
   * 15 covered goals:
   * 1 Weak Mutation 110: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustValue(SF)Z:163 - InsertUnaryOp IINC -1 key
   * 2 Weak Mutation 111: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustValue(SF)Z:163 - InsertUnaryOp Negation of amount
   * 3 Weak Mutation 108: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustValue(SF)Z:163 - InsertUnaryOp Negation of key
   * 4 Weak Mutation 109: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustValue(SF)Z:163 - InsertUnaryOp IINC 1 key
   * 5 Weak Mutation 106: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustValue(SF)Z:163 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 107: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustValue(SF)Z:163 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 7 Weak Mutation 112: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustValue(SF)Z:163 - DeleteStatement: adjustValue(SF)Z
   * 8 gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustValue(SF)Z: root-Branch
   * 9 Weak Mutation 110: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustValue(SF)Z:163 - InsertUnaryOp IINC -1 key
   * 10 Weak Mutation 111: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustValue(SF)Z:163 - InsertUnaryOp Negation of amount
   * 11 Weak Mutation 108: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustValue(SF)Z:163 - InsertUnaryOp Negation of key
   * 12 Weak Mutation 109: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustValue(SF)Z:163 - InsertUnaryOp IINC 1 key
   * 13 Weak Mutation 106: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustValue(SF)Z:163 - DeleteField: mutexLjava/lang/Object;
   * 14 Weak Mutation 107: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustValue(SF)Z:163 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 15 Weak Mutation 112: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustValue(SF)Z:163 - DeleteStatement: adjustValue(SF)Z
   */

  @Test
  public void test26()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-26), (float) (-26), (short) (-17), (float) (-26));
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      boolean boolean0 = tSynchronizedShortFloatMap0.adjustValue((short) (-17), (short) (-17));
      assertEquals(false, boolean0);
  }

  //Test case number: 27
  /*
   * 21 covered goals:
   * 1 Weak Mutation 119: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustOrPutValue(SFF)F:166 - InsertUnaryOp Negation of adjust_amount
   * 2 Weak Mutation 118: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustOrPutValue(SFF)F:166 - ReplaceVariable adjust_amount -> put_amount
   * 3 Weak Mutation 117: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustOrPutValue(SFF)F:166 - InsertUnaryOp IINC -1 key
   * 4 Weak Mutation 116: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustOrPutValue(SFF)F:166 - InsertUnaryOp IINC 1 key
   * 5 Weak Mutation 115: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustOrPutValue(SFF)F:166 - InsertUnaryOp Negation of key
   * 6 Weak Mutation 114: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustOrPutValue(SFF)F:166 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 7 Weak Mutation 113: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustOrPutValue(SFF)F:166 - DeleteField: mutexLjava/lang/Object;
   * 8 Weak Mutation 122: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustOrPutValue(SFF)F:166 - DeleteStatement: adjustOrPutValue(SFF)F
   * 9 Weak Mutation 121: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustOrPutValue(SFF)F:166 - InsertUnaryOp Negation of put_amount
   * 10 Weak Mutation 120: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustOrPutValue(SFF)F:166 - ReplaceVariable put_amount -> adjust_amount
   * 11 gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustOrPutValue(SFF)F: root-Branch
   * 12 Weak Mutation 119: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustOrPutValue(SFF)F:166 - InsertUnaryOp Negation of adjust_amount
   * 13 Weak Mutation 118: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustOrPutValue(SFF)F:166 - ReplaceVariable adjust_amount -> put_amount
   * 14 Weak Mutation 117: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustOrPutValue(SFF)F:166 - InsertUnaryOp IINC -1 key
   * 15 Weak Mutation 116: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustOrPutValue(SFF)F:166 - InsertUnaryOp IINC 1 key
   * 16 Weak Mutation 115: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustOrPutValue(SFF)F:166 - InsertUnaryOp Negation of key
   * 17 Weak Mutation 114: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustOrPutValue(SFF)F:166 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 18 Weak Mutation 113: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustOrPutValue(SFF)F:166 - DeleteField: mutexLjava/lang/Object;
   * 19 Weak Mutation 122: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustOrPutValue(SFF)F:166 - DeleteStatement: adjustOrPutValue(SFF)F
   * 20 Weak Mutation 121: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustOrPutValue(SFF)F:166 - InsertUnaryOp Negation of put_amount
   * 21 Weak Mutation 120: gnu.trove.impl.sync.TSynchronizedShortFloatMap.adjustOrPutValue(SFF)F:166 - ReplaceVariable put_amount -> adjust_amount
   */

//   @Test
//   public void test27()  throws Throwable  {
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-223), (float) (-223), (short)453, (float) (-223));
//       TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0, (Object) "p/p");
//       float float0 = tSynchronizedShortFloatMap0.adjustOrPutValue((short)453, (float) (-223), (float) (short)453);
//       assertEquals("{453=453.0}", tShortFloatHashMap0.toString());
//       assertEquals(453.0F, float0, 0.01F);
//   }

  //Test case number: 28
  /*
   * 9 covered goals:
   * 1 Weak Mutation 126: gnu.trove.impl.sync.TSynchronizedShortFloatMap.equals(Ljava/lang/Object;)Z:170 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 2 Weak Mutation 125: gnu.trove.impl.sync.TSynchronizedShortFloatMap.equals(Ljava/lang/Object;)Z:170 - ReplaceVariable o -> mutex
   * 3 Weak Mutation 124: gnu.trove.impl.sync.TSynchronizedShortFloatMap.equals(Ljava/lang/Object;)Z:170 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 4 Weak Mutation 123: gnu.trove.impl.sync.TSynchronizedShortFloatMap.equals(Ljava/lang/Object;)Z:170 - DeleteField: mutexLjava/lang/Object;
   * 5 gnu.trove.impl.sync.TSynchronizedShortFloatMap.equals(Ljava/lang/Object;)Z: root-Branch
   * 6 Weak Mutation 126: gnu.trove.impl.sync.TSynchronizedShortFloatMap.equals(Ljava/lang/Object;)Z:170 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 7 Weak Mutation 125: gnu.trove.impl.sync.TSynchronizedShortFloatMap.equals(Ljava/lang/Object;)Z:170 - ReplaceVariable o -> mutex
   * 8 Weak Mutation 124: gnu.trove.impl.sync.TSynchronizedShortFloatMap.equals(Ljava/lang/Object;)Z:170 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 9 Weak Mutation 123: gnu.trove.impl.sync.TSynchronizedShortFloatMap.equals(Ljava/lang/Object;)Z:170 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test28()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap();
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0);
      Object object0 = new Object();
      boolean boolean0 = tSynchronizedShortFloatMap0.equals(object0);
      assertEquals(false, boolean0);
  }

  //Test case number: 29
  /*
   * 7 covered goals:
   * 1 Weak Mutation 127: gnu.trove.impl.sync.TSynchronizedShortFloatMap.hashCode()I:173 - DeleteField: mutexLjava/lang/Object;
   * 2 Weak Mutation 129: gnu.trove.impl.sync.TSynchronizedShortFloatMap.hashCode()I:173 - DeleteStatement: hashCode()I
   * 3 Weak Mutation 128: gnu.trove.impl.sync.TSynchronizedShortFloatMap.hashCode()I:173 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 4 gnu.trove.impl.sync.TSynchronizedShortFloatMap.hashCode()I: root-Branch
   * 5 Weak Mutation 127: gnu.trove.impl.sync.TSynchronizedShortFloatMap.hashCode()I:173 - DeleteField: mutexLjava/lang/Object;
   * 6 Weak Mutation 129: gnu.trove.impl.sync.TSynchronizedShortFloatMap.hashCode()I:173 - DeleteStatement: hashCode()I
   * 7 Weak Mutation 128: gnu.trove.impl.sync.TSynchronizedShortFloatMap.hashCode()I:173 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   */

  @Test
  public void test29()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(963, (float) 963, (short)31, (float) (short)31);
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0, (Object) "zh-TW");
      int int0 = tSynchronizedShortFloatMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 30
  /*
   * 8 covered goals:
   * 1 Weak Mutation 131: gnu.trove.impl.sync.TSynchronizedShortFloatMap.toString()Ljava/lang/String;:176 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 2 Weak Mutation 130: gnu.trove.impl.sync.TSynchronizedShortFloatMap.toString()Ljava/lang/String;:176 - DeleteField: mutexLjava/lang/Object;
   * 3 Weak Mutation 132: gnu.trove.impl.sync.TSynchronizedShortFloatMap.toString()Ljava/lang/String;:176 - DeleteStatement: toString()Ljava/lang/String;
   * 4 gnu.trove.impl.sync.TSynchronizedShortFloatMap.toString()Ljava/lang/String;: root-Branch
   * 5 Weak Mutation 1: gnu.trove.impl.sync.TSynchronizedShortFloatMap.<init>(Lgnu/trove/map/TShortFloatMap;Ljava/lang/Object;)V:67 - ReplaceVariable mutex -> mutex
   * 6 Weak Mutation 131: gnu.trove.impl.sync.TSynchronizedShortFloatMap.toString()Ljava/lang/String;:176 - DeleteField: mLgnu/trove/map/TShortFloatMap;
   * 7 Weak Mutation 130: gnu.trove.impl.sync.TSynchronizedShortFloatMap.toString()Ljava/lang/String;:176 - DeleteField: mutexLjava/lang/Object;
   * 8 Weak Mutation 132: gnu.trove.impl.sync.TSynchronizedShortFloatMap.toString()Ljava/lang/String;:176 - DeleteStatement: toString()Ljava/lang/String;
   */

  @Test
  public void test30()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-223), (float) (-223), (short)453, (float) (-223));
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) tShortFloatHashMap0, (Object) "p/p");
      String string0 = tSynchronizedShortFloatMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 31
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedShortFloatMap.<init>(Lgnu/trove/map/TShortFloatMap;)V: I17 Branch 1 IFNONNULL L59 - false
   * 2 Weak Mutation 0: gnu.trove.impl.sync.TSynchronizedShortFloatMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:59 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test31()  throws Throwable  {
      TSynchronizedShortFloatMap tSynchronizedShortFloatMap0 = null;
      try {
        tSynchronizedShortFloatMap0 = new TSynchronizedShortFloatMap((TShortFloatMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TIntCollection;
import gnu.trove.list.array.TIntArrayList;
import gnu.trove.map.hash.TIntObjectHashMap;
import gnu.trove.procedure.TIntProcedure;
import gnu.trove.set.hash.TIntHashSet;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TIntHashEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.hash.TIntHash.getNoEntryValue()I: root-Branch
   * 2 gnu.trove.impl.hash.TIntHash.<init>(IF)V: I15 Branch 3 IFEQ L103 - true
   * 3 gnu.trove.impl.hash.TIntHash.setUp(I)I: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>(0, 0, 0);
      int int0 = tIntObjectHashMap0.getNoEntryValue();
      assertEquals(0, int0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.hash.TIntHash.<init>(IFI)V: I14 Branch 4 IFEQ L122 - true
   */

  @Test
  public void test1()  throws Throwable  {
      TIntHashSet tIntHashSet0 = new TIntHashSet(0, 0, 0);
      assertEquals(0, tIntHashSet0.getNoEntryValue());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.hash.TIntHash.<init>(IFI)V: I14 Branch 4 IFEQ L122 - false
   */

  @Test
  public void test2()  throws Throwable  {
      TIntHashSet tIntHashSet0 = new TIntHashSet((-1506), (-1506), (-1506));
      assertEquals(-1506, tIntHashSet0.getNoEntryValue());
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.hash.TIntHash.contains(I)Z: I5 Branch 5 IFLT L163 - true
   * 2 gnu.trove.impl.hash.TIntHash.index(I)I: I37 Branch 9 IFNE L213 - false
   * 3 gnu.trove.impl.hash.TIntHash.<init>(IF)V: I15 Branch 3 IFEQ L103 - true
   */

  @Test
  public void test3()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>(1348, 1348);
      boolean boolean0 = tIntObjectHashMap0.containsKey(1348);
      assertEquals(false, boolean0);
      assertEquals(0, tIntObjectHashMap0.getNoEntryValue());
  }

  //Test case number: 4
  /*
   * 4 covered goals:
   * 1 gnu.trove.impl.hash.TIntHash.forEach(Lgnu/trove/procedure/TIntProcedure;)Z: I18 Branch 6 IFLE L177 - true
   * 2 gnu.trove.impl.hash.TIntHash.forEach(Lgnu/trove/procedure/TIntProcedure;)Z: I18 Branch 6 IFLE L177 - false
   * 3 gnu.trove.impl.hash.TIntHash.forEach(Lgnu/trove/procedure/TIntProcedure;)Z: I25 Branch 7 IF_ICMPNE L178 - true
   * 4 gnu.trove.impl.hash.TIntHash.<init>(I)V: I14 Branch 2 IFEQ L85 - true
   */

  @Test
  public void test4()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>(1348);
      boolean boolean0 = tIntObjectHashMap0.forEachKey((TIntProcedure) null);
      assertEquals(0, tIntObjectHashMap0.getNoEntryValue());
      assertEquals(2729, tIntObjectHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 9 covered goals:
   * 1 gnu.trove.impl.hash.TIntHash.forEach(Lgnu/trove/procedure/TIntProcedure;)Z: I25 Branch 7 IF_ICMPNE L178 - false
   * 2 gnu.trove.impl.hash.TIntHash.<init>()V: I13 Branch 1 IFEQ L68 - true
   * 3 gnu.trove.impl.hash.TIntHash.forEach(Lgnu/trove/procedure/TIntProcedure;)Z: I18 Branch 6 IFLE L177 - false
   * 4 gnu.trove.impl.hash.TIntHash.forEach(Lgnu/trove/procedure/TIntProcedure;)Z: I25 Branch 7 IF_ICMPNE L178 - true
   * 5 gnu.trove.impl.hash.TIntHash.insertKeyAt(II)V: root-Branch
   * 6 gnu.trove.impl.hash.TIntHash.insertKey(I)I: I30 Branch 17 IFNE L263 - true
   * 7 gnu.trove.impl.hash.TIntHash.insertKey(I)I: I30 Branch 17 IFNE L263 - false
   * 8 gnu.trove.impl.hash.TIntHash.insertKey(I)I: I50 Branch 18 IF_ICMPNE L270 - false
   * 9 gnu.trove.impl.hash.TIntHash.insertKey(I)I: I56 Branch 19 IF_ICMPNE L270 - false
   */

  @Test
  public void test5()  throws Throwable  {
      TIntObjectHashMap<String> tIntObjectHashMap0 = new TIntObjectHashMap<String>();
      TIntHashSet tIntHashSet0 = new TIntHashSet(tIntObjectHashMap0._set);
      // Undeclared exception!
      try {
        tIntHashSet0.forEach((TIntProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 17 covered goals:
   * 1 gnu.trove.impl.hash.TIntHash.index(I)I: I51 Branch 11 IF_ICMPNE L216 - true
   * 2 gnu.trove.impl.hash.TIntHash.indexRehashed(IIIB)I: I46 Branch 13 IFNE L235 - true
   * 3 gnu.trove.impl.hash.TIntHash.indexRehashed(IIIB)I: I58 Branch 14 IF_ICMPNE L239 - false
   * 4 gnu.trove.impl.hash.TIntHash.indexRehashed(IIIB)I: I61 Branch 15 IF_ICMPEQ L239 - false
   * 5 gnu.trove.impl.hash.TIntHash.insertKey(I)I: I56 Branch 19 IF_ICMPNE L270 - true
   * 6 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I28 Branch 20 IF_ICMPNE L290 - true
   * 7 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I45 Branch 22 IFGE L294 - true
   * 8 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I45 Branch 22 IFGE L294 - false
   * 9 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I62 Branch 23 IFNE L300 - true
   * 10 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I62 Branch 23 IFNE L300 - false
   * 11 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I67 Branch 24 IF_ICMPEQ L301 - true
   * 12 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I97 Branch 25 IF_ICMPNE L311 - false
   * 13 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I103 Branch 26 IF_ICMPNE L311 - false
   * 14 gnu.trove.impl.hash.TIntHash.contains(I)Z: I5 Branch 5 IFLT L163 - false
   * 15 gnu.trove.impl.hash.TIntHash.indexRehashed(IIIB)I: I29 Branch 12 IFGE L230 - false
   * 16 gnu.trove.impl.hash.TIntHash.index(I)I: I37 Branch 9 IFNE L213 - true
   * 17 gnu.trove.impl.hash.TIntHash.index(I)I: I46 Branch 10 IF_ICMPNE L216 - false
   */

  @Test
  public void test6()  throws Throwable  {
      int[] intArray0 = new int[16];
      intArray0[0] = (-508);
      intArray0[1] = (-915);
      intArray0[2] = 1169;
      intArray0[3] = 1169;
      intArray0[4] = 1946;
      TIntArrayList tIntArrayList0 = TIntArrayList.wrap(intArray0, 1169);
      TIntHashSet tIntHashSet0 = new TIntHashSet((TIntCollection) tIntArrayList0);
      boolean boolean0 = tIntHashSet0.contains(0);
      assertEquals("{0,-508,1169,-915,1946}", tIntHashSet0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 7 covered goals:
   * 1 gnu.trove.impl.hash.TIntHash.indexRehashed(IIIB)I: I58 Branch 14 IF_ICMPNE L239 - true
   * 2 gnu.trove.impl.hash.TIntHash.indexRehashed(IIIB)I: I70 Branch 16 IF_ICMPNE L241 - true
   * 3 gnu.trove.impl.hash.TIntHash.removeAt(I)V: root-Branch
   * 4 gnu.trove.impl.hash.TIntHash.indexRehashed(IIIB)I: I29 Branch 12 IFGE L230 - true
   * 5 gnu.trove.impl.hash.TIntHash.indexRehashed(IIIB)I: I46 Branch 13 IFNE L235 - false
   * 6 gnu.trove.impl.hash.TIntHash.index(I)I: I46 Branch 10 IF_ICMPNE L216 - true
   * 7 gnu.trove.impl.hash.TIntHash.index(I)I: I51 Branch 11 IF_ICMPNE L216 - false
   */

  @Test
  public void test7()  throws Throwable  {
      int[] intArray0 = new int[16];
      intArray0[7] = (-915);
      intArray0[0] = (-508);
      intArray0[1] = (-915);
      TIntArrayList tIntArrayList0 = TIntArrayList.wrap(intArray0, 1169);
      TIntHashSet tIntHashSet0 = new TIntHashSet((TIntCollection) tIntArrayList0);
      boolean boolean0 = tIntHashSet0.removeAll((TIntCollection) tIntArrayList0);
      assertEquals(0, tIntHashSet0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.hash.TIntHash.indexRehashed(IIIB)I: I61 Branch 15 IF_ICMPEQ L239 - true
   * 2 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I103 Branch 26 IF_ICMPNE L311 - false
   * 3 gnu.trove.impl.hash.TIntHash.indexRehashed(IIIB)I: I70 Branch 16 IF_ICMPNE L241 - true
   */

  @Test
  public void test8()  throws Throwable  {
      int[] intArray0 = new int[16];
      intArray0[0] = (-508);
      intArray0[1] = (-915);
      intArray0[2] = 1169;
      intArray0[3] = 1169;
      intArray0[4] = 1946;
      TIntArrayList tIntArrayList0 = TIntArrayList.wrap(intArray0, 1169);
      TIntHashSet tIntHashSet0 = new TIntHashSet((TIntCollection) tIntArrayList0);
      boolean boolean0 = tIntHashSet0.removeAll((TIntCollection) tIntArrayList0);
      assertEquals(true, tIntHashSet0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 9
  /*
   * 18 covered goals:
   * 1 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I31 Branch 21 IF_ICMPNE L290 - true
   * 2 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I97 Branch 25 IF_ICMPNE L311 - true
   * 3 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I115 Branch 27 IF_ICMPNE L316 - true
   * 4 gnu.trove.impl.hash.TIntHash.removeAt(I)V: root-Branch
   * 5 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I28 Branch 20 IF_ICMPNE L290 - false
   * 6 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I31 Branch 21 IF_ICMPNE L290 - false
   * 7 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I67 Branch 24 IF_ICMPEQ L301 - false
   * 8 gnu.trove.impl.hash.TIntHash.indexRehashed(IIIB)I: I29 Branch 12 IFGE L230 - true
   * 9 gnu.trove.impl.hash.TIntHash.indexRehashed(IIIB)I: I29 Branch 12 IFGE L230 - false
   * 10 gnu.trove.impl.hash.TIntHash.indexRehashed(IIIB)I: I46 Branch 13 IFNE L235 - true
   * 11 gnu.trove.impl.hash.TIntHash.indexRehashed(IIIB)I: I46 Branch 13 IFNE L235 - false
   * 12 gnu.trove.impl.hash.TIntHash.indexRehashed(IIIB)I: I58 Branch 14 IF_ICMPNE L239 - false
   * 13 gnu.trove.impl.hash.TIntHash.indexRehashed(IIIB)I: I61 Branch 15 IF_ICMPEQ L239 - false
   * 14 gnu.trove.impl.hash.TIntHash.index(I)I: I37 Branch 9 IFNE L213 - true
   * 15 gnu.trove.impl.hash.TIntHash.index(I)I: I46 Branch 10 IF_ICMPNE L216 - true
   * 16 gnu.trove.impl.hash.TIntHash.index(I)I: I46 Branch 10 IF_ICMPNE L216 - false
   * 17 gnu.trove.impl.hash.TIntHash.index(I)I: I51 Branch 11 IF_ICMPNE L216 - false
   * 18 gnu.trove.impl.hash.TIntHash.insertKey(I)I: I50 Branch 18 IF_ICMPNE L270 - true
   */

  @Test
  public void test9()  throws Throwable  {
      int[] intArray0 = new int[16];
      intArray0[7] = (-915);
      intArray0[15] = (-1212);
      intArray0[0] = (-508);
      TIntArrayList tIntArrayList0 = TIntArrayList.wrap(intArray0, 1169);
      TIntHashSet tIntHashSet0 = new TIntHashSet((TIntCollection) tIntArrayList0);
      tIntHashSet0.removeAll((TIntCollection) tIntArrayList0);
      assertEquals(0, tIntHashSet0.size());
      
      tIntHashSet0.addAll((TIntCollection) tIntArrayList0);
      assertEquals(4, tIntHashSet0.size());
  }

  //Test case number: 10
  /*
   * 17 covered goals:
   * 1 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I103 Branch 26 IF_ICMPNE L311 - true
   * 2 gnu.trove.impl.hash.TIntHash.insertKeyAt(II)V: root-Branch
   * 3 gnu.trove.impl.hash.TIntHash.setUp(I)I: root-Branch
   * 4 gnu.trove.impl.hash.TIntHash.<init>(I)V: I14 Branch 2 IFEQ L85 - true
   * 5 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I28 Branch 20 IF_ICMPNE L290 - true
   * 6 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I45 Branch 22 IFGE L294 - true
   * 7 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I45 Branch 22 IFGE L294 - false
   * 8 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I62 Branch 23 IFNE L300 - true
   * 9 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I62 Branch 23 IFNE L300 - false
   * 10 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I67 Branch 24 IF_ICMPEQ L301 - true
   * 11 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I97 Branch 25 IF_ICMPNE L311 - false
   * 12 gnu.trove.impl.hash.TIntHash.insertKeyRehash(IIIB)I: I115 Branch 27 IF_ICMPNE L316 - true
   * 13 gnu.trove.impl.hash.TIntHash.insertKey(I)I: I30 Branch 17 IFNE L263 - true
   * 14 gnu.trove.impl.hash.TIntHash.insertKey(I)I: I30 Branch 17 IFNE L263 - false
   * 15 gnu.trove.impl.hash.TIntHash.insertKey(I)I: I50 Branch 18 IF_ICMPNE L270 - false
   * 16 gnu.trove.impl.hash.TIntHash.insertKey(I)I: I56 Branch 19 IF_ICMPNE L270 - true
   * 17 gnu.trove.impl.hash.TIntHash.insertKey(I)I: I56 Branch 19 IF_ICMPNE L270 - false
   */

  @Test
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[11];
      intArray0[10] = 70;
      intArray0[1] = 1273;
      TIntHashSet tIntHashSet0 = new TIntHashSet(intArray0);
      tIntHashSet0.trimToSize();
      assertEquals(7, tIntHashSet0.capacity());
      assertEquals("{1273,0,70}", tIntHashSet0.toString());
  }
}

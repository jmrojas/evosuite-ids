/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TIntCollection;
import gnu.trove.function.TIntFunction;
import gnu.trove.map.TLongIntMap;
import gnu.trove.map.hash.TLongIntHashMap;
import gnu.trove.procedure.TIntProcedure;
import gnu.trove.procedure.TLongIntProcedure;
import gnu.trove.procedure.TLongProcedure;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TLongIntHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap$TKeyView.<init>(Lgnu/trove/map/hash/TLongIntHashMap;)V: root-Branch
   * 2 gnu.trove.map.hash.TLongIntHashMap.<init>(I)V: root-Branch
   * 3 gnu.trove.map.hash.TLongIntHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.hash.TLongIntHashMap.keySet()Lgnu/trove/set/TLongSet;: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(1731);
      tLongIntHashMap0.keySet();
      assertEquals(3527, tLongIntHashMap0.capacity());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.containsKey(J)Z: root-Branch
   * 2 gnu.trove.map.hash.TLongIntHashMap.<init>()V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      tLongIntHashMap0.containsKey((long) (-153));
      assertEquals(23, tLongIntHashMap0.capacity());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.clear()V: root-Branch
   * 2 gnu.trove.map.hash.TLongIntHashMap.<init>(IF)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap((-5), (-5));
      tLongIntHashMap0.clear();
      assertEquals("{}", tLongIntHashMap0.toString());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.valueCollection()Lgnu/trove/TIntCollection;: root-Branch
   * 2 gnu.trove.map.hash.TLongIntHashMap$TValueView.<init>(Lgnu/trove/map/hash/TLongIntHashMap;)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap((-5), (-5));
      TIntCollection tIntCollection0 = tLongIntHashMap0.valueCollection();
      assertEquals(true, tIntCollection0.isEmpty());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.increment(J)Z: root-Branch
   * 2 gnu.trove.map.hash.TLongIntHashMap.adjustValue(JI)Z: I9 Branch 71 IFGE L477 - false
   */

  @Test
  public void test4()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(1731);
      boolean boolean0 = tLongIntHashMap0.increment(1L);
      assertEquals(false, boolean0);
      assertEquals(3527, tLongIntHashMap0.capacity());
  }

  //Test case number: 5
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.removeAt(I)V: root-Branch
   * 2 gnu.trove.map.hash.TLongIntHashMap.remove(J)I: I14 Branch 46 IFLT L276 - false
   * 3 gnu.trove.map.hash.TLongIntHashMap.<init>(IFJI)V: root-Branch
   * 4 gnu.trove.map.hash.TLongIntHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 5 gnu.trove.map.hash.TLongIntHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 6 gnu.trove.map.hash.TLongIntHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 7 gnu.trove.map.hash.TLongIntHashMap.putIfAbsent(JI)I: I9 Branch 39 IFGE L205 - true
   * 8 gnu.trove.map.hash.TLongIntHashMap.doPut(JII)I: I12 Branch 40 IFGE L214 - true
   * 9 gnu.trove.map.hash.TLongIntHashMap.doPut(JII)I: I41 Branch 41 IFEQ L221 - false
   */

  @Test
  public void test5()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(292, (float) 292, 588L, 292);
      tLongIntHashMap0.putIfAbsent(588L, 292);
      int int0 = tLongIntHashMap0.remove(588L);
      assertEquals("{}", tLongIntHashMap0.toString());
      assertEquals(292, int0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongIntHashMap.forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(610);
      boolean boolean0 = tLongIntHashMap0.forEachKey((TLongProcedure) null);
      assertEquals(1277, tLongIntHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.<init>(Lgnu/trove/map/TLongIntMap;)V: I10 Branch 34 IFEQ L133 - false
   * 2 gnu.trove.map.hash.TLongIntHashMap.<init>(Lgnu/trove/map/TLongIntMap;)V: I40 Branch 35 IFEQ L139 - true
   * 3 gnu.trove.map.hash.TLongIntHashMap.<init>(Lgnu/trove/map/TLongIntMap;)V: I52 Branch 36 IFEQ L143 - true
   * 4 gnu.trove.map.hash.TLongIntHashMap$TLongIntHashIterator.<init>(Lgnu/trove/map/hash/TLongIntHashMap;Lgnu/trove/map/hash/TLongIntHashMap;)V: root-Branch
   * 5 gnu.trove.map.hash.TLongIntHashMap.iterator()Lgnu/trove/iterator/TLongIntIterator;: root-Branch
   * 6 gnu.trove.map.hash.TLongIntHashMap.putAll(Lgnu/trove/map/TLongIntMap;)V: I15 Branch 43 IFEQ L243 - true
   */

  @Test
  public void test7()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap((-5), (-5));
      TLongIntHashMap tLongIntHashMap1 = new TLongIntHashMap((TLongIntMap) tLongIntHashMap0);
      assertEquals(0L, tLongIntHashMap1.getNoEntryKey());
      assertEquals(0, tLongIntHashMap1.getNoEntryValue());
      assertEquals(3, tLongIntHashMap1.capacity());
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.<init>(Lgnu/trove/map/TLongIntMap;)V: I40 Branch 35 IFEQ L139 - false
   * 2 gnu.trove.map.hash.TLongIntHashMap.<init>(Lgnu/trove/map/TLongIntMap;)V: I52 Branch 36 IFEQ L143 - false
   * 3 gnu.trove.map.hash.TLongIntHashMap.<init>(Lgnu/trove/map/TLongIntMap;)V: I10 Branch 34 IFEQ L133 - false
   */

  @Test
  public void test8()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(1603, 1603, 1603, 1603);
      TLongIntHashMap tLongIntHashMap1 = new TLongIntHashMap((TLongIntMap) tLongIntHashMap0);
      assertEquals(3, tLongIntHashMap1.capacity());
      assertEquals(1603L, tLongIntHashMap1.getNoEntryKey());
      assertEquals(1603, tLongIntHashMap1.getNoEntryValue());
  }

  //Test case number: 9
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.putIfAbsent(JI)I: I9 Branch 39 IFGE L205 - false
   * 2 gnu.trove.map.hash.TLongIntHashMap.put(JI)I: root-Branch
   * 3 gnu.trove.map.hash.TLongIntHashMap.<init>([J[I)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 4 gnu.trove.map.hash.TLongIntHashMap.<init>([J[I)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 5 gnu.trove.map.hash.TLongIntHashMap.doPut(JII)I: I12 Branch 40 IFGE L214 - false
   * 6 gnu.trove.map.hash.TLongIntHashMap.doPut(JII)I: I41 Branch 41 IFEQ L221 - true
   */

  @Test
  public void test9()  throws Throwable  {
      long[] longArray0 = new long[6];
      int[] intArray0 = new int[3];
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(longArray0, intArray0);
      int int0 = tLongIntHashMap0.putIfAbsent(0L, (-1364));
      assertEquals(1, tLongIntHashMap0.size());
      assertEquals(17, tLongIntHashMap0.capacity());
      assertEquals("{0=0}", tLongIntHashMap0.toString());
      assertEquals(0, int0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongIntHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - true
   */

  @Test
  public void test10()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap((-776));
      HashMap<Long, Integer> hashMap0 = new HashMap<Long, Integer>();
      tLongIntHashMap0.putAll((Map<? extends Long, ? extends Integer>) hashMap0);
      assertEquals("{}", hashMap0.toString());
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongIntHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - false
   */

  @Test
  public void test11()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap((-776));
      HashMap<Long, Integer> hashMap0 = new HashMap<Long, Integer>();
      hashMap0.put((Long) null, (Integer) (-776));
      // Undeclared exception!
      try {
        tLongIntHashMap0.putAll((Map<? extends Long, ? extends Integer>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.get(J)I: I9 Branch 44 IFGE L253 - true
   * 2 gnu.trove.map.hash.TLongIntHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 3 gnu.trove.map.hash.TLongIntHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 4 gnu.trove.map.hash.TLongIntHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 5 gnu.trove.map.hash.TLongIntHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 6 gnu.trove.map.hash.TLongIntHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 7 gnu.trove.map.hash.TLongIntHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 8 gnu.trove.map.hash.TLongIntHashMap.equals(Ljava/lang/Object;)Z: I84 Branch 78 IF_ICMPEQ L1200 - true
   */

  @Test
  public void test12()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(12, 12);
      tLongIntHashMap0.putIfAbsent((long) 12, 12);
      boolean boolean0 = tLongIntHashMap0.equals((Object) tLongIntHashMap0);
      assertEquals(1, tLongIntHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongIntHashMap.get(J)I: I9 Branch 44 IFGE L253 - false
   */

  @Test
  public void test13()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      int int0 = tLongIntHashMap0.get((long) (-153));
      assertEquals(0, int0);
      assertEquals(23, tLongIntHashMap0.capacity());
  }

  //Test case number: 14
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - true
   * 2 gnu.trove.map.hash.TLongIntHashMap$TLongIntHashIterator.value()I: root-Branch
   * 3 gnu.trove.map.hash.TLongIntHashMap$TLongIntHashIterator.key()J: root-Branch
   * 4 gnu.trove.map.hash.TLongIntHashMap$TLongIntHashIterator.advance()V: root-Branch
   * 5 gnu.trove.map.hash.TLongIntHashMap.putAll(Lgnu/trove/map/TLongIntMap;)V: I15 Branch 43 IFEQ L243 - false
   */

  @Test
  public void test14()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      int[] intArray0 = new int[4];
      TLongIntHashMap tLongIntHashMap1 = new TLongIntHashMap(tLongIntHashMap0._set, intArray0);
      tLongIntHashMap0.putAll((TLongIntMap) tLongIntHashMap1);
      boolean boolean0 = tLongIntHashMap0.isEmpty();
      assertEquals(1, tLongIntHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongIntHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - false
   */

  @Test
  public void test15()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      boolean boolean0 = tLongIntHashMap0.isEmpty();
      assertEquals(23, tLongIntHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongIntHashMap.remove(J)I: I14 Branch 46 IFLT L276 - true
   */

  @Test
  public void test16()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap((-5), (-5));
      int int0 = tLongIntHashMap0.remove((long) 2625761);
      assertEquals(0, int0);
      assertEquals(true, tLongIntHashMap0.isEmpty());
  }

  //Test case number: 17
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.keys()[J: I34 Branch 48 IF_ICMPNE L304 - false
   * 2 gnu.trove.map.hash.TLongIntHashMap.keys()[J: I27 Branch 47 IFLE L303 - true
   * 3 gnu.trove.map.hash.TLongIntHashMap.keys()[J: I27 Branch 47 IFLE L303 - false
   * 4 gnu.trove.map.hash.TLongIntHashMap.keys()[J: I34 Branch 48 IF_ICMPNE L304 - true
   * 5 gnu.trove.map.hash.TLongIntHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   */

  @Test
  public void test17()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap((-5), (-5));
      tLongIntHashMap0.putIfAbsent((long) 0, 0);
      tLongIntHashMap0.keys();
      assertEquals(false, tLongIntHashMap0.isEmpty());
      assertEquals("{0=0}", tLongIntHashMap0.toString());
  }

  //Test case number: 18
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.keys([J)[J: I10 Branch 49 IF_ICMPGE L315 - true
   * 2 gnu.trove.map.hash.TLongIntHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - true
   * 3 gnu.trove.map.hash.TLongIntHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - false
   * 4 gnu.trove.map.hash.TLongIntHashMap.keys([J)[J: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test18()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      long[] longArray0 = tLongIntHashMap0.keys(tLongIntHashMap0._set);
      assertNotNull(longArray0);
      assertEquals(23, tLongIntHashMap0.capacity());
  }

  //Test case number: 19
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.keys([J)[J: I10 Branch 49 IF_ICMPGE L315 - false
   * 2 gnu.trove.map.hash.TLongIntHashMap.keys([J)[J: I44 Branch 51 IF_ICMPNE L323 - false
   * 3 gnu.trove.map.hash.TLongIntHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - true
   * 4 gnu.trove.map.hash.TLongIntHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - false
   * 5 gnu.trove.map.hash.TLongIntHashMap.keys([J)[J: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test19()  throws Throwable  {
      long[] longArray0 = new long[1];
      int[] intArray0 = new int[4];
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(longArray0, intArray0);
      tLongIntHashMap0.putIfAbsent((long) (-1), (-1));
      tLongIntHashMap0.keys(longArray0);
      assertEquals("{-1=-1, 0=0}", tLongIntHashMap0.toString());
      assertEquals(2, tLongIntHashMap0.size());
  }

  //Test case number: 20
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.values()[I: I34 Branch 53 IF_ICMPNE L344 - false
   * 2 gnu.trove.map.hash.TLongIntHashMap.values()[I: I27 Branch 52 IFLE L343 - true
   * 3 gnu.trove.map.hash.TLongIntHashMap.values()[I: I27 Branch 52 IFLE L343 - false
   * 4 gnu.trove.map.hash.TLongIntHashMap.values()[I: I34 Branch 53 IF_ICMPNE L344 - true
   */

  @Test
  public void test20()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      int[] intArray0 = new int[4];
      TLongIntHashMap tLongIntHashMap1 = new TLongIntHashMap(tLongIntHashMap0._set, intArray0);
      tLongIntHashMap0.putAll((TLongIntMap) tLongIntHashMap1);
      tLongIntHashMap0.values();
      assertEquals(1, tLongIntHashMap0.size());
      assertTrue(tLongIntHashMap0.equals(tLongIntHashMap1));
  }

  //Test case number: 21
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.values([I)[I: I10 Branch 54 IF_ICMPGE L355 - false
   * 2 gnu.trove.map.hash.TLongIntHashMap.values([I)[I: I44 Branch 56 IF_ICMPNE L363 - false
   * 3 gnu.trove.map.hash.TLongIntHashMap.values([I)[I: I37 Branch 55 IFLE L362 - true
   * 4 gnu.trove.map.hash.TLongIntHashMap.values([I)[I: I37 Branch 55 IFLE L362 - false
   * 5 gnu.trove.map.hash.TLongIntHashMap.values([I)[I: I44 Branch 56 IF_ICMPNE L363 - true
   */

  @Test
  public void test21()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap((-9));
      tLongIntHashMap0.put((-256L), (-9));
      tLongIntHashMap0.put((long) 0, 0);
      tLongIntHashMap0.put((long) (-9), (-9));
      tLongIntHashMap0.put(706L, (-9));
      tLongIntHashMap0.putIfAbsent(1L, 0);
      int[] intArray0 = new int[4];
      tLongIntHashMap0.values(intArray0);
      assertEquals(5, tLongIntHashMap0.size());
      assertEquals("{0=0, 706=-9, -9=-9, 1=0, -256=-9}", tLongIntHashMap0.toString());
  }

  //Test case number: 22
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.containsValue(I)Z: I25 Branch 58 IF_ICMPNE L377 - false
   * 2 gnu.trove.map.hash.TLongIntHashMap.containsValue(I)Z: I30 Branch 59 IF_ICMPNE L377 - true
   * 3 gnu.trove.map.hash.TLongIntHashMap.containsValue(I)Z: I18 Branch 57 IFLE L376 - true
   * 4 gnu.trove.map.hash.TLongIntHashMap.containsValue(I)Z: I18 Branch 57 IFLE L376 - false
   * 5 gnu.trove.map.hash.TLongIntHashMap.containsValue(I)Z: I25 Branch 58 IF_ICMPNE L377 - true
   */

  @Test
  public void test22()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      int[] intArray0 = new int[4];
      TLongIntHashMap tLongIntHashMap1 = new TLongIntHashMap(tLongIntHashMap0._set, intArray0);
      tLongIntHashMap0.putAll((TLongIntMap) tLongIntHashMap1);
      boolean boolean0 = tLongIntHashMap0.containsValue(1595);
      assertEquals(1, tLongIntHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 23
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.containsValue(I)Z: I30 Branch 59 IF_ICMPNE L377 - false
   * 2 gnu.trove.map.hash.TLongIntHashMap.values([I)[I: I10 Branch 54 IF_ICMPGE L355 - true
   * 3 gnu.trove.map.hash.TLongIntHashMap.values([I)[I: I37 Branch 55 IFLE L362 - true
   * 4 gnu.trove.map.hash.TLongIntHashMap.values([I)[I: I37 Branch 55 IFLE L362 - false
   * 5 gnu.trove.map.hash.TLongIntHashMap.values([I)[I: I44 Branch 56 IF_ICMPNE L363 - true
   * 6 gnu.trove.map.hash.TLongIntHashMap.containsValue(I)Z: I18 Branch 57 IFLE L376 - false
   * 7 gnu.trove.map.hash.TLongIntHashMap.containsValue(I)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 8 gnu.trove.map.hash.TLongIntHashMap.containsValue(I)Z: I25 Branch 58 IF_ICMPNE L377 - false
   */

  @Test
  public void test23()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      int[] intArray0 = new int[4];
      intArray0[3] = 1595;
      int[] intArray1 = tLongIntHashMap0.values(intArray0);
      TLongIntHashMap tLongIntHashMap1 = new TLongIntHashMap(tLongIntHashMap0._set, intArray1);
      tLongIntHashMap0.putAll((TLongIntMap) tLongIntHashMap1);
      boolean boolean0 = tLongIntHashMap0.containsValue(1595);
      assertEquals(false, tLongIntHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: I18 Branch 60 IFLE L407 - true
   * 2 gnu.trove.map.hash.TLongIntHashMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TLongIntHashMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test24()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(222);
      boolean boolean0 = tLongIntHashMap0.forEachValue((TIntProcedure) null);
      assertEquals(true, boolean0);
      assertEquals(557, tLongIntHashMap0.capacity());
  }

  //Test case number: 25
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - false
   * 2 gnu.trove.map.hash.TLongIntHashMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TLongIntHashMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test25()  throws Throwable  {
      long[] longArray0 = new long[6];
      int[] intArray0 = new int[3];
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(longArray0, intArray0);
      // Undeclared exception!
      try {
        tLongIntHashMap0.forEachValue((TIntProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.transformValues(Lgnu/trove/function/TIntFunction;)V: I18 Branch 66 IFLE L434 - true
   * 2 gnu.trove.map.hash.TLongIntHashMap.transformValues(Lgnu/trove/function/TIntFunction;)V: I18 Branch 66 IFLE L434 - false
   * 3 gnu.trove.map.hash.TLongIntHashMap.transformValues(Lgnu/trove/function/TIntFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test26()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(339, 339);
      tLongIntHashMap0.transformValues((TIntFunction) null);
      assertEquals(0L, tLongIntHashMap0.getNoEntryKey());
  }

  //Test case number: 27
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.retainEntries(Lgnu/trove/procedure/TLongIntProcedure;)Z: I31 Branch 68 IFLE L453 - true
   * 2 gnu.trove.map.hash.TLongIntHashMap.retainEntries(Lgnu/trove/procedure/TLongIntProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TLongIntHashMap.retainEntries(Lgnu/trove/procedure/TLongIntProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test27()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(1603);
      boolean boolean0 = tLongIntHashMap0.retainEntries((TLongIntProcedure) null);
      assertEquals(false, boolean0);
      assertEquals(3527, tLongIntHashMap0.capacity());
  }

  //Test case number: 28
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.retainEntries(Lgnu/trove/procedure/TLongIntProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - false
   * 2 gnu.trove.map.hash.TLongIntHashMap.retainEntries(Lgnu/trove/procedure/TLongIntProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TLongIntHashMap.retainEntries(Lgnu/trove/procedure/TLongIntProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test28()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      tLongIntHashMap0.putIfAbsent((long) (-153), (-153));
      // Undeclared exception!
      try {
        tLongIntHashMap0.retainEntries((TLongIntProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.adjustValue(JI)Z: I9 Branch 71 IFGE L477 - true
   * 2 gnu.trove.map.hash.TLongIntHashMap.increment(J)Z: root-Branch
   */

  @Test
  public void test29()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(1731);
      tLongIntHashMap0.putIfAbsent(1L, 0);
      boolean boolean0 = tLongIntHashMap0.increment(1L);
      assertEquals(false, tLongIntHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.adjustOrPutValue(JII)I: I9 Branch 72 IFGE L491 - true
   * 2 gnu.trove.map.hash.TLongIntHashMap.adjustOrPutValue(JII)I: I58 Branch 73 IFEQ L502 - false
   */

  @Test
  public void test30()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(610);
      int int0 = tLongIntHashMap0.adjustOrPutValue((long) 610, 610, 610);
      assertEquals("{610=610}", tLongIntHashMap0.toString());
      assertEquals(610, int0);
  }

  //Test case number: 31
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.adjustOrPutValue(JII)I: I9 Branch 72 IFGE L491 - false
   * 2 gnu.trove.map.hash.TLongIntHashMap.adjustOrPutValue(JII)I: I58 Branch 73 IFEQ L502 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap((-5), (-5));
      tLongIntHashMap0.putIfAbsent((long) 0, 0);
      int int0 = tLongIntHashMap0.adjustOrPutValue((long) 0, 2625761, 2625761);
      assertEquals(false, tLongIntHashMap0.isEmpty());
      assertEquals(2625761, int0);
  }

  //Test case number: 32
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - false
   * 2 gnu.trove.map.hash.TLongIntHashMap.<init>(IFJI)V: root-Branch
   */

  @Test
  public void test32()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(46327, 46327, 46327, 46327);
      boolean boolean0 = tLongIntHashMap0.equals((Object) "en_GB");
      assertEquals(false, boolean0);
  }

  //Test case number: 33
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongIntHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - false
   */

  @Test
  public void test33()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(1731);
      tLongIntHashMap0.putIfAbsent((long) 1731, 1731);
      TLongIntHashMap tLongIntHashMap1 = new TLongIntHashMap(0);
      boolean boolean0 = tLongIntHashMap0.equals((Object) tLongIntHashMap1);
      assertEquals(false, tLongIntHashMap0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 34
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.equals(Ljava/lang/Object;)Z: I84 Branch 78 IF_ICMPEQ L1200 - false
   * 2 gnu.trove.map.hash.TLongIntHashMap.equals(Ljava/lang/Object;)Z: I87 Branch 79 IF_ICMPEQ L1200 - false
   * 3 gnu.trove.map.hash.TLongIntHashMap.equals(Ljava/lang/Object;)Z: I90 Branch 80 IF_ICMPEQ L1200 - true
   * 4 gnu.trove.map.hash.TLongIntHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   */

  @Test
  public void test34()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(1731);
      tLongIntHashMap0.putIfAbsent(0L, 1731);
      int[] intArray0 = new int[3];
      TLongIntHashMap tLongIntHashMap1 = new TLongIntHashMap(tLongIntHashMap0._set, intArray0);
      boolean boolean0 = tLongIntHashMap0.equals((Object) tLongIntHashMap1);
      assertEquals(1, tLongIntHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 35
  /*
   * 11 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.equals(Ljava/lang/Object;)Z: I90 Branch 80 IF_ICMPEQ L1200 - false
   * 2 gnu.trove.map.hash.TLongIntHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 3 gnu.trove.map.hash.TLongIntHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 4 gnu.trove.map.hash.TLongIntHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 5 gnu.trove.map.hash.TLongIntHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 6 gnu.trove.map.hash.TLongIntHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 7 gnu.trove.map.hash.TLongIntHashMap.equals(Ljava/lang/Object;)Z: I84 Branch 78 IF_ICMPEQ L1200 - false
   * 8 gnu.trove.map.hash.TLongIntHashMap.equals(Ljava/lang/Object;)Z: I87 Branch 79 IF_ICMPEQ L1200 - false
   * 9 gnu.trove.map.hash.TLongIntHashMap.doPut(JII)I: I12 Branch 40 IFGE L214 - false
   * 10 gnu.trove.map.hash.TLongIntHashMap.doPut(JII)I: I41 Branch 41 IFEQ L221 - true
   * 11 gnu.trove.map.hash.TLongIntHashMap.get(J)I: I9 Branch 44 IFGE L253 - true
   */

  @Test
  public void test35()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(1731);
      tLongIntHashMap0.putIfAbsent(0L, 1731);
      int[] intArray0 = new int[3];
      intArray0[2] = (-1081);
      TLongIntHashMap tLongIntHashMap1 = new TLongIntHashMap(tLongIntHashMap0._set, intArray0);
      boolean boolean0 = tLongIntHashMap0.equals((Object) tLongIntHashMap1);
      assertEquals(false, tLongIntHashMap0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 36
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - false
   * 2 gnu.trove.map.hash.TLongIntHashMap.<init>(IF)V: root-Branch
   * 3 gnu.trove.map.hash.TLongIntHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 4 gnu.trove.map.hash.TLongIntHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 5 gnu.trove.map.hash.TLongIntHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 6 gnu.trove.map.hash.TLongIntHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 7 gnu.trove.map.hash.TLongIntHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 8 gnu.trove.map.hash.TLongIntHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 9 gnu.trove.map.hash.TLongIntHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   */

  @Test
  public void test36()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap((-5), (-5));
      tLongIntHashMap0.putIfAbsent((long) 0, 0);
      int int0 = tLongIntHashMap0.hashCode();
      assertEquals(1, tLongIntHashMap0.size());
      assertEquals(0, int0);
  }

  //Test case number: 37
  /*
   * 11 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap$1.execute(JI)Z: I4 Branch 115 IFEQ L1233 - true
   * 2 gnu.trove.map.hash.TLongIntHashMap$1.<init>(Lgnu/trove/map/hash/TLongIntHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 3 gnu.trove.map.hash.TLongIntHashMap$1.execute(JI)Z: I4 Branch 115 IFEQ L1233 - false
   * 4 gnu.trove.map.hash.TLongIntHashMap.<init>(I)V: root-Branch
   * 5 gnu.trove.map.hash.TLongIntHashMap.toString()Ljava/lang/String;: root-Branch
   * 6 gnu.trove.map.hash.TLongIntHashMap.putIfAbsent(JI)I: I9 Branch 39 IFGE L205 - true
   * 7 gnu.trove.map.hash.TLongIntHashMap.forEachEntry(Lgnu/trove/procedure/TLongIntProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 8 gnu.trove.map.hash.TLongIntHashMap.forEachEntry(Lgnu/trove/procedure/TLongIntProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 9 gnu.trove.map.hash.TLongIntHashMap.forEachEntry(Lgnu/trove/procedure/TLongIntProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 10 gnu.trove.map.hash.TLongIntHashMap.forEachEntry(Lgnu/trove/procedure/TLongIntProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 11 gnu.trove.map.hash.TLongIntHashMap.forEachEntry(Lgnu/trove/procedure/TLongIntProcedure;)Z: I39 Branch 65 IFNE L422 - true
   */

  @Test
  public void test37()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(1731);
      tLongIntHashMap0.putIfAbsent(0L, 1731);
      tLongIntHashMap0.putIfAbsent(1L, 0);
      String string0 = tLongIntHashMap0.toString();
      assertEquals(2, tLongIntHashMap0.size());
      assertEquals("{1=0, 0=1731}", string0);
  }

  //Test case number: 38
  /*
   * 18 covered goals:
   * 1 gnu.trove.map.hash.TLongIntHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - false
   * 2 gnu.trove.map.hash.TLongIntHashMap$TLongIntHashIterator.value()I: root-Branch
   * 3 gnu.trove.map.hash.TLongIntHashMap$TLongIntHashIterator.key()J: root-Branch
   * 4 gnu.trove.map.hash.TLongIntHashMap$TLongIntHashIterator.advance()V: root-Branch
   * 5 gnu.trove.map.hash.TLongIntHashMap$TLongIntHashIterator.<init>(Lgnu/trove/map/hash/TLongIntHashMap;Lgnu/trove/map/hash/TLongIntHashMap;)V: root-Branch
   * 6 gnu.trove.map.hash.TLongIntHashMap.<init>()V: root-Branch
   * 7 gnu.trove.map.hash.TLongIntHashMap.setUp(I)I: root-Branch
   * 8 gnu.trove.map.hash.TLongIntHashMap.put(JI)I: root-Branch
   * 9 gnu.trove.map.hash.TLongIntHashMap.iterator()Lgnu/trove/iterator/TLongIntIterator;: root-Branch
   * 10 gnu.trove.map.hash.TLongIntHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - true
   * 11 gnu.trove.map.hash.TLongIntHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - false
   * 12 gnu.trove.map.hash.TLongIntHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - true
   * 13 gnu.trove.map.hash.TLongIntHashMap.putAll(Lgnu/trove/map/TLongIntMap;)V: I15 Branch 43 IFEQ L243 - true
   * 14 gnu.trove.map.hash.TLongIntHashMap.putAll(Lgnu/trove/map/TLongIntMap;)V: I15 Branch 43 IFEQ L243 - false
   * 15 gnu.trove.map.hash.TLongIntHashMap.<init>([J[I)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 16 gnu.trove.map.hash.TLongIntHashMap.<init>([J[I)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 17 gnu.trove.map.hash.TLongIntHashMap.doPut(JII)I: I12 Branch 40 IFGE L214 - true
   * 18 gnu.trove.map.hash.TLongIntHashMap.doPut(JII)I: I41 Branch 41 IFEQ L221 - false
   */

  @Test
  public void test38()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      int[] intArray0 = new int[1];
      TLongIntHashMap tLongIntHashMap1 = new TLongIntHashMap(tLongIntHashMap0._set, intArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1534);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tLongIntHashMap0.putAll((TLongIntMap) tLongIntHashMap1);
      tLongIntHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals("{0=0}", tLongIntHashMap0.toString());
      assertEquals(23, tLongIntHashMap0.capacity());
  }
}

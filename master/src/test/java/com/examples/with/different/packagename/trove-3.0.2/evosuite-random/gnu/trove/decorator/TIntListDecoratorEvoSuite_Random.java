/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TIntListDecorator;
import gnu.trove.list.TIntList;
import gnu.trove.list.array.TIntArrayList;
import gnu.trove.list.linked.TIntLinkedList;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Locale;
import java.util.NoSuchElementException;
import java.util.Set;
import java.util.StringTokenizer;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

public class TIntListDecoratorEvoSuite_Random {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TIntListDecorator tIntListDecorator0 = new TIntListDecorator();
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale locale0 = Locale.getDefault(locale_Category0);
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      boolean boolean0 = tIntListDecorator0.containsAll((Collection<?>) set0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      TIntListDecorator tIntListDecorator0 = new TIntListDecorator();
      String string0 = "";
      StringTokenizer stringTokenizer0 = new StringTokenizer(string0);
      // Undeclared exception!
      try {
        stringTokenizer0.nextToken(string0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TIntListDecorator tIntListDecorator0 = new TIntListDecorator();
      String string0 = "o";
      int int0 = (-378);
      Integer integer0 = new Integer(int0);
      // Undeclared exception!
      try {
        tIntListDecorator0.add(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = (-1);
      int int1 = Integer.MAX_VALUE;
      TIntListDecorator tIntListDecorator0 = new TIntListDecorator();
      String[] stringArray0 = new String[10];
      String string0 = "]y";
      stringArray0[0] = string0;
      String string1 = "";
      stringArray0[1] = string1;
      String string2 = "H[^m`amcPWLeGj?+EG";
      stringArray0[2] = string2;
      String string3 = "";
      stringArray0[3] = string3;
      String string4 = "jBYDEmg_hEnU";
      stringArray0[4] = string4;
      String string5 = "";
      stringArray0[5] = string5;
      String string6 = "";
      stringArray0[6] = string6;
      String string7 = "1^@E{d";
      stringArray0[7] = string7;
      String string8 = "";
      stringArray0[8] = string8;
      String string9 = "DTY+yf";
      stringArray0[9] = string9;
      // Undeclared exception!
      try {
        tIntListDecorator0.toArray(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TIntListDecorator tIntListDecorator0 = new TIntListDecorator();
      // Undeclared exception!
      try {
        tIntListDecorator0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          TIntListDecorator tIntListDecorator0 = new TIntListDecorator();
          String string0 = "ra=C.,*-,";
          FileOutputStream fileOutputStream0 = null;
          try {
            fileOutputStream0 = new FileOutputStream(string0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.io.FilePermission\" \"ra=C.,*-,\" \"write\")
             // java.lang.Thread.getStackTrace(Thread.java:1567)
             // org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
             // java.io.FileOutputStream.<init>(FileOutputStream.java:203)
             // java.io.FileOutputStream.<init>(FileOutputStream.java:104)
             // sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
             // sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
             // sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
             // java.lang.reflect.Constructor.newInstance(Constructor.java:525)
             // org.evosuite.testcase.ConstructorStatement$1.execute(ConstructorStatement.java:226)
             // org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:144)
             // org.evosuite.testcase.ConstructorStatement.execute(ConstructorStatement.java:188)
             // org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             // org.evosuite.testcase.TestRunnable.call(TestRunnable.java:1)
             // java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
             // java.util.concurrent.FutureTask.run(FutureTask.java:166)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
             // java.lang.Thread.run(Thread.java:722)
             //
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test6()  throws Throwable  {
      TIntListDecorator tIntListDecorator0 = new TIntListDecorator();
      Object object0 = null;
      // Undeclared exception!
      try {
        tIntListDecorator0.remove(object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int[] intArray0 = new int[1];
      int int0 = (-1996);
      intArray0[0] = int0;
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      TIntListDecorator tIntListDecorator0 = new TIntListDecorator((TIntList) tIntLinkedList0);
      TIntLinkedList tIntLinkedList1 = (TIntLinkedList)tIntListDecorator0.getList();
      assertNotNull(tIntLinkedList1);
      
      TIntListDecorator tIntListDecorator1 = new TIntListDecorator((TIntList) tIntLinkedList1);
      int int1 = 0;
      tIntListDecorator1.get(int1);
      TIntArrayList tIntArrayList0 = TIntArrayList.wrap(intArray0);
      TIntListDecorator tIntListDecorator2 = new TIntListDecorator((TIntList) tIntArrayList0);
      int int2 = 1;
      // Undeclared exception!
      try {
        tIntListDecorator2.add(int2, (Integer) int2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Can not grow ArrayList wrapped external array
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = 0;
      int int1 = 393;
      TIntArrayList tIntArrayList0 = new TIntArrayList(int0, int1);
      TIntListDecorator tIntListDecorator0 = new TIntListDecorator();
      tIntListDecorator0.iterator();
      int int2 = 1;
      // Undeclared exception!
      try {
        tIntArrayList0.remove(int2, int2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TIntListDecorator tIntListDecorator0 = new TIntListDecorator();
      String string0 = " vs ";
      String string1 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string1, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 0:  vs :// vs #%20vs%20
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TIntListDecorator tIntListDecorator0 = new TIntListDecorator();
      TIntArrayList[] tIntArrayListArray0 = new TIntArrayList[6];
      TIntArrayList tIntArrayList0 = new TIntArrayList();
      tIntArrayListArray0[0] = tIntArrayList0;
      int[] intArray0 = new int[7];
      int int0 = (-33);
      intArray0[0] = int0;
      int int1 = Integer.MIN_VALUE;
      intArray0[1] = int1;
      int int2 = 0;
      intArray0[2] = int2;
      int int3 = 1262;
      intArray0[3] = int3;
      int int4 = 0;
      intArray0[4] = int4;
      int int5 = (-326);
      intArray0[5] = int5;
      int int6 = 1594;
      intArray0[6] = int6;
      TIntArrayList tIntArrayList1 = TIntArrayList.wrap(intArray0);
      tIntArrayListArray0[1] = tIntArrayList1;
      int int7 = (-1824);
      TIntArrayList tIntArrayList2 = null;
      try {
        tIntArrayList2 = new TIntArrayList(int7);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TIntListDecorator tIntListDecorator0 = new TIntListDecorator();
      int[] intArray0 = new int[9];
      int int0 = 0;
      int int1 = (-1367);
      // Undeclared exception!
      try {
        tIntListDecorator0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TIntListDecorator tIntListDecorator0 = new TIntListDecorator();
      int int0 = (-1608);
      // Undeclared exception!
      try {
        tIntListDecorator0.listIterator(int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[8];
      int int0 = 1598;
      intArray0[0] = int0;
      int int1 = 0;
      intArray0[1] = int1;
      int int2 = 1686;
      intArray0[2] = int2;
      int int3 = 841;
      intArray0[3] = int3;
      int int4 = 0;
      intArray0[4] = int4;
      int int5 = (-874);
      intArray0[5] = int5;
      int int6 = (-1);
      intArray0[6] = int6;
      int int7 = 116;
      intArray0[7] = int7;
      TIntArrayList tIntArrayList0 = new TIntArrayList(intArray0);
      // Undeclared exception!
      try {
        tIntArrayList0.subList(intArray0[0], intArray0[7]);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // end index 116 greater than begin index 1598
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 0;
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList(int0);
      LinkedList<TIntArrayList> linkedList0 = new LinkedList<TIntArrayList>();
      TIntListDecorator tIntListDecorator0 = new TIntListDecorator((TIntList) tIntLinkedList0);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) linkedList0;
      objectArray0[1] = (Object) tIntListDecorator0;
      objectArray0[2] = (Object) linkedList0;
      objectArray0[3] = (Object) tIntListDecorator0;
      objectArray0[4] = (Object) tIntLinkedList0;
      tIntListDecorator0.toArray(objectArray0);
      tIntLinkedList0.containsAll((Collection<?>) linkedList0);
      TIntListDecorator tIntListDecorator1 = new TIntListDecorator();
      // Undeclared exception!
      try {
        tIntListDecorator1.toArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TIntListDecorator tIntListDecorator0 = new TIntListDecorator();
      int int0 = 1;
      // Undeclared exception!
      try {
        tIntListDecorator0.remove(int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      TIntListDecorator tIntListDecorator0 = new TIntListDecorator();
      Locale locale0 = Locale.KOREAN;
      String string0 = locale0.getVariant();
      // Undeclared exception!
      try {
        tIntListDecorator0.lastIndexOf((Object) string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[8];
      int int0 = 0;
      intArray0[0] = int0;
      int int1 = 0;
      intArray0[1] = int1;
      int int2 = 1;
      intArray0[2] = int2;
      int int3 = (-1);
      intArray0[3] = int3;
      int int4 = 478;
      intArray0[4] = int4;
      int int5 = 1320;
      TIntListDecorator tIntListDecorator0 = new TIntListDecorator();
      // Undeclared exception!
      try {
        tIntListDecorator0.set(int0, (Integer) int1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

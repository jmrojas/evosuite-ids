/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedLongCollection;
import gnu.trove.impl.sync.TSynchronizedLongLongMap;
import gnu.trove.impl.sync.TSynchronizedLongSet;
import gnu.trove.map.TLongLongMap;
import gnu.trove.map.hash.TLongLongHashMap;
import gnu.trove.procedure.TLongLongProcedure;
import java.io.File;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Locale;
import java.util.NoSuchElementException;
import java.util.StringTokenizer;
import javax.swing.text.Segment;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedLongLongMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = (-253);
      TLongLongMap tLongLongMap0 = null;
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = null;
      try {
        tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap(tLongLongMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = (-1260);
      long[] longArray0 = new long[6];
      longArray0[0] = (long) int0;
      longArray0[1] = (long) int0;
      longArray0[2] = (long) int0;
      long long0 = 1186L;
      longArray0[3] = long0;
      longArray0[4] = (long) int0;
      longArray0[5] = (long) int0;
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      TLongLongHashMap tLongLongHashMap1 = new TLongLongHashMap(int0);
      Locale locale0 = Locale.FRANCE;
      locale0.getCountry();
      Locale locale1 = Locale.US;
      String string0 = locale0.getDisplayScript(locale1);
      TSynchronizedLongLongMap tSynchronizedLongLongMap1 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap1);
      tSynchronizedLongLongMap1.keys(tLongLongHashMap1._set);
      tSynchronizedLongLongMap1.values(tLongLongHashMap1._set);
      long long1 = 9223372036854775807L;
      long long2 = (-1101L);
      tSynchronizedLongLongMap1.keys();
      tSynchronizedLongLongMap1.adjustValue(long1, long2);
      tSynchronizedLongLongMap1.putAll((TLongLongMap) tLongLongHashMap1);
      TSynchronizedLongLongMap tSynchronizedLongLongMap2 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap1, (Object) string0);
      boolean boolean0 = true;
      StringTokenizer stringTokenizer0 = new StringTokenizer(string0, string0, boolean0);
      // Undeclared exception!
      try {
        stringTokenizer0.nextToken();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TLongLongMap tLongLongMap0 = null;
      int int0 = 1268;
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(int0, int0);
      String string0 = File.pathSeparator;
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0, (Object) string0);
      long long0 = 1950L;
      tSynchronizedLongLongMap0.putIfAbsent((long) int0, long0);
      long long1 = 1576L;
      tSynchronizedLongLongMap0.isEmpty();
      Long long2 = new Long(long1);
      String string1 = long2.toString();
      tSynchronizedLongLongMap0.size();
      TSynchronizedLongLongMap tSynchronizedLongLongMap1 = new TSynchronizedLongLongMap(tLongLongMap0, (Object) string1);
      // Undeclared exception!
      try {
        tSynchronizedLongLongMap1.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      long[] longArray0 = new long[4];
      long long0 = 1279L;
      longArray0[0] = long0;
      long long1 = (-1L);
      longArray0[1] = long1;
      long long2 = 0L;
      longArray0[2] = long2;
      long long3 = (-59L);
      longArray0[3] = long3;
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      int int0 = (-351);
      TLongLongMap tLongLongMap0 = null;
      String string0 = "Xy";
      String string1 = Long.toString((long) int0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap1 = new TSynchronizedLongLongMap(tLongLongMap0, (Object) string1);
      // Undeclared exception!
      try {
        tSynchronizedLongLongMap1.adjustValue((long) int0, (long) int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = (-1);
      long[] longArray0 = new long[8];
      longArray0[0] = (long) int0;
      longArray0[1] = (long) int0;
      longArray0[2] = (long) int0;
      longArray0[3] = (long) int0;
      longArray0[4] = (long) int0;
      longArray0[5] = (long) int0;
      longArray0[6] = (long) int0;
      long long0 = (-163L);
      longArray0[7] = long0;
      int int1 = 1673;
      float float0 = 0.5F;
      long long1 = 0L;
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(int1, float0, long1, long0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      long long2 = (-1090L);
      tSynchronizedLongLongMap0.put(longArray0[6], long2);
      TLongLongHashMap tLongLongHashMap1 = new TLongLongHashMap(longArray0, longArray0);
      TLongLongHashMap tLongLongHashMap2 = new TLongLongHashMap((TLongLongMap) tLongLongHashMap1);
      TSynchronizedLongLongMap tSynchronizedLongLongMap1 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap2);
      TSynchronizedLongLongMap tSynchronizedLongLongMap2 = new TSynchronizedLongLongMap((TLongLongMap) tSynchronizedLongLongMap1);
      float float1 = (-1.0F);
      TLongLongHashMap tLongLongHashMap3 = new TLongLongHashMap(int0, float1, (long) int0, (long) int0);
      String string0 = "index ";
      String string1 = "j)xNdC0m4ubgof";
      String string2 = "^94<g-H}0B)pl:U";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string1, string0, string2);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: index ://j)xNdC0m4ubgofindex%20#%5E94%3Cg-H%7D0B)pl:U
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      long[] longArray0 = new long[5];
      long long0 = (-1L);
      longArray0[0] = long0;
      long long1 = (-1993L);
      longArray0[1] = long1;
      long long2 = 0L;
      longArray0[2] = long2;
      long long3 = (-1280L);
      longArray0[3] = long3;
      long long4 = 0L;
      longArray0[4] = long4;
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      TLongLongHashMap tLongLongHashMap1 = new TLongLongHashMap((TLongLongMap) tLongLongHashMap0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap1);
      assertEquals(4, tSynchronizedLongLongMap0.size());
  }

  @Test
  public void test6()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      long long0 = 0L;
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      String string0 = "rhHV$aEA>;<Z^J";
      tSynchronizedLongLongMap0.values();
      // Undeclared exception!
      try {
        URI.create(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in path at index 8: rhHV$aEA>;<Z^J
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      long[] longArray0 = new long[6];
      long long0 = 0L;
      longArray0[0] = long0;
      long long1 = (-1L);
      longArray0[1] = long1;
      long long2 = 1892L;
      longArray0[2] = long2;
      long long3 = 0L;
      longArray0[3] = long3;
      long long4 = (-1783L);
      longArray0[4] = long4;
      long long5 = 1293L;
      longArray0[5] = long5;
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      Locale locale0 = Locale.GERMANY;
      String string0 = locale0.toLanguageTag();
      TSynchronizedLongLongMap tSynchronizedLongLongMap1 = new TSynchronizedLongLongMap((TLongLongMap) tSynchronizedLongLongMap0, (Object) string0);
      String string1 = locale0.getCountry();
      boolean boolean0 = tSynchronizedLongLongMap1.equals((Object) string1);
      assertTrue(tSynchronizedLongLongMap1.equals(tSynchronizedLongLongMap0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      long[] longArray0 = new long[2];
      long long0 = (-1745L);
      longArray0[0] = long0;
      long long1 = 1669L;
      int int0 = 538;
      int int1 = 0;
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(int1);
      TLongLongHashMap tLongLongHashMap1 = new TLongLongHashMap((TLongLongMap) tLongLongHashMap0);
      Locale locale0 = Locale.CANADA_FRENCH;
      Locale locale1 = Locale.KOREAN;
      String string0 = locale0.getDisplayCountry(locale1);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap1, (Object) string0);
      float float0 = 0.0F;
      long long2 = 0L;
      TLongLongHashMap tLongLongHashMap2 = new TLongLongHashMap(int0, int0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap1 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap2);
      tSynchronizedLongLongMap1.getNoEntryKey();
      long long3 = 0L;
      long long4 = 1L;
      longArray0[0] = long4;
      tLongLongHashMap2.getNoEntryValue();
      longArray0[1] = long3;
      TLongLongHashMap tLongLongHashMap3 = new TLongLongHashMap(int0, float0, long2, long3);
      TSynchronizedLongLongMap tSynchronizedLongLongMap2 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap3);
      long long5 = 0L;
      long long6 = 688L;
      tSynchronizedLongLongMap2.put(long5, long6);
      longArray0[1] = long1;
      TLongLongHashMap tLongLongHashMap4 = new TLongLongHashMap(longArray0, longArray0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap3 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap4);
      tSynchronizedLongLongMap2.putAll((TLongLongMap) tLongLongHashMap3);
      assertEquals(false, tSynchronizedLongLongMap2.isEmpty());
      assertEquals("{0=688}", tLongLongHashMap3.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 928;
      long long0 = 61L;
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(int0, (float) int0, (long) int0, long0);
      Segment segment0 = new Segment();
      String string0 = segment0.toString();
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0, (Object) string0);
      String string1 = Long.toBinaryString(long0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap1 = new TSynchronizedLongLongMap((TLongLongMap) tSynchronizedLongLongMap0, (Object) string1);
      long long1 = 0L;
      long long2 = 1911L;
      long long3 = tSynchronizedLongLongMap1.adjustOrPutValue((long) int0, long1, long2);
      assertEquals(false, tLongLongHashMap0.isEmpty());
      
      int int1 = 1022;
      TLongLongHashMap tLongLongHashMap1 = new TLongLongHashMap(int1, int1);
      TLongLongHashMap tLongLongHashMap2 = new TLongLongHashMap((TLongLongMap) tLongLongHashMap1);
      long long4 = 0L;
      String string2 = Long.toBinaryString(long4);
      TSynchronizedLongLongMap tSynchronizedLongLongMap2 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap2, (Object) string2);
      long long5 = 0L;
      long long6 = 0L;
      TLongLongHashMap tLongLongHashMap3 = new TLongLongHashMap(int1, (float) int1, long5, long6);
      TSynchronizedLongLongMap tSynchronizedLongLongMap3 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap3);
      tSynchronizedLongLongMap3.hashCode();
      assertFalse(long5 == long3);
  }

  @Test
  public void test10()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      long long0 = 0L;
      int int0 = 458;
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      long[] longArray0 = new long[8];
      longArray0[0] = long0;
      longArray0[1] = long0;
      longArray0[2] = (long) int0;
      longArray0[3] = (long) int0;
      longArray0[4] = (long) int0;
      longArray0[5] = (long) int0;
      longArray0[6] = long0;
      longArray0[7] = (long) int0;
      longArray0[0] = (long) int0;
      longArray0[1] = long0;
      longArray0[2] = (long) int0;
      longArray0[3] = long0;
      longArray0[4] = (long) int0;
      longArray0[5] = long0;
      longArray0[6] = (long) int0;
      longArray0[7] = long0;
      tSynchronizedLongLongMap0.values(longArray0);
      String string0 = Long.toString(long0, int0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap1 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0, (Object) string0);
      long[] longArray1 = tSynchronizedLongLongMap1.values(tLongLongHashMap0._set);
      assertNotSame(longArray1, longArray0);
  }

  @Test
  public void test11()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      long long0 = 0L;
      tLongLongHashMap0.setAutoCompactionFactor((float) long0);
      Long long1 = new Long(long0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0, (Object) long1);
      TSynchronizedLongLongMap tSynchronizedLongLongMap1 = new TSynchronizedLongLongMap((TLongLongMap) tSynchronizedLongLongMap0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap2 = new TSynchronizedLongLongMap((TLongLongMap) tSynchronizedLongLongMap1);
      String string0 = "t3nU`DwROC4Qr}";
      tSynchronizedLongLongMap2.getNoEntryValue();
      long long2 = (-1374L);
      tSynchronizedLongLongMap0.adjustValue(long2, (long) long1);
      Locale locale0 = new Locale(string0);
      String string1 = locale0.getScript();
      TSynchronizedLongLongMap tSynchronizedLongLongMap3 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0, (Object) string1);
      TSynchronizedLongSet tSynchronizedLongSet0 = (TSynchronizedLongSet)tSynchronizedLongLongMap2.keySet();
      assertEquals(true, tSynchronizedLongSet0.isEmpty());
  }

  @Test
  public void test12()  throws Throwable  {
      TLongLongMap tLongLongMap0 = null;
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = null;
      try {
        tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap(tLongLongMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = (-1);
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(int0);
      Object object0 = null;
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0, object0);
      // Undeclared exception!
      try {
        tSynchronizedLongLongMap0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = (-334);
      float float0 = 169.79509F;
      long long0 = 9223372036854775807L;
      float float1 = 0.0F;
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(int0, float1);
      String string0 = "{";
      tLongLongHashMap0.get(long0);
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in path at index 0: {
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = (-1);
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(int0, int0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      TSynchronizedLongCollection tSynchronizedLongCollection0 = (TSynchronizedLongCollection)tSynchronizedLongLongMap0.valueCollection();
      assertEquals(true, tSynchronizedLongCollection0.isEmpty());
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = 0;
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(int0, int0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap1 = new TSynchronizedLongLongMap((TLongLongMap) tSynchronizedLongLongMap0);
      tSynchronizedLongLongMap1.hashCode();
      TLongLongHashMap tLongLongHashMap1 = new TLongLongHashMap();
      TSynchronizedLongLongMap tSynchronizedLongLongMap2 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap1);
      tSynchronizedLongLongMap2.isEmpty();
      TLongLongProcedure tLongLongProcedure0 = null;
      tSynchronizedLongLongMap2.size();
      long long0 = 0L;
      long long1 = (-803L);
      tSynchronizedLongLongMap2.put(long0, long1);
      TSynchronizedLongLongMap tSynchronizedLongLongMap3 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap1);
      tSynchronizedLongLongMap2.putAll((TLongLongMap) tSynchronizedLongLongMap3);
      // Undeclared exception!
      try {
        tSynchronizedLongLongMap2.retainEntries(tLongLongProcedure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      int int0 = 104;
      float float0 = 0.0F;
      TLongLongMap tLongLongMap0 = null;
      Locale locale0 = Locale.US;
      Locale locale1 = Locale.CHINA;
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = null;
      try {
        tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap(tLongLongMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      int int0 = 1427;
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(int0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      tSynchronizedLongLongMap0.containsKey((long) int0);
      long[] longArray0 = new long[2];
      long long0 = 0L;
      longArray0[0] = long0;
      long long1 = (-1716L);
      longArray0[1] = long1;
      long[] longArray1 = new long[10];
      long long2 = (-1378L);
      longArray1[0] = long2;
      longArray1[1] = long0;
      int int1 = 0;
      TLongLongHashMap tLongLongHashMap1 = new TLongLongHashMap(int1);
      TSynchronizedLongLongMap tSynchronizedLongLongMap1 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap1);
      int int2 = (-1933);
      TLongLongHashMap tLongLongHashMap2 = new TLongLongHashMap(int2);
      TSynchronizedLongLongMap tSynchronizedLongLongMap2 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap2);
      tSynchronizedLongLongMap2.put(long1, long0);
      assertEquals(false, tSynchronizedLongLongMap2.isEmpty());
      
      longArray1[2] = long1;
      longArray1[3] = long0;
      longArray1[4] = long1;
      longArray1[5] = long0;
      long long3 = 1L;
      longArray1[6] = long3;
      longArray1[7] = long0;
      long long4 = 804L;
      longArray1[8] = long4;
      longArray1[9] = long0;
      TLongLongHashMap tLongLongHashMap3 = new TLongLongHashMap(longArray0, longArray1);
      TLongLongHashMap tLongLongHashMap4 = new TLongLongHashMap((TLongLongMap) tLongLongHashMap3);
      TSynchronizedLongLongMap tSynchronizedLongLongMap3 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap4);
      tSynchronizedLongLongMap3.toString();
      int int3 = (-616);
      TLongLongHashMap tLongLongHashMap5 = new TLongLongHashMap(int3);
      TSynchronizedLongLongMap tSynchronizedLongLongMap4 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap5);
      tSynchronizedLongLongMap4.values();
      assertFalse(tSynchronizedLongLongMap4.equals(tSynchronizedLongLongMap2));
  }

  @Test
  public void test19()  throws Throwable  {
      long[] longArray0 = new long[8];
      long long0 = (-113L);
      longArray0[0] = long0;
      long long1 = 774L;
      longArray0[1] = long1;
      long long2 = 1895L;
      longArray0[2] = long2;
      long long3 = 2L;
      longArray0[3] = long3;
      long long4 = (-1L);
      longArray0[4] = long4;
      long long5 = 9223372036854775807L;
      longArray0[5] = long5;
      long long6 = (-1808L);
      longArray0[6] = long6;
      long long7 = 0L;
      longArray0[7] = long7;
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap0 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap0);
      TLongLongHashMap tLongLongHashMap1 = new TLongLongHashMap((TLongLongMap) tSynchronizedLongLongMap0);
      TSynchronizedLongLongMap tSynchronizedLongLongMap1 = new TSynchronizedLongLongMap((TLongLongMap) tLongLongHashMap1);
      tSynchronizedLongLongMap1.clear();
      TLongLongMap tLongLongMap0 = null;
      String string0 = "";
      try {
        Long.decode(string0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Zero length string
         //
      }
  }
}

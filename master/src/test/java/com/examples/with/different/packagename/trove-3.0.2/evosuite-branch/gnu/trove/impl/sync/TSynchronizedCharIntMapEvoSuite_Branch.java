/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TIntFunction;
import gnu.trove.impl.sync.TSynchronizedCharIntMap;
import gnu.trove.impl.sync.TSynchronizedCharSet;
import gnu.trove.impl.sync.TSynchronizedIntCollection;
import gnu.trove.iterator.TCharIntIterator;
import gnu.trove.map.TCharIntMap;
import gnu.trove.map.hash.TCharIntHashMap;
import gnu.trove.procedure.TCharIntProcedure;
import gnu.trove.procedure.TCharProcedure;
import gnu.trove.procedure.TIntProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedCharIntMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.toString()Ljava/lang/String;: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedCharIntMap.<init>(Lgnu/trove/map/TCharIntMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap((int) '\u0000', (float) ' ', ' ', (int) '\u0000');
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      String string0 = tSynchronizedCharIntMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.put(CI)I: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(1312, 1312);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      tSynchronizedCharIntMap0.put('o', 'o');
      assertEquals(false, tCharIntHashMap0.isEmpty());
      assertEquals("{o=111}", tSynchronizedCharIntMap0.toString());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.iterator()Lgnu/trove/iterator/TCharIntIterator;: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(3);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      TCharIntIterator tCharIntIterator0 = tSynchronizedCharIntMap0.iterator();
      assertEquals(false, tCharIntIterator0.hasNext());
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.getNoEntryKey()C: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      char char0 = tSynchronizedCharIntMap0.getNoEntryKey();
      assertEquals('\u0000', char0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.get(C)I: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(3);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      int int0 = tSynchronizedCharIntMap0.get('!');
      assertEquals(0, int0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.clear()V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      tSynchronizedCharIntMap0.clear();
      assertEquals("{}", tSynchronizedCharIntMap0.toString());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.putIfAbsent(CI)I: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      tSynchronizedCharIntMap0.putIfAbsent('S', 'S');
      assertEquals(1, tCharIntHashMap0.size());
      assertEquals("{S=83}", tCharIntHashMap0.toString());
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.putAll(Lgnu/trove/map/TCharIntMap;)V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(3);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      tSynchronizedCharIntMap0.putAll((TCharIntMap) tCharIntHashMap0);
      assertEquals(7, tCharIntHashMap0.capacity());
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      boolean boolean0 = tSynchronizedCharIntMap0.forEachKey((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.forEachEntry(Lgnu/trove/procedure/TCharIntProcedure;)Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      boolean boolean0 = tSynchronizedCharIntMap0.forEachEntry((TCharIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustValue(CI)Z: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(1312, 1312);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      boolean boolean0 = tSynchronizedCharIntMap0.adjustValue('o', 'o');
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.transformValues(Lgnu/trove/function/TIntFunction;)V: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      tSynchronizedCharIntMap0.transformValues((TIntFunction) null);
      assertEquals("{}", tSynchronizedCharIntMap0.toString());
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.increment(C)Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(1312, 1312);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      boolean boolean0 = tSynchronizedCharIntMap0.increment('o');
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.containsValue(I)Z: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(1312, 1312);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      boolean boolean0 = tSynchronizedCharIntMap0.containsValue(0);
      assertEquals(false, boolean0);
  }

  //Test case number: 14
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.getNoEntryValue()I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedCharIntMap.equals(Ljava/lang/Object;)Z: root-Branch
   * 3 gnu.trove.impl.sync.TSynchronizedCharIntMap.size()I: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      boolean boolean0 = tSynchronizedCharIntMap0.equals((Object) tSynchronizedCharIntMap0);
      assertEquals(true, boolean0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      HashMap<Character, Integer> hashMap0 = new HashMap<Character, Integer>();
      tSynchronizedCharIntMap0.putAll((Map<? extends Character, ? extends Integer>) hashMap0);
      assertEquals("{}", hashMap0.toString());
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.remove(C)I: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      int int0 = tSynchronizedCharIntMap0.remove('S');
      assertEquals(0, int0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.hashCode()I: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(1312, 1312);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      int int0 = tSynchronizedCharIntMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap((int) '\u0000', (float) ' ', ' ', (int) '\u0000');
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      int int0 = tSynchronizedCharIntMap0.adjustOrPutValue('\u0000', (-6), (-6));
      assertEquals(1, tCharIntHashMap0.size());
      assertEquals((-6), int0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.containsKey(C)Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(1312, 1312);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      boolean boolean0 = tSynchronizedCharIntMap0.containsKey('o');
      assertEquals(false, boolean0);
  }

  //Test case number: 20
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.retainEntries(Lgnu/trove/procedure/TCharIntProcedure;)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedCharIntMap.<init>(Lgnu/trove/map/TCharIntMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) null, (Object) null);
      // Undeclared exception!
      try {
        tSynchronizedCharIntMap0.retainEntries((TCharIntProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.values()[I: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      int[] intArray0 = tSynchronizedCharIntMap0.values();
      assertNotNull(intArray0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(1312, 1312);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      boolean boolean0 = tSynchronizedCharIntMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.values([I)[I: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap((-3));
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      int[] intArray0 = new int[7];
      int[] intArray1 = tSynchronizedCharIntMap0.values(intArray0);
      assertSame(intArray1, intArray0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.keys([C)[C: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(1312, 1312);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      char[] charArray0 = tSynchronizedCharIntMap0.keys(tCharIntHashMap0._set);
      assertNotNull(charArray0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.keys()[C: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(1312, 1312);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      char[] charArray0 = tSynchronizedCharIntMap0.keys();
      assertNotNull(charArray0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      boolean boolean0 = tSynchronizedCharIntMap0.forEachValue((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.<init>(Lgnu/trove/map/TCharIntMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = null;
      try {
        tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.keySet()Lgnu/trove/set/TCharSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedCharIntMap.keySet()Lgnu/trove/set/TCharSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap((int) '\u0000', (float) ' ', ' ', (int) '\u0000');
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      TSynchronizedCharSet tSynchronizedCharSet0 = (TSynchronizedCharSet)tSynchronizedCharIntMap0.keySet();
      assertNotNull(tSynchronizedCharSet0);
      
      TSynchronizedCharSet tSynchronizedCharSet1 = (TSynchronizedCharSet)tSynchronizedCharIntMap0.keySet();
      assertSame(tSynchronizedCharSet1, tSynchronizedCharSet0);
  }

  //Test case number: 29
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.valueCollection()Lgnu/trove/TIntCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 gnu.trove.impl.sync.TSynchronizedCharIntMap.valueCollection()Lgnu/trove/TIntCollection;: I11 Branch 3 IFNONNULL L121 - false
   * 3 gnu.trove.impl.sync.TSynchronizedCharIntMap.<init>(Lgnu/trove/map/TCharIntMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test29()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(1312, 1312);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      TSynchronizedIntCollection tSynchronizedIntCollection0 = (TSynchronizedIntCollection)tSynchronizedCharIntMap0.valueCollection();
      assertNotNull(tSynchronizedIntCollection0);
      
      TSynchronizedIntCollection tSynchronizedIntCollection1 = (TSynchronizedIntCollection)tSynchronizedCharIntMap0.valueCollection();
      assertSame(tSynchronizedIntCollection1, tSynchronizedIntCollection0);
  }
}

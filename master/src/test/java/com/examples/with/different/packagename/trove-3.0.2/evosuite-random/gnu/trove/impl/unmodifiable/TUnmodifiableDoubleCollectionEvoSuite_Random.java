/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TDoubleCollection;
import gnu.trove.impl.sync.TSynchronizedDoubleSet;
import gnu.trove.impl.sync.TSynchronizedRandomAccessDoubleList;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleList;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessDoubleList;
import gnu.trove.list.TDoubleList;
import gnu.trove.list.array.TDoubleArrayList;
import gnu.trove.list.linked.TDoubleLinkedList;
import gnu.trove.procedure.TDoubleProcedure;
import gnu.trove.set.TDoubleSet;
import gnu.trove.set.hash.TDoubleHashSet;
import java.io.ByteArrayOutputStream;
import java.io.UnsupportedEncodingException;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Locale;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableDoubleCollectionEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      double double0 = (-739.3782877212888);
      doubleArray0[0] = double0;
      double double1 = (-1269.1238830633038);
      doubleArray0[1] = double1;
      double double2 = (-960.5569257835976);
      doubleArray0[2] = double2;
      double double3 = 1.0;
      doubleArray0[3] = double3;
      double double4 = 1419.4884730561837;
      doubleArray0[4] = double4;
      double double5 = 0.0;
      doubleArray0[5] = double5;
      double double6 = 1.0;
      doubleArray0[6] = double6;
      double double7 = (-969.5480877802551);
      doubleArray0[7] = double7;
      double double8 = 0.0;
      doubleArray0[8] = double8;
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(doubleArray0);
      TUnmodifiableRandomAccessDoubleList tUnmodifiableRandomAccessDoubleList0 = new TUnmodifiableRandomAccessDoubleList((TDoubleList) tDoubleArrayList0);
      assertEquals(9, tUnmodifiableRandomAccessDoubleList0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = 187;
      float float0 = 0.0F;
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(int0, float0, (double) int0);
      TUnmodifiableDoubleCollection tUnmodifiableDoubleCollection0 = new TUnmodifiableDoubleCollection((TDoubleCollection) tDoubleHashSet0);
      tDoubleHashSet0.tempDisableAutoCompaction();
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      double[] doubleArray0 = new double[10];
      doubleArray0[0] = (double) float0;
      doubleArray0[1] = (double) int0;
      doubleArray0[2] = (double) int0;
      doubleArray0[3] = (double) int0;
      doubleArray0[4] = (double) int0;
      doubleArray0[5] = (double) int0;
      doubleArray0[6] = (double) float0;
      doubleArray0[7] = (double) int0;
      doubleArray0[8] = (double) int0;
      doubleArray0[9] = (double) float0;
      tDoubleHashSet0.addAll(doubleArray0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleCollection0.addAll((Collection<? extends Double>) linkedList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      double double0 = 0.0;
      doubleArray0[0] = double0;
      double double1 = (-1505.7644106295284);
      doubleArray0[1] = double1;
      double double2 = 1.0;
      doubleArray0[2] = double2;
      double double3 = 0.0;
      doubleArray0[3] = double3;
      double double4 = 0.0;
      doubleArray0[4] = double4;
      double double5 = (-1.0);
      doubleArray0[5] = double5;
      double double6 = 1159.7205616363742;
      doubleArray0[6] = double6;
      double double7 = (-773.3466611012201);
      doubleArray0[7] = double7;
      double double8 = (-1334.264523734011);
      doubleArray0[8] = double8;
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(doubleArray0);
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet0 = new TUnmodifiableDoubleSet((TDoubleSet) tDoubleHashSet0);
      double double9 = tUnmodifiableDoubleSet0.getNoEntryValue();
      assertFalse(double9 == double5);
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = 0;
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(int0);
      Locale locale0 = Locale.CANADA;
      locale0.getLanguage();
      TUnmodifiableDoubleList tUnmodifiableDoubleList0 = new TUnmodifiableDoubleList((TDoubleList) tDoubleArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleList0.removeAll((TDoubleCollection) tDoubleArrayList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TDoubleCollection tDoubleCollection0 = null;
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      String string0 = "";
      try {
        byteArrayOutputStream0.toString(string0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
         //
         // 
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double double0 = (-1646.2285088053031);
      doubleArray0[0] = double0;
      double double1 = (-1691.4988314346463);
      int int0 = 104;
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(int0, int0);
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0);
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet0 = new TUnmodifiableDoubleSet((TDoubleSet) tSynchronizedDoubleSet0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleSet0.removeAll((TDoubleCollection) tDoubleHashSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = (-1);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((Collection<? extends Double>) linkedList0);
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet0 = new TUnmodifiableDoubleSet((TDoubleSet) tDoubleHashSet0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleSet0.addAll((TDoubleCollection) tDoubleHashSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TDoubleSet tDoubleSet0 = null;
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet0 = null;
      try {
        tUnmodifiableDoubleSet0 = new TUnmodifiableDoubleSet(tDoubleSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = 0;
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(int0);
      TSynchronizedRandomAccessDoubleList tSynchronizedRandomAccessDoubleList0 = new TSynchronizedRandomAccessDoubleList((TDoubleList) tDoubleArrayList0);
      TUnmodifiableRandomAccessDoubleList tUnmodifiableRandomAccessDoubleList0 = new TUnmodifiableRandomAccessDoubleList((TDoubleList) tSynchronizedRandomAccessDoubleList0);
      boolean boolean0 = tUnmodifiableRandomAccessDoubleList0.containsAll((TDoubleCollection) tSynchronizedRandomAccessDoubleList0);
      TSynchronizedRandomAccessDoubleList tSynchronizedRandomAccessDoubleList1 = (TSynchronizedRandomAccessDoubleList)tUnmodifiableRandomAccessDoubleList0.list;
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) int0;
      doubleArray0[1] = (double) int0;
      doubleArray0[2] = (double) int0;
      tUnmodifiableRandomAccessDoubleList0.containsAll(doubleArray0);
      TUnmodifiableDoubleList tUnmodifiableDoubleList0 = new TUnmodifiableDoubleList((TDoubleList) tSynchronizedRandomAccessDoubleList1);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      boolean boolean1 = tUnmodifiableDoubleList0.containsAll((Collection<?>) linkedList0);
      assertTrue(boolean1 == boolean0);
  }

//   @Test
//   public void test9()  throws Throwable  {
//       double[] doubleArray0 = new double[4];
//       double double0 = (-1708.8236625044183);
//       doubleArray0[0] = double0;
//       double double1 = 614.3288260581163;
//       doubleArray0[1] = double1;
//       double double2 = 1.0;
//       doubleArray0[2] = double2;
//       double double3 = 447.7333023573624;
//       doubleArray0[3] = double3;
//       double double4 = (-1.0);
//       TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0, double4);
//       TUnmodifiableDoubleCollection tUnmodifiableDoubleCollection0 = new TUnmodifiableDoubleCollection((TDoubleCollection) tDoubleArrayList0);
//       int int0 = tUnmodifiableDoubleCollection0.hashCode();
//       assertEquals(34041392, int0);
//   }

  @Test
  public void test10()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      TUnmodifiableDoubleCollection tUnmodifiableDoubleCollection0 = new TUnmodifiableDoubleCollection((TDoubleCollection) tDoubleArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleCollection0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      TUnmodifiableDoubleList tUnmodifiableDoubleList0 = new TUnmodifiableDoubleList((TDoubleList) tDoubleLinkedList0);
      double double0 = tUnmodifiableDoubleList0.getNoEntryValue();
      assertEquals(0.0, double0, 0.01D);
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 1;
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(int0);
      TDoubleProcedure tDoubleProcedure0 = null;
      TDoubleArrayList tDoubleArrayList1 = (TDoubleArrayList)tDoubleArrayList0.inverseGrep(tDoubleProcedure0);
      TUnmodifiableDoubleCollection tUnmodifiableDoubleCollection0 = new TUnmodifiableDoubleCollection((TDoubleCollection) tDoubleArrayList1);
      assertEquals(0.0, tUnmodifiableDoubleCollection0.getNoEntryValue(), 0.01D);
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = (-1);
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(int0);
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0);
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet0 = new TUnmodifiableDoubleSet((TDoubleSet) tSynchronizedDoubleSet0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleSet0.retainAll((TDoubleCollection) tDoubleHashSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      int int0 = 1;
      tDoubleArrayList0.subList(int0, int0);
      TUnmodifiableDoubleList tUnmodifiableDoubleList0 = new TUnmodifiableDoubleList((TDoubleList) tDoubleArrayList0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) int0;
      double double0 = 0.0;
      doubleArray0[1] = double0;
      doubleArray0[2] = (double) int0;
      // Undeclared exception!
      try {
        tUnmodifiableDoubleList0.retainAll(doubleArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet();
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet0 = new TUnmodifiableDoubleSet((TDoubleSet) tDoubleHashSet0);
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet1 = new TUnmodifiableDoubleSet((TDoubleSet) tUnmodifiableDoubleSet0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      try {
        tUnmodifiableDoubleSet1.removeAll(tDoubleHashSet0._set);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      TDoubleCollection tDoubleCollection0 = null;
      TDoubleList tDoubleList0 = null;
      TUnmodifiableRandomAccessDoubleList tUnmodifiableRandomAccessDoubleList0 = null;
      try {
        tUnmodifiableRandomAccessDoubleList0 = new TUnmodifiableRandomAccessDoubleList(tDoubleList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((Collection<? extends Double>) linkedList0);
      tDoubleHashSet0.addAll((Collection<? extends Double>) linkedList0);
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0);
      TDoubleHashSet tDoubleHashSet1 = new TDoubleHashSet((Collection<? extends Double>) linkedList0);
      TUnmodifiableDoubleCollection tUnmodifiableDoubleCollection0 = new TUnmodifiableDoubleCollection((TDoubleCollection) tDoubleHashSet1);
      tUnmodifiableDoubleCollection0.toString();
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet0 = new TUnmodifiableDoubleSet((TDoubleSet) tSynchronizedDoubleSet0);
      tSynchronizedDoubleSet0.toArray(tDoubleHashSet0._set);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleSet0.addAll((TDoubleCollection) tDoubleHashSet1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      int int0 = (-673);
      TDoubleArrayList tDoubleArrayList0 = null;
      try {
        tDoubleArrayList0 = new TDoubleArrayList(int0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

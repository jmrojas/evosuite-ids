/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TObjectDoubleMapDecorator;
import gnu.trove.map.TObjectDoubleMap;
import gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap;
import gnu.trove.map.hash.TObjectDoubleHashMap;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TObjectDoubleMapDecoratorEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 4 covered goals:
   * 1 Weak Mutation 39: gnu.trove.decorator.TObjectDoubleMapDecorator.getMap()Lgnu/trove/map/TObjectDoubleMap;:84 - DeleteField: _mapLgnu/trove/map/TObjectDoubleMap;
   * 2 gnu.trove.decorator.TObjectDoubleMapDecorator.getMap()Lgnu/trove/map/TObjectDoubleMap;: root-Branch
   * 3 gnu.trove.decorator.TObjectDoubleMapDecorator.<init>(Lgnu/trove/map/TObjectDoubleMap;)V: root-Branch
   * 4 Weak Mutation 39: gnu.trove.decorator.TObjectDoubleMapDecorator.getMap()Lgnu/trove/map/TObjectDoubleMap;:84 - DeleteField: _mapLgnu/trove/map/TObjectDoubleMap;
   */

  @Test
  public void test0()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<String> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0);
      TObjectDoubleMapDecorator<String> tObjectDoubleMapDecorator0 = new TObjectDoubleMapDecorator<String>((TObjectDoubleMap<String>) tObjectDoubleCustomHashMap0);
      TObjectDoubleMap<String> tObjectDoubleMap0 = tObjectDoubleMapDecorator0.getMap();
      assertEquals(0.0, tObjectDoubleMap0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 1
  /*
   * 30 covered goals:
   * 1 Weak Mutation 46: gnu.trove.decorator.TObjectDoubleMapDecorator.put(Ljava/lang/Object;Ljava/lang/Double;)Ljava/lang/Double;:98 - DeleteField: _mapLgnu/trove/map/TObjectDoubleMap;
   * 2 Weak Mutation 47: gnu.trove.decorator.TObjectDoubleMapDecorator.put(Ljava/lang/Object;Ljava/lang/Double;)Ljava/lang/Double;:98 - DeleteStatement: unwrapValue(Ljava/lang/Object;)D
   * 3 Weak Mutation 49: gnu.trove.decorator.TObjectDoubleMapDecorator.put(Ljava/lang/Object;Ljava/lang/Double;)Ljava/lang/Double;:98 - DeleteStatement: wrapValue(D)Ljava/lang/Double;
   * 4 Weak Mutation 48: gnu.trove.decorator.TObjectDoubleMapDecorator.put(Ljava/lang/Object;Ljava/lang/Double;)Ljava/lang/Double;:98 - DeleteStatement: put(Ljava/lang/Object;D)D
   * 5 Weak Mutation 107: gnu.trove.decorator.TObjectDoubleMapDecorator.unwrapValue(Ljava/lang/Object;)D:322 - DeleteStatement: doubleValue()D
   * 6 gnu.trove.decorator.TObjectDoubleMapDecorator.unwrapValue(Ljava/lang/Object;)D: root-Branch
   * 7 gnu.trove.decorator.TObjectDoubleMapDecorator.put(Ljava/lang/Object;Ljava/lang/Double;)Ljava/lang/Double;: I3 Branch 5 IFNONNULL L97 - true
   * 8 Weak Mutation 42: gnu.trove.decorator.TObjectDoubleMapDecorator.put(Ljava/lang/Object;Ljava/lang/Double;)Ljava/lang/Double;:97 - DeleteField: _mapLgnu/trove/map/TObjectDoubleMap;
   * 9 Weak Mutation 43: gnu.trove.decorator.TObjectDoubleMapDecorator.put(Ljava/lang/Object;Ljava/lang/Double;)Ljava/lang/Double;:97 - DeleteStatement: getNoEntryValue()D
   * 10 Weak Mutation 40: gnu.trove.decorator.TObjectDoubleMapDecorator.put(Ljava/lang/Object;Ljava/lang/Double;)Ljava/lang/Double;:97 - ReplaceComparisonOperator != null -> = null
   * 11 Weak Mutation 41: gnu.trove.decorator.TObjectDoubleMapDecorator.put(Ljava/lang/Object;Ljava/lang/Double;)Ljava/lang/Double;:97 - DeleteField: _mapLgnu/trove/map/TObjectDoubleMap;
   * 12 Weak Mutation 44: gnu.trove.decorator.TObjectDoubleMapDecorator.put(Ljava/lang/Object;Ljava/lang/Double;)Ljava/lang/Double;:97 - DeleteStatement: put(Ljava/lang/Object;D)D
   * 13 Weak Mutation 45: gnu.trove.decorator.TObjectDoubleMapDecorator.put(Ljava/lang/Object;Ljava/lang/Double;)Ljava/lang/Double;:97 - DeleteStatement: wrapValue(D)Ljava/lang/Double;
   * 14 Weak Mutation 106: gnu.trove.decorator.TObjectDoubleMapDecorator.wrapValue(D)Ljava/lang/Double;:311 - DeleteStatement: valueOf(D)Ljava/lang/Double;
   * 15 Weak Mutation 105: gnu.trove.decorator.TObjectDoubleMapDecorator.wrapValue(D)Ljava/lang/Double;:311 - InsertUnaryOp Negation of k
   * 16 Weak Mutation 42: gnu.trove.decorator.TObjectDoubleMapDecorator.put(Ljava/lang/Object;Ljava/lang/Double;)Ljava/lang/Double;:97 - DeleteField: _mapLgnu/trove/map/TObjectDoubleMap;
   * 17 Weak Mutation 43: gnu.trove.decorator.TObjectDoubleMapDecorator.put(Ljava/lang/Object;Ljava/lang/Double;)Ljava/lang/Double;:97 - DeleteStatement: getNoEntryValue()D
   * 18 Weak Mutation 40: gnu.trove.decorator.TObjectDoubleMapDecorator.put(Ljava/lang/Object;Ljava/lang/Double;)Ljava/lang/Double;:97 - ReplaceComparisonOperator != null -> = null
   * 19 Weak Mutation 41: gnu.trove.decorator.TObjectDoubleMapDecorator.put(Ljava/lang/Object;Ljava/lang/Double;)Ljava/lang/Double;:97 - DeleteField: _mapLgnu/trove/map/TObjectDoubleMap;
   * 20 Weak Mutation 46: gnu.trove.decorator.TObjectDoubleMapDecorator.put(Ljava/lang/Object;Ljava/lang/Double;)Ljava/lang/Double;:98 - DeleteField: _mapLgnu/trove/map/TObjectDoubleMap;
   * 21 Weak Mutation 47: gnu.trove.decorator.TObjectDoubleMapDecorator.put(Ljava/lang/Object;Ljava/lang/Double;)Ljava/lang/Double;:98 - DeleteStatement: unwrapValue(Ljava/lang/Object;)D
   * 22 Weak Mutation 44: gnu.trove.decorator.TObjectDoubleMapDecorator.put(Ljava/lang/Object;Ljava/lang/Double;)Ljava/lang/Double;:97 - DeleteStatement: put(Ljava/lang/Object;D)D
   * 23 Weak Mutation 45: gnu.trove.decorator.TObjectDoubleMapDecorator.put(Ljava/lang/Object;Ljava/lang/Double;)Ljava/lang/Double;:97 - DeleteStatement: wrapValue(D)Ljava/lang/Double;
   * 24 Weak Mutation 49: gnu.trove.decorator.TObjectDoubleMapDecorator.put(Ljava/lang/Object;Ljava/lang/Double;)Ljava/lang/Double;:98 - DeleteStatement: wrapValue(D)Ljava/lang/Double;
   * 25 Weak Mutation 48: gnu.trove.decorator.TObjectDoubleMapDecorator.put(Ljava/lang/Object;Ljava/lang/Double;)Ljava/lang/Double;:98 - DeleteStatement: put(Ljava/lang/Object;D)D
   * 26 Weak Mutation 106: gnu.trove.decorator.TObjectDoubleMapDecorator.wrapValue(D)Ljava/lang/Double;:311 - DeleteStatement: valueOf(D)Ljava/lang/Double;
   * 27 Weak Mutation 107: gnu.trove.decorator.TObjectDoubleMapDecorator.unwrapValue(Ljava/lang/Object;)D:322 - DeleteStatement: doubleValue()D
   * 28 Weak Mutation 105: gnu.trove.decorator.TObjectDoubleMapDecorator.wrapValue(D)Ljava/lang/Double;:311 - InsertUnaryOp Negation of k
   * 29 gnu.trove.decorator.TObjectDoubleMapDecorator.wrapValue(D)Ljava/lang/Double;: root-Branch
   * 30 gnu.trove.decorator.TObjectDoubleMapDecorator.put(Ljava/lang/Object;Ljava/lang/Double;)Ljava/lang/Double;: I3 Branch 5 IFNONNULL L97 - false
   */

  @Test
  public void test1()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<String> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0);
      TObjectDoubleMapDecorator<String> tObjectDoubleMapDecorator0 = new TObjectDoubleMapDecorator<String>((TObjectDoubleMap<String>) tObjectDoubleCustomHashMap0);
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap1 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, 1);
      Double double0 = tObjectDoubleMapDecorator0.put("", (Double) null);
      TObjectDoubleHashMap<Object> tObjectDoubleHashMap0 = new TObjectDoubleHashMap<Object>((TObjectDoubleMap<?>) tObjectDoubleCustomHashMap1);
      TObjectDoubleMapDecorator<Object> tObjectDoubleMapDecorator1 = new TObjectDoubleMapDecorator<Object>((TObjectDoubleMap<Object>) tObjectDoubleHashMap0);
      Double double1 = tObjectDoubleMapDecorator1.put((Object) tObjectDoubleCustomHashMap1, double0);
      assertEquals(1, tObjectDoubleMapDecorator0.size());
      assertEquals(0.0, (double)double1, 0.01D);
  }

  //Test case number: 2
  /*
   * 15 covered goals:
   * 1 Weak Mutation 51: gnu.trove.decorator.TObjectDoubleMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Double;:109 - DeleteStatement: get(Ljava/lang/Object;)D
   * 2 Weak Mutation 50: gnu.trove.decorator.TObjectDoubleMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Double;:109 - DeleteField: _mapLgnu/trove/map/TObjectDoubleMap;
   * 3 Weak Mutation 55: gnu.trove.decorator.TObjectDoubleMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Double;:113 - DeleteStatement: doubleSub(DD)I
   * 4 Weak Mutation 54: gnu.trove.decorator.TObjectDoubleMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Double;:113 - DeleteStatement: getNoEntryValue()D
   * 5 Weak Mutation 53: gnu.trove.decorator.TObjectDoubleMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Double;:113 - DeleteField: _mapLgnu/trove/map/TObjectDoubleMap;
   * 6 Weak Mutation 52: gnu.trove.decorator.TObjectDoubleMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Double;:113 - InsertUnaryOp Negation of v
   * 7 Weak Mutation 58: gnu.trove.decorator.TObjectDoubleMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Double;:113 - ReplaceComparisonOperator != -> -1
   * 8 gnu.trove.decorator.TObjectDoubleMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Double;: I14 Branch 6 IFNE L113 - false
   * 9 Weak Mutation 51: gnu.trove.decorator.TObjectDoubleMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Double;:109 - DeleteStatement: get(Ljava/lang/Object;)D
   * 10 Weak Mutation 50: gnu.trove.decorator.TObjectDoubleMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Double;:109 - DeleteField: _mapLgnu/trove/map/TObjectDoubleMap;
   * 11 Weak Mutation 55: gnu.trove.decorator.TObjectDoubleMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Double;:113 - DeleteStatement: doubleSub(DD)I
   * 12 Weak Mutation 54: gnu.trove.decorator.TObjectDoubleMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Double;:113 - DeleteStatement: getNoEntryValue()D
   * 13 Weak Mutation 53: gnu.trove.decorator.TObjectDoubleMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Double;:113 - DeleteField: _mapLgnu/trove/map/TObjectDoubleMap;
   * 14 Weak Mutation 52: gnu.trove.decorator.TObjectDoubleMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Double;:113 - InsertUnaryOp Negation of v
   * 15 Weak Mutation 58: gnu.trove.decorator.TObjectDoubleMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Double;:113 - ReplaceComparisonOperator != -> -1
   */

  @Test
  public void test2()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, 1);
      TObjectDoubleHashMap<Object> tObjectDoubleHashMap0 = new TObjectDoubleHashMap<Object>((TObjectDoubleMap<?>) tObjectDoubleCustomHashMap0);
      TObjectDoubleMapDecorator<Object> tObjectDoubleMapDecorator0 = new TObjectDoubleMapDecorator<Object>((TObjectDoubleMap<Object>) tObjectDoubleHashMap0);
      tObjectDoubleMapDecorator0.get((Object) tObjectDoubleCustomHashMap0);
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * 1 Weak Mutation 62: gnu.trove.decorator.TObjectDoubleMapDecorator.clear()V:125 - DeleteStatement: clear()V
   * 2 Weak Mutation 61: gnu.trove.decorator.TObjectDoubleMapDecorator.clear()V:125 - DeleteField: _mapLgnu/trove/map/TObjectDoubleMap;
   * 3 gnu.trove.decorator.TObjectDoubleMapDecorator.clear()V: root-Branch
   * 4 Weak Mutation 62: gnu.trove.decorator.TObjectDoubleMapDecorator.clear()V:125 - DeleteStatement: clear()V
   * 5 Weak Mutation 61: gnu.trove.decorator.TObjectDoubleMapDecorator.clear()V:125 - DeleteField: _mapLgnu/trove/map/TObjectDoubleMap;
   */

  @Test
  public void test3()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-187));
      TObjectDoubleMapDecorator<Integer> tObjectDoubleMapDecorator0 = new TObjectDoubleMapDecorator<Integer>((TObjectDoubleMap<Integer>) tObjectDoubleCustomHashMap0);
      tObjectDoubleMapDecorator0.clear();
      assertEquals("{}", tObjectDoubleMapDecorator0.toString());
  }

  //Test case number: 4
  /*
   * 15 covered goals:
   * 1 Weak Mutation 63: gnu.trove.decorator.TObjectDoubleMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Double;:136 - DeleteField: _mapLgnu/trove/map/TObjectDoubleMap;
   * 2 Weak Mutation 64: gnu.trove.decorator.TObjectDoubleMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Double;:136 - DeleteStatement: remove(Ljava/lang/Object;)D
   * 3 Weak Mutation 68: gnu.trove.decorator.TObjectDoubleMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Double;:140 - DeleteStatement: doubleSub(DD)I
   * 4 Weak Mutation 71: gnu.trove.decorator.TObjectDoubleMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Double;:140 - ReplaceComparisonOperator != -> -1
   * 5 Weak Mutation 65: gnu.trove.decorator.TObjectDoubleMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Double;:140 - InsertUnaryOp Negation of v
   * 6 Weak Mutation 66: gnu.trove.decorator.TObjectDoubleMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Double;:140 - DeleteField: _mapLgnu/trove/map/TObjectDoubleMap;
   * 7 Weak Mutation 67: gnu.trove.decorator.TObjectDoubleMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Double;:140 - DeleteStatement: getNoEntryValue()D
   * 8 gnu.trove.decorator.TObjectDoubleMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Double;: I14 Branch 7 IFNE L140 - false
   * 9 Weak Mutation 63: gnu.trove.decorator.TObjectDoubleMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Double;:136 - DeleteField: _mapLgnu/trove/map/TObjectDoubleMap;
   * 10 Weak Mutation 68: gnu.trove.decorator.TObjectDoubleMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Double;:140 - DeleteStatement: doubleSub(DD)I
   * 11 Weak Mutation 71: gnu.trove.decorator.TObjectDoubleMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Double;:140 - ReplaceComparisonOperator != -> -1
   * 12 Weak Mutation 64: gnu.trove.decorator.TObjectDoubleMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Double;:136 - DeleteStatement: remove(Ljava/lang/Object;)D
   * 13 Weak Mutation 65: gnu.trove.decorator.TObjectDoubleMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Double;:140 - InsertUnaryOp Negation of v
   * 14 Weak Mutation 66: gnu.trove.decorator.TObjectDoubleMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Double;:140 - DeleteField: _mapLgnu/trove/map/TObjectDoubleMap;
   * 15 Weak Mutation 67: gnu.trove.decorator.TObjectDoubleMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Double;:140 - DeleteStatement: getNoEntryValue()D
   */

  @Test
  public void test4()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, 1);
      TObjectDoubleMapDecorator<Double> tObjectDoubleMapDecorator0 = new TObjectDoubleMapDecorator<Double>((TObjectDoubleMap<Double>) tObjectDoubleCustomHashMap0);
      tObjectDoubleMapDecorator0.remove((Object) tObjectDoubleMapDecorator0);
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 Weak Mutation 74: gnu.trove.decorator.TObjectDoubleMapDecorator.containsValue(Ljava/lang/Object;)Z:253 - ReplaceComparisonOperator == -> !=
   * 2 Weak Mutation 80: gnu.trove.decorator.TObjectDoubleMapDecorator.containsValue(Ljava/lang/Object;)Z:253 - ReplaceConstant - 0 -> 1
   * 3 gnu.trove.decorator.TObjectDoubleMapDecorator.containsValue(Ljava/lang/Object;)Z: I4 Branch 8 IFEQ L253 - true
   * 4 Weak Mutation 74: gnu.trove.decorator.TObjectDoubleMapDecorator.containsValue(Ljava/lang/Object;)Z:253 - ReplaceComparisonOperator == -> !=
   * 5 Weak Mutation 80: gnu.trove.decorator.TObjectDoubleMapDecorator.containsValue(Ljava/lang/Object;)Z:253 - ReplaceConstant - 0 -> 1
   */

  @Test
  public void test5()  throws Throwable  {
      TObjectDoubleHashMap<Double> tObjectDoubleHashMap0 = new TObjectDoubleHashMap<Double>(0, 0);
      TObjectDoubleMapDecorator<Double> tObjectDoubleMapDecorator0 = new TObjectDoubleMapDecorator<Double>((TObjectDoubleMap<Double>) tObjectDoubleHashMap0);
      boolean boolean0 = tObjectDoubleMapDecorator0.containsValue((Object) "/mnt/fastdata/ac1gf/Experiments_Major/apps/trove-3.0.2");
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 4 covered goals:
   * 1 Weak Mutation 84: gnu.trove.decorator.TObjectDoubleMapDecorator.size()I:274 - DeleteStatement: size()I
   * 2 gnu.trove.decorator.TObjectDoubleMapDecorator.<init>()V: root-Branch
   * 3 gnu.trove.decorator.TObjectDoubleMapDecorator.size()I: root-Branch
   * 4 Weak Mutation 84: gnu.trove.decorator.TObjectDoubleMapDecorator.size()I:274 - DeleteStatement: size()I
   */

  @Test
  public void test6()  throws Throwable  {
      TObjectDoubleMapDecorator<String> tObjectDoubleMapDecorator0 = new TObjectDoubleMapDecorator<String>();
      // Undeclared exception!
      try {
        tObjectDoubleMapDecorator0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 9 covered goals:
   * 1 Weak Mutation 85: gnu.trove.decorator.TObjectDoubleMapDecorator.isEmpty()Z:284 - DeleteField: _mapLgnu/trove/map/TObjectDoubleMap;
   * 2 Weak Mutation 86: gnu.trove.decorator.TObjectDoubleMapDecorator.isEmpty()Z:284 - DeleteStatement: size()I
   * 3 Weak Mutation 89: gnu.trove.decorator.TObjectDoubleMapDecorator.isEmpty()Z:284 - ReplaceComparisonOperator != -> -1
   * 4 Weak Mutation 90: gnu.trove.decorator.TObjectDoubleMapDecorator.isEmpty()Z:284 - ReplaceConstant - 1 -> 0
   * 5 gnu.trove.decorator.TObjectDoubleMapDecorator.isEmpty()Z: I5 Branch 10 IFNE L284 - false
   * 6 Weak Mutation 85: gnu.trove.decorator.TObjectDoubleMapDecorator.isEmpty()Z:284 - DeleteField: _mapLgnu/trove/map/TObjectDoubleMap;
   * 7 Weak Mutation 86: gnu.trove.decorator.TObjectDoubleMapDecorator.isEmpty()Z:284 - DeleteStatement: size()I
   * 8 Weak Mutation 89: gnu.trove.decorator.TObjectDoubleMapDecorator.isEmpty()Z:284 - ReplaceComparisonOperator != -> -1
   * 9 Weak Mutation 90: gnu.trove.decorator.TObjectDoubleMapDecorator.isEmpty()Z:284 - ReplaceConstant - 1 -> 0
   */

  @Test
  public void test7()  throws Throwable  {
      TObjectDoubleHashMap<Double> tObjectDoubleHashMap0 = new TObjectDoubleHashMap<Double>();
      TObjectDoubleMapDecorator<Double> tObjectDoubleMapDecorator0 = new TObjectDoubleMapDecorator<Double>((TObjectDoubleMap<Double>) tObjectDoubleHashMap0);
      boolean boolean0 = tObjectDoubleMapDecorator0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 8
  /*
   * 9 covered goals:
   * 1 Weak Mutation 110: gnu.trove.decorator.TObjectDoubleMapDecorator.writeExternal(Ljava/io/ObjectOutput;)V:342 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 111: gnu.trove.decorator.TObjectDoubleMapDecorator.writeExternal(Ljava/io/ObjectOutput;)V:342 - DeleteStatement: writeByte(I)V
   * 3 Weak Mutation 113: gnu.trove.decorator.TObjectDoubleMapDecorator.writeExternal(Ljava/io/ObjectOutput;)V:345 - DeleteStatement: writeObject(Ljava/lang/Object;)V
   * 4 Weak Mutation 112: gnu.trove.decorator.TObjectDoubleMapDecorator.writeExternal(Ljava/io/ObjectOutput;)V:345 - DeleteField: _mapLgnu/trove/map/TObjectDoubleMap;
   * 5 gnu.trove.decorator.TObjectDoubleMapDecorator.writeExternal(Ljava/io/ObjectOutput;)V: root-Branch
   * 6 Weak Mutation 110: gnu.trove.decorator.TObjectDoubleMapDecorator.writeExternal(Ljava/io/ObjectOutput;)V:342 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 111: gnu.trove.decorator.TObjectDoubleMapDecorator.writeExternal(Ljava/io/ObjectOutput;)V:342 - DeleteStatement: writeByte(I)V
   * 8 Weak Mutation 113: gnu.trove.decorator.TObjectDoubleMapDecorator.writeExternal(Ljava/io/ObjectOutput;)V:345 - DeleteStatement: writeObject(Ljava/lang/Object;)V
   * 9 Weak Mutation 112: gnu.trove.decorator.TObjectDoubleMapDecorator.writeExternal(Ljava/io/ObjectOutput;)V:345 - DeleteField: _mapLgnu/trove/map/TObjectDoubleMap;
   */

  @Test
  public void test8()  throws Throwable  {
      TObjectDoubleCustomHashMap<String> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<String>();
      TObjectDoubleMapDecorator<String> tObjectDoubleMapDecorator0 = new TObjectDoubleMapDecorator<String>((TObjectDoubleMap<String>) tObjectDoubleCustomHashMap0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream((OutputStream) pipedOutputStream0);
      PrintStream printStream0 = new PrintStream((OutputStream) filterOutputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) printStream0);
      tObjectDoubleMapDecorator0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(true, tObjectDoubleMapDecorator0.isEmpty());
  }
}

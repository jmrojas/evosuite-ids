/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TShortFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntShortMap;
import gnu.trove.map.TIntShortMap;
import gnu.trove.map.hash.TIntShortHashMap;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableIntShortMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = 1;
      float float0 = (-352.47644F);
      short short0 = (short) (-32768);
      int int1 = 0;
      float float1 = 0.0F;
      int int2 = 0;
      short short1 = (short)2;
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(int1, float1, int2, short1);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntShortMap0.putAll((TIntShortMap) tIntShortHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = (-186);
      int int1 = 1;
      short short0 = (short) (-1902);
      int int2 = (-539);
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(int2);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      tUnmodifiableIntShortMap0.keys(tIntShortHashMap0._set);
      TIntShortHashMap tIntShortHashMap1 = new TIntShortHashMap(int0, (float) int0, int1, short0);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap1 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap1);
      short short1 = (short) (-1009);
      // Undeclared exception!
      try {
        tUnmodifiableIntShortMap1.putIfAbsent(int1, short1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = (-1);
      float float0 = (-1045.6345F);
      int int1 = 1126;
      short short0 = (short)0;
      int[] intArray0 = new int[1];
      intArray0[0] = int0;
      short[] shortArray0 = new short[8];
      shortArray0[0] = short0;
      shortArray0[1] = short0;
      shortArray0[2] = short0;
      shortArray0[3] = short0;
      shortArray0[4] = short0;
      shortArray0[5] = short0;
      short short1 = (short)0;
      shortArray0[6] = short1;
      short short2 = (short) (-21949);
      shortArray0[7] = short2;
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(intArray0, shortArray0);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      TIntShortHashMap tIntShortHashMap1 = new TIntShortHashMap(int0, float0, int1, short0);
      TIntShortHashMap tIntShortHashMap2 = new TIntShortHashMap((TIntShortMap) tIntShortHashMap1);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap1 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap2);
      tUnmodifiableIntShortMap1.values();
      TIntShortMap tIntShortMap0 = null;
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap2 = null;
      try {
        tUnmodifiableIntShortMap2 = new TUnmodifiableIntShortMap(tIntShortMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = 305;
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(int0);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      tUnmodifiableIntShortMap0.hashCode();
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap1 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      short short0 = tUnmodifiableIntShortMap1.get(int0);
      tUnmodifiableIntShortMap1.iterator();
      Integer integer0 = new Integer(int0);
      String string0 = integer0.toString();
      boolean boolean0 = tUnmodifiableIntShortMap1.equals((Object) string0);
      assertEquals(false, boolean0);
      
      int int1 = (-629);
      // Undeclared exception!
      try {
        tUnmodifiableIntShortMap0.put((int) integer0, short0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = (-1307);
      int[] intArray0 = new int[6];
      intArray0[0] = int0;
      int int1 = (-767);
      intArray0[1] = int1;
      intArray0[2] = int0;
      intArray0[3] = int0;
      intArray0[4] = int0;
      intArray0[5] = int0;
      short[] shortArray0 = new short[4];
      short short0 = (short)0;
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(intArray0[2], intArray0[4]);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      tUnmodifiableIntShortMap0.hashCode();
      shortArray0[0] = short0;
      short short1 = (short)0;
      shortArray0[1] = short1;
      short short2 = (short) (-964);
      shortArray0[2] = short2;
      short short3 = (short)0;
      shortArray0[3] = short3;
      TIntShortHashMap tIntShortHashMap1 = new TIntShortHashMap(intArray0, shortArray0);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap1 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap1);
      TShortFunction tShortFunction0 = null;
      // Undeclared exception!
      try {
        tUnmodifiableIntShortMap1.transformValues(tShortFunction0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int[] intArray0 = new int[1];
      int int0 = 1646237;
      intArray0[0] = int0;
      short[] shortArray0 = new short[9];
      short short0 = (short) (-1233);
      shortArray0[0] = short0;
      short short1 = (short)0;
      shortArray0[1] = short1;
      short short2 = (short) (-96);
      shortArray0[2] = short2;
      short short3 = (short)0;
      shortArray0[3] = short3;
      short short4 = (short)9;
      shortArray0[4] = short4;
      short short5 = (short) (-30155);
      shortArray0[5] = short5;
      short short6 = (short)1991;
      shortArray0[6] = short6;
      short short7 = (short) (-2019);
      shortArray0[7] = short7;
      short short8 = (short)565;
      shortArray0[8] = short8;
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(intArray0, shortArray0);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      tUnmodifiableIntShortMap0.values(shortArray0);
      int int1 = 89;
      float float0 = 0.0F;
      TIntShortHashMap tIntShortHashMap1 = new TIntShortHashMap(int1, float0);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap1 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap1);
      // Undeclared exception!
      try {
        tUnmodifiableIntShortMap1.remove(int1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = 0;
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(int0);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap1 = new TUnmodifiableIntShortMap((TIntShortMap) tUnmodifiableIntShortMap0);
      tUnmodifiableIntShortMap1.valueCollection();
      TIntShortMap tIntShortMap0 = null;
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap2 = null;
      try {
        tUnmodifiableIntShortMap2 = new TUnmodifiableIntShortMap(tIntShortMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int[] intArray0 = new int[10];
      int int0 = (-1593);
      intArray0[0] = int0;
      int int1 = 0;
      intArray0[1] = int1;
      int int2 = 0;
      intArray0[2] = int2;
      int int3 = 0;
      intArray0[3] = int3;
      int int4 = 1658;
      intArray0[4] = int4;
      int int5 = (-219);
      intArray0[5] = int5;
      int int6 = 730;
      intArray0[6] = int6;
      int int7 = 0;
      intArray0[7] = int7;
      int int8 = 1257;
      intArray0[8] = int8;
      int int9 = 400038451;
      intArray0[9] = int9;
      short[] shortArray0 = new short[6];
      short short0 = (short)138;
      shortArray0[0] = short0;
      short short1 = (short)0;
      shortArray0[1] = short1;
      short short2 = (short)0;
      shortArray0[2] = short2;
      short short3 = (short) (-455);
      shortArray0[3] = short3;
      short short4 = (short)0;
      shortArray0[4] = short4;
      short short5 = (short) (-741);
      shortArray0[5] = short5;
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(intArray0, shortArray0);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntShortMap0.remove(int4);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = 1206;
      int int1 = 0;
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(int0, int0);
      TIntShortHashMap tIntShortHashMap1 = new TIntShortHashMap((TIntShortMap) tIntShortHashMap0);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap1);
      tUnmodifiableIntShortMap0.keys();
      short short0 = (short)0;
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap1 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap1);
      TIntShortHashMap tIntShortHashMap2 = new TIntShortHashMap(int0, (float) int0, int1, short0);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap2 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap2);
      // Undeclared exception!
      try {
        tUnmodifiableIntShortMap2.increment(int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 377;
      float float0 = 821.6604F;
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(int0, float0);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      int[] intArray0 = new int[7];
      intArray0[0] = int0;
      intArray0[1] = int0;
      intArray0[2] = int0;
      int int1 = 757;
      intArray0[3] = int1;
      intArray0[4] = int0;
      intArray0[5] = int0;
      intArray0[6] = int0;
      tUnmodifiableIntShortMap0.keys(intArray0);
      short short0 = (short)0;
      TIntShortHashMap tIntShortHashMap1 = new TIntShortHashMap(int0, (float) int0, int0, short0);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap1 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap1);
      // Undeclared exception!
      try {
        tUnmodifiableIntShortMap1.putAll((TIntShortMap) tIntShortHashMap1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TIntShortMap tIntShortMap0 = null;
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = null;
      try {
        tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap(tIntShortMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 1702;
      float float0 = 1.0F;
      short short0 = (short)0;
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(int0, float0, int0, short0);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      int int1 = 701819;
      // Undeclared exception!
      try {
        tUnmodifiableIntShortMap0.increment(int1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[7];
      int int0 = 744;
      intArray0[0] = int0;
      int int1 = 1;
      intArray0[1] = int1;
      int int2 = 0;
      TIntShortMap tIntShortMap0 = null;
      TIntShortHashMap tIntShortHashMap0 = null;
      try {
        tIntShortHashMap0 = new TIntShortHashMap(tIntShortMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[7];
      int int0 = (-289);
      intArray0[0] = int0;
      int int1 = 238;
      intArray0[1] = int1;
      int int2 = 0;
      intArray0[2] = int2;
      int int3 = 656429;
      intArray0[3] = int3;
      int int4 = 0;
      intArray0[4] = int4;
      int int5 = 143483;
      intArray0[5] = int5;
      int int6 = 0;
      intArray0[6] = int6;
      short[] shortArray0 = new short[9];
      short short0 = (short) (-576);
      shortArray0[0] = short0;
      short short1 = (short)1980;
      shortArray0[1] = short1;
      short short2 = (short)34;
      shortArray0[2] = short2;
      short short3 = (short)0;
      shortArray0[3] = short3;
      short short4 = (short)1040;
      shortArray0[4] = short4;
      short short5 = (short) (-1);
      shortArray0[5] = short5;
      short short6 = (short)359;
      shortArray0[6] = short6;
      short short7 = (short)100;
      shortArray0[7] = short7;
      short short8 = (short)0;
      shortArray0[8] = short8;
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(intArray0, shortArray0);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      tUnmodifiableIntShortMap0.iterator();
      int int7 = (-1);
      int int8 = (-771);
      short short9 = (short)0;
      TIntShortHashMap tIntShortHashMap1 = new TIntShortHashMap(int7, (float) int7, int8, short9);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap1 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap1);
      short short10 = (short)662;
      // Undeclared exception!
      try {
        tUnmodifiableIntShortMap1.put(int8, short10);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 1987;
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(int0, int0);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      int int1 = tUnmodifiableIntShortMap0.size();
      assertFalse(int1 == int0);
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = 0;
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(int0);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap1 = new TUnmodifiableIntShortMap((TIntShortMap) tUnmodifiableIntShortMap0);
      int int1 = tUnmodifiableIntShortMap1.hashCode();
      assertTrue(int0 == int1);
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = 0;
      int int1 = (-1536);
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(int1);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap0);
      tUnmodifiableIntShortMap0.getNoEntryValue();
      TIntShortHashMap tIntShortHashMap1 = new TIntShortHashMap(int0);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap1 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap1);
      tUnmodifiableIntShortMap1.keySet();
      int int2 = 32;
      short short0 = (short)0;
      // Undeclared exception!
      try {
        tUnmodifiableIntShortMap1.adjustValue(int2, short0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[7];
      int int0 = 1;
      intArray0[0] = int0;
      int int1 = 234;
      intArray0[1] = int1;
      int int2 = 0;
      intArray0[2] = int2;
      int int3 = (-1086);
      intArray0[3] = int3;
      int int4 = (-517);
      intArray0[4] = int4;
      int int5 = 1;
      intArray0[5] = int5;
      int int6 = 0;
      intArray0[6] = int6;
      short[] shortArray0 = new short[7];
      short short0 = (short) (-10975);
      shortArray0[0] = short0;
      short short1 = (short)0;
      shortArray0[1] = short1;
      short short2 = (short)83;
      shortArray0[2] = short2;
      short short3 = (short)0;
      shortArray0[3] = short3;
      short short4 = (short)0;
      shortArray0[4] = short4;
      short short5 = (short)0;
      shortArray0[5] = short5;
      short short6 = (short) (-30055);
      shortArray0[6] = short6;
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(intArray0, shortArray0);
      TIntShortHashMap tIntShortHashMap1 = new TIntShortHashMap((TIntShortMap) tIntShortHashMap0);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap0 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap1);
      int[] intArray1 = new int[1];
      int int7 = 1513;
      intArray1[0] = int7;
      short[] shortArray1 = new short[4];
      short short7 = (short)431;
      int int8 = 1845;
      TIntShortHashMap tIntShortHashMap2 = new TIntShortHashMap(int8, int7);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap1 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap2);
      tUnmodifiableIntShortMap1.keys(tIntShortHashMap2._set);
      shortArray1[0] = short7;
      short short8 = (short)1282;
      shortArray1[1] = short8;
      short short9 = (short)0;
      shortArray1[2] = short9;
      short short10 = (short)72;
      shortArray1[3] = short10;
      TIntShortHashMap tIntShortHashMap3 = new TIntShortHashMap(intArray1, shortArray1);
      TUnmodifiableIntShortMap tUnmodifiableIntShortMap2 = new TUnmodifiableIntShortMap((TIntShortMap) tIntShortHashMap3);
      assertEquals(false, tUnmodifiableIntShortMap2.isEmpty());
  }
}

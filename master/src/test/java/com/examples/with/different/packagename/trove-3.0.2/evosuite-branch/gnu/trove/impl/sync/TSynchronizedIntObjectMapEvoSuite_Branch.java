/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TObjectFunction;
import gnu.trove.impl.sync.TSynchronizedIntObjectMap;
import gnu.trove.impl.sync.TSynchronizedIntSet;
import gnu.trove.iterator.TIntObjectIterator;
import gnu.trove.map.TIntObjectMap;
import gnu.trove.map.hash.TIntObjectHashMap;
import gnu.trove.procedure.TIntObjectProcedure;
import gnu.trove.procedure.TIntProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedIntObjectMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.values()[Ljava/lang/Object;: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedIntObjectMap.<init>(Lgnu/trove/map/TIntObjectMap;)V: I17 Branch 1 IFNONNULL L61 - true
   */

//   @Test
//   public void test0()  throws Throwable  {
//       TIntObjectHashMap<String> tIntObjectHashMap0 = new TIntObjectHashMap<String>(19, 19, 19);
//       TSynchronizedIntObjectMap<String> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<String>((TIntObjectMap<String>) tIntObjectHashMap0);
//       String[] stringArray0 = tSynchronizedIntObjectMap0.values();
//       assertNotNull(stringArray0);
//   }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>();
      TSynchronizedIntObjectMap<Integer> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      String string0 = tSynchronizedIntObjectMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TIntObjectHashMap<String> tIntObjectHashMap0 = new TIntObjectHashMap<String>(19, 19, 19);
      TSynchronizedIntObjectMap<String> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<String>((TIntObjectMap<String>) tIntObjectHashMap0);
      boolean boolean0 = tSynchronizedIntObjectMap0.equals((Object) "United Kingdom");
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.containsKey(I)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedIntObjectMap.<init>(Lgnu/trove/map/TIntObjectMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TSynchronizedIntObjectMap<Object> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Object>((TIntObjectMap<Object>) null, (Object) "United Kingdom");
      // Undeclared exception!
      try {
        tSynchronizedIntObjectMap0.containsKey(19);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.forEachEntry(Lgnu/trove/procedure/TIntObjectProcedure;)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedIntObjectMap.getNoEntryKey()I: root-Branch
   * 3 gnu.trove.impl.sync.TSynchronizedIntObjectMap.size()I: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>(137, 137);
      TSynchronizedIntObjectMap<Object> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      TIntObjectHashMap<Object> tIntObjectHashMap1 = new TIntObjectHashMap<Object>((TIntObjectMap<?>) tSynchronizedIntObjectMap0);
      assertNotSame(tIntObjectHashMap0, tIntObjectHashMap1);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.put(ILjava/lang/Object;)Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>(0);
      TSynchronizedIntObjectMap<Integer> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      tSynchronizedIntObjectMap0.put(0, (Integer) 0);
      assertEquals(false, tIntObjectHashMap0.isEmpty());
      assertEquals("{0=0}", tSynchronizedIntObjectMap0.toString());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>();
      TSynchronizedIntObjectMap<Integer> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0, (Object) "/mnt/fastdata/ac1gf/Experiments_Major/apps/trove-3.0.2/W/4Y\"h~)+wH(3CB~Bw/W/4Y\"h~)+wH(3CB~Bw");
      Integer[] integerArray0 = new Integer[4];
      Integer[] integerArray1 = tSynchronizedIntObjectMap0.values(integerArray0);
      assertSame(integerArray0, integerArray1);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.containsValue(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>((-1472));
      TSynchronizedIntObjectMap<Object> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      boolean boolean0 = tSynchronizedIntObjectMap0.containsValue((Object) "-1472");
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>(0);
      TSynchronizedIntObjectMap<Integer> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      boolean boolean0 = tSynchronizedIntObjectMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.keys([I)[I: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>(137, 137);
      TSynchronizedIntObjectMap<Object> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      int[] intArray0 = tSynchronizedIntObjectMap0.keys(tIntObjectHashMap0._set);
      assertNotNull(intArray0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>(0);
      TSynchronizedIntObjectMap<Integer> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      tSynchronizedIntObjectMap0.transformValues((TObjectFunction<Integer, Integer>) null);
      assertEquals(0, tSynchronizedIntObjectMap0.size());
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.retainEntries(Lgnu/trove/procedure/TIntObjectProcedure;)Z: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>();
      TSynchronizedIntObjectMap<Object> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      boolean boolean0 = tSynchronizedIntObjectMap0.retainEntries((TIntObjectProcedure<? super Object>) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.putIfAbsent(ILjava/lang/Object;)Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>(207, 207, 207);
      TSynchronizedIntObjectMap<Object> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      tSynchronizedIntObjectMap0.putIfAbsent(207, (Object) "{}");
      assertEquals(false, tIntObjectHashMap0.isEmpty());
      assertEquals("{207={}}", tIntObjectHashMap0.toString());
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>();
      TIntObjectHashMap<Object> tIntObjectHashMap1 = new TIntObjectHashMap<Object>((TIntObjectMap<?>) tIntObjectHashMap0);
      TSynchronizedIntObjectMap<Object> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap1, (Object) "{}");
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      tSynchronizedIntObjectMap0.putAll((Map<? extends Integer, ?>) hashMap0);
      assertEquals("{}", hashMap0.toString());
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>(0);
      TSynchronizedIntObjectMap<Integer> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      Object[] objectArray0 = new Object[3];
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
      boolean boolean0 = tSynchronizedIntObjectMap0.forEachValue((TObjectProcedure<? super Integer>) toObjectArrayProceedure0);
      assertEquals(true, boolean0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.keys()[I: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>();
      TSynchronizedIntObjectMap<Integer> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      int[] intArray0 = tSynchronizedIntObjectMap0.keys();
      assertNotNull(intArray0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.clear()V: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>(207, 207, 207);
      TSynchronizedIntObjectMap<Object> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      tSynchronizedIntObjectMap0.clear();
      assertEquals(0, tSynchronizedIntObjectMap0.size());
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.putAll(Lgnu/trove/map/TIntObjectMap;)V: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>();
      TIntObjectHashMap<Object> tIntObjectHashMap1 = new TIntObjectHashMap<Object>((TIntObjectMap<?>) tIntObjectHashMap0);
      TSynchronizedIntObjectMap<Object> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap1, (Object) "{}");
      tSynchronizedIntObjectMap0.putAll((TIntObjectMap<?>) tIntObjectHashMap1);
      assertEquals("{}", tSynchronizedIntObjectMap0.toString());
  }

  //Test case number: 18
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.get(I)Ljava/lang/Object;: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedIntObjectMap.<init>(Lgnu/trove/map/TIntObjectMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>(0, 0);
      TSynchronizedIntObjectMap<Object> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0, (Object) null);
      // Undeclared exception!
      try {
        tSynchronizedIntObjectMap0.get((int) 'E');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.remove(I)Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>();
      TSynchronizedIntObjectMap<Integer> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      tSynchronizedIntObjectMap0.remove(207);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.hashCode()I: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>(207, 207, 207);
      TSynchronizedIntObjectMap<Object> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      int int0 = tSynchronizedIntObjectMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.iterator()Lgnu/trove/iterator/TIntObjectIterator;: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>();
      TSynchronizedIntObjectMap<Integer> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      TIntObjectIterator<Integer> tIntObjectIterator0 = tSynchronizedIntObjectMap0.iterator();
      assertEquals(false, tIntObjectIterator0.hasNext());
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.forEachKey(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      Integer integer0 = new Integer((-603));
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>((int) integer0, (float) integer0);
      TSynchronizedIntObjectMap<Object> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      boolean boolean0 = tSynchronizedIntObjectMap0.forEachKey((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.<init>(Lgnu/trove/map/TIntObjectMap;)V: I17 Branch 1 IFNONNULL L61 - false
   */

  @Test
  public void test23()  throws Throwable  {
      TSynchronizedIntObjectMap<Object> tSynchronizedIntObjectMap0 = null;
      try {
        tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Object>((TIntObjectMap<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.keySet()Lgnu/trove/set/TIntSet;: I11 Branch 2 IFNONNULL L109 - true
   * 2 gnu.trove.impl.sync.TSynchronizedIntObjectMap.keySet()Lgnu/trove/set/TIntSet;: I11 Branch 2 IFNONNULL L109 - false
   */

  @Test
  public void test24()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>();
      TSynchronizedIntObjectMap<Integer> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      TSynchronizedIntSet tSynchronizedIntSet0 = (TSynchronizedIntSet)tSynchronizedIntObjectMap0.keySet();
      assertNotNull(tSynchronizedIntSet0);
      
      TSynchronizedIntSet tSynchronizedIntSet1 = (TSynchronizedIntSet)tSynchronizedIntObjectMap0.keySet();
      assertSame(tSynchronizedIntSet1, tSynchronizedIntSet0);
  }

  //Test case number: 25
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntObjectMap.valueCollection()Ljava/util/Collection;: I11 Branch 3 IFNONNULL L123 - true
   * 2 gnu.trove.impl.sync.TSynchronizedIntObjectMap.valueCollection()Ljava/util/Collection;: I11 Branch 3 IFNONNULL L123 - false
   * 3 gnu.trove.impl.sync.TSynchronizedIntObjectMap.<init>(Lgnu/trove/map/TIntObjectMap;)V: I17 Branch 1 IFNONNULL L61 - true
   */

  @Test
  public void test25()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>((-1472));
      TSynchronizedIntObjectMap<Object> tSynchronizedIntObjectMap0 = new TSynchronizedIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      Collection<Object> collection0 = tSynchronizedIntObjectMap0.valueCollection();
      assertNotNull(collection0);
      
      Collection<Object> collection1 = tSynchronizedIntObjectMap0.valueCollection();
      assertSame(collection1, collection0);
  }
}

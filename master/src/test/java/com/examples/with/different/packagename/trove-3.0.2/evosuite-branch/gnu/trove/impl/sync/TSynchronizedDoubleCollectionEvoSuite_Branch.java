/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TDoubleCollection;
import gnu.trove.impl.sync.TSynchronizedDoubleCollection;
import gnu.trove.impl.sync.TSynchronizedDoubleList;
import gnu.trove.impl.sync.TSynchronizedDoubleSet;
import gnu.trove.impl.sync.TSynchronizedRandomAccessDoubleList;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleList;
import gnu.trove.iterator.TDoubleIterator;
import gnu.trove.list.TDoubleList;
import gnu.trove.list.array.TDoubleArrayList;
import gnu.trove.list.linked.TDoubleLinkedList;
import gnu.trove.procedure.TDoubleProcedure;
import gnu.trove.set.TDoubleSet;
import gnu.trove.set.hash.TDoubleHashSet;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Set;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedDoubleCollectionEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.containsAll([D)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedDoubleCollection.<init>(Lgnu/trove/TDoubleCollection;)V: I7 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet();
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList(1.0);
      TSynchronizedDoubleList tSynchronizedDoubleList0 = new TSynchronizedDoubleList((TDoubleList) tDoubleLinkedList0);
      boolean boolean0 = tSynchronizedDoubleList0.containsAll(tDoubleHashSet0._set);
      assertEquals(false, boolean0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.retainAll(Lgnu/trove/TDoubleCollection;)Z: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList(1.0);
      TSynchronizedDoubleList tSynchronizedDoubleList0 = new TSynchronizedDoubleList((TDoubleList) tDoubleLinkedList0);
      boolean boolean0 = tSynchronizedDoubleList0.retainAll((TDoubleCollection) tSynchronizedDoubleList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.retainAll([D)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet();
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList(1.0);
      TSynchronizedDoubleList tSynchronizedDoubleList0 = new TSynchronizedDoubleList((TDoubleList) tDoubleLinkedList0);
      boolean boolean0 = tSynchronizedDoubleList0.retainAll(tDoubleHashSet0._set);
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.getNoEntryValue()D: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((-1277), (-1277));
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0);
      double double0 = tSynchronizedDoubleSet0.getNoEntryValue();
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.toArray()[D: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList(1.0);
      TSynchronizedDoubleList tSynchronizedDoubleList0 = new TSynchronizedDoubleList((TDoubleList) tDoubleLinkedList0);
      double[] doubleArray0 = tSynchronizedDoubleList0.toArray();
      assertNotNull(doubleArray0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.contains(D)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      TSynchronizedDoubleCollection tSynchronizedDoubleCollection0 = new TSynchronizedDoubleCollection((TDoubleCollection) tDoubleArrayList0);
      boolean boolean0 = tSynchronizedDoubleCollection0.contains(1590.4354386532955);
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.add(D)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      TSynchronizedDoubleCollection tSynchronizedDoubleCollection0 = new TSynchronizedDoubleCollection((TDoubleCollection) tDoubleArrayList0);
      boolean boolean0 = tSynchronizedDoubleCollection0.add(1590.4354386532955);
      assertEquals(1590.4354386532955, tDoubleArrayList0.sum(), 0.01D);
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.removeAll(Lgnu/trove/TDoubleCollection;)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedDoubleCollection.<init>(Lgnu/trove/TDoubleCollection;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(1973, 1973, 1973);
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0, (Object) "fr-FR");
      boolean boolean0 = tSynchronizedDoubleSet0.removeAll((TDoubleCollection) tDoubleHashSet0);
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.retainAll(Ljava/util/Collection;)Z: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      TSynchronizedDoubleList tSynchronizedDoubleList0 = new TSynchronizedDoubleList((TDoubleList) tDoubleArrayList0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      boolean boolean0 = tSynchronizedDoubleList0.retainAll((Collection<?>) linkedList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.clear()V: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList(1.0);
      TSynchronizedDoubleList tSynchronizedDoubleList0 = new TSynchronizedDoubleList((TDoubleList) tDoubleLinkedList0);
      tSynchronizedDoubleList0.clear();
      assertEquals(0, tSynchronizedDoubleList0.size());
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.remove(D)Z: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((-1277), (-1277));
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(tDoubleHashSet0._set);
      TUnmodifiableDoubleList tUnmodifiableDoubleList0 = new TUnmodifiableDoubleList((TDoubleList) tDoubleArrayList0);
      TSynchronizedDoubleList tSynchronizedDoubleList0 = new TSynchronizedDoubleList((TDoubleList) tUnmodifiableDoubleList0);
      // Undeclared exception!
      try {
        tSynchronizedDoubleList0.remove((double) (-1277));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.removeAll(Ljava/util/Collection;)Z: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      TSynchronizedDoubleCollection tSynchronizedDoubleCollection0 = new TSynchronizedDoubleCollection((TDoubleCollection) tDoubleArrayList0);
      Locale locale0 = Locale.CANADA;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      boolean boolean0 = tSynchronizedDoubleCollection0.removeAll((Collection<?>) set0);
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.containsAll(Lgnu/trove/TDoubleCollection;)Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList(1.0);
      TSynchronizedDoubleList tSynchronizedDoubleList0 = new TSynchronizedDoubleList((TDoubleList) tDoubleLinkedList0);
      boolean boolean0 = tSynchronizedDoubleList0.containsAll((TDoubleCollection) tSynchronizedDoubleList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.containsAll(Ljava/util/Collection;)Z: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((-1277), (-1277));
      TSynchronizedDoubleCollection tSynchronizedDoubleCollection0 = new TSynchronizedDoubleCollection((TDoubleCollection) tDoubleHashSet0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      boolean boolean0 = tSynchronizedDoubleCollection0.containsAll((Collection<?>) linkedList0);
      assertEquals(true, boolean0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.iterator()Lgnu/trove/iterator/TDoubleIterator;: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      TSynchronizedDoubleCollection tSynchronizedDoubleCollection0 = new TSynchronizedDoubleCollection((TDoubleCollection) tDoubleArrayList0);
      TDoubleIterator tDoubleIterator0 = tSynchronizedDoubleCollection0.iterator();
      assertEquals(false, tDoubleIterator0.hasNext());
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.removeAll([D)Z: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((Collection<? extends Double>) linkedList0);
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(tDoubleHashSet0._set, 1807.832761509918);
      TSynchronizedDoubleList tSynchronizedDoubleList0 = new TSynchronizedDoubleList((TDoubleList) tDoubleArrayList0);
      boolean boolean0 = tSynchronizedDoubleList0.removeAll(tDoubleHashSet0._set);
      assertEquals(true, tDoubleArrayList0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.addAll(Ljava/util/Collection;)Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((Collection<? extends Double>) linkedList0);
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(tDoubleHashSet0._set, 1807.832761509918);
      TSynchronizedDoubleList tSynchronizedDoubleList0 = new TSynchronizedDoubleList((TDoubleList) tDoubleArrayList0);
      boolean boolean0 = tSynchronizedDoubleList0.addAll((Collection<? extends Double>) linkedList0);
      assertEquals(false, boolean0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.toArray([D)[D: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((-1277), (-1277));
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0);
      double[] doubleArray0 = tSynchronizedDoubleSet0.toArray(tDoubleHashSet0._set);
      assertNotNull(doubleArray0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList(1.0);
      TSynchronizedDoubleList tSynchronizedDoubleList0 = new TSynchronizedDoubleList((TDoubleList) tDoubleLinkedList0);
      String string0 = tSynchronizedDoubleList0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 19
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.addAll(Lgnu/trove/TDoubleCollection;)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedDoubleCollection.<init>(Lgnu/trove/TDoubleCollection;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(1973, 1973, 1973);
      TSynchronizedDoubleCollection tSynchronizedDoubleCollection0 = new TSynchronizedDoubleCollection((TDoubleCollection) tDoubleHashSet0, (Object) "fr-FR");
      boolean boolean0 = tSynchronizedDoubleCollection0.addAll((TDoubleCollection) tDoubleHashSet0);
      assertEquals(false, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.forEach(Lgnu/trove/procedure/TDoubleProcedure;)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((Collection<? extends Double>) linkedList0);
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(tDoubleHashSet0._set, 1807.832761509918);
      TSynchronizedDoubleList tSynchronizedDoubleList0 = new TSynchronizedDoubleList((TDoubleList) tDoubleArrayList0);
      // Undeclared exception!
      try {
        tSynchronizedDoubleList0.forEach((TDoubleProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.addAll([D)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((-1277), (-1277));
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0);
      boolean boolean0 = tSynchronizedDoubleSet0.addAll(tDoubleHashSet0._set);
      assertEquals("{0.0}", tDoubleHashSet0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.isEmpty()Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList();
      TSynchronizedDoubleList tSynchronizedDoubleList0 = new TSynchronizedDoubleList((TDoubleList) tDoubleArrayList0);
      boolean boolean0 = tSynchronizedDoubleList0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.size()I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedDoubleCollection.<init>(Lgnu/trove/TDoubleCollection;)V: I7 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test23()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList(1.0);
      TSynchronizedDoubleList tSynchronizedDoubleList0 = new TSynchronizedDoubleList((TDoubleList) tDoubleLinkedList0);
      int int0 = tSynchronizedDoubleList0.size();
      assertEquals(0, int0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleCollection.<init>(Lgnu/trove/TDoubleCollection;)V: I7 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test24()  throws Throwable  {
      TSynchronizedRandomAccessDoubleList tSynchronizedRandomAccessDoubleList0 = null;
      try {
        tSynchronizedRandomAccessDoubleList0 = new TSynchronizedRandomAccessDoubleList((TDoubleList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

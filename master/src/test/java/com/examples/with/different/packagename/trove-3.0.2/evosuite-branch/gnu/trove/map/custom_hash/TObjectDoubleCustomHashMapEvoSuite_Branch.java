/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.custom_hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TDoubleCollection;
import gnu.trove.function.TDoubleFunction;
import gnu.trove.map.TObjectDoubleMap;
import gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap;
import gnu.trove.map.hash.TObjectDoubleHashMap;
import gnu.trove.procedure.TDoubleProcedure;
import gnu.trove.procedure.TObjectDoubleProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.set.hash.TDoubleHashSet;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TObjectDoubleCustomHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.iterator()Lgnu/trove/iterator/TObjectDoubleIterator;: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IF)V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$TObjectDoubleHashIterator.<init>(Lgnu/trove/map/custom_hash/TObjectDoubleCustomHashMap;Lgnu/trove/map/custom_hash/TObjectDoubleCustomHashMap;)V: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L588 - true
   * 5 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 59 IF_ICMPEQ L592 - true
   * 6 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 60 IFEQ L597 - true
   * 7 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I: root-Branch
   * 8 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$1.<init>(Lgnu/trove/map/custom_hash/TObjectDoubleCustomHashMap;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, (-1220), 1693.8766F);
      IdentityHashingStrategy<String> identityHashingStrategy1 = new IdentityHashingStrategy<String>();
      TObjectDoubleCustomHashMap<String> tObjectDoubleCustomHashMap1 = new TObjectDoubleCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy1, 118393066, (-206.83438F));
      boolean boolean0 = tObjectDoubleCustomHashMap0.equals((Object) tObjectDoubleCustomHashMap1);
      assertEquals(0.0, tObjectDoubleCustomHashMap1.getNoEntryValue(), 0.01D);
      assertEquals(true, boolean0);
      assertEquals(3, tObjectDoubleCustomHashMap1.capacity());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsKey(Ljava/lang/Object;)Z: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>()V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>();
      // Undeclared exception!
      try {
        tObjectDoubleCustomHashMap0.containsKey((Object) "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.valueCollection()Lgnu/trove/TDoubleCollection;: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$TDoubleValueCollection.<init>(Lgnu/trove/map/custom_hash/TObjectDoubleCustomHashMap;)V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V: I26 Branch 8 IFEQ L134 - false
   */

  @Test
  public void test2()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, (-266), (float) (-266), (-1020.4304450106462));
      TDoubleCollection tDoubleCollection0 = tObjectDoubleCustomHashMap0.valueCollection();
      assertEquals((-1020.4304450106462), tDoubleCollection0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.clear()V: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;I)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, 577);
      tObjectDoubleCustomHashMap0.clear();
      assertEquals(0.0, tObjectDoubleCustomHashMap0.getNoEntryValue(), 0.01D);
      assertEquals(1201, tObjectDoubleCustomHashMap0.capacity());
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, (-1220), 1693.8766F);
      boolean boolean0 = tObjectDoubleCustomHashMap0.forEachKey((TObjectProcedure<? super Double>) null);
      assertEquals(true, boolean0);
      assertEquals(0.0, tObjectDoubleCustomHashMap0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 5
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$MapBackedView.size()I: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$KeyView.iterator()Ljava/util/Iterator;: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keySet()Ljava/util/Set;: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$KeyView.<init>(Lgnu/trove/map/custom_hash/TObjectDoubleCustomHashMap;)V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>();
      Set<Double> set0 = tObjectDoubleCustomHashMap0.keySet();
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet((Collection<? extends Double>) set0);
      assertEquals(23, tObjectDoubleCustomHashMap0.capacity());
  }

  //Test case number: 6
  /*
   * 17 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$1.execute(Ljava/lang/Object;D)Z: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V: I14 Branch 9 IFEQ L151 - false
   * 3 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V: I44 Branch 10 IFEQ L157 - true
   * 4 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D: I9 Branch 41 IFGE L456 - true
   * 5 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D: I51 Branch 42 IFEQ L466 - false
   * 6 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - false
   * 7 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I30 Branch 49 IF_ACMPEQ L519 - false
   * 8 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I39 Branch 50 IFNE L519 - true
   * 9 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putAll(Lgnu/trove/map/TObjectDoubleMap;)V: root-Branch
   * 10 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D: root-Branch
   * 11 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.getNoEntryValue()D: root-Branch
   * 12 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D: I12 Branch 21 IFGE L268 - true
   * 13 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D: I41 Branch 22 IFEQ L276 - false
   * 14 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I18 Branch 47 IFLE L518 - true
   * 15 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I18 Branch 47 IFLE L518 - false
   * 16 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - true
   * 17 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V: I26 Branch 8 IFEQ L134 - true
   */

  @Test
  public void test6()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, (-1));
      tObjectDoubleCustomHashMap0.adjustOrPutValue((Double) Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY);
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap1 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, (TObjectDoubleMap<? extends Double>) tObjectDoubleCustomHashMap0);
      assertEquals(false, tObjectDoubleCustomHashMap0.isEmpty());
      assertTrue(tObjectDoubleCustomHashMap0.equals(tObjectDoubleCustomHashMap1));
  }

  //Test case number: 7
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V: I14 Branch 9 IFEQ L151 - true
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putAll(Lgnu/trove/map/TObjectDoubleMap;)V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V: I26 Branch 8 IFEQ L134 - true
   */

  @Test
  public void test7()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectDoubleCustomHashMap<String> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1594, 0.0F, (double) 0.0F);
      TObjectDoubleHashMap<String> tObjectDoubleHashMap0 = new TObjectDoubleHashMap<String>((TObjectDoubleMap<? extends String>) tObjectDoubleCustomHashMap0);
      TObjectDoubleCustomHashMap<String> tObjectDoubleCustomHashMap1 = new TObjectDoubleCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (TObjectDoubleMap<? extends String>) tObjectDoubleHashMap0);
      assertEquals(0.0, tObjectDoubleHashMap0.getNoEntryValue(), 0.01D);
      assertEquals(3, tObjectDoubleHashMap0.capacity());
      assertEquals(0.0, tObjectDoubleCustomHashMap0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V: I44 Branch 10 IFEQ L157 - false
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.getNoEntryValue()D: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectDoubleMap;)V: I14 Branch 9 IFEQ L151 - false
   */

  @Test
  public void test8()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, 0, (float) 0, 394.2290759430588);
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap1 = null;
      try {
        tObjectDoubleCustomHashMap1 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, (TObjectDoubleMap<? extends Double>) tObjectDoubleCustomHashMap0);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  //Test case number: 9
  /*
   * 11 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z: I25 Branch 16 IF_ACMPEQ L232 - false
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z: I30 Branch 17 IF_ACMPEQ L232 - false
   * 3 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z: I36 Branch 18 IFNE L232 - false
   * 4 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - true
   * 5 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - false
   * 6 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - true
   * 7 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - false
   * 8 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V: I63 Branch 13 IF_ACMPEQ L201 - false
   * 9 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V: I73 Branch 14 IFGE L203 - true
   * 10 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z: I18 Branch 15 IFLE L231 - false
   * 11 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z: I25 Branch 16 IF_ACMPEQ L232 - true
   */

  @Test
  public void test9()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1, (-17.099781F));
      tObjectDoubleCustomHashMap0.adjustOrPutValue((Integer) 1785, (double) 1, (double) 1785);
      boolean boolean0 = tObjectDoubleCustomHashMap0.containsValue((double) 1785);
      assertEquals(false, tObjectDoubleCustomHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 10
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z: I36 Branch 18 IFNE L232 - true
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z: I18 Branch 15 IFLE L231 - true
   * 3 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z: I18 Branch 15 IFLE L231 - false
   * 4 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z: I25 Branch 16 IF_ACMPEQ L232 - true
   * 5 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z: I25 Branch 16 IF_ACMPEQ L232 - false
   * 6 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.containsValue(D)Z: I30 Branch 17 IF_ACMPEQ L232 - false
   */

  @Test
  public void test10()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1, (float) 1);
      tObjectDoubleCustomHashMap0.adjustOrPutValue((Integer) 1785, (double) 1, (double) 1785);
      boolean boolean0 = tObjectDoubleCustomHashMap0.containsValue((-1369.3015190214178));
      assertEquals(false, tObjectDoubleCustomHashMap0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.get(Ljava/lang/Object;)D: I9 Branch 19 IFGE L243 - false
   */

  @Test
  public void test11()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-5), (float) (-5), (double) (-5));
      double double0 = tObjectDoubleCustomHashMap0.get((Object) null);
      assertEquals((-5.0), double0, 0.01D);
  }

  //Test case number: 12
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D: I9 Branch 20 IFGE L259 - false
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D: I9 Branch 20 IFGE L259 - true
   */

//   @Test
//   public void test12()  throws Throwable  {
//       IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
//       TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, (-1));
//       double double0 = tObjectDoubleCustomHashMap0.adjustOrPutValue((Double) Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY);
//       tObjectDoubleCustomHashMap0.putIfAbsent((Double) double0, double0);
//       double double1 = tObjectDoubleCustomHashMap0.putIfAbsent((Double) double0, 1712.693140814852);
//       assertEquals(7, tObjectDoubleCustomHashMap0.capacity());
//       assertEquals(Double.NEGATIVE_INFINITY, double1, 0.01D);
//   }

  //Test case number: 13
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D: I12 Branch 21 IFGE L268 - false
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D: I41 Branch 22 IFEQ L276 - true
   */

//   @Test
//   public void test13()  throws Throwable  {
//       IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
//       Double double0 = new Double((-997.1664362795706));
//       TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, (-266), (float) (-266), (-1020.4304450106462));
//       tObjectDoubleCustomHashMap0.adjustOrPutValue((Double) 0.0, (-997.1664362795706), 1073.1656927895328);
//       double double1 = tObjectDoubleCustomHashMap0.put((Double) 0.0, (double) double0);
//       assertEquals(false, tObjectDoubleCustomHashMap0.isEmpty());
//       assertEquals(1073.1656927895328, double1, 0.01D);
//   }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.remove(Ljava/lang/Object;)D: I14 Branch 23 IFLT L287 - true
   */

  @Test
  public void test14()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, (-1220), 1693.8766F);
      double double0 = tObjectDoubleCustomHashMap0.remove((Object) "fr");
      assertEquals(0.0, double0, 0.01D);
      assertEquals(0, tObjectDoubleCustomHashMap0.size());
  }

  //Test case number: 15
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putAll(Ljava/util/Map;)V: I13 Branch 24 IFEQ L313 - false
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putAll(Ljava/util/Map;)V: I13 Branch 24 IFEQ L313 - true
   */

  @Test
  public void test15()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, (-1325), (float) (-1348));
      HashMap<Double, Double> hashMap0 = new HashMap<Double, Double>();
      Double double0 = new Double((double) (-1348));
      hashMap0.put(double0, double0);
      tObjectDoubleCustomHashMap0.putAll((Map<? extends Double, ? extends Double>) hashMap0);
      assertEquals(1, tObjectDoubleCustomHashMap0.size());
      assertEquals("{-1348.0=-1348.0}", tObjectDoubleCustomHashMap0.toString());
  }

  //Test case number: 16
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L348 - false
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;: I35 Branch 27 IF_ACMPEQ L348 - false
   * 3 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L347 - true
   * 4 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L347 - false
   * 5 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L348 - true
   */

  @Test
  public void test16()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, (-1));
      tObjectDoubleCustomHashMap0.adjustOrPutValue((Double) Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY);
      tObjectDoubleCustomHashMap0.keys();
      assertEquals(1, tObjectDoubleCustomHashMap0.size());
      assertEquals("{-Infinity=-Infinity}", tObjectDoubleCustomHashMap0.toString());
  }

  //Test case number: 17
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L369 - false
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I49 Branch 31 IF_ACMPEQ L369 - false
   * 3 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I10 Branch 28 IF_ICMPGE L360 - true
   * 4 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L368 - true
   * 5 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L368 - false
   * 6 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L369 - true
   */

  @Test
  public void test17()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, (-266), (float) (-266), (-1020.4304450106462));
      Double[] doubleArray0 = new Double[5];
      doubleArray0[0] = (Double) (-1020.4304450106462);
      tObjectDoubleCustomHashMap0.put((Double) (-1020.4304450106462), (double) doubleArray0[0]);
      tObjectDoubleCustomHashMap0.keys(doubleArray0);
      assertEquals(false, tObjectDoubleCustomHashMap0.isEmpty());
      assertEquals("{-1020.4304450106462=-1020.4304450106462}", tObjectDoubleCustomHashMap0.toString());
  }

  //Test case number: 18
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D: I34 Branch 33 IF_ACMPEQ L391 - false
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D: I39 Branch 34 IF_ACMPEQ L391 - false
   * 3 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D: I27 Branch 32 IFLE L390 - true
   * 4 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D: I27 Branch 32 IFLE L390 - false
   * 5 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D: I34 Branch 33 IF_ACMPEQ L391 - true
   */

  @Test
  public void test18()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, (-1));
      tObjectDoubleCustomHashMap0.adjustOrPutValue((Double) Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY);
      tObjectDoubleCustomHashMap0.values();
      assertEquals("{-Infinity=-Infinity}", tObjectDoubleCustomHashMap0.toString());
      assertEquals(1, tObjectDoubleCustomHashMap0.size());
  }

  //Test case number: 19
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D: I10 Branch 35 IF_ICMPGE L402 - true
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D: I37 Branch 36 IFLE L409 - true
   * 3 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D: I37 Branch 36 IFLE L409 - false
   * 4 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D: I44 Branch 37 IF_ACMPEQ L410 - true
   * 5 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D: I65 Branch 39 IF_ICMPLE L414 - false
   */

  @Test
  public void test19()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, (-266), (float) (-266), (-1020.4304450106462));
      double[] doubleArray0 = new double[4];
      double[] doubleArray1 = tObjectDoubleCustomHashMap0.values(doubleArray0);
      assertEquals((-1020.4304450106462), tObjectDoubleCustomHashMap0.getNoEntryValue(), 0.01D);
      assertSame(doubleArray0, doubleArray1);
      assertNotNull(doubleArray1);
  }

  //Test case number: 20
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D: I10 Branch 35 IF_ICMPGE L402 - false
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D: I44 Branch 37 IF_ACMPEQ L410 - false
   * 3 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D: I49 Branch 38 IF_ACMPEQ L410 - false
   * 4 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D: I65 Branch 39 IF_ICMPLE L414 - true
   * 5 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D: I37 Branch 36 IFLE L409 - true
   * 6 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D: I37 Branch 36 IFLE L409 - false
   * 7 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values([D)[D: I44 Branch 37 IF_ACMPEQ L410 - true
   * 8 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D: I27 Branch 32 IFLE L390 - true
   * 9 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D: I27 Branch 32 IFLE L390 - false
   * 10 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.values()[D: I34 Branch 33 IF_ACMPEQ L391 - true
   */

  @Test
  public void test20()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Object> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 71);
      tObjectDoubleCustomHashMap0.adjustOrPutValue((Object) "", (double) 71, (double) 71);
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap1 = new TObjectDoubleCustomHashMap<Integer>();
      double[] doubleArray0 = tObjectDoubleCustomHashMap1.values();
      tObjectDoubleCustomHashMap0.values(doubleArray0);
      assertEquals(1, tObjectDoubleCustomHashMap0.size());
      assertEquals(0.0, tObjectDoubleCustomHashMap0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z: I9 Branch 40 IFGE L440 - true
   */

//   @Test
//   public void test21()  throws Throwable  {
//       IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
//       TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, (-1));
//       double double0 = tObjectDoubleCustomHashMap0.adjustOrPutValue((Double) Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY);
//       tObjectDoubleCustomHashMap0.putIfAbsent((Double) double0, double0);
//       boolean boolean0 = tObjectDoubleCustomHashMap0.adjustValue((Double) double0, 2028.1905366772892);
//       assertEquals(2, tObjectDoubleCustomHashMap0.size());
//       assertEquals(true, boolean0);
//   }

  //Test case number: 22
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustValue(Ljava/lang/Object;D)Z: I9 Branch 40 IFGE L440 - false
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.increment(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, 1785, (float) 1785);
      boolean boolean0 = tObjectDoubleCustomHashMap0.increment((Double) 1785.0);
      assertEquals(0.0, tObjectDoubleCustomHashMap0.getNoEntryValue(), 0.01D);
      assertEquals(false, boolean0);
  }

  //Test case number: 23
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D: I9 Branch 41 IFGE L456 - false
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D: I51 Branch 42 IFEQ L466 - true
   */

  @Test
  public void test23()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      Double double0 = new Double((-997.1664362795706));
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, (-266), (float) (-266), (-1020.4304450106462));
      tObjectDoubleCustomHashMap0.putIfAbsent(double0, (double) double0);
      double double1 = tObjectDoubleCustomHashMap0.adjustOrPutValue(double0, 0.0, 1128.0002131073463);
      assertEquals(false, tObjectDoubleCustomHashMap0.isEmpty());
      assertEquals((-997.1664362795706), double1, 0.01D);
  }

  //Test case number: 24
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: I18 Branch 43 IFLE L496 - true
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: I18 Branch 43 IFLE L496 - false
   * 3 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: I25 Branch 44 IF_ACMPEQ L497 - true
   */

  @Test
  public void test24()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectDoubleCustomHashMap<String> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 118393066, (-206.83438F));
      assertEquals(3, tObjectDoubleCustomHashMap0.capacity());
      
      boolean boolean0 = tObjectDoubleCustomHashMap0.forEachValue((TDoubleProcedure) null);
      assertEquals(true, boolean0);
      assertEquals(0.0, tObjectDoubleCustomHashMap0.getNoEntryValue(), 0.01D);
  }

  //Test case number: 25
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I27 Branch 51 IFLE L545 - true
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I27 Branch 51 IFLE L545 - false
   * 3 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I34 Branch 52 IF_ACMPEQ L546 - true
   */

  @Test
  public void test25()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, (-1220), 1693.8766F);
      boolean boolean0 = tObjectDoubleCustomHashMap0.retainEntries((TObjectDoubleProcedure<? super Double>) null);
      assertEquals(3, tObjectDoubleCustomHashMap0.capacity());
      assertEquals(0.0, tObjectDoubleCustomHashMap0.getNoEntryValue(), 0.01D);
      assertEquals(false, boolean0);
      assertEquals("{}", tObjectDoubleCustomHashMap0.toString());
  }

  //Test case number: 26
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I34 Branch 52 IF_ACMPEQ L546 - false
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I39 Branch 53 IF_ACMPEQ L546 - false
   * 3 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I27 Branch 51 IFLE L545 - false
   * 4 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I34 Branch 52 IF_ACMPEQ L546 - true
   */

  @Test
  public void test26()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-5), (float) (-5), (double) (-5));
      tObjectDoubleCustomHashMap0.adjustOrPutValue((Integer) (-5), (double) (-5), (double) (-5));
      // Undeclared exception!
      try {
        tObjectDoubleCustomHashMap0.retainEntries((TObjectDoubleProcedure<? super Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V: I18 Branch 55 IFLE L570 - false
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V: I24 Branch 56 IFNULL L571 - false
   * 3 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V: I29 Branch 57 IF_ACMPEQ L571 - false
   * 4 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;)V: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) null);
      // Undeclared exception!
      try {
        tObjectDoubleCustomHashMap0.transformValues((TDoubleFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L588 - false
   */

  @Test
  public void test28()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, 877);
      boolean boolean0 = tObjectDoubleCustomHashMap0.equals((Object) "it");
      assertEquals(1759, tObjectDoubleCustomHashMap0.capacity());
      assertEquals(0.0, tObjectDoubleCustomHashMap0.getNoEntryValue(), 0.01D);
      assertEquals(false, boolean0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 59 IF_ICMPEQ L592 - false
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L588 - true
   */

  @Test
  public void test29()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectDoubleCustomHashMap<Object> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 71);
      Object[] objectArray0 = new Object[15];
      objectArray0[1] = (Object) tObjectDoubleCustomHashMap0;
      tObjectDoubleCustomHashMap0.adjustOrPutValue((Object) "", (double) 71, (double) 71);
      assertEquals("{=71.0}", tObjectDoubleCustomHashMap0.toString());
      
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap1 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, (-1));
      boolean boolean0 = tObjectDoubleCustomHashMap1.equals(objectArray0[1]);
      assertEquals(false, boolean0);
  }

  //Test case number: 30
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L626 - false
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I: I34 Branch 67 IF_ACMPEQ L626 - false
   * 3 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I: I45 Branch 68 IFNONNULL L627 - true
   * 4 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IF)V: root-Branch
   * 5 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I: I22 Branch 65 IFLE L625 - true
   * 6 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I: I22 Branch 65 IFLE L625 - false
   * 7 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L626 - true
   */

  @Test
  public void test30()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectDoubleCustomHashMap<Integer> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1, (-17.099781F));
      tObjectDoubleCustomHashMap0.adjustOrPutValue((Integer) 1785, (double) 1, (double) 1785);
      int int0 = tObjectDoubleCustomHashMap0.hashCode();
      assertEquals(false, tObjectDoubleCustomHashMap0.isEmpty());
      assertEquals(1083958009, int0);
  }

  //Test case number: 31
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 69 IFLE L1107 - false
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I45 Branch 70 IF_ACMPEQ L1108 - false
   * 3 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I51 Branch 71 IF_ACMPEQ L1108 - true
   * 4 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>()V: root-Branch
   * 5 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 69 IFLE L1107 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) pipedOutputStream0);
      tObjectDoubleCustomHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
  }

  //Test case number: 32
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I51 Branch 71 IF_ACMPEQ L1108 - false
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.put(Ljava/lang/Object;D)D: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 69 IFLE L1107 - false
   * 4 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I45 Branch 70 IF_ACMPEQ L1108 - false
   * 5 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I51 Branch 71 IF_ACMPEQ L1108 - true
   * 6 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFD)V: I26 Branch 8 IFEQ L134 - false
   */

//   @Test
//   public void test32()  throws Throwable  {
//       IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
//       TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, 203, (float) 1, (double) 203);
//       PipedInputStream pipedInputStream0 = new PipedInputStream();
//       PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
//       ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) pipedOutputStream0);
//       tObjectDoubleCustomHashMap0.put((Double) 1785.0, (double) 10.0F);
//       // Undeclared exception!
//       try {
//         tObjectDoubleCustomHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
//         fail("Expecting exception: SecurityException");
//       
//       } catch(SecurityException e) {
//          //
//          // Security manager blocks (\"java.lang.RuntimePermission\" \"createClassLoader\")
//          // java.lang.Thread.getStackTrace(Thread.java:1567)
//          // org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
//          // java.lang.SecurityManager.checkCreateClassLoader(SecurityManager.java:611)
//          // java.lang.ClassLoader.checkCreateClassLoader(ClassLoader.java:273)
//          // java.lang.ClassLoader.<init>(ClassLoader.java:315)
//          // sun.reflect.DelegatingClassLoader.<init>(ClassDefiner.java:72)
//          // sun.reflect.ClassDefiner$1.run(ClassDefiner.java:60)
//          // sun.reflect.ClassDefiner$1.run(ClassDefiner.java:58)
//          // java.security.AccessController.doPrivileged(Native Method)
//          // sun.reflect.ClassDefiner.defineClass(ClassDefiner.java:57)
//          // sun.reflect.MethodAccessorGenerator$1.run(MethodAccessorGenerator.java:399)
//          // sun.reflect.MethodAccessorGenerator$1.run(MethodAccessorGenerator.java:396)
//          // java.security.AccessController.doPrivileged(Native Method)
//          // sun.reflect.MethodAccessorGenerator.generate(MethodAccessorGenerator.java:395)
//          // sun.reflect.MethodAccessorGenerator.generateSerializationConstructor(MethodAccessorGenerator.java:113)
//          // sun.reflect.ReflectionFactory.newConstructorForSerialization(ReflectionFactory.java:331)
//          // java.io.ObjectStreamClass.getSerializableConstructor(ObjectStreamClass.java:1343)
//          // java.io.ObjectStreamClass.access$1500(ObjectStreamClass.java:69)
//          // java.io.ObjectStreamClass$2.run(ObjectStreamClass.java:454)
//          // java.io.ObjectStreamClass$2.run(ObjectStreamClass.java:430)
//          // java.security.AccessController.doPrivileged(Native Method)
//          // java.io.ObjectStreamClass.<init>(ObjectStreamClass.java:430)
//          // java.io.ObjectStreamClass.lookup(ObjectStreamClass.java:327)
//          // java.io.ObjectStreamClass.<init>(ObjectStreamClass.java:426)
//          // java.io.ObjectStreamClass.lookup(ObjectStreamClass.java:327)
//          // java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1130)
//          // java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:346)
//          // sun.rmi.server.UnicastRef.marshalValue(UnicastRef.java:292)
//          // sun.rmi.server.UnicastRef.invoke(UnicastRef.java:151)
//          // java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:194)
//          // java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:148)
//          // $Proxy9.collectStatistics(Unknown Source)
//          // org.evosuite.rmi.service.ClientNodeImpl$2.run(ClientNodeImpl.java:229)
//          //
//       }
//   }

  //Test case number: 33
  /*
   * 24 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z: I4 Branch 102 IFEQ L1151 - true
   * 2 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.execute(Ljava/lang/Object;D)Z: I4 Branch 102 IFEQ L1151 - false
   * 3 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;I)V: root-Branch
   * 5 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.toString()Ljava/lang/String;: root-Branch
   * 6 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D: I12 Branch 21 IFGE L268 - true
   * 7 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.doPut(DI)D: I41 Branch 22 IFEQ L276 - false
   * 8 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D: I9 Branch 41 IFGE L456 - true
   * 9 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.adjustOrPutValue(Ljava/lang/Object;DD)D: I51 Branch 42 IFEQ L466 - false
   * 10 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - true
   * 11 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - false
   * 12 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - true
   * 13 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - false
   * 14 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V: I63 Branch 13 IF_ACMPEQ L201 - false
   * 15 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.rehash(I)V: I73 Branch 14 IFGE L203 - true
   * 16 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.putIfAbsent(Ljava/lang/Object;D)D: I9 Branch 20 IFGE L259 - true
   * 17 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I18 Branch 47 IFLE L518 - true
   * 18 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I18 Branch 47 IFLE L518 - false
   * 19 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - true
   * 20 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - false
   * 21 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I30 Branch 49 IF_ACMPEQ L519 - false
   * 22 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectDoubleProcedure;)Z: I39 Branch 50 IFNE L519 - true
   * 23 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$2.<init>(Lgnu/trove/map/custom_hash/TObjectDoubleCustomHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 24 gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap$1.<init>(Lgnu/trove/map/custom_hash/TObjectDoubleCustomHashMap;)V: root-Branch
   */

  @Test
  public void test33()  throws Throwable  {
      IdentityHashingStrategy<Double> identityHashingStrategy0 = new IdentityHashingStrategy<Double>();
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Double>((HashingStrategy<? super Double>) identityHashingStrategy0, (-1));
      double double0 = tObjectDoubleCustomHashMap0.adjustOrPutValue((Double) Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY);
      tObjectDoubleCustomHashMap0.putIfAbsent((Double) double0, double0);
      String string0 = tObjectDoubleCustomHashMap0.toString();
      assertEquals(2, tObjectDoubleCustomHashMap0.size());
      assertEquals("{-Infinity=-Infinity,-Infinity=-Infinity}", string0);
  }
}

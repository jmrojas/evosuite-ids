/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TDoubleCollection;
import gnu.trove.impl.sync.TSynchronizedDoubleCollection;
import gnu.trove.impl.sync.TSynchronizedDoubleList;
import gnu.trove.impl.sync.TSynchronizedDoubleSet;
import gnu.trove.impl.sync.TSynchronizedRandomAccessDoubleList;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleList;
import gnu.trove.list.TDoubleList;
import gnu.trove.list.array.TDoubleArrayList;
import gnu.trove.list.linked.TDoubleLinkedList;
import gnu.trove.procedure.TDoubleProcedure;
import gnu.trove.set.TDoubleSet;
import gnu.trove.set.hash.TDoubleHashSet;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Locale;
import java.util.NoSuchElementException;
import java.util.StringTokenizer;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedDoubleCollectionEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      double double0 = (-1981.1018697656807);
      doubleArray0[0] = double0;
      double double1 = 1528.9485480104474;
      doubleArray0[1] = double1;
      double double2 = (-1473.3107254801334);
      doubleArray0[2] = double2;
      double double3 = Double.NEGATIVE_INFINITY;
      doubleArray0[3] = double3;
      double double4 = 0.0;
      doubleArray0[4] = double4;
      double double5 = 1.0;
      doubleArray0[5] = double5;
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0);
      TSynchronizedRandomAccessDoubleList tSynchronizedRandomAccessDoubleList0 = new TSynchronizedRandomAccessDoubleList((TDoubleList) tDoubleArrayList0);
      boolean boolean0 = tSynchronizedRandomAccessDoubleList0.isEmpty();
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet();
      double double0 = (-667.9952678152749);
      Object object0 = null;
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0, object0);
      double double1 = 0.0;
      // Undeclared exception!
      try {
        tSynchronizedDoubleSet0.add(double1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = 697;
      int int1 = 0;
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(int1);
      InputStream inputStream0 = null;
      DataInputStream dataInputStream0 = new DataInputStream(inputStream0);
      // Undeclared exception!
      try {
        dataInputStream0.readUTF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = 1437;
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(int0);
      String string0 = "";
      StringTokenizer stringTokenizer0 = new StringTokenizer(string0);
      // Undeclared exception!
      try {
        stringTokenizer0.nextToken(string0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(int1);
      TSynchronizedRandomAccessDoubleList tSynchronizedRandomAccessDoubleList0 = new TSynchronizedRandomAccessDoubleList((TDoubleList) tDoubleArrayList0);
      TDoubleProcedure tDoubleProcedure0 = null;
      tSynchronizedRandomAccessDoubleList0.grep(tDoubleProcedure0);
      String string0 = "gnu.trove.no_entry.float";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: gnu.trove.no_entry.float://gnu.trove.no_entry.floatgnu.trove.no_entry.float#gnu.trove.no_entry.float
         //
      }
  }

//   @Test
//   public void test5()  throws Throwable  {
//       double[] doubleArray0 = new double[5];
//       double double0 = 61.905801347688055;
//       int int0 = 0;
//       TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(int0, int0);
//       Locale locale0 = Locale.SIMPLIFIED_CHINESE;
//       String string0 = "GT|9.]))3S\\+nq";
//       String string1 = "'A3";
//       Locale locale1 = new Locale(string0, string0, string1);
//       String string2 = locale0.getDisplayVariant(locale1);
//       TSynchronizedDoubleCollection tSynchronizedDoubleCollection0 = new TSynchronizedDoubleCollection((TDoubleCollection) tDoubleArrayList0, (Object) string2);
//       doubleArray0[0] = double0;
//       double double1 = 4.9E-324;
//       doubleArray0[1] = double1;
//       double double2 = 0.0;
//       doubleArray0[2] = double2;
//       double double3 = (-523.0671341533688);
//       doubleArray0[3] = double3;
//       double double4 = 1966.327084588037;
//       doubleArray0[4] = double4;
//       TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(doubleArray0);
//       double double5 = 1.0;
//       String string3 = Double.toString(double5);
//       TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0, (Object) string3);
//       TDoubleHashSet tDoubleHashSet1 = (TDoubleHashSet)tSynchronizedDoubleSet0.c;
//       tDoubleHashSet0.getNoEntryValue();
//       tDoubleHashSet0.capacity();
//       TDoubleArrayList tDoubleArrayList1 = new TDoubleArrayList((TDoubleCollection) tDoubleHashSet1);
//       tDoubleHashSet0.getNoEntryValue();
//       TSynchronizedDoubleCollection tSynchronizedDoubleCollection1 = new TSynchronizedDoubleCollection((TDoubleCollection) tDoubleArrayList1);
//       tSynchronizedDoubleCollection1.removeAll(tDoubleHashSet0._set);
//       int int1 = tSynchronizedDoubleCollection1.hashCode();
//       assertEquals(0, tDoubleArrayList1.size());
//       assertEquals(590155925, int1);
//   }

  @Test
  public void test6()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      int int0 = 141;
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(int0, int0);
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0);
      tSynchronizedDoubleSet0.retainAll((TDoubleCollection) tDoubleLinkedList0);
      String string0 = "%PoK1D3Y7+-]Fk+i>ed";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: %PoK1D3Y7+-]Fk+i>ed://%25PoK1D3Y7+-]Fk+i%3Eed%25PoK1D3Y7+-%5DFk+i%3Eed?%25PoK1D3Y7+-]Fk+i%3Eed#%25PoK1D3Y7+-]Fk+i%3Eed
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = 0;
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) int0;
      doubleArray0[1] = (double) int0;
      doubleArray0[2] = (double) int0;
      doubleArray0[3] = (double) int0;
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0);
      TDoubleProcedure tDoubleProcedure0 = null;
      // Undeclared exception!
      try {
        tDoubleArrayList0.inverseGrep(tDoubleProcedure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      double double0 = (-656.8728088144478);
      doubleArray0[0] = double0;
      double double1 = 1571.6627979512207;
      doubleArray0[1] = double1;
      double double2 = (-745.8925189544872);
      doubleArray0[2] = double2;
      double double3 = 0.0;
      doubleArray0[3] = double3;
      double double4 = 0.0;
      doubleArray0[4] = double4;
      double double5 = 878.785493501586;
      doubleArray0[5] = double5;
      TDoubleArrayList.wrap(doubleArray0);
      String string0 = "";
      String string1 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string1, string1);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://#
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TDoubleList tDoubleList0 = null;
      String string0 = "KdnyO8j?c!Sb&5=";
      int int0 = (-1480);
      int int1 = (-1235);
      float float0 = (-1.0F);
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(int1, float0, (double) int0);
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0);
      Collection<String> collection0 = null;
      // Undeclared exception!
      try {
        tSynchronizedDoubleSet0.removeAll(collection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = 0;
      double double0 = 274.17232274730947;
      TDoubleArrayList tDoubleArrayList0 = new TDoubleArrayList(int0, double0);
      String string0 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, int0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://@:0?#
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet();
      Locale locale0 = Locale.KOREA;
      String string0 = locale0.getDisplayLanguage();
      TSynchronizedDoubleCollection tSynchronizedDoubleCollection0 = new TSynchronizedDoubleCollection((TDoubleCollection) tDoubleHashSet0, (Object) string0);
      boolean boolean0 = tSynchronizedDoubleCollection0.addAll(tDoubleHashSet0._set);
      assertEquals(false, tDoubleHashSet0.isEmpty());
      assertEquals(true, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      TDoubleList tDoubleList0 = null;
      Locale locale0 = Locale.KOREA;
      String string0 = "q_i:O,/4y(";
      Locale locale1 = new Locale(string0, string0, string0);
      String string1 = locale0.getDisplayScript(locale1);
      TSynchronizedRandomAccessDoubleList tSynchronizedRandomAccessDoubleList0 = new TSynchronizedRandomAccessDoubleList(tDoubleList0, (Object) string1);
      TDoubleList tDoubleList1 = tSynchronizedRandomAccessDoubleList0.list;
      TSynchronizedRandomAccessDoubleList tSynchronizedRandomAccessDoubleList1 = null;
      try {
        tSynchronizedRandomAccessDoubleList1 = new TSynchronizedRandomAccessDoubleList(tDoubleList1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TDoubleList tDoubleList0 = null;
      TSynchronizedRandomAccessDoubleList tSynchronizedRandomAccessDoubleList0 = null;
      try {
        tSynchronizedRandomAccessDoubleList0 = new TSynchronizedRandomAccessDoubleList(tDoubleList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      double double0 = 0.0;
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList(double0);
      int int0 = 0;
      int int1 = 454;
      Locale locale0 = Locale.ENGLISH;
      String string0 = locale0.toString();
      TSynchronizedDoubleCollection tSynchronizedDoubleCollection0 = new TSynchronizedDoubleCollection((TDoubleCollection) tDoubleLinkedList0, (Object) string0);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      tSynchronizedDoubleCollection0.retainAll((Collection<?>) linkedList0);
      // Undeclared exception!
      try {
        tDoubleLinkedList0.subList(int0, int1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index < 0
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet();
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0);
      double[] doubleArray0 = new double[9];
      tSynchronizedDoubleSet0.toString();
      double double0 = (-164.56255829260954);
      doubleArray0[0] = double0;
      double double1 = 438.7474556845549;
      doubleArray0[1] = double1;
      double double2 = (-1042.3974360136697);
      doubleArray0[2] = double2;
      tSynchronizedDoubleSet0.containsAll((TDoubleCollection) tDoubleHashSet0);
      double double3 = (-1997.3273561316657);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      tSynchronizedDoubleSet0.retainAll((Collection<?>) linkedList0);
      doubleArray0[3] = double3;
      double double4 = 0.0;
      doubleArray0[4] = double4;
      double double5 = 0.0;
      doubleArray0[5] = double5;
      double double6 = 0.0;
      doubleArray0[6] = double6;
      double double7 = 0.0;
      doubleArray0[7] = double7;
      double double8 = 0.0;
      doubleArray0[8] = double8;
      tDoubleHashSet0._set = doubleArray0;
      double[] doubleArray1 = tSynchronizedDoubleSet0.toArray(tDoubleHashSet0._set);
      assertSame(doubleArray1, doubleArray0);
  }

  @Test
  public void test16()  throws Throwable  {
      double double0 = 0.0;
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList(double0);
      TUnmodifiableDoubleList tUnmodifiableDoubleList0 = new TUnmodifiableDoubleList((TDoubleList) tDoubleLinkedList0);
      TSynchronizedDoubleList tSynchronizedDoubleList0 = new TSynchronizedDoubleList((TDoubleList) tDoubleLinkedList0);
      tSynchronizedDoubleList0.getNoEntryValue();
      int int0 = 1060;
      int int1 = (-1253);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleList0.remove(int0, int1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      TDoubleList tDoubleList0 = null;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      String string0 = "gnu.trove.no_entry.long";
      try {
        byteArrayOutputStream0.toString(string0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
         //
         // gnu.trove.no_entry.long
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      int int0 = (-1);
      double double0 = 0.0;
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(int0, (float) int0, double0);
      Locale locale0 = Locale.ENGLISH;
      String string0 = locale0.getDisplayVariant();
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = new TSynchronizedDoubleSet((TDoubleSet) tDoubleHashSet0, (Object) string0);
      boolean boolean0 = tSynchronizedDoubleSet0.isEmpty();
      assertEquals(true, boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet();
      tDoubleHashSet0.capacity();
      Object object0 = null;
      TDoubleList tDoubleList0 = null;
      TSynchronizedDoubleList tSynchronizedDoubleList0 = null;
      try {
        tSynchronizedDoubleList0 = new TSynchronizedDoubleList(tDoubleList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

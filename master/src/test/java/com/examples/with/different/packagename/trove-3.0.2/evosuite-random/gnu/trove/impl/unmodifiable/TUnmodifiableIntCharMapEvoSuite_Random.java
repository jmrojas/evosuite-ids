/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntCharMap;
import gnu.trove.map.TIntCharMap;
import gnu.trove.map.hash.TIntCharHashMap;
import gnu.trove.procedure.TIntProcedure;
import java.util.HashMap;
import java.util.Locale;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableIntCharMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntCharMap0.putAll((TIntCharMap) tIntCharHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = 1;
      float float0 = 1852.3773F;
      int int1 = 1651;
      char char0 = '9';
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(int0, float0, int1, char0);
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      String string0 = hashMap0.toString();
      tIntCharHashMap0.equals((Object) string0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      TUnmodifiableCharCollection tUnmodifiableCharCollection0 = (TUnmodifiableCharCollection)tUnmodifiableIntCharMap0.valueCollection();
      assertEquals(0, tUnmodifiableCharCollection0.size());
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = (-1904);
      float float0 = (-1.0F);
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(int0, float0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      int int1 = 0;
      boolean boolean0 = tUnmodifiableIntCharMap0.containsKey(int1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = 0;
      int int1 = 1;
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(int0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap1 = new TUnmodifiableIntCharMap((TIntCharMap) tUnmodifiableIntCharMap0);
      tUnmodifiableIntCharMap1.values();
      char char0 = 'c';
      TIntCharHashMap tIntCharHashMap1 = new TIntCharHashMap(int1, (float) int0, int1, char0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap2 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap1);
      tUnmodifiableIntCharMap2.getNoEntryValue();
      TIntCharHashMap tIntCharHashMap2 = new TIntCharHashMap(int0, int0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap3 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap2);
      assertEquals(0, tUnmodifiableIntCharMap3.getNoEntryKey());
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = (-1);
      float float0 = (-1424.259F);
      char char0 = 'S';
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(int0, float0, int0, char0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      tUnmodifiableIntCharMap0.iterator();
      int int1 = (-1);
      TIntCharMap tIntCharMap0 = null;
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap1 = null;
      try {
        tUnmodifiableIntCharMap1 = new TUnmodifiableIntCharMap(tIntCharMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TIntCharMap tIntCharMap0 = null;
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = null;
      try {
        tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap(tIntCharMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int[] intArray0 = new int[6];
      int int0 = (-1);
      intArray0[0] = int0;
      int int1 = 713;
      intArray0[1] = int1;
      int int2 = (-1275);
      intArray0[2] = int2;
      int int3 = 4831;
      intArray0[3] = int3;
      int int4 = 0;
      intArray0[4] = int4;
      int int5 = 102;
      intArray0[5] = int5;
      char[] charArray0 = new char[6];
      char char0 = '%';
      charArray0[0] = char0;
      char char1 = '~';
      charArray0[1] = char1;
      char char2 = 'b';
      charArray0[2] = char2;
      char char3 = 's';
      charArray0[3] = char3;
      char char4 = '(';
      charArray0[4] = char4;
      char char5 = '4';
      charArray0[5] = char5;
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(intArray0, charArray0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      boolean boolean0 = tUnmodifiableIntCharMap0.containsValue(charArray0[0]);
      assertEquals(true, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = (-427);
      int int1 = (-719);
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(int1, int1);
      TIntCharHashMap tIntCharHashMap1 = new TIntCharHashMap((TIntCharMap) tIntCharHashMap0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap1);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap1 = new TUnmodifiableIntCharMap((TIntCharMap) tUnmodifiableIntCharMap0);
      char char0 = '5';
      // Undeclared exception!
      try {
        tUnmodifiableIntCharMap1.putIfAbsent(int0, char0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TIntCharMap tIntCharMap0 = null;
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = null;
      try {
        tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap(tIntCharMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int[] intArray0 = new int[4];
      int int0 = (-602);
      intArray0[0] = int0;
      int int1 = 0;
      intArray0[1] = int1;
      int int2 = 0;
      float float0 = 0.0F;
      int int3 = (-1185);
      char char0 = 'c';
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(int1, float0, int3, char0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      tUnmodifiableIntCharMap0.hashCode();
      intArray0[2] = int2;
      TIntCharHashMap tIntCharHashMap1 = new TIntCharHashMap();
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap1 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap1);
      tUnmodifiableIntCharMap1.keySet();
      int int4 = (-1);
      intArray0[3] = int4;
      int int5 = 1445;
      // Undeclared exception!
      try {
        tUnmodifiableIntCharMap1.remove(int5);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TIntCharHashMap tIntCharHashMap1 = new TIntCharHashMap((TIntCharMap) tIntCharHashMap0);
      boolean boolean0 = false;
      tIntCharHashMap0.reenableAutoCompaction(boolean0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap1);
      assertEquals(0, tUnmodifiableIntCharMap0.size());
  }

  @Test
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[8];
      int int0 = 1449;
      intArray0[0] = int0;
      int int1 = 0;
      intArray0[1] = int1;
      int int2 = 0;
      intArray0[2] = int2;
      int int3 = 0;
      intArray0[3] = int3;
      int int4 = (-1);
      intArray0[4] = int4;
      int int5 = (-1616);
      intArray0[5] = int5;
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      tUnmodifiableIntCharMap0.isEmpty();
      int int6 = 1212;
      intArray0[6] = int6;
      int int7 = (-818);
      intArray0[7] = int7;
      TIntCharHashMap tIntCharHashMap1 = new TIntCharHashMap(int7);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap1 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap1);
      char[] charArray0 = new char[4];
      char char0 = 's';
      charArray0[0] = char0;
      char char1 = '%';
      charArray0[1] = char1;
      char char2 = '.';
      charArray0[2] = char2;
      char char3 = 'F';
      charArray0[3] = char3;
      TIntCharHashMap tIntCharHashMap2 = new TIntCharHashMap(intArray0, charArray0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap2 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap2);
      int int8 = 0;
      char char4 = 'N';
      // Undeclared exception!
      try {
        tUnmodifiableIntCharMap2.adjustOrPutValue(int8, char3, char4);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 238;
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(int0, int0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      Locale locale0 = Locale.ROOT;
      String string0 = locale0.toLanguageTag();
      boolean boolean0 = tUnmodifiableIntCharMap0.equals((Object) string0);
      assertEquals(false, boolean0);
      
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap1 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap2 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      int int1 = 0;
      tUnmodifiableIntCharMap2.getNoEntryKey();
      char char0 = '[';
      tUnmodifiableIntCharMap2.getNoEntryValue();
      // Undeclared exception!
      try {
        tUnmodifiableIntCharMap2.put(int1, char0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      tIntCharHashMap0.iterator();
      TIntCharHashMap tIntCharHashMap1 = new TIntCharHashMap((TIntCharMap) tIntCharHashMap0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap1);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap1 = new TUnmodifiableIntCharMap((TIntCharMap) tUnmodifiableIntCharMap0);
      tUnmodifiableIntCharMap1.values();
      int int0 = 506;
      char char0 = 'O';
      // Undeclared exception!
      try {
        tUnmodifiableIntCharMap1.putIfAbsent(int0, char0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 0;
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(int0, int0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      TIntProcedure tIntProcedure0 = null;
      tUnmodifiableIntCharMap0.forEachKey(tIntProcedure0);
      int int1 = (-1134);
      TIntCharHashMap tIntCharHashMap1 = new TIntCharHashMap(int1);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap1 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap1);
      tUnmodifiableIntCharMap1.size();
      tUnmodifiableIntCharMap0.size();
      int int2 = 127;
      // Undeclared exception!
      try {
        tUnmodifiableIntCharMap1.remove(int2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap();
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntCharMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = (-465);
      char char0 = 'B';
      TIntCharHashMap tIntCharHashMap0 = new TIntCharHashMap(int0, (float) int0, int0, char0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap0 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      tUnmodifiableIntCharMap0.containsValue(char0);
      TUnmodifiableIntCharMap tUnmodifiableIntCharMap1 = new TUnmodifiableIntCharMap((TIntCharMap) tIntCharHashMap0);
      char char1 = tUnmodifiableIntCharMap0.get(int0);
      assertEquals('B', char1);
      
      int int1 = 1127;
      char char2 = 'H';
      // Undeclared exception!
      try {
        tUnmodifiableIntCharMap0.adjustOrPutValue(int1, char0, char2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

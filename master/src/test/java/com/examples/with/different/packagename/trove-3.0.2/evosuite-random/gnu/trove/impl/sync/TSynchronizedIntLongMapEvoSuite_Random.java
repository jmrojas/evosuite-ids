/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TLongFunction;
import gnu.trove.impl.sync.TSynchronizedIntLongMap;
import gnu.trove.impl.sync.TSynchronizedLongCollection;
import gnu.trove.iterator.TIntLongIterator;
import gnu.trove.map.TIntLongMap;
import gnu.trove.map.hash.TIntLongHashMap;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.MissingResourceException;
import java.util.NoSuchElementException;
import java.util.StringTokenizer;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedIntLongMapEvoSuite_Random {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = (-921);
      long long0 = 0L;
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(int0, (float) int0, int0, long0);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) pipedInputStream0);
      try {
        dataInputStream0.readUTF();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = 188;
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(int0);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      int int1 = (-1756);
      TIntLongHashMap tIntLongHashMap1 = new TIntLongHashMap(int1, int1);
      String string0 = tIntLongHashMap1.toString();
      TSynchronizedIntLongMap tSynchronizedIntLongMap1 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0, (Object) string0);
      File file0 = new File(string0);
      File file1 = file0.getAbsoluteFile();
      URI uRI0 = file1.toURI();
      String string1 = uRI0.getHost();
      tSynchronizedIntLongMap0.equals((Object) string1);
      String string2 = "gVxy";
      tSynchronizedIntLongMap0.values();
      URI uRI1 = null;
      try {
        uRI1 = new URI(string2, string2, string2, string2);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: gVxy://gVxygVxy#gVxy
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = 1;
      int int1 = 1521;
      float float0 = (-526.6481F);
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(int1, float0);
      int int2 = 118;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(int2);
      String string0 = byteArrayOutputStream0.toString();
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0, (Object) string0);
      TSynchronizedIntLongMap tSynchronizedIntLongMap1 = new TSynchronizedIntLongMap((TIntLongMap) tSynchronizedIntLongMap0);
      TIntLongIterator tIntLongIterator0 = tSynchronizedIntLongMap1.iterator();
      assertNotNull(tIntLongIterator0);
      
      TIntLongHashMap tIntLongHashMap1 = new TIntLongHashMap(int0);
      Locale locale0 = Locale.KOREA;
      Locale locale1 = Locale.ITALIAN;
      TSynchronizedIntLongMap tSynchronizedIntLongMap2 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap1);
      locale1.getUnicodeLocaleAttributes();
      int int3 = 808;
      tSynchronizedIntLongMap2.containsKey(int3);
      String string1 = locale0.getDisplayName(locale1);
      tSynchronizedIntLongMap2.equals((Object) string1);
      String string2 = locale0.getDisplayScript(locale1);
      int[] intArray0 = tSynchronizedIntLongMap2.keys(tIntLongHashMap1._set);
      assertNotNull(intArray0);
      
      TSynchronizedIntLongMap tSynchronizedIntLongMap3 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap1, (Object) string2);
      assertTrue(tSynchronizedIntLongMap3.equals(tSynchronizedIntLongMap2));
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = 838;
      int int1 = (-1087);
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(int1);
      Locale locale0 = Locale.PRC;
      String string0 = locale0.getISO3Country();
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0, (Object) string0);
      tSynchronizedIntLongMap0.isEmpty();
      int int2 = 827;
      TIntLongHashMap tIntLongHashMap1 = new TIntLongHashMap(int0, int0, int2, int2);
      TSynchronizedIntLongMap tSynchronizedIntLongMap1 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap1);
      long long0 = 184L;
      tSynchronizedIntLongMap1.containsValue(long0);
      int int3 = 144;
      TIntLongMap tIntLongMap0 = null;
      Locale locale1 = Locale.getDefault();
      locale1.getDisplayCountry();
      locale1.toLanguageTag();
      TSynchronizedIntLongMap tSynchronizedIntLongMap2 = null;
      try {
        tSynchronizedIntLongMap2 = new TSynchronizedIntLongMap(tIntLongMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 932;
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(int0);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      int int1 = 21006137;
      boolean boolean0 = tSynchronizedIntLongMap0.containsKey(int1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = (-649);
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(int0, int0);
      Locale locale0 = Locale.KOREAN;
      String string0 = locale0.getDisplayName();
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0, (Object) string0);
      long[] longArray0 = new long[9];
      longArray0[0] = (long) int0;
      longArray0[1] = (long) int0;
      longArray0[2] = (long) int0;
      longArray0[3] = (long) int0;
      longArray0[4] = (long) int0;
      longArray0[5] = (long) int0;
      longArray0[6] = (long) int0;
      longArray0[7] = (long) int0;
      longArray0[8] = (long) int0;
      tSynchronizedIntLongMap0.values(longArray0);
      tIntLongHashMap0.ensureCapacity(int0);
      tIntLongHashMap0.capacity();
      long[] longArray1 = new long[1];
      longArray1[0] = (long) int0;
      tIntLongHashMap0.values(longArray1);
      float float0 = (-863.8057F);
      // Undeclared exception!
      try {
        tIntLongHashMap0.setAutoCompactionFactor(float0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Factor must be >= 0: -863.8057
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      int int0 = (-1);
      tSynchronizedIntLongMap0.hashCode();
      Integer integer0 = new Integer(int0);
      int int1 = 1;
      tIntLongHashMap0.increment(int1);
      tSynchronizedIntLongMap0.containsValue((long) int0);
      TSynchronizedIntLongMap tSynchronizedIntLongMap1 = new TSynchronizedIntLongMap((TIntLongMap) tSynchronizedIntLongMap0, (Object) integer0);
      TSynchronizedIntLongMap tSynchronizedIntLongMap2 = new TSynchronizedIntLongMap((TIntLongMap) tSynchronizedIntLongMap1);
      tSynchronizedIntLongMap1.adjustOrPutValue((int) integer0, (long) int0, (long) integer0);
      int int2 = (-1781);
      float float0 = 0.0F;
      TIntLongHashMap tIntLongHashMap1 = new TIntLongHashMap(int2, float0);
      TSynchronizedIntLongMap tSynchronizedIntLongMap3 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap1);
      int int3 = 110;
      long[] longArray0 = new long[4];
      longArray0[0] = (long) integer0;
      longArray0[1] = (long) int0;
      longArray0[2] = (long) int0;
      longArray0[3] = (long) integer0;
      tSynchronizedIntLongMap2.values(longArray0);
      assertEquals(false, tIntLongHashMap0.isEmpty());
      
      HashMap<Integer, Long> hashMap0 = new HashMap<Integer, Long>();
      tSynchronizedIntLongMap3.putAll((Map<? extends Integer, ? extends Long>) hashMap0);
      tSynchronizedIntLongMap3.put(int3, int2);
      assertEquals("{110=-1781}", tSynchronizedIntLongMap3.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      int[] intArray0 = new int[9];
      int int0 = 0;
      intArray0[0] = int0;
      int int1 = 82037;
      intArray0[1] = int1;
      int int2 = (-1793);
      intArray0[2] = int2;
      int int3 = 1943;
      intArray0[3] = int3;
      int int4 = 1;
      intArray0[4] = int4;
      int int5 = (-1);
      intArray0[5] = int5;
      int int6 = 1054;
      intArray0[6] = int6;
      int int7 = 0;
      intArray0[7] = int7;
      int int8 = (-227);
      intArray0[8] = int8;
      long[] longArray0 = new long[6];
      longArray0[0] = (long) int4;
      longArray0[1] = (long) int3;
      long long0 = 1L;
      longArray0[2] = long0;
      longArray0[3] = (long) int8;
      longArray0[4] = (long) int7;
      longArray0[5] = (long) int5;
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(intArray0, longArray0);
      Object object0 = null;
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0, object0);
      int int9 = (-1);
      // Undeclared exception!
      try {
        tSynchronizedIntLongMap0.remove(int9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      int int0 = 0;
      long[] longArray0 = tSynchronizedIntLongMap0.values();
      assertNotNull(longArray0);
      
      tSynchronizedIntLongMap0.containsKey(int0);
      int int1 = 1177;
      float float0 = 1366.2781F;
      TIntLongHashMap tIntLongHashMap1 = new TIntLongHashMap(int1, float0);
      String string0 = File.separator;
      int int2 = 1845;
      long long0 = (-1167L);
      tIntLongHashMap1.putIfAbsent(int2, long0);
      TSynchronizedIntLongMap tSynchronizedIntLongMap1 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap1);
      tSynchronizedIntLongMap1.keySet();
      tSynchronizedIntLongMap1.keys();
      TSynchronizedIntLongMap tSynchronizedIntLongMap2 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap1, (Object) string0);
      long long1 = (-710L);
      tSynchronizedIntLongMap2.hashCode();
      tSynchronizedIntLongMap2.adjustOrPutValue(int1, long1, long1);
      Locale locale0 = Locale.FRENCH;
      String string1 = locale0.getISO3Country();
      boolean boolean0 = tSynchronizedIntLongMap1.equals((Object) string1);
      assertEquals(2, tSynchronizedIntLongMap1.size());
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          int int0 = (-601);
          TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
          TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
          TIntLongHashMap tIntLongHashMap1 = new TIntLongHashMap(int0, int0);
          TIntLongHashMap tIntLongHashMap2 = new TIntLongHashMap((TIntLongMap) tIntLongHashMap1);
          TSynchronizedIntLongMap tSynchronizedIntLongMap1 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap2);
          tSynchronizedIntLongMap1.keys();
          String string0 = "_6s7c}6p G";
          // Undeclared exception!
          try {
            File.createTempFile(string0, string0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Unable to create temporary file
             //
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = 702;
      float float0 = 2012.5392F;
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(int0, float0, int0, (long) int0);
      int int1 = (-116);
      tIntLongHashMap0.contains(int1);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      int int2 = 1465;
      int int3 = 0;
      int int4 = (-762);
      tSynchronizedIntLongMap0.putIfAbsent(int4, int1);
      tSynchronizedIntLongMap0.increment(int3);
      tSynchronizedIntLongMap0.adjustValue(int0, int2);
      long long0 = 0L;
      long[] longArray0 = new long[9];
      longArray0[0] = (long) int3;
      longArray0[1] = (long) int0;
      longArray0[2] = (long) int2;
      longArray0[3] = (long) int0;
      long long1 = 0L;
      longArray0[4] = long1;
      longArray0[5] = long0;
      longArray0[6] = long0;
      longArray0[7] = (long) int1;
      longArray0[0] = (long) int0;
      longArray0[1] = (long) int1;
      long long2 = 1L;
      longArray0[2] = long2;
      longArray0[3] = (long) int2;
      longArray0[4] = long2;
      longArray0[5] = long0;
      longArray0[6] = (long) int4;
      longArray0[7] = (long) int1;
      longArray0[8] = long1;
      longArray0[8] = (long) int0;
      tSynchronizedIntLongMap0.values(longArray0);
      long long3 = tSynchronizedIntLongMap0.put(int2, long0);
      assertEquals(2, tIntLongHashMap0.size());
      assertEquals(702L, long3);
  }

  @Test
  public void test11()  throws Throwable  {
      TIntLongMap tIntLongMap0 = null;
      String string0 = "";
      boolean boolean0 = true;
      StringTokenizer stringTokenizer0 = new StringTokenizer(string0, string0, boolean0);
      // Undeclared exception!
      try {
        stringTokenizer0.nextToken(string0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[1];
      TIntLongMap tIntLongMap0 = null;
      int int0 = 36;
      int int1 = (-1);
      long long0 = 966L;
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(int0, (float) int0, int1, long0);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      Object object0 = null;
      TSynchronizedIntLongMap tSynchronizedIntLongMap1 = new TSynchronizedIntLongMap(tIntLongMap0, object0);
      Object object1 = null;
      int int2 = 945;
      intArray0[0] = int2;
      TSynchronizedIntLongMap tSynchronizedIntLongMap2 = new TSynchronizedIntLongMap(tIntLongMap0, object1);
      TLongFunction tLongFunction0 = null;
      // Undeclared exception!
      try {
        tSynchronizedIntLongMap2.putIfAbsent(intArray0[0], intArray0[0]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = 716;
      float float0 = 0.0F;
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(int0, float0);
      String string0 = "";
      URI uRI0 = URI.create(string0);
      String string1 = uRI0.getRawAuthority();
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0, (Object) string1);
      assertEquals(0, tSynchronizedIntLongMap0.getNoEntryKey());
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = (-1);
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(int0);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0);
      long[] longArray0 = new long[3];
      longArray0[0] = (long) int0;
      longArray0[1] = (long) int0;
      longArray0[2] = (long) int0;
      long[] longArray1 = tSynchronizedIntLongMap0.values(longArray0);
      assertSame(longArray0, longArray1);
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = 926;
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(int0);
      TIntLongHashMap tIntLongHashMap1 = new TIntLongHashMap((TIntLongMap) tIntLongHashMap0);
      int int1 = 935;
      String string0 = Integer.toOctalString(int1);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap1, (Object) string0);
      TSynchronizedLongCollection tSynchronizedLongCollection0 = (TSynchronizedLongCollection)tSynchronizedIntLongMap0.valueCollection();
      assertNotNull(tSynchronizedLongCollection0);
      
      Locale locale0 = Locale.JAPANESE;
      String string1 = locale0.toLanguageTag();
      TSynchronizedIntLongMap tSynchronizedIntLongMap1 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap1, (Object) string1);
      boolean boolean0 = tSynchronizedIntLongMap1.isEmpty();
      assertEquals(true, boolean0);
      
      int int2 = (-225);
      TIntLongHashMap tIntLongHashMap2 = new TIntLongHashMap(int0, int0, int2, int2);
      tIntLongHashMap2.getAutoCompactionFactor();
      TSynchronizedIntLongMap tSynchronizedIntLongMap2 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap2);
      int[] intArray0 = tSynchronizedIntLongMap2.keys(tIntLongHashMap2._set);
      assertNotNull(intArray0);
      
      tSynchronizedIntLongMap2.keys(intArray0);
      assertEquals(true, tSynchronizedIntLongMap2.isEmpty());
  }

  @Test
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[2];
      int int0 = 1250;
      intArray0[0] = int0;
      int int1 = 1068;
      int int2 = 1504;
      intArray0[0] = int2;
      intArray0[1] = int0;
      intArray0[1] = int1;
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      int int3 = 1332;
      Integer integer0 = new Integer(int3);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap0, (Object) integer0);
      Locale locale0 = Locale.FRANCE;
      String string0 = locale0.getCountry();
      TSynchronizedIntLongMap tSynchronizedIntLongMap1 = new TSynchronizedIntLongMap((TIntLongMap) tSynchronizedIntLongMap0, (Object) string0);
      long[] longArray0 = new long[3];
      longArray0[0] = (long) int0;
      long long0 = (-506L);
      longArray0[1] = long0;
      longArray0[2] = (long) intArray0[0];
      TIntLongHashMap tIntLongHashMap1 = new TIntLongHashMap(intArray0, longArray0);
      TIntLongHashMap tIntLongHashMap2 = new TIntLongHashMap((TIntLongMap) tIntLongHashMap1);
      longArray0[0] = (long) int1;
      longArray0[1] = (long) intArray0[1];
      longArray0[2] = (long) intArray0[0];
      longArray0[0] = (long) intArray0[0];
      longArray0[1] = long0;
      longArray0[2] = (long) intArray0[1];
      String string1 = "";
      Locale locale1 = new Locale(string1);
      String string2 = locale1.getISO3Country();
      TSynchronizedIntLongMap tSynchronizedIntLongMap2 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap1, (Object) string2);
      tSynchronizedIntLongMap2.keys();
      TSynchronizedIntLongMap tSynchronizedIntLongMap3 = new TSynchronizedIntLongMap((TIntLongMap) tIntLongHashMap2);
      int int4 = (-1585);
      long long1 = 1275L;
      tSynchronizedIntLongMap3.putIfAbsent(int4, long1);
      assertEquals(3, tIntLongHashMap2.size());
      assertEquals("{1068=-506, 1504=1250, -1585=1275}", tSynchronizedIntLongMap3.toString());
  }

  @Test
  public void test17()  throws Throwable  {
      TIntLongMap tIntLongMap0 = null;
      Locale locale0 = Locale.CHINESE;
      Locale locale1 = Locale.JAPAN;
      String string0 = locale0.getDisplayName(locale1);
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap(tIntLongMap0, (Object) string0);
      // Undeclared exception!
      try {
        tSynchronizedIntLongMap0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      TIntLongMap tIntLongMap0 = null;
      TSynchronizedIntLongMap tSynchronizedIntLongMap0 = null;
      try {
        tSynchronizedIntLongMap0 = new TSynchronizedIntLongMap(tIntLongMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TIntCollection;
import gnu.trove.impl.sync.TSynchronizedIntCollection;
import gnu.trove.impl.sync.TSynchronizedRandomAccessIntList;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntList;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList;
import gnu.trove.list.TIntList;
import gnu.trove.list.array.TIntArrayList;
import gnu.trove.list.linked.TIntLinkedList;
import gnu.trove.set.TIntSet;
import gnu.trove.set.hash.TIntHashSet;
import java.io.ByteArrayOutputStream;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Locale;
import java.util.NoSuchElementException;
import java.util.StringTokenizer;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableIntCollectionEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TIntList tIntList0 = null;
      TUnmodifiableIntList tUnmodifiableIntList0 = null;
      try {
        tUnmodifiableIntList0 = new TUnmodifiableIntList(tIntList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TIntCollection tIntCollection0 = null;
      TIntArrayList tIntArrayList0 = null;
      try {
        tIntArrayList0 = new TIntArrayList(tIntCollection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int[] intArray0 = new int[9];
      int int0 = (-329);
      intArray0[0] = int0;
      int int1 = 830;
      intArray0[1] = int1;
      int int2 = (-1246);
      TIntList tIntList0 = null;
      TUnmodifiableIntList tUnmodifiableIntList0 = null;
      try {
        tUnmodifiableIntList0 = new TUnmodifiableIntList(tIntList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = (-539);
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList(int0);
      TSynchronizedRandomAccessIntList tSynchronizedRandomAccessIntList0 = new TSynchronizedRandomAccessIntList((TIntList) tIntLinkedList0);
      TIntArrayList tIntArrayList0 = new TIntArrayList((TIntCollection) tSynchronizedRandomAccessIntList0);
      // Undeclared exception!
      try {
        tIntArrayList0.subList(int0, int0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = (-1982);
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList(int0);
      TUnmodifiableIntList tUnmodifiableIntList0 = new TUnmodifiableIntList((TIntList) tIntLinkedList0);
      // Undeclared exception!
      try {
        tUnmodifiableIntList0.add(int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      TIntHashSet tIntHashSet0 = new TIntHashSet((Collection<? extends Integer>) linkedList0);
      int[] intArray0 = new int[4];
      int int0 = 593;
      intArray0[0] = int0;
      int int1 = (-643);
      intArray0[1] = int1;
      int int2 = 916;
      intArray0[2] = int2;
      int int3 = 864;
      intArray0[3] = int3;
      tIntHashSet0.containsAll(intArray0);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = new TUnmodifiableIntSet((TIntSet) tIntHashSet0);
      TIntHashSet tIntHashSet1 = (TIntHashSet)tUnmodifiableIntSet0.c;
      TUnmodifiableIntCollection tUnmodifiableIntCollection0 = new TUnmodifiableIntCollection((TIntCollection) tIntHashSet1);
      // Undeclared exception!
      try {
        tUnmodifiableIntCollection0.addAll(tIntHashSet0._set);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = (-555);
      TIntArrayList tIntArrayList0 = null;
      try {
        tIntArrayList0 = new TIntArrayList(int0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TIntList tIntList0 = null;
      TUnmodifiableRandomAccessIntList tUnmodifiableRandomAccessIntList0 = null;
      try {
        tUnmodifiableRandomAccessIntList0 = new TUnmodifiableRandomAccessIntList(tIntList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = (-1619);
      TIntHashSet tIntHashSet0 = new TIntHashSet(int0, int0);
      TIntHashSet tIntHashSet1 = new TIntHashSet((TIntCollection) tIntHashSet0);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = new TUnmodifiableIntSet((TIntSet) tIntHashSet1);
      tUnmodifiableIntSet0.containsAll(tIntHashSet1._set);
      int int1 = 0;
      int int2 = (-1);
      TIntHashSet tIntHashSet2 = new TIntHashSet(int1, int1, int2);
      TUnmodifiableIntSet tUnmodifiableIntSet1 = new TUnmodifiableIntSet((TIntSet) tIntHashSet2);
      TUnmodifiableIntCollection tUnmodifiableIntCollection0 = new TUnmodifiableIntCollection((TIntCollection) tUnmodifiableIntSet1);
      // Undeclared exception!
      try {
        tUnmodifiableIntSet1.addAll((TIntCollection) tUnmodifiableIntCollection0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 1572;
      TIntArrayList tIntArrayList0 = new TIntArrayList(int0);
      int int1 = 722;
      tIntArrayList0.subList(int1, int1);
      String string0 = "~";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: ~://~~?~#~
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = (-1);
      TIntArrayList tIntArrayList0 = null;
      try {
        tIntArrayList0 = new TIntArrayList(int0, int0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TIntSet tIntSet0 = null;
      TUnmodifiableIntSet tUnmodifiableIntSet0 = null;
      try {
        tUnmodifiableIntSet0 = new TUnmodifiableIntSet(tIntSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 0;
      int int1 = 734;
      TIntArrayList tIntArrayList0 = new TIntArrayList(int1, int1);
      Locale locale0 = Locale.JAPANESE;
      String string0 = locale0.getScript();
      TSynchronizedIntCollection tSynchronizedIntCollection0 = new TSynchronizedIntCollection((TIntCollection) tIntArrayList0, (Object) string0);
      TIntHashSet tIntHashSet0 = new TIntHashSet((TIntCollection) tSynchronizedIntCollection0);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = new TUnmodifiableIntSet((TIntSet) tIntHashSet0);
      String string1 = locale0.toString();
      tUnmodifiableIntSet0.equals((Object) string1);
      float float0 = 634.6118F;
      TIntHashSet tIntHashSet1 = new TIntHashSet(int0, float0, int0);
      TUnmodifiableIntSet tUnmodifiableIntSet1 = new TUnmodifiableIntSet((TIntSet) tIntHashSet1);
      TUnmodifiableIntSet tUnmodifiableIntSet2 = new TUnmodifiableIntSet((TIntSet) tUnmodifiableIntSet1);
      tUnmodifiableIntSet2.iterator();
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      int int2 = 38747;
      int int3 = 0;
      tUnmodifiableIntSet2.contains(int0);
      tIntLinkedList0.binarySearch(int2, int3, int3);
      TUnmodifiableIntList tUnmodifiableIntList0 = new TUnmodifiableIntList((TIntList) tIntLinkedList0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      String string2 = "";
      try {
        byteArrayOutputStream0.toString(string2);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
         //
         // 
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = 180;
      TIntHashSet tIntHashSet0 = new TIntHashSet(int0);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = new TUnmodifiableIntSet((TIntSet) tIntHashSet0);
      // Undeclared exception!
      try {
        tUnmodifiableIntSet0.retainAll(tIntHashSet0._set);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      int int0 = 0;
      TUnmodifiableIntList tUnmodifiableIntList0 = new TUnmodifiableIntList((TIntList) tIntLinkedList0);
      int[] intArray0 = new int[4];
      intArray0[0] = int0;
      intArray0[1] = int0;
      intArray0[2] = int0;
      intArray0[3] = int0;
      // Undeclared exception!
      try {
        tUnmodifiableIntList0.addAll(intArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      TUnmodifiableIntCollection tUnmodifiableIntCollection0 = new TUnmodifiableIntCollection((TIntCollection) tIntLinkedList0);
      int int0 = 96;
      TIntArrayList tIntArrayList0 = new TIntArrayList(int0);
      TUnmodifiableRandomAccessIntList tUnmodifiableRandomAccessIntList0 = new TUnmodifiableRandomAccessIntList((TIntList) tIntArrayList0);
      TIntSet tIntSet0 = null;
      String string0 = "";
      StringTokenizer stringTokenizer0 = new StringTokenizer(string0, string0);
      // Undeclared exception!
      try {
        stringTokenizer0.nextToken(string0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[10];
      int int0 = 0;
      intArray0[0] = int0;
      intArray0[1] = int0;
      intArray0[2] = int0;
      intArray0[3] = int0;
      int int1 = 0;
      intArray0[4] = int1;
      intArray0[5] = int1;
      intArray0[6] = int0;
      intArray0[7] = int1;
      intArray0[8] = int0;
      intArray0[9] = int0;
      intArray0[0] = int0;
      int int2 = 0;
      intArray0[1] = int2;
      int int3 = 1697;
      intArray0[2] = int3;
      int int4 = 1;
      intArray0[3] = int4;
      int int5 = 0;
      intArray0[4] = int5;
      int int6 = 1568;
      intArray0[5] = int6;
      int int7 = (-506);
      intArray0[6] = int7;
      int int8 = 176;
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      TIntHashSet tIntHashSet0 = new TIntHashSet((Collection<? extends Integer>) linkedList0);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = new TUnmodifiableIntSet((TIntSet) tIntHashSet0);
      int int9 = 151;
      // Undeclared exception!
      try {
        tUnmodifiableIntSet0.remove(int9);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

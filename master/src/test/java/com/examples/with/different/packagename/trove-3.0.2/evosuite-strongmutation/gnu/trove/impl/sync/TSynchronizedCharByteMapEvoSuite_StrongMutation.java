/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedByteCollection;
import gnu.trove.impl.sync.TSynchronizedCharByteMap;
import gnu.trove.impl.sync.TSynchronizedCharSet;
import gnu.trove.map.TCharByteMap;
import gnu.trove.map.hash.TCharByteHashMap;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TCharByteProcedure;
import gnu.trove.procedure.TCharProcedure;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedCharByteMapEvoSuite_StrongMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 Strong Mutation 6: gnu.trove.impl.sync.TSynchronizedCharByteMap.isEmpty()Z:74 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 2 Strong Mutation 5: gnu.trove.impl.sync.TSynchronizedCharByteMap.isEmpty()Z:74 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 0: gnu.trove.impl.sync.TSynchronizedCharByteMap.<init>(Lgnu/trove/map/TCharByteMap;)V:59 - ReplaceComparisonOperator != null -> = null
   * 4 Strong Mutation 5: gnu.trove.impl.sync.TSynchronizedCharByteMap.isEmpty()Z:74 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 6: gnu.trove.impl.sync.TSynchronizedCharByteMap.isEmpty()Z:74 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 6 Strong Mutation 7: gnu.trove.impl.sync.TSynchronizedCharByteMap.isEmpty()Z:74 - DeleteStatement: isEmpty()Z
   * 7 gnu.trove.impl.sync.TSynchronizedCharByteMap.isEmpty()Z: root-Branch
   * 8 gnu.trove.impl.sync.TSynchronizedCharByteMap.<init>(Lgnu/trove/map/TCharByteMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      char[] charArray0 = new char[10];
      charArray0[8] = '?';
      tSynchronizedCharByteMap0.isEmpty();
      charArray0[8] = 'P';
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 Strong Mutation 7: gnu.trove.impl.sync.TSynchronizedCharByteMap.isEmpty()Z:74 - DeleteStatement: isEmpty()Z
   * 2 gnu.trove.impl.sync.TSynchronizedCharByteMap.<init>(Lgnu/trove/map/TCharByteMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1), 110.29958F);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0, (Object) "/mnt/fastdata/ac1gf/Experiments_Major/apps/trove-3.0.2/\tfO)?KR-Jg*xX46");
      boolean boolean0 = tSynchronizedCharByteMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * 1 Strong Mutation 9: gnu.trove.impl.sync.TSynchronizedCharByteMap.containsKey(C)Z:77 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 2 Strong Mutation 8: gnu.trove.impl.sync.TSynchronizedCharByteMap.containsKey(C)Z:77 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 8: gnu.trove.impl.sync.TSynchronizedCharByteMap.containsKey(C)Z:77 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 9: gnu.trove.impl.sync.TSynchronizedCharByteMap.containsKey(C)Z:77 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 5 gnu.trove.impl.sync.TSynchronizedCharByteMap.containsKey(C)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      char[] charArray0 = new char[10];
      charArray0[4] = '?';
      tSynchronizedCharByteMap0.containsKey('?');
      charArray0[4] = '7';
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * 1 Strong Mutation 10: gnu.trove.impl.sync.TSynchronizedCharByteMap.containsKey(C)Z:77 - InsertUnaryOp Negation of key
   * 2 Strong Mutation 10: gnu.trove.impl.sync.TSynchronizedCharByteMap.containsKey(C)Z:77 - InsertUnaryOp Negation of key
   * 3 Strong Mutation 11: gnu.trove.impl.sync.TSynchronizedCharByteMap.containsKey(C)Z:77 - InsertUnaryOp IINC 1 key
   * 4 Strong Mutation 12: gnu.trove.impl.sync.TSynchronizedCharByteMap.containsKey(C)Z:77 - InsertUnaryOp IINC -1 key
   * 5 Strong Mutation 13: gnu.trove.impl.sync.TSynchronizedCharByteMap.containsKey(C)Z:77 - DeleteStatement: containsKey(C)Z
   */

  @Test
  public void test3()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[2] = 'J';
      byte[] byteArray0 = new byte[9];
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0, (Object) ":");
      boolean boolean0 = tSynchronizedCharByteMap0.containsKey('J');
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 13 covered goals:
   * 1 Strong Mutation 13: gnu.trove.impl.sync.TSynchronizedCharByteMap.containsKey(C)Z:77 - DeleteStatement: containsKey(C)Z
   * 2 Strong Mutation 11: gnu.trove.impl.sync.TSynchronizedCharByteMap.containsKey(C)Z:77 - InsertUnaryOp IINC 1 key
   * 3 Strong Mutation 12: gnu.trove.impl.sync.TSynchronizedCharByteMap.containsKey(C)Z:77 - InsertUnaryOp IINC -1 key
   * 4 Strong Mutation 125: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - InsertUnaryOp IINC -1 key
   * 5 Strong Mutation 124: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - InsertUnaryOp IINC 1 key
   * 6 Strong Mutation 123: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - InsertUnaryOp Negation of key
   * 7 Strong Mutation 122: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 8 Strong Mutation 121: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - DeleteField: mutexLjava/lang/Object;
   * 9 Strong Mutation 131: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - InsertUnaryOp Negation of put_amount
   * 10 Strong Mutation 130: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - ReplaceVariable put_amount -> adjust_amount
   * 11 Strong Mutation 133: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - InsertUnaryOp IINC -1 put_amount
   * 12 Strong Mutation 132: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - InsertUnaryOp IINC 1 put_amount
   * 13 gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      tSynchronizedCharByteMap0.adjustOrPutValue('l', (byte)10, (byte) (-22));
      boolean boolean0 = tSynchronizedCharByteMap0.containsKey('l');
      assertEquals(false, tCharByteHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 6 covered goals:
   * 1 Strong Mutation 16: gnu.trove.impl.sync.TSynchronizedCharByteMap.containsValue(B)Z:80 - InsertUnaryOp Negation of value
   * 2 Strong Mutation 17: gnu.trove.impl.sync.TSynchronizedCharByteMap.containsValue(B)Z:80 - InsertUnaryOp IINC 1 value
   * 3 Strong Mutation 16: gnu.trove.impl.sync.TSynchronizedCharByteMap.containsValue(B)Z:80 - InsertUnaryOp Negation of value
   * 4 Strong Mutation 19: gnu.trove.impl.sync.TSynchronizedCharByteMap.containsValue(B)Z:80 - DeleteStatement: containsValue(B)Z
   * 5 Strong Mutation 18: gnu.trove.impl.sync.TSynchronizedCharByteMap.containsValue(B)Z:80 - InsertUnaryOp IINC -1 value
   * 6 gnu.trove.impl.sync.TSynchronizedCharByteMap.containsValue(B)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      char[] charArray0 = new char[2];
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)83;
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      boolean boolean0 = tSynchronizedCharByteMap0.containsValue((byte)83);
      assertEquals(true, boolean0);
  }

  //Test case number: 6
  /*
   * 11 covered goals:
   * 1 Strong Mutation 18: gnu.trove.impl.sync.TSynchronizedCharByteMap.containsValue(B)Z:80 - InsertUnaryOp IINC -1 value
   * 2 Strong Mutation 17: gnu.trove.impl.sync.TSynchronizedCharByteMap.containsValue(B)Z:80 - InsertUnaryOp IINC 1 value
   * 3 Strong Mutation 19: gnu.trove.impl.sync.TSynchronizedCharByteMap.containsValue(B)Z:80 - DeleteStatement: containsValue(B)Z
   * 4 Strong Mutation 27: gnu.trove.impl.sync.TSynchronizedCharByteMap.put(CB)B:87 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 5 Strong Mutation 26: gnu.trove.impl.sync.TSynchronizedCharByteMap.put(CB)B:87 - DeleteField: mutexLjava/lang/Object;
   * 6 Strong Mutation 29: gnu.trove.impl.sync.TSynchronizedCharByteMap.put(CB)B:87 - InsertUnaryOp IINC 1 key
   * 7 Strong Mutation 28: gnu.trove.impl.sync.TSynchronizedCharByteMap.put(CB)B:87 - InsertUnaryOp Negation of key
   * 8 Strong Mutation 30: gnu.trove.impl.sync.TSynchronizedCharByteMap.put(CB)B:87 - InsertUnaryOp IINC -1 key
   * 9 Strong Mutation 32: gnu.trove.impl.sync.TSynchronizedCharByteMap.put(CB)B:87 - InsertUnaryOp IINC 1 value
   * 10 Strong Mutation 33: gnu.trove.impl.sync.TSynchronizedCharByteMap.put(CB)B:87 - InsertUnaryOp IINC -1 value
   * 11 gnu.trove.impl.sync.TSynchronizedCharByteMap.put(CB)B: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(0, 0);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      tSynchronizedCharByteMap0.put('R', (byte)0);
      boolean boolean0 = tSynchronizedCharByteMap0.containsValue((byte)0);
      assertEquals(1, tCharByteHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 6 covered goals:
   * 1 Strong Mutation 22: gnu.trove.impl.sync.TSynchronizedCharByteMap.get(C)B:83 - InsertUnaryOp Negation of key
   * 2 Strong Mutation 23: gnu.trove.impl.sync.TSynchronizedCharByteMap.get(C)B:83 - InsertUnaryOp IINC 1 key
   * 3 Strong Mutation 22: gnu.trove.impl.sync.TSynchronizedCharByteMap.get(C)B:83 - InsertUnaryOp Negation of key
   * 4 Strong Mutation 25: gnu.trove.impl.sync.TSynchronizedCharByteMap.get(C)B:83 - DeleteStatement: get(C)B
   * 5 Strong Mutation 24: gnu.trove.impl.sync.TSynchronizedCharByteMap.get(C)B:83 - InsertUnaryOp IINC -1 key
   * 6 gnu.trove.impl.sync.TSynchronizedCharByteMap.get(C)B: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[2] = ',';
      byte[] byteArray0 = new byte[10];
      byteArray0[2] = (byte) (-67);
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0, (Object) charArray0[3]);
      byte byte0 = tSynchronizedCharByteMap0.get(',');
      assertEquals((byte) (-67), byte0);
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 Strong Mutation 24: gnu.trove.impl.sync.TSynchronizedCharByteMap.get(C)B:83 - InsertUnaryOp IINC -1 key
   * 2 Strong Mutation 23: gnu.trove.impl.sync.TSynchronizedCharByteMap.get(C)B:83 - InsertUnaryOp IINC 1 key
   * 3 Strong Mutation 25: gnu.trove.impl.sync.TSynchronizedCharByteMap.get(C)B:83 - DeleteStatement: get(C)B
   */

  @Test
  public void test8()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      tSynchronizedCharByteMap0.adjustOrPutValue('l', (byte)10, (byte) (-22));
      byte byte0 = tSynchronizedCharByteMap0.get('l');
      assertEquals(1, tCharByteHashMap0.size());
      assertEquals((byte) (-22), byte0);
  }

  //Test case number: 9
  /*
   * 3 covered goals:
   * 1 Strong Mutation 31: gnu.trove.impl.sync.TSynchronizedCharByteMap.put(CB)B:87 - InsertUnaryOp Negation of value
   * 2 Strong Mutation 1: gnu.trove.impl.sync.TSynchronizedCharByteMap.<init>(Lgnu/trove/map/TCharByteMap;Ljava/lang/Object;)V:67 - ReplaceVariable mutex -> mutex
   * 3 Strong Mutation 31: gnu.trove.impl.sync.TSynchronizedCharByteMap.put(CB)B:87 - InsertUnaryOp Negation of value
   */

  @Test
  public void test9()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1305), 0.0F);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0, (Object) "e");
      tSynchronizedCharByteMap0.put('e', (byte) (-47));
      assertEquals(7, tCharByteHashMap0.capacity());
      assertEquals(false, tCharByteHashMap0.isEmpty());
  }

  //Test case number: 10
  /*
   * 22 covered goals:
   * 1 Strong Mutation 40: gnu.trove.impl.sync.TSynchronizedCharByteMap.remove(C)B:90 - DeleteStatement: remove(C)B
   * 2 Strong Mutation 35: gnu.trove.impl.sync.TSynchronizedCharByteMap.remove(C)B:90 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 38: gnu.trove.impl.sync.TSynchronizedCharByteMap.remove(C)B:90 - InsertUnaryOp IINC 1 key
   * 4 Strong Mutation 39: gnu.trove.impl.sync.TSynchronizedCharByteMap.remove(C)B:90 - InsertUnaryOp IINC -1 key
   * 5 Strong Mutation 36: gnu.trove.impl.sync.TSynchronizedCharByteMap.remove(C)B:90 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 6 Strong Mutation 37: gnu.trove.impl.sync.TSynchronizedCharByteMap.remove(C)B:90 - InsertUnaryOp Negation of key
   * 7 Strong Mutation 35: gnu.trove.impl.sync.TSynchronizedCharByteMap.remove(C)B:90 - DeleteField: mutexLjava/lang/Object;
   * 8 Strong Mutation 38: gnu.trove.impl.sync.TSynchronizedCharByteMap.remove(C)B:90 - InsertUnaryOp IINC 1 key
   * 9 Strong Mutation 39: gnu.trove.impl.sync.TSynchronizedCharByteMap.remove(C)B:90 - InsertUnaryOp IINC -1 key
   * 10 Strong Mutation 36: gnu.trove.impl.sync.TSynchronizedCharByteMap.remove(C)B:90 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 11 Strong Mutation 40: gnu.trove.impl.sync.TSynchronizedCharByteMap.remove(C)B:90 - DeleteStatement: remove(C)B
   * 12 Strong Mutation 85: gnu.trove.impl.sync.TSynchronizedCharByteMap.putIfAbsent(CB)B:142 - InsertUnaryOp IINC 1 key
   * 13 Strong Mutation 84: gnu.trove.impl.sync.TSynchronizedCharByteMap.putIfAbsent(CB)B:142 - InsertUnaryOp Negation of key
   * 14 Strong Mutation 87: gnu.trove.impl.sync.TSynchronizedCharByteMap.putIfAbsent(CB)B:142 - InsertUnaryOp Negation of value
   * 15 Strong Mutation 86: gnu.trove.impl.sync.TSynchronizedCharByteMap.putIfAbsent(CB)B:142 - InsertUnaryOp IINC -1 key
   * 16 Strong Mutation 83: gnu.trove.impl.sync.TSynchronizedCharByteMap.putIfAbsent(CB)B:142 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 17 Strong Mutation 82: gnu.trove.impl.sync.TSynchronizedCharByteMap.putIfAbsent(CB)B:142 - DeleteField: mutexLjava/lang/Object;
   * 18 Strong Mutation 89: gnu.trove.impl.sync.TSynchronizedCharByteMap.putIfAbsent(CB)B:142 - InsertUnaryOp IINC -1 value
   * 19 Strong Mutation 88: gnu.trove.impl.sync.TSynchronizedCharByteMap.putIfAbsent(CB)B:142 - InsertUnaryOp IINC 1 value
   * 20 Strong Mutation 90: gnu.trove.impl.sync.TSynchronizedCharByteMap.putIfAbsent(CB)B:142 - DeleteStatement: putIfAbsent(CB)B
   * 21 gnu.trove.impl.sync.TSynchronizedCharByteMap.putIfAbsent(CB)B: root-Branch
   * 22 gnu.trove.impl.sync.TSynchronizedCharByteMap.remove(C)B: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1), 110.29958F);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0, (Object) "/mnt/fastdata/ac1gf/Experiments_Major/apps/trove-3.0.2/\tfO)?KR-Jg*xX46");
      tSynchronizedCharByteMap0.putIfAbsent('y', (byte) (-57));
      assertEquals(1, tCharByteHashMap0.size());
      
      byte byte0 = tSynchronizedCharByteMap0.remove('y');
      assertEquals((byte) (-57), byte0);
  }

  //Test case number: 11
  /*
   * 13 covered goals:
   * 1 Strong Mutation 45: gnu.trove.impl.sync.TSynchronizedCharByteMap.putAll(Lgnu/trove/map/TCharByteMap;)V:96 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 2 Strong Mutation 4: gnu.trove.impl.sync.TSynchronizedCharByteMap.size()I:71 - DeleteStatement: size()I
   * 3 Strong Mutation 46: gnu.trove.impl.sync.TSynchronizedCharByteMap.putAll(Lgnu/trove/map/TCharByteMap;)V:96 - DeleteStatement: putAll(Lgnu/trove/map/TCharByteMap;)V
   * 4 Strong Mutation 44: gnu.trove.impl.sync.TSynchronizedCharByteMap.putAll(Lgnu/trove/map/TCharByteMap;)V:96 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 2: gnu.trove.impl.sync.TSynchronizedCharByteMap.size()I:71 - DeleteField: mutexLjava/lang/Object;
   * 6 Strong Mutation 3: gnu.trove.impl.sync.TSynchronizedCharByteMap.size()I:71 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 7 Strong Mutation 4: gnu.trove.impl.sync.TSynchronizedCharByteMap.size()I:71 - DeleteStatement: size()I
   * 8 Strong Mutation 46: gnu.trove.impl.sync.TSynchronizedCharByteMap.putAll(Lgnu/trove/map/TCharByteMap;)V:96 - DeleteStatement: putAll(Lgnu/trove/map/TCharByteMap;)V
   * 9 Strong Mutation 44: gnu.trove.impl.sync.TSynchronizedCharByteMap.putAll(Lgnu/trove/map/TCharByteMap;)V:96 - DeleteField: mutexLjava/lang/Object;
   * 10 Strong Mutation 45: gnu.trove.impl.sync.TSynchronizedCharByteMap.putAll(Lgnu/trove/map/TCharByteMap;)V:96 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 11 gnu.trove.impl.sync.TSynchronizedCharByteMap.putAll(Lgnu/trove/map/TCharByteMap;)V: root-Branch
   * 12 gnu.trove.impl.sync.TSynchronizedCharByteMap.iterator()Lgnu/trove/iterator/TCharByteIterator;: root-Branch
   * 13 gnu.trove.impl.sync.TSynchronizedCharByteMap.size()I: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1));
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      tSynchronizedCharByteMap0.put('y', (byte)0);
      tSynchronizedCharByteMap0.putAll((TCharByteMap) tSynchronizedCharByteMap0);
      assertEquals(false, tCharByteHashMap0.isEmpty());
      assertEquals(5, tCharByteHashMap0.capacity());
  }

  //Test case number: 12
  /*
   * 7 covered goals:
   * 1 Strong Mutation 48: gnu.trove.impl.sync.TSynchronizedCharByteMap.clear()V:99 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 2 Strong Mutation 47: gnu.trove.impl.sync.TSynchronizedCharByteMap.clear()V:99 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 49: gnu.trove.impl.sync.TSynchronizedCharByteMap.clear()V:99 - DeleteStatement: clear()V
   * 4 Strong Mutation 47: gnu.trove.impl.sync.TSynchronizedCharByteMap.clear()V:99 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 49: gnu.trove.impl.sync.TSynchronizedCharByteMap.clear()V:99 - DeleteStatement: clear()V
   * 6 Strong Mutation 48: gnu.trove.impl.sync.TSynchronizedCharByteMap.clear()V:99 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 7 gnu.trove.impl.sync.TSynchronizedCharByteMap.clear()V: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      char[] charArray0 = new char[1];
      byte[] byteArray0 = new byte[6];
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      tSynchronizedCharByteMap0.clear();
      assertEquals(0, tCharByteHashMap0.size());
      assertEquals(true, tCharByteHashMap0.isEmpty());
  }

  //Test case number: 13
  /*
   * 2 covered goals:
   * 1 Strong Mutation 54: gnu.trove.impl.sync.TSynchronizedCharByteMap.keySet()Lgnu/trove/set/TCharSet;:108 - DeleteStatement: keySet()Lgnu/trove/set/TCharSet;
   * 2 gnu.trove.impl.sync.TSynchronizedCharByteMap.keySet()Lgnu/trove/set/TCharSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test13()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0, (Object) null);
      TSynchronizedCharByteMap tSynchronizedCharByteMap1 = new TSynchronizedCharByteMap((TCharByteMap) tSynchronizedCharByteMap0);
      // Undeclared exception!
      try {
        tSynchronizedCharByteMap1.keySet();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 7 covered goals:
   * 1 Strong Mutation 57: gnu.trove.impl.sync.TSynchronizedCharByteMap.keys()[C:113 - DeleteField: mutexLjava/lang/Object;
   * 2 Strong Mutation 59: gnu.trove.impl.sync.TSynchronizedCharByteMap.keys()[C:113 - DeleteStatement: keys()[C
   * 3 Strong Mutation 58: gnu.trove.impl.sync.TSynchronizedCharByteMap.keys()[C:113 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 4 Strong Mutation 59: gnu.trove.impl.sync.TSynchronizedCharByteMap.keys()[C:113 - DeleteStatement: keys()[C
   * 5 Strong Mutation 58: gnu.trove.impl.sync.TSynchronizedCharByteMap.keys()[C:113 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 6 Strong Mutation 57: gnu.trove.impl.sync.TSynchronizedCharByteMap.keys()[C:113 - DeleteField: mutexLjava/lang/Object;
   * 7 gnu.trove.impl.sync.TSynchronizedCharByteMap.keys()[C: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1991), 10.0F, '~', (byte) (-55));
      Object object0 = new Object();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0, object0);
      char[] charArray0 = tSynchronizedCharByteMap0.keys();
      assertNotNull(charArray0);
  }

  //Test case number: 15
  /*
   * 7 covered goals:
   * 1 Strong Mutation 60: gnu.trove.impl.sync.TSynchronizedCharByteMap.keys([C)[C:116 - DeleteField: mutexLjava/lang/Object;
   * 2 Strong Mutation 62: gnu.trove.impl.sync.TSynchronizedCharByteMap.keys([C)[C:116 - DeleteStatement: keys([C)[C
   * 3 Strong Mutation 61: gnu.trove.impl.sync.TSynchronizedCharByteMap.keys([C)[C:116 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 4 Strong Mutation 62: gnu.trove.impl.sync.TSynchronizedCharByteMap.keys([C)[C:116 - DeleteStatement: keys([C)[C
   * 5 Strong Mutation 61: gnu.trove.impl.sync.TSynchronizedCharByteMap.keys([C)[C:116 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 6 Strong Mutation 60: gnu.trove.impl.sync.TSynchronizedCharByteMap.keys([C)[C:116 - DeleteField: mutexLjava/lang/Object;
   * 7 gnu.trove.impl.sync.TSynchronizedCharByteMap.keys([C)[C: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1305), 0.0F);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0, (Object) "e");
      char[] charArray0 = tSynchronizedCharByteMap0.keys(tCharByteHashMap0._set);
      assertNotNull(charArray0);
  }

  //Test case number: 16
  /*
   * 7 covered goals:
   * 1 Strong Mutation 72: gnu.trove.impl.sync.TSynchronizedCharByteMap.values()[B:127 - DeleteStatement: values()[B
   * 2 Strong Mutation 70: gnu.trove.impl.sync.TSynchronizedCharByteMap.values()[B:127 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 71: gnu.trove.impl.sync.TSynchronizedCharByteMap.values()[B:127 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 4 Strong Mutation 70: gnu.trove.impl.sync.TSynchronizedCharByteMap.values()[B:127 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 71: gnu.trove.impl.sync.TSynchronizedCharByteMap.values()[B:127 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 6 Strong Mutation 72: gnu.trove.impl.sync.TSynchronizedCharByteMap.values()[B:127 - DeleteStatement: values()[B
   * 7 gnu.trove.impl.sync.TSynchronizedCharByteMap.values()[B: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1991), 10.0F, '~', (byte) (-55));
      Object object0 = new Object();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0, object0);
      byte[] byteArray0 = tSynchronizedCharByteMap0.values();
      assertNotNull(byteArray0);
  }

  //Test case number: 17
  /*
   * 7 covered goals:
   * 1 Strong Mutation 75: gnu.trove.impl.sync.TSynchronizedCharByteMap.values([B)[B:130 - DeleteStatement: values([B)[B
   * 2 Strong Mutation 73: gnu.trove.impl.sync.TSynchronizedCharByteMap.values([B)[B:130 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 74: gnu.trove.impl.sync.TSynchronizedCharByteMap.values([B)[B:130 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 4 Strong Mutation 73: gnu.trove.impl.sync.TSynchronizedCharByteMap.values([B)[B:130 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 74: gnu.trove.impl.sync.TSynchronizedCharByteMap.values([B)[B:130 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 6 Strong Mutation 75: gnu.trove.impl.sync.TSynchronizedCharByteMap.values([B)[B:130 - DeleteStatement: values([B)[B
   * 7 gnu.trove.impl.sync.TSynchronizedCharByteMap.values([B)[B: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      byte[] byteArray0 = tSynchronizedCharByteMap0.values(tCharByteHashMap0._states);
      assertNotNull(byteArray0);
  }

  //Test case number: 18
  /*
   * 6 covered goals:
   * 1 Strong Mutation 77: gnu.trove.impl.sync.TSynchronizedCharByteMap.iterator()Lgnu/trove/iterator/TCharByteIterator;:134 - DeleteStatement: iterator()Lgnu/trove/iterator/TCharByteIterator;
   * 2 Strong Mutation 2: gnu.trove.impl.sync.TSynchronizedCharByteMap.size()I:71 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 3: gnu.trove.impl.sync.TSynchronizedCharByteMap.size()I:71 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 4 Strong Mutation 76: gnu.trove.impl.sync.TSynchronizedCharByteMap.iterator()Lgnu/trove/iterator/TCharByteIterator;:134 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 5 Strong Mutation 76: gnu.trove.impl.sync.TSynchronizedCharByteMap.iterator()Lgnu/trove/iterator/TCharByteIterator;:134 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 6 Strong Mutation 77: gnu.trove.impl.sync.TSynchronizedCharByteMap.iterator()Lgnu/trove/iterator/TCharByteIterator;:134 - DeleteStatement: iterator()Lgnu/trove/iterator/TCharByteIterator;
   */

  @Test
  public void test18()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1), 110.29958F);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0, (Object) "/mnt/fastdata/ac1gf/Experiments_Major/apps/trove-3.0.2/\tfO)?KR-Jg*xX46");
      TCharByteHashMap tCharByteHashMap1 = new TCharByteHashMap((TCharByteMap) tSynchronizedCharByteMap0);
      assertTrue(tCharByteHashMap0.equals(tCharByteHashMap1));
  }

  //Test case number: 19
  /*
   * 3 covered goals:
   * 1 Strong Mutation 79: gnu.trove.impl.sync.TSynchronizedCharByteMap.getNoEntryKey()C:138 - DeleteStatement: getNoEntryKey()C
   * 2 gnu.trove.impl.sync.TSynchronizedCharByteMap.getNoEntryKey()C: root-Branch
   * 3 Strong Mutation 79: gnu.trove.impl.sync.TSynchronizedCharByteMap.getNoEntryKey()C:138 - DeleteStatement: getNoEntryKey()C
   */

  @Test
  public void test19()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(150, (-1.0F), 'a', (byte)0);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      char char0 = tSynchronizedCharByteMap0.getNoEntryKey();
      assertEquals('a', char0);
  }

  //Test case number: 20
  /*
   * 3 covered goals:
   * 1 Strong Mutation 81: gnu.trove.impl.sync.TSynchronizedCharByteMap.getNoEntryValue()B:139 - DeleteStatement: getNoEntryValue()B
   * 2 gnu.trove.impl.sync.TSynchronizedCharByteMap.getNoEntryValue()B: root-Branch
   * 3 Strong Mutation 81: gnu.trove.impl.sync.TSynchronizedCharByteMap.getNoEntryValue()B:139 - DeleteStatement: getNoEntryValue()B
   */

  @Test
  public void test20()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(0, (float) 0, '5', (byte)1);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      byte byte0 = tSynchronizedCharByteMap0.getNoEntryValue();
      assertEquals((byte)1, byte0);
  }

  //Test case number: 21
  /*
   * 2 covered goals:
   * 1 Strong Mutation 93: gnu.trove.impl.sync.TSynchronizedCharByteMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z:145 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z
   * 2 gnu.trove.impl.sync.TSynchronizedCharByteMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1935));
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      boolean boolean0 = tSynchronizedCharByteMap0.forEachKey((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 22
  /*
   * 3 covered goals:
   * 1 Strong Mutation 96: gnu.trove.impl.sync.TSynchronizedCharByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:148 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z
   * 2 gnu.trove.impl.sync.TSynchronizedCharByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   * 3 Strong Mutation 96: gnu.trove.impl.sync.TSynchronizedCharByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:148 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z
   */

  @Test
  public void test22()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      boolean boolean0 = tSynchronizedCharByteMap0.forEachValue((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 Strong Mutation 99: gnu.trove.impl.sync.TSynchronizedCharByteMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:151 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z
   * 2 gnu.trove.impl.sync.TSynchronizedCharByteMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z: root-Branch
   * 3 Strong Mutation 99: gnu.trove.impl.sync.TSynchronizedCharByteMap.forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z:151 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TCharByteProcedure;)Z
   */

  @Test
  public void test23()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      boolean boolean0 = tSynchronizedCharByteMap0.forEachEntry((TCharByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 5 covered goals:
   * 1 Strong Mutation 104: gnu.trove.impl.sync.TSynchronizedCharByteMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:157 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 2 Strong Mutation 103: gnu.trove.impl.sync.TSynchronizedCharByteMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:157 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 103: gnu.trove.impl.sync.TSynchronizedCharByteMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:157 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 104: gnu.trove.impl.sync.TSynchronizedCharByteMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z:157 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 5 gnu.trove.impl.sync.TSynchronizedCharByteMap.retainEntries(Lgnu/trove/procedure/TCharByteProcedure;)Z: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(Integer.MAX_VALUE, (-1927.5846F));
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      tSynchronizedCharByteMap0.adjustOrPutValue('L', (byte)109, (byte)109);
      // Undeclared exception!
      try {
        tSynchronizedCharByteMap0.retainEntries((TCharByteProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 13 covered goals:
   * 1 Strong Mutation 107: gnu.trove.impl.sync.TSynchronizedCharByteMap.increment(C)Z:160 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 2 Strong Mutation 110: gnu.trove.impl.sync.TSynchronizedCharByteMap.increment(C)Z:160 - InsertUnaryOp IINC -1 key
   * 3 Strong Mutation 111: gnu.trove.impl.sync.TSynchronizedCharByteMap.increment(C)Z:160 - DeleteStatement: increment(C)Z
   * 4 Strong Mutation 108: gnu.trove.impl.sync.TSynchronizedCharByteMap.increment(C)Z:160 - InsertUnaryOp Negation of key
   * 5 Strong Mutation 109: gnu.trove.impl.sync.TSynchronizedCharByteMap.increment(C)Z:160 - InsertUnaryOp IINC 1 key
   * 6 Strong Mutation 106: gnu.trove.impl.sync.TSynchronizedCharByteMap.increment(C)Z:160 - DeleteField: mutexLjava/lang/Object;
   * 7 Strong Mutation 110: gnu.trove.impl.sync.TSynchronizedCharByteMap.increment(C)Z:160 - InsertUnaryOp IINC -1 key
   * 8 Strong Mutation 111: gnu.trove.impl.sync.TSynchronizedCharByteMap.increment(C)Z:160 - DeleteStatement: increment(C)Z
   * 9 Strong Mutation 108: gnu.trove.impl.sync.TSynchronizedCharByteMap.increment(C)Z:160 - InsertUnaryOp Negation of key
   * 10 Strong Mutation 109: gnu.trove.impl.sync.TSynchronizedCharByteMap.increment(C)Z:160 - InsertUnaryOp IINC 1 key
   * 11 Strong Mutation 106: gnu.trove.impl.sync.TSynchronizedCharByteMap.increment(C)Z:160 - DeleteField: mutexLjava/lang/Object;
   * 12 Strong Mutation 107: gnu.trove.impl.sync.TSynchronizedCharByteMap.increment(C)Z:160 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 13 gnu.trove.impl.sync.TSynchronizedCharByteMap.increment(C)Z: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[20];
      charArray0[0] = 'A';
      byte[] byteArray0 = new byte[6];
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0, (Object) "{}");
      boolean boolean0 = tSynchronizedCharByteMap0.increment('A');
      assertEquals("{A=1, \u0000=0}", tCharByteHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 26
  /*
   * 17 covered goals:
   * 1 Strong Mutation 112: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustValue(CB)Z:163 - DeleteField: mutexLjava/lang/Object;
   * 2 Strong Mutation 119: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustValue(CB)Z:163 - InsertUnaryOp IINC -1 amount
   * 3 Strong Mutation 118: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustValue(CB)Z:163 - InsertUnaryOp IINC 1 amount
   * 4 Strong Mutation 117: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustValue(CB)Z:163 - InsertUnaryOp Negation of amount
   * 5 Strong Mutation 116: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustValue(CB)Z:163 - InsertUnaryOp IINC -1 key
   * 6 Strong Mutation 115: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustValue(CB)Z:163 - InsertUnaryOp IINC 1 key
   * 7 Strong Mutation 114: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustValue(CB)Z:163 - InsertUnaryOp Negation of key
   * 8 Strong Mutation 113: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustValue(CB)Z:163 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 9 Strong Mutation 119: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustValue(CB)Z:163 - InsertUnaryOp IINC -1 amount
   * 10 Strong Mutation 118: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustValue(CB)Z:163 - InsertUnaryOp IINC 1 amount
   * 11 Strong Mutation 117: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustValue(CB)Z:163 - InsertUnaryOp Negation of amount
   * 12 Strong Mutation 116: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustValue(CB)Z:163 - InsertUnaryOp IINC -1 key
   * 13 Strong Mutation 115: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustValue(CB)Z:163 - InsertUnaryOp IINC 1 key
   * 14 Strong Mutation 114: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustValue(CB)Z:163 - InsertUnaryOp Negation of key
   * 15 Strong Mutation 113: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustValue(CB)Z:163 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 16 Strong Mutation 112: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustValue(CB)Z:163 - DeleteField: mutexLjava/lang/Object;
   * 17 gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustValue(CB)Z: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      tSynchronizedCharByteMap0.put('3', (byte)0);
      boolean boolean0 = tSynchronizedCharByteMap0.adjustValue('3', (byte) (-65));
      assertEquals(1, tCharByteHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 27
  /*
   * 5 covered goals:
   * 1 Strong Mutation 127: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - InsertUnaryOp Negation of adjust_amount
   * 2 Strong Mutation 127: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - InsertUnaryOp Negation of adjust_amount
   * 3 Strong Mutation 126: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - ReplaceVariable adjust_amount -> put_amount
   * 4 Strong Mutation 129: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - InsertUnaryOp IINC -1 adjust_amount
   * 5 Strong Mutation 128: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - InsertUnaryOp IINC 1 adjust_amount
   */

  @Test
  public void test27()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[4] = 'L';
      byte[] byteArray0 = new byte[10];
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap(charArray0, byteArray0);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      byte byte0 = tSynchronizedCharByteMap0.adjustOrPutValue('L', (byte) (-1), (byte)0);
      assertEquals("{L=-1, \u0000=0}", tCharByteHashMap0.toString());
      assertEquals((byte) (-1), byte0);
  }

  //Test case number: 28
  /*
   * 11 covered goals:
   * 1 Strong Mutation 128: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - InsertUnaryOp IINC 1 adjust_amount
   * 2 Strong Mutation 27: gnu.trove.impl.sync.TSynchronizedCharByteMap.put(CB)B:87 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 3 Strong Mutation 26: gnu.trove.impl.sync.TSynchronizedCharByteMap.put(CB)B:87 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 29: gnu.trove.impl.sync.TSynchronizedCharByteMap.put(CB)B:87 - InsertUnaryOp IINC 1 key
   * 5 Strong Mutation 28: gnu.trove.impl.sync.TSynchronizedCharByteMap.put(CB)B:87 - InsertUnaryOp Negation of key
   * 6 Strong Mutation 30: gnu.trove.impl.sync.TSynchronizedCharByteMap.put(CB)B:87 - InsertUnaryOp IINC -1 key
   * 7 Strong Mutation 34: gnu.trove.impl.sync.TSynchronizedCharByteMap.put(CB)B:87 - DeleteStatement: put(CB)B
   * 8 Strong Mutation 32: gnu.trove.impl.sync.TSynchronizedCharByteMap.put(CB)B:87 - InsertUnaryOp IINC 1 value
   * 9 Strong Mutation 33: gnu.trove.impl.sync.TSynchronizedCharByteMap.put(CB)B:87 - InsertUnaryOp IINC -1 value
   * 10 Strong Mutation 126: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - ReplaceVariable adjust_amount -> put_amount
   * 11 Strong Mutation 129: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - InsertUnaryOp IINC -1 adjust_amount
   */

  @Test
  public void test28()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0, (Object) ",4%W");
      tSynchronizedCharByteMap0.put('!', (byte)0);
      byte byte0 = tSynchronizedCharByteMap0.adjustOrPutValue('!', (byte)0, (byte) (-113));
      assertEquals(1, tCharByteHashMap0.size());
      assertEquals((byte)0, byte0);
  }

  //Test case number: 29
  /*
   * 10 covered goals:
   * 1 Strong Mutation 134: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - DeleteStatement: adjustOrPutValue(CBB)B
   * 2 Strong Mutation 125: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - InsertUnaryOp IINC -1 key
   * 3 Strong Mutation 124: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - InsertUnaryOp IINC 1 key
   * 4 Strong Mutation 123: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - InsertUnaryOp Negation of key
   * 5 Strong Mutation 122: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 6 Strong Mutation 121: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - DeleteField: mutexLjava/lang/Object;
   * 7 Strong Mutation 131: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - InsertUnaryOp Negation of put_amount
   * 8 Strong Mutation 130: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - ReplaceVariable put_amount -> adjust_amount
   * 9 Strong Mutation 133: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - InsertUnaryOp IINC -1 put_amount
   * 10 Strong Mutation 132: gnu.trove.impl.sync.TSynchronizedCharByteMap.adjustOrPutValue(CBB)B:166 - InsertUnaryOp IINC 1 put_amount
   */

  @Test
  public void test29()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1801), (-1801));
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      byte byte0 = tSynchronizedCharByteMap0.adjustOrPutValue('4', (byte) (-72), (byte)117);
      assertEquals(7, tCharByteHashMap0.capacity());
      assertEquals((byte)117, byte0);
  }

  //Test case number: 30
  /*
   * 5 covered goals:
   * 1 Strong Mutation 138: gnu.trove.impl.sync.TSynchronizedCharByteMap.equals(Ljava/lang/Object;)Z:170 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 2 Strong Mutation 137: gnu.trove.impl.sync.TSynchronizedCharByteMap.equals(Ljava/lang/Object;)Z:170 - ReplaceVariable o -> mutex
   * 3 Strong Mutation 137: gnu.trove.impl.sync.TSynchronizedCharByteMap.equals(Ljava/lang/Object;)Z:170 - ReplaceVariable o -> mutex
   * 4 Strong Mutation 138: gnu.trove.impl.sync.TSynchronizedCharByteMap.equals(Ljava/lang/Object;)Z:170 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 5 gnu.trove.impl.sync.TSynchronizedCharByteMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test30()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1), 110.29958F);
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0, (Object) "/mnt/fastdata/ac1gf/Experiments_Major/apps/trove-3.0.2/\tfO)?KR-Jg*xX46");
      TSynchronizedCharByteMap tSynchronizedCharByteMap1 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0, (Object) "");
      tSynchronizedCharByteMap1.equals((Object) null);
      assertTrue(tSynchronizedCharByteMap1.equals(tSynchronizedCharByteMap0));
  }

  //Test case number: 31
  /*
   * 12 covered goals:
   * 1 Strong Mutation 141: gnu.trove.impl.sync.TSynchronizedCharByteMap.hashCode()I:173 - DeleteStatement: hashCode()I
   * 2 gnu.trove.impl.sync.TSynchronizedCharByteMap.hashCode()I: root-Branch
   * 3 Strong Mutation 85: gnu.trove.impl.sync.TSynchronizedCharByteMap.putIfAbsent(CB)B:142 - InsertUnaryOp IINC 1 key
   * 4 Strong Mutation 84: gnu.trove.impl.sync.TSynchronizedCharByteMap.putIfAbsent(CB)B:142 - InsertUnaryOp Negation of key
   * 5 Strong Mutation 87: gnu.trove.impl.sync.TSynchronizedCharByteMap.putIfAbsent(CB)B:142 - InsertUnaryOp Negation of value
   * 6 Strong Mutation 86: gnu.trove.impl.sync.TSynchronizedCharByteMap.putIfAbsent(CB)B:142 - InsertUnaryOp IINC -1 key
   * 7 Strong Mutation 83: gnu.trove.impl.sync.TSynchronizedCharByteMap.putIfAbsent(CB)B:142 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 8 Strong Mutation 82: gnu.trove.impl.sync.TSynchronizedCharByteMap.putIfAbsent(CB)B:142 - DeleteField: mutexLjava/lang/Object;
   * 9 Strong Mutation 89: gnu.trove.impl.sync.TSynchronizedCharByteMap.putIfAbsent(CB)B:142 - InsertUnaryOp IINC -1 value
   * 10 Strong Mutation 88: gnu.trove.impl.sync.TSynchronizedCharByteMap.putIfAbsent(CB)B:142 - InsertUnaryOp IINC 1 value
   * 11 Strong Mutation 90: gnu.trove.impl.sync.TSynchronizedCharByteMap.putIfAbsent(CB)B:142 - DeleteStatement: putIfAbsent(CB)B
   * 12 Strong Mutation 141: gnu.trove.impl.sync.TSynchronizedCharByteMap.hashCode()I:173 - DeleteStatement: hashCode()I
   */

  @Test
  public void test31()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      tSynchronizedCharByteMap0.putIfAbsent('*', (byte)1);
      int int0 = tSynchronizedCharByteMap0.hashCode();
      assertEquals(false, tCharByteHashMap0.isEmpty());
      assertEquals(43, int0);
  }

  //Test case number: 32
  /*
   * 7 covered goals:
   * 1 Strong Mutation 144: gnu.trove.impl.sync.TSynchronizedCharByteMap.toString()Ljava/lang/String;:176 - DeleteStatement: toString()Ljava/lang/String;
   * 2 Strong Mutation 143: gnu.trove.impl.sync.TSynchronizedCharByteMap.toString()Ljava/lang/String;:176 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 3 Strong Mutation 142: gnu.trove.impl.sync.TSynchronizedCharByteMap.toString()Ljava/lang/String;:176 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 143: gnu.trove.impl.sync.TSynchronizedCharByteMap.toString()Ljava/lang/String;:176 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 5 Strong Mutation 142: gnu.trove.impl.sync.TSynchronizedCharByteMap.toString()Ljava/lang/String;:176 - DeleteField: mutexLjava/lang/Object;
   * 6 Strong Mutation 144: gnu.trove.impl.sync.TSynchronizedCharByteMap.toString()Ljava/lang/String;:176 - DeleteStatement: toString()Ljava/lang/String;
   * 7 gnu.trove.impl.sync.TSynchronizedCharByteMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test32()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap((-1840));
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      String string0 = tSynchronizedCharByteMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 33
  /*
   * 10 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.keySet()Lgnu/trove/set/TCharSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 Strong Mutation 1: gnu.trove.impl.sync.TSynchronizedCharByteMap.<init>(Lgnu/trove/map/TCharByteMap;Ljava/lang/Object;)V:67 - ReplaceVariable mutex -> mutex
   * 3 Strong Mutation 50: gnu.trove.impl.sync.TSynchronizedCharByteMap.keySet()Lgnu/trove/set/TCharSet;:106 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 53: gnu.trove.impl.sync.TSynchronizedCharByteMap.keySet()Lgnu/trove/set/TCharSet;:108 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 5 Strong Mutation 52: gnu.trove.impl.sync.TSynchronizedCharByteMap.keySet()Lgnu/trove/set/TCharSet;:107 - ReplaceComparisonOperator != null -> = null
   * 6 Strong Mutation 56: gnu.trove.impl.sync.TSynchronizedCharByteMap.keySet()Lgnu/trove/set/TCharSet;:109 - DeleteField: keySetLgnu/trove/set/TCharSet;
   * 7 Strong Mutation 50: gnu.trove.impl.sync.TSynchronizedCharByteMap.keySet()Lgnu/trove/set/TCharSet;:106 - DeleteField: mutexLjava/lang/Object;
   * 8 Strong Mutation 53: gnu.trove.impl.sync.TSynchronizedCharByteMap.keySet()Lgnu/trove/set/TCharSet;:108 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 9 Strong Mutation 52: gnu.trove.impl.sync.TSynchronizedCharByteMap.keySet()Lgnu/trove/set/TCharSet;:107 - ReplaceComparisonOperator != null -> = null
   * 10 Strong Mutation 56: gnu.trove.impl.sync.TSynchronizedCharByteMap.keySet()Lgnu/trove/set/TCharSet;:109 - DeleteField: keySetLgnu/trove/set/TCharSet;
   */

  @Test
  public void test33()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      Object object0 = new Object();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0, object0);
      TSynchronizedCharSet tSynchronizedCharSet0 = (TSynchronizedCharSet)tSynchronizedCharByteMap0.keySet();
      assertNotNull(tSynchronizedCharSet0);
      
      TSynchronizedCharSet tSynchronizedCharSet1 = (TSynchronizedCharSet)tSynchronizedCharByteMap0.keySet();
      assertSame(tSynchronizedCharSet1, tSynchronizedCharSet0);
  }

  //Test case number: 34
  /*
   * 11 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharByteMap.valueCollection()Lgnu/trove/TByteCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 Strong Mutation 0: gnu.trove.impl.sync.TSynchronizedCharByteMap.<init>(Lgnu/trove/map/TCharByteMap;)V:59 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 63: gnu.trove.impl.sync.TSynchronizedCharByteMap.valueCollection()Lgnu/trove/TByteCollection;:120 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 69: gnu.trove.impl.sync.TSynchronizedCharByteMap.valueCollection()Lgnu/trove/TByteCollection;:123 - DeleteField: valuesLgnu/trove/TByteCollection;
   * 5 Strong Mutation 65: gnu.trove.impl.sync.TSynchronizedCharByteMap.valueCollection()Lgnu/trove/TByteCollection;:121 - ReplaceComparisonOperator != null -> = null
   * 6 Strong Mutation 66: gnu.trove.impl.sync.TSynchronizedCharByteMap.valueCollection()Lgnu/trove/TByteCollection;:122 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 7 Strong Mutation 63: gnu.trove.impl.sync.TSynchronizedCharByteMap.valueCollection()Lgnu/trove/TByteCollection;:120 - DeleteField: mutexLjava/lang/Object;
   * 8 Strong Mutation 69: gnu.trove.impl.sync.TSynchronizedCharByteMap.valueCollection()Lgnu/trove/TByteCollection;:123 - DeleteField: valuesLgnu/trove/TByteCollection;
   * 9 Strong Mutation 65: gnu.trove.impl.sync.TSynchronizedCharByteMap.valueCollection()Lgnu/trove/TByteCollection;:121 - ReplaceComparisonOperator != null -> = null
   * 10 Strong Mutation 66: gnu.trove.impl.sync.TSynchronizedCharByteMap.valueCollection()Lgnu/trove/TByteCollection;:122 - DeleteField: mLgnu/trove/map/TCharByteMap;
   * 11 gnu.trove.impl.sync.TSynchronizedCharByteMap.valueCollection()Lgnu/trove/TByteCollection;: I11 Branch 3 IFNONNULL L121 - false
   */

  @Test
  public void test34()  throws Throwable  {
      TCharByteHashMap tCharByteHashMap0 = new TCharByteHashMap();
      TSynchronizedCharByteMap tSynchronizedCharByteMap0 = new TSynchronizedCharByteMap((TCharByteMap) tCharByteHashMap0);
      TSynchronizedByteCollection tSynchronizedByteCollection0 = (TSynchronizedByteCollection)tSynchronizedCharByteMap0.valueCollection();
      assertNotNull(tSynchronizedByteCollection0);
      
      TSynchronizedByteCollection tSynchronizedByteCollection1 = (TSynchronizedByteCollection)tSynchronizedCharByteMap0.valueCollection();
      assertSame(tSynchronizedByteCollection1, tSynchronizedByteCollection0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.stack.array;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.stack.TFloatStack;
import gnu.trove.stack.array.TFloatArrayStack;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TFloatArrayStackEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 gnu.trove.stack.array.TFloatArrayStack.peek()F: root-Branch
   * 2 gnu.trove.stack.array.TFloatArrayStack.<init>()V: root-Branch
   * 3 gnu.trove.stack.array.TFloatArrayStack.<init>(I)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      // Undeclared exception!
      try {
        tFloatArrayStack0.peek();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.stack.array.TFloatArrayStack.getNoEntryValue()F: root-Branch
   */

//   @Test
//   public void test1()  throws Throwable  {
//       TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
//       float float0 = tFloatArrayStack0.getNoEntryValue();
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.stack.array.TFloatArrayStack.clear()V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      tFloatArrayStack0.clear();
      assertEquals("{}", tFloatArrayStack0.toString());
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.stack.array.TFloatArrayStack.hashCode()I: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      int int0 = tFloatArrayStack0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 4
  /*
   * 8 covered goals:
   * 1 gnu.trove.stack.array.TFloatArrayStack.swap([FII)V: root-Branch
   * 2 gnu.trove.stack.array.TFloatArrayStack.push(F)V: root-Branch
   * 3 gnu.trove.stack.array.TFloatArrayStack.size()I: root-Branch
   * 4 gnu.trove.stack.array.TFloatArrayStack.toArray()[F: root-Branch
   * 5 gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V: I4 Branch 4 IF_ICMPNE L205 - true
   * 6 gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V: I12 Branch 5 IF_ICMPLE L208 - true
   * 7 gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V: I32 Branch 6 IF_ICMPGE L211 - true
   * 8 gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V: I32 Branch 6 IF_ICMPGE L211 - false
   */

  @Test
  public void test4()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      tFloatArrayStack0.push((float) 0);
      tFloatArrayStack0.push((float) 0);
      float[] floatArray0 = tFloatArrayStack0.toArray();
      assertEquals(2, tFloatArrayStack0.size());
      assertNotNull(floatArray0);
      assertEquals("{0.0, 0.0}", tFloatArrayStack0.toString());
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 gnu.trove.stack.array.TFloatArrayStack.readExternal(Ljava/io/ObjectInput;)V: root-Branch
   * 2 gnu.trove.stack.array.TFloatArrayStack.<init>(IF)V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack(618, 618);
      // Undeclared exception!
      try {
        tFloatArrayStack0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.stack.array.TFloatArrayStack.pop()F: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      // Undeclared exception!
      try {
        tFloatArrayStack0.pop();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.stack.array.TFloatArrayStack.writeExternal(Ljava/io/ObjectOutput;)V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      // Undeclared exception!
      try {
        tFloatArrayStack0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.stack.array.TFloatArrayStack.<init>(Lgnu/trove/stack/TFloatStack;)V: I8 Branch 1 IFEQ L90 - true
   */

  @Test
  public void test8()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = null;
      try {
        tFloatArrayStack0 = new TFloatArrayStack((TFloatStack) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Only support TFloatArrayStack
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.stack.array.TFloatArrayStack.<init>(Lgnu/trove/stack/TFloatStack;)V: I8 Branch 1 IFEQ L90 - false
   */

  @Test
  public void test9()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      TFloatArrayStack tFloatArrayStack1 = new TFloatArrayStack((TFloatStack) tFloatArrayStack0);
      assertTrue(tFloatArrayStack1.equals(tFloatArrayStack0));
  }

  //Test case number: 10
  /*
   * 4 covered goals:
   * 1 gnu.trove.stack.array.TFloatArrayStack.toArray([F)V: I15 Branch 2 IFGE L184 - true
   * 2 gnu.trove.stack.array.TFloatArrayStack.toArray([F)V: I48 Branch 3 IF_ICMPLE L191 - true
   * 3 gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V: I4 Branch 4 IF_ICMPNE L205 - false
   * 4 gnu.trove.stack.array.TFloatArrayStack.toArray()[F: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      float[] floatArray0 = tFloatArrayStack0.toArray();
      tFloatArrayStack0.toArray(floatArray0);
      assertEquals("{}", tFloatArrayStack0.toString());
  }

  //Test case number: 11
  /*
   * 3 covered goals:
   * 1 gnu.trove.stack.array.TFloatArrayStack.toArray([F)V: I15 Branch 2 IFGE L184 - false
   * 2 gnu.trove.stack.array.TFloatArrayStack.toArray([F)V: I48 Branch 3 IF_ICMPLE L191 - false
   * 3 gnu.trove.stack.array.TFloatArrayStack.reverse([FII)V: I4 Branch 4 IF_ICMPNE L205 - false
   */

//   @Test
//   public void test11()  throws Throwable  {
//       TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack(966);
//       float[] floatArray0 = new float[1];
//       tFloatArrayStack0.toArray(floatArray0);
//       assertEquals(0.0F, tFloatArrayStack0.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 12
  /*
   * 2 covered goals:
   * 1 gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;: I17 Branch 7 IFLE L238 - true
   * 2 gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;: I41 Branch 8 IFLE L242 - true
   */

  @Test
  public void test12()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      String string0 = tFloatArrayStack0.toString();
      assertNotNull(string0);
      assertEquals("{}", string0);
  }

  //Test case number: 13
  /*
   * 5 covered goals:
   * 1 gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;: I17 Branch 7 IFLE L238 - false
   * 2 gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;: I41 Branch 8 IFLE L242 - false
   * 3 gnu.trove.stack.array.TFloatArrayStack.push(F)V: root-Branch
   * 4 gnu.trove.stack.array.TFloatArrayStack.size()I: root-Branch
   * 5 gnu.trove.stack.array.TFloatArrayStack.toString()Ljava/lang/String;: I17 Branch 7 IFLE L238 - true
   */

  @Test
  public void test13()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      tFloatArrayStack0.push((float) 0);
      tFloatArrayStack0.push((float) 0);
      String string0 = tFloatArrayStack0.toString();
      assertNotNull(string0);
      assertEquals(2, tFloatArrayStack0.size());
      assertEquals("{0.0, 0.0}", string0);
  }

  //Test case number: 14
  /*
   * 2 covered goals:
   * 1 gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z: I4 Branch 9 IF_ACMPNE L251 - true
   * 2 gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z: I12 Branch 10 IFNULL L254 - true
   */

  @Test
  public void test14()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      boolean boolean0 = tFloatArrayStack0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 15
  /*
   * 3 covered goals:
   * 1 gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z: I12 Branch 10 IFNULL L254 - false
   * 2 gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z: I17 Branch 11 IF_ACMPEQ L254 - true
   * 3 gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z: I4 Branch 9 IF_ACMPNE L251 - false
   */

  @Test
  public void test15()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      TFloatArrayStack tFloatArrayStack1 = new TFloatArrayStack(33461);
      boolean boolean0 = tFloatArrayStack0.equals((Object) tFloatArrayStack1);
      assertEquals(true, boolean0);
  }

  //Test case number: 16
  /*
   * 5 covered goals:
   * 1 gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z: I17 Branch 11 IF_ACMPEQ L254 - false
   * 2 gnu.trove.stack.array.TFloatArrayStack.<init>()V: root-Branch
   * 3 gnu.trove.stack.array.TFloatArrayStack.<init>(I)V: root-Branch
   * 4 gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z: I4 Branch 9 IF_ACMPNE L251 - true
   * 5 gnu.trove.stack.array.TFloatArrayStack.equals(Ljava/lang/Object;)Z: I12 Branch 10 IFNULL L254 - false
   */

  @Test
  public void test16()  throws Throwable  {
      TFloatArrayStack tFloatArrayStack0 = new TFloatArrayStack();
      boolean boolean0 = tFloatArrayStack0.equals((Object) "{-1755.4918}");
      assertEquals(false, boolean0);
  }
}

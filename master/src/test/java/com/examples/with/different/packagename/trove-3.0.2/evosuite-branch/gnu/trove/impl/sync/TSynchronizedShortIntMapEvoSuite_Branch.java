/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TIntFunction;
import gnu.trove.impl.sync.TSynchronizedIntCollection;
import gnu.trove.impl.sync.TSynchronizedShortIntMap;
import gnu.trove.impl.sync.TSynchronizedShortSet;
import gnu.trove.iterator.TShortIntIterator;
import gnu.trove.map.TShortIntMap;
import gnu.trove.map.hash.TShortIntHashMap;
import gnu.trove.procedure.TIntProcedure;
import gnu.trove.procedure.TShortIntProcedure;
import gnu.trove.procedure.TShortProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedShortIntMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.values([I)[I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedShortIntMap.<init>(Lgnu/trove/map/TShortIntMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0);
      int[] intArray0 = new int[2];
      int[] intArray1 = tSynchronizedShortIntMap0.values(intArray0);
      assertSame(intArray1, intArray0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.keys([S)[S: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0);
      short[] shortArray0 = tSynchronizedShortIntMap0.keys(tShortIntHashMap0._set);
      assertNotNull(shortArray0);
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.get(S)I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedShortIntMap.<init>(Lgnu/trove/map/TShortIntMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(24, (float) 24, (short)1299, 24);
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0, (Object) "{}");
      int int0 = tSynchronizedShortIntMap0.get((short)1299);
      assertEquals(24, int0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0);
      boolean boolean0 = tSynchronizedShortIntMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.iterator()Lgnu/trove/iterator/TShortIntIterator;: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0);
      TShortIntIterator tShortIntIterator0 = tSynchronizedShortIntMap0.iterator();
      assertEquals(false, tShortIntIterator0.hasNext());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.remove(S)I: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(24, (float) 24, (short)1299, 24);
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0, (Object) "{}");
      int int0 = tSynchronizedShortIntMap0.remove((short)1299);
      assertEquals(24, int0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.putAll(Lgnu/trove/map/TShortIntMap;)V: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap((int) (short)97, (float) (short)97, (short)0, (int) (short)0);
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0, (Object) "");
      tSynchronizedShortIntMap0.putAll((TShortIntMap) tShortIntHashMap0);
      assertEquals(true, tShortIntHashMap0.isEmpty());
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.retainEntries(Lgnu/trove/procedure/TShortIntProcedure;)Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0);
      boolean boolean0 = tSynchronizedShortIntMap0.retainEntries((TShortIntProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.adjustValue(SI)Z: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0);
      boolean boolean0 = tSynchronizedShortIntMap0.adjustValue((short) (-18), 0);
      assertEquals(false, boolean0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap((int) (short)97, (float) (short)97, (short)0, (int) (short)0);
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0, (Object) "");
      boolean boolean0 = tSynchronizedShortIntMap0.equals((Object) (short)97);
      assertEquals(false, boolean0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.values()[I: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap((-516), (-516));
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0);
      int[] intArray0 = tSynchronizedShortIntMap0.values();
      assertNotNull(intArray0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.size()I: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(24, (float) 24, (short)1299, 24);
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0, (Object) "{}");
      int int0 = tSynchronizedShortIntMap0.size();
      assertEquals(0, int0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.putIfAbsent(SI)I: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap((int) (short)97, (float) (short)97, (short)0, (int) (short)0);
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0, (Object) "");
      tSynchronizedShortIntMap0.putIfAbsent((short)0, (short)97);
      assertEquals(false, tShortIntHashMap0.isEmpty());
      assertEquals("{0=97}", tShortIntHashMap0.toString());
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.hashCode()I: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0);
      int int0 = tSynchronizedShortIntMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.adjustOrPutValue(SII)I: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(24, (float) 24, (short)1299, 24);
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0, (Object) "{}");
      int int0 = tSynchronizedShortIntMap0.adjustOrPutValue((short)1299, (short)1299, (short)1299);
      assertEquals(false, tShortIntHashMap0.isEmpty());
      assertEquals(1299, int0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.forEachEntry(Lgnu/trove/procedure/TShortIntProcedure;)Z: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0);
      boolean boolean0 = tSynchronizedShortIntMap0.forEachEntry((TShortIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0, (Object) tShortIntHashMap0);
      boolean boolean0 = tSynchronizedShortIntMap0.forEachValue((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap((-373));
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0);
      String string0 = tSynchronizedShortIntMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.put(SI)I: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap((-516), (-516));
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0);
      tSynchronizedShortIntMap0.put((short)1187, (short)1187);
      assertEquals(1, tShortIntHashMap0.size());
      assertEquals("{1187=1187}", tShortIntHashMap0.toString());
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.getNoEntryValue()I: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap((-373));
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0);
      int int0 = tSynchronizedShortIntMap0.getNoEntryValue();
      assertEquals(0, int0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.putAll(Ljava/util/Map;)V: root-Branch
   */

//   @Test
//   public void test20()  throws Throwable  {
//       short[] shortArray0 = new short[1];
//       int[] intArray0 = new int[2];
//       TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(shortArray0, intArray0);
//       TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0, (Object) "");
//       HashMap<Short, Integer> hashMap0 = new HashMap<Short, Integer>();
//       tSynchronizedShortIntMap0.putAll((Map<? extends Short, ? extends Integer>) hashMap0);
//       assertEquals(0, tSynchronizedShortIntMap0.getNoEntryKey());
//   }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.keys()[S: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      short[] shortArray0 = new short[1];
      int[] intArray0 = new int[2];
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(shortArray0, intArray0);
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0, (Object) "");
      short[] shortArray1 = tSynchronizedShortIntMap0.keys();
      assertNotSame(shortArray1, shortArray0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.containsKey(S)Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap((-373));
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0);
      boolean boolean0 = tSynchronizedShortIntMap0.containsKey((short)0);
      assertEquals(false, boolean0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.increment(S)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap((-516), (-516));
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0);
      boolean boolean0 = tSynchronizedShortIntMap0.increment((short)1187);
      assertEquals(false, boolean0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.containsValue(I)Z: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap((-373));
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0);
      Integer integer0 = new Integer((-373));
      boolean boolean0 = tSynchronizedShortIntMap0.containsValue((int) integer0);
      assertEquals(false, boolean0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.clear()V: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap((-373));
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0);
      tSynchronizedShortIntMap0.clear();
      assertEquals(0, tSynchronizedShortIntMap0.getNoEntryValue());
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.getNoEntryKey()S: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap((-373));
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0);
      short short0 = tSynchronizedShortIntMap0.getNoEntryKey();
      assertEquals((short)0, short0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0);
      boolean boolean0 = tSynchronizedShortIntMap0.forEachKey((TShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.transformValues(Lgnu/trove/function/TIntFunction;)V: root-Branch
   */

//   @Test
//   public void test28()  throws Throwable  {
//       TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap();
//       TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0);
//       tSynchronizedShortIntMap0.transformValues((TIntFunction) null);
//       assertEquals(0, tSynchronizedShortIntMap0.getNoEntryKey());
//   }

  //Test case number: 29
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.<init>(Lgnu/trove/map/TShortIntMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = null;
      try {
        tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.keySet()Lgnu/trove/set/TShortSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedShortIntMap.keySet()Lgnu/trove/set/TShortSet;: I11 Branch 2 IFNONNULL L107 - false
   * 3 gnu.trove.impl.sync.TSynchronizedShortIntMap.<init>(Lgnu/trove/map/TShortIntMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test30()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap(24, (float) 24, (short)1299, 24);
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0, (Object) "{}");
      TSynchronizedShortSet tSynchronizedShortSet0 = (TSynchronizedShortSet)tSynchronizedShortIntMap0.keySet();
      assertNotNull(tSynchronizedShortSet0);
      
      TSynchronizedShortSet tSynchronizedShortSet1 = (TSynchronizedShortSet)tSynchronizedShortIntMap0.keySet();
      assertSame(tSynchronizedShortSet1, tSynchronizedShortSet0);
  }

  //Test case number: 31
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedShortIntMap.valueCollection()Lgnu/trove/TIntCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 gnu.trove.impl.sync.TSynchronizedShortIntMap.valueCollection()Lgnu/trove/TIntCollection;: I11 Branch 3 IFNONNULL L121 - false
   * 3 gnu.trove.impl.sync.TSynchronizedShortIntMap.<init>(Lgnu/trove/map/TShortIntMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TShortIntHashMap tShortIntHashMap0 = new TShortIntHashMap((-373));
      TSynchronizedShortIntMap tSynchronizedShortIntMap0 = new TSynchronizedShortIntMap((TShortIntMap) tShortIntHashMap0);
      TSynchronizedIntCollection tSynchronizedIntCollection0 = (TSynchronizedIntCollection)tSynchronizedShortIntMap0.valueCollection();
      assertNotNull(tSynchronizedIntCollection0);
      
      TSynchronizedIntCollection tSynchronizedIntCollection1 = (TSynchronizedIntCollection)tSynchronizedShortIntMap0.valueCollection();
      assertSame(tSynchronizedIntCollection1, tSynchronizedIntCollection0);
  }
}

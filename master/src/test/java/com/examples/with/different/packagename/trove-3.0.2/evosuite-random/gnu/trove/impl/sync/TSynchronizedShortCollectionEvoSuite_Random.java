/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TShortCollection;
import gnu.trove.impl.sync.TSynchronizedRandomAccessShortList;
import gnu.trove.impl.sync.TSynchronizedShortCollection;
import gnu.trove.impl.sync.TSynchronizedShortList;
import gnu.trove.impl.sync.TSynchronizedShortSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessShortList;
import gnu.trove.list.TShortList;
import gnu.trove.list.array.TShortArrayList;
import gnu.trove.list.linked.TShortLinkedList;
import gnu.trove.procedure.TShortProcedure;
import gnu.trove.set.TShortSet;
import gnu.trove.set.hash.TShortHashSet;
import java.io.File;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.StringTokenizer;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedShortCollectionEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = 1337;
      short short0 = (short)1170;
      TShortArrayList tShortArrayList0 = new TShortArrayList(int0, short0);
      String string0 = "=;&";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 0: =;&:=;&#=;&
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = (-1553);
      TShortArrayList tShortArrayList0 = null;
      try {
        tShortArrayList0 = new TShortArrayList(int0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = 0;
      TShortList tShortList0 = null;
      Object object0 = new Object();
      TSynchronizedShortList tSynchronizedShortList0 = new TSynchronizedShortList(tShortList0, object0);
      short short0 = (short)1468;
      // Undeclared exception!
      try {
        tSynchronizedShortList0.add(short0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList();
      TSynchronizedShortCollection tSynchronizedShortCollection0 = new TSynchronizedShortCollection((TShortCollection) tShortArrayList0);
      short[] shortArray0 = new short[1];
      short short0 = (short)0;
      shortArray0[0] = short0;
      tSynchronizedShortCollection0.removeAll(shortArray0);
      tSynchronizedShortCollection0.toArray();
      TShortArrayList tShortArrayList1 = new TShortArrayList();
      Object object0 = null;
      TSynchronizedShortCollection tSynchronizedShortCollection1 = new TSynchronizedShortCollection((TShortCollection) tShortArrayList1, object0);
      // Undeclared exception!
      try {
        tSynchronizedShortCollection1.addAll((TShortCollection) tShortArrayList1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TShortHashSet tShortHashSet0 = new TShortHashSet();
      TSynchronizedShortCollection tSynchronizedShortCollection0 = new TSynchronizedShortCollection((TShortCollection) tShortHashSet0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      tSynchronizedShortCollection0.retainAll((Collection<?>) linkedList0);
      Object object0 = null;
      TSynchronizedShortSet tSynchronizedShortSet0 = new TSynchronizedShortSet((TShortSet) tShortHashSet0, object0);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      // Undeclared exception!
      try {
        tSynchronizedShortSet0.removeAll((Collection<?>) linkedList1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TShortLinkedList tShortLinkedList0 = new TShortLinkedList();
      String string0 = "POSITIVE_INFINITY";
      int int0 = (-263);
      float float0 = 0.0F;
      TShortHashSet tShortHashSet0 = new TShortHashSet(int0, float0);
      TSynchronizedShortSet tSynchronizedShortSet0 = new TSynchronizedShortSet((TShortSet) tShortHashSet0);
      StringTokenizer stringTokenizer0 = new StringTokenizer(string0);
      String string1 = stringTokenizer0.nextToken();
      TSynchronizedShortSet tSynchronizedShortSet1 = new TSynchronizedShortSet((TShortSet) tSynchronizedShortSet0, (Object) string1);
      TSynchronizedShortSet tSynchronizedShortSet2 = new TSynchronizedShortSet((TShortSet) tSynchronizedShortSet1);
      TSynchronizedShortSet tSynchronizedShortSet3 = (TSynchronizedShortSet)tSynchronizedShortSet2.mutex;
      TSynchronizedRandomAccessShortList tSynchronizedRandomAccessShortList0 = new TSynchronizedRandomAccessShortList((TShortList) tShortLinkedList0, (Object) tSynchronizedShortSet3);
      tSynchronizedRandomAccessShortList0.retainAll(tShortHashSet0._set);
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      TSynchronizedShortList tSynchronizedShortList0 = new TSynchronizedShortList((TShortList) tShortLinkedList0);
      tSynchronizedShortList0.toArray();
      tShortLinkedList0.retainAll((Collection<?>) linkedList0);
      String string2 = "L5~\\7TM\"*)@";
      int int1 = (-427);
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string2, string2, int1, string0, string2, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: POSITIVE_INFINITY://L5~%5C7TM%22*)%40@L5~\\7TM\"*)@:-427POSITIVE_INFINITY?L5~%5C7TM%22*)@#POSITIVE_INFINITY
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TShortSet tShortSet0 = null;
      Locale locale0 = Locale.ROOT;
      String string0 = " greater than end index ";
      // Undeclared exception!
      try {
        locale0.getUnicodeLocaleType(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Ill-formed Unicode locale key:  greater than end index 
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      short[] shortArray0 = new short[7];
      short short0 = (short)177;
      shortArray0[0] = short0;
      short short1 = (short) (-242);
      shortArray0[1] = short1;
      short short2 = (short)1;
      shortArray0[2] = short2;
      short short3 = (short)1;
      shortArray0[3] = short3;
      short short4 = (short)0;
      shortArray0[4] = short4;
      short short5 = (short) (-34);
      int int0 = 389;
      short short6 = (short)1322;
      TShortArrayList tShortArrayList0 = new TShortArrayList(int0, short6);
      int int1 = (-1);
      // Undeclared exception!
      try {
        tShortArrayList0.subList(int1, int1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      short[] shortArray0 = new short[4];
      short short0 = (short)0;
      shortArray0[0] = short0;
      short short1 = (short)1;
      shortArray0[1] = short1;
      short short2 = (short)120;
      shortArray0[2] = short2;
      short short3 = (short)1914;
      shortArray0[3] = short3;
      TShortArrayList tShortArrayList0 = new TShortArrayList(shortArray0);
      TShortProcedure tShortProcedure0 = null;
      // Undeclared exception!
      try {
        tShortArrayList0.grep(tShortProcedure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TShortHashSet tShortHashSet0 = new TShortHashSet();
      TShortArrayList tShortArrayList0 = new TShortArrayList((TShortCollection) tShortHashSet0);
      Locale locale0 = Locale.JAPANESE;
      String string0 = locale0.getVariant();
      String string1 = locale0.getLanguage();
      TSynchronizedShortCollection tSynchronizedShortCollection0 = new TSynchronizedShortCollection((TShortCollection) tShortArrayList0, (Object) string1);
      TSynchronizedRandomAccessShortList tSynchronizedRandomAccessShortList0 = new TSynchronizedRandomAccessShortList((TShortList) tShortArrayList0, (Object) string0);
      tSynchronizedRandomAccessShortList0.iterator();
      tSynchronizedRandomAccessShortList0.iterator();
      tSynchronizedRandomAccessShortList0.retainAll((TShortCollection) tShortArrayList0);
      short short0 = (short)0;
      boolean boolean0 = tSynchronizedRandomAccessShortList0.remove(short0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      TShortSet tShortSet0 = null;
      short[] shortArray0 = new short[8];
      short short0 = (short)1883;
      shortArray0[0] = short0;
      short short1 = (short)852;
      shortArray0[1] = short1;
      short short2 = (short)0;
      shortArray0[2] = short2;
      short short3 = (short)143;
      shortArray0[3] = short3;
      short short4 = (short)1;
      shortArray0[4] = short4;
      short short5 = (short)1;
      shortArray0[5] = short5;
      short short6 = (short) (-582);
      shortArray0[6] = short6;
      short short7 = (short) (-1);
      shortArray0[7] = short7;
      TShortArrayList tShortArrayList0 = TShortArrayList.wrap(shortArray0);
      TSynchronizedRandomAccessShortList tSynchronizedRandomAccessShortList0 = new TSynchronizedRandomAccessShortList((TShortList) tShortArrayList0);
      tSynchronizedRandomAccessShortList0.toString();
      Object object0 = new Object();
      TSynchronizedShortSet tSynchronizedShortSet0 = new TSynchronizedShortSet(tShortSet0, object0);
      TSynchronizedShortSet tSynchronizedShortSet1 = new TSynchronizedShortSet((TShortSet) tSynchronizedShortSet0);
      // Undeclared exception!
      try {
        tSynchronizedShortSet1.equals(object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TShortList tShortList0 = null;
      Locale locale0 = Locale.ITALY;
      locale0.getDisplayCountry();
      String string0 = locale0.getISO3Language();
      File file0 = new File(string0);
      File file1 = file0.getAbsoluteFile();
      String string1 = file1.getParent();
      TSynchronizedShortList tSynchronizedShortList0 = new TSynchronizedShortList(tShortList0, (Object) string1);
      // Undeclared exception!
      try {
        tSynchronizedShortList0.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = (-1);
      short short0 = (short)30407;
      TShortArrayList tShortArrayList0 = null;
      try {
        tShortArrayList0 = new TShortArrayList(int0, short0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TShortList tShortList0 = null;
      TShortLinkedList tShortLinkedList0 = null;
      try {
        tShortLinkedList0 = new TShortLinkedList(tShortList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 21911;
      TShortHashSet tShortHashSet0 = new TShortHashSet(int0);
      TSynchronizedShortSet tSynchronizedShortSet0 = new TSynchronizedShortSet((TShortSet) tShortHashSet0);
      tSynchronizedShortSet0.isEmpty();
      int int1 = 0;
      TShortArrayList tShortArrayList0 = new TShortArrayList(int1);
      short short0 = (short)1089;
      // Undeclared exception!
      try {
        tShortArrayList0.replace(int1, short0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      short[] shortArray0 = new short[7];
      short short0 = (short)0;
      shortArray0[0] = short0;
      short short1 = (short)163;
      shortArray0[1] = short1;
      short short2 = (short)573;
      shortArray0[2] = short2;
      short short3 = (short)0;
      shortArray0[3] = short3;
      short short4 = (short)1943;
      shortArray0[4] = short4;
      short short5 = (short)1624;
      shortArray0[5] = short5;
      short short6 = (short) (-14291);
      shortArray0[6] = short6;
      TShortArrayList tShortArrayList0 = TShortArrayList.wrap(shortArray0, short0);
      TShortProcedure tShortProcedure0 = null;
      // Undeclared exception!
      try {
        tShortArrayList0.grep(tShortProcedure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      short[] shortArray0 = new short[1];
      TShortList tShortList0 = null;
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = null;
      try {
        tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList(tShortList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

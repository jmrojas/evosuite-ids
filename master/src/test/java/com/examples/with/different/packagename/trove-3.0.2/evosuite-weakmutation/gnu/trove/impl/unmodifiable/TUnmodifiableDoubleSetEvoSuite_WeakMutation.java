/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet;
import gnu.trove.set.TDoubleSet;
import gnu.trove.set.hash.TDoubleHashSet;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableDoubleSetEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 13 covered goals:
   * 1 Weak Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.equals(Ljava/lang/Object;)Z:58 - ReplaceComparisonOperator == -> !=
   * 2 Weak Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.equals(Ljava/lang/Object;)Z:58 - DeleteField: cLgnu/trove/TDoubleCollection;
   * 3 Weak Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.equals(Ljava/lang/Object;)Z:58 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 4 Weak Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.equals(Ljava/lang/Object;)Z:58 - ReplaceComparisonOperator == -> !=
   * 5 Weak Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.equals(Ljava/lang/Object;)Z:58 - ReplaceConstant - 0 -> 1
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.<init>(Lgnu/trove/set/TDoubleSet;)V: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.equals(Ljava/lang/Object;)Z: I4 Branch 1 IF_ACMPEQ L58 - false
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.equals(Ljava/lang/Object;)Z: I9 Branch 2 IFEQ L58 - true
   * 9 Weak Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.equals(Ljava/lang/Object;)Z:58 - ReplaceComparisonOperator == -> !=
   * 10 Weak Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.equals(Ljava/lang/Object;)Z:58 - DeleteField: cLgnu/trove/TDoubleCollection;
   * 11 Weak Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.equals(Ljava/lang/Object;)Z:58 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 12 Weak Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.equals(Ljava/lang/Object;)Z:58 - ReplaceComparisonOperator == -> !=
   * 13 Weak Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.equals(Ljava/lang/Object;)Z:58 - ReplaceConstant - 0 -> 1
   */

  @Test
  public void test0()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(0, 0);
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet0 = new TUnmodifiableDoubleSet((TDoubleSet) tDoubleHashSet0);
      boolean boolean0 = tUnmodifiableDoubleSet0.equals((Object) "Chinese (Taiwan)");
      assertEquals(false, boolean0);
  }

  //Test case number: 1
  /*
   * 8 covered goals:
   * 1 Weak Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.equals(Ljava/lang/Object;)Z:58 - ReplaceConstant - 1 -> 0
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.equals(Ljava/lang/Object;)Z: I4 Branch 1 IF_ACMPEQ L58 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.equals(Ljava/lang/Object;)Z: I9 Branch 2 IFEQ L58 - false
   * 4 Weak Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.equals(Ljava/lang/Object;)Z:58 - ReplaceComparisonOperator == -> !=
   * 5 Weak Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.equals(Ljava/lang/Object;)Z:58 - DeleteField: cLgnu/trove/TDoubleCollection;
   * 6 Weak Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.equals(Ljava/lang/Object;)Z:58 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 7 Weak Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.equals(Ljava/lang/Object;)Z:58 - ReplaceComparisonOperator == -> !=
   * 8 Weak Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.equals(Ljava/lang/Object;)Z:58 - ReplaceConstant - 1 -> 0
   */

  @Test
  public void test1()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(523);
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet0 = new TUnmodifiableDoubleSet((TDoubleSet) tDoubleHashSet0);
      boolean boolean0 = tUnmodifiableDoubleSet0.equals((Object) tDoubleHashSet0);
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * 1 Weak Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.hashCode()I:59 - DeleteField: cLgnu/trove/TDoubleCollection;
   * 2 Weak Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.hashCode()I:59 - DeleteStatement: hashCode()I
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.hashCode()I: root-Branch
   * 4 Weak Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.hashCode()I:59 - DeleteField: cLgnu/trove/TDoubleCollection;
   * 5 Weak Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet.hashCode()I:59 - DeleteStatement: hashCode()I
   */

  @Test
  public void test2()  throws Throwable  {
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(0, 0);
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet0 = new TUnmodifiableDoubleSet((TDoubleSet) tDoubleHashSet0);
      int int0 = tUnmodifiableDoubleSet0.hashCode();
      assertEquals(0, int0);
  }
}

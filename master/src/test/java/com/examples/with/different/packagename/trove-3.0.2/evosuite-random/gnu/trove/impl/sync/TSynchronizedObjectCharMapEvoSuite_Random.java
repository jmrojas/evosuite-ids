/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.hash.TObjectHash;
import gnu.trove.impl.sync.TSynchronizedObjectCharMap;
import gnu.trove.map.TObjectCharMap;
import gnu.trove.map.custom_hash.TObjectCharCustomHashMap;
import gnu.trove.map.hash.TObjectCharHashMap;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Locale;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedObjectCharMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectCharMap<Object> tObjectCharMap0 = null;
      TSynchronizedObjectCharMap<Object> tSynchronizedObjectCharMap0 = null;
      try {
        tSynchronizedObjectCharMap0 = new TSynchronizedObjectCharMap<Object>(tObjectCharMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TObjectCharMap<Object> tObjectCharMap0 = null;
      TSynchronizedObjectCharMap<Object> tSynchronizedObjectCharMap0 = null;
      try {
        tSynchronizedObjectCharMap0 = new TSynchronizedObjectCharMap<Object>(tObjectCharMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TObjectCharMap<Integer> tObjectCharMap0 = null;
      int int0 = 0;
      TObjectCharMap<Character> tObjectCharMap1 = null;
      char char0 = '/';
      Character character0 = new Character(char0);
      TSynchronizedObjectCharMap<Character> tSynchronizedObjectCharMap0 = new TSynchronizedObjectCharMap<Character>(tObjectCharMap1, (Object) character0);
      Object[] objectArray0 = new Object[9];
      Object object0 = TObjectHash.FREE;
      objectArray0[0] = object0;
      objectArray0[1] = (Object) tObjectCharMap0;
      objectArray0[2] = (Object) tObjectCharMap1;
      objectArray0[3] = (Object) tObjectCharMap1;
      objectArray0[4] = (Object) int0;
      objectArray0[5] = (Object) character0;
      objectArray0[6] = (Object) int0;
      objectArray0[7] = (Object) tSynchronizedObjectCharMap0;
      objectArray0[8] = (Object) character0;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
      // Undeclared exception!
      try {
        tSynchronizedObjectCharMap0.forEachKey((TObjectProcedure<? super Character>) toObjectArrayProceedure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      int int0 = 1;
      char char0 = '^';
      TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, int0, (float) int0, char0);
      char char1 = 'l';
      Character character0 = Character.valueOf(char1);
      String string0 = character0.toString();
      TSynchronizedObjectCharMap<Integer> tSynchronizedObjectCharMap0 = new TSynchronizedObjectCharMap<Integer>((TObjectCharMap<Integer>) tObjectCharCustomHashMap0, (Object) string0);
      assertEquals('^', tSynchronizedObjectCharMap0.getNoEntryValue());
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 79;
      TObjectCharHashMap<Object> tObjectCharHashMap0 = new TObjectCharHashMap<Object>(int0);
      Locale locale0 = Locale.UK;
      String string0 = locale0.getLanguage();
      TSynchronizedObjectCharMap<Object> tSynchronizedObjectCharMap0 = new TSynchronizedObjectCharMap<Object>((TObjectCharMap<Object>) tObjectCharHashMap0, (Object) string0);
      TSynchronizedObjectCharMap<Object> tSynchronizedObjectCharMap1 = new TSynchronizedObjectCharMap<Object>((TObjectCharMap<Object>) tSynchronizedObjectCharMap0);
      tSynchronizedObjectCharMap1.size();
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectCharCustomHashMap<Character> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Character>();
      TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap1 = new TObjectCharCustomHashMap<Integer>();
      String string1 = "^$3\\J,5Eb4";
      // Undeclared exception!
      try {
        URI.create(string1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in path at index 0: ^$3\\J,5Eb4
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = (-1909);
      TObjectCharHashMap<String> tObjectCharHashMap0 = new TObjectCharHashMap<String>();
      TSynchronizedObjectCharMap<String> tSynchronizedObjectCharMap0 = new TSynchronizedObjectCharMap<String>((TObjectCharMap<String>) tObjectCharHashMap0);
      char[] charArray0 = new char[7];
      char char0 = 'y';
      charArray0[0] = char0;
      char char1 = '';
      charArray0[1] = char1;
      char char2 = 'D';
      charArray0[2] = char2;
      char char3 = 'U';
      charArray0[3] = char3;
      char char4 = 'n';
      charArray0[4] = char4;
      char char5 = 'D';
      charArray0[5] = char5;
      char char6 = '0';
      charArray0[6] = char6;
      tSynchronizedObjectCharMap0.values(charArray0);
      TObjectCharHashMap<Integer> tObjectCharHashMap1 = new TObjectCharHashMap<Integer>(int0);
      TSynchronizedObjectCharMap<Integer> tSynchronizedObjectCharMap1 = new TSynchronizedObjectCharMap<Integer>((TObjectCharMap<Integer>) tObjectCharHashMap1);
      Object object0 = TObjectHash.REMOVED;
      TSynchronizedObjectCharMap<Integer> tSynchronizedObjectCharMap2 = new TSynchronizedObjectCharMap<Integer>((TObjectCharMap<Integer>) tSynchronizedObjectCharMap1, object0);
      assertEquals('\u0000', tSynchronizedObjectCharMap2.getNoEntryValue());
  }

  @Test
  public void test6()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int0 = 1;
      TObjectCharCustomHashMap<String> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, int0);
      TSynchronizedObjectCharMap<String> tSynchronizedObjectCharMap0 = new TSynchronizedObjectCharMap<String>((TObjectCharMap<String>) tObjectCharCustomHashMap0);
      assertEquals(true, tSynchronizedObjectCharMap0.isEmpty());
  }

  @Test
  public void test7()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int0 = 117;
      float float0 = (-244.14369F);
      char char0 = 'l';
      TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, int0, float0, char0);
      TSynchronizedObjectCharMap<Integer> tSynchronizedObjectCharMap0 = new TSynchronizedObjectCharMap<Integer>((TObjectCharMap<Integer>) tObjectCharCustomHashMap0);
      char[] charArray0 = tSynchronizedObjectCharMap0.values();
      assertNotNull(charArray0);
  }

  @Test
  public void test8()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectCharCustomHashMap<Character> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Character>((HashingStrategy<? super Character>) identityHashingStrategy0);
      String string0 = "hlP]qG6o";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: hlP]qG6o://hlP]qG6ohlP%5DqG6o?hlP]qG6o#hlP]qG6o
         //
      }
  }
}

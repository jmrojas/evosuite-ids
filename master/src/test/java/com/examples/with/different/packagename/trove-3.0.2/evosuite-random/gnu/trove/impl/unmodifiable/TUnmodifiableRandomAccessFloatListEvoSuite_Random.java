/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TFloatCollection;
import gnu.trove.impl.sync.TSynchronizedFloatList;
import gnu.trove.impl.sync.TSynchronizedRandomAccessFloatList;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessFloatList;
import gnu.trove.list.TFloatList;
import gnu.trove.list.array.TFloatArrayList;
import gnu.trove.list.linked.TFloatLinkedList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.Random;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableRandomAccessFloatListEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      float[] floatArray0 = new float[9];
      float float0 = (-474.34097F);
      floatArray0[0] = float0;
      float float1 = 0.0F;
      floatArray0[1] = float1;
      float float2 = 0.0F;
      floatArray0[2] = float2;
      float float3 = 1.0F;
      floatArray0[3] = float3;
      float float4 = Float.POSITIVE_INFINITY;
      floatArray0[4] = float4;
      float float5 = (-1959.5846F);
      floatArray0[5] = float5;
      float float6 = 1.0F;
      floatArray0[6] = float6;
      float float7 = (-1066.1213F);
      floatArray0[7] = float7;
      float float8 = 0.0F;
      floatArray0[8] = float8;
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList0);
      int int0 = (-1034);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessFloatList0.subList(int0, int0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      float[] floatArray0 = new float[1];
      float float0 = (-1543.9003F);
      floatArray0[0] = float0;
      float float1 = 0.0F;
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, float1);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList0);
      int int0 = 1;
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList1 = (TSynchronizedRandomAccessFloatList)tSynchronizedRandomAccessFloatList0.subList(int0, int0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tSynchronizedRandomAccessFloatList1);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.insert(int0, floatArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = 1145;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(int0);
      // Undeclared exception!
      try {
        tFloatArrayList0.insert(int0, int0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TFloatList tFloatList0 = null;
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = null;
      try {
        tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList(tFloatList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 2;
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) int0;
      floatArray0[1] = (float) int0;
      floatArray0[2] = (float) int0;
      floatArray0[3] = (float) int0;
      floatArray0[4] = (float) int0;
      floatArray0[5] = (float) int0;
      floatArray0[6] = (float) int0;
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      tUnmodifiableRandomAccessFloatList0.containsAll((Collection<?>) linkedList0);
      TFloatArrayList tFloatArrayList1 = new TFloatArrayList(int0, int0);
      int int1 = (-355);
      // Undeclared exception!
      try {
        tFloatArrayList1.subList(int1, int1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      float[] floatArray0 = new float[5];
      float float0 = (-1641.0974F);
      floatArray0[0] = float0;
      float float1 = 0.0F;
      floatArray0[1] = float1;
      float float2 = 237.07976F;
      floatArray0[2] = float2;
      float float3 = (-352.3022F);
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tSynchronizedRandomAccessFloatList0);
      tUnmodifiableRandomAccessFloatList0.isEmpty();
      floatArray0[3] = float3;
      float float4 = (-1.0F);
      floatArray0[4] = float4;
      TFloatArrayList tFloatArrayList1 = TFloatArrayList.wrap(floatArray0);
      TSynchronizedFloatList tSynchronizedFloatList0 = new TSynchronizedFloatList((TFloatList) tFloatArrayList1);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList1 = new TUnmodifiableRandomAccessFloatList((TFloatList) tSynchronizedFloatList0);
      Random random0 = new Random();
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList1.shuffle(random0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      int int0 = (-1959);
      int int1 = 0;
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatLinkedList0);
      float[] floatArray0 = new float[10];
      floatArray0[0] = (float) int1;
      floatArray0[1] = (float) int1;
      floatArray0[2] = (float) int0;
      floatArray0[3] = (float) int0;
      floatArray0[4] = (float) int0;
      floatArray0[5] = (float) int1;
      floatArray0[6] = (float) int0;
      floatArray0[7] = (float) int1;
      floatArray0[8] = (float) int0;
      floatArray0[9] = (float) int1;
      tUnmodifiableRandomAccessFloatList0.toArray(floatArray0);
      // Undeclared exception!
      try {
        tFloatLinkedList0.subList(int0, int1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      int int0 = (-361);
      float float0 = 0.0F;
      // Undeclared exception!
      try {
        tFloatLinkedList0.insert(int0, float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TFloatList tFloatList0 = null;
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = null;
      try {
        tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList(tFloatList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      float[] floatArray0 = new float[7];
      float float0 = 753.75073F;
      floatArray0[0] = float0;
      float float1 = 2029.7108F;
      floatArray0[1] = float1;
      float float2 = (-1396.8364F);
      floatArray0[2] = float2;
      float float3 = 0.5F;
      floatArray0[3] = float3;
      float float4 = (-724.8757F);
      floatArray0[4] = float4;
      float float5 = (-1264.877F);
      floatArray0[5] = float5;
      float float6 = Float.POSITIVE_INFINITY;
      floatArray0[6] = float6;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      int int0 = (-663);
      int int1 = 1112;
      int int2 = (-1);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.insert(int0, floatArray0, int1, int2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      float[] floatArray0 = new float[1];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      int int0 = 0;
      tUnmodifiableRandomAccessFloatList0.subList(int0, int0);
      float float0 = 0.0F;
      floatArray0[0] = float0;
      float float1 = 0.0F;
      floatArray0[0] = float1;
      floatArray0[0] = float0;
      float float2 = 0.0F;
      TFloatArrayList tFloatArrayList1 = new TFloatArrayList(floatArray0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList1 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList1);
      floatArray0[0] = float2;
      floatArray0[0] = float2;
      TFloatArrayList tFloatArrayList2 = TFloatArrayList.wrap(floatArray0, floatArray0[0]);
      tFloatArrayList2.retainAll((TFloatCollection) tUnmodifiableRandomAccessFloatList1);
      int int1 = 507;
      int int2 = (-4);
      tFloatArrayList2.sum();
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList2 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList2);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList2.fill((float) int2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 0;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(int0);
      Locale locale0 = Locale.TAIWAN;
      String string0 = locale0.getISO3Language();
      TSynchronizedFloatList tSynchronizedFloatList0 = new TSynchronizedFloatList((TFloatList) tFloatArrayList0, (Object) string0);
      TFloatArrayList tFloatArrayList1 = new TFloatArrayList((TFloatCollection) tSynchronizedFloatList0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList1);
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) int0;
      floatArray0[1] = (float) int0;
      floatArray0[2] = (float) int0;
      floatArray0[3] = (float) int0;
      floatArray0[4] = (float) int0;
      floatArray0[5] = (float) int0;
      floatArray0[6] = (float) int0;
      float float0 = 0.0F;
      floatArray0[7] = float0;
      floatArray0[8] = (float) int0;
      boolean boolean0 = tUnmodifiableRandomAccessFloatList0.containsAll(floatArray0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 0;
      float float0 = (-93.10028F);
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(int0, float0);
      tFloatArrayList0.fill(float0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      float float1 = tUnmodifiableRandomAccessFloatList0.getNoEntryValue();
      assertTrue(float0 == float1);
  }

  @Test
  public void test13()  throws Throwable  {
      float[] floatArray0 = new float[3];
      float float0 = Float.POSITIVE_INFINITY;
      floatArray0[0] = float0;
      float float1 = 1516.2759F;
      floatArray0[1] = float1;
      float float2 = Float.NEGATIVE_INFINITY;
      floatArray0[2] = float2;
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      int int0 = (-1629);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.toArray(int0, int0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      float[] floatArray0 = new float[8];
      float float0 = (-1085.1167F);
      floatArray0[0] = float0;
      float float1 = (-1620.0522F);
      floatArray0[1] = float1;
      float float2 = 1706.6182F;
      floatArray0[2] = float2;
      float float3 = 1727.0791F;
      floatArray0[3] = float3;
      float float4 = (-1815.5712F);
      floatArray0[4] = float4;
      float float5 = (-1508.341F);
      floatArray0[0] = float3;
      floatArray0[1] = float0;
      floatArray0[2] = float2;
      floatArray0[3] = float3;
      floatArray0[4] = float0;
      floatArray0[5] = float3;
      floatArray0[6] = float0;
      floatArray0[7] = float1;
      floatArray0[5] = float5;
      float float6 = 0.0F;
      floatArray0[6] = float6;
      float float7 = 2002.0474F;
      floatArray0[7] = float7;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      tUnmodifiableRandomAccessFloatList0.containsAll((Collection<?>) linkedList0);
      tUnmodifiableRandomAccessFloatList0.sum();
      TFloatList tFloatList0 = null;
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList1 = null;
      try {
        tUnmodifiableRandomAccessFloatList1 = new TUnmodifiableRandomAccessFloatList(tFloatList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      float[] floatArray0 = new float[4];
      float float0 = (-1549.2087F);
      floatArray0[0] = float0;
      float float1 = 0.0F;
      floatArray0[1] = float1;
      float[] floatArray1 = new float[2];
      floatArray1[0] = float1;
      floatArray1[1] = float1;
      float float2 = 0.0F;
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray1, float2);
      int int0 = (-364);
      // Undeclared exception!
      try {
        tFloatArrayList0.subList(int0, int0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      float[] floatArray0 = new float[4];
      float float0 = Float.POSITIVE_INFINITY;
      floatArray0[0] = float0;
      float float1 = Float.NEGATIVE_INFINITY;
      floatArray0[1] = float1;
      float float2 = 1057.4268F;
      int int0 = 1;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(int0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      float float3 = 1580.2957F;
      tUnmodifiableRandomAccessFloatList0.indexOf(float3);
      int int1 = 350;
      TFloatArrayList tFloatArrayList1 = new TFloatArrayList(int1);
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList1);
      int int2 = (-309);
      tUnmodifiableRandomAccessFloatList0.binarySearch((float) int0, int0, int2);
      TFloatArrayList tFloatArrayList2 = (TFloatArrayList)tUnmodifiableFloatList0.list;
      TSynchronizedFloatList tSynchronizedFloatList0 = new TSynchronizedFloatList((TFloatList) tFloatArrayList2);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList1 = new TUnmodifiableRandomAccessFloatList((TFloatList) tSynchronizedFloatList0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList1.retainAll((Collection<?>) linkedList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatLinkedList0);
      int int0 = tUnmodifiableRandomAccessFloatList0.size();
      float[] floatArray0 = new float[10];
      float float0 = (-501.16248F);
      floatArray0[0] = float0;
      floatArray0[1] = (float) int0;
      floatArray0[2] = (float) int0;
      floatArray0[3] = (float) int0;
      floatArray0[4] = (float) int0;
      floatArray0[5] = (float) int0;
      floatArray0[6] = (float) int0;
      floatArray0[7] = (float) int0;
      floatArray0[8] = (float) int0;
      float float1 = (-1.0F);
      floatArray0[9] = float1;
      int int1 = 0;
      int int2 = 426;
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.add(floatArray0, int1, int2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatLinkedList0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.retainAll((Collection<?>) linkedList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

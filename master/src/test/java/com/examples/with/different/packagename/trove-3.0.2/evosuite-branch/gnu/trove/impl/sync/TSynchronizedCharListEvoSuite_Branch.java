/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TCharFunction;
import gnu.trove.impl.sync.TSynchronizedCharList;
import gnu.trove.impl.sync.TSynchronizedRandomAccessCharList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessCharList;
import gnu.trove.list.TCharList;
import gnu.trove.list.array.TCharArrayList;
import gnu.trove.list.linked.TCharLinkedList;
import gnu.trove.procedure.TCharProcedure;
import java.util.Random;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedCharListEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.set(I[CII)V: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedCharList.<init>(Lgnu/trove/list/TCharList;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharLinkedList0);
      char[] charArray0 = new char[10];
      tSynchronizedRandomAccessCharList0.set(167, charArray0, (int) '\u0000', (int) '\u0000');
      assertEquals('\u0000', tSynchronizedRandomAccessCharList0.getNoEntryValue());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.fill(C)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      char[] charArray0 = new char[9];
      TCharArrayList tCharArrayList0 = new TCharArrayList(charArray0);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      tSynchronizedRandomAccessCharList0.fill('\u0000');
      assertEquals("{\u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000}", tCharArrayList0.toString());
      assertEquals('\u0000', tSynchronizedRandomAccessCharList0.max());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.shuffle(Ljava/util/Random;)V: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedCharList.<init>(Lgnu/trove/list/TCharList;Ljava/lang/Object;)V: root-Branch
   */

//   @Test
//   public void test2()  throws Throwable  {
//       TCharArrayList tCharArrayList0 = new TCharArrayList(811);
//       TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) tCharArrayList0, (Object) "");
//       Random random0 = new Random();
//       tSynchronizedCharList0.shuffle(random0);
//       assertEquals(7828854203027052361L, random0.nextLong());
//       assertEquals((-0.24803113134264057), random0.nextGaussian(), 0.01D);
//   }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.hashCode()I: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList('q');
      TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) tCharLinkedList0);
      int int0 = tSynchronizedCharList0.hashCode();
      assertEquals(3503, int0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.max()C: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList(811);
      TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) tCharArrayList0, (Object) "");
      // Undeclared exception!
      try {
        tSynchronizedCharList0.max();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // cannot find maximum of an empty list
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.replace(IC)C: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      char[] charArray0 = new char[9];
      TCharArrayList tCharArrayList0 = new TCharArrayList(charArray0);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      tSynchronizedRandomAccessCharList0.replace(0, '\u0000');
      assertEquals('\u0000', tCharArrayList0.max());
      assertEquals('\u0000', tSynchronizedRandomAccessCharList0.max());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.binarySearch(C)I: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList(811);
      TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) tCharArrayList0, (Object) "");
      int int0 = tSynchronizedCharList0.binarySearch('\u0000');
      assertEquals((-1), int0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.subList(II)Lgnu/trove/list/TCharList;: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      char[] charArray0 = new char[2];
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0, 'k');
      TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) tCharArrayList0);
      // Undeclared exception!
      try {
        tSynchronizedCharList0.subList((int) '\u0000', (int) 'k');
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index < 2
         //
      }
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.add([CII)V: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      char[] charArray0 = new char[10];
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessCharList0.add(charArray0, (-1), (int) '\u0000');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.lastIndexOf(C)I: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) tCharArrayList0);
      int int0 = tSynchronizedCharList0.lastIndexOf('0');
      assertEquals((-1), int0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.reverse()V: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[6];
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      tSynchronizedRandomAccessCharList0.reverse();
      assertEquals('\u0000', tSynchronizedRandomAccessCharList0.min());
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.toArray(II)[C: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList(1);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessCharList0.toArray(1, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
      }
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.insert(I[CII)V: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList('q');
      TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) tCharLinkedList0);
      char[] charArray0 = new char[4];
      // Undeclared exception!
      try {
        tSynchronizedCharList0.insert((int) 'q', charArray0, (int) '\u0000', (int) '\u0000');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.indexOf(C)I: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList(1);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      int int0 = tSynchronizedRandomAccessCharList0.indexOf('\u0012');
      assertEquals((-1), int0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.add([C)V: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      char[] charArray0 = new char[19];
      tSynchronizedRandomAccessCharList0.add(charArray0);
      assertEquals(19, tSynchronizedRandomAccessCharList0.size());
      assertEquals(false, tCharArrayList0.isEmpty());
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.get(I)C: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) tCharArrayList0);
      // Undeclared exception!
      try {
        tSynchronizedCharList0.get(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
      }
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.toArray([CIII)[C: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) null, (Object) null);
      char[] charArray0 = new char[9];
      // Undeclared exception!
      try {
        tSynchronizedCharList0.toArray(charArray0, (int) '\u0000', (int) '\u0000', (int) 'C');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.sort()V: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[10];
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      tSynchronizedRandomAccessCharList0.sort();
      assertEquals('\u0000', tSynchronizedRandomAccessCharList0.getNoEntryValue());
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.insert(I[C)V: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) tCharArrayList0);
      char[] charArray0 = new char[21];
      tSynchronizedCharList0.insert(0, charArray0);
      assertEquals(21, tCharArrayList0.size());
      assertEquals("{\u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000}", tSynchronizedCharList0.toString());
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.min()C: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[2];
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0, 'k');
      TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) tCharArrayList0);
      char char0 = tSynchronizedCharList0.min();
      assertEquals('\u0000', char0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.sort(II)V: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList((TCharList) tCharArrayList0);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharLinkedList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessCharList0.sort((-1), (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.fill(IIC)V: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList(811);
      TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) tCharArrayList0, (Object) "");
      tSynchronizedCharList0.fill(811, 811, 'a');
      assertEquals(false, tSynchronizedCharList0.isEmpty());
      assertEquals(811, tCharArrayList0.size());
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.set(I[C)V: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      char[] charArray0 = new char[6];
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessCharList0.set((int) ',', charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 44
         //
      }
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.indexOf(IC)I: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) tCharArrayList0);
      int int0 = tSynchronizedCharList0.indexOf((int) '\u0000', '\u0000');
      assertEquals((-1), int0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.toArray([CII)[C: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[9];
      TCharArrayList tCharArrayList0 = new TCharArrayList(charArray0);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      char[] charArray1 = tSynchronizedRandomAccessCharList0.toArray(charArray0, (int) '7', (int) '\u0000');
      assertSame(charArray0, charArray1);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.remove(II)V: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) tCharArrayList0);
      tSynchronizedCharList0.remove(0, 0);
      assertEquals('\u0000', tSynchronizedCharList0.sum());
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.set(IC)C: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList(811);
      TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) tCharArrayList0, (Object) "");
      // Undeclared exception!
      try {
        tSynchronizedCharList0.set(811, '\u0000');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 811
         //
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.grep(Lgnu/trove/procedure/TCharProcedure;)Lgnu/trove/list/TCharList;: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      char[] charArray0 = new char[1];
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessCharList0.grep((TCharProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.removeAt(I)C: root-Branch
   */

  @Test
  public void test28()  throws Throwable  {
      char[] charArray0 = new char[9];
      TCharArrayList tCharArrayList0 = new TCharArrayList(charArray0);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      tSynchronizedRandomAccessCharList0.removeAt((int) '\u0000');
      assertEquals("{\u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000, \u0000}", tCharArrayList0.toString());
      assertEquals(8, tSynchronizedRandomAccessCharList0.size());
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.inverseGrep(Lgnu/trove/procedure/TCharProcedure;)Lgnu/trove/list/TCharList;: root-Branch
   */

  @Test
  public void test29()  throws Throwable  {
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      TUnmodifiableRandomAccessCharList tUnmodifiableRandomAccessCharList0 = new TUnmodifiableRandomAccessCharList((TCharList) tCharLinkedList0);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tUnmodifiableRandomAccessCharList0);
      TCharLinkedList tCharLinkedList1 = (TCharLinkedList)tSynchronizedRandomAccessCharList0.inverseGrep((TCharProcedure) null);
      assertNotSame(tCharLinkedList1, tCharLinkedList0);
  }

  //Test case number: 30
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.insert(IC)V: root-Branch
   */

  @Test
  public void test30()  throws Throwable  {
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      TUnmodifiableRandomAccessCharList tUnmodifiableRandomAccessCharList0 = new TUnmodifiableRandomAccessCharList((TCharList) tCharLinkedList0);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tUnmodifiableRandomAccessCharList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessCharList0.insert((int) '%', '%');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.binarySearch(CII)I: root-Branch
   */

  @Test
  public void test31()  throws Throwable  {
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharLinkedList0);
      int int0 = tSynchronizedRandomAccessCharList0.binarySearch('\u0000', 167, (-1508));
      assertEquals((-168), int0);
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test32()  throws Throwable  {
      char[] charArray0 = new char[6];
      TCharArrayList tCharArrayList0 = TCharArrayList.wrap(charArray0);
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      boolean boolean0 = tSynchronizedRandomAccessCharList0.equals((Object) "[]");
      assertEquals(false, boolean0);
  }

  //Test case number: 33
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.sum()C: root-Branch
   */

  @Test
  public void test33()  throws Throwable  {
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList('q');
      TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) tCharLinkedList0);
      char char0 = tSynchronizedCharList0.sum();
      assertEquals('\u0000', char0);
  }

  //Test case number: 34
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.reverse(II)V: root-Branch
   */

  @Test
  public void test34()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      tSynchronizedRandomAccessCharList0.reverse(1952, 1952);
      assertEquals(true, tSynchronizedRandomAccessCharList0.isEmpty());
  }

  //Test case number: 35
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.forEachDescending(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   */

  @Test
  public void test35()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      boolean boolean0 = tSynchronizedRandomAccessCharList0.forEachDescending((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 36
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.transformValues(Lgnu/trove/function/TCharFunction;)V: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedCharList.<init>(Lgnu/trove/list/TCharList;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test36()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      TSynchronizedCharList tSynchronizedCharList0 = new TSynchronizedCharList((TCharList) tCharArrayList0, (Object) "");
      tSynchronizedCharList0.transformValues((TCharFunction) null);
      assertEquals(true, tSynchronizedCharList0.isEmpty());
  }

  //Test case number: 37
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharList.lastIndexOf(IC)I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedCharList.<init>(Lgnu/trove/list/TCharList;)V: root-Branch
   */

  @Test
  public void test37()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      TSynchronizedRandomAccessCharList tSynchronizedRandomAccessCharList0 = new TSynchronizedRandomAccessCharList((TCharList) tCharArrayList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessCharList0.lastIndexOf(1458, '{');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1457
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TShortFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection;
import gnu.trove.map.TDoubleShortMap;
import gnu.trove.map.hash.TDoubleShortHashMap;
import gnu.trove.procedure.TDoubleProcedure;
import gnu.trove.procedure.TDoubleShortProcedure;
import gnu.trove.procedure.TShortProcedure;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableDoubleShortMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.containsKey(D)Z: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.<init>(Lgnu/trove/map/TDoubleShortMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(28303, 28303);
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      boolean boolean0 = tUnmodifiableDoubleShortMap0.containsKey((double) 28303);
      assertEquals(false, boolean0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.transformValues(Lgnu/trove/function/TShortFunction;)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(473, 473);
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleShortMap0.transformValues((TShortFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      String string0 = tUnmodifiableDoubleShortMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.clear()V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(28303, 28303);
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleShortMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.forEachKey(Lgnu/trove/procedure/TDoubleProcedure;)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(147, (float) 147, (double) 147, (short) (-1388));
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      boolean boolean0 = tUnmodifiableDoubleShortMap0.forEachKey((TDoubleProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.hashCode()I: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((-722));
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      int int0 = tUnmodifiableDoubleShortMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleShortMap0.putAll((Map<? extends Double, ? extends Short>) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.keys()[D: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((int) (short)1415, (float) (short)1415, (double) (short)1415, (short)1415);
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      double[] doubleArray0 = tUnmodifiableDoubleShortMap0.keys();
      assertNotNull(doubleArray0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.getNoEntryKey()D: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      double double0 = tUnmodifiableDoubleShortMap0.getNoEntryKey();
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      boolean boolean0 = tUnmodifiableDoubleShortMap0.forEachValue((TShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.put(DS)S: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((int) (short)1415, (float) (short)1415, (double) (short)1415, (short)1415);
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleShortMap0.put((double) (short)1415, (short)1415);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.values()[S: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((-722));
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      short[] shortArray0 = tUnmodifiableDoubleShortMap0.values();
      assertNotNull(shortArray0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.retainEntries(Lgnu/trove/procedure/TDoubleShortProcedure;)Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(77509, 77509);
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleShortMap0.retainEntries((TDoubleShortProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.putAll(Lgnu/trove/map/TDoubleShortMap;)V: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleShortMap0.putAll((TDoubleShortMap) tDoubleShortHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.containsValue(S)Z: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      boolean boolean0 = tUnmodifiableDoubleShortMap0.containsValue((short)0);
      assertEquals(false, boolean0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.adjustOrPutValue(DSS)S: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((-722));
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleShortMap0.adjustOrPutValue((double) (-722), (short)0, (short)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.get(D)S: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((-722));
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      short short0 = tUnmodifiableDoubleShortMap0.get((double) (-722));
      assertEquals((short)0, short0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.values([S)[S: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      short[] shortArray0 = new short[10];
      short[] shortArray1 = tUnmodifiableDoubleShortMap0.values(shortArray0);
      assertSame(shortArray1, shortArray0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.keys([D)[D: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      double[] doubleArray0 = tUnmodifiableDoubleShortMap0.keys(tDoubleShortHashMap0._set);
      assertNotNull(doubleArray0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.forEachEntry(Lgnu/trove/procedure/TDoubleShortProcedure;)Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(77509, 77509);
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      boolean boolean0 = tUnmodifiableDoubleShortMap0.forEachEntry((TDoubleShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.putIfAbsent(DS)S: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      short[] shortArray0 = new short[5];
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(doubleArray0, shortArray0);
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleShortMap0.putIfAbsent((double) (short)0, (short) (-1493));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.increment(D)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(556);
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleShortMap0.increment((double) 556);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.adjustValue(DS)Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(22);
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleShortMap0.adjustValue((double) 22, (short) (-585));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((-722));
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      boolean boolean0 = tUnmodifiableDoubleShortMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.getNoEntryValue()S: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      short short0 = tUnmodifiableDoubleShortMap0.getNoEntryValue();
      assertEquals((short)0, short0);
  }

  //Test case number: 25
  /*
   * 7 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.size()I: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.iterator()Lgnu/trove/iterator/TDoubleShortIterator;: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap$1.hasNext()Z: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableDoubleShortMap;)V: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap$1.key()D: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap$1.advance()V: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap$1.value()S: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      short[] shortArray0 = new short[5];
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(doubleArray0, shortArray0);
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      TDoubleShortHashMap tDoubleShortHashMap1 = new TDoubleShortHashMap((TDoubleShortMap) tUnmodifiableDoubleShortMap0);
      assertEquals(1, tUnmodifiableDoubleShortMap0.size());
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.remove(D)S: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap();
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleShortMap0.remove((-487.6478132584403));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.<init>(Lgnu/trove/map/TDoubleShortMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = null;
      try {
        tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.keySet()Lgnu/trove/set/TDoubleSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.keySet()Lgnu/trove/set/TDoubleSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap(77509, 77509);
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet0 = (TUnmodifiableDoubleSet)tUnmodifiableDoubleShortMap0.keySet();
      assertNotNull(tUnmodifiableDoubleSet0);
      
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet1 = (TUnmodifiableDoubleSet)tUnmodifiableDoubleShortMap0.keySet();
      assertSame(tUnmodifiableDoubleSet1, tUnmodifiableDoubleSet0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.valueCollection()Lgnu/trove/TShortCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.valueCollection()Lgnu/trove/TShortCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((int) (short)1415, (float) (short)1415, (double) (short)1415, (short)1415);
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      TUnmodifiableShortCollection tUnmodifiableShortCollection0 = (TUnmodifiableShortCollection)tUnmodifiableDoubleShortMap0.valueCollection();
      assertNotNull(tUnmodifiableShortCollection0);
      
      TUnmodifiableShortCollection tUnmodifiableShortCollection1 = (TUnmodifiableShortCollection)tUnmodifiableDoubleShortMap0.valueCollection();
      assertSame(tUnmodifiableShortCollection1, tUnmodifiableShortCollection0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleShortMap.<init>(Lgnu/trove/map/TDoubleShortMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TDoubleShortHashMap tDoubleShortHashMap0 = new TDoubleShortHashMap((-722));
      TUnmodifiableDoubleShortMap tUnmodifiableDoubleShortMap0 = new TUnmodifiableDoubleShortMap((TDoubleShortMap) tDoubleShortHashMap0);
      boolean boolean0 = tUnmodifiableDoubleShortMap0.equals((Object) null);
      assertEquals(false, boolean0);
  }
}

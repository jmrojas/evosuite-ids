/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TLongFunction;
import gnu.trove.map.TLongLongMap;
import gnu.trove.map.hash.TLongLongHashMap;
import gnu.trove.procedure.TLongLongProcedure;
import gnu.trove.procedure.TLongProcedure;
import gnu.trove.set.TLongSet;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TLongLongHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap$TValueView.<init>(Lgnu/trove/map/hash/TLongLongHashMap;)V: root-Branch
   * 2 gnu.trove.map.hash.TLongLongHashMap.setUp(I)I: root-Branch
   * 3 gnu.trove.map.hash.TLongLongHashMap.<init>()V: root-Branch
   * 4 gnu.trove.map.hash.TLongLongHashMap.valueCollection()Lgnu/trove/TLongCollection;: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      tLongLongHashMap0.valueCollection();
      assertEquals(23, tLongLongHashMap0.capacity());
  }

  //Test case number: 1
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap$TKeyView.<init>(Lgnu/trove/map/hash/TLongLongHashMap;)V: root-Branch
   * 2 gnu.trove.map.hash.TLongLongHashMap.put(JJ)J: root-Branch
   * 3 gnu.trove.map.hash.TLongLongHashMap.keySet()Lgnu/trove/set/TLongSet;: root-Branch
   * 4 gnu.trove.map.hash.TLongLongHashMap.<init>([J[J)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 5 gnu.trove.map.hash.TLongLongHashMap.<init>([J[J)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 6 gnu.trove.map.hash.TLongLongHashMap.doPut(JJI)J: I12 Branch 40 IFGE L214 - true
   * 7 gnu.trove.map.hash.TLongLongHashMap.doPut(JJI)J: I12 Branch 40 IFGE L214 - false
   * 8 gnu.trove.map.hash.TLongLongHashMap.doPut(JJI)J: I41 Branch 41 IFEQ L221 - true
   * 9 gnu.trove.map.hash.TLongLongHashMap.doPut(JJI)J: I41 Branch 41 IFEQ L221 - false
   */

  @Test
  public void test1()  throws Throwable  {
      long[] longArray0 = new long[8];
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      TLongSet tLongSet0 = tLongLongHashMap0.keySet();
      assertEquals(17, tLongLongHashMap0.capacity());
      assertEquals("{0=0}", tLongLongHashMap0.toString());
      assertEquals(1, tLongLongHashMap0.size());
      assertEquals(1, tLongSet0.size());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.increment(J)Z: root-Branch
   * 2 gnu.trove.map.hash.TLongLongHashMap.adjustValue(JJ)Z: I9 Branch 71 IFGE L477 - true
   */

  @Test
  public void test2()  throws Throwable  {
      long[] longArray0 = new long[15];
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      boolean boolean0 = tLongLongHashMap0.increment(0L);
      assertEquals("{0=1}", tLongLongHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.containsKey(J)Z: root-Branch
   * 2 gnu.trove.map.hash.TLongLongHashMap.<init>(IFJJ)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(0, (float) 0, 0L, 1393L);
      boolean boolean0 = tLongLongHashMap0.containsKey(1393L);
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongLongHashMap.forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      long[] longArray0 = new long[10];
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      // Undeclared exception!
      try {
        tLongLongHashMap0.forEachKey((TLongProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongLongHashMap.clear()V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      long[] longArray0 = new long[9];
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      assertEquals(1, tLongLongHashMap0.size());
      
      tLongLongHashMap0.clear();
      assertEquals(23, tLongLongHashMap0.capacity());
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.removeAt(I)V: root-Branch
   * 2 gnu.trove.map.hash.TLongLongHashMap.remove(J)J: I14 Branch 46 IFLT L276 - false
   */

  @Test
  public void test6()  throws Throwable  {
      long[] longArray0 = new long[15];
      longArray0[0] = (long) 1731;
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      long long0 = tLongLongHashMap0.remove(1731L);
      assertEquals("{0=0}", tLongLongHashMap0.toString());
      assertEquals(1731L, long0);
  }

  //Test case number: 7
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.iterator()Lgnu/trove/iterator/TLongLongIterator;: root-Branch
   * 2 gnu.trove.map.hash.TLongLongHashMap$TLongLongHashIterator.<init>(Lgnu/trove/map/hash/TLongLongHashMap;Lgnu/trove/map/hash/TLongLongHashMap;)V: root-Branch
   * 3 gnu.trove.map.hash.TLongLongHashMap.<init>(Lgnu/trove/map/TLongLongMap;)V: I10 Branch 34 IFEQ L133 - false
   * 4 gnu.trove.map.hash.TLongLongHashMap.<init>(Lgnu/trove/map/TLongLongMap;)V: I40 Branch 35 IFEQ L139 - false
   * 5 gnu.trove.map.hash.TLongLongHashMap.<init>(Lgnu/trove/map/TLongLongMap;)V: I54 Branch 36 IFEQ L143 - false
   * 6 gnu.trove.map.hash.TLongLongHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 7 gnu.trove.map.hash.TLongLongHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 8 gnu.trove.map.hash.TLongLongHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 9 gnu.trove.map.hash.TLongLongHashMap.putAll(Lgnu/trove/map/TLongLongMap;)V: I15 Branch 43 IFEQ L243 - true
   */

  @Test
  public void test7()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap((-1), (float) (-1), (long) (-1), 1L);
      TLongLongHashMap tLongLongHashMap1 = new TLongLongHashMap((TLongLongMap) tLongLongHashMap0);
      assertEquals((-1L), tLongLongHashMap1.getNoEntryKey());
      assertEquals(1L, tLongLongHashMap1.getNoEntryValue());
      assertEquals(3, tLongLongHashMap1.capacity());
  }

  //Test case number: 8
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap$TLongLongHashIterator.value()J: root-Branch
   * 2 gnu.trove.map.hash.TLongLongHashMap$TLongLongHashIterator.advance()V: root-Branch
   * 3 gnu.trove.map.hash.TLongLongHashMap$TLongLongHashIterator.key()J: root-Branch
   * 4 gnu.trove.map.hash.TLongLongHashMap.<init>(Lgnu/trove/map/TLongLongMap;)V: I40 Branch 35 IFEQ L139 - true
   * 5 gnu.trove.map.hash.TLongLongHashMap.<init>(Lgnu/trove/map/TLongLongMap;)V: I54 Branch 36 IFEQ L143 - true
   * 6 gnu.trove.map.hash.TLongLongHashMap.putAll(Lgnu/trove/map/TLongLongMap;)V: I15 Branch 43 IFEQ L243 - false
   * 7 gnu.trove.map.hash.TLongLongHashMap.iterator()Lgnu/trove/iterator/TLongLongIterator;: root-Branch
   * 8 gnu.trove.map.hash.TLongLongHashMap.putAll(Lgnu/trove/map/TLongLongMap;)V: I15 Branch 43 IFEQ L243 - true
   * 9 gnu.trove.map.hash.TLongLongHashMap.<init>(Lgnu/trove/map/TLongLongMap;)V: I10 Branch 34 IFEQ L133 - false
   * 10 gnu.trove.map.hash.TLongLongHashMap$TLongLongHashIterator.<init>(Lgnu/trove/map/hash/TLongLongHashMap;Lgnu/trove/map/hash/TLongLongHashMap;)V: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      long[] longArray0 = new long[8];
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      TLongLongHashMap tLongLongHashMap1 = new TLongLongHashMap((TLongLongMap) tLongLongHashMap0);
      assertEquals(23, tLongLongHashMap1.capacity());
      assertEquals(false, tLongLongHashMap1.isEmpty());
      assertEquals("{0=0}", tLongLongHashMap0.toString());
      assertEquals(0L, tLongLongHashMap1.getNoEntryValue());
      assertEquals(1, tLongLongHashMap0.size());
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongLongHashMap.putIfAbsent(JJ)J: I9 Branch 39 IFGE L205 - false
   */

  @Test
  public void test9()  throws Throwable  {
      long[] longArray0 = new long[15];
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      long long0 = tLongLongHashMap0.putIfAbsent(0L, (long) 1731);
      assertEquals(1, tLongLongHashMap0.size());
      assertEquals(31, tLongLongHashMap0.capacity());
      assertEquals("{0=0}", tLongLongHashMap0.toString());
      assertEquals(0L, long0);
  }

  //Test case number: 10
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - true
   * 2 gnu.trove.map.hash.TLongLongHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - true
   * 3 gnu.trove.map.hash.TLongLongHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - false
   */

  @Test
  public void test10()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      HashMap<Long, Long> hashMap0 = new HashMap<Long, Long>();
      Long long0 = new Long((-244L));
      hashMap0.put(long0, long0);
      tLongLongHashMap0.putAll((Map<? extends Long, ? extends Long>) hashMap0);
      boolean boolean0 = tLongLongHashMap0.isEmpty();
      assertEquals("{-244=-244}", tLongLongHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongLongHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - false
   */

  @Test
  public void test11()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      boolean boolean0 = tLongLongHashMap0.isEmpty();
      assertEquals(true, boolean0);
      assertEquals(23, tLongLongHashMap0.capacity());
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongLongHashMap.remove(J)J: I14 Branch 46 IFLT L276 - true
   */

  @Test
  public void test12()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      long long0 = tLongLongHashMap0.remove(1367L);
      assertEquals(23, tLongLongHashMap0.capacity());
      assertEquals(0L, long0);
      assertEquals(0, tLongLongHashMap0.size());
  }

  //Test case number: 13
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.keys()[J: I27 Branch 47 IFLE L303 - true
   * 2 gnu.trove.map.hash.TLongLongHashMap.keys()[J: I27 Branch 47 IFLE L303 - false
   * 3 gnu.trove.map.hash.TLongLongHashMap.keys()[J: I34 Branch 48 IF_ICMPNE L304 - true
   * 4 gnu.trove.map.hash.TLongLongHashMap.keys()[J: I34 Branch 48 IF_ICMPNE L304 - false
   */

  @Test
  public void test13()  throws Throwable  {
      long[] longArray0 = new long[8];
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      long[] longArray1 = tLongLongHashMap0.keys();
      assertNotNull(longArray1);
      assertEquals("{0=0}", tLongLongHashMap0.toString());
      assertEquals(1, tLongLongHashMap0.size());
  }

  //Test case number: 14
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.keys([J)[J: I10 Branch 49 IF_ICMPGE L315 - true
   * 2 gnu.trove.map.hash.TLongLongHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - true
   * 3 gnu.trove.map.hash.TLongLongHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - false
   * 4 gnu.trove.map.hash.TLongLongHashMap.keys([J)[J: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test14()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      long[] longArray0 = tLongLongHashMap0.keys(tLongLongHashMap0._set);
      assertEquals(23, tLongLongHashMap0.capacity());
      assertNotNull(longArray0);
  }

  //Test case number: 15
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.keys([J)[J: I10 Branch 49 IF_ICMPGE L315 - false
   * 2 gnu.trove.map.hash.TLongLongHashMap.keys([J)[J: I44 Branch 51 IF_ICMPNE L323 - false
   * 3 gnu.trove.map.hash.TLongLongHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - true
   * 4 gnu.trove.map.hash.TLongLongHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - false
   * 5 gnu.trove.map.hash.TLongLongHashMap.keys([J)[J: I44 Branch 51 IF_ICMPNE L323 - true
   * 6 gnu.trove.map.hash.TLongLongHashMap.<init>(IF)V: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[0] = (-1729L);
      longArray0[1] = 2L;
      longArray0[2] = (-1940L);
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      TLongLongHashMap tLongLongHashMap1 = new TLongLongHashMap((-88), (float) (-1729L));
      long[] longArray1 = tLongLongHashMap0.keys(tLongLongHashMap1._set);
      assertNotNull(longArray1);
      assertEquals(4, tLongLongHashMap0.size());
      assertEquals("{-1729=-1729, 2=2, -1940=-1940, 0=0}", tLongLongHashMap0.toString());
  }

  //Test case number: 16
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.values()[J: I27 Branch 52 IFLE L343 - true
   * 2 gnu.trove.map.hash.TLongLongHashMap.values()[J: I27 Branch 52 IFLE L343 - false
   * 3 gnu.trove.map.hash.TLongLongHashMap.values()[J: I34 Branch 53 IF_ICMPNE L344 - true
   * 4 gnu.trove.map.hash.TLongLongHashMap.values()[J: I34 Branch 53 IF_ICMPNE L344 - false
   */

  @Test
  public void test16()  throws Throwable  {
      long[] longArray0 = new long[9];
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      long[] longArray1 = tLongLongHashMap0.values();
      assertNotNull(longArray1);
      assertEquals(23, tLongLongHashMap0.capacity());
      assertEquals(1, tLongLongHashMap0.size());
      assertEquals("{0=0}", tLongLongHashMap0.toString());
  }

  //Test case number: 17
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.values([J)[J: I10 Branch 54 IF_ICMPGE L355 - true
   * 2 gnu.trove.map.hash.TLongLongHashMap.values([J)[J: I37 Branch 55 IFLE L362 - true
   * 3 gnu.trove.map.hash.TLongLongHashMap.values([J)[J: I37 Branch 55 IFLE L362 - false
   * 4 gnu.trove.map.hash.TLongLongHashMap.values([J)[J: I44 Branch 56 IF_ICMPNE L363 - true
   * 5 gnu.trove.map.hash.TLongLongHashMap.values([J)[J: I44 Branch 56 IF_ICMPNE L363 - false
   */

  @Test
  public void test17()  throws Throwable  {
      long[] longArray0 = new long[7];
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      long[] longArray1 = tLongLongHashMap0.values(tLongLongHashMap0._set);
      assertNotNull(longArray1);
      assertEquals(1, tLongLongHashMap0.size());
      assertEquals("{0=0}", tLongLongHashMap0.toString());
      assertEquals(false, tLongLongHashMap0.isEmpty());
  }

  //Test case number: 18
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.values([J)[J: I10 Branch 54 IF_ICMPGE L355 - false
   * 2 gnu.trove.map.hash.TLongLongHashMap.values([J)[J: I37 Branch 55 IFLE L362 - true
   * 3 gnu.trove.map.hash.TLongLongHashMap.values([J)[J: I37 Branch 55 IFLE L362 - false
   * 4 gnu.trove.map.hash.TLongLongHashMap.values([J)[J: I44 Branch 56 IF_ICMPNE L363 - true
   * 5 gnu.trove.map.hash.TLongLongHashMap.values([J)[J: I44 Branch 56 IF_ICMPNE L363 - false
   */

  @Test
  public void test18()  throws Throwable  {
      long[] longArray0 = new long[7];
      longArray0[6] = (-9223372036854775808L);
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      long[] longArray1 = new long[1];
      long[] longArray2 = tLongLongHashMap0.values(longArray1);
      assertEquals(2, tLongLongHashMap0.size());
      assertEquals("{-9223372036854775808=-9223372036854775808, 0=0}", tLongLongHashMap0.toString());
      assertNotNull(longArray2);
  }

  //Test case number: 19
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.containsValue(J)Z: I25 Branch 58 IF_ICMPNE L377 - false
   * 2 gnu.trove.map.hash.TLongLongHashMap.containsValue(J)Z: I31 Branch 59 IFNE L377 - true
   * 3 gnu.trove.map.hash.TLongLongHashMap.containsValue(J)Z: I18 Branch 57 IFLE L376 - true
   * 4 gnu.trove.map.hash.TLongLongHashMap.containsValue(J)Z: I18 Branch 57 IFLE L376 - false
   * 5 gnu.trove.map.hash.TLongLongHashMap.containsValue(J)Z: I25 Branch 58 IF_ICMPNE L377 - true
   */

  @Test
  public void test19()  throws Throwable  {
      long[] longArray0 = new long[7];
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      boolean boolean0 = tLongLongHashMap0.containsValue((long) 3);
      assertEquals(false, boolean0);
      assertEquals(1, tLongLongHashMap0.size());
      assertEquals("{0=0}", tLongLongHashMap0.toString());
  }

  //Test case number: 20
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.containsValue(J)Z: I31 Branch 59 IFNE L377 - false
   * 2 gnu.trove.map.hash.TLongLongHashMap.containsValue(J)Z: I18 Branch 57 IFLE L376 - false
   * 3 gnu.trove.map.hash.TLongLongHashMap.containsValue(J)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 4 gnu.trove.map.hash.TLongLongHashMap.containsValue(J)Z: I25 Branch 58 IF_ICMPNE L377 - false
   */

  @Test
  public void test20()  throws Throwable  {
      long[] longArray0 = new long[8];
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      boolean boolean0 = tLongLongHashMap0.containsValue(0L);
      assertEquals(1, tLongLongHashMap0.size());
      assertEquals("{0=0}", tLongLongHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 60 IFLE L407 - true
   * 2 gnu.trove.map.hash.TLongLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TLongLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test21()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap((-88), (float) (-1729L));
      boolean boolean0 = tLongLongHashMap0.forEachValue((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 22
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - false
   * 2 gnu.trove.map.hash.TLongLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TLongLongHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   */

  @Test
  public void test22()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(0, (float) 0, 0L, 1393L);
      tLongLongHashMap0.put((long) 1294, (long) 1294);
      // Undeclared exception!
      try {
        tLongLongHashMap0.forEachValue((TLongProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I18 Branch 66 IFLE L434 - true
   * 2 gnu.trove.map.hash.TLongLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I18 Branch 66 IFLE L434 - false
   * 3 gnu.trove.map.hash.TLongLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test23()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      tLongLongHashMap0.transformValues((TLongFunction) null);
      assertEquals(23, tLongLongHashMap0.capacity());
  }

  //Test case number: 24
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I25 Branch 67 IF_ICMPNE L435 - false
   * 2 gnu.trove.map.hash.TLongLongHashMap.<init>(IFJJ)V: root-Branch
   * 3 gnu.trove.map.hash.TLongLongHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 4 gnu.trove.map.hash.TLongLongHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 5 gnu.trove.map.hash.TLongLongHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 6 gnu.trove.map.hash.TLongLongHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 7 gnu.trove.map.hash.TLongLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I18 Branch 66 IFLE L434 - false
   * 8 gnu.trove.map.hash.TLongLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   * 9 gnu.trove.map.hash.TLongLongHashMap.adjustOrPutValue(JJJ)J: I9 Branch 72 IFGE L491 - true
   * 10 gnu.trove.map.hash.TLongLongHashMap.adjustOrPutValue(JJJ)J: I58 Branch 73 IFEQ L502 - false
   */

  @Test
  public void test24()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap((-1), (float) (-1), (long) (-1), 1L);
      tLongLongHashMap0.adjustOrPutValue(9223372036854775807L, (long) (-1), (long) 0);
      // Undeclared exception!
      try {
        tLongLongHashMap0.transformValues((TLongFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.retainEntries(Lgnu/trove/procedure/TLongLongProcedure;)Z: I31 Branch 68 IFLE L453 - true
   * 2 gnu.trove.map.hash.TLongLongHashMap.retainEntries(Lgnu/trove/procedure/TLongLongProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TLongLongHashMap.retainEntries(Lgnu/trove/procedure/TLongLongProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test25()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      boolean boolean0 = tLongLongHashMap0.retainEntries((TLongLongProcedure) null);
      assertEquals(23, tLongLongHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.retainEntries(Lgnu/trove/procedure/TLongLongProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - false
   * 2 gnu.trove.map.hash.TLongLongHashMap.retainEntries(Lgnu/trove/procedure/TLongLongProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TLongLongHashMap.retainEntries(Lgnu/trove/procedure/TLongLongProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test26()  throws Throwable  {
      long[] longArray0 = new long[7];
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      // Undeclared exception!
      try {
        tLongLongHashMap0.retainEntries((TLongLongProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.adjustValue(JJ)Z: I9 Branch 71 IFGE L477 - false
   * 2 gnu.trove.map.hash.TLongLongHashMap.increment(J)Z: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(1731, 1731);
      boolean boolean0 = tLongLongHashMap0.increment(0L);
      assertEquals(false, boolean0);
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.adjustOrPutValue(JJJ)J: I9 Branch 72 IFGE L491 - false
   * 2 gnu.trove.map.hash.TLongLongHashMap.adjustOrPutValue(JJJ)J: I58 Branch 73 IFEQ L502 - true
   */

  @Test
  public void test28()  throws Throwable  {
      long[] longArray0 = new long[15];
      longArray0[0] = (long) 1731;
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      long long0 = tLongLongHashMap0.adjustOrPutValue(1731L, 0L, 0L);
      assertEquals(2, tLongLongHashMap0.size());
      assertEquals(1731L, long0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - false
   * 2 gnu.trove.map.hash.TLongLongHashMap.<init>(I)V: root-Branch
   */

  @Test
  public void test29()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(38747);
      boolean boolean0 = tLongLongHashMap0.equals((Object) "");
      assertEquals(77509, tLongLongHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - false
   * 2 gnu.trove.map.hash.TLongLongHashMap.<init>(IF)V: root-Branch
   * 3 gnu.trove.map.hash.TLongLongHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   */

  @Test
  public void test30()  throws Throwable  {
      long[] longArray0 = new long[9];
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      TLongLongHashMap tLongLongHashMap1 = new TLongLongHashMap(0, (float) (-1L));
      boolean boolean0 = tLongLongHashMap0.equals((Object) tLongLongHashMap1);
      assertEquals(false, boolean0);
      assertEquals(23, tLongLongHashMap0.capacity());
      assertFalse(tLongLongHashMap1.equals(tLongLongHashMap0));
      assertEquals("{0=0}", tLongLongHashMap0.toString());
      assertEquals(1, tLongLongHashMap0.size());
  }

  //Test case number: 31
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.equals(Ljava/lang/Object;)Z: I85 Branch 78 IFEQ L1200 - false
   * 2 gnu.trove.map.hash.TLongLongHashMap.equals(Ljava/lang/Object;)Z: I89 Branch 79 IFEQ L1200 - false
   * 3 gnu.trove.map.hash.TLongLongHashMap.equals(Ljava/lang/Object;)Z: I93 Branch 80 IFEQ L1200 - true
   * 4 gnu.trove.map.hash.TLongLongHashMap.get(J)J: I9 Branch 44 IFGE L253 - false
   * 5 gnu.trove.map.hash.TLongLongHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 6 gnu.trove.map.hash.TLongLongHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 7 gnu.trove.map.hash.TLongLongHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 8 gnu.trove.map.hash.TLongLongHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 9 gnu.trove.map.hash.TLongLongHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 10 gnu.trove.map.hash.TLongLongHashMap.putIfAbsent(JJ)J: I9 Branch 39 IFGE L205 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      TLongLongHashMap tLongLongHashMap1 = new TLongLongHashMap(tLongLongHashMap0._set, tLongLongHashMap0._set);
      tLongLongHashMap0.putIfAbsent((-263L), (-2009L));
      boolean boolean0 = tLongLongHashMap0.equals((Object) tLongLongHashMap1);
      assertEquals(false, tLongLongHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 32
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.equals(Ljava/lang/Object;)Z: I89 Branch 79 IFEQ L1200 - true
   * 2 gnu.trove.map.hash.TLongLongHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 3 gnu.trove.map.hash.TLongLongHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 4 gnu.trove.map.hash.TLongLongHashMap.equals(Ljava/lang/Object;)Z: I85 Branch 78 IFEQ L1200 - true
   * 5 gnu.trove.map.hash.TLongLongHashMap.get(J)J: I9 Branch 44 IFGE L253 - true
   */

  @Test
  public void test32()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[0] = (long) 394;
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      TLongLongHashMap tLongLongHashMap1 = new TLongLongHashMap(longArray0, tLongLongHashMap0._set);
      boolean boolean0 = tLongLongHashMap1.equals((Object) tLongLongHashMap0);
      assertEquals("{394=0, 0=0}", tLongLongHashMap1.toString());
      assertEquals(true, boolean0);
      assertEquals(2, tLongLongHashMap0.size());
      assertEquals("{394=394, 0=0}", tLongLongHashMap0.toString());
  }

  //Test case number: 33
  /*
   * 12 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.equals(Ljava/lang/Object;)Z: I93 Branch 80 IFEQ L1200 - false
   * 2 gnu.trove.map.hash.TLongLongHashMap.<init>()V: root-Branch
   * 3 gnu.trove.map.hash.TLongLongHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 4 gnu.trove.map.hash.TLongLongHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 5 gnu.trove.map.hash.TLongLongHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 6 gnu.trove.map.hash.TLongLongHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 7 gnu.trove.map.hash.TLongLongHashMap.equals(Ljava/lang/Object;)Z: I85 Branch 78 IFEQ L1200 - false
   * 8 gnu.trove.map.hash.TLongLongHashMap.equals(Ljava/lang/Object;)Z: I89 Branch 79 IFEQ L1200 - false
   * 9 gnu.trove.map.hash.TLongLongHashMap.adjustOrPutValue(JJJ)J: I9 Branch 72 IFGE L491 - true
   * 10 gnu.trove.map.hash.TLongLongHashMap.adjustOrPutValue(JJJ)J: I58 Branch 73 IFEQ L502 - false
   * 11 gnu.trove.map.hash.TLongLongHashMap.putIfAbsent(JJ)J: I9 Branch 39 IFGE L205 - true
   * 12 gnu.trove.map.hash.TLongLongHashMap.get(J)J: I9 Branch 44 IFGE L253 - true
   */

  @Test
  public void test33()  throws Throwable  {
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap();
      tLongLongHashMap0.adjustOrPutValue(712L, (-1L), (-1L));
      TLongLongHashMap tLongLongHashMap1 = new TLongLongHashMap(tLongLongHashMap0._set, tLongLongHashMap0._set);
      tLongLongHashMap0.putIfAbsent((-263L), (-2009L));
      boolean boolean0 = tLongLongHashMap0.equals((Object) tLongLongHashMap1);
      assertEquals(2, tLongLongHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 34
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 2 gnu.trove.map.hash.TLongLongHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 3 gnu.trove.map.hash.TLongLongHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   * 4 gnu.trove.map.hash.TLongLongHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - false
   */

  @Test
  public void test34()  throws Throwable  {
      long[] longArray0 = new long[15];
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      int int0 = tLongLongHashMap0.hashCode();
      assertEquals(0, int0);
      assertEquals(31, tLongLongHashMap0.capacity());
      assertEquals(1, tLongLongHashMap0.size());
  }

  //Test case number: 35
  /*
   * 11 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap$1.execute(JJ)Z: I4 Branch 115 IFEQ L1233 - true
   * 2 gnu.trove.map.hash.TLongLongHashMap$1.<init>(Lgnu/trove/map/hash/TLongLongHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 3 gnu.trove.map.hash.TLongLongHashMap$1.execute(JJ)Z: I4 Branch 115 IFEQ L1233 - false
   * 4 gnu.trove.map.hash.TLongLongHashMap.toString()Ljava/lang/String;: root-Branch
   * 5 gnu.trove.map.hash.TLongLongHashMap.doPut(JJI)J: I12 Branch 40 IFGE L214 - false
   * 6 gnu.trove.map.hash.TLongLongHashMap.doPut(JJI)J: I41 Branch 41 IFEQ L221 - true
   * 7 gnu.trove.map.hash.TLongLongHashMap.forEachEntry(Lgnu/trove/procedure/TLongLongProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 8 gnu.trove.map.hash.TLongLongHashMap.forEachEntry(Lgnu/trove/procedure/TLongLongProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 9 gnu.trove.map.hash.TLongLongHashMap.forEachEntry(Lgnu/trove/procedure/TLongLongProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 10 gnu.trove.map.hash.TLongLongHashMap.forEachEntry(Lgnu/trove/procedure/TLongLongProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 11 gnu.trove.map.hash.TLongLongHashMap.forEachEntry(Lgnu/trove/procedure/TLongLongProcedure;)Z: I39 Branch 65 IFNE L422 - true
   */

  @Test
  public void test35()  throws Throwable  {
      long[] longArray0 = new long[7];
      longArray0[6] = (-9223372036854775808L);
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      String string0 = tLongLongHashMap0.toString();
      assertNotNull(string0);
      assertEquals(2, tLongLongHashMap0.size());
      assertEquals("{-9223372036854775808=-9223372036854775808, 0=0}", string0);
  }

  //Test case number: 36
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.hash.TLongLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - true
   * 2 gnu.trove.map.hash.TLongLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - false
   * 3 gnu.trove.map.hash.TLongLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - true
   * 4 gnu.trove.map.hash.TLongLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - false
   * 5 gnu.trove.map.hash.TLongLongHashMap.setUp(I)I: root-Branch
   * 6 gnu.trove.map.hash.TLongLongHashMap.put(JJ)J: root-Branch
   * 7 gnu.trove.map.hash.TLongLongHashMap.doPut(JJI)J: I12 Branch 40 IFGE L214 - true
   * 8 gnu.trove.map.hash.TLongLongHashMap.doPut(JJI)J: I41 Branch 41 IFEQ L221 - false
   * 9 gnu.trove.map.hash.TLongLongHashMap.<init>([J[J)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 10 gnu.trove.map.hash.TLongLongHashMap.<init>([J[J)V: I24 Branch 33 IF_ICMPGE L119 - false
   */

  @Test
  public void test36()  throws Throwable  {
      long[] longArray0 = new long[1];
      TLongLongHashMap tLongLongHashMap0 = new TLongLongHashMap(longArray0, longArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tLongLongHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals("{0=0}", tLongLongHashMap0.toString());
      assertEquals(1, tLongLongHashMap0.size());
      assertEquals(false, tLongLongHashMap0.isEmpty());
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TLongFunction;
import gnu.trove.map.TByteLongMap;
import gnu.trove.map.hash.TByteLongHashMap;
import gnu.trove.procedure.TByteLongProcedure;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TLongProcedure;
import gnu.trove.set.TByteSet;
import java.io.BufferedOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TByteLongHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 16 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap$TByteLongHashIterator.key()B: root-Branch
   * 2 gnu.trove.map.hash.TByteLongHashMap$TByteLongHashIterator.<init>(Lgnu/trove/map/hash/TByteLongHashMap;Lgnu/trove/map/hash/TByteLongHashMap;)V: root-Branch
   * 3 gnu.trove.map.hash.TByteLongHashMap$TByteLongHashIterator.value()J: root-Branch
   * 4 gnu.trove.map.hash.TByteLongHashMap$TByteLongHashIterator.advance()V: root-Branch
   * 5 gnu.trove.map.hash.TByteLongHashMap.put(BJ)J: root-Branch
   * 6 gnu.trove.map.hash.TByteLongHashMap.iterator()Lgnu/trove/iterator/TByteLongIterator;: root-Branch
   * 7 gnu.trove.map.hash.TByteLongHashMap.setUp(I)I: root-Branch
   * 8 gnu.trove.map.hash.TByteLongHashMap.<init>([B[J)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 9 gnu.trove.map.hash.TByteLongHashMap.<init>([B[J)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 10 gnu.trove.map.hash.TByteLongHashMap.<init>(Lgnu/trove/map/TByteLongMap;)V: I10 Branch 34 IFEQ L133 - false
   * 11 gnu.trove.map.hash.TByteLongHashMap.<init>(Lgnu/trove/map/TByteLongMap;)V: I38 Branch 35 IFEQ L139 - true
   * 12 gnu.trove.map.hash.TByteLongHashMap.<init>(Lgnu/trove/map/TByteLongMap;)V: I52 Branch 36 IFEQ L143 - true
   * 13 gnu.trove.map.hash.TByteLongHashMap.doPut(BJI)J: I12 Branch 40 IFGE L214 - true
   * 14 gnu.trove.map.hash.TByteLongHashMap.doPut(BJI)J: I41 Branch 41 IFEQ L221 - false
   * 15 gnu.trove.map.hash.TByteLongHashMap.putAll(Lgnu/trove/map/TByteLongMap;)V: I15 Branch 43 IFEQ L243 - true
   * 16 gnu.trove.map.hash.TByteLongHashMap.putAll(Lgnu/trove/map/TByteLongMap;)V: I15 Branch 43 IFEQ L243 - false
   */

//   @Test
//   public void test0()  throws Throwable  {
//       byte[] byteArray0 = new byte[1];
//       long[] longArray0 = new long[5];
//       TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(byteArray0, longArray0);
//       TByteLongHashMap tByteLongHashMap1 = new TByteLongHashMap((TByteLongMap) tByteLongHashMap0);
//       assertEquals(0L, tByteLongHashMap1.getNoEntryValue());
//       assertEquals(23, tByteLongHashMap1.capacity());
//       assertEquals(0, tByteLongHashMap1.getNoEntryKey());
//       assertEquals("{0=0}", tByteLongHashMap1.toString());
//       assertEquals(1, tByteLongHashMap1.size());
//   }

  //Test case number: 1
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.removeAt(I)V: root-Branch
   * 2 gnu.trove.map.hash.TByteLongHashMap.<init>(IF)V: root-Branch
   * 3 gnu.trove.map.hash.TByteLongHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 4 gnu.trove.map.hash.TByteLongHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 5 gnu.trove.map.hash.TByteLongHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 6 gnu.trove.map.hash.TByteLongHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 7 gnu.trove.map.hash.TByteLongHashMap.putIfAbsent(BJ)J: I9 Branch 39 IFGE L205 - true
   * 8 gnu.trove.map.hash.TByteLongHashMap.remove(B)J: I14 Branch 46 IFLT L276 - false
   */

  @Test
  public void test1()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap((-7), (-7));
      tByteLongHashMap0.putIfAbsent((byte) (-1), (byte) (-1));
      assertEquals(false, tByteLongHashMap0.isEmpty());
      
      long long0 = tByteLongHashMap0.remove((byte) (-1));
      assertEquals((-1L), long0);
  }

  //Test case number: 2
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.keySet()Lgnu/trove/set/TByteSet;: root-Branch
   * 2 gnu.trove.map.hash.TByteLongHashMap$TKeyView.<init>(Lgnu/trove/map/hash/TByteLongHashMap;)V: root-Branch
   * 3 gnu.trove.map.hash.TByteLongHashMap.doPut(BJI)J: I12 Branch 40 IFGE L214 - false
   * 4 gnu.trove.map.hash.TByteLongHashMap.doPut(BJI)J: I41 Branch 41 IFEQ L221 - true
   */

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      long[] longArray0 = new long[6];
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(byteArray0, longArray0);
      TByteSet tByteSet0 = tByteLongHashMap0.keySet();
      assertEquals("{0=0}", tByteLongHashMap0.toString());
      assertEquals(17, tByteLongHashMap0.capacity());
      assertEquals(1, tByteSet0.size());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.increment(B)Z: root-Branch
   * 2 gnu.trove.map.hash.TByteLongHashMap.adjustValue(BJ)Z: I9 Branch 71 IFGE L477 - true
   */

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      long[] longArray0 = new long[7];
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(byteArray0, longArray0);
      boolean boolean0 = tByteLongHashMap0.increment((byte)0);
      assertEquals("{0=1}", tByteLongHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TByteLongHashMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap((-771), 0.0F);
      boolean boolean0 = tByteLongHashMap0.forEachKey((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.valueCollection()Lgnu/trove/TLongCollection;: root-Branch
   * 2 gnu.trove.map.hash.TByteLongHashMap.<init>()V: root-Branch
   * 3 gnu.trove.map.hash.TByteLongHashMap$TValueView.<init>(Lgnu/trove/map/hash/TByteLongHashMap;)V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      tByteLongHashMap0.valueCollection();
      assertEquals(23, tByteLongHashMap0.capacity());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TByteLongHashMap.containsKey(B)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap((-771), 0.0F);
      boolean boolean0 = tByteLongHashMap0.containsKey((byte) (-28));
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TByteLongHashMap.clear()V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap((-771), 0.0F);
      tByteLongHashMap0.clear();
      assertEquals("{}", tByteLongHashMap0.toString());
  }

  //Test case number: 8
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.<init>(Lgnu/trove/map/TByteLongMap;)V: I38 Branch 35 IFEQ L139 - false
   * 2 gnu.trove.map.hash.TByteLongHashMap.<init>(Lgnu/trove/map/TByteLongMap;)V: I52 Branch 36 IFEQ L143 - false
   * 3 gnu.trove.map.hash.TByteLongHashMap$TByteLongHashIterator.<init>(Lgnu/trove/map/hash/TByteLongHashMap;Lgnu/trove/map/hash/TByteLongHashMap;)V: root-Branch
   * 4 gnu.trove.map.hash.TByteLongHashMap.iterator()Lgnu/trove/iterator/TByteLongIterator;: root-Branch
   * 5 gnu.trove.map.hash.TByteLongHashMap.putAll(Lgnu/trove/map/TByteLongMap;)V: I15 Branch 43 IFEQ L243 - true
   * 6 gnu.trove.map.hash.TByteLongHashMap.<init>(Lgnu/trove/map/TByteLongMap;)V: I10 Branch 34 IFEQ L133 - false
   * 7 gnu.trove.map.hash.TByteLongHashMap.<init>(IFBJ)V: root-Branch
   */

//   @Test
//   public void test8()  throws Throwable  {
//       TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap((int) (byte) (-90), (float) (-90L), (byte) (-90), (long) (byte) (-90));
//       TByteLongHashMap tByteLongHashMap1 = new TByteLongHashMap((TByteLongMap) tByteLongHashMap0);
//       assertEquals((-90L), tByteLongHashMap1.getNoEntryValue());
//       assertEquals(3, tByteLongHashMap1.capacity());
//       assertEquals(-90, tByteLongHashMap1.getNoEntryKey());
//   }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TByteLongHashMap.putIfAbsent(BJ)J: I9 Branch 39 IFGE L205 - false
   */

  @Test
  public void test9()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)29;
      long[] longArray0 = new long[12];
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(byteArray0, longArray0);
      long long0 = tByteLongHashMap0.putIfAbsent((byte)29, (byte)29);
      assertEquals(31, tByteLongHashMap0.capacity());
      assertEquals("{29=0, 0=0}", tByteLongHashMap0.toString());
      assertEquals(2, tByteLongHashMap0.size());
      assertEquals(0L, long0);
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - false
   * 2 gnu.trove.map.hash.TByteLongHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - true
   */

  @Test
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      long[] longArray0 = new long[6];
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(byteArray0, longArray0);
      HashMap<Byte, Long> hashMap0 = new HashMap<Byte, Long>();
      hashMap0.put((Byte) (byte)126, (Long) 0L);
      tByteLongHashMap0.putAll((Map<? extends Byte, ? extends Long>) hashMap0);
      assertEquals("{126=0, 0=0}", tByteLongHashMap0.toString());
  }

  //Test case number: 11
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.get(B)J: I9 Branch 44 IFGE L253 - true
   * 2 gnu.trove.map.hash.TByteLongHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 3 gnu.trove.map.hash.TByteLongHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 4 gnu.trove.map.hash.TByteLongHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 5 gnu.trove.map.hash.TByteLongHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 6 gnu.trove.map.hash.TByteLongHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 7 gnu.trove.map.hash.TByteLongHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 8 gnu.trove.map.hash.TByteLongHashMap.equals(Ljava/lang/Object;)Z: I85 Branch 78 IFEQ L1200 - true
   */

  @Test
  public void test11()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(1911, 1911);
      tByteLongHashMap0.put((byte)89, (long) 1911);
      boolean boolean0 = tByteLongHashMap0.equals((Object) tByteLongHashMap0);
      assertEquals(false, tByteLongHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 12
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.get(B)J: I9 Branch 44 IFGE L253 - false
   * 2 gnu.trove.map.hash.TByteLongHashMap.<init>(I)V: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap((-769));
      long long0 = tByteLongHashMap0.get((byte)0);
      assertEquals(0L, long0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TByteLongHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - true
   */

  @Test
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      long[] longArray0 = new long[7];
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(byteArray0, longArray0);
      boolean boolean0 = tByteLongHashMap0.isEmpty();
      assertEquals(false, boolean0);
      assertEquals(1, tByteLongHashMap0.size());
      assertEquals("{0=0}", tByteLongHashMap0.toString());
      assertEquals(37, tByteLongHashMap0.capacity());
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TByteLongHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - false
   */

  @Test
  public void test14()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap((-1));
      boolean boolean0 = tByteLongHashMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TByteLongHashMap.remove(B)J: I14 Branch 46 IFLT L276 - true
   */

  @Test
  public void test15()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      long long0 = tByteLongHashMap0.remove((byte)0);
      assertEquals(23, tByteLongHashMap0.capacity());
      assertEquals(0L, long0);
      assertEquals(true, tByteLongHashMap0.isEmpty());
  }

  //Test case number: 16
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.keys()[B: I34 Branch 48 IF_ICMPNE L304 - false
   * 2 gnu.trove.map.hash.TByteLongHashMap.keys()[B: I27 Branch 47 IFLE L303 - true
   * 3 gnu.trove.map.hash.TByteLongHashMap.keys()[B: I27 Branch 47 IFLE L303 - false
   * 4 gnu.trove.map.hash.TByteLongHashMap.keys()[B: I34 Branch 48 IF_ICMPNE L304 - true
   */

  @Test
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      long[] longArray0 = new long[7];
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(byteArray0, longArray0);
      byte[] byteArray1 = tByteLongHashMap0.keys();
      assertEquals(37, tByteLongHashMap0.capacity());
      assertNotNull(byteArray1);
      assertEquals("{0=0}", tByteLongHashMap0.toString());
      assertEquals(1, tByteLongHashMap0.size());
  }

  //Test case number: 17
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.keys([B)[B: I10 Branch 49 IF_ICMPGE L315 - true
   * 2 gnu.trove.map.hash.TByteLongHashMap.keys([B)[B: I37 Branch 50 IFLE L322 - true
   * 3 gnu.trove.map.hash.TByteLongHashMap.keys([B)[B: I37 Branch 50 IFLE L322 - false
   * 4 gnu.trove.map.hash.TByteLongHashMap.keys([B)[B: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test17()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(20, (-1454.9463F));
      byte[] byteArray0 = tByteLongHashMap0.keys(tByteLongHashMap0._states);
      assertNotNull(byteArray0);
  }

  //Test case number: 18
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.keys([B)[B: I10 Branch 49 IF_ICMPGE L315 - false
   * 2 gnu.trove.map.hash.TByteLongHashMap.keys([B)[B: I44 Branch 51 IF_ICMPNE L323 - false
   * 3 gnu.trove.map.hash.TByteLongHashMap.keys([B)[B: I37 Branch 50 IFLE L322 - true
   * 4 gnu.trove.map.hash.TByteLongHashMap.keys([B)[B: I37 Branch 50 IFLE L322 - false
   * 5 gnu.trove.map.hash.TByteLongHashMap.keys([B)[B: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte)35;
      byteArray0[2] = (byte) (-117);
      long[] longArray0 = new long[4];
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(20, (-1454.9463F));
      TByteLongHashMap tByteLongHashMap1 = new TByteLongHashMap(byteArray0, longArray0);
      byte[] byteArray1 = tByteLongHashMap1.keys(tByteLongHashMap0._set);
      assertEquals("{-117=0, 39=0, 35=0, 0=0}", tByteLongHashMap1.toString());
      assertNotNull(byteArray1);
      assertEquals(17, tByteLongHashMap1.capacity());
  }

  //Test case number: 19
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.values()[J: I27 Branch 52 IFLE L343 - true
   * 2 gnu.trove.map.hash.TByteLongHashMap.values()[J: I27 Branch 52 IFLE L343 - false
   * 3 gnu.trove.map.hash.TByteLongHashMap.values()[J: I34 Branch 53 IF_ICMPNE L344 - true
   * 4 gnu.trove.map.hash.TByteLongHashMap.values()[J: I34 Branch 53 IF_ICMPNE L344 - false
   */

  @Test
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      long[] longArray0 = new long[7];
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(byteArray0, longArray0);
      long[] longArray1 = tByteLongHashMap0.values();
      assertNotNull(longArray1);
      assertEquals("{0=0}", tByteLongHashMap0.toString());
      assertEquals(1, tByteLongHashMap0.size());
  }

  //Test case number: 20
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.values([J)[J: I10 Branch 54 IF_ICMPGE L355 - true
   * 2 gnu.trove.map.hash.TByteLongHashMap.values([J)[J: I37 Branch 55 IFLE L362 - true
   * 3 gnu.trove.map.hash.TByteLongHashMap.values([J)[J: I37 Branch 55 IFLE L362 - false
   * 4 gnu.trove.map.hash.TByteLongHashMap.values([J)[J: I44 Branch 56 IF_ICMPNE L363 - true
   */

  @Test
  public void test20()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      long[] longArray0 = new long[2];
      long[] longArray1 = tByteLongHashMap0.values(longArray0);
      assertNotNull(longArray1);
      assertEquals(23, tByteLongHashMap0.capacity());
      assertSame(longArray1, longArray0);
  }

  //Test case number: 21
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.values([J)[J: I10 Branch 54 IF_ICMPGE L355 - false
   * 2 gnu.trove.map.hash.TByteLongHashMap.values([J)[J: I44 Branch 56 IF_ICMPNE L363 - false
   * 3 gnu.trove.map.hash.TByteLongHashMap.adjustOrPutValue(BJJ)J: I9 Branch 72 IFGE L491 - true
   * 4 gnu.trove.map.hash.TByteLongHashMap.adjustOrPutValue(BJJ)J: I58 Branch 73 IFEQ L502 - false
   * 5 gnu.trove.map.hash.TByteLongHashMap.values([J)[J: I37 Branch 55 IFLE L362 - true
   * 6 gnu.trove.map.hash.TByteLongHashMap.values([J)[J: I37 Branch 55 IFLE L362 - false
   * 7 gnu.trove.map.hash.TByteLongHashMap.values([J)[J: I44 Branch 56 IF_ICMPNE L363 - true
   */

  @Test
  public void test21()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      tByteLongHashMap0.putIfAbsent((byte) (-40), 1357L);
      tByteLongHashMap0.adjustOrPutValue((byte)109, (long) (byte) (-1), 743L);
      tByteLongHashMap0.adjustOrPutValue((byte) (-1), (-1186L), 0L);
      long[] longArray0 = new long[2];
      tByteLongHashMap0.values(longArray0);
      assertEquals(3, tByteLongHashMap0.size());
      assertEquals("{109=743, -40=1357, -1=0}", tByteLongHashMap0.toString());
  }

  //Test case number: 22
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.containsValue(J)Z: I25 Branch 58 IF_ICMPNE L377 - false
   * 2 gnu.trove.map.hash.TByteLongHashMap.containsValue(J)Z: I31 Branch 59 IFNE L377 - true
   * 3 gnu.trove.map.hash.TByteLongHashMap.containsValue(J)Z: I18 Branch 57 IFLE L376 - true
   * 4 gnu.trove.map.hash.TByteLongHashMap.containsValue(J)Z: I18 Branch 57 IFLE L376 - false
   * 5 gnu.trove.map.hash.TByteLongHashMap.containsValue(J)Z: I25 Branch 58 IF_ICMPNE L377 - true
   */

  @Test
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      long[] longArray0 = new long[8];
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(byteArray0, longArray0);
      boolean boolean0 = tByteLongHashMap0.containsValue((long) (byte)59);
      assertEquals("{0=0}", tByteLongHashMap0.toString());
      assertEquals(1, tByteLongHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 23
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.containsValue(J)Z: I31 Branch 59 IFNE L377 - false
   * 2 gnu.trove.map.hash.TByteLongHashMap.containsValue(J)Z: I18 Branch 57 IFLE L376 - false
   * 3 gnu.trove.map.hash.TByteLongHashMap.containsValue(J)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 4 gnu.trove.map.hash.TByteLongHashMap.containsValue(J)Z: I25 Branch 58 IF_ICMPNE L377 - false
   */

  @Test
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      long[] longArray0 = new long[8];
      byteArray0[1] = (byte) (-90);
      longArray0[1] = (long) (byte)59;
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(byteArray0, longArray0);
      boolean boolean0 = tByteLongHashMap0.containsValue((long) (byte)59);
      assertEquals(2, tByteLongHashMap0.size());
      assertEquals(true, boolean0);
      assertEquals("{-90=59, 0=0}", tByteLongHashMap0.toString());
      assertEquals(17, tByteLongHashMap0.capacity());
  }

  //Test case number: 24
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 60 IFLE L407 - true
   * 2 gnu.trove.map.hash.TByteLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TByteLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test24()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap((-769));
      boolean boolean0 = tByteLongHashMap0.forEachValue((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 25
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - false
   * 2 gnu.trove.map.hash.TByteLongHashMap.<init>(IFBJ)V: root-Branch
   * 3 gnu.trove.map.hash.TByteLongHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 4 gnu.trove.map.hash.TByteLongHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 5 gnu.trove.map.hash.TByteLongHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 6 gnu.trove.map.hash.TByteLongHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 7 gnu.trove.map.hash.TByteLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 8 gnu.trove.map.hash.TByteLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test25()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(2000, (-1793.6512F), (byte)38, (long) (byte)38);
      tByteLongHashMap0.put((byte)38, (byte)38);
      // Undeclared exception!
      try {
        tByteLongHashMap0.forEachValue((TLongProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I18 Branch 66 IFLE L434 - true
   * 2 gnu.trove.map.hash.TByteLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I18 Branch 66 IFLE L434 - false
   * 3 gnu.trove.map.hash.TByteLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test26()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap((-1));
      tByteLongHashMap0.transformValues((TLongFunction) null);
      assertEquals("{}", tByteLongHashMap0.toString());
  }

  //Test case number: 27
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I25 Branch 67 IF_ICMPNE L435 - false
   * 2 gnu.trove.map.hash.TByteLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I18 Branch 66 IFLE L434 - false
   * 3 gnu.trove.map.hash.TByteLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test27()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      tByteLongHashMap0.put((byte)0, (byte)0);
      // Undeclared exception!
      try {
        tByteLongHashMap0.transformValues((TLongFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.retainEntries(Lgnu/trove/procedure/TByteLongProcedure;)Z: I31 Branch 68 IFLE L453 - true
   * 2 gnu.trove.map.hash.TByteLongHashMap.retainEntries(Lgnu/trove/procedure/TByteLongProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TByteLongHashMap.retainEntries(Lgnu/trove/procedure/TByteLongProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test28()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      boolean boolean0 = tByteLongHashMap0.retainEntries((TByteLongProcedure) null);
      assertEquals(false, boolean0);
      assertEquals(23, tByteLongHashMap0.capacity());
  }

  //Test case number: 29
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.retainEntries(Lgnu/trove/procedure/TByteLongProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - false
   * 2 gnu.trove.map.hash.TByteLongHashMap.retainEntries(Lgnu/trove/procedure/TByteLongProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TByteLongHashMap.retainEntries(Lgnu/trove/procedure/TByteLongProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      long[] longArray0 = new long[5];
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(byteArray0, longArray0);
      // Undeclared exception!
      try {
        tByteLongHashMap0.retainEntries((TByteLongProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.adjustValue(BJ)Z: I9 Branch 71 IFGE L477 - false
   * 2 gnu.trove.map.hash.TByteLongHashMap.increment(B)Z: root-Branch
   */

  @Test
  public void test30()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap();
      boolean boolean0 = tByteLongHashMap0.increment((byte)126);
      assertEquals(23, tByteLongHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 31
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.adjustOrPutValue(BJJ)J: I9 Branch 72 IFGE L491 - false
   * 2 gnu.trove.map.hash.TByteLongHashMap.adjustOrPutValue(BJJ)J: I58 Branch 73 IFEQ L502 - true
   */

  @Test
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)29;
      long[] longArray0 = new long[12];
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(byteArray0, longArray0);
      long long0 = tByteLongHashMap0.adjustOrPutValue((byte)29, (long) (byte)29, 0L);
      assertEquals("{29=29, 0=0}", tByteLongHashMap0.toString());
      assertEquals(29L, long0);
  }

  //Test case number: 32
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - false
   * 2 gnu.trove.map.hash.TByteLongHashMap.<init>(IF)V: root-Branch
   */

  @Test
  public void test32()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(20, (-1454.9463F));
      boolean boolean0 = tByteLongHashMap0.equals((Object) "170");
      assertEquals(false, boolean0);
  }

  //Test case number: 33
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - false
   * 2 gnu.trove.map.hash.TByteLongHashMap.<init>()V: root-Branch
   * 3 gnu.trove.map.hash.TByteLongHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   */

  @Test
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      long[] longArray0 = new long[6];
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(byteArray0, longArray0);
      TByteLongHashMap tByteLongHashMap1 = new TByteLongHashMap();
      boolean boolean0 = tByteLongHashMap0.equals((Object) tByteLongHashMap1);
      assertEquals(1, tByteLongHashMap0.size());
      assertFalse(tByteLongHashMap1.equals(tByteLongHashMap0));
      assertEquals("{0=0}", tByteLongHashMap0.toString());
      assertEquals(17, tByteLongHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 34
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - false
   * 2 gnu.trove.map.hash.TByteLongHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 3 gnu.trove.map.hash.TByteLongHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 4 gnu.trove.map.hash.TByteLongHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   */

  @Test
  public void test34()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap((-769));
      tByteLongHashMap0.putIfAbsent((byte)0, (long) 496);
      int int0 = tByteLongHashMap0.hashCode();
      assertEquals(false, tByteLongHashMap0.isEmpty());
      assertEquals(496, int0);
  }

  //Test case number: 35
  /*
   * 14 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap$1.execute(BJ)Z: I4 Branch 115 IFEQ L1233 - true
   * 2 gnu.trove.map.hash.TByteLongHashMap.toString()Ljava/lang/String;: root-Branch
   * 3 gnu.trove.map.hash.TByteLongHashMap.put(BJ)J: root-Branch
   * 4 gnu.trove.map.hash.TByteLongHashMap.<init>([B[J)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 5 gnu.trove.map.hash.TByteLongHashMap.<init>([B[J)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 6 gnu.trove.map.hash.TByteLongHashMap.forEachEntry(Lgnu/trove/procedure/TByteLongProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 7 gnu.trove.map.hash.TByteLongHashMap.forEachEntry(Lgnu/trove/procedure/TByteLongProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 8 gnu.trove.map.hash.TByteLongHashMap.forEachEntry(Lgnu/trove/procedure/TByteLongProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 9 gnu.trove.map.hash.TByteLongHashMap.forEachEntry(Lgnu/trove/procedure/TByteLongProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 10 gnu.trove.map.hash.TByteLongHashMap.forEachEntry(Lgnu/trove/procedure/TByteLongProcedure;)Z: I39 Branch 65 IFNE L422 - true
   * 11 gnu.trove.map.hash.TByteLongHashMap.doPut(BJI)J: I12 Branch 40 IFGE L214 - false
   * 12 gnu.trove.map.hash.TByteLongHashMap.doPut(BJI)J: I41 Branch 41 IFEQ L221 - true
   * 13 gnu.trove.map.hash.TByteLongHashMap$1.<init>(Lgnu/trove/map/hash/TByteLongHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 14 gnu.trove.map.hash.TByteLongHashMap$1.execute(BJ)Z: I4 Branch 115 IFEQ L1233 - false
   */

  @Test
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte)79;
      long[] longArray0 = new long[7];
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap(byteArray0, longArray0);
      String string0 = tByteLongHashMap0.toString();
      assertEquals("{79=0, 0=0}", string0);
      assertEquals(2, tByteLongHashMap0.size());
      assertEquals(37, tByteLongHashMap0.capacity());
      assertNotNull(string0);
  }

  //Test case number: 36
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TByteLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - false
   * 2 gnu.trove.map.hash.TByteLongHashMap.<init>(I)V: root-Branch
   * 3 gnu.trove.map.hash.TByteLongHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.hash.TByteLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - true
   * 5 gnu.trove.map.hash.TByteLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - false
   * 6 gnu.trove.map.hash.TByteLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - true
   * 7 gnu.trove.map.hash.TByteLongHashMap.putIfAbsent(BJ)J: I9 Branch 39 IFGE L205 - true
   * 8 gnu.trove.map.hash.TByteLongHashMap.doPut(BJI)J: I12 Branch 40 IFGE L214 - true
   * 9 gnu.trove.map.hash.TByteLongHashMap.doPut(BJI)J: I41 Branch 41 IFEQ L221 - false
   */

  @Test
  public void test36()  throws Throwable  {
      TByteLongHashMap tByteLongHashMap0 = new TByteLongHashMap((-769));
      tByteLongHashMap0.putIfAbsent((byte)0, (long) 496);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null, 496);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) bufferedOutputStream0);
      tByteLongHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(false, tByteLongHashMap0.isEmpty());
      assertEquals("{0=496}", tByteLongHashMap0.toString());
  }
}

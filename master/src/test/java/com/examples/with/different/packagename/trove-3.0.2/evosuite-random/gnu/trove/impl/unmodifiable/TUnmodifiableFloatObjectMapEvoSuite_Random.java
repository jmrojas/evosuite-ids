/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatObjectMap;
import gnu.trove.map.TFloatObjectMap;
import gnu.trove.map.hash.TFloatObjectHashMap;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.Locale;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableFloatObjectMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = (-304);
      float float0 = 958.6135F;
      int int1 = 33;
      TFloatObjectHashMap<Object> tFloatObjectHashMap0 = new TFloatObjectHashMap<Object>(int1);
      TUnmodifiableFloatObjectMap<Object> tUnmodifiableFloatObjectMap0 = new TUnmodifiableFloatObjectMap<Object>((TFloatObjectMap<Object>) tFloatObjectHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatObjectMap0.remove((float) int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = 0;
      TFloatObjectHashMap<Object> tFloatObjectHashMap0 = new TFloatObjectHashMap<Object>(int0, int0);
      TUnmodifiableFloatObjectMap<Object> tUnmodifiableFloatObjectMap0 = new TUnmodifiableFloatObjectMap<Object>((TFloatObjectMap<Object>) tFloatObjectHashMap0);
      String string0 = tUnmodifiableFloatObjectMap0.toString();
      assertEquals("{}", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = 0;
      TFloatObjectHashMap<Object> tFloatObjectHashMap0 = new TFloatObjectHashMap<Object>(int0, int0, int0);
      TUnmodifiableFloatObjectMap<Object> tUnmodifiableFloatObjectMap0 = new TUnmodifiableFloatObjectMap<Object>((TFloatObjectMap<Object>) tFloatObjectHashMap0);
      tUnmodifiableFloatObjectMap0.size();
      int int1 = (-781);
      float float0 = 0.0F;
      TFloatObjectHashMap<Float> tFloatObjectHashMap1 = new TFloatObjectHashMap<Float>(int1, (float) int1, float0);
      TFloatObjectHashMap<Float> tFloatObjectHashMap2 = new TFloatObjectHashMap<Float>((TFloatObjectMap<? extends Float>) tFloatObjectHashMap1);
      TUnmodifiableFloatObjectMap<Float> tUnmodifiableFloatObjectMap1 = new TUnmodifiableFloatObjectMap<Float>((TFloatObjectMap<Float>) tFloatObjectHashMap2);
      tUnmodifiableFloatObjectMap1.valueCollection();
      int int2 = 0;
      int int3 = 0;
      TFloatObjectHashMap<Object> tFloatObjectHashMap3 = new TFloatObjectHashMap<Object>(int3);
      TUnmodifiableFloatObjectMap<Object> tUnmodifiableFloatObjectMap2 = new TUnmodifiableFloatObjectMap<Object>((TFloatObjectMap<Object>) tFloatObjectHashMap3);
      tUnmodifiableFloatObjectMap2.getNoEntryKey();
      float float1 = 0.0F;
      TFloatObjectHashMap<Object> tFloatObjectHashMap4 = new TFloatObjectHashMap<Object>(int2, float1);
      TUnmodifiableFloatObjectMap<Object> tUnmodifiableFloatObjectMap3 = new TUnmodifiableFloatObjectMap<Object>((TFloatObjectMap<Object>) tFloatObjectHashMap4);
      // Undeclared exception!
      try {
        tUnmodifiableFloatObjectMap3.putAll((TFloatObjectMap<?>) tFloatObjectHashMap4);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = 0;
      float float0 = (-1.0F);
      TFloatObjectHashMap<Float> tFloatObjectHashMap0 = new TFloatObjectHashMap<Float>(int0);
      TUnmodifiableFloatObjectMap<Float> tUnmodifiableFloatObjectMap0 = new TUnmodifiableFloatObjectMap<Float>((TFloatObjectMap<Float>) tFloatObjectHashMap0);
      tUnmodifiableFloatObjectMap0.iterator();
      float float1 = 596.0602F;
      TFloatObjectHashMap<Float> tFloatObjectHashMap1 = new TFloatObjectHashMap<Float>(int0, float0, float1);
      TUnmodifiableFloatObjectMap<Float> tUnmodifiableFloatObjectMap1 = new TUnmodifiableFloatObjectMap<Float>((TFloatObjectMap<Float>) tFloatObjectHashMap1);
      TUnmodifiableFloatObjectMap<Float> tUnmodifiableFloatObjectMap2 = new TUnmodifiableFloatObjectMap<Float>((TFloatObjectMap<Float>) tUnmodifiableFloatObjectMap1);
      Float[] floatArray0 = new Float[2];
      floatArray0[0] = (Float) float0;
      floatArray0[1] = (Float) float0;
      tUnmodifiableFloatObjectMap1.values(floatArray0);
      int int1 = tUnmodifiableFloatObjectMap2.size();
      assertTrue(int1 == int0);
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 319;
      TFloatObjectMap<String> tFloatObjectMap0 = null;
      TUnmodifiableFloatObjectMap<String> tUnmodifiableFloatObjectMap0 = null;
      try {
        tUnmodifiableFloatObjectMap0 = new TUnmodifiableFloatObjectMap<String>(tFloatObjectMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = 0;
      TFloatObjectHashMap<Float> tFloatObjectHashMap0 = new TFloatObjectHashMap<Float>(int0);
      TUnmodifiableFloatObjectMap<Float> tUnmodifiableFloatObjectMap0 = new TUnmodifiableFloatObjectMap<Float>((TFloatObjectMap<Float>) tFloatObjectHashMap0);
      Float float0 = new Float((float) int0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatObjectMap0.putIfAbsent((float) int0, float0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TFloatObjectHashMap<Integer> tFloatObjectHashMap0 = new TFloatObjectHashMap<Integer>();
      int int0 = 1793;
      TFloatObjectHashMap<Float> tFloatObjectHashMap1 = new TFloatObjectHashMap<Float>(int0);
      HashMap<Float, Float> hashMap0 = new HashMap<Float, Float>();
      TFloatObjectMap<Object> tFloatObjectMap0 = null;
      TUnmodifiableFloatObjectMap<Object> tUnmodifiableFloatObjectMap0 = null;
      try {
        tUnmodifiableFloatObjectMap0 = new TUnmodifiableFloatObjectMap<Object>(tFloatObjectMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TFloatObjectMap<Integer> tFloatObjectMap0 = null;
      TUnmodifiableFloatObjectMap<Integer> tUnmodifiableFloatObjectMap0 = null;
      try {
        tUnmodifiableFloatObjectMap0 = new TUnmodifiableFloatObjectMap<Integer>(tFloatObjectMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = 0;
      float float0 = 0.0F;
      TFloatObjectHashMap<Integer> tFloatObjectHashMap0 = new TFloatObjectHashMap<Integer>(int0, float0);
      TUnmodifiableFloatObjectMap<Integer> tUnmodifiableFloatObjectMap0 = new TUnmodifiableFloatObjectMap<Integer>((TFloatObjectMap<Integer>) tFloatObjectHashMap0);
      TFloatObjectHashMap<Float> tFloatObjectHashMap1 = new TFloatObjectHashMap<Float>();
      TUnmodifiableFloatObjectMap<Float> tUnmodifiableFloatObjectMap1 = new TUnmodifiableFloatObjectMap<Float>((TFloatObjectMap<Float>) tFloatObjectHashMap1);
      tUnmodifiableFloatObjectMap1.containsKey((float) int0);
      int int1 = 534;
      float float1 = 0.0F;
      TFloatObjectHashMap<String> tFloatObjectHashMap2 = new TFloatObjectHashMap<String>(int1, float1);
      TUnmodifiableFloatObjectMap<String> tUnmodifiableFloatObjectMap2 = new TUnmodifiableFloatObjectMap<String>((TFloatObjectMap<String>) tFloatObjectHashMap2);
      TFloatObjectHashMap<Object> tFloatObjectHashMap3 = new TFloatObjectHashMap<Object>(int1);
      TUnmodifiableFloatObjectMap<Object> tUnmodifiableFloatObjectMap3 = new TUnmodifiableFloatObjectMap<Object>((TFloatObjectMap<Object>) tFloatObjectHashMap3);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) float1;
      objectArray0[1] = (Object) float1;
      objectArray0[2] = (Object) tUnmodifiableFloatObjectMap2;
      objectArray0[3] = (Object) float1;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
      tUnmodifiableFloatObjectMap3.forEachValue((TObjectProcedure<? super Object>) toObjectArrayProceedure0);
      float float2 = 334.68082F;
      tUnmodifiableFloatObjectMap2.containsKey(float2);
      // Undeclared exception!
      try {
        tUnmodifiableFloatObjectMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = (-320);
      float float0 = (-1.0F);
      float float1 = 1491.3213F;
      TFloatObjectHashMap<Float> tFloatObjectHashMap0 = new TFloatObjectHashMap<Float>(int0, float0, float1);
      TUnmodifiableFloatObjectMap<Float> tUnmodifiableFloatObjectMap0 = new TUnmodifiableFloatObjectMap<Float>((TFloatObjectMap<Float>) tFloatObjectHashMap0);
      TFloatObjectHashMap<Float> tFloatObjectHashMap1 = new TFloatObjectHashMap<Float>();
      TUnmodifiableFloatObjectMap<Float> tUnmodifiableFloatObjectMap1 = new TUnmodifiableFloatObjectMap<Float>((TFloatObjectMap<Float>) tFloatObjectHashMap1);
      String string0 = "i\"$*0qt3bK.wh`-=z";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 1: i\"$*0qt3bK.wh`-=z:i%22$*0qt3bK.wh%60-=z#i%22$*0qt3bK.wh%60-=z
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TFloatObjectHashMap<Integer> tFloatObjectHashMap0 = new TFloatObjectHashMap<Integer>();
      TFloatObjectHashMap<Object> tFloatObjectHashMap1 = new TFloatObjectHashMap<Object>();
      TUnmodifiableFloatObjectMap<Object> tUnmodifiableFloatObjectMap0 = new TUnmodifiableFloatObjectMap<Object>((TFloatObjectMap<Object>) tFloatObjectHashMap1);
      float float0 = 1830.892F;
      tUnmodifiableFloatObjectMap0.containsKey(float0);
      TUnmodifiableFloatObjectMap<Integer> tUnmodifiableFloatObjectMap1 = new TUnmodifiableFloatObjectMap<Integer>((TFloatObjectMap<Integer>) tFloatObjectHashMap0);
      Locale locale0 = Locale.KOREA;
      int int0 = 60;
      float float1 = 73.501305F;
      TFloatObjectHashMap<Object> tFloatObjectHashMap2 = new TFloatObjectHashMap<Object>(int0, float1);
      int int1 = 0;
      TFloatObjectHashMap<String> tFloatObjectHashMap3 = new TFloatObjectHashMap<String>(int1);
      TUnmodifiableFloatObjectMap<String> tUnmodifiableFloatObjectMap2 = new TUnmodifiableFloatObjectMap<String>((TFloatObjectMap<String>) tFloatObjectHashMap3);
      tUnmodifiableFloatObjectMap2.keys();
      Locale locale1 = Locale.ITALIAN;
      Locale.setDefault(locale1);
      TUnmodifiableFloatObjectMap<Object> tUnmodifiableFloatObjectMap3 = new TUnmodifiableFloatObjectMap<Object>((TFloatObjectMap<Object>) tFloatObjectHashMap2);
      String string0 = locale0.toLanguageTag();
      tUnmodifiableFloatObjectMap1.equals((Object) string0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatObjectMap1.put(float1, (Integer) int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 147;
      int int1 = 0;
      float float0 = (-1084.9471F);
      float float1 = 0.0F;
      TFloatObjectHashMap<Object> tFloatObjectHashMap0 = new TFloatObjectHashMap<Object>(int1, float0, float1);
      TUnmodifiableFloatObjectMap<Object> tUnmodifiableFloatObjectMap0 = new TUnmodifiableFloatObjectMap<Object>((TFloatObjectMap<Object>) tFloatObjectHashMap0);
      tUnmodifiableFloatObjectMap0.getNoEntryKey();
      TFloatObjectHashMap<Float> tFloatObjectHashMap1 = new TFloatObjectHashMap<Float>(int0, int0);
      TFloatObjectHashMap<Float> tFloatObjectHashMap2 = new TFloatObjectHashMap<Float>((TFloatObjectMap<? extends Float>) tFloatObjectHashMap1);
      tFloatObjectHashMap2.getNoEntryValue();
      TFloatObjectHashMap<String> tFloatObjectHashMap3 = new TFloatObjectHashMap<String>(int0);
      TUnmodifiableFloatObjectMap<String> tUnmodifiableFloatObjectMap1 = new TUnmodifiableFloatObjectMap<String>((TFloatObjectMap<String>) tFloatObjectHashMap3);
      tUnmodifiableFloatObjectMap1.isEmpty();
      TFloatObjectMap<Object> tFloatObjectMap0 = null;
      TUnmodifiableFloatObjectMap<Object> tUnmodifiableFloatObjectMap2 = null;
      try {
        tUnmodifiableFloatObjectMap2 = new TUnmodifiableFloatObjectMap<Object>(tFloatObjectMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 0;
      TFloatObjectHashMap<Integer> tFloatObjectHashMap0 = new TFloatObjectHashMap<Integer>(int0);
      TUnmodifiableFloatObjectMap<Integer> tUnmodifiableFloatObjectMap0 = new TUnmodifiableFloatObjectMap<Integer>((TFloatObjectMap<Integer>) tFloatObjectHashMap0);
      tUnmodifiableFloatObjectMap0.valueCollection();
      float float0 = 0.0F;
      // Undeclared exception!
      try {
        tUnmodifiableFloatObjectMap0.remove(float0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TFloatObjectHashMap<Integer> tFloatObjectHashMap0 = new TFloatObjectHashMap<Integer>();
      TUnmodifiableFloatObjectMap<Integer> tUnmodifiableFloatObjectMap0 = new TUnmodifiableFloatObjectMap<Integer>((TFloatObjectMap<Integer>) tFloatObjectHashMap0);
      TFloatObjectHashMap<Integer> tFloatObjectHashMap1 = new TFloatObjectHashMap<Integer>((TFloatObjectMap<? extends Integer>) tUnmodifiableFloatObjectMap0);
      TUnmodifiableFloatObjectMap<Integer> tUnmodifiableFloatObjectMap1 = new TUnmodifiableFloatObjectMap<Integer>((TFloatObjectMap<Integer>) tFloatObjectHashMap1);
      int int0 = 0;
      TFloatObjectHashMap<Object> tFloatObjectHashMap2 = new TFloatObjectHashMap<Object>(int0);
      TUnmodifiableFloatObjectMap<Object> tUnmodifiableFloatObjectMap2 = new TUnmodifiableFloatObjectMap<Object>((TFloatObjectMap<Object>) tFloatObjectHashMap2);
      String string0 = "<&;64;r7ZnHyU,9g;]";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 0: <&;64;r7ZnHyU,9g;]:%3C&;64;r7ZnHyU,9g;]#%3C&;64;r7ZnHyU,9g;]
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.custom_hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.map.TObjectDoubleMap;
import gnu.trove.map.custom_hash.TObjectDoubleCustomHashMap;
import gnu.trove.map.hash.TObjectDoubleHashMap;
import gnu.trove.set.hash.TDoubleHashSet;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.lang.reflect.Array;
import java.util.AbstractMap;
import java.util.NoSuchElementException;
import java.util.StringTokenizer;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TObjectDoubleCustomHashMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TObjectDoubleCustomHashMap<AbstractMap.SimpleEntry<Double, String>> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<AbstractMap.SimpleEntry<Double, String>>();
      assertEquals(23, tObjectDoubleCustomHashMap0.capacity());
      
      tObjectDoubleCustomHashMap0.compact();
      assertEquals(3, tObjectDoubleCustomHashMap0.capacity());
  }

  @Test
  public void test1()  throws Throwable  {
      TObjectDoubleCustomHashMap<TObjectDoubleHashMap<String>> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<TObjectDoubleHashMap<String>>();
      TObjectDoubleHashMap<String>[] tObjectDoubleHashMapArray0 = (TObjectDoubleHashMap<String>[]) Array.newInstance(TObjectDoubleHashMap.class, 5);
      int int0 = 205759;
      TObjectDoubleHashMap<String> tObjectDoubleHashMap0 = new TObjectDoubleHashMap<String>(int0);
      tObjectDoubleHashMapArray0[0] = tObjectDoubleHashMap0;
      TObjectDoubleHashMap<String> tObjectDoubleHashMap1 = new TObjectDoubleHashMap<String>(int0, int0);
      tObjectDoubleHashMapArray0[1] = tObjectDoubleHashMap1;
      TObjectDoubleCustomHashMap<Double> tObjectDoubleCustomHashMap1 = new TObjectDoubleCustomHashMap<Double>();
      TObjectDoubleHashMap<String> tObjectDoubleHashMap2 = new TObjectDoubleHashMap<String>((TObjectDoubleMap<? extends String>) tObjectDoubleHashMap0);
      tObjectDoubleHashMapArray0[2] = tObjectDoubleHashMap2;
      TObjectDoubleHashMap<String> tObjectDoubleHashMap3 = new TObjectDoubleHashMap<String>((TObjectDoubleMap<? extends String>) tObjectDoubleHashMap2);
      tObjectDoubleHashMapArray0[2].iterator();
      tObjectDoubleHashMapArray0[3] = tObjectDoubleHashMap3;
      TObjectDoubleHashMap<String> tObjectDoubleHashMap4 = new TObjectDoubleHashMap<String>();
      tObjectDoubleHashMapArray0[4] = tObjectDoubleHashMap4;
      InputStream inputStream0 = null;
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(inputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TObjectDoubleCustomHashMap<IdentityHashingStrategy<Double>> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<IdentityHashingStrategy<Double>>();
      assertEquals(23, tObjectDoubleCustomHashMap0.capacity());
      
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int0 = 903;
      float float0 = 1097.8331F;
      TObjectDoubleCustomHashMap<TObjectDoubleHashMap<Object>> tObjectDoubleCustomHashMap1 = new TObjectDoubleCustomHashMap<TObjectDoubleHashMap<Object>>((HashingStrategy<? super TObjectDoubleHashMap<Object>>) identityHashingStrategy0, int0, float0);
      double[] doubleArray0 = tObjectDoubleCustomHashMap1.values();
      assertEquals(0.0, tObjectDoubleCustomHashMap1.getNoEntryValue(), 0.01D);
      assertNotNull(doubleArray0);
  }

  @Test
  public void test3()  throws Throwable  {
      TObjectDoubleCustomHashMap<Object> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<Object>();
      int int0 = tObjectDoubleCustomHashMap0.capacity();
      assertEquals(23, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      TObjectDoubleCustomHashMap<String> tObjectDoubleCustomHashMap0 = new TObjectDoubleCustomHashMap<String>();
      tObjectDoubleCustomHashMap0.clear();
      double[] doubleArray0 = new double[6];
      double double0 = 0.0;
      doubleArray0[0] = double0;
      double double1 = (-1058.8971094115775);
      doubleArray0[1] = double1;
      double double2 = Double.NEGATIVE_INFINITY;
      doubleArray0[2] = double2;
      double double3 = (-1228.0763325316964);
      doubleArray0[3] = double3;
      double double4 = 0.0;
      doubleArray0[4] = double4;
      double double5 = 1367.621184933097;
      doubleArray0[5] = double5;
      TDoubleHashSet tDoubleHashSet0 = new TDoubleHashSet(doubleArray0);
      String string0 = "";
      StringTokenizer stringTokenizer0 = new StringTokenizer(string0, string0);
      // Undeclared exception!
      try {
        stringTokenizer0.nextToken(string0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

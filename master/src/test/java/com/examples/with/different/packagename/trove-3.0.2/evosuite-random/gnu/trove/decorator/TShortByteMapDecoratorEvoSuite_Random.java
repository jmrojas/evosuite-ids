/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TShortByteMapDecorator;
import gnu.trove.map.TShortByteMap;
import gnu.trove.map.hash.TShortByteHashMap;
import java.io.File;
import java.io.PipedOutputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.AbstractMap;
import java.util.Collection;
import java.util.Locale;
import java.util.NoSuchElementException;
import java.util.StringTokenizer;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TShortByteMapDecoratorEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


//   @Test
//   public void test0()  throws Throwable  {
//       Short short0 = null;
//       TShortByteHashMap tShortByteHashMap0 = null;
//       try {
//         tShortByteHashMap0 = new TShortByteHashMap((int) short0);
//         fail("Expecting exception: IllegalArgumentException");
//       
//       } catch(IllegalArgumentException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//       }
//   }

  @Test
  public void test1()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      TShortByteMapDecorator tShortByteMapDecorator0 = new TShortByteMapDecorator((TShortByteMap) tShortByteHashMap0);
      short short0 = (short)846;
      tShortByteMapDecorator0.getMap();
      String string0 = "(g2|Oo(.&fIb~-";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: (g2|Oo(.&fIb~-://(g2|Oo(.&fIb~-(g2%7COo(.&fIb~-#(g2%7COo(.&fIb~-
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      byte byte0 = (byte)0;
      Byte byte1 = new Byte(byte0);
      String string0 = "";
      try {
        Byte.parseByte(string0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TShortByteMapDecorator tShortByteMapDecorator0 = new TShortByteMapDecorator();
      String string0 = File.separator;
      short short0 = (short) (-1359);
      Short short1 = new Short(short0);
      byte byte0 = (byte) (-122);
      Byte byte1 = new Byte(byte0);
      // Undeclared exception!
      try {
        tShortByteMapDecorator0.put(short1, byte1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TShortByteMapDecorator tShortByteMapDecorator0 = new TShortByteMapDecorator();
      TShortByteMapDecorator tShortByteMapDecorator1 = new TShortByteMapDecorator();
      // Undeclared exception!
      try {
        tShortByteMapDecorator1.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = (-615);
      Object object0 = null;
      AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>(object0, object0);
      short[] shortArray0 = new short[10];
      short short0 = (short)737;
      shortArray0[0] = short0;
      short short1 = (short)1;
      shortArray0[1] = short1;
      short short2 = (short)2040;
      shortArray0[2] = short2;
      short short3 = (short) (-991);
      shortArray0[3] = short3;
      short short4 = (short)92;
      shortArray0[4] = short4;
      short short5 = (short)0;
      shortArray0[5] = short5;
      short short6 = (short)0;
      shortArray0[6] = short6;
      short short7 = (short)1191;
      shortArray0[7] = short7;
      short short8 = (short) (-1);
      shortArray0[8] = short8;
      short short9 = (short)1335;
      shortArray0[9] = short9;
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte) (-43);
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-73);
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-11);
      byteArray0[3] = byte3;
      byte byte4 = (byte)2;
      byteArray0[4] = byte4;
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(shortArray0, byteArray0);
      TShortByteMapDecorator tShortByteMapDecorator0 = new TShortByteMapDecorator((TShortByteMap) tShortByteHashMap0);
      tShortByteMapDecorator0.remove(object0);
      abstractMap_SimpleEntry0.hashCode();
      TShortByteHashMap tShortByteHashMap1 = new TShortByteHashMap(int0);
      TShortByteMapDecorator tShortByteMapDecorator1 = new TShortByteMapDecorator((TShortByteMap) tShortByteHashMap1);
      TShortByteMapDecorator tShortByteMapDecorator2 = new TShortByteMapDecorator();
      Collection<Byte> collection0 = tShortByteMapDecorator2.values();
      assertNotNull(collection0);
  }

  @Test
  public void test6()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      tShortByteHashMap0._states = byteArray0;
      TShortByteMapDecorator tShortByteMapDecorator0 = new TShortByteMapDecorator((TShortByteMap) tShortByteHashMap0);
      Short short0 = null;
      byte byte1 = (byte) (-7);
      Byte byte2 = new Byte(byte1);
      Byte byte3 = tShortByteMapDecorator0.put(short0, byte2);
      tShortByteMapDecorator0.put(short0, byte3);
      short short1 = (short) (-674);
      Short short2 = new Short(short1);
      Byte byte4 = null;
      // Undeclared exception!
      try {
        tShortByteMapDecorator0.put((Short) short1, byte4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 22
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TShortByteMapDecorator tShortByteMapDecorator0 = new TShortByteMapDecorator();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      String string0 = "0zcf;7a4-$";
      int int0 = (-1650);
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(int0, int0);
      TShortByteMapDecorator tShortByteMapDecorator1 = new TShortByteMapDecorator((TShortByteMap) tShortByteHashMap0);
      Locale locale0 = Locale.forLanguageTag(string0);
      String string1 = locale0.getLanguage();
      tShortByteMapDecorator0.remove((Object) string1);
      int int1 = 3622219;
      // Undeclared exception!
      try {
        tShortByteMapDecorator0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = 99;
      TShortByteMapDecorator tShortByteMapDecorator0 = new TShortByteMapDecorator();
      // Undeclared exception!
      try {
        tShortByteMapDecorator0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      String string0 = File.separator;
      short[] shortArray0 = new short[4];
      short short0 = (short) (-1);
      shortArray0[0] = short0;
      short short1 = (short)1911;
      shortArray0[1] = short1;
      short short2 = (short)146;
      shortArray0[2] = short2;
      short short3 = (short) (-869);
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap((int) shortArray0[2]);
      TShortByteMapDecorator tShortByteMapDecorator0 = new TShortByteMapDecorator((TShortByteMap) tShortByteHashMap0);
      tShortByteMapDecorator0.clear();
      TShortByteMapDecorator tShortByteMapDecorator1 = new TShortByteMapDecorator();
      // Undeclared exception!
      try {
        tShortByteMapDecorator1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TShortByteMapDecorator tShortByteMapDecorator0 = new TShortByteMapDecorator();
      // Undeclared exception!
      try {
        tShortByteMapDecorator0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TShortByteMapDecorator tShortByteMapDecorator0 = new TShortByteMapDecorator();
      Locale locale0 = Locale.CANADA;
      String string0 = locale0.toLanguageTag();
      locale0.toLanguageTag();
      tShortByteMapDecorator0.remove((Object) string0);
      TShortByteMapDecorator tShortByteMapDecorator1 = new TShortByteMapDecorator();
      tShortByteMapDecorator1.keySet();
      Short short0 = null;
      byte byte0 = (byte)0;
      Byte byte1 = new Byte(byte0);
      // Undeclared exception!
      try {
        tShortByteMapDecorator1.put(short0, byte1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      short[] shortArray0 = new short[8];
      short short0 = (short) (-1330);
      shortArray0[0] = short0;
      short short1 = (short) (-894);
      shortArray0[1] = short1;
      short short2 = (short)1;
      shortArray0[2] = short2;
      short short3 = (short)12;
      shortArray0[3] = short3;
      short short4 = (short)1499;
      shortArray0[4] = short4;
      short short5 = (short) (-1132);
      shortArray0[5] = short5;
      short short6 = (short)1207;
      shortArray0[6] = short6;
      short short7 = (short)1647;
      shortArray0[7] = short7;
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-123);
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(shortArray0, byteArray0);
      TShortByteHashMap tShortByteHashMap1 = new TShortByteHashMap((TShortByteMap) tShortByteHashMap0);
      TShortByteMapDecorator tShortByteMapDecorator0 = new TShortByteMapDecorator((TShortByteMap) tShortByteHashMap1);
      String string0 = "/mdLeqX";
      boolean boolean0 = false;
      StringTokenizer stringTokenizer0 = new StringTokenizer(string0, string0, boolean0);
      // Undeclared exception!
      try {
        stringTokenizer0.nextToken();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      short short0 = (short)1005;
      Short short1 = new Short(short0);
      TShortByteMapDecorator tShortByteMapDecorator0 = new TShortByteMapDecorator();
      // Undeclared exception!
      try {
        tShortByteMapDecorator0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TShortByteMapDecorator tShortByteMapDecorator0 = new TShortByteMapDecorator();
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      byte byte0 = (byte) (-92);
      Byte byte1 = new Byte(byte0);
      AbstractMap.SimpleEntry<TShortByteHashMap, Byte> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<TShortByteHashMap, Byte>(tShortByteHashMap0, byte1);
      abstractMap_SimpleEntry0.setValue((Byte) byte0);
      // Undeclared exception!
      try {
        tShortByteMapDecorator0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TShortByteMapDecorator tShortByteMapDecorator0 = new TShortByteMapDecorator();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      // Undeclared exception!
      try {
        tShortByteMapDecorator0.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      TShortByteMapDecorator tShortByteMapDecorator0 = new TShortByteMapDecorator();
      short short0 = (short)349;
      Short short1 = new Short(short0);
      byte byte0 = (byte) (-1);
      Byte byte1 = new Byte(byte0);
      // Undeclared exception!
      try {
        tShortByteMapDecorator0.put(short1, byte1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      short short0 = (short)1093;
      Short short1 = new Short(short0);
      float float0 = 0.0F;
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap((int) short1, float0);
      TShortByteMapDecorator tShortByteMapDecorator0 = new TShortByteMapDecorator((TShortByteMap) tShortByteHashMap0);
      tShortByteMapDecorator0.clear();
      String string0 = "";
      AbstractMap.SimpleImmutableEntry<Short, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Short, String>(short1, string0);
      abstractMap_SimpleImmutableEntry0.hashCode();
      TShortByteMapDecorator tShortByteMapDecorator1 = new TShortByteMapDecorator();
      // Undeclared exception!
      try {
        tShortByteMapDecorator1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

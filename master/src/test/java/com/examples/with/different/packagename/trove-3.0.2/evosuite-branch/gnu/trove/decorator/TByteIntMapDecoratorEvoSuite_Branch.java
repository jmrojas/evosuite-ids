/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TByteIntMapDecorator;
import gnu.trove.map.TByteIntMap;
import gnu.trove.map.hash.TByteIntHashMap;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TByteIntMapDecoratorEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 7 covered goals:
   * 1 gnu.trove.decorator.TByteIntMapDecorator$1.iterator()Ljava/util/Iterator;: root-Branch
   * 2 gnu.trove.decorator.TByteIntMapDecorator$1.<init>(Lgnu/trove/decorator/TByteIntMapDecorator;)V: root-Branch
   * 3 gnu.trove.decorator.TByteIntMapDecorator.<init>(Lgnu/trove/map/TByteIntMap;)V: root-Branch
   * 4 gnu.trove.decorator.TByteIntMapDecorator.size()I: root-Branch
   * 5 gnu.trove.decorator.TByteIntMapDecorator.entrySet()Ljava/util/Set;: root-Branch
   * 6 gnu.trove.decorator.TByteIntMapDecorator$1$1.<init>(Lgnu/trove/decorator/TByteIntMapDecorator$1;)V: root-Branch
   * 7 gnu.trove.decorator.TByteIntMapDecorator.putAll(Ljava/util/Map;)V: I14 Branch 20 IFLE L334 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap();
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      tByteIntMapDecorator0.putAll((Map<? extends Byte, ? extends Integer>) tByteIntMapDecorator0);
      assertEquals(0, tByteIntMapDecorator0.size());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.decorator.TByteIntMapDecorator.readExternal(Ljava/io/ObjectInput;)V: root-Branch
   * 2 gnu.trove.decorator.TByteIntMapDecorator.<init>()V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator();
      // Undeclared exception!
      try {
        tByteIntMapDecorator0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TByteIntMapDecorator.writeExternal(Ljava/io/ObjectOutput;)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      int[] intArray0 = new int[3];
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      // Undeclared exception!
      try {
        tByteIntMapDecorator0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TByteIntMapDecorator.clear()V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      int[] intArray0 = new int[7];
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      tByteIntMapDecorator0.clear();
      assertEquals(0, tByteIntHashMap0.size());
      assertEquals(0, tByteIntMapDecorator0.size());
  }

  //Test case number: 4
  /*
   * 8 covered goals:
   * 1 gnu.trove.decorator.TByteIntMapDecorator.wrapKey(B)Ljava/lang/Byte;: root-Branch
   * 2 gnu.trove.decorator.TByteIntMapDecorator$1$1.hasNext()Z: root-Branch
   * 3 gnu.trove.decorator.TByteIntMapDecorator$1$1.next()Ljava/util/Map$Entry;: I19 Branch 21 IF_ICMPNE L214 - true
   * 4 gnu.trove.decorator.TByteIntMapDecorator$1$1.next()Ljava/util/Map$Entry;: I44 Branch 22 IF_ICMPNE L216 - true
   * 5 gnu.trove.decorator.TByteIntMapDecorator$1$1$1.getKey()Ljava/lang/Byte;: root-Branch
   * 6 gnu.trove.decorator.TByteIntMapDecorator$1$1$1.getValue()Ljava/lang/Integer;: root-Branch
   * 7 gnu.trove.decorator.TByteIntMapDecorator$1$1$1.<init>(Lgnu/trove/decorator/TByteIntMapDecorator$1$1;Ljava/lang/Integer;Ljava/lang/Byte;)V: root-Branch
   * 8 gnu.trove.decorator.TByteIntMapDecorator.wrapValue(I)Ljava/lang/Integer;: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((-448), 0.0F);
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      tByteIntHashMap0.adjustOrPutValue((byte)93, (byte)93, (byte)93);
      String string0 = tByteIntMapDecorator0.toString();
      assertEquals("{93=93}", string0);
  }

  //Test case number: 5
  /*
   * 4 covered goals:
   * 1 gnu.trove.decorator.TByteIntMapDecorator.put(Ljava/lang/Byte;Ljava/lang/Integer;)Ljava/lang/Integer;: I21 Branch 6 IFNONNULL L102 - false
   * 2 gnu.trove.decorator.TByteIntMapDecorator.unwrapKey(Ljava/lang/Object;)B: root-Branch
   * 3 gnu.trove.decorator.TByteIntMapDecorator.put(Ljava/lang/Byte;Ljava/lang/Integer;)Ljava/lang/Integer;: I3 Branch 5 IFNONNULL L97 - true
   * 4 gnu.trove.decorator.TByteIntMapDecorator.put(Ljava/lang/Byte;Ljava/lang/Integer;)Ljava/lang/Integer;: I50 Branch 7 IF_ICMPNE L108 - false
   */

  @Test
  public void test5()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((-437), (float) (-437), (byte)10, (int) (byte)10);
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      Byte byte0 = Byte.valueOf((byte)1);
      tByteIntMapDecorator0.put(byte0, (Integer) null);
      assertEquals(false, tByteIntHashMap0.isEmpty());
      assertEquals("{1=null}", tByteIntMapDecorator0.toString());
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * 1 gnu.trove.decorator.TByteIntMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Integer;: I3 Branch 8 IFNULL L123 - false
   * 2 gnu.trove.decorator.TByteIntMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Integer;: I8 Branch 9 IFEQ L124 - false
   * 3 gnu.trove.decorator.TByteIntMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Integer;: I40 Branch 10 IF_ICMPNE L136 - false
   */

  @Test
  public void test6()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap();
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      Byte byte0 = new Byte((byte)84);
      tByteIntMapDecorator0.get((Object) byte0);
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * 1 gnu.trove.decorator.TByteIntMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Integer;: I8 Branch 9 IFEQ L124 - true
   * 2 gnu.trove.decorator.TByteIntMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Integer;: I3 Branch 8 IFNULL L123 - false
   */

  @Test
  public void test7()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap();
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      tByteIntMapDecorator0.get((Object) tByteIntHashMap0);
  }

  //Test case number: 8
  /*
   * 5 covered goals:
   * 1 gnu.trove.decorator.TByteIntMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Integer;: I40 Branch 10 IF_ICMPNE L136 - true
   * 2 gnu.trove.decorator.TByteIntMapDecorator.wrapValue(I)Ljava/lang/Integer;: root-Branch
   * 3 gnu.trove.decorator.TByteIntMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Integer;: I3 Branch 8 IFNULL L123 - true
   * 4 gnu.trove.decorator.TByteIntMapDecorator.unwrapValue(Ljava/lang/Object;)I: root-Branch
   * 5 gnu.trove.decorator.TByteIntMapDecorator.put(Ljava/lang/Byte;Ljava/lang/Integer;)Ljava/lang/Integer;: I21 Branch 6 IFNONNULL L102 - true
   */

  @Test
  public void test8()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((-437), (float) (-437), (byte)10, (int) (byte)10);
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      tByteIntMapDecorator0.put((Byte) (byte)10, (Integer) (-437));
      Integer integer0 = tByteIntMapDecorator0.get((Object) null);
      assertEquals(false, tByteIntMapDecorator0.isEmpty());
      assertEquals((-437), (int)integer0);
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * 1 gnu.trove.decorator.TByteIntMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Integer;: I3 Branch 11 IFNULL L160 - false
   * 2 gnu.trove.decorator.TByteIntMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Integer;: I8 Branch 12 IFEQ L161 - true
   */

  @Test
  public void test9()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((-437), (float) (-437), (byte)10, (int) (byte)10);
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      tByteIntMapDecorator0.remove((Object) (-437));
  }

  //Test case number: 10
  /*
   * 3 covered goals:
   * 1 gnu.trove.decorator.TByteIntMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Integer;: I8 Branch 12 IFEQ L161 - false
   * 2 gnu.trove.decorator.TByteIntMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Integer;: I3 Branch 11 IFNULL L160 - false
   * 3 gnu.trove.decorator.TByteIntMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Integer;: I40 Branch 13 IF_ICMPNE L173 - false
   */

  @Test
  public void test10()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap();
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      Byte byte0 = new Byte((byte)84);
      tByteIntMapDecorator0.remove((Object) byte0);
  }

  //Test case number: 11
  /*
   * 10 covered goals:
   * 1 gnu.trove.decorator.TByteIntMapDecorator$1$1.next()Ljava/util/Map$Entry;: I44 Branch 22 IF_ICMPNE L216 - false
   * 2 gnu.trove.decorator.TByteIntMapDecorator$1.iterator()Ljava/util/Iterator;: root-Branch
   * 3 gnu.trove.decorator.TByteIntMapDecorator$1.<init>(Lgnu/trove/decorator/TByteIntMapDecorator;)V: root-Branch
   * 4 gnu.trove.decorator.TByteIntMapDecorator$1$1$1.getKey()Ljava/lang/Byte;: root-Branch
   * 5 gnu.trove.decorator.TByteIntMapDecorator$1$1$1.getValue()Ljava/lang/Integer;: root-Branch
   * 6 gnu.trove.decorator.TByteIntMapDecorator$1$1$1.<init>(Lgnu/trove/decorator/TByteIntMapDecorator$1$1;Ljava/lang/Integer;Ljava/lang/Byte;)V: root-Branch
   * 7 gnu.trove.decorator.TByteIntMapDecorator.entrySet()Ljava/util/Set;: root-Branch
   * 8 gnu.trove.decorator.TByteIntMapDecorator$1$1.<init>(Lgnu/trove/decorator/TByteIntMapDecorator$1;)V: root-Branch
   * 9 gnu.trove.decorator.TByteIntMapDecorator$1$1.hasNext()Z: root-Branch
   * 10 gnu.trove.decorator.TByteIntMapDecorator$1$1.next()Ljava/util/Map$Entry;: I19 Branch 21 IF_ICMPNE L214 - false
   */

  @Test
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      int[] intArray0 = new int[5];
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      String string0 = tByteIntMapDecorator0.toString();
      assertEquals("{null=null}", string0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TByteIntMapDecorator.containsValue(Ljava/lang/Object;)Z: I4 Branch 14 IFEQ L288 - true
   */

  @Test
  public void test12()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((-448), 0.0F);
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      boolean boolean0 = tByteIntMapDecorator0.containsValue((Object) "{-1=null, 93=null, null=-1}");
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 2 covered goals:
   * 1 gnu.trove.decorator.TByteIntMapDecorator.containsValue(Ljava/lang/Object;)Z: I4 Branch 14 IFEQ L288 - false
   * 2 gnu.trove.decorator.TByteIntMapDecorator.containsValue(Ljava/lang/Object;)Z: I11 Branch 15 IFEQ L288 - true
   */

  @Test
  public void test13()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((-437), (float) (-437), (byte)10, (int) (byte)10);
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      boolean boolean0 = tByteIntMapDecorator0.containsValue((Object) (-694));
      assertEquals(false, boolean0);
  }

  //Test case number: 14
  /*
   * 2 covered goals:
   * 1 gnu.trove.decorator.TByteIntMapDecorator.containsValue(Ljava/lang/Object;)Z: I11 Branch 15 IFEQ L288 - false
   * 2 gnu.trove.decorator.TByteIntMapDecorator.containsValue(Ljava/lang/Object;)Z: I4 Branch 14 IFEQ L288 - false
   */

  @Test
  public void test14()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((-448), 0.0F);
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      int int0 = tByteIntHashMap0.adjustOrPutValue((byte)93, (byte)93, (byte)93);
      boolean boolean0 = tByteIntMapDecorator0.containsValue((Object) int0);
      assertEquals(true, boolean0);
  }

  //Test case number: 15
  /*
   * 2 covered goals:
   * 1 gnu.trove.decorator.TByteIntMapDecorator.containsKey(Ljava/lang/Object;)Z: I3 Branch 16 IFNONNULL L299 - true
   * 2 gnu.trove.decorator.TByteIntMapDecorator.containsKey(Ljava/lang/Object;)Z: I15 Branch 17 IFEQ L300 - true
   */

  @Test
  public void test15()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap();
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      boolean boolean0 = tByteIntMapDecorator0.containsKey((Object) "");
      assertEquals(false, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TByteIntMapDecorator.containsKey(Ljava/lang/Object;)Z: I3 Branch 16 IFNONNULL L299 - false
   */

  @Test
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      int[] intArray0 = new int[7];
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      boolean boolean0 = tByteIntMapDecorator0.containsKey((Object) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 2 covered goals:
   * 1 gnu.trove.decorator.TByteIntMapDecorator.containsKey(Ljava/lang/Object;)Z: I15 Branch 17 IFEQ L300 - false
   * 2 gnu.trove.decorator.TByteIntMapDecorator.containsKey(Ljava/lang/Object;)Z: I22 Branch 18 IFEQ L300 - true
   */

  @Test
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((-448), 0.0F);
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      boolean boolean0 = tByteIntMapDecorator0.containsKey((Object) byteArray0[0]);
      assertEquals(false, boolean0);
  }

  //Test case number: 18
  /*
   * 3 covered goals:
   * 1 gnu.trove.decorator.TByteIntMapDecorator.containsKey(Ljava/lang/Object;)Z: I22 Branch 18 IFEQ L300 - false
   * 2 gnu.trove.decorator.TByteIntMapDecorator.containsKey(Ljava/lang/Object;)Z: I3 Branch 16 IFNONNULL L299 - true
   * 3 gnu.trove.decorator.TByteIntMapDecorator.containsKey(Ljava/lang/Object;)Z: I15 Branch 17 IFEQ L300 - false
   */

  @Test
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      int[] intArray0 = new int[3];
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      boolean boolean0 = tByteIntMapDecorator0.containsKey((Object) byteArray0[1]);
      assertEquals(true, boolean0);
  }

  //Test case number: 19
  /*
   * 6 covered goals:
   * 1 gnu.trove.decorator.TByteIntMapDecorator.isEmpty()Z: I4 Branch 19 IFNE L320 - true
   * 2 gnu.trove.decorator.TByteIntMapDecorator.unwrapValue(Ljava/lang/Object;)I: root-Branch
   * 3 gnu.trove.decorator.TByteIntMapDecorator.unwrapKey(Ljava/lang/Object;)B: root-Branch
   * 4 gnu.trove.decorator.TByteIntMapDecorator.put(Ljava/lang/Byte;Ljava/lang/Integer;)Ljava/lang/Integer;: I3 Branch 5 IFNONNULL L97 - true
   * 5 gnu.trove.decorator.TByteIntMapDecorator.put(Ljava/lang/Byte;Ljava/lang/Integer;)Ljava/lang/Integer;: I21 Branch 6 IFNONNULL L102 - true
   * 6 gnu.trove.decorator.TByteIntMapDecorator.put(Ljava/lang/Byte;Ljava/lang/Integer;)Ljava/lang/Integer;: I50 Branch 7 IF_ICMPNE L108 - false
   */

  @Test
  public void test19()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap((-437), (float) (-437), (byte)10, (int) (byte)10);
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      tByteIntMapDecorator0.put((Byte) (byte)10, (Integer) (-437));
      boolean boolean0 = tByteIntMapDecorator0.isEmpty();
      assertEquals(false, tByteIntHashMap0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 20
  /*
   * 3 covered goals:
   * 1 gnu.trove.decorator.TByteIntMapDecorator.isEmpty()Z: I4 Branch 19 IFNE L320 - false
   * 2 gnu.trove.decorator.TByteIntMapDecorator.<init>(Lgnu/trove/map/TByteIntMap;)V: root-Branch
   * 3 gnu.trove.decorator.TByteIntMapDecorator.size()I: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap();
      TByteIntMapDecorator tByteIntMapDecorator0 = new TByteIntMapDecorator((TByteIntMap) tByteIntHashMap0);
      boolean boolean0 = tByteIntMapDecorator0.isEmpty();
      assertEquals(true, boolean0);
  }
}

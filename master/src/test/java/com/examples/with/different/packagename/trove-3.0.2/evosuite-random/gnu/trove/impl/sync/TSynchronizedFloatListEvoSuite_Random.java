/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TFloatCollection;
import gnu.trove.impl.sync.TSynchronizedFloatList;
import gnu.trove.impl.sync.TSynchronizedRandomAccessFloatList;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatList;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessFloatList;
import gnu.trove.list.TFloatList;
import gnu.trove.list.array.TFloatArrayList;
import gnu.trove.list.linked.TFloatLinkedList;
import gnu.trove.procedure.TFloatProcedure;
import gnu.trove.set.TFloatSet;
import gnu.trove.set.hash.TFloatHashSet;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.LinkedList;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.Stack;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.swing.text.Segment;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedFloatListEvoSuite_Random {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TFloatList tFloatList0 = null;
      String string0 = "";
      File file0 = null;
      // Undeclared exception!
      try {
        File.createTempFile(string0, string0, file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      float float0 = 0.0F;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      TSynchronizedFloatList tSynchronizedFloatList0 = new TSynchronizedFloatList((TFloatList) tFloatArrayList0);
      float[] floatArray0 = new float[6];
      floatArray0[0] = float0;
      floatArray0[1] = float0;
      float float1 = 1684.7465F;
      floatArray0[2] = float1;
      floatArray0[3] = float0;
      floatArray0[4] = float0;
      floatArray0[5] = float0;
      tSynchronizedFloatList0.containsAll(floatArray0);
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(float0);
      String string0 = "";
      URI.create(string0);
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://#
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      float[] floatArray0 = new float[9];
      float float0 = 1.0F;
      floatArray0[0] = float0;
      floatArray0[1] = float0;
      floatArray0[2] = float0;
      floatArray0[3] = float0;
      floatArray0[4] = float0;
      float float1 = 1.0F;
      floatArray0[5] = float1;
      floatArray0[6] = float0;
      floatArray0[7] = float1;
      floatArray0[8] = float1;
      float float2 = (-94.69468F);
      floatArray0[0] = float2;
      float float3 = (-1665.3995F);
      floatArray0[1] = float3;
      float float4 = 0.0F;
      floatArray0[2] = float4;
      float float5 = (-1702.0159F);
      floatArray0[3] = float5;
      float float6 = 0.0F;
      floatArray0[4] = float6;
      float float7 = 1.0F;
      floatArray0[5] = float7;
      float float8 = 724.82983F;
      floatArray0[6] = float8;
      float float9 = (-1523.6422F);
      floatArray0[7] = float9;
      float float10 = 1599.6788F;
      floatArray0[8] = float10;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList0);
      int int0 = 0;
      tFloatArrayList0.reset();
      int int1 = 0;
      tSynchronizedRandomAccessFloatList0.toArray(floatArray0, int0, int0, int1);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string0 = linkedList0.toString();
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList1 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList0, (Object) string0);
      int int2 = 1;
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessFloatList1.set(int2, float4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
          String string0 = "=wZQ5n%9~";
          // Undeclared exception!
          try {
            File.createTempFile(string0, string0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Unable to create temporary file
             //
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test4()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      String string0 = File.pathSeparator;
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList0, (Object) string0);
      float float0 = (-1.0F);
      tSynchronizedRandomAccessFloatList0.hashCode();
      int int0 = tSynchronizedRandomAccessFloatList0.binarySearch(float0);
      assertEquals((-1), int0);
  }

  @Test
  public void test5()  throws Throwable  {
      TFloatList tFloatList0 = null;
      Stack<Object> stack0 = new Stack<Object>();
      TSynchronizedFloatList tSynchronizedFloatList0 = new TSynchronizedFloatList(tFloatList0, (Object) stack0);
      TSynchronizedFloatList tSynchronizedFloatList1 = new TSynchronizedFloatList((TFloatList) tSynchronizedFloatList0);
      int int0 = 0;
      float[] floatArray0 = new float[3];
      float float0 = 0.0F;
      floatArray0[0] = float0;
      floatArray0[1] = (float) int0;
      floatArray0[2] = (float) int0;
      // Undeclared exception!
      try {
        tSynchronizedFloatList1.set(int0, floatArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      float float0 = Float.POSITIVE_INFINITY;
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(float0);
      String string0 = ",c5**G\"+RO";
      Locale locale0 = new Locale(string0);
      try {
        locale0.getISO3Language();
        fail("Expecting exception: MissingResourceException");
      
      } catch(MissingResourceException e) {
         //
         // Couldn't find 3-letter language code for ,c5**g\"+ro
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      int int0 = 0;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(int0);
      String string0 = byteArrayOutputStream0.toString();
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList0, (Object) string0);
      String string1 = tSynchronizedRandomAccessFloatList0.toString();
      tSynchronizedRandomAccessFloatList0.fill((float) int0);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList1 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList0, (Object) string1);
      float float0 = tSynchronizedRandomAccessFloatList1.get(int0);
      float[] floatArray0 = new float[10];
      floatArray0[0] = (float) int0;
      floatArray0[1] = (float) int0;
      float float1 = 0.0F;
      floatArray0[2] = float1;
      floatArray0[3] = (float) int0;
      floatArray0[4] = (float) int0;
      floatArray0[5] = (float) int0;
      floatArray0[6] = (float) int0;
      float float2 = Float.POSITIVE_INFINITY;
      floatArray0[7] = float2;
      floatArray0[8] = (float) int0;
      floatArray0[9] = float0;
      tSynchronizedRandomAccessFloatList1.retainAll(floatArray0);
      TFloatLinkedList tFloatLinkedList1 = (TFloatLinkedList)tFloatLinkedList0.subList(int0, int0);
      tSynchronizedRandomAccessFloatList0.hashCode();
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList2 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList1);
      boolean boolean0 = tSynchronizedRandomAccessFloatList2.removeAll((TFloatCollection) tFloatLinkedList0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      TFloatList tFloatList0 = null;
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      locale0.getDisplayName();
      int int0 = (-45);
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet(int0);
      TUnmodifiableFloatSet tUnmodifiableFloatSet0 = new TUnmodifiableFloatSet((TFloatSet) tFloatHashSet0);
      String string0 = tUnmodifiableFloatSet0.toString();
      TSynchronizedFloatList tSynchronizedFloatList0 = new TSynchronizedFloatList(tFloatList0, (Object) string0);
      // Undeclared exception!
      try {
        tSynchronizedFloatList0.toArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      float[] floatArray0 = new float[10];
      float float0 = 944.65564F;
      floatArray0[0] = float0;
      float float1 = 0.0F;
      floatArray0[1] = float1;
      float float2 = 1014.4711F;
      floatArray0[2] = float2;
      float float3 = 0.0F;
      floatArray0[3] = float3;
      float float4 = 6.6360896E8F;
      floatArray0[4] = float4;
      float float5 = 0.0F;
      floatArray0[5] = float5;
      float float6 = 1.0F;
      floatArray0[6] = float6;
      float float7 = 0.0F;
      floatArray0[7] = float7;
      float float8 = 1298.643F;
      floatArray0[8] = float8;
      float float9 = 0.0F;
      floatArray0[9] = float9;
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessFloatList0.add(floatArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Can not grow ArrayList wrapped external array
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = 0;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(int0);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale locale0 = Locale.getDefault(locale_Category0);
      String string0 = locale0.getDisplayCountry();
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList0, (Object) string0);
      TFloatArrayList tFloatArrayList1 = (TFloatArrayList)tSynchronizedRandomAccessFloatList0.list;
      char[] charArray0 = new char[3];
      char char0 = 'p';
      charArray0[0] = char0;
      char char1 = '1';
      charArray0[1] = char1;
      char char2 = '?';
      charArray0[2] = char2;
      Segment segment0 = new Segment(charArray0, (int) char1, (int) charArray0[0]);
      // Undeclared exception!
      try {
        segment0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 161
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      int int0 = 169;
      int int1 = 0;
      // Undeclared exception!
      try {
        tFloatLinkedList0.subList(int0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 169 greater than end index 0
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      float[] floatArray0 = new float[10];
      float float0 = 0.0F;
      floatArray0[0] = float0;
      float float1 = (-1736.6871F);
      floatArray0[1] = float1;
      float float2 = 417.20035F;
      floatArray0[2] = float2;
      float float3 = 0.0F;
      floatArray0[3] = float3;
      float float4 = 1599.0377F;
      floatArray0[4] = float4;
      float float5 = 0.0F;
      floatArray0[5] = float5;
      float float6 = Float.NEGATIVE_INFINITY;
      floatArray0[6] = float6;
      float float7 = 0.0F;
      floatArray0[7] = float7;
      float float8 = (-814.9858F);
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(float8);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatLinkedList0);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList1 = new TSynchronizedRandomAccessFloatList((TFloatList) tSynchronizedRandomAccessFloatList0);
      float float9 = (-210.97495F);
      floatArray0[8] = float9;
      float float10 = (-966.94763F);
      floatArray0[9] = float10;
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
      Locale locale0 = Locale.ITALY;
      char char0 = 'f';
      String string0 = locale0.getExtension(char0);
      TSynchronizedFloatList tSynchronizedFloatList0 = new TSynchronizedFloatList((TFloatList) tFloatArrayList0, (Object) string0);
      int int0 = (-975);
      // Undeclared exception!
      try {
        tSynchronizedFloatList0.toArray(floatArray0, int0, int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      float[] floatArray0 = new float[9];
      float float0 = 0.0F;
      floatArray0[0] = float0;
      float float1 = (-1477.7721F);
      floatArray0[1] = float1;
      float float2 = 235.71817F;
      floatArray0[2] = float2;
      float float3 = 1006.78125F;
      floatArray0[3] = float3;
      float float4 = (-1.0F);
      floatArray0[4] = float4;
      float float5 = 3.4028235E38F;
      floatArray0[5] = float5;
      float float6 = 0.0F;
      floatArray0[6] = float6;
      float float7 = 1.0F;
      floatArray0[7] = float7;
      float float8 = 0.0F;
      floatArray0[8] = float8;
      float float9 = 1.4E-45F;
      TFloatArrayList.wrap(floatArray0, float9);
      String string0 = "~5'0lpKWel^";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: ~5'0lpKWel^://~5'0lpKWel^~5'0lpKWel%5E#~5'0lpKWel%5E
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      float[] floatArray0 = new float[10];
      float float0 = 0.0F;
      floatArray0[0] = float0;
      float float1 = (-1938.5542F);
      floatArray0[1] = float1;
      float float2 = (-1267.1418F);
      floatArray0[2] = float2;
      float float3 = 0.0F;
      floatArray0[3] = float3;
      float float4 = 1292.0037F;
      floatArray0[4] = float4;
      float float5 = (-1851.6257F);
      floatArray0[5] = float5;
      float float6 = 1.0F;
      floatArray0[6] = float6;
      float float7 = 3.4028235E38F;
      floatArray0[7] = float7;
      float float8 = (-1423.7373F);
      floatArray0[8] = float8;
      float float9 = (-932.65027F);
      floatArray0[9] = float9;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      TFloatProcedure tFloatProcedure0 = null;
      // Undeclared exception!
      try {
        tFloatArrayList0.grep(tFloatProcedure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      float[] floatArray0 = new float[2];
      float float0 = 1682.3668F;
      floatArray0[0] = float0;
      floatArray0[1] = float0;
      float float1 = 0.0F;
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TFloatLinkedList tFloatLinkedList1 = new TFloatLinkedList((TFloatList) tFloatLinkedList0);
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatLinkedList1);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tUnmodifiableFloatList0);
      int int0 = 0;
      int int1 = 0;
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList1 = (TSynchronizedRandomAccessFloatList)tSynchronizedRandomAccessFloatList0.subList(int0, int1);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList2 = new TSynchronizedRandomAccessFloatList((TFloatList) tSynchronizedRandomAccessFloatList1);
      int int2 = 1520;
      int int3 = 0;
      int int4 = (-574);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessFloatList2.insert(int2, floatArray0, int3, int4);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      int int0 = 0;
      TFloatArrayList tFloatArrayList1 = (TFloatArrayList)tFloatArrayList0.subList(int0, int0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList1);
      String string0 = tUnmodifiableRandomAccessFloatList0.toString();
      TSynchronizedFloatList tSynchronizedFloatList0 = new TSynchronizedFloatList((TFloatList) tFloatArrayList1);
      int int1 = tSynchronizedFloatList0.binarySearch((float) int0);
      assertEquals((-1), int1);
      
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList1, (Object) string0);
      int int2 = tSynchronizedRandomAccessFloatList0.hashCode();
      assertFalse(int2 == int1);
  }

  @Test
  public void test17()  throws Throwable  {
      int int0 = (-374);
      float float0 = (-539.70703F);
      TFloatArrayList tFloatArrayList0 = null;
      try {
        tFloatArrayList0 = new TFloatArrayList(int0, float0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList0);
      int int0 = 868;
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessFloatList0.remove(int0, int0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 868
         //
      }
  }

  @Test
  public void test19()  throws Throwable  {
      TFloatList tFloatList0 = null;
      String string0 = "#?1?BKd0K\\aI6$n1W";
      Locale locale0 = Locale.forLanguageTag(string0);
      String string1 = locale0.getDisplayVariant();
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList(tFloatList0, (Object) string1);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale1 = Locale.getDefault(locale_Category0);
      Locale.setDefault(locale1);
      int int0 = 1869;
      int int1 = 0;
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessFloatList0.subList(int0, int1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TLongFunction;
import gnu.trove.impl.sync.TSynchronizedDoubleLongMap;
import gnu.trove.impl.sync.TSynchronizedDoubleSet;
import gnu.trove.impl.sync.TSynchronizedLongCollection;
import gnu.trove.iterator.TDoubleLongIterator;
import gnu.trove.map.TDoubleLongMap;
import gnu.trove.map.hash.TDoubleLongHashMap;
import gnu.trove.procedure.TDoubleLongProcedure;
import gnu.trove.procedure.TDoubleProcedure;
import gnu.trove.procedure.TLongProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedDoubleLongMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.keys([D)[D: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.<init>(Lgnu/trove/map/TDoubleLongMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      double[] doubleArray0 = tSynchronizedDoubleLongMap0.keys(tDoubleLongHashMap0._set);
      assertNotNull(doubleArray0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      tSynchronizedDoubleLongMap0.putAll((Map<? extends Double, ? extends Long>) hashMap0);
      assertEquals(0, hashMap0.size());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.transformValues(Lgnu/trove/function/TLongFunction;)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap((-1536), (float) (-1536), 0.0, (long) (-1536));
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      tSynchronizedDoubleLongMap0.transformValues((TLongFunction) null);
      assertEquals(0.0, tSynchronizedDoubleLongMap0.getNoEntryKey(), 0.01D);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      String string0 = tSynchronizedDoubleLongMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.put(DJ)J: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      tSynchronizedDoubleLongMap0.put(0.0, (-2L));
      assertEquals("{0.0=-2}", tDoubleLongHashMap0.toString());
      assertEquals(false, tDoubleLongHashMap0.isEmpty());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.forEachEntry(Lgnu/trove/procedure/TDoubleLongProcedure;)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      boolean boolean0 = tSynchronizedDoubleLongMap0.forEachEntry((TDoubleLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.putIfAbsent(DJ)J: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      tSynchronizedDoubleLongMap0.putIfAbsent((double) (-2L), (-2L));
      assertEquals("{-2.0=-2}", tDoubleLongHashMap0.toString());
      assertEquals(false, tSynchronizedDoubleLongMap0.isEmpty());
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.retainEntries(Lgnu/trove/procedure/TDoubleLongProcedure;)Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      boolean boolean0 = tSynchronizedDoubleLongMap0.retainEntries((TDoubleLongProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.values()[J: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(1638, 1638);
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      long[] longArray0 = tSynchronizedDoubleLongMap0.values();
      assertNotNull(longArray0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.iterator()Lgnu/trove/iterator/TDoubleLongIterator;: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      TDoubleLongIterator tDoubleLongIterator0 = tSynchronizedDoubleLongMap0.iterator();
      assertEquals(false, tDoubleLongIterator0.hasNext());
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      boolean boolean0 = tSynchronizedDoubleLongMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.containsValue(J)Z: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      boolean boolean0 = tSynchronizedDoubleLongMap0.containsValue((-2L));
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      boolean boolean0 = tSynchronizedDoubleLongMap0.forEachValue((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.get(D)J: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      long long0 = tSynchronizedDoubleLongMap0.get((double) (-2L));
      assertEquals(0L, long0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.clear()V: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      tSynchronizedDoubleLongMap0.clear();
      assertEquals(0, tSynchronizedDoubleLongMap0.size());
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.getNoEntryKey()D: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(1638, 1638);
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      double double0 = tSynchronizedDoubleLongMap0.getNoEntryKey();
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      Double double0 = new Double((double) 0);
      boolean boolean0 = tSynchronizedDoubleLongMap0.equals((Object) double0);
      assertEquals(false, boolean0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.adjustOrPutValue(DJJ)J: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      long long0 = tSynchronizedDoubleLongMap0.adjustOrPutValue(0.0, (-2L), (-2L));
      assertEquals(1, tDoubleLongHashMap0.size());
      assertEquals((-2L), long0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.getNoEntryValue()J: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(1638, 1638);
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      long long0 = tSynchronizedDoubleLongMap0.getNoEntryValue();
      assertEquals(0L, long0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.hashCode()I: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      int int0 = tSynchronizedDoubleLongMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.adjustValue(DJ)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      boolean boolean0 = tSynchronizedDoubleLongMap0.adjustValue((double) 0, 0L);
      assertEquals(false, boolean0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.keys()[D: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(1638, 1638);
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      double[] doubleArray0 = tSynchronizedDoubleLongMap0.keys();
      assertNotNull(doubleArray0);
  }

  //Test case number: 22
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.forEachKey(Lgnu/trove/procedure/TDoubleProcedure;)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.<init>(Lgnu/trove/map/TDoubleLongMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(559, 559);
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0, (Object) "1000101111");
      boolean boolean0 = tSynchronizedDoubleLongMap0.forEachKey((TDoubleProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.size()I: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(1638, 1638);
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      int int0 = tSynchronizedDoubleLongMap0.size();
      assertEquals(0, int0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.containsKey(D)Z: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap((-1536), (float) (-1536), 0.0, (long) (-1536));
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      boolean boolean0 = tSynchronizedDoubleLongMap0.containsKey(0.0);
      assertEquals(false, boolean0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.remove(D)J: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      long long0 = tSynchronizedDoubleLongMap0.remove((double) 0);
      assertEquals(0L, long0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.increment(D)Z: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap((-1536), (float) (-1536), 0.0, (long) (-1536));
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      boolean boolean0 = tSynchronizedDoubleLongMap0.increment((double) (-1536));
      assertEquals(false, boolean0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.putAll(Lgnu/trove/map/TDoubleLongMap;)V: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      tSynchronizedDoubleLongMap0.putAll((TDoubleLongMap) tDoubleLongHashMap0);
      assertEquals(0.0, tSynchronizedDoubleLongMap0.getNoEntryKey(), 0.01D);
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.values([J)[J: root-Branch
   */

  @Test
  public void test28()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      long[] longArray0 = new long[4];
      long[] longArray1 = tSynchronizedDoubleLongMap0.values(longArray0);
      assertSame(longArray1, longArray0);
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.<init>(Lgnu/trove/map/TDoubleLongMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = null;
      try {
        tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.keySet()Lgnu/trove/set/TDoubleSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.keySet()Lgnu/trove/set/TDoubleSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test30()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      TSynchronizedDoubleSet tSynchronizedDoubleSet0 = (TSynchronizedDoubleSet)tSynchronizedDoubleLongMap0.keySet();
      assertNotNull(tSynchronizedDoubleSet0);
      
      TSynchronizedDoubleSet tSynchronizedDoubleSet1 = (TSynchronizedDoubleSet)tSynchronizedDoubleLongMap0.keySet();
      assertSame(tSynchronizedDoubleSet1, tSynchronizedDoubleSet0);
  }

  //Test case number: 31
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.valueCollection()Lgnu/trove/TLongCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.valueCollection()Lgnu/trove/TLongCollection;: I11 Branch 3 IFNONNULL L121 - false
   * 3 gnu.trove.impl.sync.TSynchronizedDoubleLongMap.<init>(Lgnu/trove/map/TDoubleLongMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      TSynchronizedDoubleLongMap tSynchronizedDoubleLongMap0 = new TSynchronizedDoubleLongMap((TDoubleLongMap) tDoubleLongHashMap0);
      TSynchronizedLongCollection tSynchronizedLongCollection0 = (TSynchronizedLongCollection)tSynchronizedDoubleLongMap0.valueCollection();
      assertNotNull(tSynchronizedLongCollection0);
      
      TSynchronizedLongCollection tSynchronizedLongCollection1 = (TSynchronizedLongCollection)tSynchronizedDoubleLongMap0.valueCollection();
      assertSame(tSynchronizedLongCollection1, tSynchronizedLongCollection0);
  }
}

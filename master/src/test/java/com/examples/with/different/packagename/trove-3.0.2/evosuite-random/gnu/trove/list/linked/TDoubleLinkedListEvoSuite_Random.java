/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.list.linked;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedDoubleList;
import gnu.trove.list.TDoubleList;
import gnu.trove.list.array.TDoubleArrayList;
import gnu.trove.list.linked.TDoubleLinkedList;
import gnu.trove.procedure.TDoubleProcedure;
import java.net.URI;
import java.net.URISyntaxException;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TDoubleLinkedListEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      double double0 = 1.0;
      doubleArray0[0] = double0;
      double double1 = 1430.6442120474442;
      doubleArray0[1] = double1;
      double double2 = 1382.8005472384493;
      doubleArray0[2] = double2;
      double double3 = (-1.0);
      doubleArray0[3] = double3;
      double double4 = 0.0;
      doubleArray0[4] = double4;
      int int0 = 0;
      int int1 = 530;
      // Undeclared exception!
      try {
        TDoubleLinkedList.link(doubleArray0, int0, int1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      int int0 = 0;
      int int1 = 0;
      // Undeclared exception!
      try {
        tDoubleLinkedList0.indexOf(int1, int1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      double double0 = 0.0;
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList(double0);
      int int0 = 0;
      // Undeclared exception!
      try {
        tDoubleLinkedList0.set(int0, int0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // at offset 0
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      double double0 = Double.POSITIVE_INFINITY;
      TDoubleList tDoubleList0 = null;
      TDoubleLinkedList tDoubleLinkedList0 = null;
      try {
        tDoubleLinkedList0 = new TDoubleLinkedList(tDoubleList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      double double0 = 946.7297646513163;
      doubleArray0[0] = double0;
      double double1 = (-778.6886180847688);
      doubleArray0[1] = double1;
      double double2 = (-886.8612903131927);
      doubleArray0[2] = double2;
      double double3 = 0.0;
      doubleArray0[3] = double3;
      double double4 = 0.0;
      doubleArray0[4] = double4;
      double double5 = (-1802.2970850051067);
      doubleArray0[5] = double5;
      double double6 = (-1256.8587840627706);
      doubleArray0[6] = double6;
      int int0 = (-887);
      int int1 = 2;
      // Undeclared exception!
      try {
        TDoubleLinkedList.link(doubleArray0, int0, int1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TDoubleList tDoubleList0 = null;
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      TSynchronizedDoubleList tSynchronizedDoubleList0 = new TSynchronizedDoubleList(tDoubleList0, (Object) tDoubleLinkedList0);
      TDoubleLinkedList tDoubleLinkedList1 = null;
      try {
        tDoubleLinkedList1 = new TDoubleLinkedList((TDoubleList) tSynchronizedDoubleList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double double0 = 1310.4055607795349;
      doubleArray0[0] = double0;
      TDoubleArrayList tDoubleArrayList0 = TDoubleArrayList.wrap(doubleArray0);
      TDoubleProcedure tDoubleProcedure0 = null;
      int int0 = 1972;
      // Undeclared exception!
      try {
        tDoubleArrayList0.get(int0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1972
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      double double0 = (-1759.4721334025987);
      doubleArray0[0] = double0;
      double double1 = 0.0;
      doubleArray0[1] = double1;
      double double2 = Double.POSITIVE_INFINITY;
      doubleArray0[2] = double2;
      double double3 = (-959.7963287893219);
      doubleArray0[3] = double3;
      double double4 = 327.27874877408516;
      doubleArray0[4] = double4;
      double double5 = 1.0;
      doubleArray0[5] = double5;
      int int0 = (-992);
      TDoubleLinkedList tDoubleLinkedList0 = TDoubleLinkedList.link(doubleArray0, int0, int0);
      assertNotNull(tDoubleLinkedList0);
      
      // Undeclared exception!
      try {
        tDoubleLinkedList0.min();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      double double0 = Double.POSITIVE_INFINITY;
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = double0;
      doubleArray0[1] = double0;
      doubleArray0[2] = double0;
      doubleArray0[3] = double0;
      doubleArray0[4] = double0;
      doubleArray0[5] = double0;
      doubleArray0[6] = double0;
      int int0 = (-1470);
      TDoubleLinkedList tDoubleLinkedList0 = TDoubleLinkedList.link(doubleArray0, int0, int0);
      // Undeclared exception!
      try {
        tDoubleLinkedList0.binarySearch(doubleArray0[1], int0, int0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      boolean boolean0 = tDoubleLinkedList0.isEmpty();
      assertEquals(true, boolean0);
      
      double double0 = (-1230.9637201957319);
      // Undeclared exception!
      try {
        tDoubleLinkedList0.indexOf(double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      double double0 = Double.NEGATIVE_INFINITY;
      doubleArray0[0] = double0;
      double double1 = (-1644.3674976541804);
      doubleArray0[1] = double1;
      double double2 = 0.0;
      doubleArray0[2] = double2;
      double double3 = 1628.2862227819353;
      doubleArray0[3] = double3;
      double double4 = 0.0;
      doubleArray0[4] = double4;
      double double5 = 0.0;
      doubleArray0[5] = double5;
      double double6 = 1.0;
      doubleArray0[6] = double6;
      int int0 = (-210);
      TDoubleLinkedList tDoubleLinkedList0 = TDoubleLinkedList.link(doubleArray0, int0, int0);
      assertEquals(true, tDoubleLinkedList0.isEmpty());
  }

  @Test
  public void test11()  throws Throwable  {
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList();
      double double0 = (-1261.0824981269363);
      tDoubleLinkedList0.no_entry_value = double0;
      assertEquals((-1261.0824981269363), tDoubleLinkedList0.no_entry_value, 0.01D);
  }

  @Test
  public void test12()  throws Throwable  {
      double double0 = (-1.0);
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList(double0);
      TDoubleLinkedList.TDoubleLink tDoubleLinkedList_TDoubleLink0 = tDoubleLinkedList0.tail;
      tDoubleLinkedList0.isEmpty();
      double double1 = (-1.0);
      TDoubleLinkedList tDoubleLinkedList1 = new TDoubleLinkedList(double1);
      double double2 = 1.0;
      tDoubleLinkedList0.add(double2);
      assertEquals(1, tDoubleLinkedList0.size());
      
      double double3 = 2046.1093003049987;
      tDoubleLinkedList1.remove(double3);
      int int0 = 74;
      tDoubleLinkedList1.getLinkAt(int0);
      tDoubleLinkedList1.sort();
      int int1 = 0;
      // Undeclared exception!
      try {
        tDoubleLinkedList1.removeAt(int1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no elemenet at 0
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      String string0 = "{";
      String string1 = " greater than begin index ";
      int int0 = 0;
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string1, string0, int0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: {://%20greater%20than%20begin%20index%20@{:0%7B?%7B#%7B
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      double double0 = 0.0;
      doubleArray0[0] = double0;
      TDoubleLinkedList tDoubleLinkedList0 = new TDoubleLinkedList(doubleArray0[0]);
      int int0 = 625;
      // Undeclared exception!
      try {
        tDoubleLinkedList0.removeAt(int0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no elemenet at 625
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      double double0 = 138.05377683055258;
      doubleArray0[0] = double0;
      double double1 = 0.0;
      doubleArray0[1] = double1;
      double double2 = 1.0;
      doubleArray0[2] = double2;
      double double3 = (-249.23344956013358);
      doubleArray0[3] = double3;
      double double4 = 499.15229430890946;
      doubleArray0[4] = double4;
      double double5 = (-1108.7523003406923);
      doubleArray0[5] = double5;
      double double6 = 1476.743304233782;
      doubleArray0[6] = double6;
      double double7 = 518.5318064627236;
      doubleArray0[7] = double7;
      double double8 = (-1643.5509162446194);
      doubleArray0[8] = double8;
      int int0 = 0;
      int int1 = 0;
      TDoubleLinkedList tDoubleLinkedList0 = TDoubleLinkedList.link(doubleArray0, int0, int1);
      assertNotNull(tDoubleLinkedList0);
      
      int int2 = tDoubleLinkedList0.lastIndexOf(int0, doubleArray0[4]);
      assertEquals((-1), int2);
      assertEquals(true, tDoubleLinkedList0.isEmpty());
      
      TDoubleLinkedList tDoubleLinkedList1 = new TDoubleLinkedList();
      int int3 = 1333;
      TDoubleLinkedList tDoubleLinkedList2 = null;
      // Undeclared exception!
      try {
        tDoubleLinkedList1.insert(int3, tDoubleLinkedList2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

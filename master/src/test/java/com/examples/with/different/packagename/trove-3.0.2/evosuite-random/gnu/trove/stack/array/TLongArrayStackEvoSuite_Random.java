/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.stack.array;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.stack.TLongStack;
import gnu.trove.stack.array.TLongArrayStack;
import java.io.BufferedInputStream;
import java.io.DataInput;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.net.URISyntaxException;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TLongArrayStackEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TLongArrayStack tLongArrayStack0 = new TLongArrayStack();
      String string0 = "Jbz)LM=m+";
      URI uRI0 = new URI(string0);
      ObjectOutput objectOutput0 = null;
      // Undeclared exception!
      try {
        tLongArrayStack0.writeExternal(objectOutput0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = (-312);
      int int1 = 1;
      TLongArrayStack tLongArrayStack0 = new TLongArrayStack(int1, int0);
      long long0 = (-1402L);
      long[] longArray0 = new long[4];
      longArray0[0] = long0;
      longArray0[1] = (long) int0;
      longArray0[2] = long0;
      long long1 = (-9223372036854775808L);
      longArray0[3] = long1;
      longArray0[0] = (long) int0;
      longArray0[1] = (long) int1;
      longArray0[2] = long0;
      longArray0[3] = (long) int0;
      tLongArrayStack0.toArray(longArray0);
      TLongArrayStack tLongArrayStack1 = null;
      try {
        tLongArrayStack1 = new TLongArrayStack(int0, long0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = 1899;
      long long0 = (-1L);
      TLongArrayStack tLongArrayStack0 = new TLongArrayStack(int0, long0);
      long[] longArray0 = new long[9];
      longArray0[0] = (long) int0;
      longArray0[1] = (long) int0;
      longArray0[2] = long0;
      longArray0[3] = (long) int0;
      longArray0[4] = long0;
      long long1 = (-1L);
      longArray0[5] = long1;
      longArray0[6] = (long) int0;
      longArray0[7] = long0;
      OutputStream outputStream0 = null;
      ObjectOutputStream objectOutputStream0 = null;
      try {
        objectOutputStream0 = new ObjectOutputStream(outputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TLongArrayStack tLongArrayStack0 = new TLongArrayStack();
      long long0 = (-608L);
      tLongArrayStack0.push(long0);
      assertEquals(1, tLongArrayStack0.size());
      assertEquals((-608L), tLongArrayStack0.peek());
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 10;
      long long0 = (-1099L);
      int int1 = (-1);
      TLongArrayStack tLongArrayStack0 = null;
      try {
        tLongArrayStack0 = new TLongArrayStack(int1, long0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TLongArrayStack tLongArrayStack0 = new TLongArrayStack();
      tLongArrayStack0.hashCode();
      long long0 = 0L;
      String string0 = "cx";
      // Undeclared exception!
      try {
        File.createTempFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = (-1);
      long long0 = 1721L;
      TLongArrayStack tLongArrayStack0 = null;
      try {
        tLongArrayStack0 = new TLongArrayStack(int0, long0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = (-1);
      TLongArrayStack tLongArrayStack0 = null;
      try {
        tLongArrayStack0 = new TLongArrayStack(int0, int0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TLongArrayStack tLongArrayStack0 = new TLongArrayStack();
      long[] longArray0 = new long[5];
      long long0 = 0L;
      longArray0[0] = long0;
      long long1 = (-947L);
      longArray0[0] = long1;
      longArray0[1] = long0;
      long long2 = 0L;
      longArray0[2] = long2;
      long long3 = 1L;
      longArray0[3] = long3;
      longArray0[4] = long1;
      longArray0[1] = long1;
      long long4 = 989L;
      longArray0[2] = long4;
      long long5 = 0L;
      int int0 = 0;
      TLongArrayStack tLongArrayStack1 = new TLongArrayStack(int0);
      tLongArrayStack1.toArray();
      longArray0[3] = long5;
      tLongArrayStack1.clear();
      long long6 = 0L;
      tLongArrayStack1.push(long6);
      long long7 = 1L;
      tLongArrayStack1.getNoEntryValue();
      assertFalse(tLongArrayStack1.equals(tLongArrayStack0));
      
      longArray0[4] = long7;
      tLongArrayStack0.toArray(longArray0);
      assertFalse(tLongArrayStack0.equals(tLongArrayStack1));
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = Integer.MAX_VALUE;
      int int1 = 10;
      TLongArrayStack tLongArrayStack0 = new TLongArrayStack(int1);
      TLongArrayStack tLongArrayStack1 = new TLongArrayStack(int1, int1);
      // Undeclared exception!
      try {
        tLongArrayStack1.peek();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TLongArrayStack tLongArrayStack0 = new TLongArrayStack();
      String string0 = "]3O^W\\xM:ksWH`L,Y";
      PrintStream printStream0 = null;
      try {
        printStream0 = new PrintStream(string0, string0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
         //
         // ]3O^W\\xM:ksWH`L,Y
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 0;
      TLongArrayStack tLongArrayStack0 = new TLongArrayStack(int0);
      InputStream inputStream0 = null;
      int int1 = 31;
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(inputStream0, int1);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) bufferedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 2;
      int int1 = 10;
      TLongArrayStack tLongArrayStack0 = new TLongArrayStack();
      TLongArrayStack tLongArrayStack1 = new TLongArrayStack(int1, int0);
      TLongArrayStack tLongArrayStack2 = new TLongArrayStack(int0);
      int int2 = 31;
      TLongArrayStack tLongArrayStack3 = new TLongArrayStack(int2);
      tLongArrayStack0.toArray();
      tLongArrayStack1.toString();
      DataInput dataInput0 = null;
      // Undeclared exception!
      try {
        DataInputStream.readUTF(dataInput0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TLongStack tLongStack0 = null;
      TLongArrayStack tLongArrayStack0 = null;
      try {
        tLongArrayStack0 = new TLongArrayStack(tLongStack0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Only support TLongArrayStack
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TLongArrayStack tLongArrayStack0 = new TLongArrayStack();
      Object object0 = null;
      tLongArrayStack0.equals(object0);
      boolean boolean0 = tLongArrayStack0.equals(object0);
      OutputStream outputStream0 = null;
      PrintStream printStream0 = null;
      try {
        printStream0 = new PrintStream(outputStream0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null output stream
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = (-347);
      TLongArrayStack tLongArrayStack0 = null;
      try {
        tLongArrayStack0 = new TLongArrayStack(int0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = Integer.MAX_VALUE;
      TLongArrayStack tLongArrayStack0 = null;
      try {
        tLongArrayStack0 = new TLongArrayStack(int0);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Requested array size exceeds VM limit
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      TLongArrayStack tLongArrayStack0 = new TLongArrayStack();
      // Undeclared exception!
      try {
        tLongArrayStack0.peek();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      int int0 = (-1441);
      TLongArrayStack tLongArrayStack0 = null;
      try {
        tLongArrayStack0 = new TLongArrayStack(int0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

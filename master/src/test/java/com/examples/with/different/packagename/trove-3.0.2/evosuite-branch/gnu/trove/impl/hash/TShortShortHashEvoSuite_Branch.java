/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.map.hash.TShortShortHashMap;
import gnu.trove.procedure.TShortProcedure;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TShortShortHashEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.hash.TShortShortHash.getNoEntryKey()S: root-Branch
   * 2 gnu.trove.impl.hash.TShortShortHash.<init>()V: root-Branch
   * 3 gnu.trove.impl.hash.TShortShortHash.setUp(I)I: root-Branch
   */

//   @Test
//   public void test0()  throws Throwable  {
//       TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
//       short short0 = tShortShortHashMap0.getNoEntryKey();
//       assertEquals(23, tShortShortHashMap0.capacity());
//       assertEquals((short)0, short0);
//       assertEquals(0, tShortShortHashMap0.getNoEntryValue());
//   }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.hash.TShortShortHash.getNoEntryValue()S: root-Branch
   * 2 gnu.trove.impl.hash.TShortShortHash.<init>(I)V: root-Branch
   */

//   @Test
//   public void test1()  throws Throwable  {
//       TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap((-677));
//       short short0 = tShortShortHashMap0.getNoEntryValue();
//       assertEquals((short)0, short0);
//       assertEquals(0, tShortShortHashMap0.getNoEntryKey());
//   }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.hash.TShortShortHash.<init>(IFSS)V: root-Branch
   */

//   @Test
//   public void test2()  throws Throwable  {
//       TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap((-911), 0.0F, (short)213, (short)213);
//       assertEquals(213, tShortShortHashMap0.getNoEntryValue());
//       assertEquals(213, tShortShortHashMap0.getNoEntryKey());
//   }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.hash.TShortShortHash.writeExternal(Ljava/io/ObjectOutput;)V: root-Branch
   * 2 gnu.trove.impl.hash.TShortShortHash.<init>()V: root-Branch
   */

//   @Test
//   public void test3()  throws Throwable  {
//       TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
//       ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((int) (short)0);
//       ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
//       tShortShortHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
//       assertEquals(0, tShortShortHashMap0.getNoEntryKey());
//       assertEquals(0, tShortShortHashMap0.getNoEntryValue());
//       assertEquals(23, tShortShortHashMap0.capacity());
//   }

  //Test case number: 4
  /*
   * 9 covered goals:
   * 1 gnu.trove.impl.hash.TShortShortHash.removeAt(I)V: root-Branch
   * 2 gnu.trove.impl.hash.TShortShortHash.index(S)I: I37 Branch 5 IFNE L228 - true
   * 3 gnu.trove.impl.hash.TShortShortHash.index(S)I: I46 Branch 6 IF_ICMPNE L231 - false
   * 4 gnu.trove.impl.hash.TShortShortHash.index(S)I: I51 Branch 7 IF_ICMPNE L231 - false
   * 5 gnu.trove.impl.hash.TShortShortHash.insertKeyAt(IS)V: root-Branch
   * 6 gnu.trove.impl.hash.TShortShortHash.insertKey(S)I: I30 Branch 13 IFNE L279 - true
   * 7 gnu.trove.impl.hash.TShortShortHash.insertKey(S)I: I30 Branch 13 IFNE L279 - false
   * 8 gnu.trove.impl.hash.TShortShortHash.insertKey(S)I: I50 Branch 14 IF_ICMPNE L286 - false
   * 9 gnu.trove.impl.hash.TShortShortHash.insertKey(S)I: I56 Branch 15 IF_ICMPNE L286 - false
   */

  @Test
  public void test4()  throws Throwable  {
      short[] shortArray0 = new short[10];
      shortArray0[0] = (short)927;
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(shortArray0, shortArray0);
      short short0 = tShortShortHashMap0.remove((short)927);
      assertEquals(1, tShortShortHashMap0.size());
      assertEquals((short)927, short0);
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.hash.TShortShortHash.contains(S)Z: I5 Branch 1 IFLT L178 - true
   * 2 gnu.trove.impl.hash.TShortShortHash.index(S)I: I37 Branch 5 IFNE L228 - false
   * 3 gnu.trove.impl.hash.TShortShortHash.<init>(IF)V: root-Branch
   */

//   @Test
//   public void test5()  throws Throwable  {
//       TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap((-676), (-676));
//       boolean boolean0 = tShortShortHashMap0.contains((short) (-1));
//       assertEquals(0, tShortShortHashMap0.getNoEntryKey());
//       assertEquals(0, tShortShortHashMap0.getNoEntryValue());
//       assertEquals(false, boolean0);
//   }

  //Test case number: 6
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.hash.TShortShortHash.contains(S)Z: I5 Branch 1 IFLT L178 - false
   * 2 gnu.trove.impl.hash.TShortShortHash.index(S)I: I51 Branch 7 IF_ICMPNE L231 - false
   */

//   @Test
//   public void test6()  throws Throwable  {
//       short[] shortArray0 = new short[8];
//       TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(shortArray0, shortArray0);
//       boolean boolean0 = tShortShortHashMap0.containsKey((short)0);
//       assertEquals(true, boolean0);
//       assertEquals(1, tShortShortHashMap0.size());
//       assertEquals(0, tShortShortHashMap0.getNoEntryKey());
//       assertEquals(0, tShortShortHashMap0.getNoEntryValue());
//   }

  //Test case number: 7
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.hash.TShortShortHash.forEach(Lgnu/trove/procedure/TShortProcedure;)Z: I18 Branch 2 IFLE L192 - true
   * 2 gnu.trove.impl.hash.TShortShortHash.forEach(Lgnu/trove/procedure/TShortProcedure;)Z: I18 Branch 2 IFLE L192 - false
   * 3 gnu.trove.impl.hash.TShortShortHash.forEach(Lgnu/trove/procedure/TShortProcedure;)Z: I25 Branch 3 IF_ICMPNE L193 - true
   */

//   @Test
//   public void test7()  throws Throwable  {
//       TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap((-1695));
//       boolean boolean0 = tShortShortHashMap0.forEach((TShortProcedure) null);
//       assertEquals(0, tShortShortHashMap0.getNoEntryKey());
//       assertEquals(true, boolean0);
//       assertEquals(0, tShortShortHashMap0.getNoEntryValue());
//   }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.hash.TShortShortHash.forEach(Lgnu/trove/procedure/TShortProcedure;)Z: I25 Branch 3 IF_ICMPNE L193 - false
   * 2 gnu.trove.impl.hash.TShortShortHash.forEach(Lgnu/trove/procedure/TShortProcedure;)Z: I18 Branch 2 IFLE L192 - false
   * 3 gnu.trove.impl.hash.TShortShortHash.forEach(Lgnu/trove/procedure/TShortProcedure;)Z: I25 Branch 3 IF_ICMPNE L193 - true
   */

  @Test
  public void test8()  throws Throwable  {
      short[] shortArray0 = new short[4];
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(shortArray0, shortArray0);
      // Undeclared exception!
      try {
        tShortShortHashMap0.forEach((TShortProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.hash.TShortShortHash.index(S)I: I46 Branch 6 IF_ICMPNE L231 - true
   * 2 gnu.trove.impl.hash.TShortShortHash.indexRehashed(SIIB)I: I29 Branch 8 IFGE L245 - true
   * 3 gnu.trove.impl.hash.TShortShortHash.indexRehashed(SIIB)I: I46 Branch 9 IFNE L250 - false
   */

//   @Test
//   public void test9()  throws Throwable  {
//       TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap((-676), (-676));
//       byte[] byteArray0 = new byte[3];
//       byteArray0[1] = (byte)77;
//       tShortShortHashMap0._states = byteArray0;
//       boolean boolean0 = tShortShortHashMap0.contains((short) (-1));
//       assertEquals(0, tShortShortHashMap0.getNoEntryKey());
//       assertEquals(false, boolean0);
//   }

  //Test case number: 10
  /*
   * 22 covered goals:
   * 1 gnu.trove.impl.hash.TShortShortHash.indexRehashed(SIIB)I: I58 Branch 10 IF_ICMPNE L254 - true
   * 2 gnu.trove.impl.hash.TShortShortHash.indexRehashed(SIIB)I: I70 Branch 12 IF_ICMPNE L256 - true
   * 3 gnu.trove.impl.hash.TShortShortHash.insertKeyRehash(SIIB)I: I45 Branch 18 IFGE L310 - true
   * 4 gnu.trove.impl.hash.TShortShortHash.insertKeyRehash(SIIB)I: I103 Branch 22 IF_ICMPNE L327 - true
   * 5 gnu.trove.impl.hash.TShortShortHash.insertKeyRehash(SIIB)I: I115 Branch 23 IF_ICMPNE L332 - true
   * 6 gnu.trove.impl.hash.TShortShortHash.<init>(I)V: root-Branch
   * 7 gnu.trove.impl.hash.TShortShortHash.indexRehashed(SIIB)I: I58 Branch 10 IF_ICMPNE L254 - false
   * 8 gnu.trove.impl.hash.TShortShortHash.indexRehashed(SIIB)I: I61 Branch 11 IF_ICMPEQ L254 - false
   * 9 gnu.trove.impl.hash.TShortShortHash.index(S)I: I46 Branch 6 IF_ICMPNE L231 - false
   * 10 gnu.trove.impl.hash.TShortShortHash.index(S)I: I51 Branch 7 IF_ICMPNE L231 - true
   * 11 gnu.trove.impl.hash.TShortShortHash.insertKeyRehash(SIIB)I: I97 Branch 21 IF_ICMPNE L327 - false
   * 12 gnu.trove.impl.hash.TShortShortHash.insertKeyRehash(SIIB)I: I103 Branch 22 IF_ICMPNE L327 - false
   * 13 gnu.trove.impl.hash.TShortShortHash.insertKey(S)I: I50 Branch 14 IF_ICMPNE L286 - false
   * 14 gnu.trove.impl.hash.TShortShortHash.insertKey(S)I: I56 Branch 15 IF_ICMPNE L286 - true
   * 15 gnu.trove.impl.hash.TShortShortHash.insertKey(S)I: I56 Branch 15 IF_ICMPNE L286 - false
   * 16 gnu.trove.impl.hash.TShortShortHash.indexRehashed(SIIB)I: I29 Branch 8 IFGE L245 - false
   * 17 gnu.trove.impl.hash.TShortShortHash.indexRehashed(SIIB)I: I46 Branch 9 IFNE L250 - true
   * 18 gnu.trove.impl.hash.TShortShortHash.insertKeyRehash(SIIB)I: I28 Branch 16 IF_ICMPNE L306 - true
   * 19 gnu.trove.impl.hash.TShortShortHash.insertKeyRehash(SIIB)I: I45 Branch 18 IFGE L310 - false
   * 20 gnu.trove.impl.hash.TShortShortHash.insertKeyRehash(SIIB)I: I62 Branch 19 IFNE L316 - true
   * 21 gnu.trove.impl.hash.TShortShortHash.insertKeyRehash(SIIB)I: I62 Branch 19 IFNE L316 - false
   * 22 gnu.trove.impl.hash.TShortShortHash.insertKeyRehash(SIIB)I: I67 Branch 20 IF_ICMPEQ L317 - true
   */

  @Test
  public void test10()  throws Throwable  {
      short[] shortArray0 = new short[10];
      shortArray0[0] = (short)927;
      shortArray0[1] = (short)927;
      shortArray0[2] = (short)927;
      shortArray0[4] = (short)927;
      shortArray0[5] = (short)927;
      shortArray0[3] = (short)252;
      shortArray0[6] = (short)552;
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(shortArray0, shortArray0);
      boolean boolean0 = tShortShortHashMap0.increment((short)0);
      assertEquals("{252=252, 0=1, 927=927, 552=552}", tShortShortHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 11
  /*
   * 9 covered goals:
   * 1 gnu.trove.impl.hash.TShortShortHash.indexRehashed(SIIB)I: I70 Branch 12 IF_ICMPNE L256 - false
   * 2 gnu.trove.impl.hash.TShortShortHash.indexRehashed(SIIB)I: I29 Branch 8 IFGE L245 - true
   * 3 gnu.trove.impl.hash.TShortShortHash.indexRehashed(SIIB)I: I29 Branch 8 IFGE L245 - false
   * 4 gnu.trove.impl.hash.TShortShortHash.indexRehashed(SIIB)I: I46 Branch 9 IFNE L250 - true
   * 5 gnu.trove.impl.hash.TShortShortHash.indexRehashed(SIIB)I: I58 Branch 10 IF_ICMPNE L254 - true
   * 6 gnu.trove.impl.hash.TShortShortHash.indexRehashed(SIIB)I: I70 Branch 12 IF_ICMPNE L256 - true
   * 7 gnu.trove.impl.hash.TShortShortHash.contains(S)Z: I5 Branch 1 IFLT L178 - true
   * 8 gnu.trove.impl.hash.TShortShortHash.index(S)I: I37 Branch 5 IFNE L228 - true
   * 9 gnu.trove.impl.hash.TShortShortHash.index(S)I: I46 Branch 6 IF_ICMPNE L231 - true
   */

//   @Test
//   public void test11()  throws Throwable  {
//       TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap((-676), (-676));
//       byte[] byteArray0 = new byte[3];
//       byteArray0[0] = (byte)118;
//       byteArray0[1] = (byte)77;
//       byteArray0[2] = (byte)77;
//       tShortShortHashMap0._states = byteArray0;
//       boolean boolean0 = tShortShortHashMap0.contains((short) (-1));
//       assertEquals(0, tShortShortHashMap0.getNoEntryValue());
//       assertEquals(0, tShortShortHashMap0.getNoEntryKey());
//       assertEquals(false, boolean0);
//   }

  //Test case number: 12
  /*
   * 6 covered goals:
   * 1 gnu.trove.impl.hash.TShortShortHash.insertKeyRehash(SIIB)I: I97 Branch 21 IF_ICMPNE L327 - true
   * 2 gnu.trove.impl.hash.TShortShortHash.insertKeyAt(IS)V: root-Branch
   * 3 gnu.trove.impl.hash.TShortShortHash.insertKeyRehash(SIIB)I: I62 Branch 19 IFNE L316 - false
   * 4 gnu.trove.impl.hash.TShortShortHash.insertKeyRehash(SIIB)I: I67 Branch 20 IF_ICMPEQ L317 - true
   * 5 gnu.trove.impl.hash.TShortShortHash.insertKey(S)I: I30 Branch 13 IFNE L279 - false
   * 6 gnu.trove.impl.hash.TShortShortHash.insertKey(S)I: I50 Branch 14 IF_ICMPNE L286 - true
   */

  @Test
  public void test12()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap((-676), (-676));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)118;
      byteArray0[1] = (byte)77;
      tShortShortHashMap0._states = byteArray0;
      tShortShortHashMap0.adjustOrPutValue((short) (-1), (short)1754, (short)258);
      assertEquals(false, tShortShortHashMap0.isEmpty());
      assertEquals("{-1=258}", tShortShortHashMap0.toString());
  }

  //Test case number: 13
  /*
   * 12 covered goals:
   * 1 gnu.trove.impl.hash.TShortShortHash.insertKeyRehash(SIIB)I: I115 Branch 23 IF_ICMPNE L332 - false
   * 2 gnu.trove.impl.hash.TShortShortHash.insertKeyRehash(SIIB)I: I120 Branch 24 IF_ICMPEQ L336 - true
   * 3 gnu.trove.impl.hash.TShortShortHash.setUp(I)I: root-Branch
   * 4 gnu.trove.impl.hash.TShortShortHash.<init>(IF)V: root-Branch
   * 5 gnu.trove.impl.hash.TShortShortHash.insertKeyRehash(SIIB)I: I28 Branch 16 IF_ICMPNE L306 - true
   * 6 gnu.trove.impl.hash.TShortShortHash.insertKeyRehash(SIIB)I: I45 Branch 18 IFGE L310 - true
   * 7 gnu.trove.impl.hash.TShortShortHash.insertKeyRehash(SIIB)I: I45 Branch 18 IFGE L310 - false
   * 8 gnu.trove.impl.hash.TShortShortHash.insertKeyRehash(SIIB)I: I62 Branch 19 IFNE L316 - true
   * 9 gnu.trove.impl.hash.TShortShortHash.insertKeyRehash(SIIB)I: I97 Branch 21 IF_ICMPNE L327 - true
   * 10 gnu.trove.impl.hash.TShortShortHash.insertKeyRehash(SIIB)I: I115 Branch 23 IF_ICMPNE L332 - true
   * 11 gnu.trove.impl.hash.TShortShortHash.insertKey(S)I: I30 Branch 13 IFNE L279 - true
   * 12 gnu.trove.impl.hash.TShortShortHash.insertKey(S)I: I50 Branch 14 IF_ICMPNE L286 - true
   */

  @Test
  public void test13()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap((-676), (-676));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)118;
      byteArray0[1] = (byte)77;
      byteArray0[2] = (byte)77;
      tShortShortHashMap0._states = byteArray0;
      // Undeclared exception!
      try {
        tShortShortHashMap0.adjustOrPutValue((short) (-1), (short)1754, (short)258);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No free or removed slots available. Key set full?!!
         //
      }
  }
}

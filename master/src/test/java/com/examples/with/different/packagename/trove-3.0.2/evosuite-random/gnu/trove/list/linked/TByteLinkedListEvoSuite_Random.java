/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.list.linked;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessByteList;
import gnu.trove.list.TByteList;
import gnu.trove.list.array.TByteArrayList;
import gnu.trove.list.linked.TByteLinkedList;
import gnu.trove.procedure.TByteProcedure;
import java.io.FileNotFoundException;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.util.Locale;
import javax.swing.text.Segment;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TByteLinkedListEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = (-1427);
      byte byte0 = (byte) (-113);
      TByteArrayList tByteArrayList0 = null;
      try {
        tByteArrayList0 = new TByteArrayList(int0, byte0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-58);
      byteArray0[0] = byte0;
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      int int0 = 895;
      // Undeclared exception!
      try {
        tByteLinkedList0.replace(int0, byteArray0[0]);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // index 895 exceeds size 0
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)124;
      byteArray0[0] = byte0;
      byte byte1 = (byte)25;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-128);
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-1);
      byteArray0[3] = byte3;
      int int0 = 648;
      int int1 = 2;
      // Undeclared exception!
      try {
        TByteLinkedList.link(byteArray0, int0, int1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 648
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      int int0 = tByteLinkedList0.size;
      TByteLinkedList tByteLinkedList1 = new TByteLinkedList();
      tByteLinkedList1.size();
      TUnmodifiableRandomAccessByteList tUnmodifiableRandomAccessByteList0 = new TUnmodifiableRandomAccessByteList((TByteList) tByteLinkedList1);
      TByteProcedure tByteProcedure0 = null;
      int int1 = (-1966);
      int int2 = tByteLinkedList1.size();
      assertEquals(0, int2);
      
      // Undeclared exception!
      try {
        tByteLinkedList1.removeAt(int1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no elemenet at -1966
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-39);
      byteArray0[0] = byte0;
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = byte0;
      byteArray1[1] = byte0;
      byteArray1[2] = byte0;
      byte byte1 = (byte)2;
      byteArray1[3] = byte1;
      byteArray1[4] = byte0;
      int int0 = 32;
      int int1 = 935;
      // Undeclared exception!
      try {
        TByteLinkedList.link(byteArray1, int0, int1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-30);
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, byte1);
      int int0 = (-541);
      int int1 = (-676);
      // Undeclared exception!
      try {
        tByteArrayList0.subList(int0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // end index -676 greater than begin index -541
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      byte byte0 = (byte)16;
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList(byte0);
      int int0 = Integer.MAX_VALUE;
      String string0 = "";
      PrintStream printStream0 = null;
      try {
        printStream0 = new PrintStream(string0, string0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
         //
         // 
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)1;
      byteArray0[0] = byte0;
      byte byte1 = (byte)97;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-128);
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      byte byte4 = (byte)0;
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-128);
      byteArray0[5] = byte5;
      byte byte6 = (byte)31;
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList(byte1);
      tByteLinkedList0.clear();
      byteArray0[6] = byte6;
      byte byte7 = (byte)0;
      byteArray0[7] = byte7;
      byte byte8 = (byte) (-37);
      byteArray0[8] = byte8;
      int int0 = 31;
      tByteLinkedList0.sort();
      // Undeclared exception!
      try {
        TByteLinkedList.link(byteArray0, int0, byteArray0[1]);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 31
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)31;
      byte byte1 = (byte)2;
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList(byte1);
      int int0 = (-1494);
      // Undeclared exception!
      try {
        tByteLinkedList0.subList((int) byte1, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 2 greater than end index -1494
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte) (-21);
      byteArray0[0] = byte0;
      byte byte1 = (byte)2;
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList(byte0);
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = byte0;
      byteArray1[1] = byte0;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = byte1;
      byteArray2[1] = byte0;
      byteArray2[2] = byte0;
      byteArray2[3] = byte1;
      byteArray2[4] = byte1;
      byteArray2[5] = byte0;
      int int0 = 10;
      // Undeclared exception!
      try {
        tByteLinkedList0.add(byteArray2, (int) byteArray2[2], int0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -21
         //
      }
  }

//   @Test
//   public void test10()  throws Throwable  {
//       TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
//       int int0 = (-1343);
//       byte[] byteArray0 = new byte[8];
//       byte byte0 = (byte) (-24);
//       byteArray0[0] = byte0;
//       byte byte1 = (byte) (-26);
//       byteArray0[1] = byte1;
//       byte byte2 = (byte) (-37);
//       byteArray0[2] = byte2;
//       byte byte3 = (byte)14;
//       byteArray0[3] = byte3;
//       byte byte4 = (byte) (-34);
//       byteArray0[4] = byte4;
//       byte byte5 = (byte)0;
//       byteArray0[5] = byte5;
//       byte byte6 = (byte)0;
//       byteArray0[6] = byte6;
//       byte byte7 = (byte)0;
//       byteArray0[7] = byte7;
//       int int1 = 1467;
//       tByteLinkedList0.set(int0, byteArray0, int1, (int) byteArray0[0]);
//       byte byte8 = (byte) (-128);
//       TByteLinkedList tByteLinkedList1 = new TByteLinkedList(byte8);
//       assertEquals(-128, tByteLinkedList1.getNoEntryValue());
//   }

  @Test
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-103);
      byteArray0[0] = byte0;
      int int0 = 1630;
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      int int1 = (-1235);
      int int2 = (-1540);
      // Undeclared exception!
      try {
        tByteLinkedList0.toArray(int1, int2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      int int0 = (-1044);
      byte byte0 = (byte)127;
      // Undeclared exception!
      try {
        tByteLinkedList0.set(int0, byte0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // at offset -1044
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      byte byte0 = (byte) (-121);
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList(byte0);
      byte[] byteArray0 = new byte[5];
      int int0 = (-2010);
      tByteLinkedList0.add(byteArray0, int0, int0);
      byteArray0[0] = byte0;
      Segment segment0 = new Segment();
      String string0 = segment0.toString();
      TByteLinkedList.got(string0);
      // Undeclared exception!
      try {
        tByteLinkedList0.insert((int) byte0, byte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      tByteLinkedList0.size();
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte) (-102);
      byteArray0[0] = byte0;
      byte byte1 = (byte)51;
      byteArray0[1] = byte1;
      byte byte2 = (byte)1;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-28);
      byteArray0[3] = byte3;
      byte byte4 = (byte)0;
      byteArray0[4] = byte4;
      byte byte5 = (byte)53;
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-1);
      byteArray0[6] = byte6;
      byte byte7 = (byte)40;
      byteArray0[7] = byte7;
      byte byte8 = (byte) (-1);
      byteArray0[8] = byte8;
      int int0 = 1248;
      // Undeclared exception!
      try {
        tByteLinkedList0.add(byteArray0, int0, (int) byte7);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1248
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)1;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-101);
      byteArray0[2] = byte2;
      int int0 = 0;
      int int1 = (-1);
      // Undeclared exception!
      try {
        tByteLinkedList0.toArray(byteArray0, int0, (int) byte0, int1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      String string0 = "LP%3";
      byte byte0 = (byte)70;
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList(byte0);
      Locale locale0 = Locale.US;
      char char0 = '+';
      // Undeclared exception!
      try {
        locale0.getExtension(char0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Ill-formed extension key: +
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      tByteLinkedList0.clear();
      assertEquals(true, tByteLinkedList0.isEmpty());
      assertEquals(0, tByteLinkedList0.size());
  }
}

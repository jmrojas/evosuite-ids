/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TIntCollection;
import gnu.trove.impl.sync.TSynchronizedIntCollection;
import gnu.trove.impl.sync.TSynchronizedIntList;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntList;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessIntList;
import gnu.trove.list.TIntList;
import gnu.trove.list.array.TIntArrayList;
import gnu.trove.list.linked.TIntLinkedList;
import gnu.trove.procedure.TIntProcedure;
import gnu.trove.set.TIntSet;
import gnu.trove.set.hash.TIntHashSet;
import java.util.Collection;
import java.util.LinkedList;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableIntCollectionEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.removeAll(Ljava/util/Collection;)Z: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.<init>(Lgnu/trove/TIntCollection;)V: I7 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      TUnmodifiableRandomAccessIntList tUnmodifiableRandomAccessIntList0 = new TUnmodifiableRandomAccessIntList((TIntList) tIntLinkedList0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessIntList0.removeAll((Collection<?>) linkedList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.removeAll([I)Z: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TIntHashSet tIntHashSet0 = new TIntHashSet(680, 680);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = new TUnmodifiableIntSet((TIntSet) tIntHashSet0);
      // Undeclared exception!
      try {
        tUnmodifiableIntSet0.removeAll(tIntHashSet0._set);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.addAll(Ljava/util/Collection;)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList(430, 430);
      TUnmodifiableIntList tUnmodifiableIntList0 = new TUnmodifiableIntList((TIntList) tIntArrayList0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      // Undeclared exception!
      try {
        tUnmodifiableIntList0.addAll((Collection<? extends Integer>) linkedList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.containsAll(Lgnu/trove/TIntCollection;)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList();
      TUnmodifiableIntCollection tUnmodifiableIntCollection0 = new TUnmodifiableIntCollection((TIntCollection) tIntArrayList0);
      boolean boolean0 = tUnmodifiableIntCollection0.containsAll((TIntCollection) tIntArrayList0);
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.removeAll(Lgnu/trove/TIntCollection;)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList(1762);
      TIntHashSet tIntHashSet0 = new TIntHashSet((TIntCollection) tIntArrayList0);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = new TUnmodifiableIntSet((TIntSet) tIntHashSet0);
      // Undeclared exception!
      try {
        tUnmodifiableIntSet0.removeAll((TIntCollection) tIntHashSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.forEach(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList(1762);
      TIntHashSet tIntHashSet0 = new TIntHashSet((TIntCollection) tIntArrayList0);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = new TUnmodifiableIntSet((TIntSet) tIntHashSet0);
      boolean boolean0 = tUnmodifiableIntSet0.forEach((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.retainAll([I)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList(0);
      TSynchronizedIntList tSynchronizedIntList0 = new TSynchronizedIntList((TIntList) tIntLinkedList0);
      TUnmodifiableRandomAccessIntList tUnmodifiableRandomAccessIntList0 = new TUnmodifiableRandomAccessIntList((TIntList) tSynchronizedIntList0);
      int[] intArray0 = new int[4];
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessIntList0.retainAll(intArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 4 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.iterator()Lgnu/trove/iterator/TIntIterator;: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableIntCollection;)V: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection$1.hasNext()Z: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection$1.next()I: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      int[] intArray0 = new int[4];
      TIntHashSet tIntHashSet0 = new TIntHashSet(intArray0);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = new TUnmodifiableIntSet((TIntSet) tIntHashSet0);
      boolean boolean0 = tIntHashSet0.addAll((TIntCollection) tUnmodifiableIntSet0);
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.size()I: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      TUnmodifiableIntCollection tUnmodifiableIntCollection0 = new TUnmodifiableIntCollection((TIntCollection) tIntLinkedList0);
      int int0 = tUnmodifiableIntCollection0.size();
      assertEquals(0, int0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList(1762);
      TIntHashSet tIntHashSet0 = new TIntHashSet((TIntCollection) tIntArrayList0);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = new TUnmodifiableIntSet((TIntSet) tIntHashSet0);
      String string0 = tUnmodifiableIntSet0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.containsAll(Ljava/util/Collection;)Z: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[4];
      TIntHashSet tIntHashSet0 = new TIntHashSet(intArray0);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = new TUnmodifiableIntSet((TIntSet) tIntHashSet0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      boolean boolean0 = tUnmodifiableIntSet0.containsAll((Collection<?>) linkedList0);
      assertEquals(true, boolean0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.getNoEntryValue()I: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[1];
      TIntHashSet tIntHashSet0 = new TIntHashSet(intArray0);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = new TUnmodifiableIntSet((TIntSet) tIntHashSet0);
      int int0 = tUnmodifiableIntSet0.getNoEntryValue();
      assertEquals(0, int0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.addAll([I)Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList((-4));
      TUnmodifiableRandomAccessIntList tUnmodifiableRandomAccessIntList0 = new TUnmodifiableRandomAccessIntList((TIntList) tIntLinkedList0);
      int[] intArray0 = new int[2];
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessIntList0.addAll(intArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.retainAll(Lgnu/trove/TIntCollection;)Z: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[2];
      TIntArrayList tIntArrayList0 = new TIntArrayList(intArray0);
      TUnmodifiableRandomAccessIntList tUnmodifiableRandomAccessIntList0 = new TUnmodifiableRandomAccessIntList((TIntList) tIntArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessIntList0.retainAll((TIntCollection) tIntArrayList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.toArray([I)[I: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList(1762);
      TIntHashSet tIntHashSet0 = new TIntHashSet((TIntCollection) tIntArrayList0);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = new TUnmodifiableIntSet((TIntSet) tIntHashSet0);
      int[] intArray0 = tUnmodifiableIntSet0.toArray(tIntHashSet0._set);
      assertNotNull(intArray0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.contains(I)Z: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[1];
      TIntHashSet tIntHashSet0 = new TIntHashSet(intArray0);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = new TUnmodifiableIntSet((TIntSet) tIntHashSet0);
      boolean boolean0 = tUnmodifiableIntSet0.contains(0);
      assertEquals(true, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.toArray()[I: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      TUnmodifiableRandomAccessIntList tUnmodifiableRandomAccessIntList0 = new TUnmodifiableRandomAccessIntList((TIntList) tIntLinkedList0);
      int[] intArray0 = tUnmodifiableRandomAccessIntList0.toArray();
      assertNotNull(intArray0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.containsAll([I)Z: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[1];
      TIntHashSet tIntHashSet0 = new TIntHashSet(intArray0);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = new TUnmodifiableIntSet((TIntSet) tIntHashSet0);
      boolean boolean0 = tUnmodifiableIntSet0.containsAll(tIntHashSet0._set);
      assertEquals(true, boolean0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.retainAll(Ljava/util/Collection;)Z: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[24];
      TIntHashSet tIntHashSet0 = new TIntHashSet(intArray0);
      TUnmodifiableIntCollection tUnmodifiableIntCollection0 = new TUnmodifiableIntCollection((TIntCollection) tIntHashSet0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      // Undeclared exception!
      try {
        tUnmodifiableIntCollection0.retainAll((Collection<?>) linkedList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.isEmpty()Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      TUnmodifiableRandomAccessIntList tUnmodifiableRandomAccessIntList0 = new TUnmodifiableRandomAccessIntList((TIntList) tIntLinkedList0);
      boolean boolean0 = tUnmodifiableRandomAccessIntList0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.remove(I)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TIntArrayList tIntArrayList0 = new TIntArrayList(6, 6);
      TUnmodifiableIntCollection tUnmodifiableIntCollection0 = new TUnmodifiableIntCollection((TIntCollection) tIntArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableIntCollection0.remove(6);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.clear()V: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      TUnmodifiableIntCollection tUnmodifiableIntCollection0 = new TUnmodifiableIntCollection((TIntCollection) tIntLinkedList0);
      // Undeclared exception!
      try {
        tUnmodifiableIntCollection0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.addAll(Lgnu/trove/TIntCollection;)Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TIntHashSet tIntHashSet0 = new TIntHashSet();
      TSynchronizedIntCollection tSynchronizedIntCollection0 = new TSynchronizedIntCollection((TIntCollection) tIntHashSet0);
      TUnmodifiableIntCollection tUnmodifiableIntCollection0 = new TUnmodifiableIntCollection((TIntCollection) tSynchronizedIntCollection0);
      // Undeclared exception!
      try {
        tUnmodifiableIntCollection0.addAll((TIntCollection) tSynchronizedIntCollection0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.add(I)Z: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.<init>(Lgnu/trove/TIntCollection;)V: I7 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test23()  throws Throwable  {
      TIntLinkedList tIntLinkedList0 = new TIntLinkedList();
      TUnmodifiableRandomAccessIntList tUnmodifiableRandomAccessIntList0 = new TUnmodifiableRandomAccessIntList((TIntList) tIntLinkedList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessIntList0.add(23);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection.<init>(Lgnu/trove/TIntCollection;)V: I7 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test24()  throws Throwable  {
      TUnmodifiableIntList tUnmodifiableIntList0 = null;
      try {
        tUnmodifiableIntList0 = new TUnmodifiableIntList((TIntList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.custom_hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TCharCollection;
import gnu.trove.function.TCharFunction;
import gnu.trove.list.array.TCharArrayList;
import gnu.trove.map.TObjectCharMap;
import gnu.trove.map.custom_hash.TObjectCharCustomHashMap;
import gnu.trove.map.hash.TObjectCharHashMap;
import gnu.trove.procedure.TCharProcedure;
import gnu.trove.procedure.TObjectCharProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.set.hash.TCharHashSet;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TObjectCharCustomHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 25 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.put(Ljava/lang/Object;C)C: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$1.execute(Ljava/lang/Object;C)Z: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - true
   * 4 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - false
   * 5 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - true
   * 6 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - false
   * 7 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.rehash(I)V: I63 Branch 13 IF_ACMPEQ L201 - false
   * 8 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.rehash(I)V: I73 Branch 14 IFGE L203 - true
   * 9 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.putIfAbsent(Ljava/lang/Object;C)C: I9 Branch 20 IFGE L259 - true
   * 10 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.doPut(CI)C: I12 Branch 21 IFGE L268 - true
   * 11 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.doPut(CI)C: I41 Branch 22 IFEQ L276 - false
   * 12 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectCharProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - false
   * 13 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectCharProcedure;)Z: I30 Branch 49 IF_ACMPEQ L519 - false
   * 14 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectCharProcedure;)Z: I39 Branch 50 IFNE L519 - true
   * 15 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.setUp(I)I: root-Branch
   * 16 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.putAll(Lgnu/trove/map/TObjectCharMap;)V: root-Branch
   * 17 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IF)V: root-Branch
   * 18 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.getNoEntryValue()C: root-Branch
   * 19 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectCharProcedure;)Z: I18 Branch 47 IFLE L518 - true
   * 20 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectCharProcedure;)Z: I18 Branch 47 IFLE L518 - false
   * 21 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectCharProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - true
   * 22 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectCharMap;)V: I14 Branch 9 IFEQ L151 - false
   * 23 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectCharMap;)V: I42 Branch 10 IFEQ L157 - true
   * 24 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFC)V: I24 Branch 8 IFEQ L134 - true
   * 25 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$1.<init>(Lgnu/trove/map/custom_hash/TObjectCharCustomHashMap;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 0, (-1991.1797F));
      IdentityHashingStrategy<Object> identityHashingStrategy1 = new IdentityHashingStrategy<Object>();
      tObjectCharCustomHashMap0.putIfAbsent((Integer) 0, 'S');
      TObjectCharCustomHashMap<Object> tObjectCharCustomHashMap1 = new TObjectCharCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy1, (TObjectCharMap<?>) tObjectCharCustomHashMap0);
      assertEquals(false, tObjectCharCustomHashMap0.isEmpty());
      assertEquals("{0=S}", tObjectCharCustomHashMap1.toString());
  }

  //Test case number: 1
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.iterator()Lgnu/trove/iterator/TObjectCharIterator;: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TObjectCharHashIterator.<init>(Lgnu/trove/map/custom_hash/TObjectCharCustomHashMap;Lgnu/trove/map/custom_hash/TObjectCharCustomHashMap;)V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L588 - true
   * 4 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 59 IF_ICMPEQ L592 - true
   * 5 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 60 IFEQ L597 - true
   * 6 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;I)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectCharCustomHashMap<Object> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 1172);
      TObjectCharCustomHashMap<String> tObjectCharCustomHashMap1 = new TObjectCharCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (int) '\u001E', (float) 'q');
      boolean boolean0 = tObjectCharCustomHashMap0.equals((Object) tObjectCharCustomHashMap1);
      assertEquals(true, boolean0);
      assertEquals(2411, tObjectCharCustomHashMap0.capacity());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.clear()V: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.<init>()V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TObjectCharCustomHashMap<String> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<String>();
      tObjectCharCustomHashMap0.clear();
      assertEquals(23, tObjectCharCustomHashMap0.capacity());
      assertEquals("{}", tObjectCharCustomHashMap0.toString());
  }

  //Test case number: 3
  /*
   * 16 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.containsKey(Ljava/lang/Object;)Z: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TObjectCharHashIterator.advance()V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TObjectCharHashIterator.value()C: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TObjectCharHashIterator.key()Ljava/lang/Object;: root-Branch
   * 5 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFC)V: I24 Branch 8 IFEQ L134 - false
   * 6 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.get(Ljava/lang/Object;)C: I9 Branch 19 IFGE L243 - false
   * 7 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.adjustOrPutValue(Ljava/lang/Object;CC)C: I9 Branch 41 IFGE L456 - true
   * 8 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.adjustOrPutValue(Ljava/lang/Object;CC)C: I52 Branch 42 IFEQ L466 - false
   * 9 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 60 IFEQ L597 - false
   * 10 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.equals(Ljava/lang/Object;)Z: I54 Branch 61 IF_ICMPNE L601 - false
   * 11 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.equals(Ljava/lang/Object;)Z: I62 Branch 62 IF_ICMPNE L602 - false
   * 12 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.equals(Ljava/lang/Object;)Z: I66 Branch 63 IFNE L602 - false
   * 13 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.iterator()Lgnu/trove/iterator/TObjectCharIterator;: root-Branch
   * 14 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L588 - true
   * 15 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 59 IF_ICMPEQ L592 - true
   * 16 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TObjectCharHashIterator.<init>(Lgnu/trove/map/custom_hash/TObjectCharCustomHashMap;Lgnu/trove/map/custom_hash/TObjectCharCustomHashMap;)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectCharCustomHashMap<String> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1167);
      TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap1 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1167, (-952.60156F));
      tObjectCharCustomHashMap1.adjustOrPutValue((Integer) 1167, 'q', 'q');
      TObjectCharCustomHashMap<Object> tObjectCharCustomHashMap2 = new TObjectCharCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 1167, (float) 1167, 'P');
      tObjectCharCustomHashMap1.compact();
      tObjectCharCustomHashMap2._set = tObjectCharCustomHashMap1._set;
      assertEquals(1, tObjectCharCustomHashMap1.size());
      
      boolean boolean0 = tObjectCharCustomHashMap2.equals((Object) tObjectCharCustomHashMap0);
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.keySet()Ljava/util/Set;: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$KeyView.<init>(Lgnu/trove/map/custom_hash/TObjectCharCustomHashMap;)V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectCharCustomHashMap<String> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0);
      tObjectCharCustomHashMap0.keySet();
      assertEquals(23, tObjectCharCustomHashMap0.capacity());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 0, (-1991.1797F));
      Integer[] integerArray0 = new Integer[4];
      ToObjectArrayProceedure<Integer> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Integer>(integerArray0);
      boolean boolean0 = tObjectCharCustomHashMap0.forEachKey((TObjectProcedure<? super Integer>) toObjectArrayProceedure0);
      assertEquals(true, boolean0);
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.increment(Ljava/lang/Object;)Z: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.adjustValue(Ljava/lang/Object;C)Z: I9 Branch 40 IFGE L440 - false
   */

  @Test
  public void test6()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectCharCustomHashMap<Object> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 0, (float) 747, '$');
      boolean boolean0 = tObjectCharCustomHashMap0.increment((Object) 747);
      assertEquals('$', tObjectCharCustomHashMap0.getNoEntryValue());
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 14 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection$TObjectCharValueHashIterator.next()C: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection$TObjectCharValueHashIterator.<init>(Lgnu/trove/map/custom_hash/TObjectCharCustomHashMap$TCharValueCollection;)V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection$TObjectCharValueHashIterator.hasNext()Z: I4 Branch 103 IFLT L985 - true
   * 5 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection$TObjectCharValueHashIterator.hasNext()Z: I4 Branch 103 IFLT L985 - false
   * 6 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection$TObjectCharValueHashIterator.moveToNextIndex()V: I7 Branch 105 IFGE L1020 - true
   * 7 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection$TObjectCharValueHashIterator.nextIndex()I: I7 Branch 106 IF_ICMPEQ L1036 - true
   * 8 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection$TObjectCharValueHashIterator.nextIndex()I: I30 Branch 107 IFLE L1042 - true
   * 9 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection$TObjectCharValueHashIterator.nextIndex()I: I30 Branch 107 IFLE L1042 - false
   * 10 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection$TObjectCharValueHashIterator.nextIndex()I: I35 Branch 108 IF_ACMPEQ L1042 - true
   * 11 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection$TObjectCharValueHashIterator.nextIndex()I: I35 Branch 108 IF_ACMPEQ L1042 - false
   * 12 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection$TObjectCharValueHashIterator.nextIndex()I: I40 Branch 109 IF_ACMPNE L1042 - true
   * 13 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.valueCollection()Lgnu/trove/TCharCollection;: root-Branch
   * 14 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection.<init>(Lgnu/trove/map/custom_hash/TObjectCharCustomHashMap;)V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 48, (float) 48);
      TCharCollection tCharCollection0 = tObjectCharCustomHashMap0.valueCollection();
      TCharHashSet tCharHashSet0 = new TCharHashSet(48, (float) 48, 'P');
      tObjectCharCustomHashMap0.adjustOrPutValue((Integer) 48, '\u0000', 'P');
      tCharHashSet0.removeAll(tCharCollection0);
      assertEquals("{48=P}", tObjectCharCustomHashMap0.toString());
      assertEquals(false, tCharCollection0.isEmpty());
  }

  //Test case number: 8
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection.size()I: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.valueCollection()Lgnu/trove/TCharCollection;: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection$TObjectCharValueHashIterator.<init>(Lgnu/trove/map/custom_hash/TObjectCharCustomHashMap$TCharValueCollection;)V: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection$TObjectCharValueHashIterator.nextIndex()I: I7 Branch 106 IF_ICMPEQ L1036 - true
   * 5 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection$TObjectCharValueHashIterator.nextIndex()I: I30 Branch 107 IFLE L1042 - true
   * 6 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection$TObjectCharValueHashIterator.nextIndex()I: I30 Branch 107 IFLE L1042 - false
   * 7 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection$TObjectCharValueHashIterator.nextIndex()I: I35 Branch 108 IF_ACMPEQ L1042 - true
   * 8 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection$TObjectCharValueHashIterator.hasNext()Z: I4 Branch 103 IFLT L985 - true
   * 9 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection.<init>(Lgnu/trove/map/custom_hash/TObjectCharCustomHashMap;)V: root-Branch
   * 10 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$TCharValueCollection.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 48, (float) 48);
      TCharCollection tCharCollection0 = tObjectCharCustomHashMap0.valueCollection();
      TCharArrayList tCharArrayList0 = new TCharArrayList(tCharCollection0);
      assertEquals('\u0000', tCharArrayList0.sum());
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectCharMap;)V: I14 Branch 9 IFEQ L151 - true
   */

  @Test
  public void test9()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectCharHashMap<Integer> tObjectCharHashMap0 = new TObjectCharHashMap<Integer>(585, 585);
      TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (TObjectCharMap<? extends Integer>) tObjectCharHashMap0);
      assertEquals('\u0000', tObjectCharCustomHashMap0.getNoEntryValue());
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectCharMap;)V: I42 Branch 10 IFEQ L157 - false
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFC)V: I24 Branch 8 IFEQ L134 - false
   */

  @Test
  public void test10()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectCharCustomHashMap<String> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 0, (float) 0, '<');
      TObjectCharCustomHashMap<String> tObjectCharCustomHashMap1 = null;
      try {
        tObjectCharCustomHashMap1 = new TObjectCharCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (TObjectCharMap<? extends String>) tObjectCharCustomHashMap0);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  //Test case number: 11
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.containsValue(C)Z: I25 Branch 16 IF_ACMPEQ L232 - false
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.containsValue(C)Z: I30 Branch 17 IF_ACMPEQ L232 - false
   * 3 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.containsValue(C)Z: I35 Branch 18 IF_ICMPNE L232 - true
   * 4 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.containsValue(C)Z: I18 Branch 15 IFLE L231 - true
   * 5 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.containsValue(C)Z: I18 Branch 15 IFLE L231 - false
   * 6 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.containsValue(C)Z: I25 Branch 16 IF_ACMPEQ L232 - true
   */

  @Test
  public void test11()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 0, (-1991.1797F));
      tObjectCharCustomHashMap0.putIfAbsent((Integer) 0, 'S');
      boolean boolean0 = tObjectCharCustomHashMap0.containsValue('5');
      assertEquals(1, tObjectCharCustomHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.containsValue(C)Z: I35 Branch 18 IF_ICMPNE L232 - false
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.containsValue(C)Z: I18 Branch 15 IFLE L231 - false
   * 3 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.containsValue(C)Z: I25 Branch 16 IF_ACMPEQ L232 - true
   * 4 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.containsValue(C)Z: I25 Branch 16 IF_ACMPEQ L232 - false
   * 5 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.containsValue(C)Z: I30 Branch 17 IF_ACMPEQ L232 - false
   */

  @Test
  public void test12()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 0, (-1991.1797F));
      tObjectCharCustomHashMap0.putIfAbsent((Integer) 257888130, '5');
      boolean boolean0 = tObjectCharCustomHashMap0.containsValue('5');
      assertEquals(false, tObjectCharCustomHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.putIfAbsent(Ljava/lang/Object;C)C: I9 Branch 20 IFGE L259 - false
   */

//   @Test
//   public void test13()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
//       tObjectCharCustomHashMap0.adjustOrPutValue((Integer) 1172, 'q', 'q');
//       char char0 = tObjectCharCustomHashMap0.putIfAbsent((Integer) 1172, 'q');
//       assertEquals("{1172=q}", tObjectCharCustomHashMap0.toString());
//       assertEquals('q', char0);
//   }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.remove(Ljava/lang/Object;)C: I14 Branch 23 IFLT L287 - true
   */

  @Test
  public void test14()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectCharCustomHashMap<String> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1167);
      char char0 = tObjectCharCustomHashMap0.remove((Object) "fran\u00E7ais");
      assertEquals(true, tObjectCharCustomHashMap0.isEmpty());
      assertEquals('\u0000', char0);
      assertEquals(2411, tObjectCharCustomHashMap0.capacity());
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.putAll(Ljava/util/Map;)V: I13 Branch 24 IFEQ L313 - true
   */

  @Test
  public void test15()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      HashMap<Integer, Character> hashMap0 = new HashMap<Integer, Character>();
      tObjectCharCustomHashMap0.putAll((Map<? extends Integer, ? extends Character>) hashMap0);
      assertEquals(23, tObjectCharCustomHashMap0.capacity());
  }

  //Test case number: 16
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L348 - false
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.keys()[Ljava/lang/Object;: I35 Branch 27 IF_ACMPEQ L348 - false
   * 3 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L347 - true
   * 4 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L347 - false
   * 5 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L348 - true
   */

  @Test
  public void test16()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1167, (-952.60156F));
      tObjectCharCustomHashMap0.adjustOrPutValue((Integer) 1167, 'q', 'q');
      tObjectCharCustomHashMap0.keys();
      assertEquals("{1167=q}", tObjectCharCustomHashMap0.toString());
      assertEquals(7, tObjectCharCustomHashMap0.capacity());
  }

  //Test case number: 17
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L369 - false
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I49 Branch 31 IF_ACMPEQ L369 - false
   * 3 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I10 Branch 28 IF_ICMPGE L360 - true
   * 4 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L368 - true
   * 5 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L368 - false
   * 6 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L369 - true
   */

  @Test
  public void test17()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 48, (float) 48);
      tObjectCharCustomHashMap0.adjustOrPutValue((Integer) 48, '\u0000', 'P');
      Integer[] integerArray0 = new Integer[1];
      tObjectCharCustomHashMap0.keys(integerArray0);
      assertEquals("{48=P}", tObjectCharCustomHashMap0.toString());
      assertEquals(1, tObjectCharCustomHashMap0.size());
  }

  //Test case number: 18
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.values()[C: I34 Branch 33 IF_ACMPEQ L391 - false
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.values()[C: I39 Branch 34 IF_ACMPEQ L391 - false
   * 3 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.values()[C: I27 Branch 32 IFLE L390 - true
   * 4 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.values()[C: I27 Branch 32 IFLE L390 - false
   * 5 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.values()[C: I34 Branch 33 IF_ACMPEQ L391 - true
   */

  @Test
  public void test18()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectCharCustomHashMap<String> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1167);
      tObjectCharCustomHashMap0.adjustOrPutValue("end index < ", 'q', ' ');
      tObjectCharCustomHashMap0.values();
      assertEquals(1, tObjectCharCustomHashMap0.size());
      assertEquals("{end index < = }", tObjectCharCustomHashMap0.toString());
  }

  //Test case number: 19
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.values([C)[C: I10 Branch 35 IF_ICMPGE L402 - true
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.values([C)[C: I37 Branch 36 IFLE L409 - true
   * 3 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.values([C)[C: I37 Branch 36 IFLE L409 - false
   * 4 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.values([C)[C: I44 Branch 37 IF_ACMPEQ L410 - true
   * 5 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.values([C)[C: I65 Branch 39 IF_ICMPLE L414 - false
   */

  @Test
  public void test19()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 0, (-1991.1797F));
      char[] charArray0 = new char[2];
      char[] charArray1 = tObjectCharCustomHashMap0.values(charArray0);
      assertSame(charArray0, charArray1);
      assertNotNull(charArray1);
  }

  //Test case number: 20
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.values([C)[C: I10 Branch 35 IF_ICMPGE L402 - false
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.values([C)[C: I44 Branch 37 IF_ACMPEQ L410 - false
   * 3 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.values([C)[C: I49 Branch 38 IF_ACMPEQ L410 - false
   * 4 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.values([C)[C: I65 Branch 39 IF_ICMPLE L414 - true
   * 5 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.values([C)[C: I37 Branch 36 IFLE L409 - true
   * 6 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.values([C)[C: I37 Branch 36 IFLE L409 - false
   * 7 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.values([C)[C: I44 Branch 37 IF_ACMPEQ L410 - true
   */

//   @Test
//   public void test20()  throws Throwable  {
//       IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
//       TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 0, (-1991.1797F));
//       char[] charArray0 = new char[2];
//       tObjectCharCustomHashMap0.putIfAbsent((Integer) 0, 'S');
//       tObjectCharCustomHashMap0.adjustOrPutValue((Integer) (-1289), 'O', 'T');
//       tObjectCharCustomHashMap0.putIfAbsent((Integer) 257888130, '5');
//       tObjectCharCustomHashMap0.values(charArray0);
//       assertEquals(37, tObjectCharCustomHashMap0.capacity());
//       assertEquals("{257888130=5,0=S,-1289=T}", tObjectCharCustomHashMap0.toString());
//   }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.adjustValue(Ljava/lang/Object;C)Z: I9 Branch 40 IFGE L440 - true
   */

//   @Test
//   public void test21()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1167, (-952.60156F));
//       tObjectCharCustomHashMap0.adjustOrPutValue((Integer) 1167, 'q', 'q');
//       boolean boolean0 = tObjectCharCustomHashMap0.adjustValue((Integer) 1167, ' ');
//       assertEquals(7, tObjectCharCustomHashMap0.capacity());
//       assertEquals(true, boolean0);
//   }

  //Test case number: 22
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.adjustOrPutValue(Ljava/lang/Object;CC)C: I9 Branch 41 IFGE L456 - false
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.adjustOrPutValue(Ljava/lang/Object;CC)C: I52 Branch 42 IFEQ L466 - true
   */

//   @Test
//   public void test22()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
//       tObjectCharCustomHashMap0.adjustOrPutValue((Integer) 1172, 'q', 'q');
//       char char0 = tObjectCharCustomHashMap0.adjustOrPutValue((Integer) 1172, 'q', 'q');
//       assertEquals(false, tObjectCharCustomHashMap0.isEmpty());
//       assertEquals('\u00E2', char0);
//   }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: I18 Branch 43 IFLE L496 - true
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: I18 Branch 43 IFLE L496 - false
   * 3 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: I25 Branch 44 IF_ACMPEQ L497 - true
   */

  @Test
  public void test23()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectCharCustomHashMap<String> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0);
      boolean boolean0 = tObjectCharCustomHashMap0.forEachValue((TCharProcedure) null);
      assertEquals(true, boolean0);
      assertEquals(23, tObjectCharCustomHashMap0.capacity());
  }

  //Test case number: 24
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: I25 Branch 44 IF_ACMPEQ L497 - false
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: I30 Branch 45 IF_ACMPEQ L497 - false
   * 3 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.put(Ljava/lang/Object;C)C: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: I18 Branch 43 IFLE L496 - false
   * 5 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: I25 Branch 44 IF_ACMPEQ L497 - true
   */

  @Test
  public void test24()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 208);
      tObjectCharCustomHashMap0.put((Integer) 208, 'd');
      // Undeclared exception!
      try {
        tObjectCharCustomHashMap0.forEachValue((TCharProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectCharProcedure;)Z: I27 Branch 51 IFLE L545 - true
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectCharProcedure;)Z: I27 Branch 51 IFLE L545 - false
   * 3 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectCharProcedure;)Z: I34 Branch 52 IF_ACMPEQ L546 - true
   */

  @Test
  public void test25()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectCharCustomHashMap<String> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1109, (float) 1109);
      boolean boolean0 = tObjectCharCustomHashMap0.retainEntries((TObjectCharProcedure<? super String>) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectCharProcedure;)Z: I34 Branch 52 IF_ACMPEQ L546 - false
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectCharProcedure;)Z: I39 Branch 53 IF_ACMPEQ L546 - false
   * 3 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectCharProcedure;)Z: I27 Branch 51 IFLE L545 - false
   */

  @Test
  public void test26()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectCharCustomHashMap<String> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 0);
      tObjectCharCustomHashMap0.adjustOrPutValue("N7:hi", 'A', '!');
      // Undeclared exception!
      try {
        tObjectCharCustomHashMap0.retainEntries((TObjectCharProcedure<? super String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V: I18 Branch 55 IFLE L570 - false
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V: I24 Branch 56 IFNULL L571 - false
   * 3 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.transformValues(Lgnu/trove/function/TCharFunction;)V: I29 Branch 57 IF_ACMPEQ L571 - false
   * 4 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.putAll(Lgnu/trove/map/TObjectCharMap;)V: root-Branch
   * 5 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;)V: root-Branch
   * 6 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.getNoEntryValue()C: root-Branch
   * 7 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectCharMap;)V: I14 Branch 9 IFEQ L151 - false
   * 8 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectCharMap;)V: I42 Branch 10 IFEQ L157 - true
   * 9 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFC)V: I24 Branch 8 IFEQ L134 - true
   */

  @Test
  public void test27()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      TObjectCharCustomHashMap<Object> tObjectCharCustomHashMap1 = new TObjectCharCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectCharMap<?>) tObjectCharCustomHashMap0);
      // Undeclared exception!
      try {
        tObjectCharCustomHashMap1.transformValues((TCharFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L588 - false
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.<init>()V: root-Branch
   */

  @Test
  public void test28()  throws Throwable  {
      TObjectCharCustomHashMap<String> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<String>();
      boolean boolean0 = tObjectCharCustomHashMap0.equals((Object) "DEFAULT_INT_NO_E+TUY_VALUE: ");
      assertEquals(false, boolean0);
      assertEquals(23, tObjectCharCustomHashMap0.capacity());
  }

  //Test case number: 29
  /*
   * 12 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L626 - false
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.hashCode()I: I34 Branch 67 IF_ACMPEQ L626 - false
   * 3 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.hashCode()I: I45 Branch 68 IFNONNULL L627 - true
   * 4 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - true
   * 5 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - false
   * 6 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - true
   * 7 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - false
   * 8 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.rehash(I)V: I63 Branch 13 IF_ACMPEQ L201 - false
   * 9 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.rehash(I)V: I73 Branch 14 IFGE L203 - true
   * 10 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.hashCode()I: I22 Branch 65 IFLE L625 - true
   * 11 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.hashCode()I: I22 Branch 65 IFLE L625 - false
   * 12 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L626 - true
   */

  @Test
  public void test29()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 0, (-1991.1797F));
      tObjectCharCustomHashMap0.putIfAbsent((Integer) 0, 'S');
      int int0 = tObjectCharCustomHashMap0.hashCode();
      assertEquals(false, tObjectCharCustomHashMap0.isEmpty());
      assertEquals(83, int0);
  }

  //Test case number: 30
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I51 Branch 71 IF_ACMPEQ L1108 - false
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;I)V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 69 IFLE L1107 - true
   * 4 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 69 IFLE L1107 - false
   * 5 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I45 Branch 70 IF_ACMPEQ L1108 - false
   * 6 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I51 Branch 71 IF_ACMPEQ L1108 - true
   * 7 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.putIfAbsent(Ljava/lang/Object;C)C: I9 Branch 20 IFGE L259 - true
   * 8 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.doPut(CI)C: I12 Branch 21 IFGE L268 - true
   * 9 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.doPut(CI)C: I41 Branch 22 IFEQ L276 - false
   */

  @Test
  public void test30()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectCharCustomHashMap<String> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (-608));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      tObjectCharCustomHashMap0.putIfAbsent("jI/EQVEfhL%vj^%", '(');
      PrintStream printStream0 = new PrintStream((OutputStream) byteArrayOutputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) printStream0);
      tObjectCharCustomHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(1, tObjectCharCustomHashMap0.size());
      assertEquals("\uFFFD\uFFFD\u0000\u0005w\f\u0000\u0000\u0000\u0000?\u0000\u0000\u0000?\u0000\u0000\u0000sr\u0000*gnu.trove.strategy.IdentityHashingStrategy\uFFFD\uFFFD\uFFFDgQ\uFFFD\uFFFDX\u0002\u0000\u0000xpq\u0000~\u0000\u0001w\u0006\u0000\u0000\u0000\u0000\u0000\u0001t\u0000\u000FjI/EQVEfhL%vj^%", byteArrayOutputStream0.toString());
  }

  //Test case number: 31
  /*
   * 15 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$2.execute(Ljava/lang/Object;C)Z: I4 Branch 102 IFEQ L1151 - true
   * 2 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$2.execute(Ljava/lang/Object;C)Z: I4 Branch 102 IFEQ L1151 - false
   * 3 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IF)V: root-Branch
   * 5 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.toString()Ljava/lang/String;: root-Branch
   * 6 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectCharProcedure;)Z: I18 Branch 47 IFLE L518 - true
   * 7 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectCharProcedure;)Z: I18 Branch 47 IFLE L518 - false
   * 8 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectCharProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - true
   * 9 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectCharProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - false
   * 10 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectCharProcedure;)Z: I30 Branch 49 IF_ACMPEQ L519 - false
   * 11 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectCharProcedure;)Z: I39 Branch 50 IFNE L519 - true
   * 12 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.adjustOrPutValue(Ljava/lang/Object;CC)C: I9 Branch 41 IFGE L456 - true
   * 13 gnu.trove.map.custom_hash.TObjectCharCustomHashMap.adjustOrPutValue(Ljava/lang/Object;CC)C: I52 Branch 42 IFEQ L466 - false
   * 14 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$2.<init>(Lgnu/trove/map/custom_hash/TObjectCharCustomHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 15 gnu.trove.map.custom_hash.TObjectCharCustomHashMap$1.<init>(Lgnu/trove/map/custom_hash/TObjectCharCustomHashMap;)V: root-Branch
   */

//   @Test
//   public void test31()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       TObjectCharCustomHashMap<Integer> tObjectCharCustomHashMap0 = new TObjectCharCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 48, (float) 48);
//       tObjectCharCustomHashMap0.adjustOrPutValue((Integer) 48, '\u0000', 'P');
//       ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tObjectCharCustomHashMap0._set);
//       tObjectCharCustomHashMap0.forEach((TObjectProcedure<? super Integer>) toObjectArrayProceedure0);
//       String string0 = tObjectCharCustomHashMap0.toString();
//       assertEquals(false, tObjectCharCustomHashMap0.isEmpty());
//       assertEquals("{48=P,48=\u0000}", string0);
//   }
}

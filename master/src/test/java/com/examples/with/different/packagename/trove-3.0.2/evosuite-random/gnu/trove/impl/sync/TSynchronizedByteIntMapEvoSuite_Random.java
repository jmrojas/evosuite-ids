/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedByteIntMap;
import gnu.trove.map.TByteIntMap;
import gnu.trove.map.hash.TByteIntHashMap;
import gnu.trove.procedure.TByteIntProcedure;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Locale;
import java.util.NoSuchElementException;
import java.util.StringTokenizer;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedByteIntMapEvoSuite_Random {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap();
      Object object0 = null;
      TSynchronizedByteIntMap tSynchronizedByteIntMap0 = new TSynchronizedByteIntMap((TByteIntMap) tByteIntHashMap0);
      int[] intArray0 = new int[7];
      int int0 = 1236;
      intArray0[0] = int0;
      int int1 = (-463);
      intArray0[1] = int1;
      int int2 = 881;
      intArray0[2] = int2;
      int int3 = 1276;
      int int4 = 949;
      intArray0[0] = int4;
      intArray0[1] = int4;
      intArray0[2] = int0;
      intArray0[3] = int2;
      intArray0[4] = int4;
      intArray0[5] = int1;
      int int5 = 1;
      intArray0[6] = int5;
      intArray0[3] = int3;
      int int6 = 0;
      intArray0[4] = int6;
      int int7 = (-1829);
      byte byte0 = (byte) (-128);
      tSynchronizedByteIntMap0.put(byte0, intArray0[0]);
      intArray0[5] = int7;
      int int8 = (-1163);
      intArray0[6] = int8;
      tSynchronizedByteIntMap0.values(intArray0);
      tSynchronizedByteIntMap0.values(intArray0);
      TSynchronizedByteIntMap tSynchronizedByteIntMap1 = new TSynchronizedByteIntMap((TByteIntMap) tByteIntHashMap0, object0);
      // Undeclared exception!
      try {
        tSynchronizedByteIntMap1.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)53;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-58);
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-119);
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-63);
      byteArray0[4] = byte4;
      byte byte5 = (byte)104;
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-1);
      byteArray0[6] = byte6;
      byte byte7 = (byte) (-92);
      byteArray0[7] = byte7;
      int[] intArray0 = new int[1];
      intArray0[0] = (int) byteArray0[5];
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      Byte byte8 = new Byte(byteArray0[6]);
      TSynchronizedByteIntMap tSynchronizedByteIntMap0 = new TSynchronizedByteIntMap((TByteIntMap) tByteIntHashMap0, (Object) byte8);
      byte byte9 = (byte)0;
      int int0 = tSynchronizedByteIntMap0.remove(byte9);
      assertEquals(true, tByteIntHashMap0.isEmpty());
      assertEquals(104, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = (-622);
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(int0);
      String string0 = "";
      StringTokenizer stringTokenizer0 = new StringTokenizer(string0);
      // Undeclared exception!
      try {
        stringTokenizer0.nextToken(string0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = 118;
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(int0);
      String string0 = File.pathSeparator;
      TSynchronizedByteIntMap tSynchronizedByteIntMap0 = new TSynchronizedByteIntMap((TByteIntMap) tByteIntHashMap0, (Object) string0);
      String string1 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0, string1);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: :://::?:#
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TByteIntMap tByteIntMap0 = null;
      String string0 = "end index < ";
      Object object0 = null;
      TSynchronizedByteIntMap tSynchronizedByteIntMap0 = new TSynchronizedByteIntMap(tByteIntMap0, object0);
      int int0 = 0;
      // Undeclared exception!
      try {
        tSynchronizedByteIntMap0.containsValue(int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TByteIntMap tByteIntMap0 = null;
      String string0 = " instead of ";
      RandomAccessFile randomAccessFile0 = null;
      try {
        randomAccessFile0 = new RandomAccessFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \" instead of \" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = (-1555);
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-34);
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-58);
      byteArray0[3] = byte3;
      byte byte4 = (byte)65;
      byteArray0[4] = byte4;
      byte byte5 = (byte)0;
      byteArray0[5] = byte5;
      int[] intArray0 = new int[8];
      intArray0[0] = (int) byteArray0[2];
      intArray0[1] = (int) byteArray0[4];
      intArray0[2] = (int) byteArray0[4];
      intArray0[3] = (int) byteArray0[4];
      intArray0[4] = (int) byteArray0[3];
      intArray0[5] = int0;
      intArray0[6] = (int) byte1;
      intArray0[7] = (int) byteArray0[2];
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      TSynchronizedByteIntMap tSynchronizedByteIntMap0 = new TSynchronizedByteIntMap((TByteIntMap) tByteIntHashMap0);
      TSynchronizedByteIntMap tSynchronizedByteIntMap1 = new TSynchronizedByteIntMap((TByteIntMap) tSynchronizedByteIntMap0);
      byte byte6 = (byte)0;
      TByteIntMap tByteIntMap0 = null;
      TSynchronizedByteIntMap tSynchronizedByteIntMap2 = null;
      try {
        tSynchronizedByteIntMap2 = new TSynchronizedByteIntMap(tByteIntMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          int int0 = 1251;
          byte byte0 = (byte) (-59);
          int int1 = (-1);
          float float0 = 0.0F;
          byte byte1 = (byte)0;
          TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(int1, float0, byte1, int1);
          TSynchronizedByteIntMap tSynchronizedByteIntMap0 = new TSynchronizedByteIntMap((TByteIntMap) tByteIntHashMap0);
          tSynchronizedByteIntMap0.size();
          Locale locale0 = Locale.CANADA_FRENCH;
          String string0 = locale0.getDisplayName();
          char char0 = 'D';
          locale0.getExtension(char0);
          TSynchronizedByteIntMap tSynchronizedByteIntMap1 = new TSynchronizedByteIntMap((TByteIntMap) tByteIntHashMap0, (Object) string0);
          Object object0 = null;
          tSynchronizedByteIntMap1.equals(object0);
          String string1 = ",k2OATZjH0BT;3`by";
          File file0 = new File(string1);
          file0.exists();
          file0.getCanonicalFile();
          // Undeclared exception!
          try {
            file0.canWrite();
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.io.FilePermission\" \",k2OATZjH0BT;3`by\" \"write\")
             // java.lang.Thread.getStackTrace(Thread.java:1567)
             // org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
             // java.io.File.canWrite(File.java:750)
             // sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             // sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:601)
             // org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:264)
             // org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:144)
             // org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             // org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             // org.evosuite.testcase.TestRunnable.call(TestRunnable.java:1)
             // java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
             // java.util.concurrent.FutureTask.run(FutureTask.java:166)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
             // java.lang.Thread.run(Thread.java:722)
             //
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = 1267;
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(int0, int0);
      TSynchronizedByteIntMap tSynchronizedByteIntMap0 = new TSynchronizedByteIntMap((TByteIntMap) tByteIntHashMap0);
      byte byte0 = (byte)106;
      tSynchronizedByteIntMap0.hashCode();
      tSynchronizedByteIntMap0.containsKey(byte0);
      TByteIntMap tByteIntMap0 = null;
      tSynchronizedByteIntMap0.clear();
      TByteIntHashMap tByteIntHashMap1 = null;
      try {
        tByteIntHashMap1 = new TByteIntHashMap(tByteIntMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TByteIntMap tByteIntMap0 = null;
      Locale locale0 = Locale.CANADA_FRENCH;
      String string0 = "end index > size: ";
      StringTokenizer stringTokenizer0 = new StringTokenizer(string0);
      // Undeclared exception!
      try {
        stringTokenizer0.nextToken(string0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)55;
      byteArray0[0] = byte0;
      int[] intArray0 = new int[9];
      intArray0[0] = (int) byte0;
      intArray0[1] = (int) byte0;
      intArray0[2] = (int) byteArray0[0];
      intArray0[3] = (int) byteArray0[0];
      intArray0[4] = (int) byteArray0[0];
      intArray0[5] = (int) byteArray0[0];
      intArray0[6] = (int) byte0;
      intArray0[7] = (int) byteArray0[0];
      intArray0[8] = (int) byteArray0[0];
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      TSynchronizedByteIntMap tSynchronizedByteIntMap0 = new TSynchronizedByteIntMap((TByteIntMap) tByteIntHashMap0);
      tSynchronizedByteIntMap0.size();
      TByteIntMap tByteIntMap0 = null;
      String string0 = "E9<5vhg5^_}";
      // Undeclared exception!
      try {
        URI.create(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in path at index 2: E9<5vhg5^_}
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)1;
      byteArray0[0] = byte0;
      int[] intArray0 = new int[10];
      intArray0[0] = (int) byteArray0[0];
      intArray0[1] = (int) byte0;
      int int0 = 20;
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(int0);
      String string0 = "";
      int int1 = 202;
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, int1, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://@:202?#
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)108;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-30);
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-87);
      byteArray0[3] = byte3;
      byte byte4 = (byte)100;
      byteArray0[4] = byte4;
      byte byte5 = (byte)29;
      byteArray0[5] = byte5;
      byte byte6 = (byte)0;
      byteArray0[6] = byte6;
      int[] intArray0 = new int[7];
      intArray0[0] = (int) byte1;
      intArray0[1] = (int) byteArray0[3];
      intArray0[2] = (int) byte5;
      intArray0[3] = (int) byte0;
      intArray0[4] = (int) byte6;
      intArray0[5] = (int) byte5;
      int int0 = 0;
      intArray0[6] = int0;
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      Object object0 = null;
      TSynchronizedByteIntMap tSynchronizedByteIntMap0 = new TSynchronizedByteIntMap((TByteIntMap) tByteIntHashMap0, object0);
      TSynchronizedByteIntMap tSynchronizedByteIntMap1 = new TSynchronizedByteIntMap((TByteIntMap) tSynchronizedByteIntMap0, object0);
      // Undeclared exception!
      try {
        tSynchronizedByteIntMap1.keySet();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte) (-85);
      byteArray0[0] = byte0;
      byte byte1 = (byte)7;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-61);
      byteArray0[4] = byte4;
      int[] intArray0 = new int[9];
      intArray0[0] = (int) byte3;
      int int0 = 516;
      intArray0[1] = int0;
      intArray0[2] = (int) byte3;
      intArray0[3] = (int) byte1;
      intArray0[4] = (int) byteArray0[1];
      intArray0[5] = (int) byteArray0[3];
      intArray0[6] = (int) byte4;
      intArray0[7] = (int) byte1;
      intArray0[8] = (int) byteArray0[4];
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(byteArray0, intArray0);
      TByteIntHashMap tByteIntHashMap1 = new TByteIntHashMap((TByteIntMap) tByteIntHashMap0);
      String string0 = "from > to : ";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: from > to : ://from%20%3E%20to%20:%20from%20%3E%20to%20:%20?from%20%3E%20to%20:%20#from%20%3E%20to%20:%20
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 136;
      float float0 = 1.0F;
      byte byte0 = (byte) (-67);
      int int1 = 0;
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(int0, float0, byte0, int1);
      int int2 = 0;
      int int3 = 1102;
      String string0 = Integer.toString(int2, int3);
      TSynchronizedByteIntMap tSynchronizedByteIntMap0 = new TSynchronizedByteIntMap((TByteIntMap) tByteIntHashMap0, (Object) string0);
      String string1 = tSynchronizedByteIntMap0.toString();
      assertFalse(string1.equals(string0));
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = 0;
      float float0 = 0.0F;
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(int0, float0);
      TByteIntHashMap tByteIntHashMap1 = null;
      try {
        tByteIntHashMap1 = new TByteIntHashMap((TByteIntMap) tByteIntHashMap0);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap();
      TByteIntHashMap tByteIntHashMap1 = new TByteIntHashMap((TByteIntMap) tByteIntHashMap0);
      TSynchronizedByteIntMap tSynchronizedByteIntMap0 = new TSynchronizedByteIntMap((TByteIntMap) tByteIntHashMap1);
      TByteIntProcedure tByteIntProcedure0 = null;
      boolean boolean0 = tSynchronizedByteIntMap0.retainEntries(tByteIntProcedure0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      TByteIntMap tByteIntMap0 = null;
      TSynchronizedByteIntMap tSynchronizedByteIntMap0 = null;
      try {
        tSynchronizedByteIntMap0 = new TSynchronizedByteIntMap(tByteIntMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      int int0 = 1;
      TByteIntHashMap tByteIntHashMap0 = new TByteIntHashMap(int0);
      TByteIntHashMap tByteIntHashMap1 = new TByteIntHashMap((TByteIntMap) tByteIntHashMap0);
      Locale locale0 = Locale.UK;
      String string0 = locale0.getVariant();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale1 = Locale.FRANCE;
      Locale.setDefault(locale_Category0, locale1);
      String string1 = locale0.getDisplayName();
      TSynchronizedByteIntMap tSynchronizedByteIntMap0 = new TSynchronizedByteIntMap((TByteIntMap) tByteIntHashMap0, (Object) string1);
      tByteIntHashMap1.equals((Object) string0);
      TSynchronizedByteIntMap tSynchronizedByteIntMap1 = new TSynchronizedByteIntMap((TByteIntMap) tByteIntHashMap1);
      byte[] byteArray0 = tSynchronizedByteIntMap1.keys();
      assertNotNull(byteArray0);
  }
}

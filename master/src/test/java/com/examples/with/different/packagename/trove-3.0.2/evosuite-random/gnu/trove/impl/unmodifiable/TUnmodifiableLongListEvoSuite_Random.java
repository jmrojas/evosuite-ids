/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TLongCollection;
import gnu.trove.impl.sync.TSynchronizedLongList;
import gnu.trove.impl.sync.TSynchronizedRandomAccessLongList;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessLongList;
import gnu.trove.list.TLongList;
import gnu.trove.list.array.TLongArrayList;
import gnu.trove.list.linked.TLongLinkedList;
import gnu.trove.procedure.TLongProcedure;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Locale;
import java.util.Stack;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableLongListEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TLongLinkedList tLongLinkedList0 = new TLongLinkedList();
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList((TLongList) tLongLinkedList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessLongList0.retainAll((TLongCollection) tLongLinkedList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TLongLinkedList tLongLinkedList0 = new TLongLinkedList();
      TLongProcedure tLongProcedure0 = null;
      TLongLinkedList tLongLinkedList1 = (TLongLinkedList)tLongLinkedList0.inverseGrep(tLongProcedure0);
      TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tLongLinkedList1);
      int int0 = 2;
      long[] longArray0 = new long[6];
      longArray0[0] = (long) int0;
      long long0 = (-955L);
      longArray0[1] = long0;
      longArray0[2] = (long) int0;
      longArray0[3] = (long) int0;
      longArray0[4] = (long) int0;
      longArray0[5] = (long) int0;
      tUnmodifiableLongList0.containsAll(longArray0);
      tUnmodifiableLongList0.getNoEntryValue();
      long long1 = 0L;
      // Undeclared exception!
      try {
        tUnmodifiableLongList0.replace(int0, long1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = 0;
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      TLongArrayList tLongArrayList1 = (TLongArrayList)tLongArrayList0.subList(int0, int0);
      TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tLongArrayList1);
      TLongArrayList tLongArrayList2 = (TLongArrayList)tUnmodifiableLongList0.list;
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList((TLongList) tLongArrayList2);
      Object object0 = null;
      boolean boolean0 = tUnmodifiableRandomAccessLongList0.equals(object0);
      assertEquals(false, boolean0);
      
      TLongArrayList tLongArrayList3 = new TLongArrayList(int0, int0);
      TSynchronizedRandomAccessLongList tSynchronizedRandomAccessLongList0 = new TSynchronizedRandomAccessLongList((TLongList) tLongArrayList3);
      TUnmodifiableLongList tUnmodifiableLongList1 = new TUnmodifiableLongList((TLongList) tLongArrayList3);
      int int1 = 0;
      long[] longArray0 = new long[6];
      longArray0[0] = (long) int0;
      longArray0[1] = (long) int0;
      longArray0[2] = (long) int0;
      longArray0[3] = (long) int0;
      longArray0[4] = (long) int1;
      longArray0[5] = (long) int1;
      // Undeclared exception!
      try {
        tUnmodifiableLongList1.insert(int1, longArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TLongArrayList tLongArrayList0 = new TLongArrayList();
      int int0 = 31;
      // Undeclared exception!
      try {
        tLongArrayList0.subList(int0, int0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index < 10
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TLongList tLongList0 = null;
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = null;
      try {
        tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList(tLongList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TLongList tLongList0 = null;
      TUnmodifiableLongList tUnmodifiableLongList0 = null;
      try {
        tUnmodifiableLongList0 = new TUnmodifiableLongList(tLongList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = 0;
      TLongArrayList tLongArrayList0 = new TLongArrayList(int0, int0);
      String string0 = ")uFG/.@T!'X@DQo;tB";
      Locale locale0 = Locale.forLanguageTag(string0);
      String string1 = locale0.getDisplayCountry();
      TSynchronizedRandomAccessLongList tSynchronizedRandomAccessLongList0 = new TSynchronizedRandomAccessLongList((TLongList) tLongArrayList0, (Object) string1);
      TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tSynchronizedRandomAccessLongList0);
      TUnmodifiableLongList tUnmodifiableLongList1 = new TUnmodifiableLongList((TLongList) tUnmodifiableLongList0);
      tUnmodifiableLongList1.binarySearch((long) int0);
      TLongList tLongList0 = null;
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = null;
      try {
        tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList(tLongList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      long[] longArray0 = new long[1];
      long long0 = 0L;
      longArray0[0] = long0;
      long[] longArray1 = new long[5];
      longArray1[0] = long0;
      longArray1[1] = long0;
      longArray1[2] = long0;
      longArray1[3] = long0;
      long long1 = 525L;
      longArray1[4] = long1;
      long long2 = (-517L);
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray1, long2);
      int int0 = 0;
      TLongArrayList tLongArrayList1 = (TLongArrayList)tLongArrayList0.subList(int0, int0);
      TSynchronizedRandomAccessLongList tSynchronizedRandomAccessLongList0 = new TSynchronizedRandomAccessLongList((TLongList) tLongArrayList1);
      TSynchronizedRandomAccessLongList tSynchronizedRandomAccessLongList1 = new TSynchronizedRandomAccessLongList((TLongList) tSynchronizedRandomAccessLongList0);
      int int1 = 0;
      TSynchronizedRandomAccessLongList tSynchronizedRandomAccessLongList2 = (TSynchronizedRandomAccessLongList)tSynchronizedRandomAccessLongList1.subList(int0, int1);
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList((TLongList) tSynchronizedRandomAccessLongList2);
      TSynchronizedRandomAccessLongList tSynchronizedRandomAccessLongList3 = (TSynchronizedRandomAccessLongList)tUnmodifiableRandomAccessLongList0.list;
      TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tSynchronizedRandomAccessLongList3);
      TUnmodifiableLongList tUnmodifiableLongList1 = (TUnmodifiableLongList)tUnmodifiableLongList0.subList(int1, int0);
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList1 = new TUnmodifiableRandomAccessLongList((TLongList) tUnmodifiableLongList1);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessLongList1.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = (-1947);
      long[] longArray0 = new long[3];
      longArray0[0] = (long) int0;
      longArray0[1] = (long) int0;
      TLongCollection tLongCollection0 = null;
      TLongArrayList tLongArrayList0 = null;
      try {
        tLongArrayList0 = new TLongArrayList(tLongCollection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      long[] longArray0 = new long[2];
      long long0 = (-1019L);
      longArray0[0] = long0;
      long long1 = 1278L;
      longArray0[1] = long1;
      TLongArrayList tLongArrayList0 = new TLongArrayList(longArray0);
      Stack<Stack<Object>> stack0 = new Stack<Stack<Object>>();
      TSynchronizedLongList tSynchronizedLongList0 = new TSynchronizedLongList((TLongList) tLongArrayList0, (Object) stack0);
      int int0 = 0;
      tSynchronizedLongList0.subList(int0, int0);
      String string0 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://#
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = 1976;
      TLongArrayList tLongArrayList0 = new TLongArrayList(int0);
      TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tLongArrayList0);
      long long0 = (-1L);
      // Undeclared exception!
      try {
        tUnmodifiableLongList0.fill(long0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      long[] longArray0 = new long[9];
      long long0 = (-1L);
      longArray0[0] = long0;
      long long1 = 0L;
      longArray0[1] = long1;
      long long2 = (-1595L);
      longArray0[2] = long2;
      long long3 = (-1L);
      longArray0[3] = long3;
      long long4 = 1850L;
      longArray0[4] = long4;
      long long5 = 1L;
      longArray0[5] = long5;
      long long6 = 0L;
      longArray0[6] = long6;
      long long7 = (-998L);
      longArray0[7] = long7;
      long long8 = 0L;
      longArray0[8] = long8;
      TLongArrayList tLongArrayList0 = new TLongArrayList(longArray0);
      TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tLongArrayList0);
      String string0 = tUnmodifiableLongList0.toString();
      assertEquals("{-1, 0, -1595, -1, 1850, 1, 0, -998, 0}", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      long[] longArray0 = new long[8];
      long long0 = (-1L);
      longArray0[0] = long0;
      long long1 = 1892L;
      longArray0[1] = long1;
      long long2 = (-1423L);
      longArray0[2] = long2;
      long long3 = 0L;
      longArray0[3] = long3;
      long long4 = 0L;
      longArray0[4] = long4;
      long long5 = (-557L);
      longArray0[5] = long5;
      long long6 = 0L;
      longArray0[6] = long6;
      long long7 = 1421L;
      longArray0[7] = long7;
      TLongArrayList tLongArrayList0 = new TLongArrayList(longArray0);
      TUnmodifiableLongList tUnmodifiableLongList0 = new TUnmodifiableLongList((TLongList) tLongArrayList0);
      int int0 = 0;
      long long8 = (-9223372036854775808L);
      int int1 = tUnmodifiableLongList0.lastIndexOf(int0, long8);
      assertEquals((-1), int1);
  }

  @Test
  public void test13()  throws Throwable  {
      long[] longArray0 = new long[4];
      long long0 = 1L;
      longArray0[0] = long0;
      long long1 = (-1L);
      longArray0[1] = long1;
      long long2 = 96L;
      longArray0[2] = long2;
      long long3 = 0L;
      longArray0[3] = long3;
      long long4 = (-1462L);
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0, long4);
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList((TLongList) tLongArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessLongList0.reverse();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      long long0 = 1L;
      TLongLinkedList tLongLinkedList0 = new TLongLinkedList(long0);
      int int0 = 1;
      int int1 = 1;
      // Undeclared exception!
      try {
        tLongLinkedList0.subList(int0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 1 greater than last index 0
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = (-691);
      TLongArrayList tLongArrayList0 = null;
      try {
        tLongArrayList0 = new TLongArrayList(int0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

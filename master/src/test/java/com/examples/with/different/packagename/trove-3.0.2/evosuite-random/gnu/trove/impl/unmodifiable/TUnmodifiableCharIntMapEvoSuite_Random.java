/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharIntMap;
import gnu.trove.map.TCharIntMap;
import gnu.trove.map.hash.TCharIntHashMap;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Locale;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableCharIntMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = (-1);
      char char0 = ']';
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(int0, (float) int0, char0, int0);
      TCharIntHashMap tCharIntHashMap1 = new TCharIntHashMap((TCharIntMap) tCharIntHashMap0);
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap0 = new TUnmodifiableCharIntMap((TCharIntMap) tCharIntHashMap1);
      TCharIntHashMap tCharIntHashMap2 = new TCharIntHashMap(int0);
      TCharIntHashMap tCharIntHashMap3 = new TCharIntHashMap((TCharIntMap) tCharIntHashMap2);
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap1 = new TUnmodifiableCharIntMap((TCharIntMap) tCharIntHashMap3);
      tCharIntHashMap3.tempDisableAutoCompaction();
      tCharIntHashMap3._states = tCharIntHashMap2._states;
      char char1 = 'w';
      tUnmodifiableCharIntMap1.containsKey(char1);
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap2 = new TUnmodifiableCharIntMap((TCharIntMap) tUnmodifiableCharIntMap1);
      int[] intArray0 = new int[2];
      intArray0[0] = int0;
      intArray0[1] = int0;
      char char2 = '[';
      // Undeclared exception!
      try {
        tUnmodifiableCharIntMap1.increment(char2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = (-418);
      float float0 = (-1710.0875F);
      TCharIntMap tCharIntMap0 = null;
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap0 = null;
      try {
        tUnmodifiableCharIntMap0 = new TUnmodifiableCharIntMap(tCharIntMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      char[] charArray0 = new char[9];
      char char0 = 'U';
      charArray0[0] = char0;
      char char1 = '~';
      charArray0[1] = char1;
      char char2 = 'g';
      charArray0[2] = char2;
      char char3 = 'F';
      charArray0[3] = char3;
      char char4 = '%';
      charArray0[4] = char4;
      char char5 = 'b';
      charArray0[5] = char5;
      char char6 = 'f';
      charArray0[6] = char6;
      char char7 = '*';
      charArray0[7] = char7;
      char char8 = '3';
      charArray0[8] = char8;
      int[] intArray0 = new int[7];
      intArray0[0] = (int) char0;
      intArray0[1] = (int) charArray0[8];
      intArray0[2] = (int) char7;
      int int0 = 994;
      intArray0[3] = int0;
      intArray0[4] = (int) charArray0[2];
      intArray0[5] = (int) charArray0[0];
      intArray0[6] = (int) charArray0[3];
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(charArray0, intArray0);
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap0 = new TUnmodifiableCharIntMap((TCharIntMap) tCharIntHashMap0);
      char char9 = 'J';
      int int1 = (-933);
      // Undeclared exception!
      try {
        tUnmodifiableCharIntMap0.putIfAbsent(char9, int1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = (-1);
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(int0, int0);
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap0 = new TUnmodifiableCharIntMap((TCharIntMap) tCharIntHashMap0);
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap1 = new TUnmodifiableCharIntMap((TCharIntMap) tUnmodifiableCharIntMap0);
      tUnmodifiableCharIntMap0.getNoEntryValue();
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap2 = new TUnmodifiableCharIntMap((TCharIntMap) tCharIntHashMap0);
      OutputStream outputStream0 = null;
      ObjectOutputStream objectOutputStream0 = null;
      try {
        objectOutputStream0 = new ObjectOutputStream(outputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 1346;
      char[] charArray0 = new char[8];
      char char0 = '1';
      charArray0[0] = char0;
      char char1 = 'k';
      charArray0[1] = char1;
      char char2 = 'o';
      charArray0[2] = char2;
      char char3 = 'i';
      charArray0[3] = char3;
      char char4 = 'H';
      charArray0[4] = char4;
      char char5 = 'n';
      charArray0[5] = char5;
      char char6 = 'p';
      charArray0[6] = char6;
      char char7 = '@';
      charArray0[7] = char7;
      int[] intArray0 = new int[4];
      intArray0[0] = int0;
      intArray0[1] = (int) charArray0[2];
      intArray0[2] = (int) charArray0[6];
      intArray0[3] = (int) charArray0[3];
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(charArray0, intArray0);
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap0 = new TUnmodifiableCharIntMap((TCharIntMap) tCharIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableCharIntMap0.putIfAbsent(charArray0[0], char7);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      char[] charArray0 = new char[5];
      char char0 = '/';
      charArray0[0] = char0;
      char char1 = '&';
      charArray0[1] = char1;
      char char2 = 'a';
      charArray0[2] = char2;
      char char3 = 'q';
      charArray0[3] = char3;
      char char4 = '.';
      charArray0[4] = char4;
      int[] intArray0 = new int[3];
      intArray0[0] = (int) charArray0[2];
      intArray0[1] = (int) charArray0[0];
      intArray0[2] = (int) char2;
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(charArray0, intArray0);
      TCharIntHashMap tCharIntHashMap1 = new TCharIntHashMap((TCharIntMap) tCharIntHashMap0);
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap0 = new TUnmodifiableCharIntMap((TCharIntMap) tCharIntHashMap1);
      String string0 = tUnmodifiableCharIntMap0.toString();
      assertEquals("{&=47, a=97, /=97}", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      char[] charArray0 = new char[9];
      char char0 = 'M';
      charArray0[0] = char0;
      charArray0[1] = char0;
      charArray0[2] = char0;
      charArray0[3] = char0;
      charArray0[4] = char0;
      charArray0[5] = char0;
      charArray0[6] = char0;
      charArray0[7] = char0;
      charArray0[8] = char0;
      char char1 = 'g';
      charArray0[0] = char1;
      char char2 = 'G';
      charArray0[1] = char2;
      char char3 = '8';
      charArray0[2] = char3;
      char char4 = '!';
      charArray0[3] = char4;
      char char5 = 'R';
      charArray0[4] = char5;
      char char6 = 'e';
      charArray0[5] = char6;
      char char7 = 'R';
      charArray0[6] = char7;
      char char8 = 'o';
      charArray0[7] = char8;
      char char9 = 'K';
      charArray0[8] = char9;
      int[] intArray0 = new int[4];
      intArray0[0] = (int) charArray0[8];
      intArray0[1] = (int) char7;
      intArray0[2] = (int) char9;
      intArray0[3] = (int) charArray0[0];
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(charArray0, intArray0);
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap0 = new TUnmodifiableCharIntMap((TCharIntMap) tCharIntHashMap0);
      char char10 = '&';
      // Undeclared exception!
      try {
        tUnmodifiableCharIntMap0.adjustOrPutValue(char10, charArray0[8], char4);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = (-2041);
      float float0 = (-212.99637F);
      int int1 = 1703;
      float float1 = (-1915.6304F);
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(int1, float1);
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap0 = new TUnmodifiableCharIntMap((TCharIntMap) tCharIntHashMap0);
      char char0 = 'i';
      TCharIntHashMap tCharIntHashMap1 = new TCharIntHashMap(int0, float0, char0, int0);
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap1 = new TUnmodifiableCharIntMap((TCharIntMap) tCharIntHashMap1);
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap2 = new TUnmodifiableCharIntMap((TCharIntMap) tUnmodifiableCharIntMap1);
      tUnmodifiableCharIntMap2.toString();
      TCharIntHashMap tCharIntHashMap2 = new TCharIntHashMap();
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap3 = new TUnmodifiableCharIntMap((TCharIntMap) tCharIntHashMap2);
      char char1 = 'L';
      // Undeclared exception!
      try {
        tUnmodifiableCharIntMap3.increment(char1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = 1816;
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(int0);
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap0 = new TUnmodifiableCharIntMap((TCharIntMap) tCharIntHashMap0);
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap1 = new TUnmodifiableCharIntMap((TCharIntMap) tUnmodifiableCharIntMap0);
      int int1 = tUnmodifiableCharIntMap1.getNoEntryValue();
      assertFalse(int0 == int1);
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = (-300);
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(int0);
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap0 = new TUnmodifiableCharIntMap((TCharIntMap) tCharIntHashMap0);
      char char0 = ']';
      // Undeclared exception!
      try {
        tUnmodifiableCharIntMap0.increment(char0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      char char0 = 'P';
      tCharIntHashMap0.adjustValue(char0, char0);
      char char1 = 'Q';
      int int0 = tCharIntHashMap0.get(char1);
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap0 = new TUnmodifiableCharIntMap((TCharIntMap) tCharIntHashMap0);
      char[] charArray0 = tUnmodifiableCharIntMap0.keys();
      assertNotNull(charArray0);
      
      tUnmodifiableCharIntMap0.iterator();
      tUnmodifiableCharIntMap0.getNoEntryKey();
      TCharIntHashMap tCharIntHashMap1 = new TCharIntHashMap((TCharIntMap) tCharIntHashMap0);
      tCharIntHashMap1.getAutoCompactionFactor();
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap1 = new TUnmodifiableCharIntMap((TCharIntMap) tCharIntHashMap0);
      int[] intArray0 = new int[2];
      intArray0[0] = int0;
      intArray0[1] = int0;
      int[] intArray1 = tUnmodifiableCharIntMap1.values(intArray0);
      assertNotNull(intArray1);
      
      tCharIntHashMap1.tempDisableAutoCompaction();
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap2 = new TUnmodifiableCharIntMap((TCharIntMap) tCharIntHashMap1);
      char char2 = '`';
      Locale locale0 = Locale.CHINESE;
      String string0 = locale0.getCountry();
      boolean boolean0 = tUnmodifiableCharIntMap2.equals((Object) string0);
      assertEquals(false, boolean0);
      
      char[] charArray1 = new char[5];
      charArray1[0] = char2;
      charArray1[1] = char2;
      charArray1[2] = char2;
      charArray1[3] = char1;
      charArray1[4] = char2;
      char[] charArray2 = tUnmodifiableCharIntMap1.keys(charArray1);
      assertNotNull(charArray2);
      
      tUnmodifiableCharIntMap2.keys();
      tCharIntHashMap0.setAutoCompactionFactor((float) char2);
      int int1 = 620;
      // Undeclared exception!
      try {
        tUnmodifiableCharIntMap2.adjustOrPutValue(charArray1[0], int1, intArray0[0]);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap0 = new TUnmodifiableCharIntMap((TCharIntMap) tCharIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableCharIntMap0.putAll((TCharIntMap) tCharIntHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      char[] charArray0 = new char[3];
      char char0 = '_';
      charArray0[0] = char0;
      char char1 = '#';
      charArray0[1] = char1;
      char char2 = 'A';
      charArray0[2] = char2;
      int[] intArray0 = new int[4];
      intArray0[0] = (int) char0;
      intArray0[1] = (int) char2;
      int int0 = 1787;
      intArray0[2] = int0;
      intArray0[3] = int0;
      intArray0[0] = (int) char2;
      intArray0[1] = (int) char2;
      intArray0[2] = (int) charArray0[1];
      int int1 = 150;
      intArray0[0] = (int) char1;
      intArray0[1] = (int) charArray0[0];
      intArray0[2] = (int) char2;
      int int2 = 122347;
      intArray0[3] = int2;
      float float0 = 1721.2694F;
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(int1, float0);
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap0 = new TUnmodifiableCharIntMap((TCharIntMap) tCharIntHashMap0);
      char char3 = 'P';
      int int3 = (-1);
      // Undeclared exception!
      try {
        tUnmodifiableCharIntMap0.put(char3, int3);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = (-2012);
      char char0 = 'T';
      int int1 = 0;
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(int0, (float) int0, char0, int1);
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap0 = new TUnmodifiableCharIntMap((TCharIntMap) tCharIntHashMap0);
      int int2 = 0;
      // Undeclared exception!
      try {
        tUnmodifiableCharIntMap0.adjustValue(char0, int2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 2879;
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(int0);
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap0 = new TUnmodifiableCharIntMap((TCharIntMap) tCharIntHashMap0);
      char char0 = '6';
      // Undeclared exception!
      try {
        tUnmodifiableCharIntMap0.put(char0, int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = (-1325);
      float float0 = (-713.07245F);
      TCharIntMap tCharIntMap0 = null;
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap0 = null;
      try {
        tUnmodifiableCharIntMap0 = new TUnmodifiableCharIntMap(tCharIntMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap0 = new TUnmodifiableCharIntMap((TCharIntMap) tCharIntHashMap0);
      char char0 = 'b';
      // Undeclared exception!
      try {
        tUnmodifiableCharIntMap0.adjustOrPutValue(char0, char0, char0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      int int0 = (-574);
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(int0);
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap0 = new TUnmodifiableCharIntMap((TCharIntMap) tCharIntHashMap0);
      String string0 = "";
      URI uRI0 = new URI(string0);
      String string1 = uRI0.getRawAuthority();
      boolean boolean0 = tUnmodifiableCharIntMap0.equals((Object) string1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      TCharIntMap tCharIntMap0 = null;
      TUnmodifiableCharIntMap tUnmodifiableCharIntMap0 = null;
      try {
        tUnmodifiableCharIntMap0 = new TUnmodifiableCharIntMap(tCharIntMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

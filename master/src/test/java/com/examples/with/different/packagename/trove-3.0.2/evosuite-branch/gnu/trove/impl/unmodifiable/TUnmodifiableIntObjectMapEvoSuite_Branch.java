/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TObjectFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntSet;
import gnu.trove.iterator.TIntObjectIterator;
import gnu.trove.map.TIntObjectMap;
import gnu.trove.map.hash.TIntObjectHashMap;
import gnu.trove.procedure.TIntObjectProcedure;
import gnu.trove.procedure.TIntProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableIntObjectMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableIntObjectMap;)V: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.iterator()Lgnu/trove/iterator/TIntObjectIterator;: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.<init>(Lgnu/trove/map/TIntObjectMap;)V: I17 Branch 1 IFNONNULL L53 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TIntObjectHashMap<String> tIntObjectHashMap0 = new TIntObjectHashMap<String>(562);
      TUnmodifiableIntObjectMap<String> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<String>((TIntObjectMap<String>) tIntObjectHashMap0);
      TIntObjectIterator<String> tIntObjectIterator0 = tUnmodifiableIntObjectMap0.iterator();
      assertEquals(false, tIntObjectIterator0.hasNext());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.containsKey(I)Z: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>((-1876), (-1876), (-1876));
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      boolean boolean0 = tUnmodifiableIntObjectMap0.containsKey((-1876));
      assertEquals(false, boolean0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.remove(I)Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>(850, 850);
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntObjectMap0.remove(850);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>();
      TUnmodifiableIntObjectMap<Integer> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      boolean boolean0 = tUnmodifiableIntObjectMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.putAll(Lgnu/trove/map/TIntObjectMap;)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>();
      TUnmodifiableIntObjectMap<Integer> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntObjectMap0.putAll((TIntObjectMap<? extends Integer>) tIntObjectHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>();
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntObjectMap0.transformValues((TObjectFunction<Object, Object>) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.forEachKey(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>((-1876), (-1876), (-1876));
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      boolean boolean0 = tUnmodifiableIntObjectMap0.forEachKey((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>();
      TUnmodifiableIntObjectMap<Integer> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      String string0 = tUnmodifiableIntObjectMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.retainEntries(Lgnu/trove/procedure/TIntObjectProcedure;)Z: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>((-8));
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntObjectMap0.retainEntries((TIntObjectProcedure<? super Object>) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.clear()V: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TIntObjectHashMap<String> tIntObjectHashMap0 = new TIntObjectHashMap<String>((-2147483632), (-2147483632));
      TUnmodifiableIntObjectMap<String> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<String>((TIntObjectMap<String>) tIntObjectHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntObjectMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.hashCode()I: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>(149);
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      int int0 = tUnmodifiableIntObjectMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.values()[Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>(149);
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      Object[] objectArray0 = tUnmodifiableIntObjectMap0.values();
      assertNotNull(objectArray0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TIntObjectHashMap<String> tIntObjectHashMap0 = new TIntObjectHashMap<String>((-1916), (-1916));
      TUnmodifiableIntObjectMap<String> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<String>((TIntObjectMap<String>) tIntObjectHashMap0);
      Object[] objectArray0 = new Object[6];
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
      boolean boolean0 = tUnmodifiableIntObjectMap0.forEachValue((TObjectProcedure<? super String>) toObjectArrayProceedure0);
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.size()I: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.getNoEntryKey()I: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.forEachEntry(Lgnu/trove/procedure/TIntObjectProcedure;)Z: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>(53);
      TUnmodifiableIntObjectMap<Integer> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      TIntObjectHashMap<Object> tIntObjectHashMap1 = new TIntObjectHashMap<Object>((TIntObjectMap<?>) tUnmodifiableIntObjectMap0);
      assertEquals(0, tIntObjectHashMap1.getNoEntryKey());
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.containsValue(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>(850, 850);
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      boolean boolean0 = tUnmodifiableIntObjectMap0.containsValue((Object) "");
      assertEquals(false, boolean0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.put(ILjava/lang/Object;)Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>();
      TUnmodifiableIntObjectMap<Integer> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntObjectMap0.put(7, (Integer) 7);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.keys([I)[I: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>((-1876), (-1876), (-1876));
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      int[] intArray0 = tUnmodifiableIntObjectMap0.keys(tIntObjectHashMap0._set);
      assertNotNull(intArray0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.putIfAbsent(ILjava/lang/Object;)Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TIntObjectHashMap<String> tIntObjectHashMap0 = new TIntObjectHashMap<String>(53, 53, 53);
      TUnmodifiableIntObjectMap<String> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<String>((TIntObjectMap<String>) tIntObjectHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntObjectMap0.putIfAbsent(53, "\nb.equals(a) =");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.keys()[I: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TIntObjectHashMap<String> tIntObjectHashMap0 = new TIntObjectHashMap<String>(562);
      TUnmodifiableIntObjectMap<String> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<String>((TIntObjectMap<String>) tIntObjectHashMap0);
      int[] intArray0 = tUnmodifiableIntObjectMap0.keys();
      assertNotNull(intArray0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>(0, 0);
      TUnmodifiableIntObjectMap<Integer> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      Integer[] integerArray0 = new Integer[4];
      Integer[] integerArray1 = tUnmodifiableIntObjectMap0.values(integerArray0);
      assertSame(integerArray0, integerArray1);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.get(I)Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TIntObjectHashMap<String> tIntObjectHashMap0 = new TIntObjectHashMap<String>(562);
      TUnmodifiableIntObjectMap<String> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<String>((TIntObjectMap<String>) tIntObjectHashMap0);
      String string0 = tUnmodifiableIntObjectMap0.get(0);
      assertNull(string0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>((-20), (-20), (-20));
      TUnmodifiableIntObjectMap<Integer> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      // Undeclared exception!
      try {
        tUnmodifiableIntObjectMap0.putAll((Map<? extends Integer, ? extends Integer>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.<init>(Lgnu/trove/map/TIntObjectMap;)V: I17 Branch 1 IFNONNULL L53 - false
   */

  @Test
  public void test22()  throws Throwable  {
      TUnmodifiableIntObjectMap<Integer> tUnmodifiableIntObjectMap0 = null;
      try {
        tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Integer>((TIntObjectMap<Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.keySet()Lgnu/trove/set/TIntSet;: I4 Branch 2 IFNONNULL L74 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.keySet()Lgnu/trove/set/TIntSet;: I4 Branch 2 IFNONNULL L74 - false
   */

  @Test
  public void test23()  throws Throwable  {
      TIntObjectHashMap<Integer> tIntObjectHashMap0 = new TIntObjectHashMap<Integer>((-3), (-3));
      TUnmodifiableIntObjectMap<Integer> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Integer>((TIntObjectMap<Integer>) tIntObjectHashMap0);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = (TUnmodifiableIntSet)tUnmodifiableIntObjectMap0.keySet();
      assertNotNull(tUnmodifiableIntSet0);
      
      TUnmodifiableIntSet tUnmodifiableIntSet1 = (TUnmodifiableIntSet)tUnmodifiableIntObjectMap0.keySet();
      assertSame(tUnmodifiableIntSet1, tUnmodifiableIntSet0);
  }

  //Test case number: 24
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.valueCollection()Ljava/util/Collection;: I4 Branch 3 IFNONNULL L82 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.valueCollection()Ljava/util/Collection;: I4 Branch 3 IFNONNULL L82 - false
   */

  @Test
  public void test24()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>(850, 850);
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      Collection<Object> collection0 = tUnmodifiableIntObjectMap0.valueCollection();
      assertNotNull(collection0);
      
      Collection<Object> collection1 = tUnmodifiableIntObjectMap0.valueCollection();
      assertSame(collection1, collection0);
  }

  //Test case number: 25
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L89 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L89 - true
   */

  @Test
  public void test25()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>((-8));
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      boolean boolean0 = tUnmodifiableIntObjectMap0.equals((Object) "Z7:-^B");
      assertEquals(false, boolean0);
  }

  //Test case number: 26
  /*
   * 4 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L89 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.size()I: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L89 - true
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableIntObjectMap.<init>(Lgnu/trove/map/TIntObjectMap;)V: I17 Branch 1 IFNONNULL L53 - true
   */

  @Test
  public void test26()  throws Throwable  {
      TIntObjectHashMap<Object> tIntObjectHashMap0 = new TIntObjectHashMap<Object>(850, 850);
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap0 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tIntObjectHashMap0);
      TUnmodifiableIntObjectMap<Object> tUnmodifiableIntObjectMap1 = new TUnmodifiableIntObjectMap<Object>((TIntObjectMap<Object>) tUnmodifiableIntObjectMap0);
      boolean boolean0 = tUnmodifiableIntObjectMap0.equals((Object) tUnmodifiableIntObjectMap1);
      assertEquals(true, boolean0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TShortFunction;
import gnu.trove.map.TShortShortMap;
import gnu.trove.map.hash.TShortShortHashMap;
import gnu.trove.procedure.TShortProcedure;
import gnu.trove.procedure.TShortShortProcedure;
import gnu.trove.set.TShortSet;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TShortShortHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.containsKey(S)Z: root-Branch
   * 2 gnu.trove.map.hash.TShortShortHashMap.<init>()V: root-Branch
   * 3 gnu.trove.map.hash.TShortShortHashMap.setUp(I)I: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      tShortShortHashMap0.containsKey((short)171);
      assertEquals(23, tShortShortHashMap0.capacity());
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.increment(S)Z: root-Branch
   * 2 gnu.trove.map.hash.TShortShortHashMap.adjustValue(SS)Z: I9 Branch 71 IFGE L477 - false
   * 3 gnu.trove.map.hash.TShortShortHashMap.<init>(IFSS)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(0, (float) 0, (short)1745, (short)1745);
      boolean boolean0 = tShortShortHashMap0.increment((short) (-36));
      assertEquals(false, boolean0);
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.keySet()Lgnu/trove/set/TShortSet;: root-Branch
   * 2 gnu.trove.map.hash.TShortShortHashMap$TKeyView.<init>(Lgnu/trove/map/hash/TShortShortHashMap;)V: root-Branch
   * 3 gnu.trove.map.hash.TShortShortHashMap.<init>(IF)V: root-Branch
   */

//   @Test
//   public void test2()  throws Throwable  {
//       TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap((-344), (-344));
//       TShortSet tShortSet0 = tShortShortHashMap0.keySet();
//       assertEquals(0, tShortSet0.getNoEntryValue());
//   }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortShortHashMap.clear()V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      tShortShortHashMap0.clear();
      assertEquals(23, tShortShortHashMap0.capacity());
      assertEquals("{}", tShortShortHashMap0.toString());
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortShortHashMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      boolean boolean0 = tShortShortHashMap0.forEachKey((TShortProcedure) null);
      assertEquals(23, tShortShortHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.valueCollection()Lgnu/trove/TShortCollection;: root-Branch
   * 2 gnu.trove.map.hash.TShortShortHashMap$TValueView.<init>(Lgnu/trove/map/hash/TShortShortHashMap;)V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      tShortShortHashMap0.valueCollection();
      assertEquals(23, tShortShortHashMap0.capacity());
  }

  //Test case number: 6
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.removeAt(I)V: root-Branch
   * 2 gnu.trove.map.hash.TShortShortHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 3 gnu.trove.map.hash.TShortShortHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 4 gnu.trove.map.hash.TShortShortHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 5 gnu.trove.map.hash.TShortShortHashMap.putIfAbsent(SS)S: I9 Branch 39 IFGE L205 - true
   * 6 gnu.trove.map.hash.TShortShortHashMap.remove(S)S: I14 Branch 46 IFLT L276 - false
   * 7 gnu.trove.map.hash.TShortShortHashMap.<init>(I)V: root-Branch
   * 8 gnu.trove.map.hash.TShortShortHashMap.doPut(SSI)S: I12 Branch 40 IFGE L214 - true
   * 9 gnu.trove.map.hash.TShortShortHashMap.doPut(SSI)S: I41 Branch 41 IFEQ L221 - false
   */

  @Test
  public void test6()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(0);
      tShortShortHashMap0.putIfAbsent((short)866, (short)866);
      assertEquals("{866=866}", tShortShortHashMap0.toString());
      
      short short0 = tShortShortHashMap0.remove((short)866);
      assertEquals((short)866, short0);
  }

  //Test case number: 7
  /*
   * 15 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap$TShortShortHashIterator.value()S: root-Branch
   * 2 gnu.trove.map.hash.TShortShortHashMap$TShortShortHashIterator.key()S: root-Branch
   * 3 gnu.trove.map.hash.TShortShortHashMap$TShortShortHashIterator.advance()V: root-Branch
   * 4 gnu.trove.map.hash.TShortShortHashMap.putAll(Lgnu/trove/map/TShortShortMap;)V: I15 Branch 43 IFEQ L243 - false
   * 5 gnu.trove.map.hash.TShortShortHashMap.iterator()Lgnu/trove/iterator/TShortShortIterator;: root-Branch
   * 6 gnu.trove.map.hash.TShortShortHashMap.putAll(Lgnu/trove/map/TShortShortMap;)V: I15 Branch 43 IFEQ L243 - true
   * 7 gnu.trove.map.hash.TShortShortHashMap.<init>(Lgnu/trove/map/TShortShortMap;)V: I38 Branch 35 IFEQ L139 - true
   * 8 gnu.trove.map.hash.TShortShortHashMap.<init>(Lgnu/trove/map/TShortShortMap;)V: I50 Branch 36 IFEQ L143 - true
   * 9 gnu.trove.map.hash.TShortShortHashMap$TShortShortHashIterator.<init>(Lgnu/trove/map/hash/TShortShortHashMap;Lgnu/trove/map/hash/TShortShortHashMap;)V: root-Branch
   * 10 gnu.trove.map.hash.TShortShortHashMap.put(SS)S: root-Branch
   * 11 gnu.trove.map.hash.TShortShortHashMap.doPut(SSI)S: I12 Branch 40 IFGE L214 - false
   * 12 gnu.trove.map.hash.TShortShortHashMap.doPut(SSI)S: I41 Branch 41 IFEQ L221 - true
   * 13 gnu.trove.map.hash.TShortShortHashMap.<init>([S[S)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 14 gnu.trove.map.hash.TShortShortHashMap.<init>([S[S)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 15 gnu.trove.map.hash.TShortShortHashMap.<init>(Lgnu/trove/map/TShortShortMap;)V: I10 Branch 34 IFEQ L133 - false
   */

  @Test
  public void test7()  throws Throwable  {
      short[] shortArray0 = new short[4];
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(shortArray0, shortArray0);
      TShortShortHashMap tShortShortHashMap1 = new TShortShortHashMap((TShortShortMap) tShortShortHashMap0);
      assertEquals(23, tShortShortHashMap1.capacity());
      assertEquals(11, tShortShortHashMap0.capacity());
      assertEquals(1, tShortShortHashMap0.size());
      assertEquals("{0=0}", tShortShortHashMap1.toString());
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.<init>(Lgnu/trove/map/TShortShortMap;)V: I38 Branch 35 IFEQ L139 - false
   * 2 gnu.trove.map.hash.TShortShortHashMap.<init>(Lgnu/trove/map/TShortShortMap;)V: I50 Branch 36 IFEQ L143 - false
   * 3 gnu.trove.map.hash.TShortShortHashMap.<init>(Lgnu/trove/map/TShortShortMap;)V: I10 Branch 34 IFEQ L133 - false
   */

  @Test
  public void test8()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(0, (float) 0, (short) (-992), (short) (-1403));
      TShortShortHashMap tShortShortHashMap1 = null;
      try {
        tShortShortHashMap1 = new TShortShortHashMap((TShortShortMap) tShortShortHashMap0);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortShortHashMap.putIfAbsent(SS)S: I9 Branch 39 IFGE L205 - false
   */

  @Test
  public void test9()  throws Throwable  {
      short[] shortArray0 = new short[9];
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(shortArray0, shortArray0);
      short short0 = tShortShortHashMap0.putIfAbsent((short)0, (short)0);
      assertEquals((short)0, short0);
      assertEquals(1, tShortShortHashMap0.size());
      assertEquals(23, tShortShortHashMap0.capacity());
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - false
   * 2 gnu.trove.map.hash.TShortShortHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - true
   */

  @Test
  public void test10()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(227, 227);
      HashMap<Short, Short> hashMap0 = new HashMap<Short, Short>();
      hashMap0.put((Short) (short) (-813), (Short) (short) (-21621));
      tShortShortHashMap0.putAll((Map<? extends Short, ? extends Short>) hashMap0);
      assertEquals(false, tShortShortHashMap0.isEmpty());
      assertEquals("{-813=-21621}", tShortShortHashMap0.toString());
  }

  //Test case number: 11
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.get(S)S: I9 Branch 44 IFGE L253 - true
   * 2 gnu.trove.map.hash.TShortShortHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 3 gnu.trove.map.hash.TShortShortHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 4 gnu.trove.map.hash.TShortShortHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 5 gnu.trove.map.hash.TShortShortHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 6 gnu.trove.map.hash.TShortShortHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 7 gnu.trove.map.hash.TShortShortHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 8 gnu.trove.map.hash.TShortShortHashMap.equals(Ljava/lang/Object;)Z: I84 Branch 78 IF_ICMPEQ L1200 - true
   */

  @Test
  public void test11()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      tShortShortHashMap0.put((short)0, (short)1468);
      boolean boolean0 = tShortShortHashMap0.equals((Object) tShortShortHashMap0);
      assertEquals(1, tShortShortHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 12
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.get(S)S: I9 Branch 44 IFGE L253 - false
   * 2 gnu.trove.map.hash.TShortShortHashMap.equals(Ljava/lang/Object;)Z: I84 Branch 78 IF_ICMPEQ L1200 - false
   * 3 gnu.trove.map.hash.TShortShortHashMap.equals(Ljava/lang/Object;)Z: I87 Branch 79 IF_ICMPEQ L1200 - false
   * 4 gnu.trove.map.hash.TShortShortHashMap.equals(Ljava/lang/Object;)Z: I90 Branch 80 IF_ICMPEQ L1200 - true
   * 5 gnu.trove.map.hash.TShortShortHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   */

  @Test
  public void test12()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      TShortShortHashMap tShortShortHashMap1 = new TShortShortHashMap();
      tShortShortHashMap1.put((short)1451, (short)1451);
      tShortShortHashMap1._set = tShortShortHashMap0._set;
      boolean boolean0 = tShortShortHashMap1.equals((Object) tShortShortHashMap1);
      assertEquals(1, tShortShortHashMap1.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortShortHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - true
   */

  @Test
  public void test13()  throws Throwable  {
      short[] shortArray0 = new short[2];
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(shortArray0, shortArray0);
      boolean boolean0 = tShortShortHashMap0.isEmpty();
      assertEquals(1, tShortShortHashMap0.size());
      assertEquals("{0=0}", tShortShortHashMap0.toString());
      assertEquals(5, tShortShortHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortShortHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - false
   */

  @Test
  public void test14()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      boolean boolean0 = tShortShortHashMap0.isEmpty();
      assertEquals(true, boolean0);
      assertEquals(23, tShortShortHashMap0.capacity());
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortShortHashMap.remove(S)S: I14 Branch 46 IFLT L276 - true
   */

  @Test
  public void test15()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(0);
      short short0 = tShortShortHashMap0.remove((short)1);
      assertEquals((short)0, short0);
      assertEquals(true, tShortShortHashMap0.isEmpty());
  }

  //Test case number: 16
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.keys()[S: I34 Branch 48 IF_ICMPNE L304 - false
   * 2 gnu.trove.map.hash.TShortShortHashMap.adjustOrPutValue(SSS)S: I9 Branch 72 IFGE L491 - true
   * 3 gnu.trove.map.hash.TShortShortHashMap.adjustOrPutValue(SSS)S: I59 Branch 73 IFEQ L502 - false
   * 4 gnu.trove.map.hash.TShortShortHashMap.keys()[S: I27 Branch 47 IFLE L303 - true
   * 5 gnu.trove.map.hash.TShortShortHashMap.keys()[S: I27 Branch 47 IFLE L303 - false
   * 6 gnu.trove.map.hash.TShortShortHashMap.keys()[S: I34 Branch 48 IF_ICMPNE L304 - true
   */

  @Test
  public void test16()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      tShortShortHashMap0.adjustOrPutValue((short) (-351), (short) (-351), (short) (-351));
      tShortShortHashMap0.keys();
      assertEquals(1, tShortShortHashMap0.size());
      assertEquals("{-351=-351}", tShortShortHashMap0.toString());
  }

  //Test case number: 17
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.keys([S)[S: I10 Branch 49 IF_ICMPGE L315 - true
   * 2 gnu.trove.map.hash.TShortShortHashMap.keys([S)[S: I37 Branch 50 IFLE L322 - true
   * 3 gnu.trove.map.hash.TShortShortHashMap.keys([S)[S: I37 Branch 50 IFLE L322 - false
   * 4 gnu.trove.map.hash.TShortShortHashMap.keys([S)[S: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test17()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(0, (float) 0, (short)1745, (short)1745);
      short[] shortArray0 = tShortShortHashMap0.keys(tShortShortHashMap0._set);
      assertNotNull(shortArray0);
  }

  //Test case number: 18
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.keys([S)[S: I10 Branch 49 IF_ICMPGE L315 - false
   * 2 gnu.trove.map.hash.TShortShortHashMap.keys([S)[S: I44 Branch 51 IF_ICMPNE L323 - false
   * 3 gnu.trove.map.hash.TShortShortHashMap.keys([S)[S: I37 Branch 50 IFLE L322 - true
   * 4 gnu.trove.map.hash.TShortShortHashMap.keys([S)[S: I37 Branch 50 IFLE L322 - false
   * 5 gnu.trove.map.hash.TShortShortHashMap.keys([S)[S: I44 Branch 51 IF_ICMPNE L323 - true
   * 6 gnu.trove.map.hash.TShortShortHashMap.keys()[S: I27 Branch 47 IFLE L303 - true
   * 7 gnu.trove.map.hash.TShortShortHashMap.keys()[S: I27 Branch 47 IFLE L303 - false
   * 8 gnu.trove.map.hash.TShortShortHashMap.keys()[S: I34 Branch 48 IF_ICMPNE L304 - true
   */

  @Test
  public void test18()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      short[] shortArray0 = tShortShortHashMap0.keys();
      tShortShortHashMap0.putIfAbsent((short)526, (short) (-10));
      tShortShortHashMap0.keys(shortArray0);
      assertEquals(false, tShortShortHashMap0.isEmpty());
      assertEquals("{526=-10}", tShortShortHashMap0.toString());
  }

  //Test case number: 19
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.values()[S: I27 Branch 52 IFLE L343 - true
   * 2 gnu.trove.map.hash.TShortShortHashMap.values()[S: I27 Branch 52 IFLE L343 - false
   * 3 gnu.trove.map.hash.TShortShortHashMap.values()[S: I34 Branch 53 IF_ICMPNE L344 - true
   * 4 gnu.trove.map.hash.TShortShortHashMap.values()[S: I34 Branch 53 IF_ICMPNE L344 - false
   */

  @Test
  public void test19()  throws Throwable  {
      short[] shortArray0 = new short[2];
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(shortArray0, shortArray0);
      short[] shortArray1 = tShortShortHashMap0.values();
      assertEquals(1, tShortShortHashMap0.size());
      assertEquals("{0=0}", tShortShortHashMap0.toString());
      assertNotNull(shortArray1);
      assertEquals(5, tShortShortHashMap0.capacity());
  }

  //Test case number: 20
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.values([S)[S: I10 Branch 54 IF_ICMPGE L355 - true
   * 2 gnu.trove.map.hash.TShortShortHashMap.values([S)[S: I37 Branch 55 IFLE L362 - true
   * 3 gnu.trove.map.hash.TShortShortHashMap.values([S)[S: I37 Branch 55 IFLE L362 - false
   * 4 gnu.trove.map.hash.TShortShortHashMap.values([S)[S: I44 Branch 56 IF_ICMPNE L363 - true
   */

  @Test
  public void test20()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(0, (float) 0, (short)1745, (short)1745);
      short[] shortArray0 = tShortShortHashMap0.values(tShortShortHashMap0._set);
      assertNotNull(shortArray0);
  }

  //Test case number: 21
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.values([S)[S: I10 Branch 54 IF_ICMPGE L355 - false
   * 2 gnu.trove.map.hash.TShortShortHashMap.values([S)[S: I44 Branch 56 IF_ICMPNE L363 - false
   * 3 gnu.trove.map.hash.TShortShortHashMap.values([S)[S: I37 Branch 55 IFLE L362 - true
   * 4 gnu.trove.map.hash.TShortShortHashMap.values([S)[S: I37 Branch 55 IFLE L362 - false
   * 5 gnu.trove.map.hash.TShortShortHashMap.values([S)[S: I44 Branch 56 IF_ICMPNE L363 - true
   */

  @Test
  public void test21()  throws Throwable  {
      short[] shortArray0 = new short[9];
      shortArray0[0] = (short)1526;
      shortArray0[6] = (short)679;
      shortArray0[4] = (short) (-2015);
      shortArray0[5] = (short) (-700);
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(shortArray0, shortArray0);
      short[] shortArray1 = new short[4];
      short[] shortArray2 = tShortShortHashMap0.values(shortArray1);
      assertEquals(5, tShortShortHashMap0.size());
      assertEquals("{-700=-700, -2015=-2015, 679=679, 1526=1526, 0=0}", tShortShortHashMap0.toString());
      assertNotNull(shortArray2);
  }

  //Test case number: 22
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.containsValue(S)Z: I25 Branch 58 IF_ICMPNE L377 - false
   * 2 gnu.trove.map.hash.TShortShortHashMap.containsValue(S)Z: I30 Branch 59 IF_ICMPNE L377 - true
   * 3 gnu.trove.map.hash.TShortShortHashMap.containsValue(S)Z: I18 Branch 57 IFLE L376 - true
   * 4 gnu.trove.map.hash.TShortShortHashMap.containsValue(S)Z: I18 Branch 57 IFLE L376 - false
   * 5 gnu.trove.map.hash.TShortShortHashMap.containsValue(S)Z: I25 Branch 58 IF_ICMPNE L377 - true
   */

  @Test
  public void test22()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      tShortShortHashMap0.put((short)1451, (short)1451);
      boolean boolean0 = tShortShortHashMap0.containsValue((short)171);
      assertEquals(false, tShortShortHashMap0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 23
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.containsValue(S)Z: I30 Branch 59 IF_ICMPNE L377 - false
   * 2 gnu.trove.map.hash.TShortShortHashMap.containsValue(S)Z: I18 Branch 57 IFLE L376 - false
   * 3 gnu.trove.map.hash.TShortShortHashMap.containsValue(S)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 4 gnu.trove.map.hash.TShortShortHashMap.containsValue(S)Z: I25 Branch 58 IF_ICMPNE L377 - false
   */

  @Test
  public void test23()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      tShortShortHashMap0.adjustOrPutValue((short) (-531), (short)0, (short) (-1));
      boolean boolean0 = tShortShortHashMap0.containsValue((short) (-1));
      assertEquals("{-531=-1}", tShortShortHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I18 Branch 60 IFLE L407 - true
   * 2 gnu.trove.map.hash.TShortShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TShortShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   * 4 gnu.trove.map.hash.TShortShortHashMap.<init>(IFSS)V: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(0, (float) 0, (short)1745, (short)1745);
      boolean boolean0 = tShortShortHashMap0.forEachValue((TShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 25
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - false
   * 2 gnu.trove.map.hash.TShortShortHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 3 gnu.trove.map.hash.TShortShortHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 4 gnu.trove.map.hash.TShortShortHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 5 gnu.trove.map.hash.TShortShortHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 6 gnu.trove.map.hash.TShortShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 7 gnu.trove.map.hash.TShortShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test25()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(0, 0);
      tShortShortHashMap0.putIfAbsent((short)1766, (short)1766);
      // Undeclared exception!
      try {
        tShortShortHashMap0.forEachValue((TShortProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.transformValues(Lgnu/trove/function/TShortFunction;)V: I18 Branch 66 IFLE L434 - true
   * 2 gnu.trove.map.hash.TShortShortHashMap.transformValues(Lgnu/trove/function/TShortFunction;)V: I18 Branch 66 IFLE L434 - false
   * 3 gnu.trove.map.hash.TShortShortHashMap.transformValues(Lgnu/trove/function/TShortFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test26()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(0);
      tShortShortHashMap0.transformValues((TShortFunction) null);
      assertEquals(0, tShortShortHashMap0.size());
  }

  //Test case number: 27
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.transformValues(Lgnu/trove/function/TShortFunction;)V: I25 Branch 67 IF_ICMPNE L435 - false
   * 2 gnu.trove.map.hash.TShortShortHashMap.<init>(IF)V: root-Branch
   * 3 gnu.trove.map.hash.TShortShortHashMap.transformValues(Lgnu/trove/function/TShortFunction;)V: I18 Branch 66 IFLE L434 - false
   * 4 gnu.trove.map.hash.TShortShortHashMap.transformValues(Lgnu/trove/function/TShortFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test27()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap((-344), (-344));
      TShortShortHashMap tShortShortHashMap1 = new TShortShortHashMap(tShortShortHashMap0._set, tShortShortHashMap0._set);
      // Undeclared exception!
      try {
        tShortShortHashMap1.transformValues((TShortFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.retainEntries(Lgnu/trove/procedure/TShortShortProcedure;)Z: I31 Branch 68 IFLE L453 - true
   * 2 gnu.trove.map.hash.TShortShortHashMap.retainEntries(Lgnu/trove/procedure/TShortShortProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TShortShortHashMap.retainEntries(Lgnu/trove/procedure/TShortShortProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test28()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(1);
      boolean boolean0 = tShortShortHashMap0.retainEntries((TShortShortProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 29
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.retainEntries(Lgnu/trove/procedure/TShortShortProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - false
   * 2 gnu.trove.map.hash.TShortShortHashMap.retainEntries(Lgnu/trove/procedure/TShortShortProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TShortShortHashMap.retainEntries(Lgnu/trove/procedure/TShortShortProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test29()  throws Throwable  {
      short[] shortArray0 = new short[10];
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(shortArray0, shortArray0);
      // Undeclared exception!
      try {
        tShortShortHashMap0.retainEntries((TShortShortProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 30
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortShortHashMap.adjustValue(SS)Z: I9 Branch 71 IFGE L477 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      tShortShortHashMap0.adjustOrPutValue((short) (-351), (short) (-351), (short) (-351));
      boolean boolean0 = tShortShortHashMap0.adjustValue((short) (-351), (short)1206);
      assertEquals(false, tShortShortHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 31
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.adjustOrPutValue(SSS)S: I9 Branch 72 IFGE L491 - false
   * 2 gnu.trove.map.hash.TShortShortHashMap.adjustOrPutValue(SSS)S: I59 Branch 73 IFEQ L502 - true
   */

  @Test
  public void test31()  throws Throwable  {
      short[] shortArray0 = new short[4];
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(shortArray0, shortArray0);
      short short0 = tShortShortHashMap0.adjustOrPutValue((short)0, (short)0, (short)0);
      assertEquals((short)0, short0);
      assertEquals(1, tShortShortHashMap0.size());
      assertEquals(11, tShortShortHashMap0.capacity());
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TShortShortHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - false
   */

  @Test
  public void test32()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      boolean boolean0 = tShortShortHashMap0.equals((Object) "");
      assertEquals(false, boolean0);
      assertEquals(23, tShortShortHashMap0.capacity());
  }

  //Test case number: 33
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - false
   * 2 gnu.trove.map.hash.TShortShortHashMap.<init>(I)V: root-Branch
   */

  @Test
  public void test33()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(0);
      TShortShortHashMap tShortShortHashMap1 = new TShortShortHashMap(tShortShortHashMap0._set, tShortShortHashMap0._set);
      boolean boolean0 = tShortShortHashMap0.equals((Object) tShortShortHashMap1);
      assertFalse(tShortShortHashMap1.equals(tShortShortHashMap0));
      assertEquals(false, boolean0);
      assertEquals(1, tShortShortHashMap1.size());
      assertEquals(7, tShortShortHashMap1.capacity());
      assertEquals("{0=0}", tShortShortHashMap1.toString());
  }

  //Test case number: 34
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.equals(Ljava/lang/Object;)Z: I90 Branch 80 IF_ICMPEQ L1200 - false
   * 2 gnu.trove.map.hash.TShortShortHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 3 gnu.trove.map.hash.TShortShortHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 4 gnu.trove.map.hash.TShortShortHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 5 gnu.trove.map.hash.TShortShortHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 6 gnu.trove.map.hash.TShortShortHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 7 gnu.trove.map.hash.TShortShortHashMap.equals(Ljava/lang/Object;)Z: I84 Branch 78 IF_ICMPEQ L1200 - false
   * 8 gnu.trove.map.hash.TShortShortHashMap.equals(Ljava/lang/Object;)Z: I87 Branch 79 IF_ICMPEQ L1200 - false
   * 9 gnu.trove.map.hash.TShortShortHashMap.get(S)S: I9 Branch 44 IFGE L253 - true
   */

  @Test
  public void test34()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      TShortShortHashMap tShortShortHashMap1 = new TShortShortHashMap();
      tShortShortHashMap1.put((short)0, (short)1468);
      tShortShortHashMap1.adjustOrPutValue((short) (-531), (short)0, (short) (-1));
      tShortShortHashMap1._set = tShortShortHashMap0._set;
      boolean boolean0 = tShortShortHashMap1.equals((Object) tShortShortHashMap1);
      assertEquals(2, tShortShortHashMap1.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 35
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - false
   * 2 gnu.trove.map.hash.TShortShortHashMap.adjustOrPutValue(SSS)S: I9 Branch 72 IFGE L491 - true
   * 3 gnu.trove.map.hash.TShortShortHashMap.adjustOrPutValue(SSS)S: I59 Branch 73 IFEQ L502 - false
   * 4 gnu.trove.map.hash.TShortShortHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 5 gnu.trove.map.hash.TShortShortHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 6 gnu.trove.map.hash.TShortShortHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   */

  @Test
  public void test35()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      tShortShortHashMap0.adjustOrPutValue((short) (-351), (short) (-351), (short) (-351));
      int int0 = tShortShortHashMap0.hashCode();
      assertEquals(1, tShortShortHashMap0.size());
      assertEquals(0, int0);
  }

  //Test case number: 36
  /*
   * 14 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap$1.execute(SS)Z: I4 Branch 115 IFEQ L1233 - true
   * 2 gnu.trove.map.hash.TShortShortHashMap.put(SS)S: root-Branch
   * 3 gnu.trove.map.hash.TShortShortHashMap.toString()Ljava/lang/String;: root-Branch
   * 4 gnu.trove.map.hash.TShortShortHashMap.doPut(SSI)S: I12 Branch 40 IFGE L214 - false
   * 5 gnu.trove.map.hash.TShortShortHashMap.doPut(SSI)S: I41 Branch 41 IFEQ L221 - true
   * 6 gnu.trove.map.hash.TShortShortHashMap.<init>([S[S)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 7 gnu.trove.map.hash.TShortShortHashMap.<init>([S[S)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 8 gnu.trove.map.hash.TShortShortHashMap.forEachEntry(Lgnu/trove/procedure/TShortShortProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 9 gnu.trove.map.hash.TShortShortHashMap.forEachEntry(Lgnu/trove/procedure/TShortShortProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 10 gnu.trove.map.hash.TShortShortHashMap.forEachEntry(Lgnu/trove/procedure/TShortShortProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 11 gnu.trove.map.hash.TShortShortHashMap.forEachEntry(Lgnu/trove/procedure/TShortShortProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 12 gnu.trove.map.hash.TShortShortHashMap.forEachEntry(Lgnu/trove/procedure/TShortShortProcedure;)Z: I39 Branch 65 IFNE L422 - true
   * 13 gnu.trove.map.hash.TShortShortHashMap$1.<init>(Lgnu/trove/map/hash/TShortShortHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 14 gnu.trove.map.hash.TShortShortHashMap$1.execute(SS)Z: I4 Branch 115 IFEQ L1233 - false
   */

  @Test
  public void test36()  throws Throwable  {
      short[] shortArray0 = new short[4];
      shortArray0[3] = (short)1907;
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap(shortArray0, shortArray0);
      String string0 = tShortShortHashMap0.toString();
      assertNotNull(string0);
      assertEquals(2, tShortShortHashMap0.size());
      assertEquals(11, tShortShortHashMap0.capacity());
      assertEquals("{1907=1907, 0=0}", string0);
  }

  //Test case number: 37
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TShortShortHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - false
   * 2 gnu.trove.map.hash.TShortShortHashMap.<init>()V: root-Branch
   * 3 gnu.trove.map.hash.TShortShortHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.hash.TShortShortHashMap.doPut(SSI)S: I12 Branch 40 IFGE L214 - true
   * 5 gnu.trove.map.hash.TShortShortHashMap.doPut(SSI)S: I41 Branch 41 IFEQ L221 - false
   * 6 gnu.trove.map.hash.TShortShortHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - true
   * 7 gnu.trove.map.hash.TShortShortHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - false
   * 8 gnu.trove.map.hash.TShortShortHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - true
   * 9 gnu.trove.map.hash.TShortShortHashMap.putIfAbsent(SS)S: I9 Branch 39 IFGE L205 - true
   */

  @Test
  public void test37()  throws Throwable  {
      TShortShortHashMap tShortShortHashMap0 = new TShortShortHashMap();
      tShortShortHashMap0.putIfAbsent((short)1526, (short)1526);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((int) (short)1526);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tShortShortHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(1, tShortShortHashMap0.size());
      assertEquals("{1526=1526}", tShortShortHashMap0.toString());
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TFloatCollection;
import gnu.trove.function.TFloatFunction;
import gnu.trove.impl.sync.TSynchronizedRandomAccessFloatList;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessFloatList;
import gnu.trove.list.TFloatList;
import gnu.trove.list.array.TFloatArrayList;
import gnu.trove.list.linked.TFloatLinkedList;
import gnu.trove.procedure.TFloatProcedure;
import gnu.trove.set.hash.TFloatHashSet;
import java.util.Random;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableFloatListEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.fill(IIF)V: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.<init>(Lgnu/trove/list/TFloatList;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatList0.fill((-1), (-1), (-1));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.add([F)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatLinkedList0);
      float[] floatArray0 = new float[1];
      // Undeclared exception!
      try {
        tUnmodifiableFloatList0.add(floatArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.set(I[F)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      float[] floatArray0 = new float[7];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatList0.set((-10), floatArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.insert(I[F)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      float[] floatArray0 = new float[5];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tSynchronizedRandomAccessFloatList0);
      float[] floatArray1 = tFloatArrayList0.toArray(floatArray0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.insert(0, floatArray1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.lastIndexOf(IF)I: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList((-813.9617F));
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatLinkedList0);
      int int0 = tUnmodifiableFloatList0.lastIndexOf((-1), (-813.9617F));
      assertEquals((-1), int0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.forEachDescending(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      float[] floatArray0 = new float[14];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, 820.56976F);
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatList0.forEachDescending((TFloatProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.reverse(II)V: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      float[] floatArray0 = new float[4];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.reverse((-1884), (-1884));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.add([FII)V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      float[] floatArray0 = new float[8];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatList0.add(floatArray0, 2036, 2036);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.fill(F)V: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      float[] floatArray0 = new float[1];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.fill(18.647987F);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.binarySearch(FII)I: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList0);
      int int0 = tUnmodifiableFloatList0.binarySearch(0.0F, 0, 0);
      assertEquals((-1), int0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.sort(II)V: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatLinkedList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.sort(1899, 1899);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.subList(II)Lgnu/trove/list/TFloatList;: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList0);
      TUnmodifiableFloatList tUnmodifiableFloatList1 = (TUnmodifiableFloatList)tUnmodifiableFloatList0.subList(0, 0);
      assertNotNull(tUnmodifiableFloatList1);
      assertEquals(true, tUnmodifiableFloatList1.isEmpty());
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.grep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList0);
      TFloatArrayList tFloatArrayList1 = (TFloatArrayList)tUnmodifiableFloatList0.grep((TFloatProcedure) null);
      assertTrue(tFloatArrayList0.equals(tFloatArrayList1));
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.max()F: root-Branch
   */

//   @Test
//   public void test13()  throws Throwable  {
//       float[] floatArray0 = new float[4];
//       TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
//       TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
//       float float0 = tUnmodifiableRandomAccessFloatList0.max();
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.toArray([FIII)[F: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet();
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList((TFloatCollection) tFloatHashSet0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.toArray(tFloatHashSet0._set, 172, 172, 172);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 172
         //
      }
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.indexOf(F)I: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      int int0 = tUnmodifiableRandomAccessFloatList0.indexOf((float) 0);
      assertEquals((-1), int0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.set(IF)F: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(1275);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.set(0, 1275);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 17
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.insert(I[FII)V: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.toArray(II)[F: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      float[] floatArray0 = tUnmodifiableRandomAccessFloatList0.toArray(0, 0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.insert((-1), floatArray0, 0, 0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.remove(II)V: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList((-813.9617F));
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatLinkedList0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatList0.remove((-1), (-1));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.shuffle(Ljava/util/Random;)V: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(15);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      Random random0 = new Random();
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.shuffle(random0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.reverse()V: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      float[] floatArray0 = new float[5];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.reverse();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.removeAt(I)F: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(9.440311F);
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatLinkedList0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatList0.removeAt((-824));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.binarySearch(F)I: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList((-813.9617F));
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatLinkedList0);
      int int0 = tUnmodifiableFloatList0.binarySearch((-813.9617F));
      assertEquals((-1), int0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.toArray([FII)[F: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      float[] floatArray0 = new float[8];
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.toArray(floatArray0, 60, 60);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 60
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.insert(IF)V: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(1757, 1757);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.insert(1757, 1757);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.replace(IF)F: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      float[] floatArray0 = new float[4];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.replace((-10), 0.0F);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.get(I)F: root-Branch
   */

//   @Test
//   public void test26()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
//       TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatLinkedList0);
//       float float0 = tUnmodifiableRandomAccessFloatList0.get((-27));
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.min()F: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList();
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatLinkedList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.min();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.indexOf(IF)I: root-Branch
   */

  @Test
  public void test28()  throws Throwable  {
      float[] floatArray0 = new float[9];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0, (-1220.6925F));
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.indexOf((-698), (-1220.6925F));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -698
         //
      }
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.transformValues(Lgnu/trove/function/TFloatFunction;)V: root-Branch
   */

  @Test
  public void test29()  throws Throwable  {
      float[] floatArray0 = new float[4];
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.transformValues((TFloatFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 30
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.hashCode()I: root-Branch
   */

  @Test
  public void test30()  throws Throwable  {
      float[] floatArray0 = new float[5];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList((TFloatList) tFloatArrayList0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tSynchronizedRandomAccessFloatList0);
      int int0 = tUnmodifiableRandomAccessFloatList0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.sort()V: root-Branch
   */

  @Test
  public void test31()  throws Throwable  {
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(0.0F);
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatLinkedList0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatList0.sort();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.set(I[FII)V: root-Branch
   */

  @Test
  public void test32()  throws Throwable  {
      float[] floatArray0 = new float[7];
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.set(1047, floatArray0, 1047, 1047);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 33
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.inverseGrep(Lgnu/trove/procedure/TFloatProcedure;)Lgnu/trove/list/TFloatList;: root-Branch
   */

  @Test
  public void test33()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList0);
      TFloatArrayList tFloatArrayList1 = (TFloatArrayList)tUnmodifiableFloatList0.inverseGrep((TFloatProcedure) null);
      assertNotSame(tFloatArrayList0, tFloatArrayList1);
  }

  //Test case number: 34
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.lastIndexOf(F)I: root-Branch
   */

  @Test
  public void test34()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList0);
      int int0 = tUnmodifiableFloatList0.lastIndexOf((float) 0);
      assertEquals((-1), int0);
  }

  //Test case number: 35
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.sum()F: root-Branch
   */

//   @Test
//   public void test35()  throws Throwable  {
//       TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList(0.0F);
//       TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatLinkedList0);
//       float float0 = tUnmodifiableFloatList0.sum();
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 36
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.equals(Ljava/lang/Object;)Z: I4 Branch 1 IF_ACMPEQ L62 - true
   */

  @Test
  public void test36()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(15);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      boolean boolean0 = tUnmodifiableRandomAccessFloatList0.equals((Object) tUnmodifiableRandomAccessFloatList0);
      assertEquals(true, boolean0);
  }

  //Test case number: 37
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.equals(Ljava/lang/Object;)Z: I4 Branch 1 IF_ACMPEQ L62 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.equals(Ljava/lang/Object;)Z: I9 Branch 2 IFEQ L62 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatList.<init>(Lgnu/trove/list/TFloatList;)V: root-Branch
   */

  @Test
  public void test37()  throws Throwable  {
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet();
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList((TFloatCollection) tFloatHashSet0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      boolean boolean0 = tUnmodifiableRandomAccessFloatList0.equals((Object) "en");
      assertEquals(false, boolean0);
  }
}

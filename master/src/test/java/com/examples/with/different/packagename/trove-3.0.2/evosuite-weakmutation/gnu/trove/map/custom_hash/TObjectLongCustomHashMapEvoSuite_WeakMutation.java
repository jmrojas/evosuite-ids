/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.custom_hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TLongCollection;
import gnu.trove.function.TLongFunction;
import gnu.trove.map.TObjectLongMap;
import gnu.trove.map.custom_hash.TObjectLongCustomHashMap;
import gnu.trove.map.hash.TObjectLongHashMap;
import gnu.trove.procedure.TLongProcedure;
import gnu.trove.procedure.TObjectLongProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.set.hash.TLongHashSet;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TObjectLongCustomHashMapEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 315 covered goals:
   * 1 Weak Mutation 0: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$1.execute(Ljava/lang/Object;J)Z:60 - DeleteField: this$0Lgnu/trove/map/custom_hash/TObjectLongCustomHashMap;
   * 2 Weak Mutation 1: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$1.execute(Ljava/lang/Object;J)Z:60 - InsertUnaryOp Negation of value
   * 3 Weak Mutation 2: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$1.execute(Ljava/lang/Object;J)Z:60 - DeleteStatement: put(Ljava/lang/Object;J)J
   * 4 Weak Mutation 3: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$1.execute(Ljava/lang/Object;J)Z:61 - ReplaceConstant - 1 -> 0
   * 5 Weak Mutation 98: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:132 - ReplaceVariable noEntryValue -> serialVersionUID
   * 6 Weak Mutation 99: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:132 - InsertUnaryOp Negation of noEntryValue
   * 7 Weak Mutation 102: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - DeleteField: no_entry_valueJ
   * 8 Weak Mutation 103: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 100: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - ReplaceVariable no_entry_value -> serialVersionUID
   * 10 Weak Mutation 101: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - InsertUnaryOp Negation
   * 11 Weak Mutation 107: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - ReplaceComparisonOperator == -> <=
   * 12 Weak Mutation 104: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - ReplaceConstant - 0 -> -1
   * 13 Weak Mutation 105: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - DeleteStatement: longSub(JJ)I
   * 14 Weak Mutation 110: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:135 - ReplaceVariable no_entry_value -> serialVersionUID
   * 15 Weak Mutation 111: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:135 - InsertUnaryOp Negation
   * 16 Weak Mutation 109: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:135 - DeleteField: _values[J
   * 17 Weak Mutation 113: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:135 - DeleteStatement: fill([JJ)V
   * 18 Weak Mutation 112: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:135 - DeleteField: no_entry_valueJ
   * 19 Weak Mutation 114: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:151 - ReplaceComparisonOperator == -> !=
   * 20 Weak Mutation 117: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:153 - DeleteField: _loadFactorF
   * 21 Weak Mutation 116: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:153 - InsertUnaryOp Negation
   * 22 Weak Mutation 115: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:153 - ReplaceVariable hashmap -> this
   * 23 Weak Mutation 119: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:154 - ReplaceVariable no_entry_value -> serialVersionUID
   * 24 Weak Mutation 118: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:154 - ReplaceVariable hashmap -> this
   * 25 Weak Mutation 121: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:154 - DeleteField: no_entry_valueJ
   * 26 Weak Mutation 120: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:154 - InsertUnaryOp Negation
   * 27 Weak Mutation 123: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:155 - DeleteField: strategyLgnu/trove/strategy/HashingStrategy;
   * 28 Weak Mutation 122: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:155 - ReplaceVariable hashmap -> this
   * 29 Weak Mutation 127: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - ReplaceConstant - 0 -> 1
   * 30 Weak Mutation 126: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - DeleteField: no_entry_valueJ
   * 31 Weak Mutation 125: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - InsertUnaryOp Negation
   * 32 Weak Mutation 124: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - ReplaceVariable no_entry_value -> serialVersionUID
   * 33 Weak Mutation 129: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - DeleteStatement: longSub(JJ)I
   * 34 Weak Mutation 128: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - ReplaceConstant - 0 -> -1
   * 35 Weak Mutation 131: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - ReplaceComparisonOperator == -> <=
   * 36 Weak Mutation 137: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:158 - DeleteStatement: fill([JJ)V
   * 37 Weak Mutation 136: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:158 - DeleteField: no_entry_valueJ
   * 38 Weak Mutation 133: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:158 - DeleteField: _values[J
   * 39 Weak Mutation 135: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:158 - InsertUnaryOp Negation
   * 40 Weak Mutation 134: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:158 - ReplaceVariable no_entry_value -> serialVersionUID
   * 41 Weak Mutation 139: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceConstant - 10.0 -> 1.0
   * 42 Weak Mutation 138: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceConstant - 10.0 -> 0.0
   * 43 Weak Mutation 141: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceConstant - 10.0 -> 9.0
   * 44 Weak Mutation 140: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceConstant - 10.0 -> -1.0
   * 45 Weak Mutation 143: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - InsertUnaryOp Negation
   * 46 Weak Mutation 142: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceConstant - 10.0 -> 11.0
   * 47 Weak Mutation 144: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - DeleteField: _loadFactorF
   * 48 Weak Mutation 145: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceArithmeticOperator / -> -
   * 49 Weak Mutation 146: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceArithmeticOperator / -> +
   * 50 Weak Mutation 147: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceArithmeticOperator / -> %
   * 51 Weak Mutation 148: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceArithmeticOperator / -> *
   * 52 Weak Mutation 149: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - DeleteStatement: ceil(D)D
   * 53 Weak Mutation 150: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - DeleteStatement: setUp(I)I
   * 54 Weak Mutation 151: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:162 - DeleteStatement: putAll(Lgnu/trove/map/TObjectLongMap;)V
   * 55 Weak Mutation 152: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:176 - InsertUnaryOp Negation of initialCapacity
   * 56 Weak Mutation 153: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:176 - InsertUnaryOp IINC 1 initialCapacity
   * 57 Weak Mutation 154: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:176 - InsertUnaryOp IINC -1 initialCapacity
   * 58 Weak Mutation 155: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:177 - ReplaceVariable capacity -> initialCapacity
   * 59 Weak Mutation 156: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:177 - InsertUnaryOp Negation of capacity
   * 60 Weak Mutation 157: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:177 - InsertUnaryOp IINC 1 capacity
   * 61 Weak Mutation 158: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:177 - InsertUnaryOp IINC -1 capacity
   * 62 Weak Mutation 159: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:178 - ReplaceVariable capacity -> initialCapacity
   * 63 Weak Mutation 162: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:178 - InsertUnaryOp IINC -1 capacity
   * 64 Weak Mutation 161: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:178 - InsertUnaryOp IINC 1 capacity
   * 65 Weak Mutation 160: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:178 - InsertUnaryOp Negation of capacity
   * 66 Weak Mutation 242: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.getNoEntryValue()J:216 - DeleteField: no_entry_valueJ
   * 67 Weak Mutation 240: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.getNoEntryValue()J:216 - ReplaceVariable no_entry_value -> serialVersionUID
   * 68 Weak Mutation 241: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.getNoEntryValue()J:216 - InsertUnaryOp Negation
   * 69 Weak Mutation 295: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:251 - ReplaceVariable key -> FREE
   * 70 Weak Mutation 296: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:251 - ReplaceVariable key -> REMOVED
   * 71 Weak Mutation 297: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:251 - DeleteStatement: insertKey(Ljava/lang/Object;)I
   * 72 Weak Mutation 298: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:252 - ReplaceVariable value -> serialVersionUID
   * 73 Weak Mutation 299: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:252 - InsertUnaryOp Negation of value
   * 74 Weak Mutation 300: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:252 - InsertUnaryOp Negation of index
   * 75 Weak Mutation 301: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:252 - InsertUnaryOp IINC 1 index
   * 76 Weak Mutation 302: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:252 - InsertUnaryOp IINC -1 index
   * 77 Weak Mutation 326: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:266 - ReplaceVariable no_entry_value -> serialVersionUID
   * 78 Weak Mutation 327: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:266 - InsertUnaryOp Negation
   * 79 Weak Mutation 328: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:266 - DeleteField: no_entry_valueJ
   * 80 Weak Mutation 329: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:267 - ReplaceConstant - 1 -> 0
   * 81 Weak Mutation 330: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:268 - InsertUnaryOp Negation of index
   * 82 Weak Mutation 331: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:268 - ReplaceComparisonOperator >= -> ==
   * 83 Weak Mutation 351: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:274 - InsertUnaryOp Negation of value
   * 84 Weak Mutation 350: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:274 - ReplaceVariable value -> serialVersionUID
   * 85 Weak Mutation 349: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:274 - ReplaceVariable value -> previous
   * 86 Weak Mutation 348: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:274 - InsertUnaryOp IINC -1 index
   * 87 Weak Mutation 347: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:274 - InsertUnaryOp IINC 1 index
   * 88 Weak Mutation 346: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:274 - InsertUnaryOp Negation of index
   * 89 Weak Mutation 345: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:274 - DeleteField: _values[J
   * 90 Weak Mutation 352: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:276 - InsertUnaryOp Negation of isNewMapping
   * 91 Weak Mutation 353: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:276 - ReplaceComparisonOperator == -> !=
   * 92 Weak Mutation 356: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:277 - DeleteStatement: postInsertHook(Z)V
   * 93 Weak Mutation 354: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:277 - InsertUnaryOp Negation
   * 94 Weak Mutation 355: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:277 - DeleteField: consumeFreeSlotZ
   * 95 Weak Mutation 357: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:279 - ReplaceVariable previous -> value
   * 96 Weak Mutation 358: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:279 - ReplaceVariable previous -> serialVersionUID
   * 97 Weak Mutation 359: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:279 - InsertUnaryOp Negation of previous
   * 98 Weak Mutation 402: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putAll(Lgnu/trove/map/TObjectLongMap;)V:321 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z
   * 99 Weak Mutation 401: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putAll(Lgnu/trove/map/TObjectLongMap;)V:321 - DeleteField: PUT_ALL_PROCLgnu/trove/procedure/TObjectLongProcedure;
   * 100 Weak Mutation 668: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:453 - ReplaceVariable key -> FREE
   * 101 Weak Mutation 669: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:453 - ReplaceVariable key -> REMOVED
   * 102 Weak Mutation 670: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:453 - DeleteStatement: insertKey(Ljava/lang/Object;)I
   * 103 Weak Mutation 674: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:456 - ReplaceComparisonOperator >= -> ==
   * 104 Weak Mutation 673: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:456 - InsertUnaryOp IINC -1 index
   * 105 Weak Mutation 672: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:456 - InsertUnaryOp IINC 1 index
   * 106 Weak Mutation 671: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:456 - InsertUnaryOp Negation of index
   * 107 Weak Mutation 702: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:461 - ReplaceVariable put_amount -> serialVersionUID
   * 108 Weak Mutation 703: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:461 - InsertUnaryOp Negation of put_amount
   * 109 Weak Mutation 700: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:461 - InsertUnaryOp IINC -1 index
   * 110 Weak Mutation 698: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:461 - InsertUnaryOp Negation of index
   * 111 Weak Mutation 699: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:461 - InsertUnaryOp IINC 1 index
   * 112 Weak Mutation 697: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:461 - DeleteField: _values[J
   * 113 Weak Mutation 704: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:462 - ReplaceConstant - 1 -> 0
   * 114 Weak Mutation 705: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:466 - InsertUnaryOp Negation of isNewMapping
   * 115 Weak Mutation 706: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:466 - ReplaceComparisonOperator == -> !=
   * 116 Weak Mutation 707: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:467 - InsertUnaryOp Negation
   * 117 Weak Mutation 709: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:467 - DeleteStatement: postInsertHook(Z)V
   * 118 Weak Mutation 708: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:467 - DeleteField: consumeFreeSlotZ
   * 119 Weak Mutation 713: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:470 - InsertUnaryOp Negation of newValue
   * 120 Weak Mutation 712: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:470 - ReplaceVariable newValue -> serialVersionUID
   * 121 Weak Mutation 744: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:516 - DeleteField: _set[Ljava/lang/Object;
   * 122 Weak Mutation 745: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:517 - DeleteField: _values[J
   * 123 Weak Mutation 747: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:518 - InsertUnaryOp Negation of i
   * 124 Weak Mutation 751: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:518 - ReplaceComparisonOperator <= -> <
   * 125 Weak Mutation 749: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:518 - InsertUnaryOp IINC -1 i
   * 126 Weak Mutation 748: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:518 - InsertUnaryOp IINC 1 i
   * 127 Weak Mutation 752: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:518 - ReplaceComparisonOperator <= -> -1
   * 128 Weak Mutation 762: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 129 Weak Mutation 763: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 130 Weak Mutation 761: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 131 Weak Mutation 766: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - ReplaceComparisonOperator == -> !=
   * 132 Weak Mutation 764: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - ReplaceVariable REMOVED -> FREE
   * 133 Weak Mutation 765: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - DeleteField: REMOVEDLjava/lang/Object;
   * 134 Weak Mutation 754: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 135 Weak Mutation 755: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 136 Weak Mutation 758: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - DeleteField: FREELjava/lang/Object;
   * 137 Weak Mutation 759: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - ReplaceComparisonOperator == -> !=
   * 138 Weak Mutation 756: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 139 Weak Mutation 757: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - ReplaceVariable FREE -> REMOVED
   * 140 Weak Mutation 774: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - DeleteStatement: execute(Ljava/lang/Object;J)Z
   * 141 Weak Mutation 775: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - ReplaceComparisonOperator != -> ==
   * 142 Weak Mutation 772: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 143 Weak Mutation 773: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 144 Weak Mutation 770: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 145 Weak Mutation 771: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 146 Weak Mutation 768: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 147 Weak Mutation 769: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 148 Weak Mutation 777: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:525 - ReplaceConstant - 1 -> 0
   * 149 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$1.execute(Ljava/lang/Object;J)Z: root-Branch
   * 150 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$1.<init>(Lgnu/trove/map/custom_hash/TObjectLongCustomHashMap;)V: root-Branch
   * 151 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.getNoEntryValue()J: root-Branch
   * 152 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I: root-Branch
   * 153 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J: root-Branch
   * 154 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putAll(Lgnu/trove/map/TObjectLongMap;)V: root-Branch
   * 155 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V: I26 Branch 8 IFEQ L134 - false
   * 156 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V: I14 Branch 9 IFEQ L151 - false
   * 157 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V: I44 Branch 10 IFEQ L157 - false
   * 158 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J: I12 Branch 21 IFGE L268 - true
   * 159 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J: I41 Branch 22 IFEQ L276 - false
   * 160 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J: I9 Branch 41 IFGE L456 - true
   * 161 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J: I51 Branch 42 IFEQ L466 - false
   * 162 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I18 Branch 47 IFLE L518 - true
   * 163 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I18 Branch 47 IFLE L518 - false
   * 164 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - true
   * 165 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - false
   * 166 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I30 Branch 49 IF_ACMPEQ L519 - false
   * 167 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I39 Branch 50 IFNE L519 - true
   * 168 Weak Mutation 0: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$1.execute(Ljava/lang/Object;J)Z:60 - DeleteField: this$0Lgnu/trove/map/custom_hash/TObjectLongCustomHashMap;
   * 169 Weak Mutation 1: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$1.execute(Ljava/lang/Object;J)Z:60 - InsertUnaryOp Negation of value
   * 170 Weak Mutation 2: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$1.execute(Ljava/lang/Object;J)Z:60 - DeleteStatement: put(Ljava/lang/Object;J)J
   * 171 Weak Mutation 3: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$1.execute(Ljava/lang/Object;J)Z:61 - ReplaceConstant - 1 -> 0
   * 172 Weak Mutation 102: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - DeleteField: no_entry_valueJ
   * 173 Weak Mutation 103: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - ReplaceConstant - 0 -> 1
   * 174 Weak Mutation 100: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - ReplaceVariable no_entry_value -> serialVersionUID
   * 175 Weak Mutation 101: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - InsertUnaryOp Negation
   * 176 Weak Mutation 98: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:132 - ReplaceVariable noEntryValue -> serialVersionUID
   * 177 Weak Mutation 99: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:132 - InsertUnaryOp Negation of noEntryValue
   * 178 Weak Mutation 110: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:135 - ReplaceVariable no_entry_value -> serialVersionUID
   * 179 Weak Mutation 111: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:135 - InsertUnaryOp Negation
   * 180 Weak Mutation 109: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:135 - DeleteField: _values[J
   * 181 Weak Mutation 107: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - ReplaceComparisonOperator == -> <=
   * 182 Weak Mutation 104: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - ReplaceConstant - 0 -> -1
   * 183 Weak Mutation 105: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - DeleteStatement: longSub(JJ)I
   * 184 Weak Mutation 119: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:154 - ReplaceVariable no_entry_value -> serialVersionUID
   * 185 Weak Mutation 118: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:154 - ReplaceVariable hashmap -> this
   * 186 Weak Mutation 117: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:153 - DeleteField: _loadFactorF
   * 187 Weak Mutation 116: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:153 - InsertUnaryOp Negation
   * 188 Weak Mutation 115: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:153 - ReplaceVariable hashmap -> this
   * 189 Weak Mutation 114: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:151 - ReplaceComparisonOperator == -> !=
   * 190 Weak Mutation 113: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:135 - DeleteStatement: fill([JJ)V
   * 191 Weak Mutation 112: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:135 - DeleteField: no_entry_valueJ
   * 192 Weak Mutation 127: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - ReplaceConstant - 0 -> 1
   * 193 Weak Mutation 126: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - DeleteField: no_entry_valueJ
   * 194 Weak Mutation 125: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - InsertUnaryOp Negation
   * 195 Weak Mutation 124: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - ReplaceVariable no_entry_value -> serialVersionUID
   * 196 Weak Mutation 123: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:155 - DeleteField: strategyLgnu/trove/strategy/HashingStrategy;
   * 197 Weak Mutation 122: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:155 - ReplaceVariable hashmap -> this
   * 198 Weak Mutation 121: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:154 - DeleteField: no_entry_valueJ
   * 199 Weak Mutation 120: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:154 - InsertUnaryOp Negation
   * 200 Weak Mutation 137: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:158 - DeleteStatement: fill([JJ)V
   * 201 Weak Mutation 136: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:158 - DeleteField: no_entry_valueJ
   * 202 Weak Mutation 139: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceConstant - 10.0 -> 1.0
   * 203 Weak Mutation 138: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceConstant - 10.0 -> 0.0
   * 204 Weak Mutation 141: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceConstant - 10.0 -> 9.0
   * 205 Weak Mutation 140: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceConstant - 10.0 -> -1.0
   * 206 Weak Mutation 143: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - InsertUnaryOp Negation
   * 207 Weak Mutation 142: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceConstant - 10.0 -> 11.0
   * 208 Weak Mutation 129: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - DeleteStatement: longSub(JJ)I
   * 209 Weak Mutation 128: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - ReplaceConstant - 0 -> -1
   * 210 Weak Mutation 131: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - ReplaceComparisonOperator == -> <=
   * 211 Weak Mutation 133: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:158 - DeleteField: _values[J
   * 212 Weak Mutation 135: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:158 - InsertUnaryOp Negation
   * 213 Weak Mutation 134: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:158 - ReplaceVariable no_entry_value -> serialVersionUID
   * 214 Weak Mutation 152: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:176 - InsertUnaryOp Negation of initialCapacity
   * 215 Weak Mutation 153: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:176 - InsertUnaryOp IINC 1 initialCapacity
   * 216 Weak Mutation 154: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:176 - InsertUnaryOp IINC -1 initialCapacity
   * 217 Weak Mutation 155: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:177 - ReplaceVariable capacity -> initialCapacity
   * 218 Weak Mutation 156: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:177 - InsertUnaryOp Negation of capacity
   * 219 Weak Mutation 157: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:177 - InsertUnaryOp IINC 1 capacity
   * 220 Weak Mutation 158: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:177 - InsertUnaryOp IINC -1 capacity
   * 221 Weak Mutation 159: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:178 - ReplaceVariable capacity -> initialCapacity
   * 222 Weak Mutation 144: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - DeleteField: _loadFactorF
   * 223 Weak Mutation 145: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceArithmeticOperator / -> -
   * 224 Weak Mutation 146: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceArithmeticOperator / -> +
   * 225 Weak Mutation 147: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceArithmeticOperator / -> %
   * 226 Weak Mutation 148: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceArithmeticOperator / -> *
   * 227 Weak Mutation 149: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - DeleteStatement: ceil(D)D
   * 228 Weak Mutation 150: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - DeleteStatement: setUp(I)I
   * 229 Weak Mutation 151: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:162 - DeleteStatement: putAll(Lgnu/trove/map/TObjectLongMap;)V
   * 230 Weak Mutation 162: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:178 - InsertUnaryOp IINC -1 capacity
   * 231 Weak Mutation 161: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:178 - InsertUnaryOp IINC 1 capacity
   * 232 Weak Mutation 160: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:178 - InsertUnaryOp Negation of capacity
   * 233 Weak Mutation 242: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.getNoEntryValue()J:216 - DeleteField: no_entry_valueJ
   * 234 Weak Mutation 240: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.getNoEntryValue()J:216 - ReplaceVariable no_entry_value -> serialVersionUID
   * 235 Weak Mutation 241: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.getNoEntryValue()J:216 - InsertUnaryOp Negation
   * 236 Weak Mutation 295: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:251 - ReplaceVariable key -> FREE
   * 237 Weak Mutation 296: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:251 - ReplaceVariable key -> REMOVED
   * 238 Weak Mutation 297: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:251 - DeleteStatement: insertKey(Ljava/lang/Object;)I
   * 239 Weak Mutation 298: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:252 - ReplaceVariable value -> serialVersionUID
   * 240 Weak Mutation 299: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:252 - InsertUnaryOp Negation of value
   * 241 Weak Mutation 300: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:252 - InsertUnaryOp Negation of index
   * 242 Weak Mutation 301: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:252 - InsertUnaryOp IINC 1 index
   * 243 Weak Mutation 302: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:252 - InsertUnaryOp IINC -1 index
   * 244 Weak Mutation 351: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:274 - InsertUnaryOp Negation of value
   * 245 Weak Mutation 350: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:274 - ReplaceVariable value -> serialVersionUID
   * 246 Weak Mutation 349: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:274 - ReplaceVariable value -> previous
   * 247 Weak Mutation 348: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:274 - InsertUnaryOp IINC -1 index
   * 248 Weak Mutation 347: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:274 - InsertUnaryOp IINC 1 index
   * 249 Weak Mutation 346: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:274 - InsertUnaryOp Negation of index
   * 250 Weak Mutation 345: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:274 - DeleteField: _values[J
   * 251 Weak Mutation 326: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:266 - ReplaceVariable no_entry_value -> serialVersionUID
   * 252 Weak Mutation 327: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:266 - InsertUnaryOp Negation
   * 253 Weak Mutation 330: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:268 - InsertUnaryOp Negation of index
   * 254 Weak Mutation 331: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:268 - ReplaceComparisonOperator >= -> ==
   * 255 Weak Mutation 328: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:266 - DeleteField: no_entry_valueJ
   * 256 Weak Mutation 329: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:267 - ReplaceConstant - 1 -> 0
   * 257 Weak Mutation 356: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:277 - DeleteStatement: postInsertHook(Z)V
   * 258 Weak Mutation 357: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:279 - ReplaceVariable previous -> value
   * 259 Weak Mutation 358: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:279 - ReplaceVariable previous -> serialVersionUID
   * 260 Weak Mutation 359: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:279 - InsertUnaryOp Negation of previous
   * 261 Weak Mutation 352: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:276 - InsertUnaryOp Negation of isNewMapping
   * 262 Weak Mutation 353: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:276 - ReplaceComparisonOperator == -> !=
   * 263 Weak Mutation 354: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:277 - InsertUnaryOp Negation
   * 264 Weak Mutation 355: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:277 - DeleteField: consumeFreeSlotZ
   * 265 Weak Mutation 402: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putAll(Lgnu/trove/map/TObjectLongMap;)V:321 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z
   * 266 Weak Mutation 401: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putAll(Lgnu/trove/map/TObjectLongMap;)V:321 - DeleteField: PUT_ALL_PROCLgnu/trove/procedure/TObjectLongProcedure;
   * 267 Weak Mutation 674: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:456 - ReplaceComparisonOperator >= -> ==
   * 268 Weak Mutation 673: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:456 - InsertUnaryOp IINC -1 index
   * 269 Weak Mutation 672: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:456 - InsertUnaryOp IINC 1 index
   * 270 Weak Mutation 702: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:461 - ReplaceVariable put_amount -> serialVersionUID
   * 271 Weak Mutation 703: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:461 - InsertUnaryOp Negation of put_amount
   * 272 Weak Mutation 700: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:461 - InsertUnaryOp IINC -1 index
   * 273 Weak Mutation 698: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:461 - InsertUnaryOp Negation of index
   * 274 Weak Mutation 699: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:461 - InsertUnaryOp IINC 1 index
   * 275 Weak Mutation 697: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:461 - DeleteField: _values[J
   * 276 Weak Mutation 668: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:453 - ReplaceVariable key -> FREE
   * 277 Weak Mutation 669: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:453 - ReplaceVariable key -> REMOVED
   * 278 Weak Mutation 670: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:453 - DeleteStatement: insertKey(Ljava/lang/Object;)I
   * 279 Weak Mutation 671: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:456 - InsertUnaryOp Negation of index
   * 280 Weak Mutation 747: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:518 - InsertUnaryOp Negation of i
   * 281 Weak Mutation 745: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:517 - DeleteField: _values[J
   * 282 Weak Mutation 744: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:516 - DeleteField: _set[Ljava/lang/Object;
   * 283 Weak Mutation 751: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:518 - ReplaceComparisonOperator <= -> <
   * 284 Weak Mutation 749: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:518 - InsertUnaryOp IINC -1 i
   * 285 Weak Mutation 748: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:518 - InsertUnaryOp IINC 1 i
   * 286 Weak Mutation 762: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 287 Weak Mutation 763: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 288 Weak Mutation 761: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 289 Weak Mutation 766: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - ReplaceComparisonOperator == -> !=
   * 290 Weak Mutation 764: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - ReplaceVariable REMOVED -> FREE
   * 291 Weak Mutation 765: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - DeleteField: REMOVEDLjava/lang/Object;
   * 292 Weak Mutation 754: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 293 Weak Mutation 755: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 294 Weak Mutation 752: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:518 - ReplaceComparisonOperator <= -> -1
   * 295 Weak Mutation 758: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - DeleteField: FREELjava/lang/Object;
   * 296 Weak Mutation 759: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - ReplaceComparisonOperator == -> !=
   * 297 Weak Mutation 756: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 298 Weak Mutation 757: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - ReplaceVariable FREE -> REMOVED
   * 299 Weak Mutation 713: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:470 - InsertUnaryOp Negation of newValue
   * 300 Weak Mutation 712: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:470 - ReplaceVariable newValue -> serialVersionUID
   * 301 Weak Mutation 705: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:466 - InsertUnaryOp Negation of isNewMapping
   * 302 Weak Mutation 704: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:462 - ReplaceConstant - 1 -> 0
   * 303 Weak Mutation 707: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:467 - InsertUnaryOp Negation
   * 304 Weak Mutation 706: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:466 - ReplaceComparisonOperator == -> !=
   * 305 Weak Mutation 709: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:467 - DeleteStatement: postInsertHook(Z)V
   * 306 Weak Mutation 708: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:467 - DeleteField: consumeFreeSlotZ
   * 307 Weak Mutation 774: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - DeleteStatement: execute(Ljava/lang/Object;J)Z
   * 308 Weak Mutation 775: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - ReplaceComparisonOperator != -> ==
   * 309 Weak Mutation 772: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 310 Weak Mutation 773: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 311 Weak Mutation 770: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 312 Weak Mutation 771: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 313 Weak Mutation 768: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 314 Weak Mutation 769: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 315 Weak Mutation 777: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:525 - ReplaceConstant - 1 -> 0
   */

  @Test
  public void test0()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 0, 1125.4912F, (-70L));
      tObjectLongCustomHashMap0.adjustOrPutValue((Long) 1388L, 1388L, 1388L);
      TObjectLongCustomHashMap<Object> tObjectLongCustomHashMap1 = new TObjectLongCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectLongMap<?>) tObjectLongCustomHashMap0);
      assertEquals(false, tObjectLongCustomHashMap0.isEmpty());
      assertEquals(3, tObjectLongCustomHashMap1.capacity());
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * 1 Weak Mutation 96: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IF)V:114 - InsertUnaryOp Negation
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IF)V: root-Branch
   * 3 Weak Mutation 96: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IF)V:114 - InsertUnaryOp Negation
   */

  @Test
  public void test1()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Object> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 120, (-301.41617F));
      assertEquals(0, tObjectLongCustomHashMap0.size());
  }

  //Test case number: 2
  /*
   * 11 covered goals:
   * 1 Weak Mutation 130: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - ReplaceComparisonOperator == -> >=
   * 2 Weak Mutation 126: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - DeleteField: no_entry_valueJ
   * 3 Weak Mutation 121: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:154 - DeleteField: no_entry_valueJ
   * 4 Weak Mutation 137: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:158 - DeleteStatement: fill([JJ)V
   * 5 Weak Mutation 136: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:158 - DeleteField: no_entry_valueJ
   * 6 Weak Mutation 133: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:158 - DeleteField: _values[J
   * 7 Weak Mutation 135: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:158 - InsertUnaryOp Negation
   * 8 Weak Mutation 134: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:158 - ReplaceVariable no_entry_value -> serialVersionUID
   * 9 Weak Mutation 242: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.getNoEntryValue()J:216 - DeleteField: no_entry_valueJ
   * 10 Weak Mutation 106: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - ReplaceComparisonOperator == -> >=
   * 11 Weak Mutation 130: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - ReplaceComparisonOperator == -> >=
   */

  @Test
  public void test2()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 441, (float) 441, (long) 441);
      TObjectLongCustomHashMap<Object> tObjectLongCustomHashMap1 = new TObjectLongCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectLongMap<?>) tObjectLongCustomHashMap0);
      assertEquals(441L, tObjectLongCustomHashMap1.getNoEntryValue());
      assertEquals(3, tObjectLongCustomHashMap1.capacity());
  }

  //Test case number: 3
  /*
   * 32 covered goals:
   * 1 Weak Mutation 132: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - ReplaceComparisonOperator == -> -2
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V: I44 Branch 10 IFEQ L157 - true
   * 3 Weak Mutation 119: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:154 - ReplaceVariable no_entry_value -> serialVersionUID
   * 4 Weak Mutation 118: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:154 - ReplaceVariable hashmap -> this
   * 5 Weak Mutation 117: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:153 - DeleteField: _loadFactorF
   * 6 Weak Mutation 116: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:153 - InsertUnaryOp Negation
   * 7 Weak Mutation 115: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:153 - ReplaceVariable hashmap -> this
   * 8 Weak Mutation 127: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 125: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - InsertUnaryOp Negation
   * 10 Weak Mutation 124: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - ReplaceVariable no_entry_value -> serialVersionUID
   * 11 Weak Mutation 123: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:155 - DeleteField: strategyLgnu/trove/strategy/HashingStrategy;
   * 12 Weak Mutation 122: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:155 - ReplaceVariable hashmap -> this
   * 13 Weak Mutation 120: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:154 - InsertUnaryOp Negation
   * 14 Weak Mutation 139: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceConstant - 10.0 -> 1.0
   * 15 Weak Mutation 138: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceConstant - 10.0 -> 0.0
   * 16 Weak Mutation 141: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceConstant - 10.0 -> 9.0
   * 17 Weak Mutation 140: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceConstant - 10.0 -> -1.0
   * 18 Weak Mutation 143: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - InsertUnaryOp Negation
   * 19 Weak Mutation 142: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceConstant - 10.0 -> 11.0
   * 20 Weak Mutation 129: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - DeleteStatement: longSub(JJ)I
   * 21 Weak Mutation 128: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - ReplaceConstant - 0 -> -1
   * 22 Weak Mutation 144: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - DeleteField: _loadFactorF
   * 23 Weak Mutation 145: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceArithmeticOperator / -> -
   * 24 Weak Mutation 146: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceArithmeticOperator / -> +
   * 25 Weak Mutation 147: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceArithmeticOperator / -> %
   * 26 Weak Mutation 148: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - ReplaceArithmeticOperator / -> *
   * 27 Weak Mutation 149: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - DeleteStatement: ceil(D)D
   * 28 Weak Mutation 150: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:160 - DeleteStatement: setUp(I)I
   * 29 Weak Mutation 108: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - ReplaceComparisonOperator == -> -2
   * 30 Weak Mutation 132: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:157 - ReplaceComparisonOperator == -> -2
   * 31 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V: I14 Branch 9 IFEQ L151 - true
   * 32 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V: I26 Branch 8 IFEQ L134 - true
   */

  @Test
  public void test3()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectLongHashMap<Integer> tObjectLongHashMap0 = new TObjectLongHashMap<Integer>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (TObjectLongMap<? extends Integer>) tObjectLongHashMap0);
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap1 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (TObjectLongMap<? extends Integer>) tObjectLongCustomHashMap0);
      assertEquals(true, tObjectLongCustomHashMap1.isEmpty());
      assertEquals(23, tObjectLongCustomHashMap1.capacity());
      assertEquals(0L, tObjectLongCustomHashMap1.getNoEntryValue());
  }

  //Test case number: 4
  /*
   * 86 covered goals:
   * 1 Weak Mutation 163: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:188 - DeleteField: _set[Ljava/lang/Object;
   * 2 Weak Mutation 164: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:191 - DeleteField: _set[Ljava/lang/Object;
   * 3 Weak Mutation 165: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:192 - DeleteField: _values[J
   * 4 Weak Mutation 169: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:194 - InsertUnaryOp IINC -1 newCapacity
   * 5 Weak Mutation 168: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:194 - InsertUnaryOp IINC 1 newCapacity
   * 6 Weak Mutation 167: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:194 - InsertUnaryOp Negation of newCapacity
   * 7 Weak Mutation 171: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:195 - ReplaceVariable FREE -> REMOVED
   * 8 Weak Mutation 170: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:195 - DeleteField: _set[Ljava/lang/Object;
   * 9 Weak Mutation 173: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:195 - DeleteStatement: fill([Ljava/lang/Object;Ljava/lang/Object;)V
   * 10 Weak Mutation 172: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:195 - DeleteField: FREELjava/lang/Object;
   * 11 Weak Mutation 175: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:196 - InsertUnaryOp Negation of newCapacity
   * 12 Weak Mutation 176: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:196 - InsertUnaryOp IINC 1 newCapacity
   * 13 Weak Mutation 177: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:196 - InsertUnaryOp IINC -1 newCapacity
   * 14 Weak Mutation 178: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:197 - DeleteField: _values[J
   * 15 Weak Mutation 179: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:197 - ReplaceVariable no_entry_value -> serialVersionUID
   * 16 Weak Mutation 182: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:197 - DeleteStatement: fill([JJ)V
   * 17 Weak Mutation 180: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:197 - InsertUnaryOp Negation
   * 18 Weak Mutation 186: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC -1 oldCapacity
   * 19 Weak Mutation 187: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> newCapacity
   * 20 Weak Mutation 184: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - InsertUnaryOp Negation of oldCapacity
   * 21 Weak Mutation 185: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC 1 oldCapacity
   * 22 Weak Mutation 190: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC 1 i
   * 23 Weak Mutation 191: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC -1 i
   * 24 Weak Mutation 188: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> oldCapacity
   * 25 Weak Mutation 189: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - InsertUnaryOp Negation of i
   * 26 Weak Mutation 196: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - ReplaceComparisonOperator <= -> -1
   * 27 Weak Mutation 193: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> oldCapacity
   * 28 Weak Mutation 192: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> newCapacity
   * 29 Weak Mutation 195: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - ReplaceComparisonOperator <= -> <
   * 30 Weak Mutation 201: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:200 - InsertUnaryOp IINC 1 i
   * 31 Weak Mutation 200: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:200 - InsertUnaryOp Negation of i
   * 32 Weak Mutation 202: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:200 - InsertUnaryOp IINC -1 i
   * 33 Weak Mutation 197: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:200 - ReplaceVariable oldKeys -> _set
   * 34 Weak Mutation 199: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:200 - ReplaceVariable i -> oldCapacity
   * 35 Weak Mutation 198: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:200 - ReplaceVariable i -> newCapacity
   * 36 Weak Mutation 205: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - ReplaceVariable FREE -> REMOVED
   * 37 Weak Mutation 204: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - ReplaceVariable o -> REMOVED
   * 38 Weak Mutation 207: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - ReplaceComparisonOperator == -> !=
   * 39 Weak Mutation 206: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - DeleteField: FREELjava/lang/Object;
   * 40 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - true
   * 41 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - false
   * 42 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - true
   * 43 Weak Mutation 108: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - ReplaceComparisonOperator == -> -2
   * 44 Weak Mutation 114: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:151 - ReplaceComparisonOperator == -> !=
   * 45 Weak Mutation 151: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectLongMap;)V:162 - DeleteStatement: putAll(Lgnu/trove/map/TObjectLongMap;)V
   * 46 Weak Mutation 402: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putAll(Lgnu/trove/map/TObjectLongMap;)V:321 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z
   * 47 Weak Mutation 401: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putAll(Lgnu/trove/map/TObjectLongMap;)V:321 - DeleteField: PUT_ALL_PROCLgnu/trove/procedure/TObjectLongProcedure;
   * 48 Weak Mutation 171: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:195 - ReplaceVariable FREE -> REMOVED
   * 49 Weak Mutation 170: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:195 - DeleteField: _set[Ljava/lang/Object;
   * 50 Weak Mutation 169: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:194 - InsertUnaryOp IINC -1 newCapacity
   * 51 Weak Mutation 168: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:194 - InsertUnaryOp IINC 1 newCapacity
   * 52 Weak Mutation 175: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:196 - InsertUnaryOp Negation of newCapacity
   * 53 Weak Mutation 173: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:195 - DeleteStatement: fill([Ljava/lang/Object;Ljava/lang/Object;)V
   * 54 Weak Mutation 172: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:195 - DeleteField: FREELjava/lang/Object;
   * 55 Weak Mutation 163: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:188 - DeleteField: _set[Ljava/lang/Object;
   * 56 Weak Mutation 167: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:194 - InsertUnaryOp Negation of newCapacity
   * 57 Weak Mutation 165: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:192 - DeleteField: _values[J
   * 58 Weak Mutation 164: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:191 - DeleteField: _set[Ljava/lang/Object;
   * 59 Weak Mutation 186: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC -1 oldCapacity
   * 60 Weak Mutation 187: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> newCapacity
   * 61 Weak Mutation 184: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - InsertUnaryOp Negation of oldCapacity
   * 62 Weak Mutation 185: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC 1 oldCapacity
   * 63 Weak Mutation 190: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC 1 i
   * 64 Weak Mutation 191: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC -1 i
   * 65 Weak Mutation 188: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> oldCapacity
   * 66 Weak Mutation 189: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - InsertUnaryOp Negation of i
   * 67 Weak Mutation 178: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:197 - DeleteField: _values[J
   * 68 Weak Mutation 179: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:197 - ReplaceVariable no_entry_value -> serialVersionUID
   * 69 Weak Mutation 176: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:196 - InsertUnaryOp IINC 1 newCapacity
   * 70 Weak Mutation 177: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:196 - InsertUnaryOp IINC -1 newCapacity
   * 71 Weak Mutation 182: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:197 - DeleteStatement: fill([JJ)V
   * 72 Weak Mutation 180: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:197 - InsertUnaryOp Negation
   * 73 Weak Mutation 205: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - ReplaceVariable FREE -> REMOVED
   * 74 Weak Mutation 204: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - ReplaceVariable o -> REMOVED
   * 75 Weak Mutation 207: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - ReplaceComparisonOperator == -> !=
   * 76 Weak Mutation 206: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - DeleteField: FREELjava/lang/Object;
   * 77 Weak Mutation 201: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:200 - InsertUnaryOp IINC 1 i
   * 78 Weak Mutation 200: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:200 - InsertUnaryOp Negation of i
   * 79 Weak Mutation 202: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:200 - InsertUnaryOp IINC -1 i
   * 80 Weak Mutation 197: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:200 - ReplaceVariable oldKeys -> _set
   * 81 Weak Mutation 196: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - ReplaceComparisonOperator <= -> -1
   * 82 Weak Mutation 199: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:200 - ReplaceVariable i -> oldCapacity
   * 83 Weak Mutation 198: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:200 - ReplaceVariable i -> newCapacity
   * 84 Weak Mutation 193: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> oldCapacity
   * 85 Weak Mutation 192: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> newCapacity
   * 86 Weak Mutation 195: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - ReplaceComparisonOperator <= -> <
   */

  @Test
  public void test4()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectLongHashMap<Integer> tObjectLongHashMap0 = new TObjectLongHashMap<Integer>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (TObjectLongMap<? extends Integer>) tObjectLongHashMap0);
      tObjectLongCustomHashMap0.trimToSize();
      assertEquals(3, tObjectLongCustomHashMap0.capacity());
      assertEquals("{}", tObjectLongCustomHashMap0.toString());
      assertEquals(0L, tObjectLongCustomHashMap0.getNoEntryValue());
  }

  //Test case number: 5
  /*
   * 8 covered goals:
   * 1 Weak Mutation 244: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsKey(Ljava/lang/Object;)Z:222 - ReplaceVariable key -> REMOVED
   * 2 Weak Mutation 245: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsKey(Ljava/lang/Object;)Z:222 - DeleteStatement: contains(Ljava/lang/Object;)Z
   * 3 Weak Mutation 243: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsKey(Ljava/lang/Object;)Z:222 - ReplaceVariable key -> FREE
   * 4 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsKey(Ljava/lang/Object;)Z: root-Branch
   * 5 Weak Mutation 244: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsKey(Ljava/lang/Object;)Z:222 - ReplaceVariable key -> REMOVED
   * 6 Weak Mutation 245: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsKey(Ljava/lang/Object;)Z:222 - DeleteStatement: contains(Ljava/lang/Object;)Z
   * 7 Weak Mutation 243: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsKey(Ljava/lang/Object;)Z:222 - ReplaceVariable key -> FREE
   * 8 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>()V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>();
      tObjectLongCustomHashMap0.containsKey((Object) null);
      assertEquals(23, tObjectLongCustomHashMap0.capacity());
  }

  //Test case number: 6
  /*
   * 72 covered goals:
   * 1 Weak Mutation 275: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - ReplaceComparisonOperator != -> >
   * 2 Weak Mutation 273: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - DeleteStatement: longSub(JJ)I
   * 3 Weak Mutation 272: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp IINC -1 i
   * 4 Weak Mutation 262: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp Negation of i
   * 5 Weak Mutation 263: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp IINC 1 i
   * 6 Weak Mutation 266: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - DeleteField: REMOVEDLjava/lang/Object;
   * 7 Weak Mutation 267: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - ReplaceComparisonOperator == -> !=
   * 8 Weak Mutation 264: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp IINC -1 i
   * 9 Weak Mutation 265: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - ReplaceVariable REMOVED -> FREE
   * 10 Weak Mutation 270: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp Negation of i
   * 11 Weak Mutation 271: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp IINC 1 i
   * 12 Weak Mutation 268: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - ReplaceVariable val -> serialVersionUID
   * 13 Weak Mutation 269: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp Negation of val
   * 14 Weak Mutation 332: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:268 - ReplaceComparisonOperator >= -> >
   * 15 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z: I25 Branch 16 IF_ACMPEQ L232 - false
   * 16 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z: I30 Branch 17 IF_ACMPEQ L232 - false
   * 17 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z: I36 Branch 18 IFNE L232 - true
   * 18 Weak Mutation 240: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.getNoEntryValue()J:216 - ReplaceVariable no_entry_value -> serialVersionUID
   * 19 Weak Mutation 241: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.getNoEntryValue()J:216 - InsertUnaryOp Negation
   * 20 Weak Mutation 174: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:196 - ReplaceVariable newCapacity -> oldCapacity
   * 21 Weak Mutation 166: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:194 - ReplaceVariable newCapacity -> oldCapacity
   * 22 Weak Mutation 183: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - ReplaceVariable oldCapacity -> newCapacity
   * 23 Weak Mutation 181: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:197 - DeleteField: no_entry_valueJ
   * 24 Weak Mutation 203: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - ReplaceVariable o -> FREE
   * 25 Weak Mutation 220: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:203 - InsertUnaryOp IINC 1 index
   * 26 Weak Mutation 221: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:203 - InsertUnaryOp IINC -1 index
   * 27 Weak Mutation 222: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:203 - ReplaceComparisonOperator >= -> ==
   * 28 Weak Mutation 216: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:203 - ReplaceVariable index -> newCapacity
   * 29 Weak Mutation 217: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:203 - ReplaceVariable index -> oldCapacity
   * 30 Weak Mutation 218: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:203 - ReplaceVariable index -> i
   * 31 Weak Mutation 219: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:203 - InsertUnaryOp Negation of index
   * 32 Weak Mutation 212: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - ReplaceComparisonOperator == -> !=
   * 33 Weak Mutation 213: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:202 - ReplaceVariable o -> FREE
   * 34 Weak Mutation 214: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:202 - ReplaceVariable o -> REMOVED
   * 35 Weak Mutation 215: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:202 - DeleteStatement: insertKey(Ljava/lang/Object;)I
   * 36 Weak Mutation 208: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - ReplaceVariable o -> FREE
   * 37 Weak Mutation 209: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - ReplaceVariable o -> REMOVED
   * 38 Weak Mutation 210: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - ReplaceVariable REMOVED -> FREE
   * 39 Weak Mutation 211: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - DeleteField: REMOVEDLjava/lang/Object;
   * 40 Weak Mutation 255: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp Negation of i
   * 41 Weak Mutation 252: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:231 - ReplaceComparisonOperator <= -> <
   * 42 Weak Mutation 253: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:231 - ReplaceComparisonOperator <= -> -1
   * 43 Weak Mutation 250: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:231 - InsertUnaryOp IINC -1 i
   * 44 Weak Mutation 248: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:231 - InsertUnaryOp Negation of i
   * 45 Weak Mutation 249: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:231 - InsertUnaryOp IINC 1 i
   * 46 Weak Mutation 246: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:228 - DeleteField: _set[Ljava/lang/Object;
   * 47 Weak Mutation 247: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:229 - DeleteField: _values[J
   * 48 Weak Mutation 275: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - ReplaceComparisonOperator != -> >
   * 49 Weak Mutation 273: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - DeleteStatement: longSub(JJ)I
   * 50 Weak Mutation 272: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp IINC -1 i
   * 51 Weak Mutation 278: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:236 - ReplaceConstant - 0 -> 1
   * 52 Weak Mutation 258: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - ReplaceVariable FREE -> REMOVED
   * 53 Weak Mutation 259: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - DeleteField: FREELjava/lang/Object;
   * 54 Weak Mutation 256: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp IINC 1 i
   * 55 Weak Mutation 257: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp IINC -1 i
   * 56 Weak Mutation 262: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp Negation of i
   * 57 Weak Mutation 263: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp IINC 1 i
   * 58 Weak Mutation 260: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - ReplaceComparisonOperator == -> !=
   * 59 Weak Mutation 266: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - DeleteField: REMOVEDLjava/lang/Object;
   * 60 Weak Mutation 267: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - ReplaceComparisonOperator == -> !=
   * 61 Weak Mutation 264: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp IINC -1 i
   * 62 Weak Mutation 265: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - ReplaceVariable REMOVED -> FREE
   * 63 Weak Mutation 270: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp Negation of i
   * 64 Weak Mutation 271: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp IINC 1 i
   * 65 Weak Mutation 268: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - ReplaceVariable val -> serialVersionUID
   * 66 Weak Mutation 269: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp Negation of val
   * 67 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - false
   * 68 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V: I63 Branch 13 IF_ACMPEQ L201 - false
   * 69 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V: I73 Branch 14 IFGE L203 - true
   * 70 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z: I18 Branch 15 IFLE L231 - true
   * 71 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z: I18 Branch 15 IFLE L231 - false
   * 72 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z: I25 Branch 16 IF_ACMPEQ L232 - true
   */

  @Test
  public void test6()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>();
      long long0 = tObjectLongCustomHashMap0.getNoEntryValue();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap1 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 193, (float) 0L, 9223372036854775807L);
      tObjectLongCustomHashMap1.put((Long) long0, 9223372036854775807L);
      boolean boolean0 = tObjectLongCustomHashMap1.containsValue((long) 193);
      assertEquals("{0=9223372036854775807}", tObjectLongCustomHashMap1.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 9 covered goals:
   * 1 Weak Mutation 274: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - ReplaceComparisonOperator != -> <
   * 2 Weak Mutation 701: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:461 - ReplaceVariable put_amount -> adjust_amount
   * 3 Weak Mutation 710: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:470 - ReplaceVariable newValue -> adjust_amount
   * 4 Weak Mutation 252: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:231 - ReplaceComparisonOperator <= -> <
   * 5 Weak Mutation 278: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:236 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 274: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - ReplaceComparisonOperator != -> <
   * 7 Weak Mutation 701: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:461 - ReplaceVariable put_amount -> adjust_amount
   * 8 Weak Mutation 710: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:470 - ReplaceVariable newValue -> adjust_amount
   * 9 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;)V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0);
      tObjectLongCustomHashMap0.adjustOrPutValue((Long) (-1006L), (-1006L), 0L);
      boolean boolean0 = tObjectLongCustomHashMap0.containsValue(1L);
      assertEquals("{-1006=0}", tObjectLongCustomHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 30 covered goals:
   * 1 Weak Mutation 276: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - ReplaceComparisonOperator != -> -1
   * 2 Weak Mutation 277: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:233 - ReplaceConstant - 1 -> 0
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z: I36 Branch 18 IFNE L232 - false
   * 4 Weak Mutation 255: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp Negation of i
   * 5 Weak Mutation 253: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:231 - ReplaceComparisonOperator <= -> -1
   * 6 Weak Mutation 250: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:231 - InsertUnaryOp IINC -1 i
   * 7 Weak Mutation 248: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:231 - InsertUnaryOp Negation of i
   * 8 Weak Mutation 249: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:231 - InsertUnaryOp IINC 1 i
   * 9 Weak Mutation 246: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:228 - DeleteField: _set[Ljava/lang/Object;
   * 10 Weak Mutation 247: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:229 - DeleteField: _values[J
   * 11 Weak Mutation 273: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - DeleteStatement: longSub(JJ)I
   * 12 Weak Mutation 272: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp IINC -1 i
   * 13 Weak Mutation 258: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - ReplaceVariable FREE -> REMOVED
   * 14 Weak Mutation 259: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - DeleteField: FREELjava/lang/Object;
   * 15 Weak Mutation 256: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp IINC 1 i
   * 16 Weak Mutation 257: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp IINC -1 i
   * 17 Weak Mutation 262: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp Negation of i
   * 18 Weak Mutation 263: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp IINC 1 i
   * 19 Weak Mutation 260: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - ReplaceComparisonOperator == -> !=
   * 20 Weak Mutation 266: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - DeleteField: REMOVEDLjava/lang/Object;
   * 21 Weak Mutation 267: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - ReplaceComparisonOperator == -> !=
   * 22 Weak Mutation 264: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp IINC -1 i
   * 23 Weak Mutation 265: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - ReplaceVariable REMOVED -> FREE
   * 24 Weak Mutation 270: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp Negation of i
   * 25 Weak Mutation 271: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp IINC 1 i
   * 26 Weak Mutation 268: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - ReplaceVariable val -> serialVersionUID
   * 27 Weak Mutation 269: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - InsertUnaryOp Negation of val
   * 28 Weak Mutation 277: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:233 - ReplaceConstant - 1 -> 0
   * 29 Weak Mutation 276: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.containsValue(J)Z:232 - ReplaceComparisonOperator != -> -1
   * 30 Weak Mutation 332: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:268 - ReplaceComparisonOperator >= -> >
   */

  @Test
  public void test8()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 37, (-2.4790292F), (long) 37);
      Long long0 = new Long((long) 37);
      tObjectLongCustomHashMap0.put(long0, (long) 37);
      boolean boolean0 = tObjectLongCustomHashMap0.containsValue(37L);
      assertEquals(false, tObjectLongCustomHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 9
  /*
   * 21 covered goals:
   * 1 Weak Mutation 286: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - ReplaceComparisonOperator >= -> >
   * 2 Weak Mutation 291: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - DeleteField: _values[J
   * 3 Weak Mutation 292: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - InsertUnaryOp Negation of index
   * 4 Weak Mutation 293: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - InsertUnaryOp IINC 1 index
   * 5 Weak Mutation 294: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - InsertUnaryOp IINC -1 index
   * 6 Weak Mutation 675: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:456 - ReplaceComparisonOperator >= -> >
   * 7 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J: I9 Branch 19 IFGE L243 - true
   * 8 Weak Mutation 94: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;I)V:97 - InsertUnaryOp Negation
   * 9 Weak Mutation 279: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:242 - ReplaceVariable key -> FREE
   * 10 Weak Mutation 283: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - InsertUnaryOp IINC 1 index
   * 11 Weak Mutation 282: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - InsertUnaryOp Negation of index
   * 12 Weak Mutation 281: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:242 - DeleteStatement: index(Ljava/lang/Object;)I
   * 13 Weak Mutation 280: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:242 - ReplaceVariable key -> REMOVED
   * 14 Weak Mutation 286: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - ReplaceComparisonOperator >= -> >
   * 15 Weak Mutation 284: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - InsertUnaryOp IINC -1 index
   * 16 Weak Mutation 291: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - DeleteField: _values[J
   * 17 Weak Mutation 292: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - InsertUnaryOp Negation of index
   * 18 Weak Mutation 293: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - InsertUnaryOp IINC 1 index
   * 19 Weak Mutation 294: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - InsertUnaryOp IINC -1 index
   * 20 Weak Mutation 675: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:456 - ReplaceComparisonOperator >= -> >
   * 21 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;I)V: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, (-1521));
      tObjectLongCustomHashMap0.adjustOrPutValue((Long) null, (long) 0, (long) 0);
      long long0 = tObjectLongCustomHashMap0.get((Object) null);
      assertEquals("{null=0}", tObjectLongCustomHashMap0.toString());
      assertEquals(0L, long0);
  }

  //Test case number: 10
  /*
   * 15 covered goals:
   * 1 Weak Mutation 290: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - DeleteField: no_entry_valueJ
   * 2 Weak Mutation 279: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:242 - ReplaceVariable key -> FREE
   * 3 Weak Mutation 283: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - InsertUnaryOp IINC 1 index
   * 4 Weak Mutation 282: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - InsertUnaryOp Negation of index
   * 5 Weak Mutation 281: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:242 - DeleteStatement: index(Ljava/lang/Object;)I
   * 6 Weak Mutation 280: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:242 - ReplaceVariable key -> REMOVED
   * 7 Weak Mutation 287: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - ReplaceComparisonOperator >= -> -1
   * 8 Weak Mutation 284: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - InsertUnaryOp IINC -1 index
   * 9 Weak Mutation 288: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - ReplaceVariable no_entry_value -> serialVersionUID
   * 10 Weak Mutation 289: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - InsertUnaryOp Negation
   * 11 Weak Mutation 287: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - ReplaceComparisonOperator >= -> -1
   * 12 Weak Mutation 288: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - ReplaceVariable no_entry_value -> serialVersionUID
   * 13 Weak Mutation 289: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - InsertUnaryOp Negation
   * 14 Weak Mutation 290: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J:243 - DeleteField: no_entry_valueJ
   * 15 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.get(Ljava/lang/Object;)J: I9 Branch 19 IFGE L243 - false
   */

  @Test
  public void test10()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 193, (float) 0L, 9223372036854775807L);
      long long0 = tObjectLongCustomHashMap0.get((Object) 0L);
      assertEquals(9223372036854775807L, long0);
  }

  //Test case number: 11
  /*
   * 27 covered goals:
   * 1 Weak Mutation 311: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:259 - ReplaceComparisonOperator >= -> -1
   * 2 Weak Mutation 313: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - InsertUnaryOp Negation of index
   * 3 Weak Mutation 312: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - DeleteField: _values[J
   * 4 Weak Mutation 315: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - InsertUnaryOp IINC -1 index
   * 5 Weak Mutation 314: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - InsertUnaryOp IINC 1 index
   * 6 Weak Mutation 317: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - ReplaceArithmeticOperator - -> +
   * 7 Weak Mutation 316: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - ReplaceConstant - 1 -> 0
   * 8 Weak Mutation 319: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - ReplaceArithmeticOperator - -> /
   * 9 Weak Mutation 320: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - ReplaceArithmeticOperator - -> *
   * 10 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J: I9 Branch 20 IFGE L259 - false
   * 11 Weak Mutation 223: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:203 - ReplaceComparisonOperator >= -> >
   * 12 Weak Mutation 223: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:203 - ReplaceComparisonOperator >= -> >
   * 13 Weak Mutation 305: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:258 - DeleteStatement: insertKey(Ljava/lang/Object;)I
   * 14 Weak Mutation 304: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:258 - ReplaceVariable key -> REMOVED
   * 15 Weak Mutation 307: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:259 - InsertUnaryOp IINC 1 index
   * 16 Weak Mutation 306: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:259 - InsertUnaryOp Negation of index
   * 17 Weak Mutation 308: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:259 - InsertUnaryOp IINC -1 index
   * 18 Weak Mutation 311: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:259 - ReplaceComparisonOperator >= -> -1
   * 19 Weak Mutation 313: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - InsertUnaryOp Negation of index
   * 20 Weak Mutation 312: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - DeleteField: _values[J
   * 21 Weak Mutation 315: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - InsertUnaryOp IINC -1 index
   * 22 Weak Mutation 314: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - InsertUnaryOp IINC 1 index
   * 23 Weak Mutation 317: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - ReplaceArithmeticOperator - -> +
   * 24 Weak Mutation 316: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - ReplaceConstant - 1 -> 0
   * 25 Weak Mutation 319: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - ReplaceArithmeticOperator - -> /
   * 26 Weak Mutation 303: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:258 - ReplaceVariable key -> FREE
   * 27 Weak Mutation 320: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - ReplaceArithmeticOperator - -> *
   */

  @Test
  public void test11()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 37, (-2.4790292F), (long) 37);
      Long long0 = new Long((long) 37);
      tObjectLongCustomHashMap0.put(long0, (long) 37);
      long long1 = tObjectLongCustomHashMap0.putIfAbsent(long0, 37L);
      assertEquals(false, tObjectLongCustomHashMap0.isEmpty());
      assertEquals(37L, long1);
  }

  //Test case number: 12
  /*
   * 11 covered goals:
   * 1 Weak Mutation 318: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - ReplaceArithmeticOperator - -> %
   * 2 Weak Mutation 311: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:259 - ReplaceComparisonOperator >= -> -1
   * 3 Weak Mutation 313: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - InsertUnaryOp Negation of index
   * 4 Weak Mutation 312: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - DeleteField: _values[J
   * 5 Weak Mutation 315: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - InsertUnaryOp IINC -1 index
   * 6 Weak Mutation 314: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - InsertUnaryOp IINC 1 index
   * 7 Weak Mutation 317: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - ReplaceArithmeticOperator - -> +
   * 8 Weak Mutation 316: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - ReplaceConstant - 1 -> 0
   * 9 Weak Mutation 319: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - ReplaceArithmeticOperator - -> /
   * 10 Weak Mutation 320: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - ReplaceArithmeticOperator - -> *
   * 11 Weak Mutation 318: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:260 - ReplaceArithmeticOperator - -> %
   */

  @Test
  public void test12()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Object> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Object>();
      HashMap<Integer, Long> hashMap0 = new HashMap<Integer, Long>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap1 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 37, (-2.4790292F), (long) 37);
      Long long0 = new Long((long) 37);
      tObjectLongCustomHashMap1.put(long0, (long) 37);
      long long1 = tObjectLongCustomHashMap1.putIfAbsent(long0, 37L);
      assertEquals("{37=37}", tObjectLongCustomHashMap1.toString());
      assertEquals(37L, long1);
  }

  //Test case number: 13
  /*
   * 33 covered goals:
   * 1 Weak Mutation 333: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:268 - ReplaceComparisonOperator >= -> -1
   * 2 Weak Mutation 339: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:269 - ReplaceArithmeticOperator - -> *
   * 3 Weak Mutation 338: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:269 - ReplaceArithmeticOperator - -> /
   * 4 Weak Mutation 337: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:269 - ReplaceArithmeticOperator - -> %
   * 5 Weak Mutation 336: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:269 - ReplaceArithmeticOperator - -> +
   * 6 Weak Mutation 334: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:269 - InsertUnaryOp Negation of index
   * 7 Weak Mutation 335: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:269 - ReplaceConstant - 1 -> 0
   * 8 Weak Mutation 343: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:270 - InsertUnaryOp IINC -1 index
   * 9 Weak Mutation 342: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:270 - InsertUnaryOp IINC 1 index
   * 10 Weak Mutation 341: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:270 - InsertUnaryOp Negation of index
   * 11 Weak Mutation 340: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:270 - DeleteField: _values[J
   * 12 Weak Mutation 344: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:271 - ReplaceConstant - 0 -> 1
   * 13 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J: I12 Branch 21 IFGE L268 - false
   * 14 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J: I41 Branch 22 IFEQ L276 - true
   * 15 Weak Mutation 309: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:259 - ReplaceComparisonOperator >= -> ==
   * 16 Weak Mutation 343: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:270 - InsertUnaryOp IINC -1 index
   * 17 Weak Mutation 342: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:270 - InsertUnaryOp IINC 1 index
   * 18 Weak Mutation 341: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:270 - InsertUnaryOp Negation of index
   * 19 Weak Mutation 340: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:270 - DeleteField: _values[J
   * 20 Weak Mutation 339: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:269 - ReplaceArithmeticOperator - -> *
   * 21 Weak Mutation 338: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:269 - ReplaceArithmeticOperator - -> /
   * 22 Weak Mutation 337: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:269 - ReplaceArithmeticOperator - -> %
   * 23 Weak Mutation 336: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:269 - ReplaceArithmeticOperator - -> +
   * 24 Weak Mutation 344: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:271 - ReplaceConstant - 0 -> 1
   * 25 Weak Mutation 324: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:261 - InsertUnaryOp IINC 1 index
   * 26 Weak Mutation 325: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:261 - InsertUnaryOp IINC -1 index
   * 27 Weak Mutation 322: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:261 - InsertUnaryOp Negation of value
   * 28 Weak Mutation 323: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:261 - InsertUnaryOp Negation of index
   * 29 Weak Mutation 321: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:261 - ReplaceVariable value -> serialVersionUID
   * 30 Weak Mutation 334: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:269 - InsertUnaryOp Negation of index
   * 31 Weak Mutation 335: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:269 - ReplaceConstant - 1 -> 0
   * 32 Weak Mutation 333: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:268 - ReplaceComparisonOperator >= -> -1
   * 33 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J: I9 Branch 20 IFGE L259 - true
   */

  @Test
  public void test13()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      tObjectLongCustomHashMap0.putIfAbsent((Integer) 120, 0L);
      long long0 = tObjectLongCustomHashMap0.put((Integer) 120, 0L);
      assertEquals("{120=0}", tObjectLongCustomHashMap0.toString());
      assertEquals(0L, long0);
  }

  //Test case number: 14
  /*
   * 25 covered goals:
   * 1 Weak Mutation 360: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:285 - ReplaceVariable no_entry_value -> serialVersionUID
   * 2 Weak Mutation 361: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:285 - InsertUnaryOp Negation
   * 3 Weak Mutation 362: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:285 - DeleteField: no_entry_valueJ
   * 4 Weak Mutation 364: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:286 - ReplaceVariable key -> REMOVED
   * 5 Weak Mutation 365: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:286 - DeleteStatement: index(Ljava/lang/Object;)I
   * 6 Weak Mutation 363: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:286 - ReplaceVariable key -> FREE
   * 7 Weak Mutation 368: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:287 - InsertUnaryOp IINC -1 index
   * 8 Weak Mutation 371: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:287 - ReplaceComparisonOperator < -> -2
   * 9 Weak Mutation 366: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:287 - InsertUnaryOp Negation of index
   * 10 Weak Mutation 367: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:287 - InsertUnaryOp IINC 1 index
   * 11 Weak Mutation 381: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:291 - InsertUnaryOp Negation of prev
   * 12 Weak Mutation 380: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:291 - ReplaceVariable prev -> serialVersionUID
   * 13 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J: I14 Branch 23 IFLT L287 - true
   * 14 Weak Mutation 368: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:287 - InsertUnaryOp IINC -1 index
   * 15 Weak Mutation 371: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:287 - ReplaceComparisonOperator < -> -2
   * 16 Weak Mutation 381: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:291 - InsertUnaryOp Negation of prev
   * 17 Weak Mutation 380: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:291 - ReplaceVariable prev -> serialVersionUID
   * 18 Weak Mutation 364: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:286 - ReplaceVariable key -> REMOVED
   * 19 Weak Mutation 365: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:286 - DeleteStatement: index(Ljava/lang/Object;)I
   * 20 Weak Mutation 366: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:287 - InsertUnaryOp Negation of index
   * 21 Weak Mutation 367: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:287 - InsertUnaryOp IINC 1 index
   * 22 Weak Mutation 360: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:285 - ReplaceVariable no_entry_value -> serialVersionUID
   * 23 Weak Mutation 361: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:285 - InsertUnaryOp Negation
   * 24 Weak Mutation 362: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:285 - DeleteField: no_entry_valueJ
   * 25 Weak Mutation 363: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.remove(Ljava/lang/Object;)J:286 - ReplaceVariable key -> FREE
   */

  @Test
  public void test14()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 0, 1125.4912F, (-70L));
      long long0 = tObjectLongCustomHashMap0.remove((Object) null);
      assertEquals((-70L), long0);
      assertEquals(true, tObjectLongCustomHashMap0.isEmpty());
  }

  //Test case number: 15
  /*
   * 9 covered goals:
   * 1 Weak Mutation 392: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putAll(Ljava/util/Map;)V:312 - DeleteStatement: entrySet()Ljava/util/Set;
   * 2 Weak Mutation 395: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putAll(Ljava/util/Map;)V:313 - ReplaceComparisonOperator == -> !=
   * 3 Weak Mutation 394: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putAll(Ljava/util/Map;)V:313 - DeleteStatement: hasNext()Z
   * 4 Weak Mutation 393: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putAll(Ljava/util/Map;)V:313 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 5 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putAll(Ljava/util/Map;)V: I13 Branch 24 IFEQ L313 - true
   * 6 Weak Mutation 395: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putAll(Ljava/util/Map;)V:313 - ReplaceComparisonOperator == -> !=
   * 7 Weak Mutation 394: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putAll(Ljava/util/Map;)V:313 - DeleteStatement: hasNext()Z
   * 8 Weak Mutation 393: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putAll(Ljava/util/Map;)V:313 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 9 Weak Mutation 392: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putAll(Ljava/util/Map;)V:312 - DeleteStatement: entrySet()Ljava/util/Set;
   */

  @Test
  public void test15()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<String> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (-1530));
      HashMap<String, Long> hashMap0 = new HashMap<String, Long>();
      tObjectLongCustomHashMap0.putAll((Map<? extends String, ? extends Long>) hashMap0);
      assertEquals(3, tObjectLongCustomHashMap0.capacity());
  }

  //Test case number: 16
  /*
   * 27 covered goals:
   * 1 Weak Mutation 408: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:328 - DeleteStatement: fill([Ljava/lang/Object;IILjava/lang/Object;)V
   * 2 Weak Mutation 403: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:328 - DeleteField: _set[Ljava/lang/Object;
   * 3 Weak Mutation 406: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:328 - ReplaceVariable FREE -> REMOVED
   * 4 Weak Mutation 407: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:328 - DeleteField: FREELjava/lang/Object;
   * 5 Weak Mutation 404: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:328 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 405: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:328 - DeleteField: _set[Ljava/lang/Object;
   * 7 Weak Mutation 410: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:329 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 411: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:329 - DeleteField: _values[J
   * 9 Weak Mutation 409: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:329 - DeleteField: _values[J
   * 10 Weak Mutation 414: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:329 - DeleteField: no_entry_valueJ
   * 11 Weak Mutation 415: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:329 - DeleteStatement: fill([JIIJ)V
   * 12 Weak Mutation 412: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:329 - ReplaceVariable no_entry_value -> serialVersionUID
   * 13 Weak Mutation 413: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:329 - InsertUnaryOp Negation
   * 14 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V: root-Branch
   * 15 Weak Mutation 410: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:329 - ReplaceConstant - 0 -> 1
   * 16 Weak Mutation 411: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:329 - DeleteField: _values[J
   * 17 Weak Mutation 408: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:328 - DeleteStatement: fill([Ljava/lang/Object;IILjava/lang/Object;)V
   * 18 Weak Mutation 409: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:329 - DeleteField: _values[J
   * 19 Weak Mutation 414: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:329 - DeleteField: no_entry_valueJ
   * 20 Weak Mutation 415: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:329 - DeleteStatement: fill([JIIJ)V
   * 21 Weak Mutation 412: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:329 - ReplaceVariable no_entry_value -> serialVersionUID
   * 22 Weak Mutation 413: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:329 - InsertUnaryOp Negation
   * 23 Weak Mutation 403: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:328 - DeleteField: _set[Ljava/lang/Object;
   * 24 Weak Mutation 406: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:328 - ReplaceVariable FREE -> REMOVED
   * 25 Weak Mutation 407: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:328 - DeleteField: FREELjava/lang/Object;
   * 26 Weak Mutation 404: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:328 - ReplaceConstant - 0 -> 1
   * 27 Weak Mutation 405: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.clear()V:328 - DeleteField: _set[Ljava/lang/Object;
   */

  @Test
  public void test16()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 20, (float) 20, (-1351L));
      tObjectLongCustomHashMap0.clear();
      assertEquals((-1351L), tObjectLongCustomHashMap0.getNoEntryValue());
      assertEquals("{}", tObjectLongCustomHashMap0.toString());
  }

  //Test case number: 17
  /*
   * 147 covered goals:
   * 1 Weak Mutation 440: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable i -> j
   * 2 Weak Mutation 441: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp Negation of i
   * 3 Weak Mutation 442: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp IINC 1 i
   * 4 Weak Mutation 443: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp IINC -1 i
   * 5 Weak Mutation 444: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable REMOVED -> FREE
   * 6 Weak Mutation 445: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - DeleteField: REMOVEDLjava/lang/Object;
   * 7 Weak Mutation 446: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceComparisonOperator == -> !=
   * 8 Weak Mutation 438: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable k -> keys
   * 9 Weak Mutation 447: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable keys -> _set
   * 10 Weak Mutation 459: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp IINC -1 i
   * 11 Weak Mutation 458: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp IINC 1 i
   * 12 Weak Mutation 457: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp Negation of i
   * 13 Weak Mutation 456: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable i -> j
   * 14 Weak Mutation 454: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable k -> keys
   * 15 Weak Mutation 453: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable j -> i
   * 16 Weak Mutation 452: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp IINC -1 j
   * 17 Weak Mutation 451: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp IINC 1 j
   * 18 Weak Mutation 450: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp Negation of j
   * 19 Weak Mutation 449: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable j -> i
   * 20 Weak Mutation 448: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable keys -> k
   * 21 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L348 - false
   * 22 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;: I35 Branch 27 IF_ACMPEQ L348 - false
   * 23 Weak Mutation 171: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:195 - ReplaceVariable FREE -> REMOVED
   * 24 Weak Mutation 170: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:195 - DeleteField: _set[Ljava/lang/Object;
   * 25 Weak Mutation 169: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:194 - InsertUnaryOp IINC -1 newCapacity
   * 26 Weak Mutation 168: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:194 - InsertUnaryOp IINC 1 newCapacity
   * 27 Weak Mutation 175: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:196 - InsertUnaryOp Negation of newCapacity
   * 28 Weak Mutation 174: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:196 - ReplaceVariable newCapacity -> oldCapacity
   * 29 Weak Mutation 173: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:195 - DeleteStatement: fill([Ljava/lang/Object;Ljava/lang/Object;)V
   * 30 Weak Mutation 172: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:195 - DeleteField: FREELjava/lang/Object;
   * 31 Weak Mutation 163: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:188 - DeleteField: _set[Ljava/lang/Object;
   * 32 Weak Mutation 167: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:194 - InsertUnaryOp Negation of newCapacity
   * 33 Weak Mutation 166: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:194 - ReplaceVariable newCapacity -> oldCapacity
   * 34 Weak Mutation 165: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:192 - DeleteField: _values[J
   * 35 Weak Mutation 164: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:191 - DeleteField: _set[Ljava/lang/Object;
   * 36 Weak Mutation 186: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC -1 oldCapacity
   * 37 Weak Mutation 187: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> newCapacity
   * 38 Weak Mutation 184: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - InsertUnaryOp Negation of oldCapacity
   * 39 Weak Mutation 185: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC 1 oldCapacity
   * 40 Weak Mutation 190: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC 1 i
   * 41 Weak Mutation 191: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - InsertUnaryOp IINC -1 i
   * 42 Weak Mutation 188: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> oldCapacity
   * 43 Weak Mutation 189: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - InsertUnaryOp Negation of i
   * 44 Weak Mutation 178: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:197 - DeleteField: _values[J
   * 45 Weak Mutation 179: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:197 - ReplaceVariable no_entry_value -> serialVersionUID
   * 46 Weak Mutation 176: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:196 - InsertUnaryOp IINC 1 newCapacity
   * 47 Weak Mutation 177: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:196 - InsertUnaryOp IINC -1 newCapacity
   * 48 Weak Mutation 182: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:197 - DeleteStatement: fill([JJ)V
   * 49 Weak Mutation 183: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - ReplaceVariable oldCapacity -> newCapacity
   * 50 Weak Mutation 180: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:197 - InsertUnaryOp Negation
   * 51 Weak Mutation 181: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:197 - DeleteField: no_entry_valueJ
   * 52 Weak Mutation 205: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - ReplaceVariable FREE -> REMOVED
   * 53 Weak Mutation 204: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - ReplaceVariable o -> REMOVED
   * 54 Weak Mutation 207: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - ReplaceComparisonOperator == -> !=
   * 55 Weak Mutation 206: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - DeleteField: FREELjava/lang/Object;
   * 56 Weak Mutation 201: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:200 - InsertUnaryOp IINC 1 i
   * 57 Weak Mutation 200: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:200 - InsertUnaryOp Negation of i
   * 58 Weak Mutation 203: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - ReplaceVariable o -> FREE
   * 59 Weak Mutation 202: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:200 - InsertUnaryOp IINC -1 i
   * 60 Weak Mutation 197: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:200 - ReplaceVariable oldKeys -> _set
   * 61 Weak Mutation 196: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - ReplaceComparisonOperator <= -> -1
   * 62 Weak Mutation 199: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:200 - ReplaceVariable i -> oldCapacity
   * 63 Weak Mutation 198: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:200 - ReplaceVariable i -> newCapacity
   * 64 Weak Mutation 193: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> oldCapacity
   * 65 Weak Mutation 192: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - ReplaceVariable i -> newCapacity
   * 66 Weak Mutation 195: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:199 - ReplaceComparisonOperator <= -> <
   * 67 Weak Mutation 220: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:203 - InsertUnaryOp IINC 1 index
   * 68 Weak Mutation 221: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:203 - InsertUnaryOp IINC -1 index
   * 69 Weak Mutation 222: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:203 - ReplaceComparisonOperator >= -> ==
   * 70 Weak Mutation 216: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:203 - ReplaceVariable index -> newCapacity
   * 71 Weak Mutation 217: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:203 - ReplaceVariable index -> oldCapacity
   * 72 Weak Mutation 218: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:203 - ReplaceVariable index -> i
   * 73 Weak Mutation 219: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:203 - InsertUnaryOp Negation of index
   * 74 Weak Mutation 212: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - ReplaceComparisonOperator == -> !=
   * 75 Weak Mutation 213: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:202 - ReplaceVariable o -> FREE
   * 76 Weak Mutation 214: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:202 - ReplaceVariable o -> REMOVED
   * 77 Weak Mutation 215: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:202 - DeleteStatement: insertKey(Ljava/lang/Object;)I
   * 78 Weak Mutation 208: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - ReplaceVariable o -> FREE
   * 79 Weak Mutation 209: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - ReplaceVariable o -> REMOVED
   * 80 Weak Mutation 210: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - ReplaceVariable REMOVED -> FREE
   * 81 Weak Mutation 211: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.rehash(I)V:201 - DeleteField: REMOVEDLjava/lang/Object;
   * 82 Weak Mutation 328: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:266 - DeleteField: no_entry_valueJ
   * 83 Weak Mutation 432: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp Negation of i
   * 84 Weak Mutation 433: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp IINC 1 i
   * 85 Weak Mutation 434: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp IINC -1 i
   * 86 Weak Mutation 435: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable FREE -> REMOVED
   * 87 Weak Mutation 436: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - DeleteField: FREELjava/lang/Object;
   * 88 Weak Mutation 437: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceComparisonOperator == -> !=
   * 89 Weak Mutation 425: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceVariable i -> j
   * 90 Weak Mutation 424: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:347 - InsertUnaryOp IINC -1 i
   * 91 Weak Mutation 427: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceComparisonOperator <= -> <
   * 92 Weak Mutation 429: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable k -> keys
   * 93 Weak Mutation 428: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceComparisonOperator <= -> -1
   * 94 Weak Mutation 431: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable i -> j
   * 95 Weak Mutation 417: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:345 - DeleteField: _set[Ljava/lang/Object;
   * 96 Weak Mutation 416: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:344 - DeleteStatement: size()I
   * 97 Weak Mutation 418: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceVariable k -> keys
   * 98 Weak Mutation 421: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceVariable i -> j
   * 99 Weak Mutation 420: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceConstant - 0 -> 1
   * 100 Weak Mutation 423: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:347 - InsertUnaryOp IINC 1 i
   * 101 Weak Mutation 422: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:347 - InsertUnaryOp Negation of i
   * 102 Weak Mutation 461: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:353 - ReplaceVariable keys -> k
   * 103 Weak Mutation 460: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:353 - ReplaceVariable keys -> _set
   * 104 Weak Mutation 440: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable i -> j
   * 105 Weak Mutation 441: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp Negation of i
   * 106 Weak Mutation 442: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp IINC 1 i
   * 107 Weak Mutation 443: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp IINC -1 i
   * 108 Weak Mutation 444: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable REMOVED -> FREE
   * 109 Weak Mutation 445: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - DeleteField: REMOVEDLjava/lang/Object;
   * 110 Weak Mutation 446: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceComparisonOperator == -> !=
   * 111 Weak Mutation 447: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable keys -> _set
   * 112 Weak Mutation 432: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp Negation of i
   * 113 Weak Mutation 433: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp IINC 1 i
   * 114 Weak Mutation 434: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - InsertUnaryOp IINC -1 i
   * 115 Weak Mutation 435: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable FREE -> REMOVED
   * 116 Weak Mutation 436: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - DeleteField: FREELjava/lang/Object;
   * 117 Weak Mutation 437: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceComparisonOperator == -> !=
   * 118 Weak Mutation 438: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable k -> keys
   * 119 Weak Mutation 425: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceVariable i -> j
   * 120 Weak Mutation 424: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:347 - InsertUnaryOp IINC -1 i
   * 121 Weak Mutation 427: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceComparisonOperator <= -> <
   * 122 Weak Mutation 429: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable k -> keys
   * 123 Weak Mutation 428: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceComparisonOperator <= -> -1
   * 124 Weak Mutation 431: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:348 - ReplaceVariable i -> j
   * 125 Weak Mutation 417: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:345 - DeleteField: _set[Ljava/lang/Object;
   * 126 Weak Mutation 416: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:344 - DeleteStatement: size()I
   * 127 Weak Mutation 418: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceVariable k -> keys
   * 128 Weak Mutation 421: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceVariable i -> j
   * 129 Weak Mutation 420: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:347 - ReplaceConstant - 0 -> 1
   * 130 Weak Mutation 423: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:347 - InsertUnaryOp IINC 1 i
   * 131 Weak Mutation 422: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:347 - InsertUnaryOp Negation of i
   * 132 Weak Mutation 461: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:353 - ReplaceVariable keys -> k
   * 133 Weak Mutation 460: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:353 - ReplaceVariable keys -> _set
   * 134 Weak Mutation 459: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp IINC -1 i
   * 135 Weak Mutation 458: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp IINC 1 i
   * 136 Weak Mutation 457: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp Negation of i
   * 137 Weak Mutation 456: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable i -> j
   * 138 Weak Mutation 454: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable k -> keys
   * 139 Weak Mutation 453: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable j -> i
   * 140 Weak Mutation 452: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp IINC -1 j
   * 141 Weak Mutation 451: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp IINC 1 j
   * 142 Weak Mutation 450: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - InsertUnaryOp Negation of j
   * 143 Weak Mutation 449: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable j -> i
   * 144 Weak Mutation 448: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;:350 - ReplaceVariable keys -> k
   * 145 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L347 - true
   * 146 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L347 - false
   * 147 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L348 - true
   */

  @Test
  public void test17()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 37, (-2.4790292F), (long) 37);
      Long long0 = new Long((long) 37);
      tObjectLongCustomHashMap0.put(long0, (long) 37);
      tObjectLongCustomHashMap0.keys();
      assertEquals(7, tObjectLongCustomHashMap0.capacity());
      assertEquals("{37=37}", tObjectLongCustomHashMap0.toString());
  }

  //Test case number: 18
  /*
   * 62 covered goals:
   * 1 Weak Mutation 462: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:359 - DeleteStatement: size()I
   * 2 Weak Mutation 466: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - InsertUnaryOp IINC -1 size
   * 3 Weak Mutation 467: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - ReplaceComparisonOperator >= -> ==
   * 4 Weak Mutation 464: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - InsertUnaryOp Negation of size
   * 5 Weak Mutation 465: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - InsertUnaryOp IINC 1 size
   * 6 Weak Mutation 463: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - ReplaceVariable a -> _set
   * 7 Weak Mutation 477: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:366 - DeleteField: _set[Ljava/lang/Object;
   * 8 Weak Mutation 478: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable k -> a
   * 9 Weak Mutation 489: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceComparisonOperator <= -> <
   * 10 Weak Mutation 490: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceComparisonOperator <= -> -1
   * 11 Weak Mutation 485: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - InsertUnaryOp IINC -1 i
   * 12 Weak Mutation 484: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - InsertUnaryOp IINC 1 i
   * 13 Weak Mutation 487: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable i -> size
   * 14 Weak Mutation 486: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable i -> j
   * 15 Weak Mutation 481: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable i -> j
   * 16 Weak Mutation 480: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceConstant - 0 -> 1
   * 17 Weak Mutation 483: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - InsertUnaryOp Negation of i
   * 18 Weak Mutation 482: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable i -> size
   * 19 Weak Mutation 500: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceComparisonOperator == -> !=
   * 20 Weak Mutation 496: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - InsertUnaryOp IINC 1 i
   * 21 Weak Mutation 497: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - InsertUnaryOp IINC -1 i
   * 22 Weak Mutation 498: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable FREE -> REMOVED
   * 23 Weak Mutation 499: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - DeleteField: FREELjava/lang/Object;
   * 24 Weak Mutation 493: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable i -> j
   * 25 Weak Mutation 495: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - InsertUnaryOp Negation of i
   * 26 Weak Mutation 494: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable i -> size
   * 27 Weak Mutation 491: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable k -> a
   * 28 Weak Mutation 527: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:374 - ReplaceVariable a -> _set
   * 29 Weak Mutation 528: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:374 - ReplaceVariable a -> k
   * 30 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I10 Branch 28 IF_ICMPGE L360 - true
   * 31 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L368 - true
   * 32 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L368 - false
   * 33 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L369 - true
   * 34 Weak Mutation 478: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable k -> a
   * 35 Weak Mutation 477: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:366 - DeleteField: _set[Ljava/lang/Object;
   * 36 Weak Mutation 466: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - InsertUnaryOp IINC -1 size
   * 37 Weak Mutation 467: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - ReplaceComparisonOperator >= -> ==
   * 38 Weak Mutation 464: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - InsertUnaryOp Negation of size
   * 39 Weak Mutation 465: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - InsertUnaryOp IINC 1 size
   * 40 Weak Mutation 463: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - ReplaceVariable a -> _set
   * 41 Weak Mutation 462: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:359 - DeleteStatement: size()I
   * 42 Weak Mutation 500: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceComparisonOperator == -> !=
   * 43 Weak Mutation 496: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - InsertUnaryOp IINC 1 i
   * 44 Weak Mutation 497: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - InsertUnaryOp IINC -1 i
   * 45 Weak Mutation 498: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable FREE -> REMOVED
   * 46 Weak Mutation 499: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - DeleteField: FREELjava/lang/Object;
   * 47 Weak Mutation 493: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable i -> j
   * 48 Weak Mutation 495: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - InsertUnaryOp Negation of i
   * 49 Weak Mutation 494: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable i -> size
   * 50 Weak Mutation 489: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceComparisonOperator <= -> <
   * 51 Weak Mutation 491: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable k -> a
   * 52 Weak Mutation 490: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceComparisonOperator <= -> -1
   * 53 Weak Mutation 485: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - InsertUnaryOp IINC -1 i
   * 54 Weak Mutation 484: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - InsertUnaryOp IINC 1 i
   * 55 Weak Mutation 487: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable i -> size
   * 56 Weak Mutation 486: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable i -> j
   * 57 Weak Mutation 481: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable i -> j
   * 58 Weak Mutation 480: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceConstant - 0 -> 1
   * 59 Weak Mutation 483: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - InsertUnaryOp Negation of i
   * 60 Weak Mutation 482: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable i -> size
   * 61 Weak Mutation 527: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:374 - ReplaceVariable a -> _set
   * 62 Weak Mutation 528: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:374 - ReplaceVariable a -> k
   */

  @Test
  public void test18()  throws Throwable  {
      IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0);
      Long[] longArray0 = new Long[2];
      Long[] longArray1 = tObjectLongCustomHashMap0.keys(longArray0);
      assertSame(longArray1, longArray0);
      assertNotNull(longArray1);
      assertEquals(23, tObjectLongCustomHashMap0.capacity());
  }

  //Test case number: 19
  /*
   * 95 covered goals:
   * 1 Weak Mutation 469: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - ReplaceComparisonOperator >= -> -1
   * 2 Weak Mutation 476: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:362 - DeleteStatement: newInstance(Ljava/lang/Class;I)Ljava/lang/Object;
   * 3 Weak Mutation 474: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:362 - InsertUnaryOp IINC 1 size
   * 4 Weak Mutation 475: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:362 - InsertUnaryOp IINC -1 size
   * 5 Weak Mutation 472: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:362 - DeleteStatement: getComponentType()Ljava/lang/Class;
   * 6 Weak Mutation 473: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:362 - InsertUnaryOp Negation of size
   * 7 Weak Mutation 470: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:362 - ReplaceVariable a -> _set
   * 8 Weak Mutation 471: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:362 - DeleteStatement: getClass()Ljava/lang/Class;
   * 9 Weak Mutation 508: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable REMOVED -> FREE
   * 10 Weak Mutation 509: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - DeleteField: REMOVEDLjava/lang/Object;
   * 11 Weak Mutation 510: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceComparisonOperator == -> !=
   * 12 Weak Mutation 504: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable i -> size
   * 13 Weak Mutation 505: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - InsertUnaryOp Negation of i
   * 14 Weak Mutation 506: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - InsertUnaryOp IINC 1 i
   * 15 Weak Mutation 507: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - InsertUnaryOp IINC -1 i
   * 16 Weak Mutation 501: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable k -> a
   * 17 Weak Mutation 503: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable i -> j
   * 18 Weak Mutation 511: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - ReplaceVariable a -> _set
   * 19 Weak Mutation 516: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - InsertUnaryOp IINC 1 j
   * 20 Weak Mutation 517: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - InsertUnaryOp IINC -1 j
   * 21 Weak Mutation 518: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - ReplaceVariable j -> i
   * 22 Weak Mutation 519: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - ReplaceVariable j -> size
   * 23 Weak Mutation 512: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - ReplaceVariable a -> k
   * 24 Weak Mutation 513: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - ReplaceVariable j -> i
   * 25 Weak Mutation 514: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - ReplaceVariable j -> size
   * 26 Weak Mutation 515: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - InsertUnaryOp Negation of j
   * 27 Weak Mutation 524: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - InsertUnaryOp Negation of i
   * 28 Weak Mutation 525: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - InsertUnaryOp IINC 1 i
   * 29 Weak Mutation 526: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - InsertUnaryOp IINC -1 i
   * 30 Weak Mutation 520: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - ReplaceVariable k -> a
   * 31 Weak Mutation 522: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - ReplaceVariable i -> j
   * 32 Weak Mutation 523: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - ReplaceVariable i -> size
   * 33 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I10 Branch 28 IF_ICMPGE L360 - false
   * 34 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L369 - false
   * 35 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I49 Branch 31 IF_ACMPEQ L369 - false
   * 36 Weak Mutation 478: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable k -> a
   * 37 Weak Mutation 477: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:366 - DeleteField: _set[Ljava/lang/Object;
   * 38 Weak Mutation 466: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - InsertUnaryOp IINC -1 size
   * 39 Weak Mutation 464: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - InsertUnaryOp Negation of size
   * 40 Weak Mutation 465: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - InsertUnaryOp IINC 1 size
   * 41 Weak Mutation 463: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - ReplaceVariable a -> _set
   * 42 Weak Mutation 462: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:359 - DeleteStatement: size()I
   * 43 Weak Mutation 500: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceComparisonOperator == -> !=
   * 44 Weak Mutation 496: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - InsertUnaryOp IINC 1 i
   * 45 Weak Mutation 497: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - InsertUnaryOp IINC -1 i
   * 46 Weak Mutation 498: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable FREE -> REMOVED
   * 47 Weak Mutation 499: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - DeleteField: FREELjava/lang/Object;
   * 48 Weak Mutation 493: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable i -> j
   * 49 Weak Mutation 495: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - InsertUnaryOp Negation of i
   * 50 Weak Mutation 494: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable i -> size
   * 51 Weak Mutation 489: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceComparisonOperator <= -> <
   * 52 Weak Mutation 491: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable k -> a
   * 53 Weak Mutation 490: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceComparisonOperator <= -> -1
   * 54 Weak Mutation 485: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - InsertUnaryOp IINC -1 i
   * 55 Weak Mutation 484: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - InsertUnaryOp IINC 1 i
   * 56 Weak Mutation 487: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable i -> size
   * 57 Weak Mutation 486: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable i -> j
   * 58 Weak Mutation 481: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable i -> j
   * 59 Weak Mutation 480: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceConstant - 0 -> 1
   * 60 Weak Mutation 483: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - InsertUnaryOp Negation of i
   * 61 Weak Mutation 482: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:368 - ReplaceVariable i -> size
   * 62 Weak Mutation 527: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:374 - ReplaceVariable a -> _set
   * 63 Weak Mutation 528: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:374 - ReplaceVariable a -> k
   * 64 Weak Mutation 476: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:362 - DeleteStatement: newInstance(Ljava/lang/Class;I)Ljava/lang/Object;
   * 65 Weak Mutation 474: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:362 - InsertUnaryOp IINC 1 size
   * 66 Weak Mutation 475: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:362 - InsertUnaryOp IINC -1 size
   * 67 Weak Mutation 472: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:362 - DeleteStatement: getComponentType()Ljava/lang/Class;
   * 68 Weak Mutation 473: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:362 - InsertUnaryOp Negation of size
   * 69 Weak Mutation 470: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:362 - ReplaceVariable a -> _set
   * 70 Weak Mutation 471: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:362 - DeleteStatement: getClass()Ljava/lang/Class;
   * 71 Weak Mutation 469: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:360 - ReplaceComparisonOperator >= -> -1
   * 72 Weak Mutation 508: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable REMOVED -> FREE
   * 73 Weak Mutation 509: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - DeleteField: REMOVEDLjava/lang/Object;
   * 74 Weak Mutation 510: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceComparisonOperator == -> !=
   * 75 Weak Mutation 511: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - ReplaceVariable a -> _set
   * 76 Weak Mutation 504: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable i -> size
   * 77 Weak Mutation 505: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - InsertUnaryOp Negation of i
   * 78 Weak Mutation 506: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - InsertUnaryOp IINC 1 i
   * 79 Weak Mutation 507: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - InsertUnaryOp IINC -1 i
   * 80 Weak Mutation 501: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable k -> a
   * 81 Weak Mutation 503: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:369 - ReplaceVariable i -> j
   * 82 Weak Mutation 516: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - InsertUnaryOp IINC 1 j
   * 83 Weak Mutation 517: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - InsertUnaryOp IINC -1 j
   * 84 Weak Mutation 518: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - ReplaceVariable j -> i
   * 85 Weak Mutation 519: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - ReplaceVariable j -> size
   * 86 Weak Mutation 512: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - ReplaceVariable a -> k
   * 87 Weak Mutation 513: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - ReplaceVariable j -> i
   * 88 Weak Mutation 514: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - ReplaceVariable j -> size
   * 89 Weak Mutation 515: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - InsertUnaryOp Negation of j
   * 90 Weak Mutation 524: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - InsertUnaryOp Negation of i
   * 91 Weak Mutation 525: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - InsertUnaryOp IINC 1 i
   * 92 Weak Mutation 526: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - InsertUnaryOp IINC -1 i
   * 93 Weak Mutation 520: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - ReplaceVariable k -> a
   * 94 Weak Mutation 522: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - ReplaceVariable i -> j
   * 95 Weak Mutation 523: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:371 - ReplaceVariable i -> size
   */

//   @Test
//   public void test19()  throws Throwable  {
//       IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
//       TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0);
//       tObjectLongCustomHashMap0.adjustOrPutValue((Long) (-1006L), (-1006L), 0L);
//       tObjectLongCustomHashMap0.adjustOrPutValue((Long) (-1137L), (-1137L), 1943L);
//       Long[] longArray0 = new Long[2];
//       tObjectLongCustomHashMap0.adjustOrPutValue((Long) 0L, 920L, 0L);
//       tObjectLongCustomHashMap0.keys(longArray0);
//       assertEquals(false, tObjectLongCustomHashMap0.isEmpty());
//       assertEquals("{-1006=0,-1137=1943,0=0}", tObjectLongCustomHashMap0.toString());
//   }

  //Test case number: 20
  /*
   * 59 covered goals:
   * 1 Weak Mutation 551: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - ReplaceVariable i -> j
   * 2 Weak Mutation 556: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - DeleteField: REMOVEDLjava/lang/Object;
   * 3 Weak Mutation 557: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - ReplaceComparisonOperator == -> !=
   * 4 Weak Mutation 554: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - InsertUnaryOp IINC -1 i
   * 5 Weak Mutation 555: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - ReplaceVariable REMOVED -> FREE
   * 6 Weak Mutation 552: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - InsertUnaryOp Negation of i
   * 7 Weak Mutation 553: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - InsertUnaryOp IINC 1 i
   * 8 Weak Mutation 558: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - ReplaceVariable vals -> v
   * 9 Weak Mutation 559: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - ReplaceVariable j -> i
   * 10 Weak Mutation 567: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - InsertUnaryOp IINC 1 i
   * 11 Weak Mutation 566: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - InsertUnaryOp Negation of i
   * 12 Weak Mutation 564: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - ReplaceVariable v -> vals
   * 13 Weak Mutation 563: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - ReplaceVariable j -> i
   * 14 Weak Mutation 562: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - InsertUnaryOp IINC -1 j
   * 15 Weak Mutation 561: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - InsertUnaryOp IINC 1 j
   * 16 Weak Mutation 560: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - InsertUnaryOp Negation of j
   * 17 Weak Mutation 568: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - InsertUnaryOp IINC -1 i
   * 18 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J: I34 Branch 33 IF_ACMPEQ L391 - false
   * 19 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J: I39 Branch 34 IF_ACMPEQ L391 - false
   * 20 Weak Mutation 551: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - ReplaceVariable i -> j
   * 21 Weak Mutation 548: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - DeleteField: FREELjava/lang/Object;
   * 22 Weak Mutation 549: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - ReplaceComparisonOperator == -> !=
   * 23 Weak Mutation 546: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - InsertUnaryOp IINC -1 i
   * 24 Weak Mutation 547: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - ReplaceVariable FREE -> REMOVED
   * 25 Weak Mutation 544: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - InsertUnaryOp Negation of i
   * 26 Weak Mutation 545: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - InsertUnaryOp IINC 1 i
   * 27 Weak Mutation 558: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - ReplaceVariable vals -> v
   * 28 Weak Mutation 559: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - ReplaceVariable j -> i
   * 29 Weak Mutation 556: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - DeleteField: REMOVEDLjava/lang/Object;
   * 30 Weak Mutation 557: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - ReplaceComparisonOperator == -> !=
   * 31 Weak Mutation 554: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - InsertUnaryOp IINC -1 i
   * 32 Weak Mutation 555: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - ReplaceVariable REMOVED -> FREE
   * 33 Weak Mutation 552: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - InsertUnaryOp Negation of i
   * 34 Weak Mutation 553: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - InsertUnaryOp IINC 1 i
   * 35 Weak Mutation 567: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - InsertUnaryOp IINC 1 i
   * 36 Weak Mutation 566: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - InsertUnaryOp Negation of i
   * 37 Weak Mutation 564: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - ReplaceVariable v -> vals
   * 38 Weak Mutation 563: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - ReplaceVariable j -> i
   * 39 Weak Mutation 562: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - InsertUnaryOp IINC -1 j
   * 40 Weak Mutation 561: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - InsertUnaryOp IINC 1 j
   * 41 Weak Mutation 560: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - InsertUnaryOp Negation of j
   * 42 Weak Mutation 569: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:395 - ReplaceVariable vals -> v
   * 43 Weak Mutation 568: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - InsertUnaryOp IINC -1 i
   * 44 Weak Mutation 533: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:390 - ReplaceConstant - 0 -> 1
   * 45 Weak Mutation 532: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:390 - ReplaceVariable v -> vals
   * 46 Weak Mutation 535: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:390 - InsertUnaryOp Negation of i
   * 47 Weak Mutation 534: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:390 - ReplaceVariable i -> j
   * 48 Weak Mutation 529: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:386 - DeleteStatement: size()I
   * 49 Weak Mutation 531: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:388 - DeleteField: _set[Ljava/lang/Object;
   * 50 Weak Mutation 530: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:387 - DeleteField: _values[J
   * 51 Weak Mutation 541: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:390 - ReplaceComparisonOperator <= -> -1
   * 52 Weak Mutation 540: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:390 - ReplaceComparisonOperator <= -> <
   * 53 Weak Mutation 543: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - ReplaceVariable i -> j
   * 54 Weak Mutation 537: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:390 - InsertUnaryOp IINC -1 i
   * 55 Weak Mutation 536: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:390 - InsertUnaryOp IINC 1 i
   * 56 Weak Mutation 538: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:390 - ReplaceVariable i -> j
   * 57 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J: I27 Branch 32 IFLE L390 - true
   * 58 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J: I27 Branch 32 IFLE L390 - false
   * 59 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J: I34 Branch 33 IF_ACMPEQ L391 - true
   */

  @Test
  public void test20()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 0, 1125.4912F, (-70L));
      tObjectLongCustomHashMap0.adjustOrPutValue((Long) 1388L, 1388L, 1388L);
      tObjectLongCustomHashMap0.values();
      assertEquals(1, tObjectLongCustomHashMap0.size());
      assertEquals("{1388=1388}", tObjectLongCustomHashMap0.toString());
  }

  //Test case number: 21
  /*
   * 17 covered goals:
   * 1 Weak Mutation 565: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - ReplaceVariable i -> j
   * 2 Weak Mutation 558: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - ReplaceVariable vals -> v
   * 3 Weak Mutation 556: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - DeleteField: REMOVEDLjava/lang/Object;
   * 4 Weak Mutation 557: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - ReplaceComparisonOperator == -> !=
   * 5 Weak Mutation 554: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - InsertUnaryOp IINC -1 i
   * 6 Weak Mutation 555: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - ReplaceVariable REMOVED -> FREE
   * 7 Weak Mutation 552: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - InsertUnaryOp Negation of i
   * 8 Weak Mutation 553: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - InsertUnaryOp IINC 1 i
   * 9 Weak Mutation 567: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - InsertUnaryOp IINC 1 i
   * 10 Weak Mutation 566: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - InsertUnaryOp Negation of i
   * 11 Weak Mutation 564: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - ReplaceVariable v -> vals
   * 12 Weak Mutation 563: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - ReplaceVariable j -> i
   * 13 Weak Mutation 562: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - InsertUnaryOp IINC -1 j
   * 14 Weak Mutation 561: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - InsertUnaryOp IINC 1 j
   * 15 Weak Mutation 560: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - InsertUnaryOp Negation of j
   * 16 Weak Mutation 568: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - InsertUnaryOp IINC -1 i
   * 17 Weak Mutation 565: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:392 - ReplaceVariable i -> j
   */

  @Test
  public void test21()  throws Throwable  {
      IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, (-1521));
      tObjectLongCustomHashMap0.adjustOrPutValue((Long) null, (long) 0, (long) 0);
      tObjectLongCustomHashMap0.values();
      assertEquals(1, tObjectLongCustomHashMap0.size());
      assertEquals(3, tObjectLongCustomHashMap0.capacity());
  }

  //Test case number: 22
  /*
   * 89 covered goals:
   * 1 Weak Mutation 570: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:401 - DeleteStatement: size()I
   * 2 Weak Mutation 575: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:402 - ReplaceComparisonOperator >= -> >
   * 3 Weak Mutation 573: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:402 - InsertUnaryOp IINC -1 size
   * 4 Weak Mutation 572: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:402 - InsertUnaryOp IINC 1 size
   * 5 Weak Mutation 571: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:402 - InsertUnaryOp Negation of size
   * 6 Weak Mutation 580: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:406 - DeleteField: _values[J
   * 7 Weak Mutation 581: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:407 - DeleteField: _set[Ljava/lang/Object;
   * 8 Weak Mutation 582: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceVariable v -> array
   * 9 Weak Mutation 583: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceConstant - 0 -> 1
   * 10 Weak Mutation 584: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceVariable i -> j
   * 11 Weak Mutation 585: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceVariable i -> size
   * 12 Weak Mutation 586: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - InsertUnaryOp Negation of i
   * 13 Weak Mutation 587: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - InsertUnaryOp IINC 1 i
   * 14 Weak Mutation 588: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - InsertUnaryOp IINC -1 i
   * 15 Weak Mutation 589: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceVariable i -> j
   * 16 Weak Mutation 590: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceVariable i -> size
   * 17 Weak Mutation 593: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceComparisonOperator <= -> -1
   * 18 Weak Mutation 592: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceComparisonOperator <= -> <
   * 19 Weak Mutation 595: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - ReplaceVariable i -> j
   * 20 Weak Mutation 597: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - InsertUnaryOp Negation of i
   * 21 Weak Mutation 596: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - ReplaceVariable i -> size
   * 22 Weak Mutation 599: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - InsertUnaryOp IINC -1 i
   * 23 Weak Mutation 598: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - InsertUnaryOp IINC 1 i
   * 24 Weak Mutation 601: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - DeleteField: FREELjava/lang/Object;
   * 25 Weak Mutation 600: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - ReplaceVariable FREE -> REMOVED
   * 26 Weak Mutation 602: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - ReplaceComparisonOperator == -> !=
   * 27 Weak Mutation 627: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:414 - InsertUnaryOp Negation of size
   * 28 Weak Mutation 626: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:414 - ReplaceVariable array -> v
   * 29 Weak Mutation 631: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:414 - ReplaceComparisonOperator <= -> <
   * 30 Weak Mutation 629: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:414 - InsertUnaryOp IINC -1 size
   * 31 Weak Mutation 628: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:414 - InsertUnaryOp IINC 1 size
   * 32 Weak Mutation 640: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:417 - ReplaceVariable array -> v
   * 33 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J: I10 Branch 35 IF_ICMPGE L402 - true
   * 34 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J: I37 Branch 36 IFLE L409 - true
   * 35 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J: I37 Branch 36 IFLE L409 - false
   * 36 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J: I44 Branch 37 IF_ACMPEQ L410 - true
   * 37 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J: I65 Branch 39 IF_ICMPLE L414 - true
   * 38 Weak Mutation 548: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - DeleteField: FREELjava/lang/Object;
   * 39 Weak Mutation 549: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - ReplaceComparisonOperator == -> !=
   * 40 Weak Mutation 546: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - InsertUnaryOp IINC -1 i
   * 41 Weak Mutation 547: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - ReplaceVariable FREE -> REMOVED
   * 42 Weak Mutation 544: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - InsertUnaryOp Negation of i
   * 43 Weak Mutation 545: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - InsertUnaryOp IINC 1 i
   * 44 Weak Mutation 569: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:395 - ReplaceVariable vals -> v
   * 45 Weak Mutation 533: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:390 - ReplaceConstant - 0 -> 1
   * 46 Weak Mutation 532: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:390 - ReplaceVariable v -> vals
   * 47 Weak Mutation 535: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:390 - InsertUnaryOp Negation of i
   * 48 Weak Mutation 534: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:390 - ReplaceVariable i -> j
   * 49 Weak Mutation 529: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:386 - DeleteStatement: size()I
   * 50 Weak Mutation 531: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:388 - DeleteField: _set[Ljava/lang/Object;
   * 51 Weak Mutation 530: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:387 - DeleteField: _values[J
   * 52 Weak Mutation 541: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:390 - ReplaceComparisonOperator <= -> -1
   * 53 Weak Mutation 540: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:390 - ReplaceComparisonOperator <= -> <
   * 54 Weak Mutation 543: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:391 - ReplaceVariable i -> j
   * 55 Weak Mutation 537: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:390 - InsertUnaryOp IINC -1 i
   * 56 Weak Mutation 536: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:390 - InsertUnaryOp IINC 1 i
   * 57 Weak Mutation 538: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values()[J:390 - ReplaceVariable i -> j
   * 58 Weak Mutation 575: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:402 - ReplaceComparisonOperator >= -> >
   * 59 Weak Mutation 573: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:402 - InsertUnaryOp IINC -1 size
   * 60 Weak Mutation 572: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:402 - InsertUnaryOp IINC 1 size
   * 61 Weak Mutation 571: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:402 - InsertUnaryOp Negation of size
   * 62 Weak Mutation 570: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:401 - DeleteStatement: size()I
   * 63 Weak Mutation 627: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:414 - InsertUnaryOp Negation of size
   * 64 Weak Mutation 626: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:414 - ReplaceVariable array -> v
   * 65 Weak Mutation 631: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:414 - ReplaceComparisonOperator <= -> <
   * 66 Weak Mutation 629: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:414 - InsertUnaryOp IINC -1 size
   * 67 Weak Mutation 628: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:414 - InsertUnaryOp IINC 1 size
   * 68 Weak Mutation 580: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:406 - DeleteField: _values[J
   * 69 Weak Mutation 581: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:407 - DeleteField: _set[Ljava/lang/Object;
   * 70 Weak Mutation 582: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceVariable v -> array
   * 71 Weak Mutation 583: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceConstant - 0 -> 1
   * 72 Weak Mutation 584: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceVariable i -> j
   * 73 Weak Mutation 585: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceVariable i -> size
   * 74 Weak Mutation 586: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - InsertUnaryOp Negation of i
   * 75 Weak Mutation 587: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - InsertUnaryOp IINC 1 i
   * 76 Weak Mutation 588: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - InsertUnaryOp IINC -1 i
   * 77 Weak Mutation 589: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceVariable i -> j
   * 78 Weak Mutation 590: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceVariable i -> size
   * 79 Weak Mutation 593: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceComparisonOperator <= -> -1
   * 80 Weak Mutation 592: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceComparisonOperator <= -> <
   * 81 Weak Mutation 595: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - ReplaceVariable i -> j
   * 82 Weak Mutation 597: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - InsertUnaryOp Negation of i
   * 83 Weak Mutation 596: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - ReplaceVariable i -> size
   * 84 Weak Mutation 599: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - InsertUnaryOp IINC -1 i
   * 85 Weak Mutation 598: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - InsertUnaryOp IINC 1 i
   * 86 Weak Mutation 601: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - DeleteField: FREELjava/lang/Object;
   * 87 Weak Mutation 600: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - ReplaceVariable FREE -> REMOVED
   * 88 Weak Mutation 602: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - ReplaceComparisonOperator == -> !=
   * 89 Weak Mutation 640: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:417 - ReplaceVariable array -> v
   */

  @Test
  public void test22()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      long[] longArray0 = tObjectLongCustomHashMap0.values();
      assertNotNull(longArray0);
      
      long[] longArray1 = tObjectLongCustomHashMap0.values(longArray0);
      assertNotNull(longArray1);
      assertEquals(23, tObjectLongCustomHashMap0.capacity());
      assertSame(longArray1, longArray0);
  }

  //Test case number: 23
  /*
   * 19 covered goals:
   * 1 Weak Mutation 574: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:402 - ReplaceComparisonOperator >= -> ==
   * 2 Weak Mutation 632: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:414 - ReplaceComparisonOperator <= -> -1
   * 3 Weak Mutation 635: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:415 - InsertUnaryOp IINC 1 size
   * 4 Weak Mutation 634: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:415 - InsertUnaryOp Negation of size
   * 5 Weak Mutation 633: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:415 - ReplaceVariable array -> v
   * 6 Weak Mutation 639: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:415 - DeleteField: no_entry_valueJ
   * 7 Weak Mutation 638: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:415 - InsertUnaryOp Negation
   * 8 Weak Mutation 637: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:415 - ReplaceVariable no_entry_value -> serialVersionUID
   * 9 Weak Mutation 636: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:415 - InsertUnaryOp IINC -1 size
   * 10 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J: I65 Branch 39 IF_ICMPLE L414 - false
   * 11 Weak Mutation 574: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:402 - ReplaceComparisonOperator >= -> ==
   * 12 Weak Mutation 635: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:415 - InsertUnaryOp IINC 1 size
   * 13 Weak Mutation 634: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:415 - InsertUnaryOp Negation of size
   * 14 Weak Mutation 633: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:415 - ReplaceVariable array -> v
   * 15 Weak Mutation 632: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:414 - ReplaceComparisonOperator <= -> -1
   * 16 Weak Mutation 639: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:415 - DeleteField: no_entry_valueJ
   * 17 Weak Mutation 638: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:415 - InsertUnaryOp Negation
   * 18 Weak Mutation 637: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:415 - ReplaceVariable no_entry_value -> serialVersionUID
   * 19 Weak Mutation 636: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:415 - InsertUnaryOp IINC -1 size
   */

  @Test
  public void test23()  throws Throwable  {
      TObjectLongCustomHashMap<String> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<String>((HashingStrategy<? super String>) null, 159, (float) 159, (long) 159);
      long[] longArray0 = new long[8];
      long[] longArray1 = tObjectLongCustomHashMap0.values(longArray0);
      assertSame(longArray1, longArray0);
      assertNotNull(longArray1);
      assertEquals(159L, tObjectLongCustomHashMap0.getNoEntryValue());
  }

  //Test case number: 24
  /*
   * 86 covered goals:
   * 1 Weak Mutation 576: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:402 - ReplaceComparisonOperator >= -> -1
   * 2 Weak Mutation 577: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:403 - InsertUnaryOp Negation of size
   * 3 Weak Mutation 578: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:403 - InsertUnaryOp IINC 1 size
   * 4 Weak Mutation 579: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:403 - InsertUnaryOp IINC -1 size
   * 5 Weak Mutation 610: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - DeleteField: REMOVEDLjava/lang/Object;
   * 6 Weak Mutation 611: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - ReplaceComparisonOperator == -> !=
   * 7 Weak Mutation 608: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - InsertUnaryOp IINC -1 i
   * 8 Weak Mutation 609: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - ReplaceVariable REMOVED -> FREE
   * 9 Weak Mutation 605: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - ReplaceVariable i -> size
   * 10 Weak Mutation 604: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - ReplaceVariable i -> j
   * 11 Weak Mutation 607: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - InsertUnaryOp IINC 1 i
   * 12 Weak Mutation 606: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - InsertUnaryOp Negation of i
   * 13 Weak Mutation 614: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - ReplaceVariable j -> size
   * 14 Weak Mutation 615: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - InsertUnaryOp Negation of j
   * 15 Weak Mutation 612: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - ReplaceVariable array -> v
   * 16 Weak Mutation 613: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - ReplaceVariable j -> i
   * 17 Weak Mutation 618: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - ReplaceVariable j -> i
   * 18 Weak Mutation 619: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - ReplaceVariable j -> size
   * 19 Weak Mutation 616: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - InsertUnaryOp IINC 1 j
   * 20 Weak Mutation 617: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - InsertUnaryOp IINC -1 j
   * 21 Weak Mutation 622: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - ReplaceVariable i -> size
   * 22 Weak Mutation 623: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - InsertUnaryOp Negation of i
   * 23 Weak Mutation 620: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - ReplaceVariable v -> array
   * 24 Weak Mutation 621: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - ReplaceVariable i -> j
   * 25 Weak Mutation 625: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - InsertUnaryOp IINC -1 i
   * 26 Weak Mutation 624: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - InsertUnaryOp IINC 1 i
   * 27 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J: I10 Branch 35 IF_ICMPGE L402 - false
   * 28 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J: I44 Branch 37 IF_ACMPEQ L410 - false
   * 29 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J: I49 Branch 38 IF_ACMPEQ L410 - false
   * 30 Weak Mutation 573: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:402 - InsertUnaryOp IINC -1 size
   * 31 Weak Mutation 572: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:402 - InsertUnaryOp IINC 1 size
   * 32 Weak Mutation 571: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:402 - InsertUnaryOp Negation of size
   * 33 Weak Mutation 570: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:401 - DeleteStatement: size()I
   * 34 Weak Mutation 627: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:414 - InsertUnaryOp Negation of size
   * 35 Weak Mutation 626: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:414 - ReplaceVariable array -> v
   * 36 Weak Mutation 631: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:414 - ReplaceComparisonOperator <= -> <
   * 37 Weak Mutation 629: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:414 - InsertUnaryOp IINC -1 size
   * 38 Weak Mutation 628: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:414 - InsertUnaryOp IINC 1 size
   * 39 Weak Mutation 580: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:406 - DeleteField: _values[J
   * 40 Weak Mutation 581: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:407 - DeleteField: _set[Ljava/lang/Object;
   * 41 Weak Mutation 582: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceVariable v -> array
   * 42 Weak Mutation 583: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceConstant - 0 -> 1
   * 43 Weak Mutation 584: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceVariable i -> j
   * 44 Weak Mutation 585: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceVariable i -> size
   * 45 Weak Mutation 586: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - InsertUnaryOp Negation of i
   * 46 Weak Mutation 587: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - InsertUnaryOp IINC 1 i
   * 47 Weak Mutation 588: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - InsertUnaryOp IINC -1 i
   * 48 Weak Mutation 589: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceVariable i -> j
   * 49 Weak Mutation 590: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceVariable i -> size
   * 50 Weak Mutation 593: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceComparisonOperator <= -> -1
   * 51 Weak Mutation 592: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:409 - ReplaceComparisonOperator <= -> <
   * 52 Weak Mutation 595: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - ReplaceVariable i -> j
   * 53 Weak Mutation 597: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - InsertUnaryOp Negation of i
   * 54 Weak Mutation 596: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - ReplaceVariable i -> size
   * 55 Weak Mutation 599: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - InsertUnaryOp IINC -1 i
   * 56 Weak Mutation 598: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - InsertUnaryOp IINC 1 i
   * 57 Weak Mutation 601: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - DeleteField: FREELjava/lang/Object;
   * 58 Weak Mutation 600: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - ReplaceVariable FREE -> REMOVED
   * 59 Weak Mutation 602: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - ReplaceComparisonOperator == -> !=
   * 60 Weak Mutation 640: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:417 - ReplaceVariable array -> v
   * 61 Weak Mutation 610: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - DeleteField: REMOVEDLjava/lang/Object;
   * 62 Weak Mutation 611: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - ReplaceComparisonOperator == -> !=
   * 63 Weak Mutation 608: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - InsertUnaryOp IINC -1 i
   * 64 Weak Mutation 609: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - ReplaceVariable REMOVED -> FREE
   * 65 Weak Mutation 614: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - ReplaceVariable j -> size
   * 66 Weak Mutation 615: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - InsertUnaryOp Negation of j
   * 67 Weak Mutation 612: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - ReplaceVariable array -> v
   * 68 Weak Mutation 613: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - ReplaceVariable j -> i
   * 69 Weak Mutation 618: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - ReplaceVariable j -> i
   * 70 Weak Mutation 619: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - ReplaceVariable j -> size
   * 71 Weak Mutation 616: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - InsertUnaryOp IINC 1 j
   * 72 Weak Mutation 617: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - InsertUnaryOp IINC -1 j
   * 73 Weak Mutation 622: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - ReplaceVariable i -> size
   * 74 Weak Mutation 623: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - InsertUnaryOp Negation of i
   * 75 Weak Mutation 620: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - ReplaceVariable v -> array
   * 76 Weak Mutation 621: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - ReplaceVariable i -> j
   * 77 Weak Mutation 625: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - InsertUnaryOp IINC -1 i
   * 78 Weak Mutation 624: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:411 - InsertUnaryOp IINC 1 i
   * 79 Weak Mutation 576: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:402 - ReplaceComparisonOperator >= -> -1
   * 80 Weak Mutation 577: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:403 - InsertUnaryOp Negation of size
   * 81 Weak Mutation 578: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:403 - InsertUnaryOp IINC 1 size
   * 82 Weak Mutation 579: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:403 - InsertUnaryOp IINC -1 size
   * 83 Weak Mutation 605: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - ReplaceVariable i -> size
   * 84 Weak Mutation 604: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - ReplaceVariable i -> j
   * 85 Weak Mutation 607: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - InsertUnaryOp IINC 1 i
   * 86 Weak Mutation 606: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.values([J)[J:410 - InsertUnaryOp Negation of i
   */

  @Test
  public void test24()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Object> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 1247);
      long[] longArray0 = new long[1];
      tObjectLongCustomHashMap0.adjustOrPutValue((Object) null, 0L, (long) 64);
      tObjectLongCustomHashMap0.put((Object) "\u7FA9\u5927\u5229\u6587", 5L);
      tObjectLongCustomHashMap0.values(longArray0);
      assertEquals(2, tObjectLongCustomHashMap0.size());
      assertEquals("{\u7FA9\u5927\u5229\u6587=5,null=64}", tObjectLongCustomHashMap0.toString());
  }

  //Test case number: 25
  /*
   * 30 covered goals:
   * 1 Weak Mutation 645: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceConstant - 1 -> 2
   * 2 Weak Mutation 644: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceConstant - 1 -> -1
   * 3 Weak Mutation 646: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.increment(Ljava/lang/Object;)Z:433 - DeleteStatement: adjustValue(Ljava/lang/Object;J)Z
   * 4 Weak Mutation 641: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceVariable key -> FREE
   * 5 Weak Mutation 643: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceConstant - 1 -> 0
   * 6 Weak Mutation 642: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceVariable key -> REMOVED
   * 7 Weak Mutation 649: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:439 - DeleteStatement: index(Ljava/lang/Object;)I
   * 8 Weak Mutation 648: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:439 - ReplaceVariable key -> REMOVED
   * 9 Weak Mutation 647: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:439 - ReplaceVariable key -> FREE
   * 10 Weak Mutation 652: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:440 - InsertUnaryOp IINC -1 index
   * 11 Weak Mutation 655: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:440 - ReplaceComparisonOperator >= -> -1
   * 12 Weak Mutation 651: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:440 - InsertUnaryOp IINC 1 index
   * 13 Weak Mutation 650: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:440 - InsertUnaryOp Negation of index
   * 14 Weak Mutation 656: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:441 - ReplaceConstant - 0 -> 1
   * 15 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.increment(Ljava/lang/Object;)Z: root-Branch
   * 16 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z: I9 Branch 40 IFGE L440 - false
   * 17 Weak Mutation 652: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:440 - InsertUnaryOp IINC -1 index
   * 18 Weak Mutation 655: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:440 - ReplaceComparisonOperator >= -> -1
   * 19 Weak Mutation 649: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:439 - DeleteStatement: index(Ljava/lang/Object;)I
   * 20 Weak Mutation 648: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:439 - ReplaceVariable key -> REMOVED
   * 21 Weak Mutation 651: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:440 - InsertUnaryOp IINC 1 index
   * 22 Weak Mutation 650: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:440 - InsertUnaryOp Negation of index
   * 23 Weak Mutation 645: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceConstant - 1 -> 2
   * 24 Weak Mutation 644: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceConstant - 1 -> -1
   * 25 Weak Mutation 647: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:439 - ReplaceVariable key -> FREE
   * 26 Weak Mutation 646: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.increment(Ljava/lang/Object;)Z:433 - DeleteStatement: adjustValue(Ljava/lang/Object;J)Z
   * 27 Weak Mutation 641: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceVariable key -> FREE
   * 28 Weak Mutation 643: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceConstant - 1 -> 0
   * 29 Weak Mutation 642: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceVariable key -> REMOVED
   * 30 Weak Mutation 656: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:441 - ReplaceConstant - 0 -> 1
   */

  @Test
  public void test25()  throws Throwable  {
      IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, (-1521));
      boolean boolean0 = tObjectLongCustomHashMap0.increment((Long) null);
      assertEquals(false, boolean0);
      assertEquals(3, tObjectLongCustomHashMap0.capacity());
  }

  //Test case number: 26
  /*
   * 21 covered goals:
   * 1 Weak Mutation 653: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:440 - ReplaceComparisonOperator >= -> ==
   * 2 Weak Mutation 664: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - ReplaceArithmeticOperator + -> %
   * 3 Weak Mutation 665: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - ReplaceArithmeticOperator + -> /
   * 4 Weak Mutation 660: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - InsertUnaryOp IINC -1 index
   * 5 Weak Mutation 661: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - ReplaceVariable amount -> serialVersionUID
   * 6 Weak Mutation 662: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - InsertUnaryOp Negation of amount
   * 7 Weak Mutation 657: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - DeleteField: _values[J
   * 8 Weak Mutation 658: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - InsertUnaryOp Negation of index
   * 9 Weak Mutation 659: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - InsertUnaryOp IINC 1 index
   * 10 Weak Mutation 667: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:444 - ReplaceConstant - 1 -> 0
   * 11 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z: I9 Branch 40 IFGE L440 - true
   * 12 Weak Mutation 653: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:440 - ReplaceComparisonOperator >= -> ==
   * 13 Weak Mutation 664: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - ReplaceArithmeticOperator + -> %
   * 14 Weak Mutation 665: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - ReplaceArithmeticOperator + -> /
   * 15 Weak Mutation 667: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:444 - ReplaceConstant - 1 -> 0
   * 16 Weak Mutation 660: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - InsertUnaryOp IINC -1 index
   * 17 Weak Mutation 661: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - ReplaceVariable amount -> serialVersionUID
   * 18 Weak Mutation 662: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - InsertUnaryOp Negation of amount
   * 19 Weak Mutation 657: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - DeleteField: _values[J
   * 20 Weak Mutation 658: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - InsertUnaryOp Negation of index
   * 21 Weak Mutation 659: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - InsertUnaryOp IINC 1 index
   */

  @Test
  public void test26()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      tObjectLongCustomHashMap0.putIfAbsent((Integer) 120, 0L);
      boolean boolean0 = tObjectLongCustomHashMap0.adjustValue((Integer) 120, 0L);
      assertEquals(false, tObjectLongCustomHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 27
  /*
   * 26 covered goals:
   * 1 Weak Mutation 654: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:440 - ReplaceComparisonOperator >= -> >
   * 2 Weak Mutation 666: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - ReplaceArithmeticOperator + -> *
   * 3 Weak Mutation 663: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - ReplaceArithmeticOperator + -> -
   * 4 Weak Mutation 652: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:440 - InsertUnaryOp IINC -1 index
   * 5 Weak Mutation 649: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:439 - DeleteStatement: index(Ljava/lang/Object;)I
   * 6 Weak Mutation 648: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:439 - ReplaceVariable key -> REMOVED
   * 7 Weak Mutation 651: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:440 - InsertUnaryOp IINC 1 index
   * 8 Weak Mutation 650: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:440 - InsertUnaryOp Negation of index
   * 9 Weak Mutation 645: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceConstant - 1 -> 2
   * 10 Weak Mutation 644: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceConstant - 1 -> -1
   * 11 Weak Mutation 647: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:439 - ReplaceVariable key -> FREE
   * 12 Weak Mutation 646: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.increment(Ljava/lang/Object;)Z:433 - DeleteStatement: adjustValue(Ljava/lang/Object;J)Z
   * 13 Weak Mutation 641: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceVariable key -> FREE
   * 14 Weak Mutation 643: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceConstant - 1 -> 0
   * 15 Weak Mutation 642: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.increment(Ljava/lang/Object;)Z:433 - ReplaceVariable key -> REMOVED
   * 16 Weak Mutation 664: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - ReplaceArithmeticOperator + -> %
   * 17 Weak Mutation 665: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - ReplaceArithmeticOperator + -> /
   * 18 Weak Mutation 667: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:444 - ReplaceConstant - 1 -> 0
   * 19 Weak Mutation 660: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - InsertUnaryOp IINC -1 index
   * 20 Weak Mutation 662: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - InsertUnaryOp Negation of amount
   * 21 Weak Mutation 657: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - DeleteField: _values[J
   * 22 Weak Mutation 658: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - InsertUnaryOp Negation of index
   * 23 Weak Mutation 659: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - InsertUnaryOp IINC 1 index
   * 24 Weak Mutation 654: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:440 - ReplaceComparisonOperator >= -> >
   * 25 Weak Mutation 666: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - ReplaceArithmeticOperator + -> *
   * 26 Weak Mutation 663: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustValue(Ljava/lang/Object;J)Z:443 - ReplaceArithmeticOperator + -> -
   */

  @Test
  public void test27()  throws Throwable  {
      IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, (-1521));
      tObjectLongCustomHashMap0.adjustOrPutValue((Long) null, (long) 0, (long) 0);
      boolean boolean0 = tObjectLongCustomHashMap0.increment((Long) null);
      assertEquals(1, tObjectLongCustomHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 28
  /*
   * 46 covered goals:
   * 1 Weak Mutation 676: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:456 - ReplaceComparisonOperator >= -> -1
   * 2 Weak Mutation 684: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:457 - ReplaceArithmeticOperator - -> *
   * 3 Weak Mutation 683: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:457 - ReplaceArithmeticOperator - -> /
   * 4 Weak Mutation 682: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:457 - ReplaceArithmeticOperator - -> %
   * 5 Weak Mutation 681: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:457 - ReplaceArithmeticOperator - -> +
   * 6 Weak Mutation 680: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:457 - ReplaceConstant - 1 -> 0
   * 7 Weak Mutation 679: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:457 - InsertUnaryOp IINC -1 index
   * 8 Weak Mutation 678: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:457 - InsertUnaryOp IINC 1 index
   * 9 Weak Mutation 677: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:457 - InsertUnaryOp Negation of index
   * 10 Weak Mutation 687: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:458 - InsertUnaryOp IINC 1 index
   * 11 Weak Mutation 686: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:458 - InsertUnaryOp Negation of index
   * 12 Weak Mutation 685: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:458 - DeleteField: _values[J
   * 13 Weak Mutation 694: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:458 - ReplaceArithmeticOperator + -> /
   * 14 Weak Mutation 695: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:458 - ReplaceArithmeticOperator + -> *
   * 15 Weak Mutation 692: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:458 - ReplaceArithmeticOperator + -> -
   * 16 Weak Mutation 693: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:458 - ReplaceArithmeticOperator + -> %
   * 17 Weak Mutation 690: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:458 - ReplaceVariable adjust_amount -> serialVersionUID
   * 18 Weak Mutation 691: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:458 - InsertUnaryOp Negation of adjust_amount
   * 19 Weak Mutation 688: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:458 - InsertUnaryOp IINC -1 index
   * 20 Weak Mutation 689: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:458 - ReplaceVariable adjust_amount -> put_amount
   * 21 Weak Mutation 696: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:459 - ReplaceConstant - 0 -> 1
   * 22 Weak Mutation 711: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:470 - ReplaceVariable newValue -> put_amount
   * 23 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J: I9 Branch 41 IFGE L456 - false
   * 24 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J: I51 Branch 42 IFEQ L466 - true
   * 25 Weak Mutation 687: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:458 - InsertUnaryOp IINC 1 index
   * 26 Weak Mutation 686: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:458 - InsertUnaryOp Negation of index
   * 27 Weak Mutation 685: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:458 - DeleteField: _values[J
   * 28 Weak Mutation 684: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:457 - ReplaceArithmeticOperator - -> *
   * 29 Weak Mutation 683: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:457 - ReplaceArithmeticOperator - -> /
   * 30 Weak Mutation 682: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:457 - ReplaceArithmeticOperator - -> %
   * 31 Weak Mutation 681: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:457 - ReplaceArithmeticOperator - -> +
   * 32 Weak Mutation 680: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:457 - ReplaceConstant - 1 -> 0
   * 33 Weak Mutation 679: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:457 - InsertUnaryOp IINC -1 index
   * 34 Weak Mutation 678: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:457 - InsertUnaryOp IINC 1 index
   * 35 Weak Mutation 677: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:457 - InsertUnaryOp Negation of index
   * 36 Weak Mutation 676: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:456 - ReplaceComparisonOperator >= -> -1
   * 37 Weak Mutation 696: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:459 - ReplaceConstant - 0 -> 1
   * 38 Weak Mutation 694: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:458 - ReplaceArithmeticOperator + -> /
   * 39 Weak Mutation 695: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:458 - ReplaceArithmeticOperator + -> *
   * 40 Weak Mutation 692: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:458 - ReplaceArithmeticOperator + -> -
   * 41 Weak Mutation 693: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:458 - ReplaceArithmeticOperator + -> %
   * 42 Weak Mutation 690: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:458 - ReplaceVariable adjust_amount -> serialVersionUID
   * 43 Weak Mutation 691: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:458 - InsertUnaryOp Negation of adjust_amount
   * 44 Weak Mutation 688: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:458 - InsertUnaryOp IINC -1 index
   * 45 Weak Mutation 689: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:458 - ReplaceVariable adjust_amount -> put_amount
   * 46 Weak Mutation 711: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:470 - ReplaceVariable newValue -> put_amount
   */

  @Test
  public void test28()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      tObjectLongCustomHashMap0.putIfAbsent((Integer) 120, 0L);
      long long0 = tObjectLongCustomHashMap0.adjustOrPutValue((Integer) 120, (long) 120, 0L);
      assertEquals(false, tObjectLongCustomHashMap0.isEmpty());
      assertEquals(120L, long0);
  }

  //Test case number: 29
  /*
   * 3 covered goals:
   * 1 Weak Mutation 714: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z:482 - DeleteStatement: forEach(Lgnu/trove/procedure/TObjectProcedure;)Z
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   * 3 Weak Mutation 714: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z:482 - DeleteStatement: forEach(Lgnu/trove/procedure/TObjectProcedure;)Z
   */

  @Test
  public void test29()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 193, (float) 0L, 9223372036854775807L);
      boolean boolean0 = tObjectLongCustomHashMap0.forEachKey((TObjectProcedure<? super Long>) null);
      assertEquals(true, boolean0);
      assertEquals(9223372036854775807L, tObjectLongCustomHashMap0.getNoEntryValue());
  }

  //Test case number: 30
  /*
   * 31 covered goals:
   * 1 Weak Mutation 715: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:494 - DeleteField: _set[Ljava/lang/Object;
   * 2 Weak Mutation 716: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:495 - DeleteField: _values[J
   * 3 Weak Mutation 717: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:496 - InsertUnaryOp Negation of i
   * 4 Weak Mutation 719: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:496 - InsertUnaryOp IINC -1 i
   * 5 Weak Mutation 718: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:496 - InsertUnaryOp IINC 1 i
   * 6 Weak Mutation 721: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:496 - ReplaceComparisonOperator <= -> <
   * 7 Weak Mutation 722: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:496 - ReplaceComparisonOperator <= -> -1
   * 8 Weak Mutation 728: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - DeleteField: FREELjava/lang/Object;
   * 9 Weak Mutation 729: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - ReplaceComparisonOperator == -> !=
   * 10 Weak Mutation 724: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - InsertUnaryOp Negation of i
   * 11 Weak Mutation 725: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - InsertUnaryOp IINC 1 i
   * 12 Weak Mutation 726: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - InsertUnaryOp IINC -1 i
   * 13 Weak Mutation 727: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - ReplaceVariable FREE -> REMOVED
   * 14 Weak Mutation 743: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:502 - ReplaceConstant - 1 -> 0
   * 15 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 43 IFLE L496 - true
   * 16 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 43 IFLE L496 - false
   * 17 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 44 IF_ACMPEQ L497 - true
   * 18 Weak Mutation 743: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:502 - ReplaceConstant - 1 -> 0
   * 19 Weak Mutation 715: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:494 - DeleteField: _set[Ljava/lang/Object;
   * 20 Weak Mutation 717: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:496 - InsertUnaryOp Negation of i
   * 21 Weak Mutation 716: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:495 - DeleteField: _values[J
   * 22 Weak Mutation 719: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:496 - InsertUnaryOp IINC -1 i
   * 23 Weak Mutation 718: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:496 - InsertUnaryOp IINC 1 i
   * 24 Weak Mutation 728: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - DeleteField: FREELjava/lang/Object;
   * 25 Weak Mutation 729: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - ReplaceComparisonOperator == -> !=
   * 26 Weak Mutation 721: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:496 - ReplaceComparisonOperator <= -> <
   * 27 Weak Mutation 722: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:496 - ReplaceComparisonOperator <= -> -1
   * 28 Weak Mutation 724: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - InsertUnaryOp Negation of i
   * 29 Weak Mutation 725: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - InsertUnaryOp IINC 1 i
   * 30 Weak Mutation 726: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - InsertUnaryOp IINC -1 i
   * 31 Weak Mutation 727: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - ReplaceVariable FREE -> REMOVED
   */

  @Test
  public void test30()  throws Throwable  {
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>();
      boolean boolean0 = tObjectLongCustomHashMap0.forEachValue((TLongProcedure) null);
      assertEquals(true, boolean0);
      assertEquals(23, tObjectLongCustomHashMap0.capacity());
  }

  //Test case number: 31
  /*
   * 35 covered goals:
   * 1 Weak Mutation 739: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - InsertUnaryOp IINC -1 i
   * 2 Weak Mutation 738: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - InsertUnaryOp IINC 1 i
   * 3 Weak Mutation 737: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - InsertUnaryOp Negation of i
   * 4 Weak Mutation 736: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - ReplaceComparisonOperator == -> !=
   * 5 Weak Mutation 740: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - DeleteStatement: execute(J)Z
   * 6 Weak Mutation 731: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - InsertUnaryOp Negation of i
   * 7 Weak Mutation 732: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - InsertUnaryOp IINC 1 i
   * 8 Weak Mutation 733: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - InsertUnaryOp IINC -1 i
   * 9 Weak Mutation 734: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - ReplaceVariable REMOVED -> FREE
   * 10 Weak Mutation 735: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - DeleteField: REMOVEDLjava/lang/Object;
   * 11 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 44 IF_ACMPEQ L497 - false
   * 12 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I30 Branch 45 IF_ACMPEQ L497 - false
   * 13 Weak Mutation 332: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:268 - ReplaceComparisonOperator >= -> >
   * 14 Weak Mutation 715: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:494 - DeleteField: _set[Ljava/lang/Object;
   * 15 Weak Mutation 717: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:496 - InsertUnaryOp Negation of i
   * 16 Weak Mutation 716: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:495 - DeleteField: _values[J
   * 17 Weak Mutation 719: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:496 - InsertUnaryOp IINC -1 i
   * 18 Weak Mutation 718: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:496 - InsertUnaryOp IINC 1 i
   * 19 Weak Mutation 728: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - DeleteField: FREELjava/lang/Object;
   * 20 Weak Mutation 729: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - ReplaceComparisonOperator == -> !=
   * 21 Weak Mutation 722: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:496 - ReplaceComparisonOperator <= -> -1
   * 22 Weak Mutation 724: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - InsertUnaryOp Negation of i
   * 23 Weak Mutation 725: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - InsertUnaryOp IINC 1 i
   * 24 Weak Mutation 726: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - InsertUnaryOp IINC -1 i
   * 25 Weak Mutation 727: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - ReplaceVariable FREE -> REMOVED
   * 26 Weak Mutation 739: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - InsertUnaryOp IINC -1 i
   * 27 Weak Mutation 738: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - InsertUnaryOp IINC 1 i
   * 28 Weak Mutation 737: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - InsertUnaryOp Negation of i
   * 29 Weak Mutation 736: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - ReplaceComparisonOperator == -> !=
   * 30 Weak Mutation 740: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - DeleteStatement: execute(J)Z
   * 31 Weak Mutation 731: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - InsertUnaryOp Negation of i
   * 32 Weak Mutation 732: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - InsertUnaryOp IINC 1 i
   * 33 Weak Mutation 733: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - InsertUnaryOp IINC -1 i
   * 34 Weak Mutation 734: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - ReplaceVariable REMOVED -> FREE
   * 35 Weak Mutation 735: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z:497 - DeleteField: REMOVEDLjava/lang/Object;
   */

  @Test
  public void test31()  throws Throwable  {
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>();
      tObjectLongCustomHashMap0.put((Long) null, (-8L));
      // Undeclared exception!
      try {
        tObjectLongCustomHashMap0.forEachValue((TLongProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 32
  /*
   * 43 covered goals:
   * 1 Weak Mutation 778: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:537 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 779: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:539 - DeleteField: _set[Ljava/lang/Object;
   * 3 Weak Mutation 780: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:540 - DeleteField: _values[J
   * 4 Weak Mutation 781: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:543 - DeleteStatement: tempDisableAutoCompaction()V
   * 5 Weak Mutation 788: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:545 - ReplaceComparisonOperator <= -> -1
   * 6 Weak Mutation 787: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:545 - ReplaceComparisonOperator <= -> <
   * 7 Weak Mutation 785: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:545 - InsertUnaryOp IINC -1 i
   * 8 Weak Mutation 784: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:545 - InsertUnaryOp IINC 1 i
   * 9 Weak Mutation 783: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:545 - InsertUnaryOp Negation of i
   * 10 Weak Mutation 791: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp IINC 1 i
   * 11 Weak Mutation 790: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp Negation of i
   * 12 Weak Mutation 795: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - ReplaceComparisonOperator == -> !=
   * 13 Weak Mutation 794: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - DeleteField: FREELjava/lang/Object;
   * 14 Weak Mutation 793: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - ReplaceVariable FREE -> REMOVED
   * 15 Weak Mutation 792: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp IINC -1 i
   * 16 Weak Mutation 817: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:555 - ReplaceConstant - 1 -> 0
   * 17 Weak Mutation 818: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:555 - DeleteStatement: reenableAutoCompaction(Z)V
   * 18 Weak Mutation 821: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:558 - InsertUnaryOp Negation of modified
   * 19 Weak Mutation 823: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:558 - InsertUnaryOp IINC -1 modified
   * 20 Weak Mutation 822: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:558 - InsertUnaryOp IINC 1 modified
   * 21 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I27 Branch 51 IFLE L545 - true
   * 22 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I27 Branch 51 IFLE L545 - false
   * 23 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I34 Branch 52 IF_ACMPEQ L546 - true
   * 24 Weak Mutation 821: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:558 - InsertUnaryOp Negation of modified
   * 25 Weak Mutation 823: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:558 - InsertUnaryOp IINC -1 modified
   * 26 Weak Mutation 822: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:558 - InsertUnaryOp IINC 1 modified
   * 27 Weak Mutation 817: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:555 - ReplaceConstant - 1 -> 0
   * 28 Weak Mutation 818: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:555 - DeleteStatement: reenableAutoCompaction(Z)V
   * 29 Weak Mutation 791: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp IINC 1 i
   * 30 Weak Mutation 790: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp Negation of i
   * 31 Weak Mutation 788: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:545 - ReplaceComparisonOperator <= -> -1
   * 32 Weak Mutation 787: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:545 - ReplaceComparisonOperator <= -> <
   * 33 Weak Mutation 785: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:545 - InsertUnaryOp IINC -1 i
   * 34 Weak Mutation 784: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:545 - InsertUnaryOp IINC 1 i
   * 35 Weak Mutation 795: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - ReplaceComparisonOperator == -> !=
   * 36 Weak Mutation 794: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - DeleteField: FREELjava/lang/Object;
   * 37 Weak Mutation 793: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - ReplaceVariable FREE -> REMOVED
   * 38 Weak Mutation 792: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp IINC -1 i
   * 39 Weak Mutation 783: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:545 - InsertUnaryOp Negation of i
   * 40 Weak Mutation 780: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:540 - DeleteField: _values[J
   * 41 Weak Mutation 781: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:543 - DeleteStatement: tempDisableAutoCompaction()V
   * 42 Weak Mutation 778: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:537 - ReplaceConstant - 0 -> 1
   * 43 Weak Mutation 779: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:539 - DeleteField: _set[Ljava/lang/Object;
   */

  @Test
  public void test32()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      boolean boolean0 = tObjectLongCustomHashMap0.retainEntries((TObjectLongProcedure<? super Integer>) null);
      assertEquals(false, boolean0);
      assertEquals(23, tObjectLongCustomHashMap0.capacity());
  }

  //Test case number: 33
  /*
   * 58 covered goals:
   * 1 Weak Mutation 804: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp Negation of i
   * 2 Weak Mutation 805: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp IINC 1 i
   * 3 Weak Mutation 806: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp IINC -1 i
   * 4 Weak Mutation 807: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp Negation of i
   * 5 Weak Mutation 800: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - ReplaceVariable REMOVED -> FREE
   * 6 Weak Mutation 801: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - DeleteField: REMOVEDLjava/lang/Object;
   * 7 Weak Mutation 802: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - ReplaceComparisonOperator == -> !=
   * 8 Weak Mutation 808: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp IINC 1 i
   * 9 Weak Mutation 809: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp IINC -1 i
   * 10 Weak Mutation 810: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - DeleteStatement: execute(Ljava/lang/Object;J)Z
   * 11 Weak Mutation 799: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp IINC -1 i
   * 12 Weak Mutation 798: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp IINC 1 i
   * 13 Weak Mutation 797: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp Negation of i
   * 14 Weak Mutation 820: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:555 - DeleteStatement: reenableAutoCompaction(Z)V
   * 15 Weak Mutation 819: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:555 - ReplaceConstant - 1 -> 0
   * 16 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I34 Branch 52 IF_ACMPEQ L546 - false
   * 17 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I39 Branch 53 IF_ACMPEQ L546 - false
   * 18 Weak Mutation 305: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:258 - DeleteStatement: insertKey(Ljava/lang/Object;)I
   * 19 Weak Mutation 304: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:258 - ReplaceVariable key -> REMOVED
   * 20 Weak Mutation 307: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:259 - InsertUnaryOp IINC 1 index
   * 21 Weak Mutation 306: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:259 - InsertUnaryOp Negation of index
   * 22 Weak Mutation 309: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:259 - ReplaceComparisonOperator >= -> ==
   * 23 Weak Mutation 308: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:259 - InsertUnaryOp IINC -1 index
   * 24 Weak Mutation 303: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:258 - ReplaceVariable key -> FREE
   * 25 Weak Mutation 324: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:261 - InsertUnaryOp IINC 1 index
   * 26 Weak Mutation 325: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:261 - InsertUnaryOp IINC -1 index
   * 27 Weak Mutation 322: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:261 - InsertUnaryOp Negation of value
   * 28 Weak Mutation 323: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:261 - InsertUnaryOp Negation of index
   * 29 Weak Mutation 321: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.putIfAbsent(Ljava/lang/Object;J)J:261 - ReplaceVariable value -> serialVersionUID
   * 30 Weak Mutation 791: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp IINC 1 i
   * 31 Weak Mutation 790: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp Negation of i
   * 32 Weak Mutation 788: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:545 - ReplaceComparisonOperator <= -> -1
   * 33 Weak Mutation 785: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:545 - InsertUnaryOp IINC -1 i
   * 34 Weak Mutation 784: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:545 - InsertUnaryOp IINC 1 i
   * 35 Weak Mutation 795: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - ReplaceComparisonOperator == -> !=
   * 36 Weak Mutation 794: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - DeleteField: FREELjava/lang/Object;
   * 37 Weak Mutation 793: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - ReplaceVariable FREE -> REMOVED
   * 38 Weak Mutation 792: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp IINC -1 i
   * 39 Weak Mutation 783: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:545 - InsertUnaryOp Negation of i
   * 40 Weak Mutation 780: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:540 - DeleteField: _values[J
   * 41 Weak Mutation 781: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:543 - DeleteStatement: tempDisableAutoCompaction()V
   * 42 Weak Mutation 778: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:537 - ReplaceConstant - 0 -> 1
   * 43 Weak Mutation 779: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:539 - DeleteField: _set[Ljava/lang/Object;
   * 44 Weak Mutation 820: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:555 - DeleteStatement: reenableAutoCompaction(Z)V
   * 45 Weak Mutation 819: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:555 - ReplaceConstant - 1 -> 0
   * 46 Weak Mutation 804: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp Negation of i
   * 47 Weak Mutation 805: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp IINC 1 i
   * 48 Weak Mutation 806: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp IINC -1 i
   * 49 Weak Mutation 807: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp Negation of i
   * 50 Weak Mutation 800: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - ReplaceVariable REMOVED -> FREE
   * 51 Weak Mutation 801: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - DeleteField: REMOVEDLjava/lang/Object;
   * 52 Weak Mutation 802: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - ReplaceComparisonOperator == -> !=
   * 53 Weak Mutation 808: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp IINC 1 i
   * 54 Weak Mutation 809: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp IINC -1 i
   * 55 Weak Mutation 810: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - DeleteStatement: execute(Ljava/lang/Object;J)Z
   * 56 Weak Mutation 799: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp IINC -1 i
   * 57 Weak Mutation 798: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp IINC 1 i
   * 58 Weak Mutation 797: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z:546 - InsertUnaryOp Negation of i
   */

  @Test
  public void test33()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      tObjectLongCustomHashMap0.putIfAbsent((Integer) 120, 0L);
      // Undeclared exception!
      try {
        tObjectLongCustomHashMap0.retainEntries((TObjectLongProcedure<? super Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 34
  /*
   * 49 covered goals:
   * 1 Weak Mutation 824: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:568 - DeleteField: _set[Ljava/lang/Object;
   * 2 Weak Mutation 825: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:569 - DeleteField: _values[J
   * 3 Weak Mutation 828: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:570 - InsertUnaryOp IINC -1 i
   * 4 Weak Mutation 831: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:570 - ReplaceComparisonOperator <= -> -1
   * 5 Weak Mutation 827: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:570 - InsertUnaryOp IINC 1 i
   * 6 Weak Mutation 826: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:570 - InsertUnaryOp Negation of i
   * 7 Weak Mutation 834: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:571 - InsertUnaryOp IINC 1 i
   * 8 Weak Mutation 835: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:571 - InsertUnaryOp IINC -1 i
   * 9 Weak Mutation 833: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:571 - InsertUnaryOp Negation of i
   * 10 Weak Mutation 838: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:571 - InsertUnaryOp Negation of i
   * 11 Weak Mutation 839: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:571 - InsertUnaryOp IINC 1 i
   * 12 Weak Mutation 836: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:571 - ReplaceComparisonOperator = null -> != null
   * 13 Weak Mutation 842: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:571 - DeleteField: REMOVEDLjava/lang/Object;
   * 14 Weak Mutation 843: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:571 - ReplaceComparisonOperator == -> !=
   * 15 Weak Mutation 840: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:571 - InsertUnaryOp IINC -1 i
   * 16 Weak Mutation 841: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:571 - ReplaceVariable REMOVED -> FREE
   * 17 Weak Mutation 850: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:572 - DeleteStatement: execute(J)J
   * 18 Weak Mutation 849: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:572 - InsertUnaryOp IINC -1 i
   * 19 Weak Mutation 848: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:572 - InsertUnaryOp IINC 1 i
   * 20 Weak Mutation 846: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:572 - InsertUnaryOp IINC -1 i
   * 21 Weak Mutation 847: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:572 - InsertUnaryOp Negation of i
   * 22 Weak Mutation 844: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:572 - InsertUnaryOp Negation of i
   * 23 Weak Mutation 845: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:572 - InsertUnaryOp IINC 1 i
   * 24 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I18 Branch 55 IFLE L570 - false
   * 25 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I24 Branch 56 IFNULL L571 - false
   * 26 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I29 Branch 57 IF_ACMPEQ L571 - false
   * 27 Weak Mutation 828: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:570 - InsertUnaryOp IINC -1 i
   * 28 Weak Mutation 831: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:570 - ReplaceComparisonOperator <= -> -1
   * 29 Weak Mutation 825: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:569 - DeleteField: _values[J
   * 30 Weak Mutation 824: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:568 - DeleteField: _set[Ljava/lang/Object;
   * 31 Weak Mutation 827: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:570 - InsertUnaryOp IINC 1 i
   * 32 Weak Mutation 826: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:570 - InsertUnaryOp Negation of i
   * 33 Weak Mutation 850: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:572 - DeleteStatement: execute(J)J
   * 34 Weak Mutation 849: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:572 - InsertUnaryOp IINC -1 i
   * 35 Weak Mutation 848: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:572 - InsertUnaryOp IINC 1 i
   * 36 Weak Mutation 834: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:571 - InsertUnaryOp IINC 1 i
   * 37 Weak Mutation 835: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:571 - InsertUnaryOp IINC -1 i
   * 38 Weak Mutation 833: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:571 - InsertUnaryOp Negation of i
   * 39 Weak Mutation 838: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:571 - InsertUnaryOp Negation of i
   * 40 Weak Mutation 839: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:571 - InsertUnaryOp IINC 1 i
   * 41 Weak Mutation 836: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:571 - ReplaceComparisonOperator = null -> != null
   * 42 Weak Mutation 842: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:571 - DeleteField: REMOVEDLjava/lang/Object;
   * 43 Weak Mutation 843: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:571 - ReplaceComparisonOperator == -> !=
   * 44 Weak Mutation 840: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:571 - InsertUnaryOp IINC -1 i
   * 45 Weak Mutation 841: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:571 - ReplaceVariable REMOVED -> FREE
   * 46 Weak Mutation 846: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:572 - InsertUnaryOp IINC -1 i
   * 47 Weak Mutation 847: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:572 - InsertUnaryOp Negation of i
   * 48 Weak Mutation 844: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:572 - InsertUnaryOp Negation of i
   * 49 Weak Mutation 845: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V:572 - InsertUnaryOp IINC 1 i
   */

  @Test
  public void test34()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0);
      // Undeclared exception!
      try {
        tObjectLongCustomHashMap0.transformValues((TLongFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 35
  /*
   * 27 covered goals:
   * 1 Weak Mutation 851: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:588 - ReplaceVariable other -> FREE
   * 2 Weak Mutation 853: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:588 - ReplaceComparisonOperator != -> ==
   * 3 Weak Mutation 852: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:588 - ReplaceVariable other -> REMOVED
   * 4 Weak Mutation 855: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:591 - ReplaceVariable other -> FREE
   * 5 Weak Mutation 856: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:591 - ReplaceVariable other -> REMOVED
   * 6 Weak Mutation 858: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:592 - DeleteStatement: size()I
   * 7 Weak Mutation 857: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:592 - DeleteStatement: size()I
   * 8 Weak Mutation 860: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:592 - ReplaceComparisonOperator == -> -2
   * 9 Weak Mutation 863: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:596 - DeleteStatement: iterator()Lgnu/trove/iterator/TObjectLongIterator;
   * 10 Weak Mutation 864: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:597 - DeleteStatement: hasNext()Z
   * 11 Weak Mutation 865: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:597 - ReplaceComparisonOperator == -> !=
   * 12 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.iterator()Lgnu/trove/iterator/TObjectLongIterator;: root-Branch
   * 13 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$TObjectLongHashIterator.<init>(Lgnu/trove/map/custom_hash/TObjectLongCustomHashMap;Lgnu/trove/map/custom_hash/TObjectLongCustomHashMap;)V: root-Branch
   * 14 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L588 - true
   * 15 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 59 IF_ICMPEQ L592 - true
   * 16 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 60 IFEQ L597 - true
   * 17 Weak Mutation 864: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:597 - DeleteStatement: hasNext()Z
   * 18 Weak Mutation 865: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:597 - ReplaceComparisonOperator == -> !=
   * 19 Weak Mutation 851: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:588 - ReplaceVariable other -> FREE
   * 20 Weak Mutation 855: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:591 - ReplaceVariable other -> FREE
   * 21 Weak Mutation 853: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:588 - ReplaceComparisonOperator != -> ==
   * 22 Weak Mutation 852: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:588 - ReplaceVariable other -> REMOVED
   * 23 Weak Mutation 858: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:592 - DeleteStatement: size()I
   * 24 Weak Mutation 857: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:592 - DeleteStatement: size()I
   * 25 Weak Mutation 856: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:591 - ReplaceVariable other -> REMOVED
   * 26 Weak Mutation 863: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:596 - DeleteStatement: iterator()Lgnu/trove/iterator/TObjectLongIterator;
   * 27 Weak Mutation 860: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:592 - ReplaceComparisonOperator == -> -2
   */

  @Test
  public void test35()  throws Throwable  {
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>();
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>();
      boolean boolean0 = tObjectLongCustomHashMap0.equals((Object) tObjectLongHashMap0);
      assertEquals(true, boolean0);
      assertEquals(23, tObjectLongCustomHashMap0.capacity());
  }

  //Test case number: 36
  /*
   * 3 covered goals:
   * 1 Weak Mutation 854: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:589 - ReplaceConstant - 0 -> 1
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L588 - false
   * 3 Weak Mutation 854: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:589 - ReplaceConstant - 0 -> 1
   */

  @Test
  public void test36()  throws Throwable  {
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>();
      boolean boolean0 = tObjectLongCustomHashMap0.equals((Object) null);
      assertEquals(23, tObjectLongCustomHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 37
  /*
   * 12 covered goals:
   * 1 Weak Mutation 861: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:592 - ReplaceComparisonOperator == -> <=
   * 2 Weak Mutation 862: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:593 - ReplaceConstant - 0 -> 1
   * 3 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 59 IF_ICMPEQ L592 - false
   * 4 Weak Mutation 851: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:588 - ReplaceVariable other -> FREE
   * 5 Weak Mutation 855: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:591 - ReplaceVariable other -> FREE
   * 6 Weak Mutation 853: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:588 - ReplaceComparisonOperator != -> ==
   * 7 Weak Mutation 852: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:588 - ReplaceVariable other -> REMOVED
   * 8 Weak Mutation 858: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:592 - DeleteStatement: size()I
   * 9 Weak Mutation 857: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:592 - DeleteStatement: size()I
   * 10 Weak Mutation 856: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:591 - ReplaceVariable other -> REMOVED
   * 11 Weak Mutation 862: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:593 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 861: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.equals(Ljava/lang/Object;)Z:592 - ReplaceComparisonOperator == -> <=
   */

  @Test
  public void test37()  throws Throwable  {
      IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, (-1521));
      tObjectLongCustomHashMap0.adjustOrPutValue((Long) null, (long) 0, (long) 0);
      TObjectLongHashMap<String> tObjectLongHashMap0 = new TObjectLongHashMap<String>((-1521));
      boolean boolean0 = tObjectLongCustomHashMap0.equals((Object) tObjectLongHashMap0);
      assertEquals("{null=0}", tObjectLongCustomHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 38
  /*
   * 72 covered goals:
   * 1 Weak Mutation 929: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - DeleteField: REMOVEDLjava/lang/Object;
   * 2 Weak Mutation 928: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - ReplaceVariable REMOVED -> FREE
   * 3 Weak Mutation 930: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - ReplaceComparisonOperator == -> !=
   * 4 Weak Mutation 926: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - InsertUnaryOp IINC 1 i
   * 5 Weak Mutation 927: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - InsertUnaryOp IINC -1 i
   * 6 Weak Mutation 925: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - InsertUnaryOp Negation of i
   * 7 Weak Mutation 956: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceArithmeticOperator + -> %
   * 8 Weak Mutation 957: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceArithmeticOperator + -> /
   * 9 Weak Mutation 958: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceArithmeticOperator + -> *
   * 10 Weak Mutation 953: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceBitwiseOperator ^ -> &
   * 11 Weak Mutation 955: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceArithmeticOperator + -> -
   * 12 Weak Mutation 944: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC -1 i
   * 13 Weak Mutation 945: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceComparisonOperator != null -> = null
   * 14 Weak Mutation 946: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceConstant - 0 -> 1
   * 15 Weak Mutation 943: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC 1 i
   * 16 Weak Mutation 942: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp Negation of i
   * 17 Weak Mutation 937: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC 1 i
   * 18 Weak Mutation 936: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp Negation of i
   * 19 Weak Mutation 939: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - DeleteStatement: hash(J)I
   * 20 Weak Mutation 938: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC -1 i
   * 21 Weak Mutation 933: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC 1 hashcode
   * 22 Weak Mutation 932: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp Negation of hashcode
   * 23 Weak Mutation 934: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC -1 hashcode
   * 24 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L626 - false
   * 25 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I: I34 Branch 67 IF_ACMPEQ L626 - false
   * 26 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I: I45 Branch 68 IFNONNULL L627 - false
   * 27 Weak Mutation 956: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceArithmeticOperator + -> %
   * 28 Weak Mutation 957: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceArithmeticOperator + -> /
   * 29 Weak Mutation 958: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceArithmeticOperator + -> *
   * 30 Weak Mutation 959: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:631 - InsertUnaryOp Negation of hashcode
   * 31 Weak Mutation 953: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceBitwiseOperator ^ -> &
   * 32 Weak Mutation 955: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceArithmeticOperator + -> -
   * 33 Weak Mutation 944: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC -1 i
   * 34 Weak Mutation 945: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceComparisonOperator != null -> = null
   * 35 Weak Mutation 946: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceConstant - 0 -> 1
   * 36 Weak Mutation 943: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC 1 i
   * 37 Weak Mutation 942: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp Negation of i
   * 38 Weak Mutation 937: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC 1 i
   * 39 Weak Mutation 936: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp Negation of i
   * 40 Weak Mutation 939: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - DeleteStatement: hash(J)I
   * 41 Weak Mutation 938: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC -1 i
   * 42 Weak Mutation 933: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC 1 hashcode
   * 43 Weak Mutation 932: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp Negation of hashcode
   * 44 Weak Mutation 934: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC -1 hashcode
   * 45 Weak Mutation 929: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - DeleteField: REMOVEDLjava/lang/Object;
   * 46 Weak Mutation 928: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - ReplaceVariable REMOVED -> FREE
   * 47 Weak Mutation 930: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - ReplaceComparisonOperator == -> !=
   * 48 Weak Mutation 926: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - InsertUnaryOp IINC 1 i
   * 49 Weak Mutation 927: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - InsertUnaryOp IINC -1 i
   * 50 Weak Mutation 925: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - InsertUnaryOp Negation of i
   * 51 Weak Mutation 922: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - ReplaceComparisonOperator == -> !=
   * 52 Weak Mutation 920: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - ReplaceVariable FREE -> REMOVED
   * 53 Weak Mutation 921: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - DeleteField: FREELjava/lang/Object;
   * 54 Weak Mutation 918: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - InsertUnaryOp IINC 1 i
   * 55 Weak Mutation 919: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - InsertUnaryOp IINC -1 i
   * 56 Weak Mutation 916: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - ReplaceVariable i -> hashcode
   * 57 Weak Mutation 917: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - InsertUnaryOp Negation of i
   * 58 Weak Mutation 914: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:625 - ReplaceComparisonOperator <= -> -1
   * 59 Weak Mutation 913: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:625 - ReplaceComparisonOperator <= -> <
   * 60 Weak Mutation 911: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:625 - ReplaceVariable i -> hashcode
   * 61 Weak Mutation 910: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:625 - InsertUnaryOp IINC -1 i
   * 62 Weak Mutation 909: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:625 - InsertUnaryOp IINC 1 i
   * 63 Weak Mutation 908: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:625 - InsertUnaryOp Negation of i
   * 64 Weak Mutation 907: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:625 - ReplaceVariable i -> hashcode
   * 65 Weak Mutation 906: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:624 - DeleteField: _values[J
   * 66 Weak Mutation 905: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:623 - DeleteField: _set[Ljava/lang/Object;
   * 67 Weak Mutation 904: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:622 - ReplaceConstant - 0 -> 1
   * 68 Weak Mutation 961: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:631 - InsertUnaryOp IINC -1 hashcode
   * 69 Weak Mutation 960: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:631 - InsertUnaryOp IINC 1 hashcode
   * 70 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I: I22 Branch 65 IFLE L625 - true
   * 71 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I: I22 Branch 65 IFLE L625 - false
   * 72 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L626 - true
   */

  @Test
  public void test38()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Object> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 1247);
      tObjectLongCustomHashMap0.adjustOrPutValue((Object) null, 0L, (long) 64);
      int int0 = tObjectLongCustomHashMap0.hashCode();
      assertEquals(false, tObjectLongCustomHashMap0.isEmpty());
      assertEquals(64, int0);
  }

  //Test case number: 39
  /*
   * 91 covered goals:
   * 1 Weak Mutation 924: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - ReplaceVariable i -> hashcode
   * 2 Weak Mutation 952: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - DeleteStatement: hashCode()I
   * 3 Weak Mutation 954: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceBitwiseOperator ^ -> |
   * 4 Weak Mutation 948: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceVariable i -> hashcode
   * 5 Weak Mutation 949: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp Negation of i
   * 6 Weak Mutation 950: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC 1 i
   * 7 Weak Mutation 951: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC -1 i
   * 8 Weak Mutation 941: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceVariable i -> hashcode
   * 9 Weak Mutation 935: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceVariable i -> hashcode
   * 10 Weak Mutation 931: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceVariable hashcode -> i
   * 11 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I: I45 Branch 68 IFNONNULL L627 - true
   * 12 Weak Mutation 295: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:251 - ReplaceVariable key -> FREE
   * 13 Weak Mutation 296: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:251 - ReplaceVariable key -> REMOVED
   * 14 Weak Mutation 297: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:251 - DeleteStatement: insertKey(Ljava/lang/Object;)I
   * 15 Weak Mutation 298: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:252 - ReplaceVariable value -> serialVersionUID
   * 16 Weak Mutation 299: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:252 - InsertUnaryOp Negation of value
   * 17 Weak Mutation 300: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:252 - InsertUnaryOp Negation of index
   * 18 Weak Mutation 301: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:252 - InsertUnaryOp IINC 1 index
   * 19 Weak Mutation 302: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.put(Ljava/lang/Object;J)J:252 - InsertUnaryOp IINC -1 index
   * 20 Weak Mutation 351: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:274 - InsertUnaryOp Negation of value
   * 21 Weak Mutation 350: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:274 - ReplaceVariable value -> serialVersionUID
   * 22 Weak Mutation 349: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:274 - ReplaceVariable value -> previous
   * 23 Weak Mutation 348: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:274 - InsertUnaryOp IINC -1 index
   * 24 Weak Mutation 347: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:274 - InsertUnaryOp IINC 1 index
   * 25 Weak Mutation 346: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:274 - InsertUnaryOp Negation of index
   * 26 Weak Mutation 345: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:274 - DeleteField: _values[J
   * 27 Weak Mutation 326: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:266 - ReplaceVariable no_entry_value -> serialVersionUID
   * 28 Weak Mutation 327: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:266 - InsertUnaryOp Negation
   * 29 Weak Mutation 330: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:268 - InsertUnaryOp Negation of index
   * 30 Weak Mutation 331: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:268 - ReplaceComparisonOperator >= -> ==
   * 31 Weak Mutation 329: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:267 - ReplaceConstant - 1 -> 0
   * 32 Weak Mutation 356: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:277 - DeleteStatement: postInsertHook(Z)V
   * 33 Weak Mutation 357: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:279 - ReplaceVariable previous -> value
   * 34 Weak Mutation 358: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:279 - ReplaceVariable previous -> serialVersionUID
   * 35 Weak Mutation 359: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:279 - InsertUnaryOp Negation of previous
   * 36 Weak Mutation 352: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:276 - InsertUnaryOp Negation of isNewMapping
   * 37 Weak Mutation 353: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:276 - ReplaceComparisonOperator == -> !=
   * 38 Weak Mutation 354: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:277 - InsertUnaryOp Negation
   * 39 Weak Mutation 355: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.doPut(JI)J:277 - DeleteField: consumeFreeSlotZ
   * 40 Weak Mutation 956: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceArithmeticOperator + -> %
   * 41 Weak Mutation 957: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceArithmeticOperator + -> /
   * 42 Weak Mutation 958: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceArithmeticOperator + -> *
   * 43 Weak Mutation 959: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:631 - InsertUnaryOp Negation of hashcode
   * 44 Weak Mutation 953: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceBitwiseOperator ^ -> &
   * 45 Weak Mutation 955: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceArithmeticOperator + -> -
   * 46 Weak Mutation 944: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC -1 i
   * 47 Weak Mutation 945: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceComparisonOperator != null -> = null
   * 48 Weak Mutation 943: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC 1 i
   * 49 Weak Mutation 942: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp Negation of i
   * 50 Weak Mutation 937: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC 1 i
   * 51 Weak Mutation 936: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp Negation of i
   * 52 Weak Mutation 939: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - DeleteStatement: hash(J)I
   * 53 Weak Mutation 938: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC -1 i
   * 54 Weak Mutation 933: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC 1 hashcode
   * 55 Weak Mutation 932: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp Negation of hashcode
   * 56 Weak Mutation 934: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC -1 hashcode
   * 57 Weak Mutation 929: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - DeleteField: REMOVEDLjava/lang/Object;
   * 58 Weak Mutation 928: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - ReplaceVariable REMOVED -> FREE
   * 59 Weak Mutation 930: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - ReplaceComparisonOperator == -> !=
   * 60 Weak Mutation 926: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - InsertUnaryOp IINC 1 i
   * 61 Weak Mutation 927: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - InsertUnaryOp IINC -1 i
   * 62 Weak Mutation 925: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - InsertUnaryOp Negation of i
   * 63 Weak Mutation 922: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - ReplaceComparisonOperator == -> !=
   * 64 Weak Mutation 920: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - ReplaceVariable FREE -> REMOVED
   * 65 Weak Mutation 921: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - DeleteField: FREELjava/lang/Object;
   * 66 Weak Mutation 918: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - InsertUnaryOp IINC 1 i
   * 67 Weak Mutation 919: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - InsertUnaryOp IINC -1 i
   * 68 Weak Mutation 916: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - ReplaceVariable i -> hashcode
   * 69 Weak Mutation 917: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - InsertUnaryOp Negation of i
   * 70 Weak Mutation 914: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:625 - ReplaceComparisonOperator <= -> -1
   * 71 Weak Mutation 913: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:625 - ReplaceComparisonOperator <= -> <
   * 72 Weak Mutation 911: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:625 - ReplaceVariable i -> hashcode
   * 73 Weak Mutation 910: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:625 - InsertUnaryOp IINC -1 i
   * 74 Weak Mutation 909: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:625 - InsertUnaryOp IINC 1 i
   * 75 Weak Mutation 908: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:625 - InsertUnaryOp Negation of i
   * 76 Weak Mutation 907: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:625 - ReplaceVariable i -> hashcode
   * 77 Weak Mutation 906: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:624 - DeleteField: _values[J
   * 78 Weak Mutation 905: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:623 - DeleteField: _set[Ljava/lang/Object;
   * 79 Weak Mutation 904: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:622 - ReplaceConstant - 0 -> 1
   * 80 Weak Mutation 961: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:631 - InsertUnaryOp IINC -1 hashcode
   * 81 Weak Mutation 960: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:631 - InsertUnaryOp IINC 1 hashcode
   * 82 Weak Mutation 952: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - DeleteStatement: hashCode()I
   * 83 Weak Mutation 954: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceBitwiseOperator ^ -> |
   * 84 Weak Mutation 948: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceVariable i -> hashcode
   * 85 Weak Mutation 949: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp Negation of i
   * 86 Weak Mutation 950: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC 1 i
   * 87 Weak Mutation 951: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - InsertUnaryOp IINC -1 i
   * 88 Weak Mutation 941: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceVariable i -> hashcode
   * 89 Weak Mutation 935: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceVariable i -> hashcode
   * 90 Weak Mutation 931: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:627 - ReplaceVariable hashcode -> i
   * 91 Weak Mutation 924: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.hashCode()I:626 - ReplaceVariable i -> hashcode
   */

  @Test
  public void test39()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Object> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 1247);
      tObjectLongCustomHashMap0.put((Object) "\u7FA9\u5927\u5229\u6587", 5L);
      int int0 = tObjectLongCustomHashMap0.hashCode();
      assertEquals(false, tObjectLongCustomHashMap0.isEmpty());
      assertEquals(996210585, int0);
  }

  //Test case number: 40
  /*
   * 10 covered goals:
   * 1 Weak Mutation 4: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$KeyView.iterator()Ljava/util/Iterator;:640 - DeleteField: this$0Lgnu/trove/map/custom_hash/TObjectLongCustomHashMap;
   * 2 Weak Mutation 23: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$MapBackedView.size()I:679 - DeleteStatement: size()I
   * 3 Weak Mutation 22: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$MapBackedView.size()I:679 - DeleteField: this$0Lgnu/trove/map/custom_hash/TObjectLongCustomHashMap;
   * 4 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$KeyView.iterator()Ljava/util/Iterator;: root-Branch
   * 5 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$KeyView.<init>(Lgnu/trove/map/custom_hash/TObjectLongCustomHashMap;)V: root-Branch
   * 6 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.keySet()Ljava/util/Set;: root-Branch
   * 7 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$MapBackedView.size()I: root-Branch
   * 8 Weak Mutation 4: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$KeyView.iterator()Ljava/util/Iterator;:640 - DeleteField: this$0Lgnu/trove/map/custom_hash/TObjectLongCustomHashMap;
   * 9 Weak Mutation 23: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$MapBackedView.size()I:679 - DeleteStatement: size()I
   * 10 Weak Mutation 22: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$MapBackedView.size()I:679 - DeleteField: this$0Lgnu/trove/map/custom_hash/TObjectLongCustomHashMap;
   */

  @Test
  public void test40()  throws Throwable  {
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>();
      Set<Long> set0 = tObjectLongCustomHashMap0.keySet();
      TLongHashSet tLongHashSet0 = new TLongHashSet((Collection<? extends Long>) set0);
      assertEquals(23, tObjectLongCustomHashMap0.capacity());
  }

  //Test case number: 41
  /*
   * 92 covered goals:
   * 1 Weak Mutation 973: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1104 - DeleteField: _sizeI
   * 2 Weak Mutation 1000: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1109 - DeleteStatement: writeObject(Ljava/lang/Object;)V
   * 3 Weak Mutation 997: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1109 - InsertUnaryOp Negation of i
   * 4 Weak Mutation 996: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1109 - DeleteField: _set[Ljava/lang/Object;
   * 5 Weak Mutation 999: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1109 - InsertUnaryOp IINC -1 i
   * 6 Weak Mutation 998: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1109 - InsertUnaryOp IINC 1 i
   * 7 Weak Mutation 1001: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1110 - DeleteField: _values[J
   * 8 Weak Mutation 1003: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1110 - InsertUnaryOp IINC 1 i
   * 9 Weak Mutation 1002: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1110 - InsertUnaryOp Negation of i
   * 10 Weak Mutation 1005: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1110 - DeleteStatement: writeLong(J)V
   * 11 Weak Mutation 1004: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1110 - InsertUnaryOp IINC -1 i
   * 12 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I51 Branch 71 IF_ACMPEQ L1108 - false
   * 13 Weak Mutation 674: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:456 - ReplaceComparisonOperator >= -> ==
   * 14 Weak Mutation 701: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:461 - ReplaceVariable put_amount -> adjust_amount
   * 15 Weak Mutation 710: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:470 - ReplaceVariable newValue -> adjust_amount
   * 16 Weak Mutation 993: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - ReplaceVariable FREE -> REMOVED
   * 17 Weak Mutation 992: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp IINC -1 i
   * 18 Weak Mutation 995: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - ReplaceComparisonOperator == -> !=
   * 19 Weak Mutation 994: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - DeleteField: FREELjava/lang/Object;
   * 20 Weak Mutation 986: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - ReplaceVariable REMOVED -> FREE
   * 21 Weak Mutation 987: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - DeleteField: REMOVEDLjava/lang/Object;
   * 22 Weak Mutation 984: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp IINC 1 i
   * 23 Weak Mutation 985: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp IINC -1 i
   * 24 Weak Mutation 990: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp Negation of i
   * 25 Weak Mutation 991: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp IINC 1 i
   * 26 Weak Mutation 988: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - ReplaceComparisonOperator == -> !=
   * 27 Weak Mutation 989: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - DeleteField: _set[Ljava/lang/Object;
   * 28 Weak Mutation 978: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - InsertUnaryOp IINC -1 i
   * 29 Weak Mutation 976: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - InsertUnaryOp Negation of i
   * 30 Weak Mutation 977: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - InsertUnaryOp IINC 1 i
   * 31 Weak Mutation 982: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - DeleteField: _set[Ljava/lang/Object;
   * 32 Weak Mutation 983: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp Negation of i
   * 33 Weak Mutation 980: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - ReplaceComparisonOperator <= -> <
   * 34 Weak Mutation 981: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - ReplaceComparisonOperator <= -> -1
   * 35 Weak Mutation 971: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1104 - InsertUnaryOp +1
   * 36 Weak Mutation 970: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1104 - InsertUnaryOp Negation
   * 37 Weak Mutation 969: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1101 - DeleteStatement: writeLong(J)V
   * 38 Weak Mutation 975: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - DeleteField: _set[Ljava/lang/Object;
   * 39 Weak Mutation 974: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1104 - DeleteStatement: writeInt(I)V
   * 40 Weak Mutation 972: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1104 - InsertUnaryOp -1
   * 41 Weak Mutation 963: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1092 - DeleteStatement: writeByte(I)V
   * 42 Weak Mutation 962: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1092 - ReplaceConstant - 0 -> 1
   * 43 Weak Mutation 967: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1101 - InsertUnaryOp Negation
   * 44 Weak Mutation 966: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1101 - ReplaceVariable no_entry_value -> serialVersionUID
   * 45 Weak Mutation 965: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1098 - DeleteStatement: writeObject(Ljava/lang/Object;)V
   * 46 Weak Mutation 964: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1098 - DeleteField: strategyLgnu/trove/strategy/HashingStrategy;
   * 47 Weak Mutation 1001: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1110 - DeleteField: _values[J
   * 48 Weak Mutation 1000: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1109 - DeleteStatement: writeObject(Ljava/lang/Object;)V
   * 49 Weak Mutation 1003: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1110 - InsertUnaryOp IINC 1 i
   * 50 Weak Mutation 1002: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1110 - InsertUnaryOp Negation of i
   * 51 Weak Mutation 1005: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1110 - DeleteStatement: writeLong(J)V
   * 52 Weak Mutation 1004: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1110 - InsertUnaryOp IINC -1 i
   * 53 Weak Mutation 993: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - ReplaceVariable FREE -> REMOVED
   * 54 Weak Mutation 992: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp IINC -1 i
   * 55 Weak Mutation 995: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - ReplaceComparisonOperator == -> !=
   * 56 Weak Mutation 994: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - DeleteField: FREELjava/lang/Object;
   * 57 Weak Mutation 997: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1109 - InsertUnaryOp Negation of i
   * 58 Weak Mutation 996: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1109 - DeleteField: _set[Ljava/lang/Object;
   * 59 Weak Mutation 999: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1109 - InsertUnaryOp IINC -1 i
   * 60 Weak Mutation 998: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1109 - InsertUnaryOp IINC 1 i
   * 61 Weak Mutation 986: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - ReplaceVariable REMOVED -> FREE
   * 62 Weak Mutation 987: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - DeleteField: REMOVEDLjava/lang/Object;
   * 63 Weak Mutation 984: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp IINC 1 i
   * 64 Weak Mutation 985: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp IINC -1 i
   * 65 Weak Mutation 990: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp Negation of i
   * 66 Weak Mutation 991: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp IINC 1 i
   * 67 Weak Mutation 988: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - ReplaceComparisonOperator == -> !=
   * 68 Weak Mutation 989: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - DeleteField: _set[Ljava/lang/Object;
   * 69 Weak Mutation 978: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - InsertUnaryOp IINC -1 i
   * 70 Weak Mutation 976: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - InsertUnaryOp Negation of i
   * 71 Weak Mutation 977: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - InsertUnaryOp IINC 1 i
   * 72 Weak Mutation 982: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - DeleteField: _set[Ljava/lang/Object;
   * 73 Weak Mutation 983: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1108 - InsertUnaryOp Negation of i
   * 74 Weak Mutation 980: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - ReplaceComparisonOperator <= -> <
   * 75 Weak Mutation 981: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - ReplaceComparisonOperator <= -> -1
   * 76 Weak Mutation 971: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1104 - InsertUnaryOp +1
   * 77 Weak Mutation 970: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1104 - InsertUnaryOp Negation
   * 78 Weak Mutation 969: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1101 - DeleteStatement: writeLong(J)V
   * 79 Weak Mutation 975: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1107 - DeleteField: _set[Ljava/lang/Object;
   * 80 Weak Mutation 974: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1104 - DeleteStatement: writeInt(I)V
   * 81 Weak Mutation 973: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1104 - DeleteField: _sizeI
   * 82 Weak Mutation 972: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1104 - InsertUnaryOp -1
   * 83 Weak Mutation 963: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1092 - DeleteStatement: writeByte(I)V
   * 84 Weak Mutation 962: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1092 - ReplaceConstant - 0 -> 1
   * 85 Weak Mutation 967: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1101 - InsertUnaryOp Negation
   * 86 Weak Mutation 966: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1101 - ReplaceVariable no_entry_value -> serialVersionUID
   * 87 Weak Mutation 965: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1098 - DeleteStatement: writeObject(Ljava/lang/Object;)V
   * 88 Weak Mutation 964: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1098 - DeleteField: strategyLgnu/trove/strategy/HashingStrategy;
   * 89 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 69 IFLE L1107 - true
   * 90 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 69 IFLE L1107 - false
   * 91 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I45 Branch 70 IF_ACMPEQ L1108 - false
   * 92 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I51 Branch 71 IF_ACMPEQ L1108 - true
   */

  @Test
  public void test41()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<String> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (-1530));
      tObjectLongCustomHashMap0.adjustOrPutValue("8000000000000000", 0L, (-113L));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(64);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tObjectLongCustomHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(false, tObjectLongCustomHashMap0.isEmpty());
      assertEquals("\uFFFD\uFFFD\u0000\u0005w\f\u0000\u0000\u0000\u0000?\u0000\u0000\u0000?\u0000\u0000\u0000sr\u0000*gnu.trove.strategy.IdentityHashingStrategy\uFFFD\uFFFD\uFFFDgQ\uFFFD\uFFFDX\u0002\u0000\u0000xpq\u0000~\u0000\u0001w\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001t\u0000\u00108000000000000000", byteArrayOutputStream0.toString());
  }

  //Test case number: 42
  /*
   * 2 covered goals:
   * 1 Weak Mutation 1006: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.readExternal(Ljava/io/ObjectInput;)V:1120 - DeleteStatement: readByte()B
   * 2 Weak Mutation 1006: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.readExternal(Ljava/io/ObjectInput;)V:1120 - DeleteStatement: readByte()B
   */

  @Test
  public void test42()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectLongCustomHashMap<String> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1, (float) 1, (long) 1);
      // Undeclared exception!
      try {
        tObjectLongCustomHashMap0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 43
  /*
   * 16 covered goals:
   * 1 Weak Mutation 1027: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.toString()Ljava/lang/String;:1147 - ReplaceConstant - { -> 
   * 2 Weak Mutation 1028: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.toString()Ljava/lang/String;:1148 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z
   * 3 Weak Mutation 1029: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.toString()Ljava/lang/String;:1158 - ReplaceConstant - } -> 
   * 4 Weak Mutation 1030: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.toString()Ljava/lang/String;:1158 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 5 Weak Mutation 1031: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.toString()Ljava/lang/String;:1159 - DeleteStatement: toString()Ljava/lang/String;
   * 6 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.<init>(Lgnu/trove/map/custom_hash/TObjectLongCustomHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 7 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.toString()Ljava/lang/String;: root-Branch
   * 8 Weak Mutation 100: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - ReplaceVariable no_entry_value -> serialVersionUID
   * 9 Weak Mutation 98: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:132 - ReplaceVariable noEntryValue -> serialVersionUID
   * 10 Weak Mutation 110: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:135 - ReplaceVariable no_entry_value -> serialVersionUID
   * 11 Weak Mutation 107: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - ReplaceComparisonOperator == -> <=
   * 12 Weak Mutation 1027: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.toString()Ljava/lang/String;:1147 - ReplaceConstant - { -> 
   * 13 Weak Mutation 1028: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.toString()Ljava/lang/String;:1148 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z
   * 14 Weak Mutation 1029: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.toString()Ljava/lang/String;:1158 - ReplaceConstant - } -> 
   * 15 Weak Mutation 1030: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.toString()Ljava/lang/String;:1158 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 16 Weak Mutation 1031: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.toString()Ljava/lang/String;:1159 - DeleteStatement: toString()Ljava/lang/String;
   */

  @Test
  public void test43()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 20, (float) 20, (-1351L));
      String string0 = tObjectLongCustomHashMap0.toString();
      assertEquals("{}", string0);
      assertNotNull(string0);
      assertEquals((-1351L), tObjectLongCustomHashMap0.getNoEntryValue());
  }

  //Test case number: 44
  /*
   * 78 covered goals:
   * 1 Weak Mutation 1290: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z:1151 - ReplaceComparisonOperator == -> !=
   * 2 Weak Mutation 1291: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z:1151 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 1288: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z:1151 - InsertUnaryOp Negation
   * 4 Weak Mutation 1289: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z:1151 - DeleteField: firstZ
   * 5 Weak Mutation 1299: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z:1154 - InsertUnaryOp Negation of value
   * 6 Weak Mutation 1298: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z:1154 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 7 Weak Mutation 1297: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z:1154 - ReplaceConstant - = -> 
   * 8 Weak Mutation 1296: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z:1154 - DeleteStatement: append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   * 9 Weak Mutation 1300: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z:1154 - DeleteStatement: append(J)Ljava/lang/StringBuilder;
   * 10 Weak Mutation 1295: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z:1154 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 11 Weak Mutation 1301: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z:1155 - ReplaceConstant - 1 -> 0
   * 12 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z: I4 Branch 102 IFEQ L1151 - false
   * 13 Weak Mutation 94: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;I)V:97 - InsertUnaryOp Negation
   * 14 Weak Mutation 675: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:456 - ReplaceComparisonOperator >= -> >
   * 15 Weak Mutation 673: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:456 - InsertUnaryOp IINC -1 index
   * 16 Weak Mutation 672: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:456 - InsertUnaryOp IINC 1 index
   * 17 Weak Mutation 702: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:461 - ReplaceVariable put_amount -> serialVersionUID
   * 18 Weak Mutation 703: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:461 - InsertUnaryOp Negation of put_amount
   * 19 Weak Mutation 700: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:461 - InsertUnaryOp IINC -1 index
   * 20 Weak Mutation 698: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:461 - InsertUnaryOp Negation of index
   * 21 Weak Mutation 699: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:461 - InsertUnaryOp IINC 1 index
   * 22 Weak Mutation 697: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:461 - DeleteField: _values[J
   * 23 Weak Mutation 668: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:453 - ReplaceVariable key -> FREE
   * 24 Weak Mutation 669: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:453 - ReplaceVariable key -> REMOVED
   * 25 Weak Mutation 670: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:453 - DeleteStatement: insertKey(Ljava/lang/Object;)I
   * 26 Weak Mutation 671: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:456 - InsertUnaryOp Negation of index
   * 27 Weak Mutation 747: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:518 - InsertUnaryOp Negation of i
   * 28 Weak Mutation 745: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:517 - DeleteField: _values[J
   * 29 Weak Mutation 744: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:516 - DeleteField: _set[Ljava/lang/Object;
   * 30 Weak Mutation 751: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:518 - ReplaceComparisonOperator <= -> <
   * 31 Weak Mutation 749: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:518 - InsertUnaryOp IINC -1 i
   * 32 Weak Mutation 748: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:518 - InsertUnaryOp IINC 1 i
   * 33 Weak Mutation 762: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 34 Weak Mutation 763: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 35 Weak Mutation 761: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 36 Weak Mutation 766: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - ReplaceComparisonOperator == -> !=
   * 37 Weak Mutation 764: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - ReplaceVariable REMOVED -> FREE
   * 38 Weak Mutation 765: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - DeleteField: REMOVEDLjava/lang/Object;
   * 39 Weak Mutation 754: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 40 Weak Mutation 755: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 41 Weak Mutation 752: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:518 - ReplaceComparisonOperator <= -> -1
   * 42 Weak Mutation 758: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - DeleteField: FREELjava/lang/Object;
   * 43 Weak Mutation 759: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - ReplaceComparisonOperator == -> !=
   * 44 Weak Mutation 756: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 45 Weak Mutation 757: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - ReplaceVariable FREE -> REMOVED
   * 46 Weak Mutation 713: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:470 - InsertUnaryOp Negation of newValue
   * 47 Weak Mutation 712: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:470 - ReplaceVariable newValue -> serialVersionUID
   * 48 Weak Mutation 705: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:466 - InsertUnaryOp Negation of isNewMapping
   * 49 Weak Mutation 704: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:462 - ReplaceConstant - 1 -> 0
   * 50 Weak Mutation 707: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:467 - InsertUnaryOp Negation
   * 51 Weak Mutation 706: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:466 - ReplaceComparisonOperator == -> !=
   * 52 Weak Mutation 709: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:467 - DeleteStatement: postInsertHook(Z)V
   * 53 Weak Mutation 708: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J:467 - DeleteField: consumeFreeSlotZ
   * 54 Weak Mutation 774: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - DeleteStatement: execute(Ljava/lang/Object;J)Z
   * 55 Weak Mutation 775: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - ReplaceComparisonOperator != -> ==
   * 56 Weak Mutation 772: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 57 Weak Mutation 773: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 58 Weak Mutation 770: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC -1 i
   * 59 Weak Mutation 771: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 60 Weak Mutation 768: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp Negation of i
   * 61 Weak Mutation 769: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:519 - InsertUnaryOp IINC 1 i
   * 62 Weak Mutation 777: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z:525 - ReplaceConstant - 1 -> 0
   * 63 Weak Mutation 1027: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.toString()Ljava/lang/String;:1147 - ReplaceConstant - { -> 
   * 64 Weak Mutation 1028: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.toString()Ljava/lang/String;:1148 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z
   * 65 Weak Mutation 1029: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.toString()Ljava/lang/String;:1158 - ReplaceConstant - } -> 
   * 66 Weak Mutation 1030: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.toString()Ljava/lang/String;:1158 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 67 Weak Mutation 1031: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.toString()Ljava/lang/String;:1159 - DeleteStatement: toString()Ljava/lang/String;
   * 68 Weak Mutation 1299: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z:1154 - InsertUnaryOp Negation of value
   * 69 Weak Mutation 1298: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z:1154 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 70 Weak Mutation 1297: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z:1154 - ReplaceConstant - = -> 
   * 71 Weak Mutation 1296: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z:1154 - DeleteStatement: append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   * 72 Weak Mutation 1301: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z:1155 - ReplaceConstant - 1 -> 0
   * 73 Weak Mutation 1300: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z:1154 - DeleteStatement: append(J)Ljava/lang/StringBuilder;
   * 74 Weak Mutation 1290: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z:1151 - ReplaceComparisonOperator == -> !=
   * 75 Weak Mutation 1291: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z:1151 - ReplaceConstant - 0 -> 1
   * 76 Weak Mutation 1288: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z:1151 - InsertUnaryOp Negation
   * 77 Weak Mutation 1289: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z:1151 - DeleteField: firstZ
   * 78 Weak Mutation 1295: gnu.trove.map.custom_hash.TObjectLongCustomHashMap$2.execute(Ljava/lang/Object;J)Z:1154 - DeleteField: val$bufLjava/lang/StringBuilder;
   */

  @Test
  public void test44()  throws Throwable  {
      IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, (-1521));
      tObjectLongCustomHashMap0.adjustOrPutValue((Long) null, (long) 0, (long) 0);
      String string0 = tObjectLongCustomHashMap0.toString();
      assertEquals(false, tObjectLongCustomHashMap0.isEmpty());
      assertEquals("{null=0}", string0);
  }

  //Test case number: 45
  /*
   * 24 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectLongCustomHashMap.valueCollection()Lgnu/trove/TLongCollection;: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectLongCustomHashMap$TLongValueCollection.<init>(Lgnu/trove/map/custom_hash/TObjectLongCustomHashMap;)V: root-Branch
   * 3 Weak Mutation 102: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - DeleteField: no_entry_valueJ
   * 4 Weak Mutation 103: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - ReplaceConstant - 0 -> 1
   * 5 Weak Mutation 101: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - InsertUnaryOp Negation
   * 6 Weak Mutation 99: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:132 - InsertUnaryOp Negation of noEntryValue
   * 7 Weak Mutation 111: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:135 - InsertUnaryOp Negation
   * 8 Weak Mutation 109: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:135 - DeleteField: _values[J
   * 9 Weak Mutation 106: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - ReplaceComparisonOperator == -> >=
   * 10 Weak Mutation 104: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - ReplaceConstant - 0 -> -1
   * 11 Weak Mutation 105: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:134 - DeleteStatement: longSub(JJ)I
   * 12 Weak Mutation 113: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:135 - DeleteStatement: fill([JJ)V
   * 13 Weak Mutation 112: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFJ)V:135 - DeleteField: no_entry_valueJ
   * 14 Weak Mutation 152: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:176 - InsertUnaryOp Negation of initialCapacity
   * 15 Weak Mutation 153: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:176 - InsertUnaryOp IINC 1 initialCapacity
   * 16 Weak Mutation 154: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:176 - InsertUnaryOp IINC -1 initialCapacity
   * 17 Weak Mutation 155: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:177 - ReplaceVariable capacity -> initialCapacity
   * 18 Weak Mutation 156: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:177 - InsertUnaryOp Negation of capacity
   * 19 Weak Mutation 157: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:177 - InsertUnaryOp IINC 1 capacity
   * 20 Weak Mutation 158: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:177 - InsertUnaryOp IINC -1 capacity
   * 21 Weak Mutation 159: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:178 - ReplaceVariable capacity -> initialCapacity
   * 22 Weak Mutation 162: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:178 - InsertUnaryOp IINC -1 capacity
   * 23 Weak Mutation 161: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:178 - InsertUnaryOp IINC 1 capacity
   * 24 Weak Mutation 160: gnu.trove.map.custom_hash.TObjectLongCustomHashMap.setUp(I)I:178 - InsertUnaryOp Negation of capacity
   */

  @Test
  public void test45()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectLongCustomHashMap<String> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, 1, (float) 1, (long) 1);
      TLongCollection tLongCollection0 = tObjectLongCustomHashMap0.valueCollection();
      assertEquals(1L, tObjectLongCustomHashMap0.getNoEntryValue());
      assertEquals(1L, tLongCollection0.getNoEntryValue());
  }
}

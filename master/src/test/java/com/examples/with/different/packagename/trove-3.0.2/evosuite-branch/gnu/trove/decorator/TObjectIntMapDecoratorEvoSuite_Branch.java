/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TObjectIntMapDecorator;
import gnu.trove.map.TObjectIntMap;
import gnu.trove.map.custom_hash.TObjectIntCustomHashMap;
import gnu.trove.map.hash.TObjectIntHashMap;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.util.AbstractMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TObjectIntMapDecoratorEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 7 covered goals:
   * 1 gnu.trove.decorator.TObjectIntMapDecorator$1.<init>(Lgnu/trove/decorator/TObjectIntMapDecorator;)V: root-Branch
   * 2 gnu.trove.decorator.TObjectIntMapDecorator$1.iterator()Ljava/util/Iterator;: root-Branch
   * 3 gnu.trove.decorator.TObjectIntMapDecorator.containsKey(Ljava/lang/Object;)Z: root-Branch
   * 4 gnu.trove.decorator.TObjectIntMapDecorator.entrySet()Ljava/util/Set;: root-Branch
   * 5 gnu.trove.decorator.TObjectIntMapDecorator.<init>(Lgnu/trove/map/TObjectIntMap;)V: root-Branch
   * 6 gnu.trove.decorator.TObjectIntMapDecorator$1$1.hasNext()Z: root-Branch
   * 7 gnu.trove.decorator.TObjectIntMapDecorator$1$1.<init>(Lgnu/trove/decorator/TObjectIntMapDecorator$1;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>();
      TObjectIntMapDecorator<Integer> tObjectIntMapDecorator0 = new TObjectIntMapDecorator<Integer>((TObjectIntMap<Integer>) tObjectIntHashMap0);
      boolean boolean0 = tObjectIntMapDecorator0.containsKey((Object) tObjectIntMapDecorator0);
      assertEquals(false, boolean0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectIntMapDecorator.readExternal(Ljava/io/ObjectInput;)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TObjectIntHashMap<Integer> tObjectIntHashMap0 = new TObjectIntHashMap<Integer>();
      TObjectIntMapDecorator<Integer> tObjectIntMapDecorator0 = new TObjectIntMapDecorator<Integer>((TObjectIntMap<Integer>) tObjectIntHashMap0);
      // Undeclared exception!
      try {
        tObjectIntMapDecorator0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * 1 gnu.trove.decorator.TObjectIntMapDecorator.unwrapValue(Ljava/lang/Object;)I: root-Branch
   * 2 gnu.trove.decorator.TObjectIntMapDecorator.wrapValue(I)Ljava/lang/Integer;: root-Branch
   * 3 gnu.trove.decorator.TObjectIntMapDecorator.put(Ljava/lang/Object;Ljava/lang/Integer;)Ljava/lang/Integer;: I3 Branch 5 IFNONNULL L97 - false
   * 4 gnu.trove.decorator.TObjectIntMapDecorator.containsValue(Ljava/lang/Object;)Z: I4 Branch 8 IFEQ L253 - false
   * 5 gnu.trove.decorator.TObjectIntMapDecorator.containsValue(Ljava/lang/Object;)Z: I11 Branch 9 IFEQ L253 - false
   */

  @Test
  public void test2()  throws Throwable  {
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>();
      TObjectIntMapDecorator<Integer> tObjectIntMapDecorator0 = new TObjectIntMapDecorator<Integer>((TObjectIntMap<Integer>) tObjectIntCustomHashMap0);
      Integer integer0 = tObjectIntMapDecorator0.put((Integer) null, (Integer) null);
      boolean boolean0 = tObjectIntMapDecorator0.containsValue((Object) integer0);
      assertEquals("{null=0}", tObjectIntCustomHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectIntMapDecorator.<init>()V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TObjectIntMapDecorator<Integer> tObjectIntMapDecorator0 = new TObjectIntMapDecorator<Integer>();
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectIntMapDecorator.writeExternal(Ljava/io/ObjectOutput;)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>();
      TObjectIntMapDecorator<Integer> tObjectIntMapDecorator0 = new TObjectIntMapDecorator<Integer>((TObjectIntMap<Integer>) tObjectIntCustomHashMap0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PrintStream printStream0 = new PrintStream((OutputStream) pipedOutputStream0, false);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) printStream0);
      tObjectIntMapDecorator0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals("{}", tObjectIntMapDecorator0.toString());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectIntMapDecorator.clear()V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>(205764, 205764, 205764);
      TObjectIntMapDecorator<Object> tObjectIntMapDecorator0 = new TObjectIntMapDecorator<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      tObjectIntMapDecorator0.clear();
      assertEquals(true, tObjectIntMapDecorator0.isEmpty());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectIntMapDecorator.getMap()Lgnu/trove/map/TObjectIntMap;: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TObjectIntCustomHashMap<Integer> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<Integer>();
      TObjectIntMapDecorator<Integer> tObjectIntMapDecorator0 = new TObjectIntMapDecorator<Integer>((TObjectIntMap<Integer>) tObjectIntCustomHashMap0);
      TObjectIntMap<Integer> tObjectIntMap0 = tObjectIntMapDecorator0.getMap();
      assertEquals(true, tObjectIntMap0.isEmpty());
  }

  //Test case number: 7
  /*
   * 12 covered goals:
   * 1 gnu.trove.decorator.TObjectIntMapDecorator$1$1.next()Ljava/util/Map$Entry;: root-Branch
   * 2 gnu.trove.decorator.TObjectIntMapDecorator$1$1$1.getKey()Ljava/lang/Object;: root-Branch
   * 3 gnu.trove.decorator.TObjectIntMapDecorator$1$1$1.<init>(Lgnu/trove/decorator/TObjectIntMapDecorator$1$1;Ljava/lang/Integer;Ljava/lang/Object;)V: root-Branch
   * 4 gnu.trove.decorator.TObjectIntMapDecorator$1$1$1.getValue()Ljava/lang/Integer;: root-Branch
   * 5 gnu.trove.decorator.TObjectIntMapDecorator.put(Ljava/lang/Object;Ljava/lang/Integer;)Ljava/lang/Integer;: I3 Branch 5 IFNONNULL L97 - true
   * 6 gnu.trove.decorator.TObjectIntMapDecorator.putAll(Ljava/util/Map;)V: I14 Branch 11 IFLE L297 - false
   * 7 gnu.trove.decorator.TObjectIntMapDecorator$1.<init>(Lgnu/trove/decorator/TObjectIntMapDecorator;)V: root-Branch
   * 8 gnu.trove.decorator.TObjectIntMapDecorator$1.iterator()Ljava/util/Iterator;: root-Branch
   * 9 gnu.trove.decorator.TObjectIntMapDecorator.size()I: root-Branch
   * 10 gnu.trove.decorator.TObjectIntMapDecorator.entrySet()Ljava/util/Set;: root-Branch
   * 11 gnu.trove.decorator.TObjectIntMapDecorator.putAll(Ljava/util/Map;)V: I14 Branch 11 IFLE L297 - true
   * 12 gnu.trove.decorator.TObjectIntMapDecorator$1$1.<init>(Lgnu/trove/decorator/TObjectIntMapDecorator$1;)V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>(205764, 205764, 205764);
      TObjectIntMapDecorator<Object> tObjectIntMapDecorator0 = new TObjectIntMapDecorator<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      tObjectIntMapDecorator0.put((Object) "jpn", (Integer) 205764);
      tObjectIntMapDecorator0.putAll((Map<?, ? extends Integer>) tObjectIntMapDecorator0);
      assertEquals(false, tObjectIntMapDecorator0.isEmpty());
      assertEquals("{jpn=205764}", tObjectIntHashMap0.toString());
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectIntMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Integer;: I13 Branch 6 IF_ICMPNE L113 - true
   */

  @Test
  public void test8()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>(205759, 205759);
      TObjectIntMapDecorator<Object> tObjectIntMapDecorator0 = new TObjectIntMapDecorator<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      tObjectIntMapDecorator0.put((Object) "(Z*{3Y", (Integer) 205759);
      Integer integer0 = tObjectIntMapDecorator0.get((Object) "(Z*{3Y");
      assertEquals(false, tObjectIntHashMap0.isEmpty());
      assertEquals(205759, (int)integer0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectIntMapDecorator.get(Ljava/lang/Object;)Ljava/lang/Integer;: I13 Branch 6 IF_ICMPNE L113 - false
   */

  @Test
  public void test9()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>(205764, 205764, 205764);
      TObjectIntMapDecorator<Object> tObjectIntMapDecorator0 = new TObjectIntMapDecorator<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      Integer integer0 = tObjectIntMapDecorator0.put((Object) "jpn", (Integer) 205764);
      tObjectIntMapDecorator0.get((Object) integer0);
      assertEquals(1, tObjectIntHashMap0.size());
      assertEquals("{jpn=205764}", tObjectIntMapDecorator0.toString());
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectIntMapDecorator.remove(Ljava/lang/Object;)Ljava/lang/Integer;: I13 Branch 7 IF_ICMPNE L140 - false
   */

  @Test
  public void test10()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>(419, 419, 419);
      TObjectIntMapDecorator<Object> tObjectIntMapDecorator0 = new TObjectIntMapDecorator<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      Integer integer0 = new Integer(419);
      tObjectIntMapDecorator0.remove((Object) integer0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.decorator.TObjectIntMapDecorator.containsValue(Ljava/lang/Object;)Z: I4 Branch 8 IFEQ L253 - true
   */

  @Test
  public void test11()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>(205764, 205764, 205764);
      TObjectIntMapDecorator<Object> tObjectIntMapDecorator0 = new TObjectIntMapDecorator<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      AbstractMap.SimpleEntry<Integer, Integer> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, Integer>((Integer) 205764, (Integer) 205764);
      boolean boolean0 = tObjectIntMapDecorator0.containsValue((Object) abstractMap_SimpleEntry0);
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 2 covered goals:
   * 1 gnu.trove.decorator.TObjectIntMapDecorator.containsValue(Ljava/lang/Object;)Z: I11 Branch 9 IFEQ L253 - true
   * 2 gnu.trove.decorator.TObjectIntMapDecorator.containsValue(Ljava/lang/Object;)Z: I4 Branch 8 IFEQ L253 - false
   */

  @Test
  public void test12()  throws Throwable  {
      TObjectIntHashMap<Object> tObjectIntHashMap0 = new TObjectIntHashMap<Object>(205759, 205759);
      TObjectIntMapDecorator<Object> tObjectIntMapDecorator0 = new TObjectIntMapDecorator<Object>((TObjectIntMap<Object>) tObjectIntHashMap0);
      Integer integer0 = tObjectIntMapDecorator0.put((Object) "(Z*{3Y", (Integer) 205759);
      boolean boolean0 = tObjectIntMapDecorator0.containsValue((Object) integer0);
      assertEquals("{(Z*{3Y=205759}", tObjectIntHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 4 covered goals:
   * 1 gnu.trove.decorator.TObjectIntMapDecorator.isEmpty()Z: I5 Branch 10 IFNE L284 - true
   * 2 gnu.trove.decorator.TObjectIntMapDecorator.unwrapValue(Ljava/lang/Object;)I: root-Branch
   * 3 gnu.trove.decorator.TObjectIntMapDecorator.wrapValue(I)Ljava/lang/Integer;: root-Branch
   * 4 gnu.trove.decorator.TObjectIntMapDecorator.put(Ljava/lang/Object;Ljava/lang/Integer;)Ljava/lang/Integer;: I3 Branch 5 IFNONNULL L97 - true
   */

  @Test
  public void test13()  throws Throwable  {
      TObjectIntHashMap<String> tObjectIntHashMap0 = new TObjectIntHashMap<String>(440, 440);
      TObjectIntMapDecorator<String> tObjectIntMapDecorator0 = new TObjectIntMapDecorator<String>((TObjectIntMap<String>) tObjectIntHashMap0);
      tObjectIntMapDecorator0.put("#^", (Integer) 440);
      boolean boolean0 = tObjectIntMapDecorator0.isEmpty();
      assertEquals("{#^=440}", tObjectIntHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 14
  /*
   * 2 covered goals:
   * 1 gnu.trove.decorator.TObjectIntMapDecorator.isEmpty()Z: I5 Branch 10 IFNE L284 - false
   * 2 gnu.trove.decorator.TObjectIntMapDecorator.<init>(Lgnu/trove/map/TObjectIntMap;)V: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      IdentityHashingStrategy<String> identityHashingStrategy0 = new IdentityHashingStrategy<String>();
      TObjectIntCustomHashMap<String> tObjectIntCustomHashMap0 = new TObjectIntCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (-92), (float) (-92));
      TObjectIntMapDecorator<String> tObjectIntMapDecorator0 = new TObjectIntMapDecorator<String>((TObjectIntMap<String>) tObjectIntCustomHashMap0);
      boolean boolean0 = tObjectIntMapDecorator0.isEmpty();
      assertEquals(true, boolean0);
  }
}

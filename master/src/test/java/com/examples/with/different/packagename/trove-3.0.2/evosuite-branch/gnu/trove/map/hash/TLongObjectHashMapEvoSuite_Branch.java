/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TLongCollection;
import gnu.trove.function.TObjectFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongSet;
import gnu.trove.map.TLongObjectMap;
import gnu.trove.map.hash.TLongObjectHashMap;
import gnu.trove.procedure.TLongObjectProcedure;
import gnu.trove.procedure.TLongProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.set.TLongSet;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TLongObjectHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap$ValueView.<init>(Lgnu/trove/map/hash/TLongObjectHashMap;)V: root-Branch
   * 2 gnu.trove.map.hash.TLongObjectHashMap.valueCollection()Ljava/util/Collection;: root-Branch
   * 3 gnu.trove.map.hash.TLongObjectHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.hash.TLongObjectHashMap.<init>(IF)V: root-Branch
   * 5 gnu.trove.map.hash.TLongObjectHashMap$1.<init>(Lgnu/trove/map/hash/TLongObjectHashMap;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>(0, 0);
      Collection<Integer> collection0 = tLongObjectHashMap0.valueCollection();
      assertEquals(true, collection0.isEmpty());
  }

  //Test case number: 1
  /*
   * 20 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap$TLongObjectHashIterator.key()J: root-Branch
   * 2 gnu.trove.map.hash.TLongObjectHashMap$TLongObjectHashIterator.advance()V: root-Branch
   * 3 gnu.trove.map.hash.TLongObjectHashMap$TLongObjectHashIterator.value()Ljava/lang/Object;: root-Branch
   * 4 gnu.trove.map.hash.TLongObjectHashMap$TLongObjectHashIterator.<init>(Lgnu/trove/map/hash/TLongObjectHashMap;Lgnu/trove/map/hash/TLongObjectHashMap;)V: root-Branch
   * 5 gnu.trove.map.hash.TLongObjectHashMap.<init>(IFJ)V: root-Branch
   * 6 gnu.trove.map.hash.TLongObjectHashMap.iterator()Lgnu/trove/iterator/TLongObjectIterator;: root-Branch
   * 7 gnu.trove.map.hash.TLongObjectHashMap.rehash(I)V: I47 Branch 36 IFLE L161 - true
   * 8 gnu.trove.map.hash.TLongObjectHashMap.rehash(I)V: I47 Branch 36 IFLE L161 - false
   * 9 gnu.trove.map.hash.TLongObjectHashMap.rehash(I)V: I54 Branch 37 IF_ICMPNE L162 - true
   * 10 gnu.trove.map.hash.TLongObjectHashMap.rehash(I)V: I54 Branch 37 IF_ICMPNE L162 - false
   * 11 gnu.trove.map.hash.TLongObjectHashMap.get(J)Ljava/lang/Object;: I9 Branch 46 IFGE L213 - true
   * 12 gnu.trove.map.hash.TLongObjectHashMap.putIfAbsent(JLjava/lang/Object;)Ljava/lang/Object;: I9 Branch 47 IFGE L229 - true
   * 13 gnu.trove.map.hash.TLongObjectHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I11 Branch 48 IFGE L239 - true
   * 14 gnu.trove.map.hash.TLongObjectHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I40 Branch 49 IFEQ L247 - false
   * 15 gnu.trove.map.hash.TLongObjectHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 73 IFNE L467 - true
   * 16 gnu.trove.map.hash.TLongObjectHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 74 IF_ICMPEQ L471 - true
   * 17 gnu.trove.map.hash.TLongObjectHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 75 IFEQ L476 - true
   * 18 gnu.trove.map.hash.TLongObjectHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 75 IFEQ L476 - false
   * 19 gnu.trove.map.hash.TLongObjectHashMap.equals(Ljava/lang/Object;)Z: I52 Branch 76 IFNONNULL L480 - true
   * 20 gnu.trove.map.hash.TLongObjectHashMap.equals(Ljava/lang/Object;)Z: I75 Branch 79 IFNE L485 - true
   */

  @Test
  public void test1()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>((-289), (-289), (-289));
      tLongObjectHashMap0.putIfAbsent((long) (-289), (Integer) (-289));
      boolean boolean0 = tLongObjectHashMap0.equals((Object) tLongObjectHashMap0);
      assertEquals(false, tLongObjectHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.clear()V: root-Branch
   * 2 gnu.trove.map.hash.TLongObjectHashMap.<init>()V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TLongObjectHashMap<Long> tLongObjectHashMap0 = new TLongObjectHashMap<Long>();
      tLongObjectHashMap0.clear();
      assertEquals(23, tLongObjectHashMap0.capacity());
      assertEquals("{}", tLongObjectHashMap0.toString());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.removeAt(I)V: root-Branch
   * 2 gnu.trove.map.hash.TLongObjectHashMap.remove(J)Ljava/lang/Object;: I13 Branch 50 IFLT L259 - false
   */

  @Test
  public void test3()  throws Throwable  {
      TLongObjectHashMap<Long> tLongObjectHashMap0 = new TLongObjectHashMap<Long>(0, 0);
      tLongObjectHashMap0.putIfAbsent((long) 0, (Long) 0L);
      assertEquals(1, tLongObjectHashMap0.size());
      
      tLongObjectHashMap0.remove(0L);
      assertEquals("{}", tLongObjectHashMap0.toString());
  }

  //Test case number: 4
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.containsKey(J)Z: root-Branch
   * 2 gnu.trove.map.hash.TLongObjectHashMap$KeyView.containsAll([J)Z: I14 Branch 8 IF_ICMPGE L587 - false
   * 3 gnu.trove.map.hash.TLongObjectHashMap$KeyView.containsAll([J)Z: I25 Branch 9 IFNE L588 - false
   * 4 gnu.trove.map.hash.TLongObjectHashMap.keySet()Lgnu/trove/set/TLongSet;: root-Branch
   * 5 gnu.trove.map.hash.TLongObjectHashMap.<init>(I)V: root-Branch
   * 6 gnu.trove.map.hash.TLongObjectHashMap$KeyView.<init>(Lgnu/trove/map/hash/TLongObjectHashMap;)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>((-583));
      TLongSet tLongSet0 = tLongObjectHashMap0.keySet();
      TUnmodifiableLongSet tUnmodifiableLongSet0 = new TUnmodifiableLongSet(tLongSet0);
      boolean boolean0 = tUnmodifiableLongSet0.containsAll(tLongObjectHashMap0._set);
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TLongObjectHashMap<String> tLongObjectHashMap0 = new TLongObjectHashMap<String>(0);
      boolean boolean0 = tLongObjectHashMap0.forEachKey((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 6
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap$1.execute(JLjava/lang/Object;)Z: root-Branch
   * 2 gnu.trove.map.hash.TLongObjectHashMap.forEachEntry(Lgnu/trove/procedure/TLongObjectProcedure;)Z: I30 Branch 66 IF_ICMPNE L417 - false
   * 3 gnu.trove.map.hash.TLongObjectHashMap.forEachEntry(Lgnu/trove/procedure/TLongObjectProcedure;)Z: I39 Branch 67 IFNE L417 - true
   * 4 gnu.trove.map.hash.TLongObjectHashMap.<init>(Lgnu/trove/map/TLongObjectMap;)V: root-Branch
   * 5 gnu.trove.map.hash.TLongObjectHashMap.getNoEntryKey()J: root-Branch
   * 6 gnu.trove.map.hash.TLongObjectHashMap.putAll(Lgnu/trove/map/TLongObjectMap;)V: root-Branch
   * 7 gnu.trove.map.hash.TLongObjectHashMap.put(JLjava/lang/Object;)Ljava/lang/Object;: root-Branch
   * 8 gnu.trove.map.hash.TLongObjectHashMap.forEachEntry(Lgnu/trove/procedure/TLongObjectProcedure;)Z: I23 Branch 65 IFLE L416 - true
   * 9 gnu.trove.map.hash.TLongObjectHashMap.forEachEntry(Lgnu/trove/procedure/TLongObjectProcedure;)Z: I23 Branch 65 IFLE L416 - false
   * 10 gnu.trove.map.hash.TLongObjectHashMap.forEachEntry(Lgnu/trove/procedure/TLongObjectProcedure;)Z: I30 Branch 66 IF_ICMPNE L417 - true
   */

  @Test
  public void test6()  throws Throwable  {
      TLongObjectHashMap<String> tLongObjectHashMap0 = new TLongObjectHashMap<String>();
      tLongObjectHashMap0.put((long) 0, "MI!gB7:L!bLN(8<dTV");
      TLongObjectHashMap<String> tLongObjectHashMap1 = new TLongObjectHashMap<String>((TLongObjectMap<? extends String>) tLongObjectHashMap0);
      assertEquals(false, tLongObjectHashMap0.isEmpty());
      assertEquals("{0=MI!gB7:L!bLN(8<dTV}", tLongObjectHashMap1.toString());
  }

  //Test case number: 7
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap$KeyView.toArray()[J: root-Branch
   * 2 gnu.trove.map.hash.TLongObjectHashMap.keys()[J: I27 Branch 52 IFLE L315 - true
   * 3 gnu.trove.map.hash.TLongObjectHashMap.keys()[J: I27 Branch 52 IFLE L315 - false
   * 4 gnu.trove.map.hash.TLongObjectHashMap.keys()[J: I34 Branch 53 IF_ICMPNE L316 - true
   */

  @Test
  public void test7()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>(543);
      TLongSet tLongSet0 = tLongObjectHashMap0.keySet();
      TUnmodifiableLongSet tUnmodifiableLongSet0 = new TUnmodifiableLongSet(tLongSet0);
      long[] longArray0 = tUnmodifiableLongSet0.toArray();
      assertNotNull(longArray0);
      assertEquals(1117, tLongObjectHashMap0.capacity());
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongObjectHashMap$KeyView.getNoEntryValue()J: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>(543);
      TLongSet tLongSet0 = tLongObjectHashMap0.keySet();
      TUnmodifiableLongSet tUnmodifiableLongSet0 = new TUnmodifiableLongSet(tLongSet0);
      tUnmodifiableLongSet0.getNoEntryValue();
      assertEquals(1117, tLongObjectHashMap0.capacity());
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongObjectHashMap$KeyView.size()I: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>(525);
      TLongSet tLongSet0 = tLongObjectHashMap0.keySet();
      TUnmodifiableLongSet tUnmodifiableLongSet0 = new TUnmodifiableLongSet(tLongSet0);
      tUnmodifiableLongSet0.size();
      assertEquals(1117, tLongObjectHashMap0.capacity());
  }

  //Test case number: 10
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I30 Branch 40 IF_ICMPNE L194 - false
   * 2 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I35 Branch 41 IF_ACMPNE L194 - true
   * 3 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I23 Branch 39 IFLE L193 - true
   * 4 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I14 Branch 38 IF_ACMPNE L192 - false
   * 5 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I23 Branch 39 IFLE L193 - false
   * 6 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I30 Branch 40 IF_ICMPNE L194 - true
   */

  @Test
  public void test10()  throws Throwable  {
      TLongObjectHashMap<String> tLongObjectHashMap0 = new TLongObjectHashMap<String>();
      tLongObjectHashMap0.put((long) 0, "MI!gB7:L!bLN(8<dTV");
      boolean boolean0 = tLongObjectHashMap0.containsValue((Object) null);
      assertEquals(false, tLongObjectHashMap0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I35 Branch 41 IF_ACMPNE L194 - false
   * 2 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I14 Branch 38 IF_ACMPNE L192 - false
   * 3 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I23 Branch 39 IFLE L193 - false
   * 4 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I30 Branch 40 IF_ICMPNE L194 - true
   * 5 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I30 Branch 40 IF_ICMPNE L194 - false
   */

  @Test
  public void test11()  throws Throwable  {
      TLongObjectHashMap<String> tLongObjectHashMap0 = new TLongObjectHashMap<String>();
      tLongObjectHashMap0.putIfAbsent(421L, (String) null);
      boolean boolean0 = tLongObjectHashMap0.containsValue((Object) null);
      assertEquals("{421=null}", tLongObjectHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 12
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I57 Branch 43 IF_ICMPNE L200 - false
   * 2 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I62 Branch 44 IF_ACMPEQ L200 - false
   * 3 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I68 Branch 45 IFEQ L200 - true
   * 4 gnu.trove.map.hash.TLongObjectHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 73 IFNE L467 - false
   * 5 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I50 Branch 42 IFLE L199 - true
   * 6 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I14 Branch 38 IF_ACMPNE L192 - true
   * 7 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I50 Branch 42 IFLE L199 - false
   * 8 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I57 Branch 43 IF_ICMPNE L200 - true
   */

  @Test
  public void test12()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>((-289), (-289), (-289));
      tLongObjectHashMap0.putIfAbsent((long) (-289), (Integer) (-289));
      boolean boolean0 = tLongObjectHashMap0.containsValue((Object) tLongObjectHashMap0);
      assertEquals(1, tLongObjectHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I62 Branch 44 IF_ACMPEQ L200 - true
   * 2 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I14 Branch 38 IF_ACMPNE L192 - true
   * 3 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I50 Branch 42 IFLE L199 - false
   * 4 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I57 Branch 43 IF_ICMPNE L200 - true
   * 5 gnu.trove.map.hash.TLongObjectHashMap.containsValue(Ljava/lang/Object;)Z: I57 Branch 43 IF_ICMPNE L200 - false
   */

  @Test
  public void test13()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>((-289), (-289), (-289));
      Object[] objectArray0 = new Object[3];
      objectArray0[2] = (Object) (-289);
      tLongObjectHashMap0.putIfAbsent((long) (-289), (Integer) (-289));
      boolean boolean0 = tLongObjectHashMap0.containsValue(objectArray0[2]);
      assertEquals(false, tLongObjectHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.get(J)Ljava/lang/Object;: I9 Branch 46 IFGE L213 - false
   */

  @Test
  public void test14()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>(543);
      tLongObjectHashMap0.get((long) 543);
      assertEquals(1117, tLongObjectHashMap0.capacity());
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.putIfAbsent(JLjava/lang/Object;)Ljava/lang/Object;: I9 Branch 47 IFGE L229 - false
   */

  @Test
  public void test15()  throws Throwable  {
      TLongObjectHashMap<String> tLongObjectHashMap0 = new TLongObjectHashMap<String>();
      tLongObjectHashMap0.put((long) 0, "MI!gB7:L!bLN(8<dTV");
      tLongObjectHashMap0.putIfAbsent((long) 0, ")sQ");
      assertEquals(false, tLongObjectHashMap0.isEmpty());
      assertEquals("{0=MI!gB7:L!bLN(8<dTV}", tLongObjectHashMap0.toString());
  }

  //Test case number: 16
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I11 Branch 48 IFGE L239 - false
   * 2 gnu.trove.map.hash.TLongObjectHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I40 Branch 49 IFEQ L247 - true
   */

  @Test
  public void test16()  throws Throwable  {
      TLongObjectHashMap<String> tLongObjectHashMap0 = new TLongObjectHashMap<String>();
      tLongObjectHashMap0.put((long) 0, "MI!gB7:L!bLN(8<dTV");
      tLongObjectHashMap0.put((long) 0, "MI!gB7:L!bLN(8<dTV");
      assertEquals(false, tLongObjectHashMap0.isEmpty());
      assertEquals("{0=MI!gB7:L!bLN(8<dTV}", tLongObjectHashMap0.toString());
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.remove(J)Ljava/lang/Object;: I13 Branch 50 IFLT L259 - true
   */

  @Test
  public void test17()  throws Throwable  {
      TLongObjectHashMap<String> tLongObjectHashMap0 = new TLongObjectHashMap<String>();
      tLongObjectHashMap0.remove((long) 1726);
      assertEquals(true, tLongObjectHashMap0.isEmpty());
      assertEquals(23, tLongObjectHashMap0.capacity());
  }

  //Test case number: 18
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.putAll(Ljava/util/Map;)V: I13 Branch 51 IFEQ L279 - false
   * 2 gnu.trove.map.hash.TLongObjectHashMap.putAll(Ljava/util/Map;)V: I13 Branch 51 IFEQ L279 - true
   */

  @Test
  public void test18()  throws Throwable  {
      TLongObjectHashMap<Object> tLongObjectHashMap0 = new TLongObjectHashMap<Object>(289, 289, 289);
      HashMap<Long, Long> hashMap0 = new HashMap<Long, Long>();
      Long long0 = new Long((long) 289);
      hashMap0.put(long0, long0);
      tLongObjectHashMap0.putAll((Map<? extends Long, ?>) hashMap0);
      assertEquals(false, tLongObjectHashMap0.isEmpty());
      assertEquals("{289=289}", tLongObjectHashMap0.toString());
  }

  //Test case number: 19
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.keys()[J: I34 Branch 53 IF_ICMPNE L316 - false
   * 2 gnu.trove.map.hash.TLongObjectHashMap.keys()[J: I27 Branch 52 IFLE L315 - true
   * 3 gnu.trove.map.hash.TLongObjectHashMap.keys()[J: I27 Branch 52 IFLE L315 - false
   * 4 gnu.trove.map.hash.TLongObjectHashMap.keys()[J: I34 Branch 53 IF_ICMPNE L316 - true
   */

  @Test
  public void test19()  throws Throwable  {
      TLongObjectHashMap<String> tLongObjectHashMap0 = new TLongObjectHashMap<String>();
      tLongObjectHashMap0.put((long) 0, "MI!gB7:L!bLN(8<dTV");
      tLongObjectHashMap0.keys();
      assertEquals("{0=MI!gB7:L!bLN(8<dTV}", tLongObjectHashMap0.toString());
      assertEquals(false, tLongObjectHashMap0.isEmpty());
  }

  //Test case number: 20
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.keys([J)[J: I6 Branch 54 IF_ICMPGE L327 - true
   * 2 gnu.trove.map.hash.TLongObjectHashMap.keys([J)[J: I34 Branch 55 IFLE L334 - true
   * 3 gnu.trove.map.hash.TLongObjectHashMap.keys([J)[J: I34 Branch 55 IFLE L334 - false
   * 4 gnu.trove.map.hash.TLongObjectHashMap.keys([J)[J: I41 Branch 56 IF_ICMPNE L335 - true
   */

  @Test
  public void test20()  throws Throwable  {
      TLongObjectHashMap<String> tLongObjectHashMap0 = new TLongObjectHashMap<String>(1342);
      TLongObjectHashMap<Integer> tLongObjectHashMap1 = new TLongObjectHashMap<Integer>(1342, 1342, 1342);
      long[] longArray0 = tLongObjectHashMap1.keys(tLongObjectHashMap0._set);
      assertNotNull(longArray0);
      assertEquals(1342L, tLongObjectHashMap1.getNoEntryKey());
      assertEquals(2729, tLongObjectHashMap0.capacity());
  }

  //Test case number: 21
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.keys([J)[J: I6 Branch 54 IF_ICMPGE L327 - false
   * 2 gnu.trove.map.hash.TLongObjectHashMap.keys([J)[J: I41 Branch 56 IF_ICMPNE L335 - false
   * 3 gnu.trove.map.hash.TLongObjectHashMap.keys([J)[J: I34 Branch 55 IFLE L334 - true
   * 4 gnu.trove.map.hash.TLongObjectHashMap.keys([J)[J: I34 Branch 55 IFLE L334 - false
   * 5 gnu.trove.map.hash.TLongObjectHashMap.keys([J)[J: I41 Branch 56 IF_ICMPNE L335 - true
   */

  @Test
  public void test21()  throws Throwable  {
      TLongObjectHashMap<Long> tLongObjectHashMap0 = new TLongObjectHashMap<Long>();
      tLongObjectHashMap0.putIfAbsent((-15L), (Long) (-15L));
      tLongObjectHashMap0.put(0L, (Long) 0L);
      long[] longArray0 = new long[1];
      tLongObjectHashMap0.keys(longArray0);
      assertEquals(2, tLongObjectHashMap0.size());
      assertEquals("{-15=-15,0=0}", tLongObjectHashMap0.toString());
  }

  //Test case number: 22
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.values()[Ljava/lang/Object;: I35 Branch 58 IF_ICMPNE L357 - false
   * 2 gnu.trove.map.hash.TLongObjectHashMap.values()[Ljava/lang/Object;: I28 Branch 57 IFLE L356 - true
   * 3 gnu.trove.map.hash.TLongObjectHashMap.values()[Ljava/lang/Object;: I28 Branch 57 IFLE L356 - false
   * 4 gnu.trove.map.hash.TLongObjectHashMap.values()[Ljava/lang/Object;: I35 Branch 58 IF_ICMPNE L357 - true
   */

  @Test
  public void test22()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>(543);
      tLongObjectHashMap0.put((long) 543, (Integer) 543);
      tLongObjectHashMap0.values();
      assertEquals("{543=543}", tLongObjectHashMap0.toString());
      assertEquals(1, tLongObjectHashMap0.size());
  }

  //Test case number: 23
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I6 Branch 59 IF_ICMPGE L368 - true
   * 2 gnu.trove.map.hash.TLongObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I39 Branch 60 IFLE L376 - true
   * 3 gnu.trove.map.hash.TLongObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I39 Branch 60 IFLE L376 - false
   * 4 gnu.trove.map.hash.TLongObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I46 Branch 61 IF_ICMPNE L377 - true
   */

  @Test
  public void test23()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      TLongObjectHashMap<Object> tLongObjectHashMap0 = new TLongObjectHashMap<Object>((-289), (float) (-289), (-16L));
      Object[] objectArray1 = tLongObjectHashMap0.values(objectArray0);
      assertNotNull(objectArray1);
      assertEquals((-16L), tLongObjectHashMap0.getNoEntryKey());
      assertSame(objectArray0, objectArray1);
  }

  //Test case number: 24
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I6 Branch 59 IF_ICMPGE L368 - false
   * 2 gnu.trove.map.hash.TLongObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I46 Branch 61 IF_ICMPNE L377 - false
   * 3 gnu.trove.map.hash.TLongObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I39 Branch 60 IFLE L376 - true
   * 4 gnu.trove.map.hash.TLongObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I39 Branch 60 IFLE L376 - false
   * 5 gnu.trove.map.hash.TLongObjectHashMap.values([Ljava/lang/Object;)[Ljava/lang/Object;: I46 Branch 61 IF_ICMPNE L377 - true
   */

  @Test
  public void test24()  throws Throwable  {
      TLongObjectHashMap<String> tLongObjectHashMap0 = new TLongObjectHashMap<String>();
      tLongObjectHashMap0.put((long) 0, "MI!gB7:L!bLN(8<dTV");
      tLongObjectHashMap0.putIfAbsent(421L, (String) null);
      String[] stringArray0 = new String[1];
      tLongObjectHashMap0.values(stringArray0);
      assertEquals(false, tLongObjectHashMap0.isEmpty());
      assertEquals(2, tLongObjectHashMap0.size());
  }

  //Test case number: 25
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I25 Branch 63 IF_ICMPNE L402 - false
   * 2 gnu.trove.map.hash.TLongObjectHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I31 Branch 64 IFNE L402 - true
   * 3 gnu.trove.map.hash.TLongObjectHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I18 Branch 62 IFLE L401 - true
   * 4 gnu.trove.map.hash.TLongObjectHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I18 Branch 62 IFLE L401 - false
   * 5 gnu.trove.map.hash.TLongObjectHashMap.forEachValue(Lgnu/trove/procedure/TObjectProcedure;)Z: I25 Branch 63 IF_ICMPNE L402 - true
   */

  @Test
  public void test25()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>((-289), (-289), (-289));
      Object[] objectArray0 = new Object[3];
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
      tLongObjectHashMap0.putIfAbsent((long) (-289), (Integer) (-289));
      boolean boolean0 = tLongObjectHashMap0.forEachValue((TObjectProcedure<? super Integer>) toObjectArrayProceedure0);
      assertEquals(7, tLongObjectHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 26
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.retainEntries(Lgnu/trove/procedure/TLongObjectProcedure;)Z: I31 Branch 68 IFLE L436 - true
   * 2 gnu.trove.map.hash.TLongObjectHashMap.retainEntries(Lgnu/trove/procedure/TLongObjectProcedure;)Z: I31 Branch 68 IFLE L436 - false
   * 3 gnu.trove.map.hash.TLongObjectHashMap.retainEntries(Lgnu/trove/procedure/TLongObjectProcedure;)Z: I38 Branch 69 IF_ICMPNE L437 - true
   * 4 gnu.trove.map.hash.TLongObjectHashMap.<init>(IF)V: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>((-1721), (-1721));
      boolean boolean0 = tLongObjectHashMap0.retainEntries((TLongObjectProcedure<? super Integer>) null);
      assertEquals(false, boolean0);
      assertEquals(3, tLongObjectHashMap0.capacity());
      assertEquals("{}", tLongObjectHashMap0.toString());
  }

  //Test case number: 27
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: I18 Branch 71 IFLE L455 - true
   * 2 gnu.trove.map.hash.TLongObjectHashMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: I18 Branch 71 IFLE L455 - false
   * 3 gnu.trove.map.hash.TLongObjectHashMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: I25 Branch 72 IF_ICMPNE L456 - true
   */

  @Test
  public void test27()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>(543);
      tLongObjectHashMap0.transformValues((TObjectFunction<Integer, Integer>) null);
      assertEquals(1117, tLongObjectHashMap0.capacity());
  }

  //Test case number: 28
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: I25 Branch 72 IF_ICMPNE L456 - false
   * 2 gnu.trove.map.hash.TLongObjectHashMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: I18 Branch 71 IFLE L455 - false
   * 3 gnu.trove.map.hash.TLongObjectHashMap.transformValues(Lgnu/trove/function/TObjectFunction;)V: I25 Branch 72 IF_ICMPNE L456 - true
   */

  @Test
  public void test28()  throws Throwable  {
      TLongObjectHashMap<Long> tLongObjectHashMap0 = new TLongObjectHashMap<Long>(1, 1, 1);
      Long long0 = new Long((long) 1);
      tLongObjectHashMap0.putIfAbsent((long) 1, long0);
      // Undeclared exception!
      try {
        tLongObjectHashMap0.transformValues((TObjectFunction<Long, Long>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 29
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 74 IF_ICMPEQ L471 - false
   * 2 gnu.trove.map.hash.TLongObjectHashMap.<init>(IFJ)V: root-Branch
   * 3 gnu.trove.map.hash.TLongObjectHashMap.rehash(I)V: I47 Branch 36 IFLE L161 - true
   * 4 gnu.trove.map.hash.TLongObjectHashMap.rehash(I)V: I47 Branch 36 IFLE L161 - false
   * 5 gnu.trove.map.hash.TLongObjectHashMap.rehash(I)V: I54 Branch 37 IF_ICMPNE L162 - true
   * 6 gnu.trove.map.hash.TLongObjectHashMap.rehash(I)V: I54 Branch 37 IF_ICMPNE L162 - false
   * 7 gnu.trove.map.hash.TLongObjectHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 73 IFNE L467 - true
   */

  @Test
  public void test29()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>((-308), (-308), (-308));
      tLongObjectHashMap0.putIfAbsent((long) (-308), (Integer) (-308));
      TLongObjectHashMap<Long> tLongObjectHashMap1 = new TLongObjectHashMap<Long>();
      boolean boolean0 = tLongObjectHashMap1.equals((Object) tLongObjectHashMap0);
      assertEquals(false, tLongObjectHashMap0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 30
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.hashCode()I: I29 Branch 81 IF_ICMPNE L503 - false
   * 2 gnu.trove.map.hash.TLongObjectHashMap.hashCode()I: I41 Branch 82 IFNONNULL L504 - false
   * 3 gnu.trove.map.hash.TLongObjectHashMap.hashCode()I: I22 Branch 80 IFLE L502 - true
   * 4 gnu.trove.map.hash.TLongObjectHashMap.hashCode()I: I22 Branch 80 IFLE L502 - false
   * 5 gnu.trove.map.hash.TLongObjectHashMap.hashCode()I: I29 Branch 81 IF_ICMPNE L503 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>();
      tLongObjectHashMap0.putIfAbsent(0L, (Integer) null);
      int int0 = tLongObjectHashMap0.hashCode();
      assertEquals(false, tLongObjectHashMap0.isEmpty());
      assertEquals(0, int0);
  }

  //Test case number: 31
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.hashCode()I: I41 Branch 82 IFNONNULL L504 - true
   * 2 gnu.trove.map.hash.TLongObjectHashMap.hashCode()I: I22 Branch 80 IFLE L502 - true
   * 3 gnu.trove.map.hash.TLongObjectHashMap.hashCode()I: I22 Branch 80 IFLE L502 - false
   * 4 gnu.trove.map.hash.TLongObjectHashMap.hashCode()I: I29 Branch 81 IF_ICMPNE L503 - true
   * 5 gnu.trove.map.hash.TLongObjectHashMap.hashCode()I: I29 Branch 81 IF_ICMPNE L503 - false
   */

  @Test
  public void test31()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>();
      tLongObjectHashMap0.put((-67L), (Integer) 1788);
      int int0 = tLongObjectHashMap0.hashCode();
      assertEquals(false, tLongObjectHashMap0.isEmpty());
      assertEquals(1726, int0);
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongObjectHashMap$KeyView.containsAll(Ljava/util/Collection;)Z: I8 Branch 3 IFEQ L561 - true
   */

  @Test
  public void test32()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>((-583));
      TLongSet tLongSet0 = tLongObjectHashMap0.keySet();
      TUnmodifiableLongSet tUnmodifiableLongSet0 = new TUnmodifiableLongSet(tLongSet0);
      HashMap<Long, Integer> hashMap0 = new HashMap<Long, Integer>();
      Collection<Integer> collection0 = hashMap0.values();
      boolean boolean0 = tUnmodifiableLongSet0.containsAll(collection0);
      assertEquals(true, boolean0);
  }

  //Test case number: 33
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongObjectHashMap$KeyView.containsAll(Lgnu/trove/TLongCollection;)Z: I4 Branch 5 IF_ACMPNE L573 - false
   */

  @Test
  public void test33()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>((-583));
      TLongSet tLongSet0 = tLongObjectHashMap0.keySet();
      TUnmodifiableLongSet tUnmodifiableLongSet0 = new TUnmodifiableLongSet(tLongSet0);
      boolean boolean0 = tUnmodifiableLongSet0.containsAll((TLongCollection) tLongSet0);
      assertEquals(true, boolean0);
  }

  //Test case number: 34
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongObjectHashMap$KeyView.equals(Ljava/lang/Object;)Z: I4 Branch 26 IFNE L710 - false
   */

  @Test
  public void test34()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>((-583));
      TLongSet tLongSet0 = tLongObjectHashMap0.keySet();
      TUnmodifiableLongSet tUnmodifiableLongSet0 = new TUnmodifiableLongSet(tLongSet0);
      TLongObjectHashMap<Long> tLongObjectHashMap1 = new TLongObjectHashMap<Long>();
      tUnmodifiableLongSet0.equals((Object) tLongObjectHashMap1);
      assertEquals(23, tLongObjectHashMap1.capacity());
  }

  //Test case number: 35
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap$KeyView.toString()Ljava/lang/String;: I34 Branch 35 IFEQ L744 - true
   * 2 gnu.trove.map.hash.TLongObjectHashMap.keySet()Lgnu/trove/set/TLongSet;: root-Branch
   * 3 gnu.trove.map.hash.TLongObjectHashMap.<init>(I)V: root-Branch
   * 4 gnu.trove.map.hash.TLongObjectHashMap$KeyView.<init>(Lgnu/trove/map/hash/TLongObjectHashMap;)V: root-Branch
   * 5 gnu.trove.map.hash.TLongObjectHashMap$KeyView.toString()Ljava/lang/String;: I21 Branch 33 IFLE L742 - true
   * 6 gnu.trove.map.hash.TLongObjectHashMap$KeyView.toString()Ljava/lang/String;: I21 Branch 33 IFLE L742 - false
   * 7 gnu.trove.map.hash.TLongObjectHashMap$KeyView.toString()Ljava/lang/String;: I30 Branch 34 IF_ICMPNE L743 - true
   * 8 gnu.trove.map.hash.TLongObjectHashMap$KeyView.toString()Ljava/lang/String;: I30 Branch 34 IF_ICMPNE L743 - false
   * 9 gnu.trove.map.hash.TLongObjectHashMap$KeyView.toString()Ljava/lang/String;: I34 Branch 35 IFEQ L744 - false
   */

  @Test
  public void test35()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>(543);
      TLongSet tLongSet0 = tLongObjectHashMap0.keySet();
      tLongObjectHashMap0.put((long) 543, (Integer) 543);
      tLongObjectHashMap0.put((long) (-2037), (Integer) 543);
      TUnmodifiableLongSet tUnmodifiableLongSet0 = new TUnmodifiableLongSet(tLongSet0);
      String string0 = tUnmodifiableLongSet0.toString();
      assertEquals(false, tLongObjectHashMap0.isEmpty());
      assertEquals("{-2037,543", string0);
  }

  //Test case number: 36
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I39 Branch 84 IF_ICMPNE L974 - false
   * 2 gnu.trove.map.hash.TLongObjectHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I31 Branch 83 IFLE L973 - true
   * 3 gnu.trove.map.hash.TLongObjectHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I31 Branch 83 IFLE L973 - false
   * 4 gnu.trove.map.hash.TLongObjectHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I39 Branch 84 IF_ICMPNE L974 - true
   */

  @Test
  public void test36()  throws Throwable  {
      TLongObjectHashMap<String> tLongObjectHashMap0 = new TLongObjectHashMap<String>();
      tLongObjectHashMap0.put((long) 0, "MI!gB7:L!bLN(8<dTV");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tLongObjectHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(false, tLongObjectHashMap0.isEmpty());
      assertEquals("\uFFFD\uFFFD\u0000\u0005w\u001E\u0000\u0000?\u0000\u0000\u0000?\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\u0012MI!gB7:L!bLN(8<dTV", byteArrayOutputStream0.toString());
  }

  //Test case number: 37
  /*
   * 16 covered goals:
   * 1 gnu.trove.map.hash.TLongObjectHashMap$2.execute(JLjava/lang/Object;)Z: I4 Branch 97 IFEQ L1013 - true
   * 2 gnu.trove.map.hash.TLongObjectHashMap$2.execute(JLjava/lang/Object;)Z: I4 Branch 97 IFEQ L1013 - false
   * 3 gnu.trove.map.hash.TLongObjectHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.hash.TLongObjectHashMap.<init>()V: root-Branch
   * 5 gnu.trove.map.hash.TLongObjectHashMap.toString()Ljava/lang/String;: root-Branch
   * 6 gnu.trove.map.hash.TLongObjectHashMap.put(JLjava/lang/Object;)Ljava/lang/Object;: root-Branch
   * 7 gnu.trove.map.hash.TLongObjectHashMap.forEachEntry(Lgnu/trove/procedure/TLongObjectProcedure;)Z: I23 Branch 65 IFLE L416 - true
   * 8 gnu.trove.map.hash.TLongObjectHashMap.forEachEntry(Lgnu/trove/procedure/TLongObjectProcedure;)Z: I23 Branch 65 IFLE L416 - false
   * 9 gnu.trove.map.hash.TLongObjectHashMap.forEachEntry(Lgnu/trove/procedure/TLongObjectProcedure;)Z: I30 Branch 66 IF_ICMPNE L417 - true
   * 10 gnu.trove.map.hash.TLongObjectHashMap.forEachEntry(Lgnu/trove/procedure/TLongObjectProcedure;)Z: I30 Branch 66 IF_ICMPNE L417 - false
   * 11 gnu.trove.map.hash.TLongObjectHashMap.forEachEntry(Lgnu/trove/procedure/TLongObjectProcedure;)Z: I39 Branch 67 IFNE L417 - true
   * 12 gnu.trove.map.hash.TLongObjectHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I11 Branch 48 IFGE L239 - true
   * 13 gnu.trove.map.hash.TLongObjectHashMap.doPut(Ljava/lang/Object;I)Ljava/lang/Object;: I40 Branch 49 IFEQ L247 - false
   * 14 gnu.trove.map.hash.TLongObjectHashMap.putIfAbsent(JLjava/lang/Object;)Ljava/lang/Object;: I9 Branch 47 IFGE L229 - true
   * 15 gnu.trove.map.hash.TLongObjectHashMap$1.<init>(Lgnu/trove/map/hash/TLongObjectHashMap;)V: root-Branch
   * 16 gnu.trove.map.hash.TLongObjectHashMap$2.<init>(Lgnu/trove/map/hash/TLongObjectHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   */

  @Test
  public void test37()  throws Throwable  {
      TLongObjectHashMap<String> tLongObjectHashMap0 = new TLongObjectHashMap<String>();
      tLongObjectHashMap0.put((long) 0, "MI!gB7:L!bLN(8<dTV");
      tLongObjectHashMap0.putIfAbsent(421L, (String) null);
      String string0 = tLongObjectHashMap0.toString();
      assertEquals(false, tLongObjectHashMap0.isEmpty());
      assertEquals("{421=null,0=MI!gB7:L!bLN(8<dTV}", string0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.set.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.set.hash.TCustomHashSet;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.TreeSet;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TCustomHashSetEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 5 covered goals:
   * 1 gnu.trove.set.hash.TCustomHashSet$HashProcedure.execute(Ljava/lang/Object;)Z: root-Branch
   * 2 gnu.trove.set.hash.TCustomHashSet$HashProcedure.getHashCode()I: root-Branch
   * 3 gnu.trove.set.hash.TCustomHashSet.<init>(Lgnu/trove/strategy/HashingStrategy;I)V: root-Branch
   * 4 gnu.trove.set.hash.TCustomHashSet.hashCode()I: root-Branch
   * 5 gnu.trove.set.hash.TCustomHashSet.add(Ljava/lang/Object;)Z: I9 Branch 2 IFGE L116 - true
   */

  @Test
  public void test0()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TCustomHashSet<Integer> tCustomHashSet0 = new TCustomHashSet<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 266);
      tCustomHashSet0.add((Integer) 266);
      int int0 = tCustomHashSet0.hashCode();
      assertEquals(1, tCustomHashSet0.size());
      assertEquals(266, int0);
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TCustomHashSet.clear()V: root-Branch
   * 2 gnu.trove.set.hash.TCustomHashSet.<init>(Lgnu/trove/strategy/HashingStrategy;Ljava/util/Collection;)V: root-Branch
   * 3 gnu.trove.set.hash.TCustomHashSet.addAll(Ljava/util/Collection;)Z: I23 Branch 14 IFLE L296 - true
   */

  @Test
  public void test1()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      TCustomHashSet<String> tCustomHashSet0 = new TCustomHashSet<String>((HashingStrategy<? super String>) identityHashingStrategy0, (Collection<? extends String>) linkedHashSet0);
      tCustomHashSet0.clear();
      assertEquals("{}", tCustomHashSet0.toString());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.set.hash.TCustomHashSet.toArray()[Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TCustomHashSet<Integer> tCustomHashSet0 = new TCustomHashSet<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 266);
      Object[] objectArray0 = tCustomHashSet0.toArray();
      assertNotNull(objectArray0);
  }

  //Test case number: 3
  /*
   * 10 covered goals:
   * 1 gnu.trove.set.hash.TCustomHashSet.add(Ljava/lang/Object;)Z: I9 Branch 2 IFGE L116 - false
   * 2 gnu.trove.set.hash.TCustomHashSet.rehash(I)V: I35 Branch 5 IFLE L173 - true
   * 3 gnu.trove.set.hash.TCustomHashSet.rehash(I)V: I35 Branch 5 IFLE L173 - false
   * 4 gnu.trove.set.hash.TCustomHashSet.rehash(I)V: I46 Branch 6 IF_ACMPEQ L175 - true
   * 5 gnu.trove.set.hash.TCustomHashSet.rehash(I)V: I46 Branch 6 IF_ACMPEQ L175 - false
   * 6 gnu.trove.set.hash.TCustomHashSet.rehash(I)V: I49 Branch 7 IF_ACMPEQ L175 - false
   * 7 gnu.trove.set.hash.TCustomHashSet.rehash(I)V: I59 Branch 8 IFGE L177 - true
   * 8 gnu.trove.set.hash.TCustomHashSet.addAll(Ljava/util/Collection;)Z: I23 Branch 14 IFLE L296 - false
   * 9 gnu.trove.set.hash.TCustomHashSet.addAll(Ljava/util/Collection;)Z: I30 Branch 15 IFEQ L297 - true
   * 10 gnu.trove.set.hash.TCustomHashSet.addAll(Ljava/util/Collection;)Z: I30 Branch 15 IFEQ L297 - false
   */

  @Test
  public void test3()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add("bKimwJ4sN>W!4%(EF&<");
      TCustomHashSet<String> tCustomHashSet0 = new TCustomHashSet<String>((HashingStrategy<? super String>) identityHashingStrategy0, (Collection<? extends String>) linkedHashSet0);
      boolean boolean0 = tCustomHashSet0.addAll((Collection<? extends String>) linkedHashSet0);
      assertEquals(5, tCustomHashSet0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 4 covered goals:
   * 1 gnu.trove.set.hash.TCustomHashSet.equals(Ljava/lang/Object;)Z: I4 Branch 3 IFNE L127 - true
   * 2 gnu.trove.set.hash.TCustomHashSet.equals(Ljava/lang/Object;)Z: I20 Branch 4 IF_ICMPEQ L131 - true
   * 3 gnu.trove.set.hash.TCustomHashSet.containsAll(Ljava/util/Collection;)Z: I8 Branch 12 IFEQ L275 - true
   * 4 gnu.trove.set.hash.TCustomHashSet.<init>(Lgnu/trove/strategy/HashingStrategy;IF)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      TCustomHashSet<Integer> tCustomHashSet0 = new TCustomHashSet<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1, (float) 1);
      boolean boolean0 = tCustomHashSet0.equals((Object) treeSet0);
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 gnu.trove.set.hash.TCustomHashSet.equals(Ljava/lang/Object;)Z: I4 Branch 3 IFNE L127 - false
   * 2 gnu.trove.set.hash.TCustomHashSet.<init>(Lgnu/trove/strategy/HashingStrategy;)V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TCustomHashSet<Object> tCustomHashSet0 = new TCustomHashSet<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      boolean boolean0 = tCustomHashSet0.equals((Object) identityHashingStrategy0);
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * 1 gnu.trove.set.hash.TCustomHashSet.equals(Ljava/lang/Object;)Z: I20 Branch 4 IF_ICMPEQ L131 - false
   * 2 gnu.trove.set.hash.TCustomHashSet.equals(Ljava/lang/Object;)Z: I4 Branch 3 IFNE L127 - true
   */

  @Test
  public void test6()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      TCustomHashSet<Integer> tCustomHashSet0 = new TCustomHashSet<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1, (float) 1);
      tCustomHashSet0.add((Integer) 1);
      boolean boolean0 = tCustomHashSet0.equals((Object) treeSet0);
      assertEquals(false, tCustomHashSet0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 5 covered goals:
   * 1 gnu.trove.set.hash.TCustomHashSet.rehash(I)V: I49 Branch 7 IF_ACMPEQ L175 - true
   * 2 gnu.trove.set.hash.TCustomHashSet.remove(Ljava/lang/Object;)Z: I9 Branch 11 IFLT L246 - false
   * 3 gnu.trove.set.hash.TCustomHashSet.removeAll(Ljava/util/Collection;)Z: I18 Branch 16 IFLE L317 - false
   * 4 gnu.trove.set.hash.TCustomHashSet.removeAll(Ljava/util/Collection;)Z: I25 Branch 17 IFEQ L318 - false
   * 5 gnu.trove.set.hash.TCustomHashSet.removeAll(Ljava/util/Collection;)Z: I18 Branch 16 IFLE L317 - true
   */

  @Test
  public void test7()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add("bKimwJ4sN>W!4%(EF&<");
      TCustomHashSet<String> tCustomHashSet0 = new TCustomHashSet<String>((HashingStrategy<? super String>) identityHashingStrategy0, (Collection<? extends String>) linkedHashSet0);
      boolean boolean0 = tCustomHashSet0.removeAll((Collection<?>) linkedHashSet0);
      assertEquals(true, boolean0);
      assertEquals(0, tCustomHashSet0.size());
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * 1 gnu.trove.set.hash.TCustomHashSet.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I10 Branch 9 IF_ICMPGE L207 - true
   * 2 gnu.trove.set.hash.TCustomHashSet.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I35 Branch 10 IF_ICMPLE L221 - false
   */

  @Test
  public void test8()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TCustomHashSet<String> tCustomHashSet0 = new TCustomHashSet<String>((HashingStrategy<? super String>) identityHashingStrategy0);
      tCustomHashSet0.toArray(tCustomHashSet0._set);
      assertEquals("{null}", tCustomHashSet0.toString());
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * 1 gnu.trove.set.hash.TCustomHashSet.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I10 Branch 9 IF_ICMPGE L207 - false
   * 2 gnu.trove.set.hash.TCustomHashSet.toArray([Ljava/lang/Object;)[Ljava/lang/Object;: I35 Branch 10 IF_ICMPLE L221 - true
   */

  @Test
  public void test9()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TCustomHashSet<String> tCustomHashSet0 = new TCustomHashSet<String>((HashingStrategy<? super String>) identityHashingStrategy0, (-1544), (float) (-1544));
      tCustomHashSet0.add("No free or removed slots available. Key set full?!!");
      String[] stringArray0 = new String[1];
      tCustomHashSet0.add((String) null);
      tCustomHashSet0.toArray(stringArray0);
      assertEquals(false, tCustomHashSet0.isEmpty());
      assertEquals("{No free or removed slots available. Key set full?!!, null}", tCustomHashSet0.toString());
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 gnu.trove.set.hash.TCustomHashSet.remove(Ljava/lang/Object;)Z: I9 Branch 11 IFLT L246 - true
   * 2 gnu.trove.set.hash.TCustomHashSet.removeAll(Ljava/util/Collection;)Z: I25 Branch 17 IFEQ L318 - true
   * 3 gnu.trove.set.hash.TCustomHashSet.removeAll(Ljava/util/Collection;)Z: I18 Branch 16 IFLE L317 - true
   * 4 gnu.trove.set.hash.TCustomHashSet.removeAll(Ljava/util/Collection;)Z: I18 Branch 16 IFLE L317 - false
   * 5 gnu.trove.set.hash.TCustomHashSet.iterator()Lgnu/trove/iterator/hash/TObjectHashIterator;: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TCustomHashSet<Integer> tCustomHashSet0 = new TCustomHashSet<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 266);
      TCustomHashSet<Object> tCustomHashSet1 = new TCustomHashSet<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 0, (float) 0);
      tCustomHashSet1.add((Object) "/");
      boolean boolean0 = tCustomHashSet0.removeAll((Collection<?>) tCustomHashSet1);
      assertEquals(1, tCustomHashSet1.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 2 covered goals:
   * 1 gnu.trove.set.hash.TCustomHashSet.containsAll(Ljava/util/Collection;)Z: I8 Branch 12 IFEQ L275 - false
   * 2 gnu.trove.set.hash.TCustomHashSet.containsAll(Ljava/util/Collection;)Z: I15 Branch 13 IFNE L276 - false
   */

  @Test
  public void test11()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TCustomHashSet<Integer> tCustomHashSet0 = new TCustomHashSet<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 266);
      TCustomHashSet<Object> tCustomHashSet1 = new TCustomHashSet<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 0, (float) 0);
      tCustomHashSet1.add((Object) "/");
      boolean boolean0 = tCustomHashSet0.containsAll((Collection<?>) tCustomHashSet1);
      assertEquals(false, tCustomHashSet1.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TCustomHashSet.containsAll(Ljava/util/Collection;)Z: I15 Branch 13 IFNE L276 - true
   * 2 gnu.trove.set.hash.TCustomHashSet.containsAll(Ljava/util/Collection;)Z: I8 Branch 12 IFEQ L275 - true
   * 3 gnu.trove.set.hash.TCustomHashSet.containsAll(Ljava/util/Collection;)Z: I8 Branch 12 IFEQ L275 - false
   */

  @Test
  public void test12()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add("bKimwJ4sN>W!4%(EF&<");
      TCustomHashSet<Object> tCustomHashSet0 = new TCustomHashSet<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (Collection<?>) linkedHashSet0);
      boolean boolean0 = tCustomHashSet0.containsAll((Collection<?>) linkedHashSet0);
      assertEquals(true, boolean0);
      assertEquals(false, tCustomHashSet0.isEmpty());
  }

  //Test case number: 13
  /*
   * 3 covered goals:
   * 1 gnu.trove.set.hash.TCustomHashSet.retainAll(Ljava/util/Collection;)Z: I18 Branch 18 IFLE L338 - false
   * 2 gnu.trove.set.hash.TCustomHashSet.retainAll(Ljava/util/Collection;)Z: I25 Branch 19 IFGT L339 - true
   * 3 gnu.trove.set.hash.TCustomHashSet.retainAll(Ljava/util/Collection;)Z: I18 Branch 18 IFLE L338 - true
   */

  @Test
  public void test13()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add("bKimwJ4sN>W!4%(EF&<");
      TCustomHashSet<Object> tCustomHashSet0 = new TCustomHashSet<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (Collection<?>) linkedHashSet0);
      TCustomHashSet<String> tCustomHashSet1 = new TCustomHashSet<String>((HashingStrategy<? super String>) identityHashingStrategy0, (Collection<? extends String>) linkedHashSet0);
      boolean boolean0 = tCustomHashSet0.retainAll((Collection<?>) tCustomHashSet1);
      assertEquals(false, boolean0);
      assertEquals("{bKimwJ4sN>W!4%(EF&<}", tCustomHashSet0.toString());
      assertEquals(1, tCustomHashSet1.size());
  }

  //Test case number: 14
  /*
   * 15 covered goals:
   * 1 gnu.trove.set.hash.TCustomHashSet$1.execute(Ljava/lang/Object;)Z: I4 Branch 1 IFEQ L355 - true
   * 2 gnu.trove.set.hash.TCustomHashSet$1.execute(Ljava/lang/Object;)Z: I4 Branch 1 IFEQ L355 - false
   * 3 gnu.trove.set.hash.TCustomHashSet.toString()Ljava/lang/String;: root-Branch
   * 4 gnu.trove.set.hash.TCustomHashSet.<init>(Lgnu/trove/strategy/HashingStrategy;I)V: root-Branch
   * 5 gnu.trove.set.hash.TCustomHashSet.<init>(Lgnu/trove/strategy/HashingStrategy;Ljava/util/Collection;)V: root-Branch
   * 6 gnu.trove.set.hash.TCustomHashSet.addAll(Ljava/util/Collection;)Z: I23 Branch 14 IFLE L296 - true
   * 7 gnu.trove.set.hash.TCustomHashSet.addAll(Ljava/util/Collection;)Z: I23 Branch 14 IFLE L296 - false
   * 8 gnu.trove.set.hash.TCustomHashSet.addAll(Ljava/util/Collection;)Z: I30 Branch 15 IFEQ L297 - false
   * 9 gnu.trove.set.hash.TCustomHashSet.rehash(I)V: I35 Branch 5 IFLE L173 - true
   * 10 gnu.trove.set.hash.TCustomHashSet.rehash(I)V: I35 Branch 5 IFLE L173 - false
   * 11 gnu.trove.set.hash.TCustomHashSet.rehash(I)V: I46 Branch 6 IF_ACMPEQ L175 - true
   * 12 gnu.trove.set.hash.TCustomHashSet.rehash(I)V: I46 Branch 6 IF_ACMPEQ L175 - false
   * 13 gnu.trove.set.hash.TCustomHashSet.rehash(I)V: I49 Branch 7 IF_ACMPEQ L175 - false
   * 14 gnu.trove.set.hash.TCustomHashSet.rehash(I)V: I59 Branch 8 IFGE L177 - true
   * 15 gnu.trove.set.hash.TCustomHashSet$1.<init>(Lgnu/trove/set/hash/TCustomHashSet;Ljava/lang/StringBuilder;)V: root-Branch
   */

//   @Test
//   public void test14()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
//       linkedHashSet0.add("bKimwJ4sN>W!4%(EF&<");
//       TCustomHashSet<Object> tCustomHashSet0 = new TCustomHashSet<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (Collection<?>) linkedHashSet0);
//       tCustomHashSet0.add((Object) "\u4E2D\u6587 (\u53F0\u7063)");
//       String string0 = tCustomHashSet0.toString();
//       assertEquals(7, tCustomHashSet0.capacity());
//       assertEquals("{\u4E2D\u6587 (\u53F0\u7063), bKimwJ4sN>W!4%(EF&<}", string0);
//   }

  //Test case number: 15
  /*
   * 11 covered goals:
   * 1 gnu.trove.set.hash.TCustomHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 21 IF_ACMPEQ L382 - true
   * 2 gnu.trove.set.hash.TCustomHashSet.<init>(Lgnu/trove/strategy/HashingStrategy;)V: root-Branch
   * 3 gnu.trove.set.hash.TCustomHashSet.<init>(Lgnu/trove/strategy/HashingStrategy;IF)V: root-Branch
   * 4 gnu.trove.set.hash.TCustomHashSet.iterator()Lgnu/trove/iterator/hash/TObjectHashIterator;: root-Branch
   * 5 gnu.trove.set.hash.TCustomHashSet.retainAll(Ljava/util/Collection;)Z: I18 Branch 18 IFLE L338 - true
   * 6 gnu.trove.set.hash.TCustomHashSet.retainAll(Ljava/util/Collection;)Z: I18 Branch 18 IFLE L338 - false
   * 7 gnu.trove.set.hash.TCustomHashSet.retainAll(Ljava/util/Collection;)Z: I25 Branch 19 IFGT L339 - false
   * 8 gnu.trove.set.hash.TCustomHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 20 IFLE L381 - true
   * 9 gnu.trove.set.hash.TCustomHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 20 IFLE L381 - false
   * 10 gnu.trove.set.hash.TCustomHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 21 IF_ACMPEQ L382 - false
   * 11 gnu.trove.set.hash.TCustomHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I39 Branch 22 IF_ACMPEQ L382 - true
   */

  @Test
  public void test15()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TCustomHashSet<Integer> tCustomHashSet0 = new TCustomHashSet<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 1, (float) 1);
      tCustomHashSet0.add((Integer) 1);
      TCustomHashSet<Object> tCustomHashSet1 = new TCustomHashSet<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      tCustomHashSet0.retainAll((Collection<?>) tCustomHashSet1);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tCustomHashSet0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals("\uFFFD\uFFFD\u0000\u0005w\f\u0001\u0000\u0000\u0000?\uFFFD\u0000\u0000?\uFFFD\u0000\u0000sr\u0000*gnu.trove.strategy.IdentityHashingStrategy\uFFFD\uFFFD\uFFFDgQ\uFFFD\uFFFDX\u0002\u0000\u0000xp", byteArrayOutputStream0.toString());
      assertEquals(77, byteArrayOutputStream0.size());
  }

  //Test case number: 16
  /*
   * 7 covered goals:
   * 1 gnu.trove.set.hash.TCustomHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I39 Branch 22 IF_ACMPEQ L382 - false
   * 2 gnu.trove.set.hash.TCustomHashSet.<init>()V: root-Branch
   * 3 gnu.trove.set.hash.TCustomHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 20 IFLE L381 - true
   * 4 gnu.trove.set.hash.TCustomHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 20 IFLE L381 - false
   * 5 gnu.trove.set.hash.TCustomHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 21 IF_ACMPEQ L382 - false
   * 6 gnu.trove.set.hash.TCustomHashSet.writeExternal(Ljava/io/ObjectOutput;)V: I39 Branch 22 IF_ACMPEQ L382 - true
   * 7 gnu.trove.set.hash.TCustomHashSet.add(Ljava/lang/Object;)Z: I9 Branch 2 IFGE L116 - true
   */

  @Test
  public void test16()  throws Throwable  {
      TCustomHashSet<Integer> tCustomHashSet0 = new TCustomHashSet<Integer>();
      tCustomHashSet0.add((Integer) null);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) bufferedOutputStream0);
      tCustomHashSet0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals("{null}", tCustomHashSet0.toString());
      assertEquals(false, tCustomHashSet0.isEmpty());
  }
}

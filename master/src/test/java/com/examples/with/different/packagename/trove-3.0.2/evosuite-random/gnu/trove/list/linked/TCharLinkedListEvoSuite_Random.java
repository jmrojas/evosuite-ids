/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.list.linked;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TCharCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharList;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharSet;
import gnu.trove.list.TCharList;
import gnu.trove.list.linked.TCharLinkedList;
import gnu.trove.procedure.TCharProcedure;
import gnu.trove.set.TCharSet;
import gnu.trove.set.hash.TCharHashSet;
import java.io.File;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Random;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TCharLinkedListEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      char[] charArray0 = new char[9];
      char char0 = 'w';
      charArray0[0] = char0;
      char char1 = 'b';
      charArray0[1] = char1;
      char char2 = '?';
      charArray0[2] = char2;
      char char3 = '0';
      charArray0[3] = char3;
      char char4 = 'C';
      charArray0[4] = char4;
      char char5 = '/';
      charArray0[5] = char5;
      char char6 = 'V';
      charArray0[6] = char6;
      char char7 = 'u';
      charArray0[7] = char7;
      char char8 = 'T';
      charArray0[8] = char8;
      int int0 = (-860);
      int int1 = 1152;
      // Undeclared exception!
      try {
        TCharLinkedList.link(charArray0, int0, int1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      char char0 = 'U';
      tCharLinkedList0.fill(char0);
      assertEquals(0, tCharLinkedList0.size());
      assertEquals(true, tCharLinkedList0.isEmpty());
  }

  @Test
  public void test2()  throws Throwable  {
      TCharList tCharList0 = null;
      TCharLinkedList tCharLinkedList0 = null;
      try {
        tCharLinkedList0 = new TCharLinkedList(tCharList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      char[] charArray0 = new char[2];
      char char0 = '.';
      charArray0[0] = char0;
      char char1 = 'z';
      charArray0[1] = char1;
      int int0 = 10;
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList(char1);
      Random random0 = new Random((long) char0);
      tCharLinkedList0.shuffle(random0);
      // Undeclared exception!
      try {
        TCharLinkedList.link(charArray0, char1, int0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      char[] charArray0 = new char[6];
      char char0 = ')';
      charArray0[0] = char0;
      charArray0[1] = char0;
      charArray0[2] = char0;
      charArray0[3] = char0;
      charArray0[4] = char0;
      charArray0[5] = char0;
      char char1 = 'V';
      charArray0[0] = char1;
      char char2 = ')';
      charArray0[1] = char2;
      char char3 = 'd';
      charArray0[2] = char3;
      char char4 = '\\';
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      int int0 = (-1);
      // Undeclared exception!
      try {
        tCharLinkedList0.toArray(charArray0, (int) charArray0[2], int0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 100
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      char char0 = '$';
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      char char1 = ')';
      int int0 = 1;
      // Undeclared exception!
      try {
        tCharLinkedList0.binarySearch(char1, int0, (int) char0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index > size: 36 > 0
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      int int0 = 31;
      float float0 = (-1.0F);
      char char0 = 'i';
      TCharHashSet tCharHashSet0 = new TCharHashSet(int0, float0, char0);
      TUnmodifiableCharSet tUnmodifiableCharSet0 = new TUnmodifiableCharSet((TCharSet) tCharHashSet0);
      tCharLinkedList0.removeAll((TCharCollection) tUnmodifiableCharSet0);
      tCharLinkedList0.size = int0;
      char[] charArray0 = new char[6];
      char char1 = '@';
      charArray0[0] = char1;
      char char2 = 'f';
      tCharLinkedList0.iterator();
      char char3 = 'V';
      TCharLinkedList tCharLinkedList1 = new TCharLinkedList(char3);
      int int1 = 0;
      tCharLinkedList1.remove((int) charArray0[0], int1);
      int int2 = 0;
      // Undeclared exception!
      try {
        TCharLinkedList.link(charArray0, int2, charArray0[0]);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      char[] charArray0 = new char[5];
      char char0 = 'y';
      charArray0[0] = char0;
      char char1 = 'x';
      charArray0[1] = char1;
      char char2 = 'i';
      charArray0[2] = char2;
      char char3 = 'P';
      charArray0[3] = char3;
      char char4 = 't';
      charArray0[4] = char4;
      int int0 = 0;
      int int1 = (-1398);
      TCharLinkedList tCharLinkedList0 = TCharLinkedList.link(charArray0, int0, int1);
      TUnmodifiableCharList tUnmodifiableCharList0 = new TUnmodifiableCharList((TCharList) tCharLinkedList0);
      // Undeclared exception!
      try {
        tUnmodifiableCharList0.subList((int) char4, (int) char4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 116 greater than last index 0
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      char char0 = '<';
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList(char0);
      String string0 = "values can not be null";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in path at index 6: values can not be null
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      char[] charArray0 = new char[8];
      char char0 = '4';
      charArray0[0] = char0;
      char char1 = '{';
      charArray0[1] = char1;
      char char2 = 't';
      charArray0[2] = char2;
      char char3 = 'd';
      charArray0[3] = char3;
      char char4 = 'f';
      charArray0[4] = char4;
      char char5 = '-';
      charArray0[5] = char5;
      char char6 = 'Q';
      charArray0[6] = char6;
      char char7 = ')';
      charArray0[7] = char7;
      int int0 = (-1624);
      TCharLinkedList tCharLinkedList0 = TCharLinkedList.link(charArray0, charArray0[5], int0);
      int int1 = (-1765);
      int int2 = (-1);
      // Undeclared exception!
      try {
        tCharLinkedList0.sort(int1, int2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[8];
      char char0 = ':';
      charArray0[0] = char0;
      char char1 = '*';
      charArray0[1] = char1;
      char char2 = '';
      charArray0[2] = char2;
      char char3 = 'H';
      charArray0[3] = char3;
      char char4 = ':';
      charArray0[4] = char4;
      char char5 = '|';
      charArray0[5] = char5;
      char char6 = '\"';
      charArray0[6] = char6;
      char char7 = 'e';
      charArray0[7] = char7;
      int int0 = 0;
      TCharLinkedList tCharLinkedList0 = TCharLinkedList.link(charArray0, charArray0[0], int0);
      assertNotNull(tCharLinkedList0);
      
      boolean boolean0 = tCharLinkedList0.add(char6);
      assertEquals("{\"}", tCharLinkedList0.toString());
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      String string0 = "jhI;@IU#8E";
      URI uRI0 = URI.create(string0);
      File file0 = null;
      try {
        file0 = new File(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI is not absolute
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      int int0 = (-76);
      char[] charArray0 = new char[10];
      char char0 = '.';
      charArray0[0] = char0;
      char char1 = '*';
      charArray0[1] = char1;
      char char2 = 't';
      charArray0[2] = char2;
      char char3 = 'w';
      charArray0[3] = char3;
      char char4 = 'N';
      charArray0[4] = char4;
      char char5 = 'L';
      charArray0[5] = char5;
      char char6 = 'D';
      charArray0[6] = char6;
      char char7 = 'P';
      charArray0[7] = char7;
      char char8 = '7';
      charArray0[8] = char8;
      char char9 = 'q';
      charArray0[9] = char9;
      int int1 = 0;
      int int2 = 0;
      tCharLinkedList0.set(int0, charArray0, int1, int2);
      TCharProcedure tCharProcedure0 = null;
      boolean boolean0 = tCharLinkedList0.forEachDescending(tCharProcedure0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      char[] charArray0 = new char[3];
      char char0 = ':';
      charArray0[0] = char0;
      char char1 = 't';
      charArray0[1] = char1;
      char char2 = '~';
      charArray0[2] = char2;
      int int0 = 1474;
      // Undeclared exception!
      try {
        tCharLinkedList0.add(charArray0, int0, (int) char1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1474
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      char char0 = 'U';
      char[] charArray0 = new char[4];
      charArray0[0] = char0;
      charArray0[1] = char0;
      charArray0[2] = char0;
      charArray0[3] = char0;
      int int0 = (-1593);
      TCharLinkedList tCharLinkedList0 = TCharLinkedList.link(charArray0, charArray0[3], int0);
      assertNotNull(tCharLinkedList0);
      
      TCharLinkedList tCharLinkedList1 = new TCharLinkedList(char0);
      tCharLinkedList1.clear();
      charArray0[0] = char0;
      charArray0[1] = char0;
      charArray0[2] = char0;
      charArray0[3] = char0;
      char char1 = tCharLinkedList1.sum();
      assertEquals('U', tCharLinkedList1.getNoEntryValue());
      assertEquals('\u0000', char1);
      assertEquals(true, tCharLinkedList1.isEmpty());
  }
}

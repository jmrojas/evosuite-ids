/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntSet;
import gnu.trove.map.TIntByteMap;
import gnu.trove.map.hash.TIntByteHashMap;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TIntByteProcedure;
import gnu.trove.procedure.TIntProcedure;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableIntByteMapEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 7 covered goals:
   * 1 Weak Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.isEmpty()Z:64 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 2 Weak Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.isEmpty()Z: root-Branch
   * 4 Weak Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.<init>(Lgnu/trove/map/TIntByteMap;)V:58 - ReplaceComparisonOperator != null -> = null
   * 5 Weak Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.isEmpty()Z:64 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 6 Weak Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.<init>(Lgnu/trove/map/TIntByteMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap();
      TUnmodifiableIntByteMap tUnmodifiableIntByteMap0 = new TUnmodifiableIntByteMap((TIntByteMap) tIntByteHashMap0);
      boolean boolean0 = tUnmodifiableIntByteMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 11 covered goals:
   * 1 Weak Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.containsKey(I)Z:65 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 2 Weak Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.containsKey(I)Z:65 - InsertUnaryOp Negation of key
   * 3 Weak Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.containsKey(I)Z:65 - InsertUnaryOp IINC 1 key
   * 4 Weak Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.containsKey(I)Z:65 - DeleteStatement: containsKey(I)Z
   * 5 Weak Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.containsKey(I)Z:65 - InsertUnaryOp IINC -1 key
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.containsKey(I)Z: root-Branch
   * 7 Weak Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.containsKey(I)Z:65 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 8 Weak Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.containsKey(I)Z:65 - InsertUnaryOp Negation of key
   * 9 Weak Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.containsKey(I)Z:65 - InsertUnaryOp IINC 1 key
   * 10 Weak Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.containsKey(I)Z:65 - DeleteStatement: containsKey(I)Z
   * 11 Weak Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.containsKey(I)Z:65 - InsertUnaryOp IINC -1 key
   */

  @Test
  public void test1()  throws Throwable  {
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap();
      TUnmodifiableIntByteMap tUnmodifiableIntByteMap0 = new TUnmodifiableIntByteMap((TIntByteMap) tIntByteHashMap0);
      boolean boolean0 = tUnmodifiableIntByteMap0.containsKey((int) (byte)0);
      assertEquals(false, boolean0);
  }

  //Test case number: 2
  /*
   * 11 covered goals:
   * 1 Weak Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.containsValue(B)Z:66 - InsertUnaryOp Negation of val
   * 2 Weak Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.containsValue(B)Z:66 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 3 Weak Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.containsValue(B)Z:66 - InsertUnaryOp IINC -1 val
   * 4 Weak Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.containsValue(B)Z:66 - InsertUnaryOp IINC 1 val
   * 5 Weak Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.containsValue(B)Z:66 - DeleteStatement: containsValue(B)Z
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.containsValue(B)Z: root-Branch
   * 7 Weak Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.containsValue(B)Z:66 - InsertUnaryOp Negation of val
   * 8 Weak Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.containsValue(B)Z:66 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 9 Weak Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.containsValue(B)Z:66 - InsertUnaryOp IINC -1 val
   * 10 Weak Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.containsValue(B)Z:66 - InsertUnaryOp IINC 1 val
   * 11 Weak Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.containsValue(B)Z:66 - DeleteStatement: containsValue(B)Z
   */

  @Test
  public void test2()  throws Throwable  {
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap(5, (float) 5, 5, (byte) (-104));
      TUnmodifiableIntByteMap tUnmodifiableIntByteMap0 = new TUnmodifiableIntByteMap((TIntByteMap) tIntByteHashMap0);
      boolean boolean0 = tUnmodifiableIntByteMap0.containsValue((byte) (-104));
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 11 covered goals:
   * 1 Weak Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.get(I)B:67 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 2 Weak Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.get(I)B:67 - InsertUnaryOp IINC 1 key
   * 3 Weak Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.get(I)B:67 - InsertUnaryOp Negation of key
   * 4 Weak Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.get(I)B:67 - DeleteStatement: get(I)B
   * 5 Weak Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.get(I)B:67 - InsertUnaryOp IINC -1 key
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.get(I)B: root-Branch
   * 7 Weak Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.get(I)B:67 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 8 Weak Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.get(I)B:67 - InsertUnaryOp IINC 1 key
   * 9 Weak Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.get(I)B:67 - InsertUnaryOp Negation of key
   * 10 Weak Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.get(I)B:67 - DeleteStatement: get(I)B
   * 11 Weak Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.get(I)B:67 - InsertUnaryOp IINC -1 key
   */

  @Test
  public void test3()  throws Throwable  {
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap();
      TUnmodifiableIntByteMap tUnmodifiableIntByteMap0 = new TUnmodifiableIntByteMap((TIntByteMap) tIntByteHashMap0);
      byte byte0 = tUnmodifiableIntByteMap0.get(0);
      assertEquals((byte)0, byte0);
  }

  //Test case number: 4
  /*
   * 14 covered goals:
   * 1 Weak Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keySet()Lgnu/trove/set/TIntSet;:79 - DeleteField: keySetLgnu/trove/set/TIntSet;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keySet()Lgnu/trove/set/TIntSet;: I4 Branch 2 IFNONNULL L79 - true
   * 3 Weak Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keySet()Lgnu/trove/set/TIntSet;:79 - ReplaceComparisonOperator != null -> = null
   * 4 Weak Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keySet()Lgnu/trove/set/TIntSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TIntSet;
   * 5 Weak Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keySet()Lgnu/trove/set/TIntSet;:80 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 6 Weak Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keySet()Lgnu/trove/set/TIntSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TIntSet;)Lgnu/trove/set/TIntSet;
   * 7 Weak Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keySet()Lgnu/trove/set/TIntSet;:81 - DeleteField: keySetLgnu/trove/set/TIntSet;
   * 8 Weak Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keySet()Lgnu/trove/set/TIntSet;:79 - ReplaceComparisonOperator != null -> = null
   * 9 Weak Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keySet()Lgnu/trove/set/TIntSet;:79 - DeleteField: keySetLgnu/trove/set/TIntSet;
   * 10 Weak Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keySet()Lgnu/trove/set/TIntSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TIntSet;
   * 11 Weak Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keySet()Lgnu/trove/set/TIntSet;:80 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 12 Weak Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keySet()Lgnu/trove/set/TIntSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TIntSet;)Lgnu/trove/set/TIntSet;
   * 13 Weak Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keySet()Lgnu/trove/set/TIntSet;:81 - DeleteField: keySetLgnu/trove/set/TIntSet;
   * 14 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keySet()Lgnu/trove/set/TIntSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test4()  throws Throwable  {
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap(211);
      TUnmodifiableIntByteMap tUnmodifiableIntByteMap0 = new TUnmodifiableIntByteMap((TIntByteMap) tIntByteHashMap0);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = (TUnmodifiableIntSet)tUnmodifiableIntByteMap0.keySet();
      assertNotNull(tUnmodifiableIntSet0);
      
      TUnmodifiableIntSet tUnmodifiableIntSet1 = (TUnmodifiableIntSet)tUnmodifiableIntByteMap0.keySet();
      assertSame(tUnmodifiableIntSet1, tUnmodifiableIntSet0);
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 Weak Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keys()[I:83 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 2 Weak Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keys()[I:83 - DeleteStatement: keys()[I
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keys()[I: root-Branch
   * 4 Weak Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keys()[I:83 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 5 Weak Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keys()[I:83 - DeleteStatement: keys()[I
   */

  @Test
  public void test5()  throws Throwable  {
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap();
      TUnmodifiableIntByteMap tUnmodifiableIntByteMap0 = new TUnmodifiableIntByteMap((TIntByteMap) tIntByteHashMap0);
      int[] intArray0 = tUnmodifiableIntByteMap0.keys();
      assertNotNull(intArray0);
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 Weak Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keys([I)[I:84 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 2 Weak Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keys([I)[I:84 - DeleteStatement: keys([I)[I
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keys([I)[I: root-Branch
   * 4 Weak Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keys([I)[I:84 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 5 Weak Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.keys([I)[I:84 - DeleteStatement: keys([I)[I
   */

  @Test
  public void test6()  throws Throwable  {
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap(5, (float) 5, 5, (byte) (-104));
      TUnmodifiableIntByteMap tUnmodifiableIntByteMap0 = new TUnmodifiableIntByteMap((TIntByteMap) tIntByteHashMap0);
      int[] intArray0 = tUnmodifiableIntByteMap0.keys(tIntByteHashMap0._set);
      assertNotNull(intArray0);
  }

  //Test case number: 7
  /*
   * 14 covered goals:
   * 1 Weak Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.valueCollection()Lgnu/trove/TByteCollection;:87 - DeleteField: valuesLgnu/trove/TByteCollection;
   * 2 Weak Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.valueCollection()Lgnu/trove/TByteCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 3 Weak Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TByteCollection;)Lgnu/trove/TByteCollection;
   * 4 Weak Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 5 Weak Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TByteCollection;
   * 6 Weak Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.valueCollection()Lgnu/trove/TByteCollection;:89 - DeleteField: valuesLgnu/trove/TByteCollection;
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.valueCollection()Lgnu/trove/TByteCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.valueCollection()Lgnu/trove/TByteCollection;: I4 Branch 3 IFNONNULL L87 - false
   * 9 Weak Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.valueCollection()Lgnu/trove/TByteCollection;:87 - DeleteField: valuesLgnu/trove/TByteCollection;
   * 10 Weak Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.valueCollection()Lgnu/trove/TByteCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 11 Weak Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TByteCollection;)Lgnu/trove/TByteCollection;
   * 12 Weak Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.valueCollection()Lgnu/trove/TByteCollection;:89 - DeleteField: valuesLgnu/trove/TByteCollection;
   * 13 Weak Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 14 Weak Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TByteCollection;
   */

  @Test
  public void test7()  throws Throwable  {
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap((-22), (-22));
      TUnmodifiableIntByteMap tUnmodifiableIntByteMap0 = new TUnmodifiableIntByteMap((TIntByteMap) tIntByteHashMap0);
      TUnmodifiableByteCollection tUnmodifiableByteCollection0 = (TUnmodifiableByteCollection)tUnmodifiableIntByteMap0.valueCollection();
      assertNotNull(tUnmodifiableByteCollection0);
      
      TUnmodifiableByteCollection tUnmodifiableByteCollection1 = (TUnmodifiableByteCollection)tUnmodifiableIntByteMap0.valueCollection();
      assertSame(tUnmodifiableByteCollection1, tUnmodifiableByteCollection0);
  }

  //Test case number: 8
  /*
   * 5 covered goals:
   * 1 Weak Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.values()[B:91 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 2 Weak Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.values()[B:91 - DeleteStatement: values()[B
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.values()[B: root-Branch
   * 4 Weak Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.values()[B:91 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 5 Weak Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.values()[B:91 - DeleteStatement: values()[B
   */

  @Test
  public void test8()  throws Throwable  {
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap((-11));
      TUnmodifiableIntByteMap tUnmodifiableIntByteMap0 = new TUnmodifiableIntByteMap((TIntByteMap) tIntByteHashMap0);
      byte[] byteArray0 = tUnmodifiableIntByteMap0.values();
      assertNotNull(byteArray0);
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 Weak Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.values([B)[B:92 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 2 Weak Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.values([B)[B:92 - DeleteStatement: values([B)[B
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.values([B)[B: root-Branch
   * 4 Weak Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.values([B)[B:92 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 5 Weak Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.values([B)[B:92 - DeleteStatement: values([B)[B
   */

  @Test
  public void test9()  throws Throwable  {
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap((-11));
      TUnmodifiableIntByteMap tUnmodifiableIntByteMap0 = new TUnmodifiableIntByteMap((TIntByteMap) tIntByteHashMap0);
      byte[] byteArray0 = tUnmodifiableIntByteMap0.values(tIntByteHashMap0._states);
      assertNotNull(byteArray0);
  }

  //Test case number: 10
  /*
   * 12 covered goals:
   * 1 Weak Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 2 Weak Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 3 Weak Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.equals(Ljava/lang/Object;)Z:94 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 4 Weak Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 5 Weak Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 8 Weak Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 9 Weak Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 10 Weak Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.equals(Ljava/lang/Object;)Z:94 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 11 Weak Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 12 Weak Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   */

  @Test
  public void test10()  throws Throwable  {
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap((-11));
      TUnmodifiableIntByteMap tUnmodifiableIntByteMap0 = new TUnmodifiableIntByteMap((TIntByteMap) tIntByteHashMap0);
      boolean boolean0 = tUnmodifiableIntByteMap0.equals((Object) ":");
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 5 covered goals:
   * 1 Weak Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.hashCode()I:95 - DeleteStatement: hashCode()I
   * 2 Weak Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.hashCode()I:95 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.hashCode()I: root-Branch
   * 4 Weak Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.hashCode()I:95 - DeleteStatement: hashCode()I
   * 5 Weak Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.hashCode()I:95 - DeleteField: mLgnu/trove/map/TIntByteMap;
   */

  @Test
  public void test11()  throws Throwable  {
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap();
      TUnmodifiableIntByteMap tUnmodifiableIntByteMap0 = new TUnmodifiableIntByteMap((TIntByteMap) tIntByteHashMap0);
      int int0 = tUnmodifiableIntByteMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 12
  /*
   * 5 covered goals:
   * 1 Weak Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 2 Weak Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.toString()Ljava/lang/String;: root-Branch
   * 4 Weak Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 5 Weak Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TIntByteMap;
   */

  @Test
  public void test12()  throws Throwable  {
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap(211);
      TUnmodifiableIntByteMap tUnmodifiableIntByteMap0 = new TUnmodifiableIntByteMap((TIntByteMap) tIntByteHashMap0);
      String string0 = tUnmodifiableIntByteMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 13
  /*
   * 5 covered goals:
   * 1 Weak Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.getNoEntryKey()I:97 - DeleteStatement: getNoEntryKey()I
   * 2 Weak Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.getNoEntryKey()I:97 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.getNoEntryKey()I: root-Branch
   * 4 Weak Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.getNoEntryKey()I:97 - DeleteStatement: getNoEntryKey()I
   * 5 Weak Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.getNoEntryKey()I:97 - DeleteField: mLgnu/trove/map/TIntByteMap;
   */

  @Test
  public void test13()  throws Throwable  {
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap();
      TUnmodifiableIntByteMap tUnmodifiableIntByteMap0 = new TUnmodifiableIntByteMap((TIntByteMap) tIntByteHashMap0);
      int int0 = tUnmodifiableIntByteMap0.getNoEntryKey();
      assertEquals(0, int0);
  }

  //Test case number: 14
  /*
   * 5 covered goals:
   * 1 Weak Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.getNoEntryValue()B:98 - DeleteStatement: getNoEntryValue()B
   * 2 Weak Mutation 60: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.getNoEntryValue()B:98 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.getNoEntryValue()B: root-Branch
   * 4 Weak Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.getNoEntryValue()B:98 - DeleteStatement: getNoEntryValue()B
   * 5 Weak Mutation 60: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.getNoEntryValue()B:98 - DeleteField: mLgnu/trove/map/TIntByteMap;
   */

  @Test
  public void test14()  throws Throwable  {
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap();
      TUnmodifiableIntByteMap tUnmodifiableIntByteMap0 = new TUnmodifiableIntByteMap((TIntByteMap) tIntByteHashMap0);
      byte byte0 = tUnmodifiableIntByteMap0.getNoEntryValue();
      assertEquals((byte)0, byte0);
  }

  //Test case number: 15
  /*
   * 5 covered goals:
   * 1 Weak Mutation 63: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.forEachKey(Lgnu/trove/procedure/TIntProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TIntProcedure;)Z
   * 2 Weak Mutation 62: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.forEachKey(Lgnu/trove/procedure/TIntProcedure;)Z:101 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.forEachKey(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   * 4 Weak Mutation 63: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.forEachKey(Lgnu/trove/procedure/TIntProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TIntProcedure;)Z
   * 5 Weak Mutation 62: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.forEachKey(Lgnu/trove/procedure/TIntProcedure;)Z:101 - DeleteField: mLgnu/trove/map/TIntByteMap;
   */

  @Test
  public void test15()  throws Throwable  {
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap((-22), (-22));
      TUnmodifiableIntByteMap tUnmodifiableIntByteMap0 = new TUnmodifiableIntByteMap((TIntByteMap) tIntByteHashMap0);
      boolean boolean0 = tUnmodifiableIntByteMap0.forEachKey((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 16
  /*
   * 5 covered goals:
   * 1 Weak Mutation 64: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:104 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 2 Weak Mutation 65: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   * 4 Weak Mutation 64: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:104 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 5 Weak Mutation 65: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z
   */

  @Test
  public void test16()  throws Throwable  {
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap();
      TUnmodifiableIntByteMap tUnmodifiableIntByteMap0 = new TUnmodifiableIntByteMap((TIntByteMap) tIntByteHashMap0);
      boolean boolean0 = tUnmodifiableIntByteMap0.forEachValue((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 5 covered goals:
   * 1 Weak Mutation 66: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.forEachEntry(Lgnu/trove/procedure/TIntByteProcedure;)Z:107 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 2 Weak Mutation 67: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.forEachEntry(Lgnu/trove/procedure/TIntByteProcedure;)Z:107 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TIntByteProcedure;)Z
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.forEachEntry(Lgnu/trove/procedure/TIntByteProcedure;)Z: root-Branch
   * 4 Weak Mutation 66: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.forEachEntry(Lgnu/trove/procedure/TIntByteProcedure;)Z:107 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 5 Weak Mutation 67: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.forEachEntry(Lgnu/trove/procedure/TIntByteProcedure;)Z:107 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TIntByteProcedure;)Z
   */

  @Test
  public void test17()  throws Throwable  {
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap(5, (float) 5, 5, (byte) (-104));
      TUnmodifiableIntByteMap tUnmodifiableIntByteMap0 = new TUnmodifiableIntByteMap((TIntByteMap) tIntByteHashMap0);
      boolean boolean0 = tUnmodifiableIntByteMap0.forEachEntry((TIntByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 18
  /*
   * 27 covered goals:
   * 1 Weak Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap$1.key()I:114 - DeleteField: iterLgnu/trove/iterator/TIntByteIterator;
   * 2 Weak Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap$1.key()I:114 - DeleteStatement: key()I
   * 3 Weak Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap$1.value()B:115 - DeleteField: iterLgnu/trove/iterator/TIntByteIterator;
   * 4 Weak Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap$1.value()B:115 - DeleteStatement: value()B
   * 5 Weak Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TIntByteIterator;
   * 6 Weak Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap$1.advance()V:116 - DeleteStatement: advance()V
   * 7 Weak Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TIntByteIterator;
   * 8 Weak Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 9 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.iterator()Lgnu/trove/iterator/TIntByteIterator;: root-Branch
   * 10 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap$1.advance()V: root-Branch
   * 11 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap$1.key()I: root-Branch
   * 12 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap$1.value()B: root-Branch
   * 13 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableIntByteMap;)V: root-Branch
   * 14 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap$1.hasNext()Z: root-Branch
   * 15 Weak Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.size()I:63 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 16 Weak Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.size()I:63 - DeleteStatement: size()I
   * 17 Weak Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap$1.key()I:114 - DeleteField: iterLgnu/trove/iterator/TIntByteIterator;
   * 18 Weak Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap$1.key()I:114 - DeleteStatement: key()I
   * 19 Weak Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap$1.value()B:115 - DeleteField: iterLgnu/trove/iterator/TIntByteIterator;
   * 20 Weak Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap$1.value()B:115 - DeleteStatement: value()B
   * 21 Weak Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TIntByteIterator;
   * 22 Weak Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap$1.advance()V:116 - DeleteStatement: advance()V
   * 23 Weak Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TIntByteIterator;
   * 24 Weak Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 25 Weak Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.size()I:63 - DeleteField: mLgnu/trove/map/TIntByteMap;
   * 26 Weak Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.size()I:63 - DeleteStatement: size()I
   * 27 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.size()I: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[2];
      TIntByteHashMap tIntByteHashMap0 = new TIntByteHashMap();
      TIntByteHashMap tIntByteHashMap1 = new TIntByteHashMap(intArray0, tIntByteHashMap0._states);
      TUnmodifiableIntByteMap tUnmodifiableIntByteMap0 = new TUnmodifiableIntByteMap((TIntByteMap) tIntByteHashMap1);
      TIntByteHashMap tIntByteHashMap2 = new TIntByteHashMap((TIntByteMap) tUnmodifiableIntByteMap0);
      assertEquals(1, tUnmodifiableIntByteMap0.size());
      assertEquals(1, tIntByteHashMap2.size());
  }

  //Test case number: 19
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.<init>(Lgnu/trove/map/TIntByteMap;)V: I17 Branch 1 IFNONNULL L58 - false
   * 2 Weak Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableIntByteMap.<init>(Lgnu/trove/map/TIntByteMap;)V:58 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test19()  throws Throwable  {
      TUnmodifiableIntByteMap tUnmodifiableIntByteMap0 = null;
      try {
        tUnmodifiableIntByteMap0 = new TUnmodifiableIntByteMap((TIntByteMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TFloatFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap;
import gnu.trove.map.TByteFloatMap;
import gnu.trove.map.hash.TByteFloatHashMap;
import gnu.trove.procedure.TByteFloatProcedure;
import java.io.ByteArrayInputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableByteFloatMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = 0;
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)1;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-100);
      byteArray0[2] = byte2;
      byte byte3 = (byte)18;
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-128);
      byteArray0[4] = byte4;
      float[] floatArray0 = new float[4];
      floatArray0[0] = (float) byte4;
      floatArray0[1] = (float) byteArray0[3];
      floatArray0[2] = (float) byte1;
      floatArray0[3] = (float) byte4;
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(byteArray0, floatArray0);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      int int1 = tUnmodifiableByteFloatMap0.size();
      assertEquals(4, int1);
      
      byte byte5 = (byte)27;
      TByteFloatHashMap tByteFloatHashMap1 = new TByteFloatHashMap(int0, (float) int0, byte5, (float) byte5);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap1 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap1);
      // Undeclared exception!
      try {
        tUnmodifiableByteFloatMap1.increment(byte5);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = (-753);
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(int0);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      byte byte0 = (byte) (-83);
      // Undeclared exception!
      try {
        tUnmodifiableByteFloatMap0.adjustValue(byte0, (float) int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)55;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-1);
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-71);
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      float[] floatArray0 = new float[6];
      floatArray0[0] = (float) byte3;
      floatArray0[1] = (float) byteArray0[2];
      floatArray0[2] = (float) byteArray0[3];
      float float0 = 1.0F;
      floatArray0[3] = float0;
      floatArray0[4] = (float) byteArray0[0];
      floatArray0[5] = (float) byteArray0[1];
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(byteArray0, floatArray0);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      byte byte4 = (byte) (-107);
      // Undeclared exception!
      try {
        tUnmodifiableByteFloatMap0.increment(byte4);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

//   @Test
//   public void test3()  throws Throwable  {
//       byte[] byteArray0 = new byte[5];
//       byte byte0 = (byte) (-72);
//       byteArray0[0] = byte0;
//       byte byte1 = (byte)100;
//       byteArray0[1] = byte1;
//       byte byte2 = (byte)1;
//       byteArray0[2] = byte2;
//       byte byte3 = (byte) (-22);
//       byteArray0[3] = byte3;
//       byte byte4 = (byte) (-128);
//       byteArray0[4] = byte4;
//       float[] floatArray0 = new float[3];
//       floatArray0[0] = (float) byte3;
//       float float0 = (-238.28282F);
//       floatArray0[1] = float0;
//       floatArray0[2] = (float) byte3;
//       TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(byteArray0, floatArray0);
//       TByteFloatHashMap tByteFloatHashMap1 = new TByteFloatHashMap((TByteFloatMap) tByteFloatHashMap0);
//       TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap1);
//       float float1 = tUnmodifiableByteFloatMap0.getNoEntryValue();
//       assertEquals(0.0F, float1, 0.01F);
//   }

  @Test
  public void test4()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap();
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      byte byte0 = (byte) (-118);
      // Undeclared exception!
      try {
        tUnmodifiableByteFloatMap0.remove(byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = (-296);
      float float0 = (-39.91853F);
      byte byte0 = (byte)0;
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(int0, float0, byte0, (float) int0);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableByteFloatMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = (-1019);
      byte byte0 = (byte)114;
      int int1 = 67;
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(int1);
      tByteFloatHashMap0.isEmpty();
      TByteFloatHashMap tByteFloatHashMap1 = new TByteFloatHashMap((TByteFloatMap) tByteFloatHashMap0);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      tUnmodifiableByteFloatMap0.getNoEntryValue();
      float float0 = 6.6360896E8F;
      tByteFloatHashMap0.put(byte0, float0);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap1 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap1);
      // Undeclared exception!
      try {
        tUnmodifiableByteFloatMap1.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = 0;
      byte byte0 = (byte)111;
      TByteFloatMap tByteFloatMap0 = null;
      TByteFloatHashMap tByteFloatHashMap0 = null;
      try {
        tByteFloatHashMap0 = new TByteFloatHashMap(tByteFloatMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = 0;
      float float0 = 0.0F;
      byte byte0 = (byte) (-77);
      float float1 = 1.0F;
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(int0, float0, byte0, float1);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      byte byte1 = (byte) (-1);
      // Undeclared exception!
      try {
        tUnmodifiableByteFloatMap0.increment(byte1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 793;
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(int0);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      boolean boolean0 = tUnmodifiableByteFloatMap0.isEmpty();
      assertEquals(true, boolean0);
      
      TByteFloatProcedure tByteFloatProcedure0 = null;
      // Undeclared exception!
      try {
        tUnmodifiableByteFloatMap0.retainEntries(tByteFloatProcedure0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = 797;
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte) (-8);
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-123);
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-124);
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      byte byte4 = (byte)0;
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-9);
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-32);
      byteArray0[6] = byte6;
      byte byte7 = (byte)120;
      byteArray0[7] = byte7;
      byte byte8 = (byte)0;
      byteArray0[8] = byte8;
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) byteArray0[1];
      floatArray0[1] = (float) int0;
      floatArray0[2] = (float) byteArray0[0];
      floatArray0[3] = (float) byteArray0[5];
      floatArray0[4] = (float) byte8;
      floatArray0[5] = (float) byte2;
      float float0 = 1.0F;
      floatArray0[6] = float0;
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(byteArray0, floatArray0);
      TByteFloatHashMap tByteFloatHashMap1 = new TByteFloatHashMap((TByteFloatMap) tByteFloatHashMap0);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap1);
      float float1 = (-1852.4528F);
      byte byte9 = (byte)123;
      float float2 = 1747.7856F;
      TByteFloatHashMap tByteFloatHashMap2 = new TByteFloatHashMap(int0, (float) byte9, byte9, float2);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap1 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap2);
      TByteFloatHashMap tByteFloatHashMap3 = new TByteFloatHashMap(int0, float1, byte9, (float) byte9);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap2 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap3);
      tUnmodifiableByteFloatMap2.size();
      assertFalse(tUnmodifiableByteFloatMap2.equals(tUnmodifiableByteFloatMap0));
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = (-166);
      int int1 = 797;
      TByteFloatMap tByteFloatMap0 = null;
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = null;
      try {
        tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap(tByteFloatMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = (-1);
      byte byte0 = (byte)0;
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(int0, (float) int0, byte0, (float) byte0);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) byte0;
      floatArray0[1] = (float) int0;
      float float0 = 1814.9734F;
      floatArray0[2] = float0;
      floatArray0[3] = (float) int0;
      floatArray0[4] = (float) int0;
      floatArray0[5] = (float) byte0;
      floatArray0[6] = (float) byte0;
      tUnmodifiableByteFloatMap0.values(floatArray0);
      TByteFloatMap tByteFloatMap0 = null;
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap1 = null;
      try {
        tUnmodifiableByteFloatMap1 = new TUnmodifiableByteFloatMap(tByteFloatMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte) (-86);
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-108);
      byteArray0[2] = byte2;
      byte byte3 = (byte)1;
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-1);
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-105);
      byteArray0[5] = byte5;
      byte byte6 = (byte)0;
      byteArray0[6] = byte6;
      byte byte7 = (byte)107;
      byteArray0[7] = byte7;
      float[] floatArray0 = new float[6];
      floatArray0[0] = (float) byteArray0[6];
      floatArray0[1] = (float) byte2;
      floatArray0[2] = (float) byte4;
      floatArray0[3] = (float) byteArray0[3];
      floatArray0[4] = (float) byteArray0[0];
      floatArray0[5] = (float) byteArray0[2];
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(byteArray0, floatArray0);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      byte byte8 = (byte) (-63);
      float float0 = 0.0F;
      // Undeclared exception!
      try {
        tUnmodifiableByteFloatMap0.putIfAbsent(byte8, float0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap();
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      TFloatFunction tFloatFunction0 = null;
      // Undeclared exception!
      try {
        tUnmodifiableByteFloatMap0.transformValues(tFloatFunction0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byte byte0 = (byte)65;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-110);
      byteArray0[1] = byte1;
      byte byte2 = (byte)1;
      byteArray0[2] = byte2;
      byte byte3 = (byte)1;
      byteArray0[3] = byte3;
      byte byte4 = (byte)60;
      byteArray0[4] = byte4;
      byte byte5 = (byte)117;
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-48);
      byteArray0[6] = byte6;
      byte byte7 = (byte)0;
      byteArray0[7] = byte7;
      byte byte8 = (byte)1;
      byteArray0[8] = byte8;
      byte byte9 = (byte) (-13);
      byteArray0[9] = byte9;
      float[] floatArray0 = new float[6];
      float float0 = 0.0F;
      floatArray0[0] = float0;
      floatArray0[1] = (float) byte6;
      floatArray0[2] = (float) byte4;
      floatArray0[3] = (float) byte8;
      float float1 = 838.1784F;
      floatArray0[4] = float1;
      floatArray0[5] = (float) byteArray0[3];
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(byteArray0, floatArray0);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      byte byte10 = (byte)0;
      float float2 = (-1955.3214F);
      // Undeclared exception!
      try {
        tUnmodifiableByteFloatMap0.putIfAbsent(byte10, float2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = 1;
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(int0);
      int int1 = 1994;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(tByteFloatHashMap0._set, int1, int1);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) byteArrayInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      int int0 = (-1);
      byte byte0 = (byte) (-1);
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(int0, (float) int0, byte0, (float) byte0);
      TByteFloatHashMap tByteFloatHashMap1 = new TByteFloatHashMap((TByteFloatMap) tByteFloatHashMap0);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap1);
      tUnmodifiableByteFloatMap0.iterator();
      int int1 = 50004791;
      float float0 = (-1.0F);
      byte byte1 = (byte)125;
      TByteFloatHashMap tByteFloatHashMap2 = new TByteFloatHashMap(int1, float0, byte1, (float) byte1);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap1 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap2);
      // Undeclared exception!
      try {
        tUnmodifiableByteFloatMap1.increment(byte1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte) (-105);
      byteArray0[0] = byte0;
      byte byte1 = (byte)35;
      byteArray0[1] = byte1;
      byte byte2 = (byte)14;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-66);
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap();
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      byte byte4 = (byte) (-103);
      float float0 = 1.0F;
      // Undeclared exception!
      try {
        tUnmodifiableByteFloatMap0.putIfAbsent(byte4, float0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.map.hash.TFloatLongHashMap;
import gnu.trove.procedure.TFloatProcedure;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TFloatLongHashEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.hash.TFloatLongHash.writeExternal(Ljava/io/ObjectOutput;)V: root-Branch
   * 2 gnu.trove.impl.hash.TFloatLongHash.insertKeyAt(IF)V: root-Branch
   * 3 gnu.trove.impl.hash.TFloatLongHash.<init>(I)V: root-Branch
   * 4 gnu.trove.impl.hash.TFloatLongHash.insertKey(F)I: I30 Branch 13 IFNE L279 - true
   * 5 gnu.trove.impl.hash.TFloatLongHash.insertKey(F)I: I30 Branch 13 IFNE L279 - false
   * 6 gnu.trove.impl.hash.TFloatLongHash.insertKey(F)I: I50 Branch 14 IF_ICMPNE L286 - false
   * 7 gnu.trove.impl.hash.TFloatLongHash.insertKey(F)I: I57 Branch 15 IFNE L286 - false
   * 8 gnu.trove.impl.hash.TFloatLongHash.setUp(I)I: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      float[] floatArray0 = new float[9];
      long[] longArray0 = new long[5];
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(floatArray0, longArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(567);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) pipedOutputStream0);
      tFloatLongHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.hash.TFloatLongHash.getNoEntryValue()J: root-Branch
   * 2 gnu.trove.impl.hash.TFloatLongHash.<init>(IF)V: root-Branch
   */

//   @Test
//   public void test1()  throws Throwable  {
//       TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap((-1737), (-1737));
//       long long0 = tFloatLongHashMap0.getNoEntryValue();
//       assertEquals(0.0F, tFloatLongHashMap0.getNoEntryKey(), 0.01F);
//       assertEquals(0L, long0);
//   }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.hash.TFloatLongHash.getNoEntryKey()F: root-Branch
   */

//   @Test
//   public void test2()  throws Throwable  {
//       TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap((-1737), (-1737));
//       float float0 = tFloatLongHashMap0.getNoEntryKey();
//       assertEquals(0L, tFloatLongHashMap0.getNoEntryValue());
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 3
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.hash.TFloatLongHash.removeAt(I)V: root-Branch
   * 2 gnu.trove.impl.hash.TFloatLongHash.index(F)I: I37 Branch 5 IFNE L228 - true
   * 3 gnu.trove.impl.hash.TFloatLongHash.index(F)I: I46 Branch 6 IF_ICMPNE L231 - true
   * 4 gnu.trove.impl.hash.TFloatLongHash.indexRehashed(FIIB)I: I29 Branch 8 IFGE L245 - false
   * 5 gnu.trove.impl.hash.TFloatLongHash.indexRehashed(FIIB)I: I46 Branch 9 IFNE L250 - true
   * 6 gnu.trove.impl.hash.TFloatLongHash.indexRehashed(FIIB)I: I59 Branch 10 IFNE L254 - false
   * 7 gnu.trove.impl.hash.TFloatLongHash.indexRehashed(FIIB)I: I62 Branch 11 IF_ICMPEQ L254 - false
   * 8 gnu.trove.impl.hash.TFloatLongHash.<init>(IFFJ)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(1, 1605.6549F, (float) 1, (long) 1);
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)30;
      byteArray0[2] = (byte)3;
      tFloatLongHashMap0._states = byteArray0;
      long long0 = tFloatLongHashMap0.remove((float) 0L);
      assertEquals(3, tFloatLongHashMap0.capacity());
      assertEquals(0L, long0);
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.hash.TFloatLongHash.contains(F)Z: I5 Branch 1 IFLT L178 - true
   * 2 gnu.trove.impl.hash.TFloatLongHash.index(F)I: I37 Branch 5 IFNE L228 - false
   * 3 gnu.trove.impl.hash.TFloatLongHash.<init>()V: root-Branch
   */

//   @Test
//   public void test4()  throws Throwable  {
//       TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
//       boolean boolean0 = tFloatLongHashMap0.contains((float) (byte)0);
//       assertEquals(0L, tFloatLongHashMap0.getNoEntryValue());
//       assertEquals(23, tFloatLongHashMap0.capacity());
//       assertEquals(0.0F, tFloatLongHashMap0.getNoEntryKey(), 0.01F);
//       assertEquals(false, boolean0);
//   }

  //Test case number: 5
  /*
   * 4 covered goals:
   * 1 gnu.trove.impl.hash.TFloatLongHash.contains(F)Z: I5 Branch 1 IFLT L178 - false
   * 2 gnu.trove.impl.hash.TFloatLongHash.index(F)I: I46 Branch 6 IF_ICMPNE L231 - false
   * 3 gnu.trove.impl.hash.TFloatLongHash.index(F)I: I52 Branch 7 IFNE L231 - false
   * 4 gnu.trove.impl.hash.TFloatLongHash.<init>(IFFJ)V: root-Branch
   */

//   @Test
//   public void test5()  throws Throwable  {
//       TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(1, 1605.6549F, (float) 1, (long) 1);
//       long[] longArray0 = new long[3];
//       TFloatLongHashMap tFloatLongHashMap1 = new TFloatLongHashMap(tFloatLongHashMap0._set, longArray0);
//       boolean boolean0 = tFloatLongHashMap1.containsKey(0.0F);
//       assertEquals(1.0F, tFloatLongHashMap0.getNoEntryKey(), 0.01F);
//       assertEquals(1, tFloatLongHashMap1.size());
//       assertEquals(0.0F, tFloatLongHashMap1.getNoEntryKey(), 0.01F);
//       assertEquals(true, boolean0);
//       assertEquals(0L, tFloatLongHashMap1.getNoEntryValue());
//       assertEquals(7, tFloatLongHashMap1.capacity());
//       assertEquals("{0.0=0}", tFloatLongHashMap1.toString());
//   }

  //Test case number: 6
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.hash.TFloatLongHash.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z: I18 Branch 2 IFLE L192 - true
   * 2 gnu.trove.impl.hash.TFloatLongHash.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z: I18 Branch 2 IFLE L192 - false
   * 3 gnu.trove.impl.hash.TFloatLongHash.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z: I25 Branch 3 IF_ICMPNE L193 - true
   */

//   @Test
//   public void test6()  throws Throwable  {
//       TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap((-1881));
//       boolean boolean0 = tFloatLongHashMap0.forEach((TFloatProcedure) null);
//       assertEquals(0.0F, tFloatLongHashMap0.getNoEntryKey(), 0.01F);
//       assertEquals(true, boolean0);
//       assertEquals(0L, tFloatLongHashMap0.getNoEntryValue());
//   }

  //Test case number: 7
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.hash.TFloatLongHash.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z: I25 Branch 3 IF_ICMPNE L193 - false
   * 2 gnu.trove.impl.hash.TFloatLongHash.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z: I18 Branch 2 IFLE L192 - false
   * 3 gnu.trove.impl.hash.TFloatLongHash.forEach(Lgnu/trove/procedure/TFloatProcedure;)Z: I25 Branch 3 IF_ICMPNE L193 - true
   */

  @Test
  public void test7()  throws Throwable  {
      float[] floatArray0 = new float[2];
      long[] longArray0 = new long[9];
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(floatArray0, longArray0);
      // Undeclared exception!
      try {
        tFloatLongHashMap0.forEach((TFloatProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.hash.TFloatLongHash.index(F)I: I52 Branch 7 IFNE L231 - true
   * 2 gnu.trove.impl.hash.TFloatLongHash.indexRehashed(FIIB)I: I46 Branch 9 IFNE L250 - false
   * 3 gnu.trove.impl.hash.TFloatLongHash.index(F)I: I46 Branch 6 IF_ICMPNE L231 - false
   */

//   @Test
//   public void test8()  throws Throwable  {
//       TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
//       tFloatLongHashMap0.trimToSize();
//       tFloatLongHashMap0.adjustOrPutValue((float) 0, (long) 0, (long) 0);
//       tFloatLongHashMap0.get((-23.937006F));
//       assertEquals("{0.0=0}", tFloatLongHashMap0.toString());
//       assertEquals(0.0F, tFloatLongHashMap0.getNoEntryKey(), 0.01F);
//   }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 gnu.trove.impl.hash.TFloatLongHash.indexRehashed(FIIB)I: I29 Branch 8 IFGE L245 - true
   * 2 gnu.trove.impl.hash.TFloatLongHash.indexRehashed(FIIB)I: I62 Branch 11 IF_ICMPEQ L254 - true
   * 3 gnu.trove.impl.hash.TFloatLongHash.indexRehashed(FIIB)I: I71 Branch 12 IF_ICMPNE L256 - true
   * 4 gnu.trove.impl.hash.TFloatLongHash.indexRehashed(FIIB)I: I59 Branch 10 IFNE L254 - false
   * 5 gnu.trove.impl.hash.TFloatLongHash.contains(F)Z: I5 Branch 1 IFLT L178 - true
   */

  @Test
  public void test9()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
      assertEquals(23, tFloatLongHashMap0.capacity());
      
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)88;
      byteArray0[2] = (byte)2;
      tFloatLongHashMap0.compact();
      tFloatLongHashMap0._states = byteArray0;
      boolean boolean0 = tFloatLongHashMap0.contains((float) (byte)0);
      assertEquals(false, boolean0);
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.hash.TFloatLongHash.indexRehashed(FIIB)I: I59 Branch 10 IFNE L254 - true
   * 2 gnu.trove.impl.hash.TFloatLongHash.indexRehashed(FIIB)I: I46 Branch 9 IFNE L250 - false
   */

//   @Test
//   public void test10()  throws Throwable  {
//       TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(1730, 1730);
//       byte[] byteArray0 = new byte[3];
//       byteArray0[0] = (byte)6;
//       byteArray0[1] = (byte) (-55);
//       tFloatLongHashMap0._states = byteArray0;
//       long long0 = tFloatLongHashMap0.get((float) (byte) (-55));
//       assertEquals(0L, long0);
//       assertEquals(0.0F, tFloatLongHashMap0.getNoEntryKey(), 0.01F);
//   }

  //Test case number: 11
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.hash.TFloatLongHash.indexRehashed(FIIB)I: I71 Branch 12 IF_ICMPNE L256 - false
   * 2 gnu.trove.impl.hash.TFloatLongHash.indexRehashed(FIIB)I: I29 Branch 8 IFGE L245 - true
   * 3 gnu.trove.impl.hash.TFloatLongHash.indexRehashed(FIIB)I: I29 Branch 8 IFGE L245 - false
   * 4 gnu.trove.impl.hash.TFloatLongHash.indexRehashed(FIIB)I: I46 Branch 9 IFNE L250 - true
   * 5 gnu.trove.impl.hash.TFloatLongHash.indexRehashed(FIIB)I: I59 Branch 10 IFNE L254 - true
   * 6 gnu.trove.impl.hash.TFloatLongHash.indexRehashed(FIIB)I: I71 Branch 12 IF_ICMPNE L256 - true
   * 7 gnu.trove.impl.hash.TFloatLongHash.index(F)I: I37 Branch 5 IFNE L228 - true
   * 8 gnu.trove.impl.hash.TFloatLongHash.index(F)I: I46 Branch 6 IF_ICMPNE L231 - true
   */

//   @Test
//   public void test11()  throws Throwable  {
//       TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(1730, 1730);
//       byte[] byteArray0 = new byte[3];
//       byteArray0[0] = (byte)6;
//       byteArray0[1] = (byte) (-55);
//       byteArray0[2] = (byte)6;
//       tFloatLongHashMap0._states = byteArray0;
//       tFloatLongHashMap0.get((float) (byte) (-55));
//       assertEquals(0.0F, tFloatLongHashMap0.getNoEntryKey(), 0.01F);
//   }

  //Test case number: 12
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.hash.TFloatLongHash.insertKey(F)I: I57 Branch 15 IFNE L286 - true
   * 2 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I28 Branch 16 IF_ICMPNE L306 - true
   * 3 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I62 Branch 19 IFNE L316 - true
   * 4 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I62 Branch 19 IFNE L316 - false
   * 5 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I67 Branch 20 IF_ICMPEQ L317 - true
   * 6 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I97 Branch 21 IF_ICMPNE L327 - false
   * 7 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I104 Branch 22 IFNE L327 - false
   * 8 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I45 Branch 18 IFGE L310 - false
   */

  @Test
  public void test12()  throws Throwable  {
      float[] floatArray0 = new float[9];
      floatArray0[0] = 27.048948F;
      long[] longArray0 = new long[5];
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(floatArray0, longArray0);
      assertEquals("{0.0=0, 27.048948=0}", tFloatLongHashMap0.toString());
      assertEquals(0L, tFloatLongHashMap0.getNoEntryValue());
      assertEquals(2, tFloatLongHashMap0.size());
  }

  //Test case number: 13
  /*
   * 9 covered goals:
   * 1 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I31 Branch 17 IF_ICMPNE L306 - true
   * 2 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I45 Branch 18 IFGE L310 - true
   * 3 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I67 Branch 20 IF_ICMPEQ L317 - false
   * 4 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I97 Branch 21 IF_ICMPNE L327 - true
   * 5 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I116 Branch 23 IF_ICMPNE L332 - true
   * 6 gnu.trove.impl.hash.TFloatLongHash.<init>()V: root-Branch
   * 7 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I28 Branch 16 IF_ICMPNE L306 - false
   * 8 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I31 Branch 17 IF_ICMPNE L306 - false
   * 9 gnu.trove.impl.hash.TFloatLongHash.insertKey(F)I: I50 Branch 14 IF_ICMPNE L286 - true
   */

  @Test
  public void test13()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
      assertEquals(23, tFloatLongHashMap0.capacity());
      
      byte[] byteArray0 = new byte[10];
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)2;
      tFloatLongHashMap0.compact();
      tFloatLongHashMap0._states = byteArray0;
      // Undeclared exception!
      try {
        tFloatLongHashMap0.adjustOrPutValue((float) (byte)119, (-451L), (long) (byte)2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
      }
  }

  //Test case number: 14
  /*
   * 10 covered goals:
   * 1 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I104 Branch 22 IFNE L327 - true
   * 2 gnu.trove.impl.hash.TFloatLongHash.insertKeyAt(IF)V: root-Branch
   * 3 gnu.trove.impl.hash.TFloatLongHash.<init>(I)V: root-Branch
   * 4 gnu.trove.impl.hash.TFloatLongHash.insertKey(F)I: I30 Branch 13 IFNE L279 - false
   * 5 gnu.trove.impl.hash.TFloatLongHash.insertKey(F)I: I50 Branch 14 IF_ICMPNE L286 - false
   * 6 gnu.trove.impl.hash.TFloatLongHash.insertKey(F)I: I57 Branch 15 IFNE L286 - true
   * 7 gnu.trove.impl.hash.TFloatLongHash.insertKey(F)I: I57 Branch 15 IFNE L286 - false
   * 8 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I62 Branch 19 IFNE L316 - false
   * 9 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I67 Branch 20 IF_ICMPEQ L317 - true
   * 10 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I97 Branch 21 IF_ICMPNE L327 - false
   */

//   @Test
//   public void test14()  throws Throwable  {
//       float[] floatArray0 = new float[9];
//       floatArray0[1] = (-1027.4989F);
//       floatArray0[4] = 1.0F;
//       floatArray0[8] = 985.4528F;
//       long[] longArray0 = new long[10];
//       TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(floatArray0, longArray0);
//       assertEquals(4, tFloatLongHashMap0.size());
//       assertEquals("{1.0=0, 985.4528=0, -1027.4989=0, 0.0=0}", tFloatLongHashMap0.toString());
//       assertEquals(0.0F, tFloatLongHashMap0.getNoEntryKey(), 0.01F);
//   }

  //Test case number: 15
  /*
   * 12 covered goals:
   * 1 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I116 Branch 23 IF_ICMPNE L332 - false
   * 2 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I121 Branch 24 IF_ICMPEQ L336 - true
   * 3 gnu.trove.impl.hash.TFloatLongHash.<init>(IF)V: root-Branch
   * 4 gnu.trove.impl.hash.TFloatLongHash.setUp(I)I: root-Branch
   * 5 gnu.trove.impl.hash.TFloatLongHash.insertKey(F)I: I30 Branch 13 IFNE L279 - true
   * 6 gnu.trove.impl.hash.TFloatLongHash.insertKey(F)I: I50 Branch 14 IF_ICMPNE L286 - true
   * 7 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I28 Branch 16 IF_ICMPNE L306 - true
   * 8 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I45 Branch 18 IFGE L310 - true
   * 9 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I45 Branch 18 IFGE L310 - false
   * 10 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I62 Branch 19 IFNE L316 - true
   * 11 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I97 Branch 21 IF_ICMPNE L327 - true
   * 12 gnu.trove.impl.hash.TFloatLongHash.insertKeyRehash(FIIB)I: I116 Branch 23 IF_ICMPNE L332 - true
   */

  @Test
  public void test15()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(1730, 1730);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte) (-55);
      byteArray0[2] = (byte)6;
      tFloatLongHashMap0._states = byteArray0;
      // Undeclared exception!
      try {
        tFloatLongHashMap0.adjustOrPutValue(0.5F, (-583L), (long) 1730);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No free or removed slots available. Key set full?!!
         //
      }
  }
}

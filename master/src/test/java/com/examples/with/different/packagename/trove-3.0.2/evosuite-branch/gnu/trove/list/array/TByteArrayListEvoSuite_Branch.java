/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.list.array;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TByteCollection;
import gnu.trove.function.TByteFunction;
import gnu.trove.impl.sync.TSynchronizedRandomAccessByteList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessByteList;
import gnu.trove.list.TByteList;
import gnu.trove.list.array.TByteArrayList;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.set.hash.TByteHashSet;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Random;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TByteArrayListEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 11 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.size()I: root-Branch
   * 2 gnu.trove.list.array.TByteArrayList.<init>(IB)V: root-Branch
   * 3 gnu.trove.list.array.TByteArrayList.<init>(I)V: root-Branch
   * 4 gnu.trove.list.array.TByteArrayList.equals(Ljava/lang/Object;)Z: I4 Branch 66 IF_ACMPNE L738 - true
   * 5 gnu.trove.list.array.TByteArrayList.equals(Ljava/lang/Object;)Z: I13 Branch 67 IFEQ L741 - false
   * 6 gnu.trove.list.array.TByteArrayList.equals(Ljava/lang/Object;)Z: I25 Branch 68 IF_ICMPEQ L743 - false
   * 7 gnu.trove.list.array.TByteArrayList$1.<init>([BBZ)V: root-Branch
   * 8 gnu.trove.list.array.TByteArrayList.wrap([BB)Lgnu/trove/list/array/TByteArrayList;: root-Branch
   * 9 gnu.trove.list.array.TByteArrayList.wrap([B)Lgnu/trove/list/array/TByteArrayList;: root-Branch
   * 10 gnu.trove.list.array.TByteArrayList.<init>([BBZ)V: I7 Branch 2 IFNE L123 - true
   * 11 gnu.trove.list.array.TByteArrayList.<init>([BBZ)V: I18 Branch 3 IFNONNULL L126 - true
   */

//   @Test
//   public void test0()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList((int) (byte)88);
//       byte[] byteArray0 = new byte[1];
//       TByteArrayList tByteArrayList1 = TByteArrayList.wrap(byteArray0);
//       assertNotNull(tByteArrayList1);
//       
//       boolean boolean0 = tByteArrayList0.equals((Object) tByteArrayList1);
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertEquals(false, boolean0);
//       assertFalse(tByteArrayList1.equals(tByteArrayList0));
//       assertEquals(1, tByteArrayList1.size());
//       assertEquals(0, tByteArrayList1.getNoEntryValue());
//   }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.getQuick(I)B: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList((int) (byte)125);
      // Undeclared exception!
      try {
        tByteArrayList0.getQuick(643);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 643
         //
      }
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.fill(B)V: root-Branch
   * 2 gnu.trove.list.array.TByteArrayList.<init>()V: root-Branch
   */

//   @Test
//   public void test2()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList();
//       tByteArrayList0.fill((byte) (-11));
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertEquals(true, tByteArrayList0.isEmpty());
//   }

  //Test case number: 3
  /*
   * 6 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.swap(II)V: root-Branch
   * 2 gnu.trove.list.array.TByteArrayList.reverse()V: root-Branch
   * 3 gnu.trove.list.array.TByteArrayList.reverse(II)V: I4 Branch 51 IF_ICMPNE L626 - true
   * 4 gnu.trove.list.array.TByteArrayList.reverse(II)V: I12 Branch 52 IF_ICMPLE L629 - true
   * 5 gnu.trove.list.array.TByteArrayList.reverse(II)V: I32 Branch 53 IF_ICMPGE L632 - true
   * 6 gnu.trove.list.array.TByteArrayList.reverse(II)V: I32 Branch 53 IF_ICMPGE L632 - false
   */

//   @Test
//   public void test3()  throws Throwable  {
//       byte[] byteArray0 = new byte[3];
//       TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, (byte)4);
//       assertNotNull(tByteArrayList0);
//       
//       tByteArrayList0.reverse();
//       assertEquals(4, tByteArrayList0.getNoEntryValue());
//       assertEquals("{0, 0, 0}", tByteArrayList0.toString());
//   }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.setQuick(IB)V: root-Branch
   */

//   @Test
//   public void test4()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList(646);
//       tByteArrayList0.setQuick((int) (byte)63, (byte)96);
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertEquals(true, tByteArrayList0.isEmpty());
//       assertEquals("{}", tByteArrayList0.toString());
//   }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.sort(II)V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, (byte)0);
      assertNotNull(tByteArrayList0);
      
      // Undeclared exception!
      try {
        tByteArrayList0.sort((int) (byte) (-5), 1724);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -5
         //
      }
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.reset()V: root-Branch
   */

//   @Test
//   public void test6()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList(646);
//       tByteArrayList0.reset();
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertEquals(true, tByteArrayList0.isEmpty());
//   }

  //Test case number: 7
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.toArray(II)[B: root-Branch
   * 2 gnu.trove.list.array.TByteArrayList.toArray()[B: root-Branch
   * 3 gnu.trove.list.array.TByteArrayList.toArray([BII)[B: I3 Branch 60 IFNE L709 - false
   */

//   @Test
//   public void test7()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList();
//       byte[] byteArray0 = tByteArrayList0.toArray();
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertNotNull(byteArray0);
//       assertEquals("{}", tByteArrayList0.toString());
//   }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.resetQuick()V: root-Branch
   */

//   @Test
//   public void test8()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList((int) (byte)0, (byte)0);
//       tByteArrayList0.resetQuick();
//       assertEquals(0, tByteArrayList0.size());
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertEquals(true, tByteArrayList0.isEmpty());
//   }

  //Test case number: 9
  /*
   * 6 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.iterator()Lgnu/trove/iterator/TByteIterator;: root-Branch
   * 2 gnu.trove.list.array.TByteArrayList$TByteArrayIterator.<init>(Lgnu/trove/list/array/TByteArrayList;I)V: root-Branch
   * 3 gnu.trove.list.array.TByteArrayList.removeAll(Lgnu/trove/TByteCollection;)Z: I4 Branch 45 IF_ACMPNE L582 - false
   * 4 gnu.trove.list.array.TByteArrayList.removeAll(Lgnu/trove/TByteCollection;)Z: I26 Branch 46 IFEQ L588 - true
   * 5 gnu.trove.list.array.TByteArrayList.inverseGrep(Lgnu/trove/procedure/TByteProcedure;)Lgnu/trove/list/TByteList;: I14 Branch 89 IF_ICMPGE L917 - true
   * 6 gnu.trove.list.array.TByteArrayList$TByteArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   */

//   @Test
//   public void test9()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList();
//       TByteArrayList tByteArrayList1 = (TByteArrayList)tByteArrayList0.inverseGrep((TByteProcedure) null);
//       assertNotNull(tByteArrayList1);
//       
//       boolean boolean0 = tByteArrayList0.removeAll((TByteCollection) tByteArrayList1);
//       assertEquals(false, boolean0);
//       assertEquals(0, tByteArrayList1.getNoEntryValue());
//       assertEquals(0, tByteArrayList1.size());
//   }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.getNoEntryValue()B: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, (byte)93);
      assertNotNull(tByteArrayList0);
      
      byte byte0 = tByteArrayList0.getNoEntryValue();
      assertEquals((byte)93, byte0);
  }

  //Test case number: 11
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.set(I[B)V: root-Branch
   * 2 gnu.trove.list.array.TByteArrayList.set(I[BII)V: I3 Branch 12 IFLT L326 - false
   * 3 gnu.trove.list.array.TByteArrayList.set(I[BII)V: I9 Branch 13 IF_ICMPLE L326 - true
   */

//   @Test
//   public void test11()  throws Throwable  {
//       byte[] byteArray0 = new byte[3];
//       TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, (byte)4);
//       assertNotNull(tByteArrayList0);
//       
//       byte[] byteArray1 = new byte[2];
//       tByteArrayList0.set(0, byteArray1);
//       assertEquals(4, tByteArrayList0.getNoEntryValue());
//   }

  //Test case number: 12
  /*
   * 8 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.removeAt(I)B: root-Branch
   * 2 gnu.trove.list.array.TByteArrayList.get(I)B: I5 Branch 9 IF_ICMPLT L280 - false
   * 3 gnu.trove.list.array.TByteArrayList.add(B)Z: root-Branch
   * 4 gnu.trove.list.array.TByteArrayList.<init>(Lgnu/trove/TByteCollection;)V: root-Branch
   * 5 gnu.trove.list.array.TByteArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   * 6 gnu.trove.list.array.TByteArrayList.addAll(Lgnu/trove/TByteCollection;)Z: I13 Branch 31 IFEQ L495 - true
   * 7 gnu.trove.list.array.TByteArrayList.addAll(Lgnu/trove/TByteCollection;)Z: I13 Branch 31 IFEQ L495 - false
   * 8 gnu.trove.list.array.TByteArrayList.addAll(Lgnu/trove/TByteCollection;)Z: I24 Branch 32 IFEQ L497 - false
   */

  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      TByteHashSet tByteHashSet0 = new TByteHashSet(byteArray0);
      TByteArrayList tByteArrayList0 = new TByteArrayList((TByteCollection) tByteHashSet0);
      // Undeclared exception!
      try {
        tByteArrayList0.removeAt(2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2
         //
      }
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.sort()V: root-Branch
   */

//   @Test
//   public void test13()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList(50, (byte)107);
//       tByteArrayList0.sort();
//       assertEquals(107, tByteArrayList0.getNoEntryValue());
//       assertEquals("{}", tByteArrayList0.toString());
//       assertEquals(0, tByteArrayList0.size());
//   }

  //Test case number: 14
  /*
   * 19 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList$TByteArrayIterator.next()B: root-Branch
   * 2 gnu.trove.list.array.TByteArrayList.get(I)B: I5 Branch 9 IF_ICMPLT L280 - true
   * 3 gnu.trove.list.array.TByteArrayList.remove(II)V: I3 Branch 16 IFNE L403 - true
   * 4 gnu.trove.list.array.TByteArrayList.remove(II)V: I8 Branch 17 IFLT L404 - false
   * 5 gnu.trove.list.array.TByteArrayList.remove(II)V: I12 Branch 18 IF_ICMPLT L404 - true
   * 6 gnu.trove.list.array.TByteArrayList.remove(II)V: I23 Branch 19 IFNE L408 - false
   * 7 gnu.trove.list.array.TByteArrayList.retainAll(Lgnu/trove/TByteCollection;)Z: I4 Branch 37 IF_ACMPNE L534 - true
   * 8 gnu.trove.list.array.TByteArrayList.retainAll(Lgnu/trove/TByteCollection;)Z: I22 Branch 38 IFEQ L539 - true
   * 9 gnu.trove.list.array.TByteArrayList.retainAll(Lgnu/trove/TByteCollection;)Z: I22 Branch 38 IFEQ L539 - false
   * 10 gnu.trove.list.array.TByteArrayList.retainAll(Lgnu/trove/TByteCollection;)Z: I29 Branch 39 IFNE L540 - false
   * 11 gnu.trove.list.array.TByteArrayList$TByteArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - false
   * 12 gnu.trove.list.array.TByteArrayList$TByteArrayIterator.remove()V: I5 Branch 103 IF_ICMPNE L1023 - true
   * 13 gnu.trove.list.array.TByteArrayList$TByteArrayIterator.remove()V: I26 Branch 104 IF_ICMPGE L1028 - false
   * 14 gnu.trove.list.array.TByteArrayList.add([BII)V: root-Branch
   * 15 gnu.trove.list.array.TByteArrayList.lastIndexOf(B)I: root-Branch
   * 16 gnu.trove.list.array.TByteArrayList.<init>([B)V: root-Branch
   * 17 gnu.trove.list.array.TByteArrayList.add([B)V: root-Branch
   * 18 gnu.trove.list.array.TByteArrayList.contains(B)Z: I5 Branch 86 IFLT L898 - true
   * 19 gnu.trove.list.array.TByteArrayList.lastIndexOf(IB)I: I7 Branch 84 IFLE L887 - true
   */

  @Test
  public void test14()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList(1357, (byte) (-44));
      byte[] byteArray0 = new byte[2];
      TByteArrayList tByteArrayList1 = new TByteArrayList(byteArray0);
      boolean boolean0 = tByteArrayList1.retainAll((TByteCollection) tByteArrayList0);
      assertEquals(true, boolean0);
      assertEquals(true, tByteArrayList1.isEmpty());
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList$1.ensureCapacity(I)V: I6 Branch 1 IF_ICMPLE L164 - false
   */

  @Test
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, (byte)93);
      assertNotNull(tByteArrayList0);
      
      // Undeclared exception!
      try {
        tByteArrayList0.add(byteArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Can not grow ArrayList wrapped external array
         //
      }
  }

  //Test case number: 16
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.isEmpty()Z: I4 Branch 5 IFNE L201 - true
   * 2 gnu.trove.list.array.TByteArrayList.insert(I[B)V: root-Branch
   * 3 gnu.trove.list.array.TByteArrayList.insert(I[BII)V: I5 Branch 8 IF_ICMPNE L264 - false
   */

  @Test
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      TByteArrayList tByteArrayList0 = new TByteArrayList(50, (byte)107);
      tByteArrayList0.insert(0, byteArray0);
      boolean boolean0 = tByteArrayList0.isEmpty();
      assertEquals("{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}", tByteArrayList0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.isEmpty()Z: I4 Branch 5 IFNE L201 - false
   */

//   @Test
//   public void test17()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList(0, (byte)6);
//       boolean boolean0 = tByteArrayList0.isEmpty();
//       assertEquals(6, tByteArrayList0.getNoEntryValue());
//       assertEquals(true, boolean0);
//   }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.trimToSize()V: I7 Branch 6 IF_ICMPLE L209 - true
   */

//   @Test
//   public void test18()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList(0);
//       tByteArrayList0.trimToSize();
//       assertEquals(0, tByteArrayList0.size());
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//   }

  //Test case number: 19
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.trimToSize()V: I7 Branch 6 IF_ICMPLE L209 - false
   * 2 gnu.trove.list.array.TByteArrayList.toArray([BII)[B: I3 Branch 60 IFNE L709 - false
   * 3 gnu.trove.list.array.TByteArrayList.clear()V: root-Branch
   * 4 gnu.trove.list.array.TByteArrayList.clear(I)V: root-Branch
   */

//   @Test
//   public void test19()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList(0);
//       tByteArrayList0.clear();
//       tByteArrayList0.trimToSize();
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertEquals(0, tByteArrayList0.size());
//   }

  //Test case number: 20
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.insert(IB)V: I5 Branch 7 IF_ICMPNE L243 - true
   * 2 gnu.trove.list.array.TByteArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - false
   */

  @Test
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
      tByteArrayList0.insert(0, (byte)107);
      assertEquals(11, tByteArrayList0.size());
      assertEquals("{107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}", tByteArrayList0.toString());
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.insert(IB)V: I5 Branch 7 IF_ICMPNE L243 - false
   */

//   @Test
//   public void test21()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList((int) (byte)0, (byte)0);
//       tByteArrayList0.insert((int) (byte)0, (byte)127);
//       assertEquals(1, tByteArrayList0.size());
//       assertEquals(127, tByteArrayList0.sum());
//   }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.insert(I[BII)V: I5 Branch 8 IF_ICMPNE L264 - true
   */

  @Test
  public void test22()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList(1357, (byte) (-44));
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try {
        tByteArrayList0.insert((int) (byte) (-79), byteArray0, (int) (byte) (-79), (int) (byte) (-128));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.set(IB)B: I5 Branch 10 IF_ICMPLT L297 - true
   * 2 gnu.trove.list.array.TByteArrayList.insert(I[B)V: root-Branch
   * 3 gnu.trove.list.array.TByteArrayList.insert(I[BII)V: I5 Branch 8 IF_ICMPNE L264 - false
   */

  @Test
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      TByteArrayList tByteArrayList0 = new TByteArrayList(50, (byte)107);
      tByteArrayList0.insert(0, byteArray0);
      byte byte0 = tByteArrayList0.set((int) (byte)1, (byte) (-18));
      assertEquals(10, tByteArrayList0.size());
      assertEquals((byte)0, byte0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.set(IB)B: I5 Branch 10 IF_ICMPLT L297 - false
   */

  @Test
  public void test24()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList((int) (byte)127);
      // Undeclared exception!
      try {
        tByteArrayList0.set(1, (byte)34);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
      }
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.replace(IB)B: I5 Branch 11 IF_ICMPLT L309 - true
   */

  @Test
  public void test25()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList(50, (byte)107);
      // Undeclared exception!
      try {
        tByteArrayList0.replace((-1437), (byte)88);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1437
         //
      }
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.replace(IB)B: I5 Branch 11 IF_ICMPLT L309 - false
   */

  @Test
  public void test26()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList();
      // Undeclared exception!
      try {
        tByteArrayList0.replace((int) (byte)0, (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.set(I[BII)V: I3 Branch 12 IFLT L326 - true
   */

  @Test
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0);
      assertNotNull(tByteArrayList0);
      
      // Undeclared exception!
      try {
        tByteArrayList0.set((-449), byteArray0, 10, (int) (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -449
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.set(I[BII)V: I9 Branch 13 IF_ICMPLE L326 - false
   * 2 gnu.trove.list.array.TByteArrayList.set(I[BII)V: I3 Branch 12 IFLT L326 - false
   */

  @Test
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
      // Undeclared exception!
      try {
        tByteArrayList0.set((int) (byte)69, byteArray0, (int) (byte)69, (int) (byte)69);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 69
         //
      }
  }

  //Test case number: 29
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.remove(B)Z: I8 Branch 14 IF_ICMPGE L383 - true
   * 2 gnu.trove.list.array.TByteArrayList.removeAll(Lgnu/trove/TByteCollection;)Z: I4 Branch 45 IF_ACMPNE L582 - true
   * 3 gnu.trove.list.array.TByteArrayList.removeAll(Lgnu/trove/TByteCollection;)Z: I26 Branch 46 IFEQ L588 - false
   * 4 gnu.trove.list.array.TByteArrayList.removeAll(Lgnu/trove/TByteCollection;)Z: I37 Branch 47 IFEQ L590 - true
   */

//   @Test
//   public void test29()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList(1357, (byte) (-44));
//       byte[] byteArray0 = new byte[2];
//       TByteArrayList tByteArrayList1 = new TByteArrayList(byteArray0);
//       boolean boolean0 = tByteArrayList0.removeAll((TByteCollection) tByteArrayList1);
//       assertEquals(false, boolean0);
//       assertEquals(-44, tByteArrayList0.getNoEntryValue());
//       assertEquals(2, tByteArrayList1.size());
//   }

  //Test case number: 30
  /*
   * 6 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.remove(B)Z: I8 Branch 14 IF_ICMPGE L383 - false
   * 2 gnu.trove.list.array.TByteArrayList.remove(B)Z: I16 Branch 15 IF_ICMPNE L384 - false
   * 3 gnu.trove.list.array.TByteArrayList.removeAll(Lgnu/trove/TByteCollection;)Z: I37 Branch 47 IFEQ L590 - false
   * 4 gnu.trove.list.array.TByteArrayList.removeAll(Lgnu/trove/TByteCollection;)Z: I4 Branch 45 IF_ACMPNE L582 - false
   * 5 gnu.trove.list.array.TByteArrayList.removeAll(Lgnu/trove/TByteCollection;)Z: I26 Branch 46 IFEQ L588 - true
   * 6 gnu.trove.list.array.TByteArrayList.removeAll(Lgnu/trove/TByteCollection;)Z: I26 Branch 46 IFEQ L588 - false
   */

  @Test
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
      TByteArrayList tByteArrayList1 = new TByteArrayList(byteArray0);
      boolean boolean0 = tByteArrayList1.removeAll((TByteCollection) tByteArrayList0);
      assertEquals(2, tByteArrayList0.size());
      assertFalse(tByteArrayList1.equals(tByteArrayList0));
      assertEquals(true, boolean0);
  }

  //Test case number: 31
  /*
   * 8 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.remove(B)Z: I16 Branch 15 IF_ICMPNE L384 - true
   * 2 gnu.trove.list.array.TByteArrayList.remove(II)V: I23 Branch 19 IFNE L408 - true
   * 3 gnu.trove.list.array.TByteArrayList.remove(II)V: I45 Branch 20 IF_ICMPNE L412 - false
   * 4 gnu.trove.list.array.TByteArrayList.removeAll([B)Z: I12 Branch 48 IFLE L601 - true
   * 5 gnu.trove.list.array.TByteArrayList.removeAll([B)Z: I12 Branch 48 IFLE L601 - false
   * 6 gnu.trove.list.array.TByteArrayList.removeAll([B)Z: I20 Branch 49 IFEQ L602 - false
   * 7 gnu.trove.list.array.TByteArrayList.remove(B)Z: I8 Branch 14 IF_ICMPGE L383 - false
   * 8 gnu.trove.list.array.TByteArrayList.remove(B)Z: I16 Branch 15 IF_ICMPNE L384 - false
   */

  @Test
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0);
      assertNotNull(tByteArrayList0);
      
      byteArray0[2] = (byte)25;
      boolean boolean0 = tByteArrayList0.removeAll(byteArray0);
      assertEquals(0, tByteArrayList0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.remove(II)V: I3 Branch 16 IFNE L403 - false
   */

//   @Test
//   public void test32()  throws Throwable  {
//       byte[] byteArray0 = new byte[3];
//       TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, (byte)4);
//       assertNotNull(tByteArrayList0);
//       
//       tByteArrayList0.remove(0, (int) (byte)0);
//       assertEquals(4, tByteArrayList0.getNoEntryValue());
//       assertEquals(3, tByteArrayList0.size());
//   }

  //Test case number: 33
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.remove(II)V: I8 Branch 17 IFLT L404 - true
   */

  @Test
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
      // Undeclared exception!
      try {
        tByteArrayList0.remove((-124), (int) (byte) (-78));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -124
         //
      }
  }

  //Test case number: 34
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.remove(II)V: I12 Branch 18 IF_ICMPLT L404 - false
   * 2 gnu.trove.list.array.TByteArrayList.retainAll([B)Z: I21 Branch 40 IFLE L555 - false
   * 3 gnu.trove.list.array.TByteArrayList.retainAll([B)Z: I29 Branch 41 IFGE L556 - false
   */

  @Test
  public void test34()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-11);
      byteArray0[1] = (byte) (-72);
      byteArray0[2] = (byte) (-11);
      // Undeclared exception!
      try {
        tByteArrayList0.retainAll(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 9
         //
      }
  }

  //Test case number: 35
  /*
   * 6 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.remove(II)V: I45 Branch 20 IF_ICMPNE L412 - true
   * 2 gnu.trove.list.array.TByteArrayList.retainAll([B)Z: I21 Branch 40 IFLE L555 - true
   * 3 gnu.trove.list.array.TByteArrayList.retainAll([B)Z: I29 Branch 41 IFGE L556 - true
   * 4 gnu.trove.list.array.TByteArrayList.remove(II)V: I23 Branch 19 IFNE L408 - true
   * 5 gnu.trove.list.array.TByteArrayList.retainAll([B)Z: I21 Branch 40 IFLE L555 - false
   * 6 gnu.trove.list.array.TByteArrayList.retainAll([B)Z: I29 Branch 41 IFGE L556 - false
   */

  @Test
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0);
      assertNotNull(tByteArrayList0);
      
      byte[] byteArray1 = new byte[17];
      byteArray0[4] = (byte)95;
      boolean boolean0 = tByteArrayList0.retainAll(byteArray1);
      assertEquals(6, tByteArrayList0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 36
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.containsAll(Ljava/util/Collection;)Z: I8 Branch 21 IFEQ L436 - true
   */

//   @Test
//   public void test36()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList(0);
//       LinkedList<TByteArrayList> linkedList0 = new LinkedList<TByteArrayList>();
//       boolean boolean0 = tByteArrayList0.containsAll((Collection<?>) linkedList0);
//       assertEquals(true, tByteArrayList0.isEmpty());
//       assertEquals(true, boolean0);
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//   }

  //Test case number: 37
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.containsAll(Ljava/util/Collection;)Z: I8 Branch 21 IFEQ L436 - false
   * 2 gnu.trove.list.array.TByteArrayList.containsAll(Ljava/util/Collection;)Z: I16 Branch 22 IFEQ L437 - true
   */

//   @Test
//   public void test37()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList((int) (byte)88);
//       LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
//       linkedList0.add((Integer) 0);
//       boolean boolean0 = tByteArrayList0.containsAll((Collection<?>) linkedList0);
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertEquals(false, boolean0);
//       assertEquals("{}", tByteArrayList0.toString());
//   }

  //Test case number: 38
  /*
   * 7 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.containsAll(Lgnu/trove/TByteCollection;)Z: I4 Branch 24 IF_ACMPNE L453 - true
   * 2 gnu.trove.list.array.TByteArrayList.containsAll(Lgnu/trove/TByteCollection;)Z: I18 Branch 25 IFEQ L457 - true
   * 3 gnu.trove.list.array.TByteArrayList.containsAll(Lgnu/trove/TByteCollection;)Z: I18 Branch 25 IFEQ L457 - false
   * 4 gnu.trove.list.array.TByteArrayList.containsAll(Lgnu/trove/TByteCollection;)Z: I29 Branch 26 IFNE L459 - true
   * 5 gnu.trove.list.array.TByteArrayList.lastIndexOf(IB)I: I7 Branch 84 IFLE L887 - false
   * 6 gnu.trove.list.array.TByteArrayList.lastIndexOf(IB)I: I15 Branch 85 IF_ICMPNE L888 - false
   * 7 gnu.trove.list.array.TByteArrayList.contains(B)Z: I5 Branch 86 IFLT L898 - false
   */

//   @Test
//   public void test38()  throws Throwable  {
//       byte[] byteArray0 = new byte[8];
//       TByteHashSet tByteHashSet0 = new TByteHashSet(byteArray0);
//       TByteArrayList tByteArrayList0 = new TByteArrayList((TByteCollection) tByteHashSet0);
//       boolean boolean0 = tByteArrayList0.containsAll((TByteCollection) tByteHashSet0);
//       assertEquals(1, tByteArrayList0.size());
//       assertEquals(true, boolean0);
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//   }

  //Test case number: 39
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.containsAll(Lgnu/trove/TByteCollection;)Z: I4 Branch 24 IF_ACMPNE L453 - false
   */

//   @Test
//   public void test39()  throws Throwable  {
//       byte[] byteArray0 = new byte[7];
//       TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
//       boolean boolean0 = tByteArrayList0.containsAll((TByteCollection) tByteArrayList0);
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertEquals(7, tByteArrayList0.size());
//       assertEquals(true, boolean0);
//   }

  //Test case number: 40
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.containsAll(Lgnu/trove/TByteCollection;)Z: I29 Branch 26 IFNE L459 - false
   * 2 gnu.trove.list.array.TByteArrayList.containsAll(Lgnu/trove/TByteCollection;)Z: I4 Branch 24 IF_ACMPNE L453 - true
   * 3 gnu.trove.list.array.TByteArrayList.containsAll(Lgnu/trove/TByteCollection;)Z: I18 Branch 25 IFEQ L457 - false
   */

  @Test
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      TByteHashSet tByteHashSet0 = new TByteHashSet(byteArray0);
      TByteArrayList tByteArrayList0 = new TByteArrayList((TByteCollection) tByteHashSet0);
      assertEquals("{0}", tByteArrayList0.toString());
      
      tByteArrayList0.clear(46327);
      boolean boolean0 = tByteArrayList0.containsAll((TByteCollection) tByteHashSet0);
      assertEquals("{}", tByteArrayList0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 41
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.containsAll([B)Z: I8 Branch 27 IFLE L469 - true
   * 2 gnu.trove.list.array.TByteArrayList.containsAll([B)Z: I8 Branch 27 IFLE L469 - false
   * 3 gnu.trove.list.array.TByteArrayList.containsAll([B)Z: I16 Branch 28 IFNE L470 - true
   */

//   @Test
//   public void test41()  throws Throwable  {
//       byte[] byteArray0 = new byte[8];
//       TByteHashSet tByteHashSet0 = new TByteHashSet(byteArray0);
//       TByteArrayList tByteArrayList0 = new TByteArrayList((TByteCollection) tByteHashSet0);
//       boolean boolean0 = tByteArrayList0.containsAll(tByteHashSet0._set);
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertEquals(true, boolean0);
//       assertEquals("{0}", tByteArrayList0.toString());
//   }

  //Test case number: 42
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.containsAll([B)Z: I16 Branch 28 IFNE L470 - false
   * 2 gnu.trove.list.array.TByteArrayList.contains(B)Z: I5 Branch 86 IFLT L898 - true
   * 3 gnu.trove.list.array.TByteArrayList.lastIndexOf(IB)I: I7 Branch 84 IFLE L887 - true
   * 4 gnu.trove.list.array.TByteArrayList.containsAll([B)Z: I8 Branch 27 IFLE L469 - false
   */

//   @Test
//   public void test42()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList(1357, (byte) (-44));
//       byte[] byteArray0 = new byte[2];
//       boolean boolean0 = tByteArrayList0.containsAll(byteArray0);
//       assertEquals(-44, tByteArrayList0.getNoEntryValue());
//       assertEquals(false, boolean0);
//   }

  //Test case number: 43
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.addAll([B)Z: I18 Branch 33 IF_ICMPGE L508 - true
   * 2 gnu.trove.list.array.TByteArrayList.addAll([B)Z: I18 Branch 33 IF_ICMPGE L508 - false
   * 3 gnu.trove.list.array.TByteArrayList.addAll([B)Z: I28 Branch 34 IFEQ L509 - false
   */

  @Test
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
      boolean boolean0 = tByteArrayList0.addAll(byteArray0);
      assertEquals("{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}", tByteArrayList0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 44
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.removeAll(Ljava/util/Collection;)Z: I12 Branch 42 IFEQ L568 - false
   * 2 gnu.trove.list.array.TByteArrayList.removeAll(Ljava/util/Collection;)Z: I20 Branch 43 IFEQ L569 - true
   * 3 gnu.trove.list.array.TByteArrayList.removeAll(Ljava/util/Collection;)Z: I12 Branch 42 IFEQ L568 - true
   */

//   @Test
//   public void test44()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList((int) (byte)88);
//       LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
//       linkedList0.add((Integer) 0);
//       boolean boolean0 = tByteArrayList0.removeAll((Collection<?>) linkedList0);
//       assertEquals(true, tByteArrayList0.isEmpty());
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertEquals(false, boolean0);
//   }

  //Test case number: 45
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.removeAll([B)Z: I20 Branch 49 IFEQ L602 - true
   * 2 gnu.trove.list.array.TByteArrayList.removeAll([B)Z: I12 Branch 48 IFLE L601 - true
   * 3 gnu.trove.list.array.TByteArrayList.removeAll([B)Z: I12 Branch 48 IFLE L601 - false
   * 4 gnu.trove.list.array.TByteArrayList.remove(B)Z: I8 Branch 14 IF_ICMPGE L383 - true
   */

  @Test
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, (byte)4);
      assertNotNull(tByteArrayList0);
      
      tByteArrayList0.clear();
      assertEquals("{}", tByteArrayList0.toString());
      
      boolean boolean0 = tByteArrayList0.removeAll(byteArray0);
      assertEquals(false, boolean0);
  }

  //Test case number: 46
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.transformValues(Lgnu/trove/function/TByteFunction;)V: I8 Branch 50 IFLE L612 - true
   */

//   @Test
//   public void test46()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList();
//       tByteArrayList0.transformValues((TByteFunction) null);
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertEquals(true, tByteArrayList0.isEmpty());
//       assertEquals("{}", tByteArrayList0.toString());
//   }

  //Test case number: 47
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.transformValues(Lgnu/trove/function/TByteFunction;)V: I8 Branch 50 IFLE L612 - false
   */

  @Test
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, (byte) (-11));
      assertNotNull(tByteArrayList0);
      
      // Undeclared exception!
      try {
        tByteArrayList0.transformValues((TByteFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 48
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.reverse(II)V: I4 Branch 51 IF_ICMPNE L626 - false
   */

//   @Test
//   public void test48()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList();
//       tByteArrayList0.reverse(183, 183);
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertEquals(0, tByteArrayList0.size());
//   }

  //Test case number: 49
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.reverse(II)V: I12 Branch 52 IF_ICMPLE L629 - false
   * 2 gnu.trove.list.array.TByteArrayList.reverse(II)V: I4 Branch 51 IF_ICMPNE L626 - true
   */

  @Test
  public void test49()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList(0);
      // Undeclared exception!
      try {
        tByteArrayList0.reverse((int) (byte)41, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // from cannot be greater than to
         //
      }
  }

  //Test case number: 50
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.shuffle(Ljava/util/Random;)V: I9 Branch 54 IF_ICMPLE L640 - true
   * 2 gnu.trove.list.array.TByteArrayList.shuffle(Ljava/util/Random;)V: I9 Branch 54 IF_ICMPLE L640 - false
   * 3 gnu.trove.list.array.TByteArrayList.swap(II)V: root-Branch
   */

//   @Test
//   public void test50()  throws Throwable  {
//       byte[] byteArray0 = new byte[3];
//       TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0);
//       assertNotNull(tByteArrayList0);
//       
//       Random random0 = new Random();
//       tByteArrayList0.shuffle(random0);
//       assertEquals(0.53912675F, random0.nextFloat(), 0.01F);
//       assertEquals(6398030215587965462L, random0.nextLong());
//   }

  //Test case number: 51
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.subList(II)Lgnu/trove/list/TByteList;: I4 Branch 55 IF_ICMPGE L663 - true
   * 2 gnu.trove.list.array.TByteArrayList.subList(II)Lgnu/trove/list/TByteList;: I26 Branch 56 IFGE L667 - true
   * 3 gnu.trove.list.array.TByteArrayList.subList(II)Lgnu/trove/list/TByteList;: I40 Branch 57 IF_ICMPLE L670 - false
   */

  @Test
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
      // Undeclared exception!
      try {
        tByteArrayList0.subList((int) (byte)0, (int) (byte)104);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index < 3
         //
      }
  }

  //Test case number: 52
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.subList(II)Lgnu/trove/list/TByteList;: I4 Branch 55 IF_ICMPGE L663 - false
   */

  @Test
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0);
      assertNotNull(tByteArrayList0);
      
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteArrayList0);
      // Undeclared exception!
      try {
        tSynchronizedRandomAccessByteList0.subList((int) (byte)0, (int) (byte) (-128));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // end index -128 greater than begin index 0
         //
      }
  }

  //Test case number: 53
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.subList(II)Lgnu/trove/list/TByteList;: I26 Branch 56 IFGE L667 - false
   */

  @Test
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      TByteHashSet tByteHashSet0 = new TByteHashSet(byteArray0);
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(tByteHashSet0._states);
      assertNotNull(tByteArrayList0);
      
      // Undeclared exception!
      try {
        tByteArrayList0.subList((-1048), (int) (byte) (-42));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  //Test case number: 54
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.subList(II)Lgnu/trove/list/TByteList;: I40 Branch 57 IF_ICMPLE L670 - true
   * 2 gnu.trove.list.array.TByteArrayList.subList(II)Lgnu/trove/list/TByteList;: I73 Branch 58 IF_ICMPGE L674 - true
   * 3 gnu.trove.list.array.TByteArrayList.subList(II)Lgnu/trove/list/TByteList;: I73 Branch 58 IF_ICMPGE L674 - false
   * 4 gnu.trove.list.array.TByteArrayList.subList(II)Lgnu/trove/list/TByteList;: I4 Branch 55 IF_ICMPGE L663 - true
   * 5 gnu.trove.list.array.TByteArrayList.subList(II)Lgnu/trove/list/TByteList;: I26 Branch 56 IFGE L667 - true
   */

//   @Test
//   public void test54()  throws Throwable  {
//       byte[] byteArray0 = new byte[3];
//       TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
//       tByteArrayList0.ensureCapacity((int) (byte)104);
//       TByteArrayList tByteArrayList1 = (TByteArrayList)tByteArrayList0.subList((int) (byte)0, (int) (byte)104);
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertEquals("{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}", tByteArrayList1.toString());
//       assertEquals(3, tByteArrayList0.size());
//       assertNotNull(tByteArrayList1);
//   }

  //Test case number: 55
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.toArray([B)[B: I11 Branch 59 IF_ICMPLE L698 - true
   * 2 gnu.trove.list.array.TByteArrayList.toArray([BII)[B: I3 Branch 60 IFNE L709 - true
   * 3 gnu.trove.list.array.TByteArrayList.toArray([BII)[B: I11 Branch 61 IFLT L712 - false
   * 4 gnu.trove.list.array.TByteArrayList.toArray([BII)[B: I15 Branch 62 IF_ICMPLT L712 - true
   */

//   @Test
//   public void test55()  throws Throwable  {
//       byte[] byteArray0 = new byte[5];
//       TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
//       byte[] byteArray1 = tByteArrayList0.toArray(byteArray0);
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertEquals(5, tByteArrayList0.size());
//       assertNotNull(byteArray1);
//   }

  //Test case number: 56
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.toArray([B)[B: I11 Branch 59 IF_ICMPLE L698 - false
   * 2 gnu.trove.list.array.TByteArrayList.toArray([BII)[B: I15 Branch 62 IF_ICMPLT L712 - true
   */

//   @Test
//   public void test56()  throws Throwable  {
//       byte[] byteArray0 = new byte[6];
//       byte[] byteArray1 = new byte[5];
//       TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray1, (byte)0);
//       assertNotNull(tByteArrayList0);
//       
//       byte[] byteArray2 = tByteArrayList0.toArray(byteArray0);
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertNotNull(byteArray2);
//   }

  //Test case number: 57
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.toArray([BII)[B: I11 Branch 61 IFLT L712 - true
   */

  @Test
  public void test57()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList();
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try {
        tByteArrayList0.toArray(byteArray0, (int) (byte) (-105), (int) (byte) (-87));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -105
         //
      }
  }

  //Test case number: 58
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.toArray([BII)[B: I15 Branch 62 IF_ICMPLT L712 - false
   * 2 gnu.trove.list.array.TByteArrayList.toArray([BII)[B: I3 Branch 60 IFNE L709 - true
   * 3 gnu.trove.list.array.TByteArrayList.toArray([BII)[B: I11 Branch 61 IFLT L712 - false
   */

  @Test
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, (byte) (-75));
      assertNotNull(tByteArrayList0);
      
      // Undeclared exception!
      try {
        tByteArrayList0.toArray(byteArray0, 41, 163);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 41
         //
      }
  }

  //Test case number: 59
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.toArray([BIII)[B: I3 Branch 63 IFNE L722 - true
   * 2 gnu.trove.list.array.TByteArrayList.toArray([BIII)[B: I11 Branch 64 IFLT L725 - false
   * 3 gnu.trove.list.array.TByteArrayList.toArray([BIII)[B: I15 Branch 65 IF_ICMPLT L725 - false
   */

  @Test
  public void test59()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList(646);
      byte[] byteArray0 = new byte[12];
      // Undeclared exception!
      try {
        tByteArrayList0.toArray(byteArray0, (int) (byte)72, 646, 73);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 72
         //
      }
  }

  //Test case number: 60
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.toArray([BIII)[B: I3 Branch 63 IFNE L722 - false
   */

//   @Test
//   public void test60()  throws Throwable  {
//       byte[] byteArray0 = new byte[10];
//       TByteArrayList tByteArrayList0 = new TByteArrayList(50, (byte)107);
//       byte[] byteArray1 = tByteArrayList0.toArray(byteArray0, (int) (byte) (-38), (int) (byte) (-48), (int) (byte)0);
//       assertEquals(0, tByteArrayList0.size());
//       assertNotNull(byteArray1);
//       assertEquals(107, tByteArrayList0.getNoEntryValue());
//   }

  //Test case number: 61
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.toArray([BIII)[B: I11 Branch 64 IFLT L725 - true
   */

  @Test
  public void test61()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      TByteArrayList tByteArrayList0 = new TByteArrayList((int) (byte)82);
      // Undeclared exception!
      try {
        tByteArrayList0.toArray(byteArray0, (-543), (-1), (int) (byte)82);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -543
         //
      }
  }

  //Test case number: 62
  /*
   * 7 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.toArray([BIII)[B: I15 Branch 65 IF_ICMPLT L725 - true
   * 2 gnu.trove.list.array.TByteArrayList.<init>(Lgnu/trove/TByteCollection;)V: root-Branch
   * 3 gnu.trove.list.array.TByteArrayList.toArray([BIII)[B: I3 Branch 63 IFNE L722 - true
   * 4 gnu.trove.list.array.TByteArrayList.toArray([BIII)[B: I11 Branch 64 IFLT L725 - false
   * 5 gnu.trove.list.array.TByteArrayList.addAll(Lgnu/trove/TByteCollection;)Z: I13 Branch 31 IFEQ L495 - true
   * 6 gnu.trove.list.array.TByteArrayList.addAll(Lgnu/trove/TByteCollection;)Z: I13 Branch 31 IFEQ L495 - false
   * 7 gnu.trove.list.array.TByteArrayList.addAll(Lgnu/trove/TByteCollection;)Z: I24 Branch 32 IFEQ L497 - false
   */

  @Test
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      TByteHashSet tByteHashSet0 = new TByteHashSet(byteArray0);
      TByteArrayList tByteArrayList0 = new TByteArrayList((TByteCollection) tByteHashSet0);
      // Undeclared exception!
      try {
        tByteArrayList0.toArray(tByteHashSet0._states, (int) (byte)0, (-250), (int) (byte) (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 63
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.equals(Ljava/lang/Object;)Z: I13 Branch 67 IFEQ L741 - true
   */

//   @Test
//   public void test63()  throws Throwable  {
//       byte[] byteArray0 = new byte[3];
//       TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, (byte)4);
//       assertNotNull(tByteArrayList0);
//       
//       boolean boolean0 = tByteArrayList0.equals((Object) "");
//       assertEquals(4, tByteArrayList0.getNoEntryValue());
//       assertEquals(false, boolean0);
//   }

  //Test case number: 64
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.equals(Ljava/lang/Object;)Z: I25 Branch 68 IF_ICMPEQ L743 - true
   * 2 gnu.trove.list.array.TByteArrayList.equals(Ljava/lang/Object;)Z: I36 Branch 69 IFLE L745 - true
   * 3 gnu.trove.list.array.TByteArrayList.equals(Ljava/lang/Object;)Z: I36 Branch 69 IFLE L745 - false
   * 4 gnu.trove.list.array.TByteArrayList.equals(Ljava/lang/Object;)Z: I47 Branch 70 IF_ICMPEQ L746 - true
   * 5 gnu.trove.list.array.TByteArrayList.equals(Ljava/lang/Object;)Z: I4 Branch 66 IF_ACMPNE L738 - false
   */

//   @Test
//   public void test64()  throws Throwable  {
//       byte[] byteArray0 = new byte[18];
//       TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, (byte) (-75));
//       assertNotNull(tByteArrayList0);
//       
//       TByteArrayList tByteArrayList1 = new TByteArrayList(byteArray0);
//       boolean boolean0 = tByteArrayList0.equals((Object) tByteArrayList1);
//       assertEquals(0, tByteArrayList1.getNoEntryValue());
//       assertEquals(-75, tByteArrayList0.getNoEntryValue());
//       assertEquals(18, tByteArrayList0.size());
//       assertEquals(true, boolean0);
//   }

  //Test case number: 65
  /*
   * 6 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.equals(Ljava/lang/Object;)Z: I47 Branch 70 IF_ICMPEQ L746 - false
   * 2 gnu.trove.list.array.TByteArrayList.equals(Ljava/lang/Object;)Z: I4 Branch 66 IF_ACMPNE L738 - true
   * 3 gnu.trove.list.array.TByteArrayList.equals(Ljava/lang/Object;)Z: I13 Branch 67 IFEQ L741 - false
   * 4 gnu.trove.list.array.TByteArrayList.equals(Ljava/lang/Object;)Z: I25 Branch 68 IF_ICMPEQ L743 - true
   * 5 gnu.trove.list.array.TByteArrayList.equals(Ljava/lang/Object;)Z: I36 Branch 69 IFLE L745 - false
   * 6 gnu.trove.list.array.TByteArrayList.equals(Ljava/lang/Object;)Z: I47 Branch 70 IF_ICMPEQ L746 - true
   */

  @Test
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, (byte) (-75));
      assertNotNull(tByteArrayList0);
      
      TByteArrayList tByteArrayList1 = new TByteArrayList(byteArray0);
      byteArray0[8] = (byte) (-75);
      boolean boolean0 = tByteArrayList0.equals((Object) tByteArrayList1);
      assertEquals("{0, 0, 0, 0, 0, 0, 0, 0, -75, 0, 0, 0, 0, 0, 0, 0, 0, 0}", tByteArrayList0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 66
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.hashCode()I: I12 Branch 71 IFLE L761 - false
   * 2 gnu.trove.list.array.TByteArrayList.hashCode()I: I12 Branch 71 IFLE L761 - true
   */

//   @Test
//   public void test66()  throws Throwable  {
//       byte[] byteArray0 = new byte[7];
//       TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0);
//       assertNotNull(tByteArrayList0);
//       
//       int int0 = tByteArrayList0.hashCode();
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertEquals(0, int0);
//   }

  //Test case number: 67
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.forEach(Lgnu/trove/procedure/TByteProcedure;)Z: I8 Branch 72 IF_ICMPGE L772 - true
   */

//   @Test
//   public void test67()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList(0);
//       boolean boolean0 = tByteArrayList0.forEach((TByteProcedure) null);
//       assertEquals(true, boolean0);
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertEquals(0, tByteArrayList0.size());
//   }

  //Test case number: 68
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.forEach(Lgnu/trove/procedure/TByteProcedure;)Z: I8 Branch 72 IF_ICMPGE L772 - false
   * 2 gnu.trove.list.array.TByteArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - false
   */

  @Test
  public void test68()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList(0);
      TByteHashSet tByteHashSet0 = new TByteHashSet((int) (byte)0);
      tByteArrayList0.add(tByteHashSet0._set);
      // Undeclared exception!
      try {
        tByteArrayList0.forEach((TByteProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 69
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.forEachDescending(Lgnu/trove/procedure/TByteProcedure;)Z: I8 Branch 74 IFLE L783 - true
   * 2 gnu.trove.list.array.TByteArrayList.clear()V: root-Branch
   * 3 gnu.trove.list.array.TByteArrayList.clear(I)V: root-Branch
   */

  @Test
  public void test69()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, (byte)4);
      assertNotNull(tByteArrayList0);
      
      tByteArrayList0.clear();
      boolean boolean0 = tByteArrayList0.forEachDescending((TByteProcedure) null);
      assertEquals(0, tByteArrayList0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 70
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.forEachDescending(Lgnu/trove/procedure/TByteProcedure;)Z: I8 Branch 74 IFLE L783 - false
   */

  @Test
  public void test70()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0);
      assertNotNull(tByteArrayList0);
      
      // Undeclared exception!
      try {
        tByteArrayList0.forEachDescending((TByteProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 71
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.fill(IIB)V: I5 Branch 76 IF_ICMPLE L816 - true
   */

  @Test
  public void test71()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList();
      // Undeclared exception!
      try {
        tByteArrayList0.fill((int) (byte)0, (-122), (byte)89);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-122)
         //
      }
  }

  //Test case number: 72
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.binarySearch(BII)I: I3 Branch 77 IFGE L834 - false
   */

  @Test
  public void test72()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
      // Undeclared exception!
      try {
        tByteArrayList0.binarySearch((byte)122, (byte) (-25), (byte) (-25));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -25
         //
      }
  }

  //Test case number: 73
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.binarySearch(BII)I: I16 Branch 78 IF_ICMPLE L837 - false
   * 2 gnu.trove.list.array.TByteArrayList.binarySearch(BII)I: I3 Branch 77 IFGE L834 - true
   */

  @Test
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
      // Undeclared exception!
      try {
        tByteArrayList0.binarySearch((byte) (-92), (int) (byte)75, 393);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 393
         //
      }
  }

  //Test case number: 74
  /*
   * 7 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.binarySearch(BII)I: I38 Branch 79 IF_ICMPGT L844 - false
   * 2 gnu.trove.list.array.TByteArrayList.binarySearch(BII)I: I58 Branch 80 IF_ICMPGE L848 - true
   * 3 gnu.trove.list.array.TByteArrayList.binarySearch(BII)I: I70 Branch 81 IF_ICMPLE L851 - false
   * 4 gnu.trove.list.array.TByteArrayList.fill(IIB)V: I5 Branch 76 IF_ICMPLE L816 - false
   * 5 gnu.trove.list.array.TByteArrayList.binarySearch(BII)I: I38 Branch 79 IF_ICMPGT L844 - true
   * 6 gnu.trove.list.array.TByteArrayList.binarySearch(B)I: root-Branch
   * 7 gnu.trove.list.array.TByteArrayList.binarySearch(BII)I: I16 Branch 78 IF_ICMPLE L837 - true
   */

  @Test
  public void test74()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList(1357, (byte) (-44));
      tByteArrayList0.fill((int) (byte)10, 1357, (byte)10);
      int int0 = tByteArrayList0.binarySearch((byte) (-79));
      assertEquals(1357, tByteArrayList0.size());
      assertEquals((-1), int0);
  }

  //Test case number: 75
  /*
   * 7 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.binarySearch(BII)I: I58 Branch 80 IF_ICMPGE L848 - false
   * 2 gnu.trove.list.array.TByteArrayList.binarySearch(BII)I: I70 Branch 81 IF_ICMPLE L851 - true
   * 3 gnu.trove.list.array.TByteArrayList.binarySearch(B)I: root-Branch
   * 4 gnu.trove.list.array.TByteArrayList.binarySearch(BII)I: I3 Branch 77 IFGE L834 - true
   * 5 gnu.trove.list.array.TByteArrayList.binarySearch(BII)I: I16 Branch 78 IF_ICMPLE L837 - true
   * 6 gnu.trove.list.array.TByteArrayList.binarySearch(BII)I: I38 Branch 79 IF_ICMPGT L844 - false
   * 7 gnu.trove.list.array.TByteArrayList.binarySearch(BII)I: I58 Branch 80 IF_ICMPGE L848 - true
   */

//   @Test
//   public void test75()  throws Throwable  {
//       byte[] byteArray0 = new byte[2];
//       byteArray0[0] = (byte) (-1);
//       TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, (byte)0);
//       assertNotNull(tByteArrayList0);
//       
//       int int0 = tByteArrayList0.binarySearch((byte)0);
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertEquals(1, int0);
//   }

  //Test case number: 76
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.indexOf(IB)I: I8 Branch 82 IF_ICMPGE L870 - false
   * 2 gnu.trove.list.array.TByteArrayList.indexOf(IB)I: I16 Branch 83 IF_ICMPNE L871 - true
   * 3 gnu.trove.list.array.TByteArrayList.indexOf(IB)I: I8 Branch 82 IF_ICMPGE L870 - true
   * 4 gnu.trove.list.array.TByteArrayList.indexOf(B)I: root-Branch
   */

//   @Test
//   public void test76()  throws Throwable  {
//       byte[] byteArray0 = new byte[7];
//       TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0);
//       assertNotNull(tByteArrayList0);
//       
//       int int0 = tByteArrayList0.indexOf((byte) (-16));
//       assertEquals((-1), int0);
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//   }

  //Test case number: 77
  /*
   * 4 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.indexOf(IB)I: I16 Branch 83 IF_ICMPNE L871 - false
   * 2 gnu.trove.list.array.TByteArrayList.indexOf(B)I: root-Branch
   * 3 gnu.trove.list.array.TByteArrayList.indexOf(IB)I: I8 Branch 82 IF_ICMPGE L870 - false
   * 4 gnu.trove.list.array.TByteArrayList.indexOf(IB)I: I16 Branch 83 IF_ICMPNE L871 - true
   */

//   @Test
//   public void test77()  throws Throwable  {
//       byte[] byteArray0 = new byte[17];
//       byteArray0[1] = (byte) (-16);
//       TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
//       int int0 = tByteArrayList0.indexOf((byte) (-16));
//       assertEquals(1, int0);
//       assertEquals(17, tByteArrayList0.size());
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//   }

  //Test case number: 78
  /*
   * 9 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.lastIndexOf(IB)I: I15 Branch 85 IF_ICMPNE L888 - true
   * 2 gnu.trove.list.array.TByteArrayList.lastIndexOf(B)I: root-Branch
   * 3 gnu.trove.list.array.TByteArrayList.retainAll(Lgnu/trove/TByteCollection;)Z: I4 Branch 37 IF_ACMPNE L534 - false
   * 4 gnu.trove.list.array.TByteArrayList.retainAll(Lgnu/trove/TByteCollection;)Z: I22 Branch 38 IFEQ L539 - true
   * 5 gnu.trove.list.array.TByteArrayList.retainAll(Lgnu/trove/TByteCollection;)Z: I22 Branch 38 IFEQ L539 - false
   * 6 gnu.trove.list.array.TByteArrayList.retainAll(Lgnu/trove/TByteCollection;)Z: I29 Branch 39 IFNE L540 - true
   * 7 gnu.trove.list.array.TByteArrayList.contains(B)Z: I5 Branch 86 IFLT L898 - false
   * 8 gnu.trove.list.array.TByteArrayList.lastIndexOf(IB)I: I7 Branch 84 IFLE L887 - false
   * 9 gnu.trove.list.array.TByteArrayList.lastIndexOf(IB)I: I15 Branch 85 IF_ICMPNE L888 - false
   */

//   @Test
//   public void test78()  throws Throwable  {
//       byte[] byteArray0 = new byte[2];
//       byteArray0[0] = (byte) (-128);
//       TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
//       TByteArrayList tByteArrayList1 = new TByteArrayList(byteArray0);
//       boolean boolean0 = tByteArrayList1.retainAll((TByteCollection) tByteArrayList0);
//       assertEquals(false, boolean0);
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertEquals(2, tByteArrayList1.size());
//       assertEquals(-128, tByteArrayList0.min());
//   }

  //Test case number: 79
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.grep(Lgnu/trove/procedure/TByteProcedure;)Lgnu/trove/list/TByteList;: I14 Branch 87 IF_ICMPGE L905 - true
   */

//   @Test
//   public void test79()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList();
//       TByteArrayList tByteArrayList1 = (TByteArrayList)tByteArrayList0.grep((TByteProcedure) null);
//       assertEquals(0, tByteArrayList1.getNoEntryValue());
//       assertNotSame(tByteArrayList1, tByteArrayList0);
//       assertNotNull(tByteArrayList1);
//   }

  //Test case number: 80
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.grep(Lgnu/trove/procedure/TByteProcedure;)Lgnu/trove/list/TByteList;: I14 Branch 87 IF_ICMPGE L905 - false
   */

  @Test
  public void test80()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
      TUnmodifiableRandomAccessByteList tUnmodifiableRandomAccessByteList0 = new TUnmodifiableRandomAccessByteList((TByteList) tByteArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessByteList0.grep((TByteProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 81
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.inverseGrep(Lgnu/trove/procedure/TByteProcedure;)Lgnu/trove/list/TByteList;: I14 Branch 89 IF_ICMPGE L917 - false
   */

  @Test
  public void test81()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, (byte)1);
      assertNotNull(tByteArrayList0);
      
      // Undeclared exception!
      try {
        tByteArrayList0.inverseGrep((TByteProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 82
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.max()B: I4 Branch 91 IFNE L928 - true
   * 2 gnu.trove.list.array.TByteArrayList.max()B: I24 Branch 92 IF_ICMPGE L932 - true
   * 3 gnu.trove.list.array.TByteArrayList.max()B: I24 Branch 92 IF_ICMPGE L932 - false
   * 4 gnu.trove.list.array.TByteArrayList.max()B: I32 Branch 93 IF_ICMPLE L933 - true
   * 5 gnu.trove.list.array.TByteArrayList.max()B: I32 Branch 93 IF_ICMPLE L933 - false
   */

//   @Test
//   public void test82()  throws Throwable  {
//       byte[] byteArray0 = new byte[3];
//       TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
//       byte byte0 = tByteArrayList0.max();
//       assertEquals((byte)0, byte0);
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertEquals(3, tByteArrayList0.size());
//   }

  //Test case number: 83
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.max()B: I4 Branch 91 IFNE L928 - false
   * 2 gnu.trove.list.array.TByteArrayList.<init>()V: root-Branch
   */

  @Test
  public void test83()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList();
      // Undeclared exception!
      try {
        tByteArrayList0.max();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // cannot find maximum of an empty list
         //
      }
  }

  //Test case number: 84
  /*
   * 24 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.min()B: I4 Branch 94 IFNE L943 - true
   * 2 gnu.trove.list.array.TByteArrayList.min()B: I24 Branch 95 IF_ICMPGE L947 - true
   * 3 gnu.trove.list.array.TByteArrayList.min()B: I24 Branch 95 IF_ICMPGE L947 - false
   * 4 gnu.trove.list.array.TByteArrayList.min()B: I32 Branch 96 IF_ICMPGE L948 - false
   * 5 gnu.trove.list.array.TByteArrayList$1.ensureCapacity(I)V: I6 Branch 1 IF_ICMPLE L164 - true
   * 6 gnu.trove.list.array.TByteArrayList.add(B)Z: root-Branch
   * 7 gnu.trove.list.array.TByteArrayList.iterator()Lgnu/trove/iterator/TByteIterator;: root-Branch
   * 8 gnu.trove.list.array.TByteArrayList.retainAll(Ljava/util/Collection;)Z: I13 Branch 35 IFEQ L522 - true
   * 9 gnu.trove.list.array.TByteArrayList.retainAll(Ljava/util/Collection;)Z: I13 Branch 35 IFEQ L522 - false
   * 10 gnu.trove.list.array.TByteArrayList.retainAll(Ljava/util/Collection;)Z: I21 Branch 36 IFGT L523 - false
   * 11 gnu.trove.list.array.TByteArrayList.remove(II)V: I3 Branch 16 IFNE L403 - true
   * 12 gnu.trove.list.array.TByteArrayList.remove(II)V: I8 Branch 17 IFLT L404 - false
   * 13 gnu.trove.list.array.TByteArrayList.remove(II)V: I12 Branch 18 IF_ICMPLT L404 - true
   * 14 gnu.trove.list.array.TByteArrayList.remove(II)V: I23 Branch 19 IFNE L408 - false
   * 15 gnu.trove.list.array.TByteArrayList.addAll(Ljava/util/Collection;)Z: I12 Branch 29 IFEQ L481 - true
   * 16 gnu.trove.list.array.TByteArrayList.addAll(Ljava/util/Collection;)Z: I12 Branch 29 IFEQ L481 - false
   * 17 gnu.trove.list.array.TByteArrayList.addAll(Ljava/util/Collection;)Z: I27 Branch 30 IFEQ L483 - false
   * 18 gnu.trove.list.array.TByteArrayList.get(I)B: I5 Branch 9 IF_ICMPLT L280 - true
   * 19 gnu.trove.list.array.TByteArrayList$TByteArrayIterator.next()B: root-Branch
   * 20 gnu.trove.list.array.TByteArrayList$TByteArrayIterator.<init>(Lgnu/trove/list/array/TByteArrayList;I)V: root-Branch
   * 21 gnu.trove.list.array.TByteArrayList$TByteArrayIterator.remove()V: I5 Branch 103 IF_ICMPNE L1023 - true
   * 22 gnu.trove.list.array.TByteArrayList$TByteArrayIterator.remove()V: I26 Branch 104 IF_ICMPGE L1028 - false
   * 23 gnu.trove.list.array.TByteArrayList$TByteArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - true
   * 24 gnu.trove.list.array.TByteArrayList$TByteArrayIterator.hasNext()Z: I7 Branch 102 IF_ICMPGE L1005 - false
   */

  @Test
  public void test84()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, (byte) (-116));
      assertNotNull(tByteArrayList0);
      
      LinkedList<TByteArrayList> linkedList0 = new LinkedList<TByteArrayList>();
      tByteArrayList0.retainAll((Collection<?>) linkedList0);
      LinkedList<Byte> linkedList1 = new LinkedList<Byte>();
      linkedList1.add((Byte) (byte) (-1));
      tByteArrayList0.addAll((Collection<? extends Byte>) linkedList1);
      byte byte0 = tByteArrayList0.min();
      assertEquals("{-1}", tByteArrayList0.toString());
      assertEquals((byte) (-1), byte0);
  }

  //Test case number: 85
  /*
   * 1 covered goal:
   * 1 gnu.trove.list.array.TByteArrayList.min()B: I4 Branch 94 IFNE L943 - false
   */

  @Test
  public void test85()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList(1221, (byte) (-15));
      // Undeclared exception!
      try {
        tByteArrayList0.min();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // cannot find minimum of an empty list
         //
      }
  }

  //Test case number: 86
  /*
   * 5 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.min()B: I32 Branch 96 IF_ICMPGE L948 - true
   * 2 gnu.trove.list.array.TByteArrayList.min()B: I4 Branch 94 IFNE L943 - true
   * 3 gnu.trove.list.array.TByteArrayList.min()B: I24 Branch 95 IF_ICMPGE L947 - true
   * 4 gnu.trove.list.array.TByteArrayList.min()B: I24 Branch 95 IF_ICMPGE L947 - false
   * 5 gnu.trove.list.array.TByteArrayList.min()B: I32 Branch 96 IF_ICMPGE L948 - false
   */

//   @Test
//   public void test86()  throws Throwable  {
//       byte[] byteArray0 = new byte[16];
//       TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, (byte) (-116));
//       assertNotNull(tByteArrayList0);
//       
//       byte byte0 = tByteArrayList0.min();
//       assertEquals(16, tByteArrayList0.size());
//       assertEquals((byte)0, byte0);
//       assertEquals(-116, tByteArrayList0.getNoEntryValue());
//   }

  //Test case number: 87
  /*
   * 3 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.sum()B: I12 Branch 97 IF_ICMPGE L959 - true
   * 2 gnu.trove.list.array.TByteArrayList.sum()B: I12 Branch 97 IF_ICMPGE L959 - false
   * 3 gnu.trove.list.array.TByteArrayList.wrap([B)Lgnu/trove/list/array/TByteArrayList;: root-Branch
   */

//   @Test
//   public void test87()  throws Throwable  {
//       byte[] byteArray0 = new byte[3];
//       TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0);
//       assertNotNull(tByteArrayList0);
//       
//       byte byte0 = tByteArrayList0.sum();
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertEquals((byte)0, byte0);
//   }

  //Test case number: 88
  /*
   * 2 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.toString()Ljava/lang/String;: I20 Branch 98 IF_ICMPGE L972 - true
   * 2 gnu.trove.list.array.TByteArrayList.toString()Ljava/lang/String;: I44 Branch 99 IFLE L976 - true
   */

//   @Test
//   public void test88()  throws Throwable  {
//       TByteArrayList tByteArrayList0 = new TByteArrayList(0, (byte)0);
//       String string0 = tByteArrayList0.toString();
//       assertNotNull(string0);
//       assertEquals(0, tByteArrayList0.size());
//       assertEquals(0, tByteArrayList0.getNoEntryValue());
//       assertEquals("{}", string0);
//   }

  //Test case number: 89
  /*
   * 8 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.toString()Ljava/lang/String;: I20 Branch 98 IF_ICMPGE L972 - false
   * 2 gnu.trove.list.array.TByteArrayList.toString()Ljava/lang/String;: I44 Branch 99 IFLE L976 - false
   * 3 gnu.trove.list.array.TByteArrayList$1.<init>([BBZ)V: root-Branch
   * 4 gnu.trove.list.array.TByteArrayList.wrap([BB)Lgnu/trove/list/array/TByteArrayList;: root-Branch
   * 5 gnu.trove.list.array.TByteArrayList.size()I: root-Branch
   * 6 gnu.trove.list.array.TByteArrayList.<init>([BBZ)V: I7 Branch 2 IFNE L123 - true
   * 7 gnu.trove.list.array.TByteArrayList.<init>([BBZ)V: I18 Branch 3 IFNONNULL L126 - true
   * 8 gnu.trove.list.array.TByteArrayList.toString()Ljava/lang/String;: I20 Branch 98 IF_ICMPGE L972 - true
   */

//   @Test
//   public void test89()  throws Throwable  {
//       byte[] byteArray0 = new byte[5];
//       TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, (byte) (-117));
//       assertNotNull(tByteArrayList0);
//       
//       String string0 = tByteArrayList0.toString();
//       assertEquals(5, tByteArrayList0.size());
//       assertEquals("{0, 0, 0, 0, 0}", string0);
//       assertEquals(-117, tByteArrayList0.getNoEntryValue());
//       assertNotNull(string0);
//   }

  //Test case number: 90
  /*
   * 8 covered goals:
   * 1 gnu.trove.list.array.TByteArrayList.writeExternal(Ljava/io/ObjectOutput;)V: I35 Branch 100 IF_ICMPGE L1051 - true
   * 2 gnu.trove.list.array.TByteArrayList.writeExternal(Ljava/io/ObjectOutput;)V: I35 Branch 100 IF_ICMPGE L1051 - false
   * 3 gnu.trove.list.array.TByteArrayList.add([BII)V: root-Branch
   * 4 gnu.trove.list.array.TByteArrayList.<init>(IB)V: root-Branch
   * 5 gnu.trove.list.array.TByteArrayList.<init>([B)V: root-Branch
   * 6 gnu.trove.list.array.TByteArrayList.<init>(I)V: root-Branch
   * 7 gnu.trove.list.array.TByteArrayList.add([B)V: root-Branch
   * 8 gnu.trove.list.array.TByteArrayList.ensureCapacity(I)V: I6 Branch 4 IF_ICMPLE L184 - true
   */

  @Test
  public void test90()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) pipedOutputStream0);
      tByteArrayList0.writeExternal((ObjectOutput) objectOutputStream0);
  }
}

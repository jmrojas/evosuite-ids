/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TIntFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntSet;
import gnu.trove.map.TIntIntMap;
import gnu.trove.map.hash.TIntIntHashMap;
import gnu.trove.procedure.TIntIntProcedure;
import gnu.trove.procedure.TIntProcedure;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableIntIntMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap$1.value()I: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap$1.key()I: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap$1.advance()V: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap$1.hasNext()Z: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableIntIntMap;)V: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.size()I: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.iterator()Lgnu/trove/iterator/TIntIntIterator;: root-Branch
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.<init>(Lgnu/trove/map/TIntIntMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap();
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte)1;
      tIntIntHashMap0._states = byteArray0;
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      // Undeclared exception!
      try {
        tIntIntHashMap0.putAll((TIntIntMap) tUnmodifiableIntIntMap0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.get(I)I: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[2];
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap(intArray0, intArray0);
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      int int0 = tUnmodifiableIntIntMap0.get(8);
      assertEquals(0, int0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.remove(I)I: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap();
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntIntMap0.remove((int) (byte)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.adjustValue(II)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap();
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntIntMap0.adjustValue(0, 0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.containsValue(I)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      int[] intArray0 = new int[2];
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap(intArray0, intArray0);
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      boolean boolean0 = tUnmodifiableIntIntMap0.containsValue(8);
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.forEachKey(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap();
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      boolean boolean0 = tUnmodifiableIntIntMap0.forEachKey((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.values([I)[I: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap(619);
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      int[] intArray0 = tUnmodifiableIntIntMap0.values(tIntIntHashMap0._set);
      assertNotNull(intArray0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.getNoEntryKey()I: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap();
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      int int0 = tUnmodifiableIntIntMap0.getNoEntryKey();
      assertEquals(0, int0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap();
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      // Undeclared exception!
      try {
        tUnmodifiableIntIntMap0.putAll((Map<? extends Integer, ? extends Integer>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.transformValues(Lgnu/trove/function/TIntFunction;)V: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap();
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntIntMap0.transformValues((TIntFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.getNoEntryValue()I: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap(619);
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      int int0 = tUnmodifiableIntIntMap0.getNoEntryValue();
      assertEquals(0, int0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.values()[I: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap();
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      int[] intArray0 = tUnmodifiableIntIntMap0.values();
      assertNotNull(intArray0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.keys()[I: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap(1646237, 1646237);
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      int[] intArray0 = tUnmodifiableIntIntMap0.keys();
      assertNotNull(intArray0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.hashCode()I: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap();
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      int int0 = tUnmodifiableIntIntMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.retainEntries(Lgnu/trove/procedure/TIntIntProcedure;)Z: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap(295, 295);
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntIntMap0.retainEntries((TIntIntProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.put(II)I: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap();
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntIntMap0.put((-16), (-16));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.keys([I)[I: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap(619);
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      int[] intArray0 = tUnmodifiableIntIntMap0.keys(tIntIntHashMap0._set);
      assertNotNull(intArray0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.clear()V: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap(619);
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntIntMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.containsKey(I)Z: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap(1646237, 1646237);
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      boolean boolean0 = tUnmodifiableIntIntMap0.containsKey(1646237);
      assertEquals(false, boolean0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap();
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      String string0 = tUnmodifiableIntIntMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[2];
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap(intArray0, intArray0);
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      boolean boolean0 = tUnmodifiableIntIntMap0.isEmpty();
      assertEquals(false, boolean0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.increment(I)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap(1646237, 1646237);
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntIntMap0.increment(3);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.putAll(Lgnu/trove/map/TIntIntMap;)V: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      int[] intArray0 = new int[2];
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap(intArray0, intArray0);
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntIntMap0.putAll((TIntIntMap) tIntIntHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.putIfAbsent(II)I: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[2];
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap(intArray0, intArray0);
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntIntMap0.putIfAbsent(8, 0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap(1646237, 1646237);
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      boolean boolean0 = tUnmodifiableIntIntMap0.forEachValue((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.forEachEntry(Lgnu/trove/procedure/TIntIntProcedure;)Z: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap();
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      boolean boolean0 = tUnmodifiableIntIntMap0.forEachEntry((TIntIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.adjustOrPutValue(III)I: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap();
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntIntMap0.adjustOrPutValue((-20), (-20), (-20));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.<init>(Lgnu/trove/map/TIntIntMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = null;
      try {
        tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.keySet()Lgnu/trove/set/TIntSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.keySet()Lgnu/trove/set/TIntSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap(1646237, 1646237);
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = (TUnmodifiableIntSet)tUnmodifiableIntIntMap0.keySet();
      assertNotNull(tUnmodifiableIntSet0);
      
      TUnmodifiableIntSet tUnmodifiableIntSet1 = (TUnmodifiableIntSet)tUnmodifiableIntIntMap0.keySet();
      assertSame(tUnmodifiableIntSet1, tUnmodifiableIntSet0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.valueCollection()Lgnu/trove/TIntCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.valueCollection()Lgnu/trove/TIntCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap();
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      TUnmodifiableIntCollection tUnmodifiableIntCollection0 = (TUnmodifiableIntCollection)tUnmodifiableIntIntMap0.valueCollection();
      assertNotNull(tUnmodifiableIntCollection0);
      
      TUnmodifiableIntCollection tUnmodifiableIntCollection1 = (TUnmodifiableIntCollection)tUnmodifiableIntIntMap0.valueCollection();
      assertSame(tUnmodifiableIntCollection1, tUnmodifiableIntCollection0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableIntIntMap.<init>(Lgnu/trove/map/TIntIntMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TIntIntHashMap tIntIntHashMap0 = new TIntIntHashMap();
      TUnmodifiableIntIntMap tUnmodifiableIntIntMap0 = new TUnmodifiableIntIntMap((TIntIntMap) tIntIntHashMap0);
      boolean boolean0 = tUnmodifiableIntIntMap0.equals((Object) null);
      assertEquals(false, boolean0);
  }
}

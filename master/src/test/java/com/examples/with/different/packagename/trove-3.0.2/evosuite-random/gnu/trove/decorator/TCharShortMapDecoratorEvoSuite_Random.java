/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TCharShortMapDecorator;
import gnu.trove.map.TCharShortMap;
import gnu.trove.map.hash.TCharShortHashMap;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.StreamCorruptedException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.AbstractMap;
import java.util.Collection;
import java.util.Locale;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Set;
import java.util.StringTokenizer;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

public class TCharShortMapDecoratorEvoSuite_Random {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TCharShortMapDecorator tCharShortMapDecorator0 = new TCharShortMapDecorator();
      char char0 = '&';
      Character character0 = Character.valueOf(char0);
      short short0 = (short)0;
      Short short1 = new Short(short0);
      // Undeclared exception!
      try {
        tCharShortMapDecorator0.put(character0, short1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TCharShortMap tCharShortMap0 = null;
      TCharShortHashMap tCharShortHashMap0 = null;
      try {
        tCharShortHashMap0 = new TCharShortHashMap(tCharShortMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TCharShortMapDecorator tCharShortMapDecorator0 = new TCharShortMapDecorator();
      // Undeclared exception!
      try {
        tCharShortMapDecorator0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TCharShortMapDecorator tCharShortMapDecorator0 = new TCharShortMapDecorator();
      String string0 = "b]Tk,s IW!:x/,k@r6";
      boolean boolean0 = true;
      StringTokenizer stringTokenizer0 = new StringTokenizer(string0, string0, boolean0);
      String string1 = stringTokenizer0.nextToken();
      tCharShortMapDecorator0.equals((Object) string1);
      TCharShortMapDecorator tCharShortMapDecorator1 = new TCharShortMapDecorator();
      String string2 = "";
      // Undeclared exception!
      try {
        tCharShortMapDecorator1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 0;
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap(int0, int0);
      TCharShortHashMap tCharShortHashMap1 = null;
      try {
        tCharShortHashMap1 = new TCharShortHashMap((TCharShortMap) tCharShortHashMap0);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TCharShortMapDecorator tCharShortMapDecorator0 = new TCharShortMapDecorator();
      char char0 = 'F';
      Character.valueOf(char0);
      short short0 = (short)778;
      Short short1 = new Short(short0);
      String string0 = "";
      StringTokenizer stringTokenizer0 = new StringTokenizer(string0, string0);
      // Undeclared exception!
      try {
        stringTokenizer0.nextToken();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TCharShortMapDecorator tCharShortMapDecorator0 = new TCharShortMapDecorator();
      TCharShortMap tCharShortMap0 = tCharShortMapDecorator0.getMap();
      TCharShortMapDecorator tCharShortMapDecorator1 = new TCharShortMapDecorator(tCharShortMap0);
      // Undeclared exception!
      try {
        tCharShortMapDecorator1.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = (-1);
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap(int0, int0);
      TCharShortMapDecorator tCharShortMapDecorator0 = new TCharShortMapDecorator((TCharShortMap) tCharShortHashMap0);
      Set<Map.Entry<Character, Short>> set0 = (Set<Map.Entry<Character, Short>>)tCharShortMapDecorator0.entrySet();
      assertEquals(0, set0.size());
  }

  @Test
  public void test8()  throws Throwable  {
      TCharShortMapDecorator tCharShortMapDecorator0 = new TCharShortMapDecorator();
      char char0 = '<';
      Character character0 = new Character(char0);
      short short0 = (short)4321;
      Short short1 = new Short(short0);
      // Undeclared exception!
      try {
        tCharShortMapDecorator0.put(character0, short1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap();
      TCharShortMapDecorator tCharShortMapDecorator0 = new TCharShortMapDecorator((TCharShortMap) tCharShortHashMap0);
      int int0 = tCharShortMapDecorator0.hashCode();
      assertEquals(0, int0);
  }

  @Test
  public void test10()  throws Throwable  {
      String string0 = "5ml*EK)G0j7Y'nS";
      TCharShortMapDecorator tCharShortMapDecorator0 = new TCharShortMapDecorator();
      int int0 = (-1153);
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, int0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: 5ml*EK)G0j7Y'nS://5ml*EK)G0j7Y'nS@5ml*EK)G0j7Y'nS:-11535ml*EK)G0j7Y'nS?5ml*EK)G0j7Y'nS#5ml*EK)G0j7Y'nS
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TCharShortMapDecorator tCharShortMapDecorator0 = new TCharShortMapDecorator();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      char char0 = '~';
      Character character0 = new Character(char0);
      short short0 = (short)49;
      Short short1 = new Short(short0);
      // Undeclared exception!
      try {
        tCharShortMapDecorator0.put(character0, short1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TCharShortMapDecorator tCharShortMapDecorator0 = new TCharShortMapDecorator();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale locale1 = Locale.FRANCE;
      String string0 = locale0.getDisplayCountry(locale1);
      tCharShortMapDecorator0.containsKey((Object) string0);
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-14);
      byteArray0[2] = byte2;
      byte byte3 = (byte)1;
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-38);
      byteArray0[4] = byte4;
      byte byte5 = (byte)0;
      byteArray0[5] = byte5;
      byte byte6 = (byte)26;
      byteArray0[6] = byte6;
      byte byte7 = (byte)45;
      byteArray0[7] = byte7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) byteArrayInputStream0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) bufferedInputStream0);
        fail("Expecting exception: StreamCorruptedException");
      
      } catch(StreamCorruptedException e) {
         //
         // invalid stream header: 0000F201
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap();
      TCharShortMapDecorator tCharShortMapDecorator0 = new TCharShortMapDecorator((TCharShortMap) tCharShortHashMap0);
      Collection<Short> collection0 = tCharShortMapDecorator0.values();
      assertEquals(0, collection0.size());
  }

  @Test
  public void test14()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          TCharShortMapDecorator tCharShortMapDecorator0 = new TCharShortMapDecorator();
          String string0 = "";
          FileOutputStream fileOutputStream0 = null;
          try {
            fileOutputStream0 = new FileOutputStream(string0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.io.FilePermission\" \"\" \"write\")
             // java.lang.Thread.getStackTrace(Thread.java:1567)
             // org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
             // java.io.FileOutputStream.<init>(FileOutputStream.java:203)
             // java.io.FileOutputStream.<init>(FileOutputStream.java:104)
             // sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
             // sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
             // sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
             // java.lang.reflect.Constructor.newInstance(Constructor.java:525)
             // org.evosuite.testcase.ConstructorStatement$1.execute(ConstructorStatement.java:226)
             // org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:144)
             // org.evosuite.testcase.ConstructorStatement.execute(ConstructorStatement.java:188)
             // org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             // org.evosuite.testcase.TestRunnable.call(TestRunnable.java:1)
             // java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
             // java.util.concurrent.FutureTask.run(FutureTask.java:166)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
             // java.lang.Thread.run(Thread.java:722)
             //
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = 945;
      float float0 = 0.5F;
      char char0 = 'h';
      short short0 = (short) (-343);
      TCharShortHashMap tCharShortHashMap0 = new TCharShortHashMap(int0, float0, char0, short0);
      TCharShortMapDecorator tCharShortMapDecorator0 = new TCharShortMapDecorator((TCharShortMap) tCharShortHashMap0);
      tCharShortMapDecorator0.entrySet();
      TCharShortMap tCharShortMap0 = null;
      TCharShortMapDecorator tCharShortMapDecorator1 = new TCharShortMapDecorator(tCharShortMap0);
      String string0 = File.pathSeparator;
      boolean boolean0 = tCharShortMapDecorator1.containsValue((Object) string0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      TCharShortMapDecorator tCharShortMapDecorator0 = new TCharShortMapDecorator();
      String string0 = "{";
      // Undeclared exception!
      try {
        URI.create(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in path at index 0: {
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      String string0 = "gh:vmK";
      AbstractMap.SimpleEntry<String, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, String>(string0, string0);
      abstractMap_SimpleEntry0.getValue();
      TCharShortMapDecorator tCharShortMapDecorator0 = new TCharShortMapDecorator();
      char char0 = ']';
      short short0 = (short)1876;
      Short short1 = new Short(short0);
      // Undeclared exception!
      try {
        tCharShortMapDecorator0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

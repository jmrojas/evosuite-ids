/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TLongCollection;
import gnu.trove.impl.sync.TSynchronizedLongCollection;
import gnu.trove.impl.sync.TSynchronizedLongList;
import gnu.trove.impl.sync.TSynchronizedLongSet;
import gnu.trove.impl.sync.TSynchronizedRandomAccessLongList;
import gnu.trove.impl.unmodifiable.TUnmodifiableLongSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessLongList;
import gnu.trove.list.TLongList;
import gnu.trove.list.array.TLongArrayList;
import gnu.trove.list.linked.TLongLinkedList;
import gnu.trove.set.TLongSet;
import gnu.trove.set.hash.TLongHashSet;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Locale;
import java.util.NoSuchElementException;
import java.util.StringTokenizer;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedLongCollectionEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      long long0 = (-1407L);
      TLongLinkedList tLongLinkedList0 = new TLongLinkedList(long0);
      long[] longArray0 = new long[7];
      String string0 = "i/,";
      StringTokenizer stringTokenizer0 = new StringTokenizer(string0, string0);
      // Undeclared exception!
      try {
        stringTokenizer0.nextToken();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = (-1013);
      TLongHashSet tLongHashSet0 = new TLongHashSet(int0, int0, int0);
      long[] longArray0 = new long[2];
      long long0 = (-1L);
      longArray0[0] = long0;
      longArray0[1] = (long) int0;
      TLongArrayList tLongArrayList0 = new TLongArrayList(longArray0);
      TSynchronizedRandomAccessLongList tSynchronizedRandomAccessLongList0 = new TSynchronizedRandomAccessLongList((TLongList) tLongArrayList0);
      String string0 = tSynchronizedRandomAccessLongList0.toString();
      TSynchronizedLongCollection tSynchronizedLongCollection0 = new TSynchronizedLongCollection((TLongCollection) tLongHashSet0, (Object) string0);
      boolean boolean0 = tSynchronizedLongCollection0.addAll(tLongHashSet0._set);
      assertEquals(1, tLongHashSet0.size());
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = (-103);
      TLongHashSet tLongHashSet0 = new TLongHashSet(int0);
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(tLongHashSet0._set);
      tLongArrayList0.sum();
      TSynchronizedRandomAccessLongList tSynchronizedRandomAccessLongList0 = new TSynchronizedRandomAccessLongList((TLongList) tLongArrayList0);
      tSynchronizedRandomAccessLongList0.retainAll(tLongHashSet0._set);
      tSynchronizedRandomAccessLongList0.containsAll((TLongCollection) tLongArrayList0);
      int int1 = 144;
      TSynchronizedRandomAccessLongList tSynchronizedRandomAccessLongList1 = (TSynchronizedRandomAccessLongList)tSynchronizedRandomAccessLongList0.mutex;
      long[] longArray0 = new long[6];
      long long0 = 0L;
      longArray0[0] = long0;
      longArray0[1] = (long) int0;
      long long1 = 0L;
      longArray0[2] = long1;
      long long2 = 0L;
      longArray0[3] = long2;
      longArray0[4] = (long) int1;
      longArray0[5] = (long) int0;
      tSynchronizedRandomAccessLongList0.containsAll(longArray0);
      TSynchronizedLongCollection tSynchronizedLongCollection0 = new TSynchronizedLongCollection((TLongCollection) tLongHashSet0, (Object) tSynchronizedRandomAccessLongList1);
      tSynchronizedRandomAccessLongList0.retainAll((TLongCollection) tLongHashSet0);
      tSynchronizedRandomAccessLongList0.getNoEntryValue();
      tSynchronizedRandomAccessLongList0.toString();
      String string0 = Long.toString((long) int0, int1);
      tSynchronizedRandomAccessLongList0.equals((Object) string0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) pipedInputStream0);
      try {
        dataInputStream0.readUTF();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TLongSet tLongSet0 = null;
      TUnmodifiableLongSet tUnmodifiableLongSet0 = null;
      try {
        tUnmodifiableLongSet0 = new TUnmodifiableLongSet(tLongSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TLongLinkedList tLongLinkedList0 = new TLongLinkedList();
      int int0 = 636;
      int int1 = 359;
      // Undeclared exception!
      try {
        tLongLinkedList0.subList(int0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 636 greater than end index 359
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = 988;
      TLongHashSet tLongHashSet0 = new TLongHashSet(int0, int0);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      tLongHashSet0.toString();
      String string0 = locale0.getDisplayVariant();
      locale0.getUnicodeLocaleKeys();
      int int1 = 1644;
      TLongArrayList tLongArrayList0 = new TLongArrayList(int1);
      File file0 = new File(string0, string0);
      String string1 = file0.getAbsolutePath();
      TSynchronizedLongList tSynchronizedLongList0 = new TSynchronizedLongList((TLongList) tLongArrayList0, (Object) string1);
      boolean boolean0 = tSynchronizedLongList0.isEmpty();
      assertEquals(true, boolean0);
      
      TSynchronizedLongSet tSynchronizedLongSet0 = new TSynchronizedLongSet((TLongSet) tLongHashSet0, (Object) string0);
      tSynchronizedLongSet0.addAll((TLongCollection) tLongHashSet0);
      TLongArrayList tLongArrayList1 = new TLongArrayList();
      TSynchronizedLongList tSynchronizedLongList1 = new TSynchronizedLongList((TLongList) tLongArrayList1);
      tLongArrayList1.toString();
      Object object0 = null;
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      TSynchronizedLongCollection tSynchronizedLongCollection0 = new TSynchronizedLongCollection((TLongCollection) tLongArrayList1);
      tSynchronizedLongList1.retainAll((Collection<?>) linkedList0);
      boolean boolean1 = tSynchronizedLongList1.equals(object0);
      assertFalse(boolean1 == boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      long[] longArray0 = new long[7];
      long long0 = (-1L);
      longArray0[0] = long0;
      long long1 = 0L;
      longArray0[1] = long1;
      long long2 = 401L;
      longArray0[2] = long2;
      long long3 = (-1271L);
      longArray0[3] = long3;
      long long4 = 0L;
      longArray0[4] = long4;
      long long5 = 0L;
      longArray0[5] = long5;
      long long6 = 35L;
      longArray0[6] = long6;
      TLongHashSet tLongHashSet0 = new TLongHashSet(longArray0);
      String string0 = "m=Fh`03";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 1: m=Fh`03:m=Fh%6003#m=Fh%6003
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = 36733847;
      TLongHashSet tLongHashSet0 = new TLongHashSet(int0);
      String string0 = "";
      URI.create(string0);
      String string1 = "";
      String string2 = "DmJ0q3;j";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string1, string1, string2, string1, string1);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: ://DmJ0q3;j?#
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      long[] longArray0 = new long[6];
      long long0 = 291L;
      longArray0[0] = long0;
      long long1 = (-1557L);
      longArray0[1] = long1;
      long long2 = (-536L);
      longArray0[2] = long2;
      long long3 = (-945L);
      longArray0[3] = long3;
      long long4 = (-1286L);
      longArray0[4] = long4;
      long long5 = (-1L);
      longArray0[5] = long5;
      TLongHashSet tLongHashSet0 = new TLongHashSet(longArray0);
      int int0 = 1728;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(int0);
      String string0 = byteArrayOutputStream0.toString();
      TSynchronizedLongCollection tSynchronizedLongCollection0 = new TSynchronizedLongCollection((TLongCollection) tLongHashSet0, (Object) string0);
      long long6 = (-9223372036854775808L);
      boolean boolean0 = tSynchronizedLongCollection0.contains(long6);
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      long[] longArray0 = new long[4];
      long long0 = (-1949L);
      longArray0[0] = long0;
      long long1 = 0L;
      longArray0[1] = long1;
      long long2 = 0L;
      longArray0[2] = long2;
      long long3 = 2045L;
      longArray0[3] = long3;
      TLongArrayList.wrap(longArray0);
      String string0 = "b3^C*hB~QF";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in path at index 2: b3^C*hB~QF
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TLongHashSet tLongHashSet0 = new TLongHashSet();
      TSynchronizedLongCollection tSynchronizedLongCollection0 = new TSynchronizedLongCollection((TLongCollection) tLongHashSet0);
      tSynchronizedLongCollection0.removeAll(tLongHashSet0._set);
      tSynchronizedLongCollection0.isEmpty();
      long[] longArray0 = new long[1];
      long long0 = 1532L;
      longArray0[0] = long0;
      tLongHashSet0.removeAll(longArray0);
      tSynchronizedLongCollection0.retainAll(tLongHashSet0._set);
      TSynchronizedLongCollection tSynchronizedLongCollection1 = new TSynchronizedLongCollection((TLongCollection) tSynchronizedLongCollection0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      tSynchronizedLongCollection1.toString();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      tLongHashSet0.getNoEntryValue();
      tLongHashSet0.compact();
      String string0 = "vxamKKI";
      tSynchronizedLongCollection1.retainAll(tLongHashSet0._set);
      tSynchronizedLongCollection1.add(long0);
      tLongHashSet0.toArray(longArray0);
      long long1 = 323L;
      linkedList0.iterator();
      tSynchronizedLongCollection0.add(long1);
      // Undeclared exception!
      try {
        locale0.getUnicodeLocaleType(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Ill-formed Unicode locale key: vxamKKI
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TLongLinkedList tLongLinkedList0 = new TLongLinkedList();
      Locale locale0 = Locale.GERMAN;
      Locale locale1 = null;
      int int0 = 467;
      TSynchronizedLongCollection tSynchronizedLongCollection0 = new TSynchronizedLongCollection((TLongCollection) tLongLinkedList0);
      tSynchronizedLongCollection0.retainAll((TLongCollection) tLongLinkedList0);
      long[] longArray0 = new long[6];
      longArray0[0] = (long) int0;
      long long0 = 0L;
      longArray0[1] = long0;
      longArray0[2] = (long) int0;
      longArray0[3] = (long) int0;
      TSynchronizedLongList tSynchronizedLongList0 = new TSynchronizedLongList((TLongList) tLongLinkedList0);
      tSynchronizedLongList0.toString();
      longArray0[4] = (long) int0;
      longArray0[5] = (long) int0;
      longArray0[0] = (long) int0;
      longArray0[1] = long0;
      longArray0[2] = long0;
      longArray0[3] = long0;
      longArray0[4] = long0;
      longArray0[5] = long0;
      int int1 = 1927;
      // Undeclared exception!
      try {
        tLongLinkedList0.set(int0, longArray0, int1, int0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1927
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TLongSet tLongSet0 = null;
      TSynchronizedLongSet tSynchronizedLongSet0 = null;
      try {
        tSynchronizedLongSet0 = new TSynchronizedLongSet(tLongSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TLongList tLongList0 = null;
      TLongHashSet tLongHashSet0 = new TLongHashSet();
      tLongHashSet0.clear();
      TSynchronizedLongSet tSynchronizedLongSet0 = new TSynchronizedLongSet((TLongSet) tLongHashSet0);
      tSynchronizedLongSet0.toString();
      TUnmodifiableRandomAccessLongList tUnmodifiableRandomAccessLongList0 = null;
      try {
        tUnmodifiableRandomAccessLongList0 = new TUnmodifiableRandomAccessLongList(tLongList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      long long0 = (-9223372036854775808L);
      long[] longArray0 = new long[5];
      longArray0[0] = long0;
      longArray0[1] = long0;
      longArray0[2] = long0;
      long long1 = 0L;
      longArray0[3] = long1;
      longArray0[4] = long0;
      long long2 = 1484L;
      TLongArrayList tLongArrayList0 = TLongArrayList.wrap(longArray0, long2);
      int int0 = 34271747;
      // Undeclared exception!
      try {
        tLongArrayList0.subList(int0, int0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index < 5
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      long[] longArray0 = new long[3];
      long long0 = 0L;
      longArray0[0] = long0;
      longArray0[1] = long0;
      longArray0[2] = long0;
      long long1 = 1957L;
      long long2 = 234L;
      longArray0[0] = long2;
      longArray0[1] = long2;
      longArray0[2] = long1;
      longArray0[0] = long1;
      long long3 = (-1L);
      longArray0[1] = long3;
      long long4 = (-640L);
      longArray0[2] = long4;
      TLongArrayList tLongArrayList0 = new TLongArrayList(longArray0);
      TSynchronizedRandomAccessLongList tSynchronizedRandomAccessLongList0 = new TSynchronizedRandomAccessLongList((TLongList) tLongArrayList0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      boolean boolean0 = tSynchronizedRandomAccessLongList0.removeAll((Collection<?>) linkedList0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      TLongHashSet tLongHashSet0 = new TLongHashSet();
      tLongHashSet0.toString();
      TLongArrayList.wrap(tLongHashSet0._set);
      int int0 = 0;
      int int1 = 0;
      TSynchronizedLongSet tSynchronizedLongSet0 = new TSynchronizedLongSet((TLongSet) tLongHashSet0);
      float float0 = (-166.48387F);
      // Undeclared exception!
      try {
        tLongHashSet0.setAutoCompactionFactor(float0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Factor must be >= 0: -166.48387
         //
      }
  }
}

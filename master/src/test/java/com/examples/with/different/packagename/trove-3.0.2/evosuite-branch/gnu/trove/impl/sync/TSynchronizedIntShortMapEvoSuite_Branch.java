/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TShortFunction;
import gnu.trove.impl.sync.TSynchronizedIntSet;
import gnu.trove.impl.sync.TSynchronizedIntShortMap;
import gnu.trove.impl.sync.TSynchronizedShortCollection;
import gnu.trove.iterator.TIntShortIterator;
import gnu.trove.map.TIntShortMap;
import gnu.trove.map.hash.TIntShortHashMap;
import gnu.trove.procedure.TIntProcedure;
import gnu.trove.procedure.TIntShortProcedure;
import gnu.trove.procedure.TShortProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedIntShortMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.putIfAbsent(IS)S: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedIntShortMap.<init>(Lgnu/trove/map/TIntShortMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((-1), (-1));
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      tSynchronizedIntShortMap0.putIfAbsent((int) (short)0, (short)0);
      assertEquals(1, tIntShortHashMap0.size());
      assertEquals("{0=0}", tSynchronizedIntShortMap0.toString());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.iterator()Lgnu/trove/iterator/TIntShortIterator;: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((-1), (-1));
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      TIntShortIterator tIntShortIterator0 = tSynchronizedIntShortMap0.iterator();
      assertEquals(false, tIntShortIterator0.hasNext());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.putAll(Lgnu/trove/map/TIntShortMap;)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(0);
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      tSynchronizedIntShortMap0.putAll((TIntShortMap) tIntShortHashMap0);
      assertEquals(0, tIntShortHashMap0.getNoEntryKey());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.get(I)S: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedIntShortMap.<init>(Lgnu/trove/map/TIntShortMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(670);
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0, (Object) "29e");
      short short0 = tSynchronizedIntShortMap0.get(670);
      assertEquals((short)0, short0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((-1), (-1));
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      boolean boolean0 = tSynchronizedIntShortMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.getNoEntryValue()S: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(0);
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      short short0 = tSynchronizedIntShortMap0.getNoEntryValue();
      assertEquals((short)0, short0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.keys([I)[I: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(1366);
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      int[] intArray0 = tSynchronizedIntShortMap0.keys(tIntShortHashMap0._set);
      assertNotNull(intArray0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.increment(I)Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((-692));
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      boolean boolean0 = tSynchronizedIntShortMap0.increment((-692));
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.size()I: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((-1), (-1));
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      int int0 = tSynchronizedIntShortMap0.size();
      assertEquals(0, int0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.keys()[I: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(670);
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0, (Object) "29e");
      int[] intArray0 = tSynchronizedIntShortMap0.keys();
      assertNotNull(intArray0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.hashCode()I: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((int) (short) (-1203), (float) (short) (-1203));
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      int int0 = tSynchronizedIntShortMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.put(IS)S: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(1366);
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      tSynchronizedIntShortMap0.put((int) (short)1, (short)1);
      assertEquals(false, tIntShortHashMap0.isEmpty());
      assertEquals(1, tIntShortHashMap0.size());
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((-692));
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      boolean boolean0 = tSynchronizedIntShortMap0.equals((Object) "-414");
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.clear()V: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((-1), (-1));
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      tSynchronizedIntShortMap0.clear();
      assertEquals("{}", tSynchronizedIntShortMap0.toString());
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(670);
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0, (Object) "29e");
      boolean boolean0 = tSynchronizedIntShortMap0.forEachValue((TShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.adjustOrPutValue(ISS)S: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(1366);
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      short short0 = tSynchronizedIntShortMap0.adjustOrPutValue(1366, (short)1, (short)1);
      assertEquals(1, tIntShortHashMap0.size());
      assertEquals((short)1, short0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap();
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      HashMap<Integer, Short> hashMap0 = new HashMap<Integer, Short>();
      tSynchronizedIntShortMap0.putAll((Map<? extends Integer, ? extends Short>) hashMap0);
      assertEquals("{}", hashMap0.toString());
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.transformValues(Lgnu/trove/function/TShortFunction;)V: root-Branch
   */

//   @Test
//   public void test17()  throws Throwable  {
//       TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(0);
//       TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
//       tSynchronizedIntShortMap0.transformValues((TShortFunction) null);
//       assertEquals(0, tSynchronizedIntShortMap0.getNoEntryValue());
//   }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.adjustValue(IS)Z: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((-1), (-1));
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      boolean boolean0 = tSynchronizedIntShortMap0.adjustValue((int) (short)0, (short)0);
      assertEquals(false, boolean0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.forEachEntry(Lgnu/trove/procedure/TIntShortProcedure;)Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(0);
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      boolean boolean0 = tSynchronizedIntShortMap0.forEachEntry((TIntShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.containsKey(I)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((-1), (-1));
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      boolean boolean0 = tSynchronizedIntShortMap0.containsKey((int) (short)0);
      assertEquals(false, boolean0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.retainEntries(Lgnu/trove/procedure/TIntShortProcedure;)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap();
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      boolean boolean0 = tSynchronizedIntShortMap0.retainEntries((TIntShortProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 22
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.containsValue(S)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedIntShortMap.<init>(Lgnu/trove/map/TIntShortMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(670);
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0, (Object) "29e");
      boolean boolean0 = tSynchronizedIntShortMap0.containsValue((short) (-15));
      assertEquals(false, boolean0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap();
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      String string0 = tSynchronizedIntShortMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.remove(I)S: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((-1), (-1));
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      short short0 = tSynchronizedIntShortMap0.remove(0);
      assertEquals((short)0, short0);
  }

  //Test case number: 25
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.values([S)[S: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedIntShortMap.values()[S: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap(1366);
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      short[] shortArray0 = tSynchronizedIntShortMap0.values();
      short[] shortArray1 = tSynchronizedIntShortMap0.values(shortArray0);
      assertSame(shortArray1, shortArray0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.forEachKey(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((int) (short) (-1203), (float) (short) (-1203));
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      boolean boolean0 = tSynchronizedIntShortMap0.forEachKey((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.getNoEntryKey()I: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((int) (short) (-1203), (float) (short) (-1203));
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      int int0 = tSynchronizedIntShortMap0.getNoEntryKey();
      assertEquals(0, int0);
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.<init>(Lgnu/trove/map/TIntShortMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = null;
      try {
        tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.keySet()Lgnu/trove/set/TIntSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedIntShortMap.keySet()Lgnu/trove/set/TIntSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((-1), (-1));
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      TSynchronizedIntSet tSynchronizedIntSet0 = (TSynchronizedIntSet)tSynchronizedIntShortMap0.keySet();
      assertNotNull(tSynchronizedIntSet0);
      
      TSynchronizedIntSet tSynchronizedIntSet1 = (TSynchronizedIntSet)tSynchronizedIntShortMap0.keySet();
      assertSame(tSynchronizedIntSet1, tSynchronizedIntSet0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedIntShortMap.valueCollection()Lgnu/trove/TShortCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 gnu.trove.impl.sync.TSynchronizedIntShortMap.valueCollection()Lgnu/trove/TShortCollection;: I11 Branch 3 IFNONNULL L121 - false
   * 3 gnu.trove.impl.sync.TSynchronizedIntShortMap.<init>(Lgnu/trove/map/TIntShortMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TIntShortHashMap tIntShortHashMap0 = new TIntShortHashMap((-692));
      TSynchronizedIntShortMap tSynchronizedIntShortMap0 = new TSynchronizedIntShortMap((TIntShortMap) tIntShortHashMap0);
      TSynchronizedShortCollection tSynchronizedShortCollection0 = (TSynchronizedShortCollection)tSynchronizedIntShortMap0.valueCollection();
      assertNotNull(tSynchronizedShortCollection0);
      
      TSynchronizedShortCollection tSynchronizedShortCollection1 = (TSynchronizedShortCollection)tSynchronizedIntShortMap0.valueCollection();
      assertSame(tSynchronizedShortCollection1, tSynchronizedShortCollection0);
  }
}

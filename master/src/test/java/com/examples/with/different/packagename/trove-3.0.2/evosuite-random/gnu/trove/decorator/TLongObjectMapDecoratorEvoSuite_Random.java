/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TLongObjectMapDecorator;
import gnu.trove.map.TLongObjectMap;
import gnu.trove.map.hash.TLongObjectHashMap;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PrintStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.AbstractMap;
import java.util.HashMap;
import java.util.Locale;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.swing.text.Segment;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

public class TLongObjectMapDecoratorEvoSuite_Random {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          TLongObjectMapDecorator<String> tLongObjectMapDecorator0 = new TLongObjectMapDecorator<String>();
          TLongObjectMap<String> tLongObjectMap0 = tLongObjectMapDecorator0.getMap();
          TLongObjectMapDecorator<String> tLongObjectMapDecorator1 = new TLongObjectMapDecorator<String>(tLongObjectMap0);
          String string0 = "{\\>Kv0d?\"m|??y}";
          int int0 = 1229;
          long long0 = 459L;
          TLongObjectHashMap<Long> tLongObjectHashMap0 = new TLongObjectHashMap<Long>(int0, (float) int0, long0);
          TLongObjectMapDecorator<Long> tLongObjectMapDecorator2 = new TLongObjectMapDecorator<Long>((TLongObjectMap<Long>) tLongObjectHashMap0);
          Locale locale0 = new Locale(string0);
          String string1 = locale0.getVariant();
          tLongObjectMapDecorator2.equals((Object) string1);
          // Undeclared exception!
          try {
            File.createTempFile(string0, string0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Unable to create temporary file
             //
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = (-1208);
      TLongObjectHashMap<String> tLongObjectHashMap0 = new TLongObjectHashMap<String>(int0, int0);
      TLongObjectHashMap<Long> tLongObjectHashMap1 = new TLongObjectHashMap<Long>();
      boolean boolean0 = true;
      tLongObjectHashMap1.reenableAutoCompaction(boolean0);
      TLongObjectMapDecorator<Long> tLongObjectMapDecorator0 = new TLongObjectMapDecorator<Long>((TLongObjectMap<Long>) tLongObjectHashMap1);
      tLongObjectMapDecorator0.toString();
      TLongObjectMapDecorator<String> tLongObjectMapDecorator1 = new TLongObjectMapDecorator<String>();
      // Undeclared exception!
      try {
        tLongObjectMapDecorator1.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = 0;
      TLongObjectHashMap<Long> tLongObjectHashMap0 = new TLongObjectHashMap<Long>(int0);
      TLongObjectHashMap<Object> tLongObjectHashMap1 = new TLongObjectHashMap<Object>((TLongObjectMap<?>) tLongObjectHashMap0);
      TLongObjectMapDecorator<Object> tLongObjectMapDecorator0 = new TLongObjectMapDecorator<Object>((TLongObjectMap<Object>) tLongObjectHashMap1);
      Segment segment0 = new Segment();
      String string0 = segment0.toString();
      tLongObjectMapDecorator0.remove((Object) string0);
      TLongObjectHashMap<Integer> tLongObjectHashMap2 = new TLongObjectHashMap<Integer>();
      TLongObjectMapDecorator<Integer> tLongObjectMapDecorator1 = new TLongObjectMapDecorator<Integer>((TLongObjectMap<Integer>) tLongObjectHashMap2);
      Locale locale0 = Locale.UK;
      String string1 = locale0.toLanguageTag();
      tLongObjectMapDecorator1.remove((Object) string1);
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = 1667;
      TLongObjectMapDecorator<Long> tLongObjectMapDecorator0 = new TLongObjectMapDecorator<Long>();
      // Undeclared exception!
      try {
        tLongObjectMapDecorator0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TLongObjectMapDecorator<Integer> tLongObjectMapDecorator0 = new TLongObjectMapDecorator<Integer>();
      // Undeclared exception!
      try {
        tLongObjectMapDecorator0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TLongObjectMapDecorator<Long> tLongObjectMapDecorator0 = new TLongObjectMapDecorator<Long>();
      // Undeclared exception!
      try {
        tLongObjectMapDecorator0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          TLongObjectMapDecorator<Integer> tLongObjectMapDecorator0 = new TLongObjectMapDecorator<Integer>();
          HashMap<AbstractMap.SimpleImmutableEntry<Object, String>, Object> hashMap0 = new HashMap<AbstractMap.SimpleImmutableEntry<Object, String>, Object>();
          TLongObjectMapDecorator<Object> tLongObjectMapDecorator1 = new TLongObjectMapDecorator<Object>();
          String string0 = "";
          PrintStream printStream0 = null;
          try {
            printStream0 = new PrintStream(string0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.io.FilePermission\" \"\" \"write\")
             // java.lang.Thread.getStackTrace(Thread.java:1567)
             // org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
             // java.io.FileOutputStream.<init>(FileOutputStream.java:203)
             // java.io.FileOutputStream.<init>(FileOutputStream.java:104)
             // java.io.PrintStream.<init>(PrintStream.java:208)
             // sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
             // sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
             // sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
             // java.lang.reflect.Constructor.newInstance(Constructor.java:525)
             // org.evosuite.testcase.ConstructorStatement$1.execute(ConstructorStatement.java:226)
             // org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:144)
             // org.evosuite.testcase.ConstructorStatement.execute(ConstructorStatement.java:188)
             // org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             // org.evosuite.testcase.TestRunnable.call(TestRunnable.java:1)
             // java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
             // java.util.concurrent.FutureTask.run(FutureTask.java:166)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
             // java.lang.Thread.run(Thread.java:722)
             //
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test7()  throws Throwable  {
      TLongObjectMapDecorator<Object> tLongObjectMapDecorator0 = new TLongObjectMapDecorator<Object>();
      HashMap<Integer, Long> hashMap0 = new HashMap<Integer, Long>();
      long long0 = 0L;
      Long long1 = new Long(long0);
      String string0 = "\"";
      // Undeclared exception!
      try {
        URI.create(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in path at index 0: \"
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>();
      long long0 = 0L;
      int int0 = 0;
      TLongObjectHashMap<Long> tLongObjectHashMap1 = new TLongObjectHashMap<Long>(int0);
      TLongObjectMapDecorator<Long> tLongObjectMapDecorator0 = new TLongObjectMapDecorator<Long>((TLongObjectMap<Long>) tLongObjectHashMap1);
      String string0 = "ODLi";
      URI uRI0 = new URI(string0);
      File file0 = null;
      try {
        file0 = new File(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI is not absolute
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 944;
      float float0 = (-203.3574F);
      TLongObjectHashMap<Long> tLongObjectHashMap0 = new TLongObjectHashMap<Long>(int0, float0, (long) int0);
      TLongObjectMapDecorator<Long> tLongObjectMapDecorator0 = new TLongObjectMapDecorator<Long>((TLongObjectMap<Long>) tLongObjectHashMap0);
      Locale locale0 = Locale.FRENCH;
      String string0 = locale0.toString();
      boolean boolean0 = tLongObjectMapDecorator0.equals((Object) string0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      TLongObjectMapDecorator<Long> tLongObjectMapDecorator0 = new TLongObjectMapDecorator<Long>();
      String string0 = "|{Z29eL=NI%E-7\"";
      long long0 = 0L;
      Long long1 = new Long(long0);
      // Undeclared exception!
      try {
        tLongObjectMapDecorator0.put(long1, (Long) long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 0;
      float float0 = 523.5868F;
      TLongObjectHashMap<TLongObjectHashMap<Object>> tLongObjectHashMap0 = new TLongObjectHashMap<TLongObjectHashMap<Object>>(int0, float0);
      TLongObjectMapDecorator<Integer> tLongObjectMapDecorator0 = new TLongObjectMapDecorator<Integer>();
      // Undeclared exception!
      try {
        tLongObjectMapDecorator0.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TLongObjectMapDecorator<Integer> tLongObjectMapDecorator0 = new TLongObjectMapDecorator<Integer>();
      TLongObjectMapDecorator<Long> tLongObjectMapDecorator1 = new TLongObjectMapDecorator<Long>();
      int int0 = 0;
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TLongObjectMap<String> tLongObjectMap0 = null;
      TLongObjectMapDecorator<String> tLongObjectMapDecorator0 = new TLongObjectMapDecorator<String>(tLongObjectMap0);
      // Undeclared exception!
      try {
        tLongObjectMapDecorator0.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TLongObjectMapDecorator<String> tLongObjectMapDecorator0 = new TLongObjectMapDecorator<String>();
      long long0 = (-1320L);
      Long long1 = new Long(long0);
      long long2 = 1666L;
      Long.valueOf(long2);
      String string0 = "A?(dnN5U@ve";
      // Undeclared exception!
      try {
        tLongObjectMapDecorator0.put(long1, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = (-187);
      TLongObjectHashMap<Integer> tLongObjectHashMap0 = new TLongObjectHashMap<Integer>(int0, int0, int0);
      TLongObjectHashMap<Integer> tLongObjectHashMap1 = new TLongObjectHashMap<Integer>((TLongObjectMap<? extends Integer>) tLongObjectHashMap0);
      TLongObjectMapDecorator<Integer> tLongObjectMapDecorator0 = new TLongObjectMapDecorator<Integer>((TLongObjectMap<Integer>) tLongObjectHashMap1);
      boolean boolean0 = tLongObjectMapDecorator0.isEmpty();
      assertEquals(true, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      String string0 = "KCN38|QKXfUy<";
      String string1 = "&{pwCN.Hq4vj";
      int int0 = 23;
      String string2 = "EZ-8PMmFA,K";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string1, int0, string1, string2, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: KCN38|QKXfUy<://KCN38%7CQKXfUy%3C@&{pwCN.Hq4vj:23&%7BpwCN.Hq4vj?EZ-8PMmFA,K#KCN38%7CQKXfUy%3C
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      TLongObjectMapDecorator<Long> tLongObjectMapDecorator0 = new TLongObjectMapDecorator<Long>();
      tLongObjectMapDecorator0.getMap();
      TLongObjectMapDecorator<String> tLongObjectMapDecorator1 = new TLongObjectMapDecorator<String>();
      String string0 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: :#
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      TLongObjectMapDecorator<AbstractMap.SimpleImmutableEntry<Object, Long>> tLongObjectMapDecorator0 = new TLongObjectMapDecorator<AbstractMap.SimpleImmutableEntry<Object, Long>>();
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.custom_hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TByteCollection;
import gnu.trove.function.TByteFunction;
import gnu.trove.impl.hash.TObjectHash;
import gnu.trove.list.array.TByteArrayList;
import gnu.trove.map.TObjectByteMap;
import gnu.trove.map.custom_hash.TObjectByteCustomHashMap;
import gnu.trove.map.hash.TObjectByteHashMap;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TObjectByteProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TObjectByteCustomHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 29 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$TObjectByteHashIterator.advance()V: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$TObjectByteHashIterator.value()B: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$TObjectByteHashIterator.<init>(Lgnu/trove/map/custom_hash/TObjectByteCustomHashMap;Lgnu/trove/map/custom_hash/TObjectByteCustomHashMap;)V: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$TObjectByteHashIterator.key()Ljava/lang/Object;: root-Branch
   * 5 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.putAll(Lgnu/trove/map/TObjectByteMap;)V: root-Branch
   * 6 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.iterator()Lgnu/trove/iterator/TObjectByteIterator;: root-Branch
   * 7 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IF)V: root-Branch
   * 8 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;I)V: root-Branch
   * 9 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.setUp(I)I: root-Branch
   * 10 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.put(Ljava/lang/Object;B)B: root-Branch
   * 11 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$1.execute(Ljava/lang/Object;B)Z: root-Branch
   * 12 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$1.<init>(Lgnu/trove/map/custom_hash/TObjectByteCustomHashMap;)V: root-Branch
   * 13 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.get(Ljava/lang/Object;)B: I9 Branch 19 IFGE L243 - true
   * 14 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.doPut(BI)B: I12 Branch 21 IFGE L268 - true
   * 15 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.doPut(BI)B: I41 Branch 22 IFEQ L276 - false
   * 16 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.adjustOrPutValue(Ljava/lang/Object;BB)B: I9 Branch 41 IFGE L456 - true
   * 17 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.adjustOrPutValue(Ljava/lang/Object;BB)B: I52 Branch 42 IFEQ L466 - false
   * 18 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectByteProcedure;)Z: I18 Branch 47 IFLE L518 - true
   * 19 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectByteProcedure;)Z: I18 Branch 47 IFLE L518 - false
   * 20 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectByteProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - true
   * 21 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectByteProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - false
   * 22 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectByteProcedure;)Z: I30 Branch 49 IF_ACMPEQ L519 - false
   * 23 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectByteProcedure;)Z: I39 Branch 50 IFNE L519 - true
   * 24 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L588 - true
   * 25 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 59 IF_ICMPEQ L592 - true
   * 26 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 60 IFEQ L597 - true
   * 27 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 60 IFEQ L597 - false
   * 28 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.equals(Ljava/lang/Object;)Z: I54 Branch 61 IF_ICMPNE L601 - true
   * 29 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.equals(Ljava/lang/Object;)Z: I78 Branch 64 IF_ICMPEQ L608 - true
   */

  @Test
  public void test0()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (int) (byte)1);
      TObjectByteCustomHashMap<String> tObjectByteCustomHashMap1 = new TObjectByteCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (int) (byte)1, (float) (byte)1);
      tObjectByteCustomHashMap1.adjustOrPutValue((String) null, (byte)1, (byte)1);
      tObjectByteCustomHashMap0.putAll((TObjectByteMap<?>) tObjectByteCustomHashMap1);
      boolean boolean0 = tObjectByteCustomHashMap1.equals((Object) tObjectByteCustomHashMap0);
      assertEquals(1, tObjectByteCustomHashMap1.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.getNoEntryValue()B: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFB)V: I24 Branch 8 IFEQ L134 - false
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectByteMap;)V: I14 Branch 9 IFEQ L151 - false
   * 4 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectByteMap;)V: I42 Branch 10 IFEQ L157 - false
   */

//   @Test
//   public void test1()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (int) (byte)119, (float) (byte)119, (byte)119);
//       TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap1 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (TObjectByteMap<? extends Integer>) tObjectByteCustomHashMap0);
//       assertEquals(119, tObjectByteCustomHashMap1.getNoEntryValue());
//       assertEquals(3, tObjectByteCustomHashMap1.capacity());
//   }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keySet()Ljava/util/Set;: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$KeyView.<init>(Lgnu/trove/map/custom_hash/TObjectByteCustomHashMap;)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      IdentityHashingStrategy<Byte> identityHashingStrategy0 = new IdentityHashingStrategy<Byte>();
      TObjectByteCustomHashMap<Byte> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Byte>((HashingStrategy<? super Byte>) identityHashingStrategy0, (-214), (float) (-214));
      Set<Byte> set0 = tObjectByteCustomHashMap0.keySet();
      assertEquals(0, set0.size());
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (-407));
      boolean boolean0 = tObjectByteCustomHashMap0.forEachKey((TObjectProcedure<? super Object>) null);
      assertEquals(true, boolean0);
      assertEquals(3, tObjectByteCustomHashMap0.capacity());
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.increment(Ljava/lang/Object;)Z: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.<init>()V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.adjustValue(Ljava/lang/Object;B)Z: I9 Branch 40 IFGE L440 - false
   */

  @Test
  public void test4()  throws Throwable  {
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>();
      boolean boolean0 = tObjectByteCustomHashMap0.increment((Object) null);
      assertEquals(false, boolean0);
      assertEquals(23, tObjectByteCustomHashMap0.capacity());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.containsKey(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<String> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (int) (byte)1, (float) (byte)1);
      boolean boolean0 = tObjectByteCustomHashMap0.containsKey((Object) false);
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.clear()V: root-Branch
   */

//   @Test
//   public void test6()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (int) (byte)1, (float) (byte)1, (byte)1);
//       tObjectByteCustomHashMap0.clear();
//       assertEquals("{}", tObjectByteCustomHashMap0.toString());
//       assertEquals(1, tObjectByteCustomHashMap0.getNoEntryValue());
//   }

  //Test case number: 7
  /*
   * 15 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$TByteValueCollection$TObjectByteValueHashIterator.next()B: root-Branch
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$TByteValueCollection$TObjectByteValueHashIterator.hasNext()Z: I4 Branch 103 IFLT L985 - false
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$TByteValueCollection$TObjectByteValueHashIterator.moveToNextIndex()V: I7 Branch 105 IFGE L1020 - true
   * 4 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$TByteValueCollection$TObjectByteValueHashIterator.nextIndex()I: I35 Branch 108 IF_ACMPEQ L1042 - false
   * 5 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$TByteValueCollection$TObjectByteValueHashIterator.nextIndex()I: I40 Branch 109 IF_ACMPNE L1042 - true
   * 6 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$TByteValueCollection.<init>(Lgnu/trove/map/custom_hash/TObjectByteCustomHashMap;)V: root-Branch
   * 7 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$TByteValueCollection.iterator()Lgnu/trove/iterator/TByteIterator;: root-Branch
   * 8 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.valueCollection()Lgnu/trove/TByteCollection;: root-Branch
   * 9 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$TByteValueCollection$TObjectByteValueHashIterator.<init>(Lgnu/trove/map/custom_hash/TObjectByteCustomHashMap$TByteValueCollection;)V: root-Branch
   * 10 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$TByteValueCollection$TObjectByteValueHashIterator.nextIndex()I: I7 Branch 106 IF_ICMPEQ L1036 - true
   * 11 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$TByteValueCollection$TObjectByteValueHashIterator.nextIndex()I: I30 Branch 107 IFLE L1042 - true
   * 12 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$TByteValueCollection$TObjectByteValueHashIterator.nextIndex()I: I30 Branch 107 IFLE L1042 - false
   * 13 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$TByteValueCollection$TObjectByteValueHashIterator.nextIndex()I: I35 Branch 108 IF_ACMPEQ L1042 - true
   * 14 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$TByteValueCollection$TObjectByteValueHashIterator.hasNext()Z: I4 Branch 103 IFLT L985 - true
   * 15 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;)V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<String> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0);
      tObjectByteCustomHashMap0.adjustOrPutValue("-32", (byte) (-32), (byte) (-32));
      TByteArrayList tByteArrayList0 = new TByteArrayList((int) (byte)0, (byte) (-32));
      TByteCollection tByteCollection0 = tObjectByteCustomHashMap0.valueCollection();
      tByteArrayList0.removeAll(tByteCollection0);
      assertEquals(false, tObjectByteCustomHashMap0.isEmpty());
      assertEquals("{-32=-32}", tObjectByteCustomHashMap0.toString());
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFB)V: I24 Branch 8 IFEQ L134 - true
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectByteMap;)V: I14 Branch 9 IFEQ L151 - true
   */

//   @Test
//   public void test8()  throws Throwable  {
//       IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
//       TObjectByteHashMap<Integer> tObjectByteHashMap0 = new TObjectByteHashMap<Integer>((-214));
//       TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (TObjectByteMap<? extends Integer>) tObjectByteHashMap0);
//       assertEquals(0, tObjectByteCustomHashMap0.getNoEntryValue());
//   }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectByteMap;)V: I42 Branch 10 IFEQ L157 - true
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.getNoEntryValue()B: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.putAll(Lgnu/trove/map/TObjectByteMap;)V: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFB)V: I24 Branch 8 IFEQ L134 - true
   * 5 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;Lgnu/trove/map/TObjectByteMap;)V: I14 Branch 9 IFEQ L151 - false
   */

  @Test
  public void test9()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>();
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap1 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (TObjectByteMap<? extends Integer>) tObjectByteCustomHashMap0);
      assertEquals(23, tObjectByteCustomHashMap1.capacity());
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.rehash(I)V: I63 Branch 13 IF_ACMPEQ L201 - true
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - true
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - false
   * 4 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - true
   * 5 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - false
   */

  @Test
  public void test10()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (int) (byte) (-83));
      Object object0 = TObjectHash.REMOVED;
      tObjectByteCustomHashMap0.put(object0, (byte) (-83));
      tObjectByteCustomHashMap0.trimToSize();
      assertEquals(1, tObjectByteCustomHashMap0.size());
      assertEquals("{}", tObjectByteCustomHashMap0.toString());
  }

  //Test case number: 11
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.containsValue(B)Z: I25 Branch 16 IF_ACMPEQ L232 - false
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.containsValue(B)Z: I30 Branch 17 IF_ACMPEQ L232 - false
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.containsValue(B)Z: I35 Branch 18 IF_ICMPNE L232 - true
   * 4 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.containsValue(B)Z: I18 Branch 15 IFLE L231 - true
   * 5 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.containsValue(B)Z: I18 Branch 15 IFLE L231 - false
   * 6 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.containsValue(B)Z: I25 Branch 16 IF_ACMPEQ L232 - true
   */

  @Test
  public void test11()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<String> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0);
      tObjectByteCustomHashMap0.adjustOrPutValue("-32", (byte) (-32), (byte) (-32));
      boolean boolean0 = tObjectByteCustomHashMap0.containsValue((byte)0);
      assertEquals("{-32=-32}", tObjectByteCustomHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.containsValue(B)Z: I30 Branch 17 IF_ACMPEQ L232 - true
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.containsValue(B)Z: I18 Branch 15 IFLE L231 - true
   */

  @Test
  public void test12()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (int) (byte) (-83));
      Object object0 = TObjectHash.REMOVED;
      tObjectByteCustomHashMap0.put(object0, (byte) (-83));
      boolean boolean0 = tObjectByteCustomHashMap0.containsValue((byte) (-83));
      assertEquals(1, tObjectByteCustomHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 12 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.containsValue(B)Z: I35 Branch 18 IF_ICMPNE L232 - false
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I10 Branch 28 IF_ICMPGE L360 - true
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L368 - true
   * 4 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L368 - false
   * 5 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L369 - true
   * 6 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L369 - false
   * 7 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I49 Branch 31 IF_ACMPEQ L369 - false
   * 8 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.containsValue(B)Z: I18 Branch 15 IFLE L231 - false
   * 9 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.containsValue(B)Z: I25 Branch 16 IF_ACMPEQ L232 - true
   * 10 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.containsValue(B)Z: I25 Branch 16 IF_ACMPEQ L232 - false
   * 11 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.containsValue(B)Z: I30 Branch 17 IF_ACMPEQ L232 - false
   * 12 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.putIfAbsent(Ljava/lang/Object;B)B: I9 Branch 20 IFGE L259 - true
   */

  @Test
  public void test13()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      TObjectByteCustomHashMap<String> tObjectByteCustomHashMap1 = new TObjectByteCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0);
      tObjectByteCustomHashMap0.putIfAbsent((Object) "-32", (byte) (-32));
      tObjectByteCustomHashMap0.keys(tObjectByteCustomHashMap1._set);
      boolean boolean0 = tObjectByteCustomHashMap1.containsValue((byte)0);
      assertEquals("{-32=0}", tObjectByteCustomHashMap1.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.get(Ljava/lang/Object;)B: I9 Branch 19 IFGE L243 - false
   */

  @Test
  public void test14()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (int) (byte) (-32));
      tObjectByteCustomHashMap0.get((Object) "-32");
      assertEquals(3, tObjectByteCustomHashMap0.capacity());
  }

  //Test case number: 15
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.putIfAbsent(Ljava/lang/Object;B)B: I9 Branch 20 IFGE L259 - false
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.rehash(I)V: I63 Branch 13 IF_ACMPEQ L201 - false
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.rehash(I)V: I73 Branch 14 IFGE L203 - true
   */

  @Test
  public void test15()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      Byte byte0 = new Byte((byte) (-10));
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (-214), (float) (-214), (byte) (-10));
      tObjectByteCustomHashMap0.putIfAbsent((Object) null, (byte) byte0);
      byte byte1 = tObjectByteCustomHashMap0.putIfAbsent((Object) null, (byte) (-10));
      assertEquals("{null=-10}", tObjectByteCustomHashMap0.toString());
      assertEquals((byte) (-10), byte1);
  }

  //Test case number: 16
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.doPut(BI)B: I12 Branch 21 IFGE L268 - false
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.doPut(BI)B: I41 Branch 22 IFEQ L276 - true
   */

  @Test
  public void test16()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 0, (float) 0, (byte) (-7));
      tObjectByteCustomHashMap0.putIfAbsent((Integer) 0, (byte) (-7));
      byte byte0 = tObjectByteCustomHashMap0.put((Integer) 0, (byte) (-7));
      assertEquals(false, tObjectByteCustomHashMap0.isEmpty());
      assertEquals((byte) (-7), byte0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.remove(Ljava/lang/Object;)B: I14 Branch 23 IFLT L287 - true
   */

  @Test
  public void test17()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (int) (byte) (-83));
      TObjectByteCustomHashMap<String> tObjectByteCustomHashMap1 = new TObjectByteCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (int) (byte) (-83));
      byte byte0 = tObjectByteCustomHashMap0.remove((Object) tObjectByteCustomHashMap1);
      assertEquals((byte)0, byte0);
      assertEquals(true, tObjectByteCustomHashMap0.isEmpty());
      assertEquals(3, tObjectByteCustomHashMap1.capacity());
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.putAll(Ljava/util/Map;)V: I13 Branch 24 IFEQ L313 - true
   */

  @Test
  public void test18()  throws Throwable  {
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>();
      HashMap<String, Byte> hashMap0 = new HashMap<String, Byte>();
      tObjectByteCustomHashMap0.putAll((Map<?, ? extends Byte>) hashMap0);
      assertEquals(23, tObjectByteCustomHashMap0.capacity());
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.putAll(Ljava/util/Map;)V: I13 Branch 24 IFEQ L313 - false
   */

  @Test
  public void test19()  throws Throwable  {
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>();
      HashMap<String, Byte> hashMap0 = new HashMap<String, Byte>();
      Byte byte0 = new Byte((byte) (-105));
      hashMap0.put("h.)I<7N298>", byte0);
      // Undeclared exception!
      try {
        tObjectByteCustomHashMap0.putAll((Map<?, ? extends Byte>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 20
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L348 - false
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys()[Ljava/lang/Object;: I35 Branch 27 IF_ACMPEQ L348 - false
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L347 - true
   * 4 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L347 - false
   * 5 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L348 - true
   */

  @Test
  public void test20()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (int) (byte) (-83));
      tObjectByteCustomHashMap0.put((Object) identityHashingStrategy0, (byte) (-83));
      tObjectByteCustomHashMap0.keys();
      assertEquals(false, tObjectByteCustomHashMap0.isEmpty());
      assertEquals(1, tObjectByteCustomHashMap0.size());
  }

  //Test case number: 21
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys()[Ljava/lang/Object;: I35 Branch 27 IF_ACMPEQ L348 - true
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L347 - true
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L347 - false
   * 4 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L348 - true
   * 5 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L348 - false
   */

  @Test
  public void test21()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (int) (byte) (-83));
      Object object0 = TObjectHash.REMOVED;
      tObjectByteCustomHashMap0.put(object0, (byte) (-83));
      tObjectByteCustomHashMap0.keys();
      assertEquals(1, tObjectByteCustomHashMap0.size());
      assertEquals(false, tObjectByteCustomHashMap0.isEmpty());
  }

  //Test case number: 22
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I10 Branch 28 IF_ICMPGE L360 - false
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I49 Branch 31 IF_ACMPEQ L369 - false
   */

//   @Test
//   public void test22()  throws Throwable  {
//       IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
//       TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 0, (float) 0, (byte) (-7));
//       tObjectByteCustomHashMap0.putIfAbsent((Integer) 0, (byte) (-7));
//       Integer[] integerArray0 = new Integer[1];
//       tObjectByteCustomHashMap0.put((Integer) 1015665009, (byte) (-7));
//       tObjectByteCustomHashMap0.keys(integerArray0);
//       assertEquals(17, tObjectByteCustomHashMap0.capacity());
//       assertEquals("{0=-7,1015665009=-7}", tObjectByteCustomHashMap0.toString());
//   }

  //Test case number: 23
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I49 Branch 31 IF_ACMPEQ L369 - true
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I10 Branch 28 IF_ICMPGE L360 - true
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L368 - true
   * 4 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L368 - false
   * 5 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L369 - true
   * 6 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L369 - false
   */

  @Test
  public void test23()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (int) (byte) (-83));
      Object object0 = TObjectHash.REMOVED;
      tObjectByteCustomHashMap0.put(object0, (byte) (-83));
      TObjectByteCustomHashMap<String> tObjectByteCustomHashMap1 = new TObjectByteCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (int) (byte) (-83));
      tObjectByteCustomHashMap0.keys(tObjectByteCustomHashMap1._set);
      assertEquals(false, tObjectByteCustomHashMap0.isEmpty());
      assertEquals(1, tObjectByteCustomHashMap0.size());
  }

  //Test case number: 24
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values()[B: I34 Branch 33 IF_ACMPEQ L391 - false
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values()[B: I39 Branch 34 IF_ACMPEQ L391 - false
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values()[B: I27 Branch 32 IFLE L390 - true
   * 4 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values()[B: I27 Branch 32 IFLE L390 - false
   * 5 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values()[B: I34 Branch 33 IF_ACMPEQ L391 - true
   */

  @Test
  public void test24()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-10), (float) (-10), (byte) (-7));
      tObjectByteCustomHashMap0.putIfAbsent((Integer) (-10), (byte) (-7));
      tObjectByteCustomHashMap0.values();
      assertEquals(1, tObjectByteCustomHashMap0.size());
      assertEquals("{-10=-7}", tObjectByteCustomHashMap0.toString());
  }

  //Test case number: 25
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values()[B: I39 Branch 34 IF_ACMPEQ L391 - true
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values()[B: I34 Branch 33 IF_ACMPEQ L391 - false
   */

  @Test
  public void test25()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (int) (byte) (-83));
      Object object0 = TObjectHash.REMOVED;
      tObjectByteCustomHashMap0.put(object0, (byte) (-83));
      tObjectByteCustomHashMap0.values();
      assertEquals(false, tObjectByteCustomHashMap0.isEmpty());
      assertEquals(1, tObjectByteCustomHashMap0.size());
  }

  //Test case number: 26
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values([B)[B: I10 Branch 35 IF_ICMPGE L402 - false
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values([B)[B: I44 Branch 37 IF_ACMPEQ L410 - false
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values([B)[B: I49 Branch 38 IF_ACMPEQ L410 - false
   * 4 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values([B)[B: I65 Branch 39 IF_ICMPLE L414 - true
   * 5 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values()[B: I27 Branch 32 IFLE L390 - true
   * 6 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values()[B: I27 Branch 32 IFLE L390 - false
   * 7 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values()[B: I34 Branch 33 IF_ACMPEQ L391 - true
   * 8 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values([B)[B: I37 Branch 36 IFLE L409 - true
   * 9 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values([B)[B: I37 Branch 36 IFLE L409 - false
   * 10 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values([B)[B: I44 Branch 37 IF_ACMPEQ L410 - true
   */

//   @Test
//   public void test26()  throws Throwable  {
//       IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
//       TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-10), (float) (-10), (byte) (-7));
//       byte[] byteArray0 = tObjectByteCustomHashMap0.values();
//       tObjectByteCustomHashMap0.put((Integer) 516674182, (byte) (-7));
//       tObjectByteCustomHashMap0.values(byteArray0);
//       assertEquals(1, tObjectByteCustomHashMap0.size());
//       assertEquals(-7, tObjectByteCustomHashMap0.getNoEntryValue());
//   }

  //Test case number: 27
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values([B)[B: I49 Branch 38 IF_ACMPEQ L410 - true
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values([B)[B: I10 Branch 35 IF_ICMPGE L402 - true
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values([B)[B: I37 Branch 36 IFLE L409 - true
   * 4 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values([B)[B: I37 Branch 36 IFLE L409 - false
   * 5 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values([B)[B: I44 Branch 37 IF_ACMPEQ L410 - true
   * 6 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values([B)[B: I44 Branch 37 IF_ACMPEQ L410 - false
   * 7 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.values([B)[B: I65 Branch 39 IF_ICMPLE L414 - false
   */

  @Test
  public void test27()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (int) (byte) (-83));
      Object object0 = TObjectHash.REMOVED;
      tObjectByteCustomHashMap0.put(object0, (byte) (-83));
      byte[] byteArray0 = new byte[3];
      tObjectByteCustomHashMap0.values(byteArray0);
      assertEquals(false, tObjectByteCustomHashMap0.isEmpty());
      assertEquals(1, tObjectByteCustomHashMap0.size());
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.adjustValue(Ljava/lang/Object;B)Z: I9 Branch 40 IFGE L440 - true
   */

  @Test
  public void test28()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 0, (float) 0, (byte) (-7));
      tObjectByteCustomHashMap0.putIfAbsent((Integer) 0, (byte) (-7));
      boolean boolean0 = tObjectByteCustomHashMap0.adjustValue((Integer) 0, (byte) (-7));
      assertEquals(1, tObjectByteCustomHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 29
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: I25 Branch 44 IF_ACMPEQ L497 - false
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: I30 Branch 45 IF_ACMPEQ L497 - false
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: I18 Branch 43 IFLE L496 - false
   * 4 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: I25 Branch 44 IF_ACMPEQ L497 - true
   */

  @Test
  public void test29()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      tObjectByteCustomHashMap0.putIfAbsent((Object) null, (byte)119);
      // Undeclared exception!
      try {
        tObjectByteCustomHashMap0.forEachValue((TByteProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 30
  /*
   * 7 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: I30 Branch 45 IF_ACMPEQ L497 - true
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.removeAt(I)V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: I18 Branch 43 IFLE L496 - true
   * 4 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: I18 Branch 43 IFLE L496 - false
   * 5 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: I25 Branch 44 IF_ACMPEQ L497 - true
   * 6 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: I25 Branch 44 IF_ACMPEQ L497 - false
   * 7 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.remove(Ljava/lang/Object;)B: I14 Branch 23 IFLT L287 - false
   */

  @Test
  public void test30()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      tObjectByteCustomHashMap0.putIfAbsent((Object) null, (byte)119);
      assertEquals("{null=119}", tObjectByteCustomHashMap0.toString());
      
      tObjectByteCustomHashMap0.remove((Object) null);
      boolean boolean0 = tObjectByteCustomHashMap0.forEachValue((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 31
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectByteProcedure;)Z: I27 Branch 51 IFLE L545 - true
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectByteProcedure;)Z: I27 Branch 51 IFLE L545 - false
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.retainEntries(Lgnu/trove/procedure/TObjectByteProcedure;)Z: I34 Branch 52 IF_ACMPEQ L546 - true
   * 4 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.<init>()V: root-Branch
   */

  @Test
  public void test31()  throws Throwable  {
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>();
      boolean boolean0 = tObjectByteCustomHashMap0.retainEntries((TObjectByteProcedure<? super Integer>) null);
      assertEquals(23, tObjectByteCustomHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 32
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V: I18 Branch 55 IFLE L570 - false
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V: I24 Branch 56 IFNULL L571 - false
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.transformValues(Lgnu/trove/function/TByteFunction;)V: I29 Branch 57 IF_ACMPEQ L571 - false
   */

  @Test
  public void test32()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Byte> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Byte>((HashingStrategy<? super Byte>) identityHashingStrategy0, 1256, (float) 1256);
      // Undeclared exception!
      try {
        tObjectByteCustomHashMap0.transformValues((TByteFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 33
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L588 - false
   */

  @Test
  public void test33()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<String> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0);
      boolean boolean0 = tObjectByteCustomHashMap0.equals((Object) "-32");
      assertEquals(false, boolean0);
      assertEquals(23, tObjectByteCustomHashMap0.capacity());
  }

  //Test case number: 34
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 59 IF_ICMPEQ L592 - false
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IF)V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L588 - true
   */

  @Test
  public void test34()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<String> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0, (int) (byte)1, (float) (byte)1);
      tObjectByteCustomHashMap0.adjustOrPutValue((String) null, (byte)1, (byte)1);
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap1 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (int) (byte)1, (float) (byte)1, (byte)1);
      boolean boolean0 = tObjectByteCustomHashMap0.equals((Object) tObjectByteCustomHashMap1);
      assertEquals(false, tObjectByteCustomHashMap0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 35
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L626 - false
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.hashCode()I: I34 Branch 67 IF_ACMPEQ L626 - false
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.hashCode()I: I45 Branch 68 IFNONNULL L627 - false
   * 4 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.hashCode()I: I22 Branch 65 IFLE L625 - true
   * 5 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.hashCode()I: I22 Branch 65 IFLE L625 - false
   * 6 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L626 - true
   */

  @Test
  public void test35()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0);
      tObjectByteCustomHashMap0.putIfAbsent((Object) null, (byte)119);
      int int0 = tObjectByteCustomHashMap0.hashCode();
      assertEquals("{null=119}", tObjectByteCustomHashMap0.toString());
      assertEquals(119, int0);
  }

  //Test case number: 36
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.hashCode()I: I34 Branch 67 IF_ACMPEQ L626 - true
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;I)V: root-Branch
   */

  @Test
  public void test36()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<Object> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (int) (byte) (-83));
      Object object0 = TObjectHash.REMOVED;
      tObjectByteCustomHashMap0.put(object0, (byte) (-83));
      int int0 = tObjectByteCustomHashMap0.hashCode();
      assertEquals(false, tObjectByteCustomHashMap0.isEmpty());
      assertEquals(0, int0);
  }

  //Test case number: 37
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.hashCode()I: I45 Branch 68 IFNONNULL L627 - true
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;)V: root-Branch
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.hashCode()I: I22 Branch 65 IFLE L625 - true
   * 4 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.hashCode()I: I22 Branch 65 IFLE L625 - false
   * 5 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L626 - true
   * 6 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L626 - false
   * 7 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.hashCode()I: I34 Branch 67 IF_ACMPEQ L626 - false
   * 8 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.adjustOrPutValue(Ljava/lang/Object;BB)B: I9 Branch 41 IFGE L456 - true
   * 9 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.adjustOrPutValue(Ljava/lang/Object;BB)B: I52 Branch 42 IFEQ L466 - false
   */

  @Test
  public void test37()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectByteCustomHashMap<String> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<String>((HashingStrategy<? super String>) identityHashingStrategy0);
      tObjectByteCustomHashMap0.adjustOrPutValue("-32", (byte) (-32), (byte) (-32));
      int int0 = tObjectByteCustomHashMap0.hashCode();
      assertEquals(false, tObjectByteCustomHashMap0.isEmpty());
      assertEquals((-44884), int0);
  }

  //Test case number: 38
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I51 Branch 71 IF_ACMPEQ L1108 - false
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 69 IFLE L1107 - true
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I37 Branch 69 IFLE L1107 - false
   * 4 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I45 Branch 70 IF_ACMPEQ L1108 - false
   * 5 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I51 Branch 71 IF_ACMPEQ L1108 - true
   */

  @Test
  public void test38()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, 0, (float) 0, (byte) (-7));
      tObjectByteCustomHashMap0.putIfAbsent((Integer) 0, (byte) (-7));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tObjectByteCustomHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(1, tObjectByteCustomHashMap0.size());
      assertEquals("{0=-7}", tObjectByteCustomHashMap0.toString());
  }

  //Test case number: 39
  /*
   * 23 covered goals:
   * 1 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$2.execute(Ljava/lang/Object;B)Z: I4 Branch 102 IFEQ L1151 - true
   * 2 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$2.execute(Ljava/lang/Object;B)Z: I4 Branch 102 IFEQ L1151 - false
   * 3 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.toString()Ljava/lang/String;: root-Branch
   * 4 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.setUp(I)I: root-Branch
   * 5 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.put(Ljava/lang/Object;B)B: root-Branch
   * 6 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectByteProcedure;)Z: I18 Branch 47 IFLE L518 - true
   * 7 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectByteProcedure;)Z: I18 Branch 47 IFLE L518 - false
   * 8 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectByteProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - true
   * 9 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectByteProcedure;)Z: I25 Branch 48 IF_ACMPEQ L519 - false
   * 10 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectByteProcedure;)Z: I30 Branch 49 IF_ACMPEQ L519 - false
   * 11 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.forEachEntry(Lgnu/trove/procedure/TObjectByteProcedure;)Z: I39 Branch 50 IFNE L519 - true
   * 12 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - true
   * 13 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.rehash(I)V: I49 Branch 11 IFLE L199 - false
   * 14 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - true
   * 15 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.rehash(I)V: I60 Branch 12 IF_ACMPEQ L201 - false
   * 16 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.rehash(I)V: I63 Branch 13 IF_ACMPEQ L201 - false
   * 17 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.rehash(I)V: I73 Branch 14 IFGE L203 - true
   * 18 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.<init>(Lgnu/trove/strategy/HashingStrategy;IFB)V: I24 Branch 8 IFEQ L134 - false
   * 19 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.putIfAbsent(Ljava/lang/Object;B)B: I9 Branch 20 IFGE L259 - true
   * 20 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.doPut(BI)B: I12 Branch 21 IFGE L268 - true
   * 21 gnu.trove.map.custom_hash.TObjectByteCustomHashMap.doPut(BI)B: I41 Branch 22 IFEQ L276 - false
   * 22 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$1.<init>(Lgnu/trove/map/custom_hash/TObjectByteCustomHashMap;)V: root-Branch
   * 23 gnu.trove.map.custom_hash.TObjectByteCustomHashMap$2.<init>(Lgnu/trove/map/custom_hash/TObjectByteCustomHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   */

  @Test
  public void test39()  throws Throwable  {
      IdentityHashingStrategy<Integer> identityHashingStrategy0 = new IdentityHashingStrategy<Integer>();
      TObjectByteCustomHashMap<Integer> tObjectByteCustomHashMap0 = new TObjectByteCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, (-10), (float) (-10), (byte) (-7));
      tObjectByteCustomHashMap0.putIfAbsent((Integer) (-10), (byte) (-7));
      tObjectByteCustomHashMap0.put((Integer) 516674182, (byte) (-7));
      String string0 = tObjectByteCustomHashMap0.toString();
      assertEquals(2, tObjectByteCustomHashMap0.size());
      assertEquals("{-10=-7,516674182=-7}", string0);
  }
}

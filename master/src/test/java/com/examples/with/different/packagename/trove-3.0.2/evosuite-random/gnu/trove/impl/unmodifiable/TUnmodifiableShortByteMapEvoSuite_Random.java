/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortSet;
import gnu.trove.map.TShortByteMap;
import gnu.trove.map.hash.TShortByteHashMap;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableShortByteMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


//   @Test
//   public void test0()  throws Throwable  {
//       int int0 = 31;
//       short short0 = (short)606;
//       byte byte0 = (byte)0;
//       TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(int0, (float) int0, short0, byte0);
//       TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
//       assertEquals(0, tUnmodifiableShortByteMap0.getNoEntryValue());
//   }

  @Test
  public void test1()  throws Throwable  {
      int int0 = 1638;
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(int0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-6);
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-74);
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-81);
      byteArray0[4] = byte4;
      byte byte5 = (byte)0;
      byteArray0[5] = byte5;
      tShortByteHashMap0.values(byteArray0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap1 = new TUnmodifiableShortByteMap((TShortByteMap) tUnmodifiableShortByteMap0);
      tUnmodifiableShortByteMap1.getNoEntryKey();
      int int1 = 2001;
      tUnmodifiableShortByteMap1.toString();
      float float0 = 1715.598F;
      // Undeclared exception!
      try {
        tUnmodifiableShortByteMap1.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      short[] shortArray0 = new short[4];
      short short0 = (short)146;
      shortArray0[0] = short0;
      short short1 = (short)760;
      shortArray0[1] = short1;
      short short2 = (short)0;
      shortArray0[2] = short2;
      short short3 = (short)1997;
      shortArray0[3] = short3;
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      float float0 = 1.0F;
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap((int) byte0, float0, shortArray0[2], byte0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      tUnmodifiableShortByteMap0.getNoEntryKey();
      TShortByteHashMap tShortByteHashMap1 = new TShortByteHashMap(shortArray0, byteArray0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap1 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap1);
      // Undeclared exception!
      try {
        tUnmodifiableShortByteMap1.increment(short0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = 669;
      float float0 = 0.0F;
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(int0, float0);
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)102;
      byteArray0[0] = byte0;
      byte byte1 = (byte)75;
      byteArray0[1] = byte1;
      byte byte2 = (byte)51;
      byteArray0[2] = byte2;
      byte byte3 = (byte)122;
      byteArray0[3] = byte3;
      byte byte4 = (byte)90;
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-80);
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-44);
      byteArray0[6] = byte6;
      tShortByteHashMap0._states = byteArray0;
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      short short0 = (short)917;
      // Undeclared exception!
      try {
        tUnmodifiableShortByteMap0.increment(short0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 141;
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap1 = new TUnmodifiableShortByteMap((TShortByteMap) tUnmodifiableShortByteMap0);
      short short0 = (short)289;
      byte byte0 = (byte)103;
      // Undeclared exception!
      try {
        tUnmodifiableShortByteMap0.putIfAbsent(short0, byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortByteMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      short[] shortArray0 = new short[10];
      short short0 = (short)1;
      shortArray0[0] = short0;
      short short1 = (short)1783;
      shortArray0[1] = short1;
      short short2 = (short) (-1);
      shortArray0[2] = short2;
      short short3 = (short)1759;
      shortArray0[3] = short3;
      short short4 = (short) (-1);
      shortArray0[4] = short4;
      short short5 = (short)0;
      shortArray0[5] = short5;
      short short6 = (short)0;
      shortArray0[6] = short6;
      short short7 = (short)0;
      shortArray0[7] = short7;
      short short8 = (short)0;
      shortArray0[8] = short8;
      short short9 = (short)25717;
      shortArray0[9] = short9;
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)23;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-52);
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-36);
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-71);
      byteArray0[3] = byte3;
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(shortArray0, byteArray0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      TShortByteHashMap tShortByteHashMap1 = new TShortByteHashMap((TShortByteMap) tUnmodifiableShortByteMap0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap1 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap1);
      short short10 = (short)0;
      tUnmodifiableShortByteMap1.get(short10);
      TShortByteMap tShortByteMap0 = null;
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap2 = null;
      try {
        tUnmodifiableShortByteMap2 = new TUnmodifiableShortByteMap(tShortByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = 0;
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(int0);
      InputStream inputStream0 = null;
      tShortByteHashMap0.getAutoCompactionFactor();
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      tUnmodifiableShortByteMap0.toString();
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(inputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      short[] shortArray0 = new short[3];
      short short0 = (short) (-1705);
      shortArray0[0] = short0;
      short short1 = (short)131;
      shortArray0[1] = short1;
      short short2 = (short) (-967);
      shortArray0[2] = short2;
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte) (-47);
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte)114;
      byteArray0[2] = byte2;
      byte byte3 = (byte)90;
      byteArray0[3] = byte3;
      byte byte4 = (byte)0;
      byteArray0[4] = byte4;
      byte byte5 = (byte)109;
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-46);
      byteArray0[6] = byte6;
      byte byte7 = (byte)21;
      byteArray0[7] = byte7;
      byte byte8 = (byte)0;
      byteArray0[8] = byte8;
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(shortArray0, byteArray0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      boolean boolean0 = tUnmodifiableShortByteMap0.isEmpty();
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 0;
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(int0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      TShortByteMap tShortByteMap0 = null;
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap1 = null;
      try {
        tUnmodifiableShortByteMap1 = new TUnmodifiableShortByteMap(tShortByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = 121;
      int int1 = (-1983);
      int int2 = (-852);
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(int2);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      tUnmodifiableShortByteMap0.toString();
      TShortByteHashMap tShortByteHashMap1 = new TShortByteHashMap(int1);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap1 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap1);
      tUnmodifiableShortByteMap1.iterator();
      short short0 = (short)38;
      byte byte0 = (byte)54;
      // Undeclared exception!
      try {
        tUnmodifiableShortByteMap1.put(short0, byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = (-1);
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(int0, int0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      short short0 = (short)56;
      // Undeclared exception!
      try {
        tUnmodifiableShortByteMap0.increment(short0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      short[] shortArray0 = new short[2];
      short short0 = (short)158;
      shortArray0[0] = short0;
      short short1 = (short)1460;
      shortArray0[1] = short1;
      byte[] byteArray0 = new byte[10];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)114;
      byteArray0[1] = byte1;
      byte byte2 = (byte)92;
      byteArray0[2] = byte2;
      byte byte3 = (byte)108;
      byteArray0[3] = byte3;
      byte byte4 = (byte)18;
      byteArray0[4] = byte4;
      byte byte5 = (byte)25;
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-58);
      byteArray0[6] = byte6;
      byte byte7 = (byte) (-90);
      byteArray0[7] = byte7;
      byte byte8 = (byte)82;
      byteArray0[8] = byte8;
      byte byte9 = (byte) (-89);
      byteArray0[9] = byte9;
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(shortArray0, byteArray0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      int int0 = 1;
      short short2 = (short)0;
      byte byte10 = (byte)0;
      TShortByteHashMap tShortByteHashMap1 = new TShortByteHashMap(int0, (float) int0, short2, byte10);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap1 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap1);
      short short3 = (short)565;
      // Undeclared exception!
      try {
        tUnmodifiableShortByteMap1.put(short3, byte10);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = 1067;
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(int0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap1 = new TUnmodifiableShortByteMap((TShortByteMap) tUnmodifiableShortByteMap0);
      // Undeclared exception!
      try {
        tUnmodifiableShortByteMap1.putAll((TShortByteMap) tUnmodifiableShortByteMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      byte[] byteArray0 = new byte[10];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-27);
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-9);
      byteArray0[2] = byte2;
      byte byte3 = (byte)44;
      byteArray0[3] = byte3;
      byte byte4 = (byte)0;
      byteArray0[4] = byte4;
      byte byte5 = (byte)1;
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-109);
      byteArray0[6] = byte6;
      byte byte7 = (byte)1;
      byteArray0[7] = byte7;
      byte byte8 = (byte)18;
      byteArray0[8] = byte8;
      byte byte9 = (byte) (-17);
      byteArray0[9] = byte9;
      tShortByteHashMap0._states = byteArray0;
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      short short0 = (short)336;
      short short1 = (short)0;
      tUnmodifiableShortByteMap0.containsKey(short1);
      tUnmodifiableShortByteMap0.containsKey(short0);
      // Undeclared exception!
      try {
        tUnmodifiableShortByteMap0.hashCode();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 22
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = (-916);
      int int1 = 665;
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(int1);
      TShortByteHashMap tShortByteHashMap1 = new TShortByteHashMap((TShortByteMap) tShortByteHashMap0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap1);
      tUnmodifiableShortByteMap0.getNoEntryKey();
      TShortByteHashMap tShortByteHashMap2 = new TShortByteHashMap(int0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap1 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap2);
      tUnmodifiableShortByteMap1.values(tShortByteHashMap2._states);
      TUnmodifiableShortSet tUnmodifiableShortSet0 = (TUnmodifiableShortSet)tUnmodifiableShortByteMap1.keySet();
      assertEquals(0, tUnmodifiableShortSet0.size());
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = (-1864);
      TShortByteMap tShortByteMap0 = null;
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = null;
      try {
        tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap(tShortByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      TShortByteMap tShortByteMap0 = null;
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = null;
      try {
        tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap(tShortByteMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      int int0 = 1247;
      int int1 = (-1);
      short short0 = (short)21915;
      byte byte0 = (byte)0;
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(int1, (float) int0, short0, byte0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      TShortByteHashMap tShortByteHashMap1 = new TShortByteHashMap(int0);
      tShortByteHashMap1.capacity();
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap1 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap1);
      // Undeclared exception!
      try {
        tUnmodifiableShortByteMap1.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

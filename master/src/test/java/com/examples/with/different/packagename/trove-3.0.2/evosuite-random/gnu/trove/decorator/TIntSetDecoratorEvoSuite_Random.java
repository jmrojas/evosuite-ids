/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TIntSetDecorator;
import gnu.trove.set.TIntSet;
import gnu.trove.set.hash.TIntHashSet;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.lang.reflect.Array;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Collection;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Locale;
import java.util.TreeSet;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

public class TIntSetDecoratorEvoSuite_Random {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TIntSetDecorator tIntSetDecorator0 = new TIntSetDecorator();
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      // Undeclared exception!
      try {
        tIntSetDecorator0.removeAll((Collection<?>) hashSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      HashSet<Integer> hashSet0 = new HashSet<Integer>();
      TIntSetDecorator tIntSetDecorator0 = new TIntSetDecorator();
      int int0 = 0;
      Integer integer0 = new Integer(int0);
      // Undeclared exception!
      try {
        tIntSetDecorator0.iterator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TIntSet tIntSet0 = null;
      TIntSetDecorator tIntSetDecorator0 = new TIntSetDecorator(tIntSet0);
      TreeSet<Integer> treeSet0 = new TreeSet<Integer>();
      // Undeclared exception!
      try {
        tIntSetDecorator0.retainAll((Collection<?>) treeSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TIntSetDecorator tIntSetDecorator0 = new TIntSetDecorator();
      TIntHashSet tIntHashSet0 = null;
      try {
        tIntHashSet0 = new TIntHashSet((Collection<? extends Integer>) tIntSetDecorator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TIntSetDecorator tIntSetDecorator0 = new TIntSetDecorator();
      String string0 = "at offset ";
      try {
        Integer.decode(string0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"at offset \"
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TIntSetDecorator tIntSetDecorator0 = new TIntSetDecorator();
      // Undeclared exception!
      try {
        tIntSetDecorator0.toArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = (-330);
      TIntHashSet tIntHashSet0 = new TIntHashSet(int0, int0);
      TIntSetDecorator tIntSetDecorator0 = new TIntSetDecorator((TIntSet) tIntHashSet0);
      String string0 = "50+tG#)";
      URI.create(string0);
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: 50+tG#)://50+tG#)50+tG%23)#50+tG%23)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TIntSet tIntSet0 = null;
      TIntSetDecorator tIntSetDecorator0 = new TIntSetDecorator(tIntSet0);
      // Undeclared exception!
      try {
        tIntSetDecorator0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TIntSetDecorator tIntSetDecorator0 = new TIntSetDecorator();
      Integer[] integerArray0 = new Integer[10];
      int int0 = (-1614);
      Integer integer0 = new Integer(int0);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer1;
      int int1 = 1163;
      Integer integer2 = new Integer(int1);
      integerArray0[2] = integer2;
      int int2 = 611;
      Integer integer3 = new Integer(int2);
      integerArray0[3] = integer3;
      String string0 = "";
      Integer integer4 = Integer.getInteger(string0, (int) integer0);
      integerArray0[4] = integer4;
      int int3 = 0;
      Integer integer5 = Integer.valueOf(int3);
      integerArray0[5] = integer5;
      Integer integer6 = Integer.getInteger(string0, (int) integerArray0[0]);
      integerArray0[6] = integer6;
      Integer integer7 = new Integer(int2);
      integerArray0[7] = integer7;
      int int4 = 995;
      Integer integer8 = new Integer(int4);
      integerArray0[8] = integer8;
      Integer integer9 = new Integer((int) integerArray0[3]);
      integerArray0[9] = integer9;
      // Undeclared exception!
      try {
        tIntSetDecorator0.toArray(integerArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TIntSetDecorator tIntSetDecorator0 = new TIntSetDecorator();
      TIntSet tIntSet0 = tIntSetDecorator0.getSet();
      tIntSetDecorator0.getSet();
      TIntSetDecorator tIntSetDecorator1 = new TIntSetDecorator(tIntSet0);
      Locale locale0 = Locale.CANADA_FRENCH;
      // Undeclared exception!
      try {
        tIntSetDecorator1.containsAll((Collection<?>) tIntSetDecorator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TIntSetDecorator tIntSetDecorator0 = new TIntSetDecorator();
      LinkedHashSet<String>[] linkedHashSetArray0 = (LinkedHashSet<String>[]) Array.newInstance(LinkedHashSet.class, 10);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSetArray0[0] = linkedHashSet0;
      LinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();
      linkedHashSetArray0[1] = linkedHashSet1;
      LinkedHashSet<String> linkedHashSet2 = new LinkedHashSet<String>();
      linkedHashSetArray0[2] = linkedHashSet2;
      LinkedHashSet<String> linkedHashSet3 = new LinkedHashSet<String>();
      linkedHashSetArray0[3] = linkedHashSet3;
      int int0 = 1535;
      LinkedHashSet<String> linkedHashSet4 = new LinkedHashSet<String>(int0, int0);
      linkedHashSetArray0[4] = linkedHashSet4;
      LinkedHashSet<String> linkedHashSet5 = new LinkedHashSet<String>();
      linkedHashSetArray0[5] = linkedHashSet5;
      LinkedHashSet<String> linkedHashSet6 = new LinkedHashSet<String>();
      linkedHashSetArray0[6] = linkedHashSet6;
      LinkedHashSet<String> linkedHashSet7 = new LinkedHashSet<String>();
      linkedHashSetArray0[7] = linkedHashSet7;
      LinkedHashSet<String> linkedHashSet8 = new LinkedHashSet<String>();
      linkedHashSetArray0[8] = linkedHashSet8;
      LinkedHashSet<String> linkedHashSet9 = new LinkedHashSet<String>();
      linkedHashSetArray0[9] = linkedHashSet9;
      // Undeclared exception!
      try {
        tIntSetDecorator0.toArray(linkedHashSetArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TIntSetDecorator tIntSetDecorator0 = new TIntSetDecorator();
      TIntSet tIntSet0 = tIntSetDecorator0.getSet();
      TIntSetDecorator tIntSetDecorator1 = new TIntSetDecorator(tIntSet0);
      String string0 = "|P{i)";
      PrintStream printStream0 = null;
      try {
        printStream0 = new PrintStream(string0, string0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
         //
         // |P{i)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TIntSetDecorator tIntSetDecorator0 = new TIntSetDecorator();
      TIntSet tIntSet0 = tIntSetDecorator0.getSet();
      TIntSetDecorator tIntSetDecorator1 = new TIntSetDecorator(tIntSet0);
      TIntSet tIntSet1 = tIntSetDecorator0.getSet();
      assertNull(tIntSet1);
  }

  @Test
  public void test13()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          TIntSetDecorator tIntSetDecorator0 = new TIntSetDecorator();
          String string0 = "TxhG'*W(-Sv3^C;yw{";
          // Undeclared exception!
          try {
            File.createTempFile(string0, string0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Unable to create temporary file
             //
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test14()  throws Throwable  {
      TIntSetDecorator tIntSetDecorator0 = new TIntSetDecorator();
      String string0 = "tNm1aF5)ZK1n4'aW/";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: tNm1aF5)ZK1n4'aW/://tNm1aF5)ZK1n4'aW/tNm1aF5)ZK1n4'aW/#tNm1aF5)ZK1n4'aW/
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TIntSetDecorator tIntSetDecorator0 = new TIntSetDecorator();
      HashSet<HashSet<Object>> hashSet0 = new HashSet<HashSet<Object>>();
      // Undeclared exception!
      try {
        tIntSetDecorator0.retainAll((Collection<?>) hashSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      TIntSet tIntSet0 = null;
      TIntSetDecorator tIntSetDecorator0 = new TIntSetDecorator(tIntSet0);
      Locale locale0 = Locale.ROOT;
      String string0 = "0*O%D<[";
      // Undeclared exception!
      try {
        locale0.getUnicodeLocaleType(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Ill-formed Unicode locale key: 0*O%D<[
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      TIntSetDecorator tIntSetDecorator0 = new TIntSetDecorator();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      // Undeclared exception!
      try {
        tIntSetDecorator0.retainAll((Collection<?>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      TIntSetDecorator tIntSetDecorator0 = new TIntSetDecorator();
      int int0 = 364;
      PipedInputStream pipedInputStream0 = new PipedInputStream(int0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
      }
  }

  @Test
  public void test19()  throws Throwable  {
      TIntSetDecorator tIntSetDecorator0 = new TIntSetDecorator();
      int int0 = 0;
      float float0 = (-983.45123F);
      TIntHashSet tIntHashSet0 = new TIntHashSet(int0, float0);
      String string0 = tIntHashSet0.toString();
      // Undeclared exception!
      try {
        tIntSetDecorator0.equals((Object) string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection;
import gnu.trove.map.TFloatShortMap;
import gnu.trove.map.hash.TFloatShortHashMap;
import gnu.trove.procedure.TFloatProcedure;
import gnu.trove.procedure.TFloatShortProcedure;
import gnu.trove.procedure.TShortProcedure;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableFloatShortMapEvoSuite_StrongMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 6 covered goals:
   * 1 Strong Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.isEmpty()Z:64 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.isEmpty()Z: root-Branch
   * 3 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.<init>(Lgnu/trove/map/TFloatShortMap;)V:58 - ReplaceComparisonOperator != null -> = null
   * 4 Strong Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.isEmpty()Z:64 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 5 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.<init>(Lgnu/trove/map/TFloatShortMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap((-1), (float) (-1), (float) (-1), (short) (-940));
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      float[] floatArray0 = new float[8];
      floatArray0[0] = (-942.26245F);
      floatArray0[0] = (-127.85212F);
      tUnmodifiableFloatShortMap0.isEmpty();
      floatArray0[0] = 0.0F;
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   */

  @Test
  public void test1()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap((-1), (float) (-1), (float) (-1), (short) (-940));
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      boolean boolean0 = tUnmodifiableFloatShortMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 Strong Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.containsKey(F)Z:65 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.containsKey(F)Z: root-Branch
   * 3 Strong Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.containsKey(F)Z:65 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   */

  @Test
  public void test2()  throws Throwable  {
      float[] floatArray0 = new float[4];
      floatArray0[1] = (float) 0;
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap();
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      tUnmodifiableFloatShortMap0.containsKey(863.5736F);
      floatArray0[1] = (float) (short) (-1483);
  }

  //Test case number: 3
  /*
   * 4 covered goals:
   * 1 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.containsKey(F)Z:65 - DeleteStatement: containsKey(F)Z
   * 2 Strong Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.containsKey(F)Z:65 - InsertUnaryOp Negation of key
   * 3 Strong Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.containsKey(F)Z:65 - InsertUnaryOp Negation of key
   * 4 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.containsKey(F)Z:65 - DeleteStatement: containsKey(F)Z
   */

  @Test
  public void test3()  throws Throwable  {
      float[] floatArray0 = new float[9];
      floatArray0[0] = (-1.0F);
      short[] shortArray0 = new short[1];
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(floatArray0, shortArray0);
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      boolean boolean0 = tUnmodifiableFloatShortMap0.containsKey((-1.0F));
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * 1 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.containsValue(S)Z:66 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 2 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.containsValue(S)Z:66 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.containsValue(S)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap((-1), (float) (-1), (float) (-1), (short) (-940));
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      float[] floatArray0 = new float[8];
      floatArray0[0] = (-942.26245F);
      tUnmodifiableFloatShortMap0.containsValue((short) (-940));
      floatArray0[0] = (-127.85212F);
  }

  //Test case number: 5
  /*
   * 6 covered goals:
   * 1 Strong Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.containsValue(S)Z:66 - InsertUnaryOp IINC 1 val
   * 2 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.containsValue(S)Z:66 - InsertUnaryOp Negation of val
   * 3 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.containsValue(S)Z:66 - InsertUnaryOp Negation of val
   * 4 Strong Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.containsValue(S)Z:66 - InsertUnaryOp IINC -1 val
   * 5 Strong Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.containsValue(S)Z:66 - InsertUnaryOp IINC 1 val
   * 6 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.containsValue(S)Z:66 - DeleteStatement: containsValue(S)Z
   */

  @Test
  public void test5()  throws Throwable  {
      float[] floatArray0 = new float[7];
      short[] shortArray0 = new short[7];
      shortArray0[6] = (short)32767;
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(floatArray0, shortArray0);
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      boolean boolean0 = tUnmodifiableFloatShortMap0.containsValue((short)32767);
      assertEquals(true, boolean0);
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * 1 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.containsValue(S)Z:66 - DeleteStatement: containsValue(S)Z
   * 2 Strong Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.containsValue(S)Z:66 - InsertUnaryOp IINC -1 val
   * 3 Strong Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.containsValue(S)Z:66 - InsertUnaryOp IINC 1 val
   */

  @Test
  public void test6()  throws Throwable  {
      float[] floatArray0 = new float[7];
      short[] shortArray0 = new short[7];
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(floatArray0, shortArray0);
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      boolean boolean0 = tUnmodifiableFloatShortMap0.containsValue((short)0);
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 4 covered goals:
   * 1 Strong Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.get(F)S:67 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.get(F)S: root-Branch
   * 3 Strong Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.get(F)S:67 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 4 Strong Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.get(F)S:67 - DeleteStatement: get(F)S
   */

  @Test
  public void test7()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap((-1), (float) (-1), (float) (-1), (short) (-940));
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      float[] floatArray0 = new float[8];
      floatArray0[0] = (-942.26245F);
      tUnmodifiableFloatShortMap0.get((-1460.7819F));
      floatArray0[0] = (-127.85212F);
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 Strong Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.get(F)S:67 - InsertUnaryOp Negation of key
   * 2 Strong Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.get(F)S:67 - DeleteStatement: get(F)S
   * 3 Strong Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.get(F)S:67 - InsertUnaryOp Negation of key
   */

  @Test
  public void test8()  throws Throwable  {
      float[] floatArray0 = new float[1];
      floatArray0[0] = (-1349.8932F);
      short[] shortArray0 = new short[4];
      shortArray0[0] = (short) (-1988);
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(floatArray0, shortArray0);
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      tUnmodifiableFloatShortMap0.get((float) (short)0);
      short[] shortArray1 = new short[9];
      shortArray1[0] = (short) (-1);
      TFloatShortHashMap tFloatShortHashMap1 = new TFloatShortHashMap(floatArray0, shortArray1);
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap1 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap1);
      assertFalse(tUnmodifiableFloatShortMap1.equals(tUnmodifiableFloatShortMap0));
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.keys()[F:83 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 2 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.keys()[F:83 - DeleteStatement: keys()[F
   * 3 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.keys()[F:83 - DeleteStatement: keys()[F
   * 4 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.keys()[F:83 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.keys()[F: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap((-73), (float) (-73), (float) (-73), (short)0);
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      float[] floatArray0 = tUnmodifiableFloatShortMap0.keys();
      assertNotNull(floatArray0);
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.keys([F)[F:84 - DeleteStatement: keys([F)[F
   * 2 Strong Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.keys([F)[F:84 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 3 Strong Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.keys([F)[F:84 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 4 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.keys([F)[F:84 - DeleteStatement: keys([F)[F
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.keys([F)[F: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap();
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      float[] floatArray0 = tUnmodifiableFloatShortMap0.keys(tFloatShortHashMap0._set);
      assertNotNull(floatArray0);
  }

  //Test case number: 11
  /*
   * 5 covered goals:
   * 1 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.values()[S:91 - DeleteStatement: values()[S
   * 2 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.values()[S:91 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 3 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.values()[S:91 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 4 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.values()[S:91 - DeleteStatement: values()[S
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.values()[S: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap();
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      short[] shortArray0 = tUnmodifiableFloatShortMap0.values();
      assertNotNull(shortArray0);
  }

  //Test case number: 12
  /*
   * 5 covered goals:
   * 1 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.values([S)[S:92 - DeleteStatement: values([S)[S
   * 2 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.values([S)[S:92 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 3 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.values([S)[S:92 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 4 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.values([S)[S:92 - DeleteStatement: values([S)[S
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.values([S)[S: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap((-73), (float) (-73), (float) (-73), (short)0);
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      short[] shortArray0 = new short[9];
      short[] shortArray1 = tUnmodifiableFloatShortMap0.values(shortArray0);
      assertSame(shortArray1, shortArray0);
  }

  //Test case number: 13
  /*
   * 7 covered goals:
   * 1 Strong Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 4 Strong Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 5 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 6 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 7 Strong Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   */

  @Test
  public void test13()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap((-1), (float) (-1), (float) (-1), (short) (-940));
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap1 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      boolean boolean0 = tUnmodifiableFloatShortMap1.equals((Object) "\uC601\uC5B4");
      assertTrue(tUnmodifiableFloatShortMap1.equals(tUnmodifiableFloatShortMap0));
      assertEquals(false, boolean0);
  }

  //Test case number: 14
  /*
   * 2 covered goals:
   * 1 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.equals(Ljava/lang/Object;)Z:94 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 2 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.equals(Ljava/lang/Object;)Z:94 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   */

  @Test
  public void test14()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap((-1), (float) (-1), (float) (-1), (short) (-940));
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      float[] floatArray0 = new float[8];
      floatArray0[0] = (-942.26245F);
      tUnmodifiableFloatShortMap0.equals((Object) "\uC601\uC5B4");
      floatArray0[0] = (-127.85212F);
  }

  //Test case number: 15
  /*
   * 3 covered goals:
   * 1 Strong Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   * 2 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 3 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test15()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap((-1), (float) (-1), (float) (-1), (short) (-940));
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      boolean boolean0 = tUnmodifiableFloatShortMap0.equals((Object) "\uC601\uC5B4");
      assertEquals(false, boolean0);
  }

  //Test case number: 16
  /*
   * 3 covered goals:
   * 1 Strong Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.hashCode()I:95 - DeleteStatement: hashCode()I
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.hashCode()I: root-Branch
   * 3 Strong Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.hashCode()I:95 - DeleteStatement: hashCode()I
   */

  @Test
  public void test16()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap((-1), (float) (-1), (float) (-1), (short) (-940));
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      tFloatShortHashMap0.adjustOrPutValue((-957.9855F), (short) (-1302), (short) (-1302));
      int int0 = tUnmodifiableFloatShortMap0.hashCode();
      assertEquals(753663678, int0);
  }

  //Test case number: 17
  /*
   * 2 covered goals:
   * 1 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.hashCode()I:95 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 2 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.hashCode()I:95 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   */

  @Test
  public void test17()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap((-1), (float) (-1), (float) (-1), (short) (-940));
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      float[] floatArray0 = new float[8];
      floatArray0[0] = (-942.26245F);
      tUnmodifiableFloatShortMap0.hashCode();
      floatArray0[0] = (-127.85212F);
  }

  //Test case number: 18
  /*
   * 5 covered goals:
   * 1 Strong Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 2 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 3 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 4 Strong Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap((-1));
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      String string0 = tUnmodifiableFloatShortMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 19
  /*
   * 3 covered goals:
   * 1 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.getNoEntryKey()F:97 - DeleteStatement: getNoEntryKey()F
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.getNoEntryKey()F: root-Branch
   * 3 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.getNoEntryKey()F:97 - DeleteStatement: getNoEntryKey()F
   */

//   @Test
//   public void test19()  throws Throwable  {
//       TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(0, (-1.0F), (-1456.7107F), (short) (-1));
//       TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
//       float float0 = tUnmodifiableFloatShortMap0.getNoEntryKey();
//       assertEquals((-1456.7107F), float0, 0.01F);
//   }

  //Test case number: 20
  /*
   * 2 covered goals:
   * 1 Strong Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.getNoEntryKey()F:97 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 2 Strong Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.getNoEntryKey()F:97 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   */

  @Test
  public void test20()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap();
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      float[] floatArray0 = new float[9];
      floatArray0[2] = 0.0F;
      tUnmodifiableFloatShortMap0.getNoEntryKey();
      floatArray0[2] = (float) (short)1302;
  }

  //Test case number: 21
  /*
   * 3 covered goals:
   * 1 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.getNoEntryValue()S:98 - DeleteStatement: getNoEntryValue()S
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.getNoEntryValue()S: root-Branch
   * 3 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.getNoEntryValue()S:98 - DeleteStatement: getNoEntryValue()S
   */

  @Test
  public void test21()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(1554, (float) 1554, (float) 1554, (short)240);
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      short short0 = tUnmodifiableFloatShortMap0.getNoEntryValue();
      assertEquals((short)240, short0);
  }

  //Test case number: 22
  /*
   * 2 covered goals:
   * 1 Strong Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.getNoEntryValue()S:98 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 2 Strong Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.getNoEntryValue()S:98 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   */

  @Test
  public void test22()  throws Throwable  {
      float[] floatArray0 = new float[8];
      floatArray0[0] = (-932.1854F);
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap((-1315), (-932.1854F));
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      tUnmodifiableFloatShortMap0.getNoEntryValue();
      floatArray0[0] = (-127.85212F);
  }

  //Test case number: 23
  /*
   * 5 covered goals:
   * 1 Strong Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z:101 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 2 Strong Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z
   * 3 Strong Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z
   * 4 Strong Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z:101 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap((-1), (float) (-1), (float) (-1), (short) (-940));
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      float[] floatArray0 = new float[8];
      floatArray0[0] = (-942.26245F);
      tUnmodifiableFloatShortMap0.forEachKey((TFloatProcedure) null);
      floatArray0[0] = (-127.85212F);
  }

  //Test case number: 24
  /*
   * 3 covered goals:
   * 1 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   * 3 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z
   */

  @Test
  public void test24()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(1554, (float) 1554, (float) 1554, (short)240);
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      boolean boolean0 = tUnmodifiableFloatShortMap0.forEachValue((TShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 25
  /*
   * 3 covered goals:
   * 1 Strong Mutation 63: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.forEachEntry(Lgnu/trove/procedure/TFloatShortProcedure;)Z:107 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TFloatShortProcedure;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.forEachEntry(Lgnu/trove/procedure/TFloatShortProcedure;)Z: root-Branch
   * 3 Strong Mutation 63: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.forEachEntry(Lgnu/trove/procedure/TFloatShortProcedure;)Z:107 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TFloatShortProcedure;)Z
   */

  @Test
  public void test25()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(1683, (float) 1683, (float) 1683, (short)1101);
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      boolean boolean0 = tUnmodifiableFloatShortMap0.forEachEntry((TFloatShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 26
  /*
   * 17 covered goals:
   * 1 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap$1.key()F:114 - DeleteStatement: key()F
   * 2 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap$1.key()F:114 - DeleteField: iterLgnu/trove/iterator/TFloatShortIterator;
   * 3 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap$1.key()F:114 - DeleteStatement: key()F
   * 4 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap$1.value()S:115 - DeleteField: iterLgnu/trove/iterator/TFloatShortIterator;
   * 5 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TFloatShortIterator;
   * 6 Strong Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap$1.advance()V:116 - DeleteStatement: advance()V
   * 7 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TFloatShortIterator;
   * 8 Strong Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 9 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.size()I:63 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 10 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.size()I:63 - DeleteStatement: size()I
   * 11 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap$1.value()S: root-Branch
   * 12 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableFloatShortMap;)V: root-Branch
   * 13 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap$1.advance()V: root-Branch
   * 14 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap$1.hasNext()Z: root-Branch
   * 15 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap$1.key()F: root-Branch
   * 16 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.size()I: root-Branch
   * 17 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.iterator()Lgnu/trove/iterator/TFloatShortIterator;: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      float[] floatArray0 = new float[4];
      floatArray0[1] = (float) 0;
      short[] shortArray0 = new short[9];
      floatArray0[1] = (float) (short) (-1483);
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(floatArray0, shortArray0);
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      TFloatShortHashMap tFloatShortHashMap1 = new TFloatShortHashMap((TFloatShortMap) tUnmodifiableFloatShortMap0);
      assertEquals("{-1483.0=0, 0.0=0}", tFloatShortHashMap1.toString());
  }

  //Test case number: 27
  /*
   * 2 covered goals:
   * 1 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap$1.value()S:115 - DeleteStatement: value()S
   * 2 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap$1.value()S:115 - DeleteStatement: value()S
   */

  @Test
  public void test27()  throws Throwable  {
      float[] floatArray0 = new float[4];
      short[] shortArray0 = new short[9];
      shortArray0[3] = (short)2019;
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(floatArray0, shortArray0);
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      TFloatShortHashMap tFloatShortHashMap1 = new TFloatShortHashMap((TFloatShortMap) tUnmodifiableFloatShortMap0);
      assertEquals("{0.0=2019}", tFloatShortHashMap1.toString());
      assertEquals(1, tUnmodifiableFloatShortMap0.size());
  }

  //Test case number: 28
  /*
   * 8 covered goals:
   * 1 Strong Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 2 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap$1.key()F:114 - DeleteField: iterLgnu/trove/iterator/TFloatShortIterator;
   * 3 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap$1.value()S:115 - DeleteField: iterLgnu/trove/iterator/TFloatShortIterator;
   * 4 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TFloatShortIterator;
   * 5 Strong Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap$1.advance()V:116 - DeleteStatement: advance()V
   * 6 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TFloatShortIterator;
   * 7 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.size()I:63 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 8 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.size()I:63 - DeleteStatement: size()I
   */

  @Test
  public void test28()  throws Throwable  {
      float[] floatArray0 = new float[4];
      short[] shortArray0 = new short[9];
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(floatArray0, shortArray0);
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      TFloatShortHashMap tFloatShortHashMap1 = new TFloatShortHashMap((TFloatShortMap) tUnmodifiableFloatShortMap0);
      assertEquals(1, tUnmodifiableFloatShortMap0.size());
      assertEquals(1, tFloatShortHashMap1.size());
  }

  //Test case number: 29
  /*
   * 12 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:79 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TFloatSet;
   * 4 Strong Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:80 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 5 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:81 - DeleteField: keySetLgnu/trove/set/TFloatSet;
   * 6 Strong Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TFloatSet;)Lgnu/trove/set/TFloatSet;
   * 7 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:79 - ReplaceComparisonOperator != null -> = null
   * 8 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TFloatSet;
   * 9 Strong Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:80 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 10 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:81 - DeleteField: keySetLgnu/trove/set/TFloatSet;
   * 11 Strong Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TFloatSet;)Lgnu/trove/set/TFloatSet;
   * 12 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.keySet()Lgnu/trove/set/TFloatSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap((-1), (float) (-1), (float) (-1), (short) (-940));
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      TUnmodifiableFloatSet tUnmodifiableFloatSet0 = (TUnmodifiableFloatSet)tUnmodifiableFloatShortMap0.keySet();
      assertNotNull(tUnmodifiableFloatSet0);
      
      TUnmodifiableFloatSet tUnmodifiableFloatSet1 = (TUnmodifiableFloatSet)tUnmodifiableFloatShortMap0.keySet();
      assertSame(tUnmodifiableFloatSet1, tUnmodifiableFloatSet0);
  }

  //Test case number: 30
  /*
   * 13 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.<init>(Lgnu/trove/map/TFloatShortMap;)V:58 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 4 Strong Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TShortCollection;)Lgnu/trove/TShortCollection;
   * 5 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:89 - DeleteField: valuesLgnu/trove/TShortCollection;
   * 6 Strong Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:88 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 7 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TShortCollection;
   * 8 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 9 Strong Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TShortCollection;)Lgnu/trove/TShortCollection;
   * 10 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:89 - DeleteField: valuesLgnu/trove/TShortCollection;
   * 11 Strong Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:88 - DeleteField: mLgnu/trove/map/TFloatShortMap;
   * 12 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TShortCollection;
   * 13 gnu.trove.impl.unmodifiable.TUnmodifiableFloatShortMap.valueCollection()Lgnu/trove/TShortCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test30()  throws Throwable  {
      TFloatShortHashMap tFloatShortHashMap0 = new TFloatShortHashMap(1554, (float) 1554, (float) 1554, (short)240);
      TUnmodifiableFloatShortMap tUnmodifiableFloatShortMap0 = new TUnmodifiableFloatShortMap((TFloatShortMap) tFloatShortHashMap0);
      TUnmodifiableShortCollection tUnmodifiableShortCollection0 = (TUnmodifiableShortCollection)tUnmodifiableFloatShortMap0.valueCollection();
      assertNotNull(tUnmodifiableShortCollection0);
      
      TUnmodifiableShortCollection tUnmodifiableShortCollection1 = (TUnmodifiableShortCollection)tUnmodifiableFloatShortMap0.valueCollection();
      assertSame(tUnmodifiableShortCollection1, tUnmodifiableShortCollection0);
  }
}

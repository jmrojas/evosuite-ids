/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TCharLongMapDecorator;
import gnu.trove.map.TCharLongMap;
import gnu.trove.map.hash.TCharLongHashMap;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.EOFException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.RandomAccessFile;
import java.io.StreamCorruptedException;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.AbstractMap;
import java.util.HashMap;
import java.util.Locale;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

public class TCharLongMapDecoratorEvoSuite_Random {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TCharLongMapDecorator tCharLongMapDecorator0 = new TCharLongMapDecorator();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tCharLongMapDecorator0.writeExternal((ObjectOutput) objectOutputStream0);
      TCharLongMapDecorator tCharLongMapDecorator1 = new TCharLongMapDecorator();
      int int0 = (-1);
      char char0 = ']';
      long long0 = 0L;
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(int0, (float) int0, char0, long0);
      tCharLongMapDecorator1.values();
      tCharLongHashMap0.get(char0);
      tCharLongHashMap0.isEmpty();
      String string0 = tCharLongHashMap0.toString();
      tCharLongMapDecorator1.get((Object) string0);
  }

  @Test
  public void test1()  throws Throwable  {
      TCharLongMap tCharLongMap0 = null;
      TCharLongMapDecorator tCharLongMapDecorator0 = new TCharLongMapDecorator(tCharLongMap0);
      Locale locale0 = Locale.JAPAN;
      String string0 = locale0.getLanguage();
      tCharLongMapDecorator0.get((Object) string0);
      TCharLongMapDecorator tCharLongMapDecorator1 = new TCharLongMapDecorator();
      char char0 = ']';
      Character character0 = Character.valueOf(char0);
      Long long0 = new Long((long) char0);
      // Undeclared exception!
      try {
        tCharLongMapDecorator1.put(character0, long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      char[] charArray0 = new char[1];
      char char0 = 'P';
      charArray0[0] = char0;
      long[] longArray0 = new long[9];
      longArray0[0] = (long) char0;
      TCharLongMapDecorator tCharLongMapDecorator0 = new TCharLongMapDecorator();
      Locale locale0 = Locale.FRANCE;
      String string0 = "";
      // Undeclared exception!
      try {
        locale0.getUnicodeLocaleType(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Ill-formed Unicode locale key: 
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TCharLongMapDecorator tCharLongMapDecorator0 = new TCharLongMapDecorator();
      HashMap<Long, TCharLongHashMap> hashMap0 = new HashMap<Long, TCharLongHashMap>();
      char char0 = '_';
      Character.valueOf(char0);
      long long0 = (-654L);
      Long long1 = new Long(long0);
      String string0 = "";
      int int0 = 1;
      try {
        Long.parseLong(string0, int0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // radix 1 less than Character.MIN_RADIX
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      char[] charArray0 = new char[4];
      char char0 = 'p';
      charArray0[0] = char0;
      char char1 = 'B';
      charArray0[1] = char1;
      char char2 = '1';
      charArray0[2] = char2;
      char char3 = ':';
      charArray0[3] = char3;
      long[] longArray0 = new long[8];
      longArray0[0] = (long) charArray0[0];
      longArray0[1] = (long) charArray0[2];
      longArray0[2] = (long) char0;
      longArray0[3] = (long) charArray0[2];
      longArray0[4] = (long) char1;
      longArray0[5] = (long) charArray0[2];
      longArray0[6] = (long) char2;
      longArray0[7] = (long) char3;
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(charArray0, longArray0);
      TCharLongMapDecorator tCharLongMapDecorator0 = new TCharLongMapDecorator((TCharLongMap) tCharLongHashMap0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((int) char3);
      String string0 = "anBJhiN!$XAMdmTpBT=";
      try {
        byteArrayOutputStream0.toString(string0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
         //
         // anBJhiN!$XAMdmTpBT=
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          TCharLongMapDecorator tCharLongMapDecorator0 = new TCharLongMapDecorator();
          String string0 = "N|+m}$'IC\\g)Z%/";
          String string1 = "1X7q0v{0d? +h8";
          // Undeclared exception!
          try {
            File.createTempFile(string0, string1);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Unable to create temporary file
             //
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test6()  throws Throwable  {
      char[] charArray0 = new char[6];
      char char0 = 'J';
      charArray0[0] = char0;
      char char1 = 'C';
      charArray0[1] = char1;
      char char2 = '0';
      charArray0[2] = char2;
      char char3 = 's';
      charArray0[3] = char3;
      char char4 = '.';
      charArray0[4] = char4;
      char char5 = '(';
      charArray0[5] = char5;
      long[] longArray0 = new long[8];
      longArray0[0] = (long) charArray0[5];
      longArray0[1] = (long) charArray0[5];
      longArray0[2] = (long) char1;
      longArray0[3] = (long) char2;
      longArray0[0] = (long) charArray0[1];
      longArray0[1] = (long) char3;
      longArray0[2] = (long) char0;
      longArray0[3] = (long) charArray0[0];
      longArray0[4] = (long) charArray0[1];
      longArray0[5] = (long) char2;
      longArray0[6] = (long) char3;
      longArray0[7] = (long) char1;
      longArray0[4] = (long) char3;
      longArray0[5] = (long) charArray0[5];
      longArray0[6] = (long) charArray0[0];
      TCharLongMapDecorator tCharLongMapDecorator0 = new TCharLongMapDecorator();
      tCharLongMapDecorator0.entrySet();
      longArray0[7] = (long) char5;
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(charArray0, longArray0);
      TCharLongMapDecorator tCharLongMapDecorator1 = new TCharLongMapDecorator((TCharLongMap) tCharLongHashMap0);
      tCharLongMapDecorator1.isEmpty();
      TCharLongMapDecorator tCharLongMapDecorator2 = new TCharLongMapDecorator();
      // Undeclared exception!
      try {
        tCharLongMapDecorator2.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TCharLongMap tCharLongMap0 = null;
      TCharLongMapDecorator tCharLongMapDecorator0 = new TCharLongMapDecorator(tCharLongMap0);
      String string0 = "";
      // Undeclared exception!
      try {
        File.createTempFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TCharLongMapDecorator tCharLongMapDecorator0 = new TCharLongMapDecorator();
      char[] charArray0 = new char[1];
      char char0 = '0';
      charArray0[0] = char0;
      long[] longArray0 = new long[9];
      longArray0[0] = (long) charArray0[0];
      longArray0[1] = (long) charArray0[0];
      longArray0[2] = (long) char0;
      longArray0[3] = (long) char0;
      longArray0[4] = (long) charArray0[0];
      longArray0[5] = (long) charArray0[0];
      longArray0[6] = (long) charArray0[0];
      longArray0[7] = (long) char0;
      longArray0[8] = (long) char0;
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(charArray0, longArray0);
      TCharLongHashMap tCharLongHashMap1 = new TCharLongHashMap((TCharLongMap) tCharLongHashMap0);
      String string0 = tCharLongHashMap1.toString();
      tCharLongMapDecorator0.get((Object) string0);
      String string1 = "";
      RandomAccessFile randomAccessFile0 = null;
      try {
        randomAccessFile0 = new RandomAccessFile(string1, string1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      char char0 = 'S';
      String string0 = Character.toString(char0);
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: S://SS#S
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[5];
      char char0 = 'N';
      charArray0[0] = char0;
      char char1 = '>';
      charArray0[1] = char1;
      char char2 = '*';
      charArray0[2] = char2;
      char char3 = 's';
      charArray0[3] = char3;
      char char4 = 'U';
      charArray0[4] = char4;
      long[] longArray0 = new long[8];
      longArray0[0] = (long) char2;
      longArray0[1] = (long) char1;
      longArray0[2] = (long) charArray0[2];
      longArray0[3] = (long) char4;
      long long0 = (-1L);
      longArray0[4] = long0;
      longArray0[5] = (long) charArray0[1];
      longArray0[6] = (long) charArray0[1];
      longArray0[7] = (long) char1;
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(charArray0, longArray0);
      TCharLongMapDecorator tCharLongMapDecorator0 = new TCharLongMapDecorator((TCharLongMap) tCharLongHashMap0);
      tCharLongMapDecorator0.values();
      TCharLongMapDecorator tCharLongMapDecorator1 = new TCharLongMapDecorator();
  }

  @Test
  public void test11()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = null;
      String string0 = File.separator;
      AbstractMap.SimpleImmutableEntry<TCharLongHashMap, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<TCharLongHashMap, Object>(tCharLongHashMap0, (Object) string0);
      TCharLongHashMap tCharLongHashMap1 = abstractMap_SimpleImmutableEntry0.getKey();
      assertNull(tCharLongHashMap1);
  }

  @Test
  public void test12()  throws Throwable  {
      TCharLongMapDecorator tCharLongMapDecorator0 = new TCharLongMapDecorator();
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-23);
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      int int0 = (-1555);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, int0, (int) byte1);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) byteArrayInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TCharLongMap tCharLongMap0 = null;
      TCharLongMapDecorator tCharLongMapDecorator0 = new TCharLongMapDecorator(tCharLongMap0);
      char char0 = '-';
      int int0 = (-1820);
      float float0 = (-90.66764F);
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(int0, float0);
      tCharLongMapDecorator0.equals((Object) tCharLongHashMap0);
      Character character0 = new Character(char0);
      Long long0 = new Long((long) character0);
      // Undeclared exception!
      try {
        tCharLongMapDecorator0.put(character0, long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 0;
      float float0 = (-795.1217F);
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(int0, float0);
      TCharLongMapDecorator tCharLongMapDecorator0 = new TCharLongMapDecorator((TCharLongMap) tCharLongHashMap0);
      tCharLongMapDecorator0.getMap();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Character character0 = null;
      long long0 = (-9223372036854775808L);
      Long long1 = new Long(long0);
      tCharLongMapDecorator0.put(character0, long1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      tCharLongMapDecorator0.values();
      PrintStream printStream0 = new PrintStream((OutputStream) pipedOutputStream0);
      Long.numberOfLeadingZeros((long) int0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) printStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) bufferedOutputStream0);
      tCharLongMapDecorator0.writeExternal((ObjectOutput) objectOutputStream0);
  }

  @Test
  public void test15()  throws Throwable  {
      TCharLongMapDecorator tCharLongMapDecorator0 = new TCharLongMapDecorator();
      Object object0 = null;
      Character character0 = null;
      tCharLongMapDecorator0.values();
      long long0 = (-905L);
      Long long1 = new Long(long0);
      long1.compareTo((Long) long0);
      int int0 = 2005;
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(int0, int0);
      TCharLongMapDecorator tCharLongMapDecorator1 = new TCharLongMapDecorator((TCharLongMap) tCharLongHashMap0);
      // Undeclared exception!
      try {
        tCharLongMapDecorator0.put(character0, long1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = 1637;
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(int0);
      TCharLongMapDecorator tCharLongMapDecorator0 = new TCharLongMapDecorator((TCharLongMap) tCharLongHashMap0);
      long long0 = 1732L;
      String string0 = Long.toBinaryString(long0);
      tCharLongMapDecorator0.equals((Object) string0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(tCharLongHashMap0._states);
      tCharLongHashMap0.getAutoCompactionFactor();
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) byteArrayInputStream0);
        fail("Expecting exception: StreamCorruptedException");
      
      } catch(StreamCorruptedException e) {
         //
         // invalid stream header: 00000000
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      TCharLongMapDecorator tCharLongMapDecorator0 = new TCharLongMapDecorator();
      char char0 = '4';
      Character character0 = new Character(char0);
      long long0 = 1L;
      Long long1 = new Long(long0);
      // Undeclared exception!
      try {
        tCharLongMapDecorator0.put(character0, long1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

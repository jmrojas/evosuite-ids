/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedCharIntMap;
import gnu.trove.impl.sync.TSynchronizedCharSet;
import gnu.trove.impl.sync.TSynchronizedIntCollection;
import gnu.trove.iterator.TCharIntIterator;
import gnu.trove.map.TCharIntMap;
import gnu.trove.map.hash.TCharIntHashMap;
import gnu.trove.procedure.TCharIntProcedure;
import gnu.trove.procedure.TCharProcedure;
import gnu.trove.procedure.TIntProcedure;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedCharIntMapEvoSuite_StrongMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 20 covered goals:
   * 1 Strong Mutation 4: gnu.trove.impl.sync.TSynchronizedCharIntMap.size()I:71 - DeleteStatement: size()I
   * 2 gnu.trove.impl.sync.TSynchronizedCharIntMap.put(CI)I: root-Branch
   * 3 Strong Mutation 2: gnu.trove.impl.sync.TSynchronizedCharIntMap.size()I:71 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 3: gnu.trove.impl.sync.TSynchronizedCharIntMap.size()I:71 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 5 Strong Mutation 2: gnu.trove.impl.sync.TSynchronizedCharIntMap.size()I:71 - DeleteField: mutexLjava/lang/Object;
   * 6 Strong Mutation 3: gnu.trove.impl.sync.TSynchronizedCharIntMap.size()I:71 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 7 Strong Mutation 4: gnu.trove.impl.sync.TSynchronizedCharIntMap.size()I:71 - DeleteStatement: size()I
   * 8 Strong Mutation 27: gnu.trove.impl.sync.TSynchronizedCharIntMap.put(CI)I:87 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 9 Strong Mutation 26: gnu.trove.impl.sync.TSynchronizedCharIntMap.put(CI)I:87 - DeleteField: mutexLjava/lang/Object;
   * 10 Strong Mutation 29: gnu.trove.impl.sync.TSynchronizedCharIntMap.put(CI)I:87 - InsertUnaryOp IINC 1 key
   * 11 Strong Mutation 28: gnu.trove.impl.sync.TSynchronizedCharIntMap.put(CI)I:87 - InsertUnaryOp Negation of key
   * 12 Strong Mutation 31: gnu.trove.impl.sync.TSynchronizedCharIntMap.put(CI)I:87 - InsertUnaryOp Negation of value
   * 13 Strong Mutation 30: gnu.trove.impl.sync.TSynchronizedCharIntMap.put(CI)I:87 - InsertUnaryOp IINC -1 key
   * 14 Strong Mutation 32: gnu.trove.impl.sync.TSynchronizedCharIntMap.put(CI)I:87 - InsertUnaryOp IINC 1 value
   * 15 Strong Mutation 33: gnu.trove.impl.sync.TSynchronizedCharIntMap.put(CI)I:87 - InsertUnaryOp IINC -1 value
   * 16 Strong Mutation 76: gnu.trove.impl.sync.TSynchronizedCharIntMap.iterator()Lgnu/trove/iterator/TCharIntIterator;:134 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 17 Strong Mutation 77: gnu.trove.impl.sync.TSynchronizedCharIntMap.iterator()Lgnu/trove/iterator/TCharIntIterator;:134 - DeleteStatement: iterator()Lgnu/trove/iterator/TCharIntIterator;
   * 18 gnu.trove.impl.sync.TSynchronizedCharIntMap.iterator()Lgnu/trove/iterator/TCharIntIterator;: root-Branch
   * 19 gnu.trove.impl.sync.TSynchronizedCharIntMap.size()I: root-Branch
   * 20 gnu.trove.impl.sync.TSynchronizedCharIntMap.<init>(Lgnu/trove/map/TCharIntMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap((-1872));
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      TCharIntHashMap tCharIntHashMap1 = new TCharIntHashMap((TCharIntMap) tSynchronizedCharIntMap0);
      tSynchronizedCharIntMap0.put('X', (-1613));
      assertEquals(1, tCharIntHashMap0.size());
      assertFalse(tCharIntHashMap0.equals(tCharIntHashMap1));
  }

  //Test case number: 1
  /*
   * 8 covered goals:
   * 1 Strong Mutation 6: gnu.trove.impl.sync.TSynchronizedCharIntMap.isEmpty()Z:74 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 2 Strong Mutation 5: gnu.trove.impl.sync.TSynchronizedCharIntMap.isEmpty()Z:74 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 1: gnu.trove.impl.sync.TSynchronizedCharIntMap.<init>(Lgnu/trove/map/TCharIntMap;Ljava/lang/Object;)V:67 - ReplaceVariable mutex -> mutex
   * 4 Strong Mutation 5: gnu.trove.impl.sync.TSynchronizedCharIntMap.isEmpty()Z:74 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 6: gnu.trove.impl.sync.TSynchronizedCharIntMap.isEmpty()Z:74 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 6 Strong Mutation 7: gnu.trove.impl.sync.TSynchronizedCharIntMap.isEmpty()Z:74 - DeleteStatement: isEmpty()Z
   * 7 gnu.trove.impl.sync.TSynchronizedCharIntMap.isEmpty()Z: root-Branch
   * 8 gnu.trove.impl.sync.TSynchronizedCharIntMap.<init>(Lgnu/trove/map/TCharIntMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[1] = ';';
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0, (Object) ":");
      tSynchronizedCharIntMap0.isEmpty();
      charArray0[1] = '8';
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 Strong Mutation 7: gnu.trove.impl.sync.TSynchronizedCharIntMap.isEmpty()Z:74 - DeleteStatement: isEmpty()Z
   */

  @Test
  public void test2()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      boolean boolean0 = tSynchronizedCharIntMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * 1 Strong Mutation 9: gnu.trove.impl.sync.TSynchronizedCharIntMap.containsKey(C)Z:77 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 2 Strong Mutation 8: gnu.trove.impl.sync.TSynchronizedCharIntMap.containsKey(C)Z:77 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 8: gnu.trove.impl.sync.TSynchronizedCharIntMap.containsKey(C)Z:77 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 9: gnu.trove.impl.sync.TSynchronizedCharIntMap.containsKey(C)Z:77 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 5 gnu.trove.impl.sync.TSynchronizedCharIntMap.containsKey(C)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      char[] charArray0 = new char[6];
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap((int) '.');
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0, (Object) "{}");
      charArray0[4] = 'J';
      tSynchronizedCharIntMap0.containsKey('9');
      charArray0[4] = '}';
  }

  //Test case number: 4
  /*
   * 6 covered goals:
   * 1 Strong Mutation 12: gnu.trove.impl.sync.TSynchronizedCharIntMap.containsKey(C)Z:77 - InsertUnaryOp IINC -1 key
   * 2 Strong Mutation 10: gnu.trove.impl.sync.TSynchronizedCharIntMap.containsKey(C)Z:77 - InsertUnaryOp Negation of key
   * 3 Strong Mutation 11: gnu.trove.impl.sync.TSynchronizedCharIntMap.containsKey(C)Z:77 - InsertUnaryOp IINC 1 key
   * 4 Strong Mutation 10: gnu.trove.impl.sync.TSynchronizedCharIntMap.containsKey(C)Z:77 - InsertUnaryOp Negation of key
   * 5 Strong Mutation 11: gnu.trove.impl.sync.TSynchronizedCharIntMap.containsKey(C)Z:77 - InsertUnaryOp IINC 1 key
   * 6 Strong Mutation 12: gnu.trove.impl.sync.TSynchronizedCharIntMap.containsKey(C)Z:77 - InsertUnaryOp IINC -1 key
   */

  @Test
  public void test4()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(0, 0);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      tSynchronizedCharIntMap0.put('o', 0);
      boolean boolean0 = tSynchronizedCharIntMap0.containsKey('o');
      assertEquals(7, tCharIntHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 Strong Mutation 15: gnu.trove.impl.sync.TSynchronizedCharIntMap.containsValue(I)Z:80 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 2 Strong Mutation 14: gnu.trove.impl.sync.TSynchronizedCharIntMap.containsValue(I)Z:80 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 14: gnu.trove.impl.sync.TSynchronizedCharIntMap.containsValue(I)Z:80 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 15: gnu.trove.impl.sync.TSynchronizedCharIntMap.containsValue(I)Z:80 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 5 gnu.trove.impl.sync.TSynchronizedCharIntMap.containsValue(I)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[4] = '.';
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap((-83));
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0, (Object) "");
      tSynchronizedCharIntMap0.containsValue((-83));
      charArray0[4] = '}';
  }

  //Test case number: 6
  /*
   * 18 covered goals:
   * 1 Strong Mutation 18: gnu.trove.impl.sync.TSynchronizedCharIntMap.containsValue(I)Z:80 - InsertUnaryOp IINC -1 value
   * 2 Strong Mutation 17: gnu.trove.impl.sync.TSynchronizedCharIntMap.containsValue(I)Z:80 - InsertUnaryOp IINC 1 value
   * 3 Strong Mutation 16: gnu.trove.impl.sync.TSynchronizedCharIntMap.containsValue(I)Z:80 - InsertUnaryOp Negation of value
   * 4 Strong Mutation 19: gnu.trove.impl.sync.TSynchronizedCharIntMap.containsValue(I)Z:80 - DeleteStatement: containsValue(I)Z
   * 5 Strong Mutation 17: gnu.trove.impl.sync.TSynchronizedCharIntMap.containsValue(I)Z:80 - InsertUnaryOp IINC 1 value
   * 6 Strong Mutation 16: gnu.trove.impl.sync.TSynchronizedCharIntMap.containsValue(I)Z:80 - InsertUnaryOp Negation of value
   * 7 Strong Mutation 19: gnu.trove.impl.sync.TSynchronizedCharIntMap.containsValue(I)Z:80 - DeleteStatement: containsValue(I)Z
   * 8 Strong Mutation 18: gnu.trove.impl.sync.TSynchronizedCharIntMap.containsValue(I)Z:80 - InsertUnaryOp IINC -1 value
   * 9 Strong Mutation 125: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - InsertUnaryOp IINC -1 key
   * 10 Strong Mutation 124: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - InsertUnaryOp IINC 1 key
   * 11 Strong Mutation 123: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - InsertUnaryOp Negation of key
   * 12 Strong Mutation 122: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 13 Strong Mutation 121: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - DeleteField: mutexLjava/lang/Object;
   * 14 Strong Mutation 131: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - InsertUnaryOp Negation of put_amount
   * 15 Strong Mutation 133: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - InsertUnaryOp IINC -1 put_amount
   * 16 Strong Mutation 132: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - InsertUnaryOp IINC 1 put_amount
   * 17 Strong Mutation 134: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - DeleteStatement: adjustOrPutValue(CII)I
   * 18 gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      tSynchronizedCharIntMap0.adjustOrPutValue('-', '-', '-');
      boolean boolean0 = tSynchronizedCharIntMap0.containsValue((int) '-');
      assertEquals(false, tCharIntHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 6 covered goals:
   * 1 Strong Mutation 20: gnu.trove.impl.sync.TSynchronizedCharIntMap.get(C)I:83 - DeleteField: mutexLjava/lang/Object;
   * 2 Strong Mutation 21: gnu.trove.impl.sync.TSynchronizedCharIntMap.get(C)I:83 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 3 Strong Mutation 21: gnu.trove.impl.sync.TSynchronizedCharIntMap.get(C)I:83 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 4 Strong Mutation 20: gnu.trove.impl.sync.TSynchronizedCharIntMap.get(C)I:83 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 25: gnu.trove.impl.sync.TSynchronizedCharIntMap.get(C)I:83 - DeleteStatement: get(C)I
   * 6 gnu.trove.impl.sync.TSynchronizedCharIntMap.get(C)I: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(31, (float) 31, 'L', (-1105));
      Integer integer0 = new Integer((-1105));
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0, (Object) integer0);
      char[] charArray0 = new char[6];
      charArray0[4] = 'J';
      tSynchronizedCharIntMap0.get('9');
      charArray0[4] = '}';
  }

  //Test case number: 8
  /*
   * 4 covered goals:
   * 1 Strong Mutation 22: gnu.trove.impl.sync.TSynchronizedCharIntMap.get(C)I:83 - InsertUnaryOp Negation of key
   * 2 Strong Mutation 23: gnu.trove.impl.sync.TSynchronizedCharIntMap.get(C)I:83 - InsertUnaryOp IINC 1 key
   * 3 Strong Mutation 22: gnu.trove.impl.sync.TSynchronizedCharIntMap.get(C)I:83 - InsertUnaryOp Negation of key
   * 4 Strong Mutation 24: gnu.trove.impl.sync.TSynchronizedCharIntMap.get(C)I:83 - InsertUnaryOp IINC -1 key
   */

  @Test
  public void test8()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[2] = 'O';
      int[] intArray0 = new int[10];
      intArray0[2] = (int) 'r';
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(charArray0, intArray0);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      int int0 = tSynchronizedCharIntMap0.get('O');
      assertEquals(114, int0);
  }

  //Test case number: 9
  /*
   * 3 covered goals:
   * 1 Strong Mutation 24: gnu.trove.impl.sync.TSynchronizedCharIntMap.get(C)I:83 - InsertUnaryOp IINC -1 key
   * 2 Strong Mutation 23: gnu.trove.impl.sync.TSynchronizedCharIntMap.get(C)I:83 - InsertUnaryOp IINC 1 key
   * 3 Strong Mutation 25: gnu.trove.impl.sync.TSynchronizedCharIntMap.get(C)I:83 - DeleteStatement: get(C)I
   */

  @Test
  public void test9()  throws Throwable  {
      char[] charArray0 = new char[10];
      charArray0[0] = '\'';
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0, (Object) "1");
      tSynchronizedCharIntMap0.get('?');
      int[] intArray0 = new int[4];
      intArray0[0] = (int) '~';
      TCharIntHashMap tCharIntHashMap1 = new TCharIntHashMap(charArray0, intArray0);
      TSynchronizedCharIntMap tSynchronizedCharIntMap1 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap1, (Object) "Italy");
      int[] intArray1 = new int[9];
      intArray1[0] = (int) 'k';
      TCharIntHashMap tCharIntHashMap2 = new TCharIntHashMap(charArray0, intArray1);
      TSynchronizedCharIntMap tSynchronizedCharIntMap2 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap2, (Object) "");
      assertFalse(tSynchronizedCharIntMap2.equals(tSynchronizedCharIntMap1));
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * 1 Strong Mutation 34: gnu.trove.impl.sync.TSynchronizedCharIntMap.put(CI)I:87 - DeleteStatement: put(CI)I
   * 2 Strong Mutation 31: gnu.trove.impl.sync.TSynchronizedCharIntMap.put(CI)I:87 - InsertUnaryOp Negation of value
   */

  @Test
  public void test10()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap((-1872));
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      tSynchronizedCharIntMap0.put('X', (-1613));
      assertEquals(1, tCharIntHashMap0.size());
      assertEquals(false, tSynchronizedCharIntMap0.isEmpty());
  }

  //Test case number: 11
  /*
   * 13 covered goals:
   * 1 Strong Mutation 40: gnu.trove.impl.sync.TSynchronizedCharIntMap.remove(C)I:90 - DeleteStatement: remove(C)I
   * 2 Strong Mutation 35: gnu.trove.impl.sync.TSynchronizedCharIntMap.remove(C)I:90 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 38: gnu.trove.impl.sync.TSynchronizedCharIntMap.remove(C)I:90 - InsertUnaryOp IINC 1 key
   * 4 Strong Mutation 39: gnu.trove.impl.sync.TSynchronizedCharIntMap.remove(C)I:90 - InsertUnaryOp IINC -1 key
   * 5 Strong Mutation 36: gnu.trove.impl.sync.TSynchronizedCharIntMap.remove(C)I:90 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 6 Strong Mutation 37: gnu.trove.impl.sync.TSynchronizedCharIntMap.remove(C)I:90 - InsertUnaryOp Negation of key
   * 7 Strong Mutation 35: gnu.trove.impl.sync.TSynchronizedCharIntMap.remove(C)I:90 - DeleteField: mutexLjava/lang/Object;
   * 8 Strong Mutation 38: gnu.trove.impl.sync.TSynchronizedCharIntMap.remove(C)I:90 - InsertUnaryOp IINC 1 key
   * 9 Strong Mutation 39: gnu.trove.impl.sync.TSynchronizedCharIntMap.remove(C)I:90 - InsertUnaryOp IINC -1 key
   * 10 Strong Mutation 36: gnu.trove.impl.sync.TSynchronizedCharIntMap.remove(C)I:90 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 11 Strong Mutation 37: gnu.trove.impl.sync.TSynchronizedCharIntMap.remove(C)I:90 - InsertUnaryOp Negation of key
   * 12 Strong Mutation 40: gnu.trove.impl.sync.TSynchronizedCharIntMap.remove(C)I:90 - DeleteStatement: remove(C)I
   * 13 gnu.trove.impl.sync.TSynchronizedCharIntMap.remove(C)I: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(0);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      tSynchronizedCharIntMap0.adjustOrPutValue('q', 1921, 1921);
      assertEquals(1, tCharIntHashMap0.size());
      
      int int0 = tSynchronizedCharIntMap0.remove('q');
      assertEquals(1921, int0);
  }

  //Test case number: 12
  /*
   * 16 covered goals:
   * 1 Strong Mutation 45: gnu.trove.impl.sync.TSynchronizedCharIntMap.putAll(Lgnu/trove/map/TCharIntMap;)V:96 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 2 Strong Mutation 46: gnu.trove.impl.sync.TSynchronizedCharIntMap.putAll(Lgnu/trove/map/TCharIntMap;)V:96 - DeleteStatement: putAll(Lgnu/trove/map/TCharIntMap;)V
   * 3 Strong Mutation 44: gnu.trove.impl.sync.TSynchronizedCharIntMap.putAll(Lgnu/trove/map/TCharIntMap;)V:96 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 46: gnu.trove.impl.sync.TSynchronizedCharIntMap.putAll(Lgnu/trove/map/TCharIntMap;)V:96 - DeleteStatement: putAll(Lgnu/trove/map/TCharIntMap;)V
   * 5 Strong Mutation 44: gnu.trove.impl.sync.TSynchronizedCharIntMap.putAll(Lgnu/trove/map/TCharIntMap;)V:96 - DeleteField: mutexLjava/lang/Object;
   * 6 Strong Mutation 45: gnu.trove.impl.sync.TSynchronizedCharIntMap.putAll(Lgnu/trove/map/TCharIntMap;)V:96 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 7 Strong Mutation 85: gnu.trove.impl.sync.TSynchronizedCharIntMap.putIfAbsent(CI)I:142 - InsertUnaryOp IINC 1 key
   * 8 Strong Mutation 84: gnu.trove.impl.sync.TSynchronizedCharIntMap.putIfAbsent(CI)I:142 - InsertUnaryOp Negation of key
   * 9 Strong Mutation 86: gnu.trove.impl.sync.TSynchronizedCharIntMap.putIfAbsent(CI)I:142 - InsertUnaryOp IINC -1 key
   * 10 Strong Mutation 83: gnu.trove.impl.sync.TSynchronizedCharIntMap.putIfAbsent(CI)I:142 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 11 Strong Mutation 82: gnu.trove.impl.sync.TSynchronizedCharIntMap.putIfAbsent(CI)I:142 - DeleteField: mutexLjava/lang/Object;
   * 12 Strong Mutation 89: gnu.trove.impl.sync.TSynchronizedCharIntMap.putIfAbsent(CI)I:142 - InsertUnaryOp IINC -1 value
   * 13 Strong Mutation 88: gnu.trove.impl.sync.TSynchronizedCharIntMap.putIfAbsent(CI)I:142 - InsertUnaryOp IINC 1 value
   * 14 Strong Mutation 90: gnu.trove.impl.sync.TSynchronizedCharIntMap.putIfAbsent(CI)I:142 - DeleteStatement: putIfAbsent(CI)I
   * 15 gnu.trove.impl.sync.TSynchronizedCharIntMap.putIfAbsent(CI)I: root-Branch
   * 16 gnu.trove.impl.sync.TSynchronizedCharIntMap.putAll(Lgnu/trove/map/TCharIntMap;)V: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(0, 0);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      tSynchronizedCharIntMap0.putIfAbsent('G', 0);
      tSynchronizedCharIntMap0.putAll((TCharIntMap) tCharIntHashMap0);
      assertEquals(false, tCharIntHashMap0.isEmpty());
      assertEquals("{G=0}", tSynchronizedCharIntMap0.toString());
  }

  //Test case number: 13
  /*
   * 8 covered goals:
   * 1 Strong Mutation 48: gnu.trove.impl.sync.TSynchronizedCharIntMap.clear()V:99 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 2 Strong Mutation 47: gnu.trove.impl.sync.TSynchronizedCharIntMap.clear()V:99 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 49: gnu.trove.impl.sync.TSynchronizedCharIntMap.clear()V:99 - DeleteStatement: clear()V
   * 4 Strong Mutation 47: gnu.trove.impl.sync.TSynchronizedCharIntMap.clear()V:99 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 49: gnu.trove.impl.sync.TSynchronizedCharIntMap.clear()V:99 - DeleteStatement: clear()V
   * 6 Strong Mutation 48: gnu.trove.impl.sync.TSynchronizedCharIntMap.clear()V:99 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 7 Strong Mutation 130: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - ReplaceVariable put_amount -> adjust_amount
   * 8 gnu.trove.impl.sync.TSynchronizedCharIntMap.clear()V: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap((-1741));
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      tSynchronizedCharIntMap0.adjustOrPutValue('f', 0, 1191);
      assertEquals(false, tCharIntHashMap0.isEmpty());
      
      tSynchronizedCharIntMap0.clear();
      assertEquals(true, tSynchronizedCharIntMap0.isEmpty());
  }

  //Test case number: 14
  /*
   * 6 covered goals:
   * 1 Strong Mutation 57: gnu.trove.impl.sync.TSynchronizedCharIntMap.keys()[C:113 - DeleteField: mutexLjava/lang/Object;
   * 2 Strong Mutation 59: gnu.trove.impl.sync.TSynchronizedCharIntMap.keys()[C:113 - DeleteStatement: keys()[C
   * 3 Strong Mutation 58: gnu.trove.impl.sync.TSynchronizedCharIntMap.keys()[C:113 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 4 Strong Mutation 58: gnu.trove.impl.sync.TSynchronizedCharIntMap.keys()[C:113 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 5 Strong Mutation 57: gnu.trove.impl.sync.TSynchronizedCharIntMap.keys()[C:113 - DeleteField: mutexLjava/lang/Object;
   * 6 gnu.trove.impl.sync.TSynchronizedCharIntMap.keys()[C: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      char[] charArray0 = tSynchronizedCharIntMap0.keys();
      assertNotNull(charArray0);
  }

  //Test case number: 15
  /*
   * 7 covered goals:
   * 1 Strong Mutation 60: gnu.trove.impl.sync.TSynchronizedCharIntMap.keys([C)[C:116 - DeleteField: mutexLjava/lang/Object;
   * 2 Strong Mutation 62: gnu.trove.impl.sync.TSynchronizedCharIntMap.keys([C)[C:116 - DeleteStatement: keys([C)[C
   * 3 Strong Mutation 61: gnu.trove.impl.sync.TSynchronizedCharIntMap.keys([C)[C:116 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 4 Strong Mutation 62: gnu.trove.impl.sync.TSynchronizedCharIntMap.keys([C)[C:116 - DeleteStatement: keys([C)[C
   * 5 Strong Mutation 61: gnu.trove.impl.sync.TSynchronizedCharIntMap.keys([C)[C:116 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 6 Strong Mutation 60: gnu.trove.impl.sync.TSynchronizedCharIntMap.keys([C)[C:116 - DeleteField: mutexLjava/lang/Object;
   * 7 gnu.trove.impl.sync.TSynchronizedCharIntMap.keys([C)[C: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap((-1912));
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0, (Object) "{}");
      char[] charArray0 = tSynchronizedCharIntMap0.keys(tCharIntHashMap0._set);
      assertNotNull(charArray0);
  }

  //Test case number: 16
  /*
   * 7 covered goals:
   * 1 Strong Mutation 72: gnu.trove.impl.sync.TSynchronizedCharIntMap.values()[I:127 - DeleteStatement: values()[I
   * 2 Strong Mutation 70: gnu.trove.impl.sync.TSynchronizedCharIntMap.values()[I:127 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 71: gnu.trove.impl.sync.TSynchronizedCharIntMap.values()[I:127 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 4 Strong Mutation 70: gnu.trove.impl.sync.TSynchronizedCharIntMap.values()[I:127 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 71: gnu.trove.impl.sync.TSynchronizedCharIntMap.values()[I:127 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 6 Strong Mutation 72: gnu.trove.impl.sync.TSynchronizedCharIntMap.values()[I:127 - DeleteStatement: values()[I
   * 7 gnu.trove.impl.sync.TSynchronizedCharIntMap.values()[I: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap((-1));
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0, (Object) "/");
      int[] intArray0 = tSynchronizedCharIntMap0.values();
      assertNotNull(intArray0);
  }

  //Test case number: 17
  /*
   * 7 covered goals:
   * 1 Strong Mutation 75: gnu.trove.impl.sync.TSynchronizedCharIntMap.values([I)[I:130 - DeleteStatement: values([I)[I
   * 2 Strong Mutation 73: gnu.trove.impl.sync.TSynchronizedCharIntMap.values([I)[I:130 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 74: gnu.trove.impl.sync.TSynchronizedCharIntMap.values([I)[I:130 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 4 Strong Mutation 73: gnu.trove.impl.sync.TSynchronizedCharIntMap.values([I)[I:130 - DeleteField: mutexLjava/lang/Object;
   * 5 Strong Mutation 74: gnu.trove.impl.sync.TSynchronizedCharIntMap.values([I)[I:130 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 6 Strong Mutation 75: gnu.trove.impl.sync.TSynchronizedCharIntMap.values([I)[I:130 - DeleteStatement: values([I)[I
   * 7 gnu.trove.impl.sync.TSynchronizedCharIntMap.values([I)[I: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap((-1872));
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      int[] intArray0 = new int[3];
      int[] intArray1 = tSynchronizedCharIntMap0.values(intArray0);
      assertSame(intArray1, intArray0);
  }

  //Test case number: 18
  /*
   * 2 covered goals:
   * 1 Strong Mutation 77: gnu.trove.impl.sync.TSynchronizedCharIntMap.iterator()Lgnu/trove/iterator/TCharIntIterator;:134 - DeleteStatement: iterator()Lgnu/trove/iterator/TCharIntIterator;
   * 2 Strong Mutation 76: gnu.trove.impl.sync.TSynchronizedCharIntMap.iterator()Lgnu/trove/iterator/TCharIntIterator;:134 - DeleteField: mLgnu/trove/map/TCharIntMap;
   */

  @Test
  public void test18()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap((-1872));
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      TCharIntIterator tCharIntIterator0 = tSynchronizedCharIntMap0.iterator();
      assertEquals(false, tCharIntIterator0.hasNext());
  }

  //Test case number: 19
  /*
   * 4 covered goals:
   * 1 Strong Mutation 78: gnu.trove.impl.sync.TSynchronizedCharIntMap.getNoEntryKey()C:138 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 2 gnu.trove.impl.sync.TSynchronizedCharIntMap.getNoEntryKey()C: root-Branch
   * 3 Strong Mutation 78: gnu.trove.impl.sync.TSynchronizedCharIntMap.getNoEntryKey()C:138 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 4 Strong Mutation 79: gnu.trove.impl.sync.TSynchronizedCharIntMap.getNoEntryKey()C:138 - DeleteStatement: getNoEntryKey()C
   */

  @Test
  public void test19()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(31, (float) 31, 'L', (-1105));
      Integer integer0 = new Integer((-1105));
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0, (Object) integer0);
      char[] charArray0 = new char[6];
      charArray0[4] = 'J';
      tSynchronizedCharIntMap0.getNoEntryKey();
      charArray0[4] = '}';
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 Strong Mutation 79: gnu.trove.impl.sync.TSynchronizedCharIntMap.getNoEntryKey()C:138 - DeleteStatement: getNoEntryKey()C
   */

  @Test
  public void test20()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      tSynchronizedCharIntMap0.getNoEntryKey();
      TCharIntHashMap tCharIntHashMap1 = new TCharIntHashMap(391, (float) 391, '5', 1);
      TSynchronizedCharIntMap tSynchronizedCharIntMap1 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap1);
      assertEquals('5', tSynchronizedCharIntMap1.getNoEntryKey());
  }

  //Test case number: 21
  /*
   * 3 covered goals:
   * 1 Strong Mutation 81: gnu.trove.impl.sync.TSynchronizedCharIntMap.getNoEntryValue()I:139 - DeleteStatement: getNoEntryValue()I
   * 2 gnu.trove.impl.sync.TSynchronizedCharIntMap.getNoEntryValue()I: root-Branch
   * 3 Strong Mutation 81: gnu.trove.impl.sync.TSynchronizedCharIntMap.getNoEntryValue()I:139 - DeleteStatement: getNoEntryValue()I
   */

  @Test
  public void test21()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(0, (float) 0, '=', (int) '=');
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0, (Object) "");
      int int0 = tSynchronizedCharIntMap0.getNoEntryValue();
      assertEquals(61, int0);
  }

  //Test case number: 22
  /*
   * 2 covered goals:
   * 1 Strong Mutation 80: gnu.trove.impl.sync.TSynchronizedCharIntMap.getNoEntryValue()I:139 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 2 Strong Mutation 80: gnu.trove.impl.sync.TSynchronizedCharIntMap.getNoEntryValue()I:139 - DeleteField: mLgnu/trove/map/TCharIntMap;
   */

  @Test
  public void test22()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[4] = 'J';
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0, (Object) charArray0[2]);
      tSynchronizedCharIntMap0.getNoEntryValue();
      charArray0[4] = '}';
  }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 Strong Mutation 93: gnu.trove.impl.sync.TSynchronizedCharIntMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z:145 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z
   * 2 gnu.trove.impl.sync.TSynchronizedCharIntMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   * 3 Strong Mutation 93: gnu.trove.impl.sync.TSynchronizedCharIntMap.forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z:145 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TCharProcedure;)Z
   */

  @Test
  public void test23()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      boolean boolean0 = tSynchronizedCharIntMap0.forEachKey((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 5 covered goals:
   * 1 Strong Mutation 94: gnu.trove.impl.sync.TSynchronizedCharIntMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z:148 - DeleteField: mutexLjava/lang/Object;
   * 2 Strong Mutation 95: gnu.trove.impl.sync.TSynchronizedCharIntMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z:148 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 3 Strong Mutation 95: gnu.trove.impl.sync.TSynchronizedCharIntMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z:148 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 4 Strong Mutation 94: gnu.trove.impl.sync.TSynchronizedCharIntMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z:148 - DeleteField: mutexLjava/lang/Object;
   * 5 gnu.trove.impl.sync.TSynchronizedCharIntMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[4] = 'J';
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0, (Object) charArray0[0]);
      tSynchronizedCharIntMap0.forEachValue((TIntProcedure) null);
      charArray0[4] = '}';
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 Strong Mutation 96: gnu.trove.impl.sync.TSynchronizedCharIntMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z:148 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z
   */

  @Test
  public void test25()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0, (Object) "257");
      boolean boolean0 = tSynchronizedCharIntMap0.forEachValue((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 26
  /*
   * 7 covered goals:
   * 1 Strong Mutation 97: gnu.trove.impl.sync.TSynchronizedCharIntMap.forEachEntry(Lgnu/trove/procedure/TCharIntProcedure;)Z:151 - DeleteField: mutexLjava/lang/Object;
   * 2 Strong Mutation 98: gnu.trove.impl.sync.TSynchronizedCharIntMap.forEachEntry(Lgnu/trove/procedure/TCharIntProcedure;)Z:151 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 3 Strong Mutation 99: gnu.trove.impl.sync.TSynchronizedCharIntMap.forEachEntry(Lgnu/trove/procedure/TCharIntProcedure;)Z:151 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TCharIntProcedure;)Z
   * 4 Strong Mutation 98: gnu.trove.impl.sync.TSynchronizedCharIntMap.forEachEntry(Lgnu/trove/procedure/TCharIntProcedure;)Z:151 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 5 Strong Mutation 99: gnu.trove.impl.sync.TSynchronizedCharIntMap.forEachEntry(Lgnu/trove/procedure/TCharIntProcedure;)Z:151 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TCharIntProcedure;)Z
   * 6 Strong Mutation 97: gnu.trove.impl.sync.TSynchronizedCharIntMap.forEachEntry(Lgnu/trove/procedure/TCharIntProcedure;)Z:151 - DeleteField: mutexLjava/lang/Object;
   * 7 gnu.trove.impl.sync.TSynchronizedCharIntMap.forEachEntry(Lgnu/trove/procedure/TCharIntProcedure;)Z: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap((-1872));
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      char[] charArray0 = new char[9];
      charArray0[1] = 'X';
      tSynchronizedCharIntMap0.forEachEntry((TCharIntProcedure) null);
      charArray0[1] = 'S';
  }

  //Test case number: 27
  /*
   * 5 covered goals:
   * 1 Strong Mutation 104: gnu.trove.impl.sync.TSynchronizedCharIntMap.retainEntries(Lgnu/trove/procedure/TCharIntProcedure;)Z:157 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 2 Strong Mutation 103: gnu.trove.impl.sync.TSynchronizedCharIntMap.retainEntries(Lgnu/trove/procedure/TCharIntProcedure;)Z:157 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 103: gnu.trove.impl.sync.TSynchronizedCharIntMap.retainEntries(Lgnu/trove/procedure/TCharIntProcedure;)Z:157 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 104: gnu.trove.impl.sync.TSynchronizedCharIntMap.retainEntries(Lgnu/trove/procedure/TCharIntProcedure;)Z:157 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 5 gnu.trove.impl.sync.TSynchronizedCharIntMap.retainEntries(Lgnu/trove/procedure/TCharIntProcedure;)Z: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[3] = '.';
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0, (Object) charArray0[0]);
      tSynchronizedCharIntMap0.retainEntries((TCharIntProcedure) null);
      charArray0[3] = '[';
  }

  //Test case number: 28
  /*
   * 13 covered goals:
   * 1 Strong Mutation 107: gnu.trove.impl.sync.TSynchronizedCharIntMap.increment(C)Z:160 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 2 Strong Mutation 110: gnu.trove.impl.sync.TSynchronizedCharIntMap.increment(C)Z:160 - InsertUnaryOp IINC -1 key
   * 3 Strong Mutation 111: gnu.trove.impl.sync.TSynchronizedCharIntMap.increment(C)Z:160 - DeleteStatement: increment(C)Z
   * 4 Strong Mutation 108: gnu.trove.impl.sync.TSynchronizedCharIntMap.increment(C)Z:160 - InsertUnaryOp Negation of key
   * 5 Strong Mutation 109: gnu.trove.impl.sync.TSynchronizedCharIntMap.increment(C)Z:160 - InsertUnaryOp IINC 1 key
   * 6 Strong Mutation 106: gnu.trove.impl.sync.TSynchronizedCharIntMap.increment(C)Z:160 - DeleteField: mutexLjava/lang/Object;
   * 7 Strong Mutation 110: gnu.trove.impl.sync.TSynchronizedCharIntMap.increment(C)Z:160 - InsertUnaryOp IINC -1 key
   * 8 Strong Mutation 111: gnu.trove.impl.sync.TSynchronizedCharIntMap.increment(C)Z:160 - DeleteStatement: increment(C)Z
   * 9 Strong Mutation 108: gnu.trove.impl.sync.TSynchronizedCharIntMap.increment(C)Z:160 - InsertUnaryOp Negation of key
   * 10 Strong Mutation 109: gnu.trove.impl.sync.TSynchronizedCharIntMap.increment(C)Z:160 - InsertUnaryOp IINC 1 key
   * 11 Strong Mutation 106: gnu.trove.impl.sync.TSynchronizedCharIntMap.increment(C)Z:160 - DeleteField: mutexLjava/lang/Object;
   * 12 Strong Mutation 107: gnu.trove.impl.sync.TSynchronizedCharIntMap.increment(C)Z:160 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 13 gnu.trove.impl.sync.TSynchronizedCharIntMap.increment(C)Z: root-Branch
   */

  @Test
  public void test28()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0, (Object) "Deutsch (Deutschland)");
      tSynchronizedCharIntMap0.put('z', 0);
      boolean boolean0 = tSynchronizedCharIntMap0.increment('z');
      assertEquals(false, tCharIntHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 29
  /*
   * 15 covered goals:
   * 1 Strong Mutation 112: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustValue(CI)Z:163 - DeleteField: mutexLjava/lang/Object;
   * 2 Strong Mutation 119: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustValue(CI)Z:163 - InsertUnaryOp IINC -1 amount
   * 3 Strong Mutation 118: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustValue(CI)Z:163 - InsertUnaryOp IINC 1 amount
   * 4 Strong Mutation 117: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustValue(CI)Z:163 - InsertUnaryOp Negation of amount
   * 5 Strong Mutation 116: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustValue(CI)Z:163 - InsertUnaryOp IINC -1 key
   * 6 Strong Mutation 114: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustValue(CI)Z:163 - InsertUnaryOp Negation of key
   * 7 Strong Mutation 113: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustValue(CI)Z:163 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 8 Strong Mutation 119: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustValue(CI)Z:163 - InsertUnaryOp IINC -1 amount
   * 9 Strong Mutation 118: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustValue(CI)Z:163 - InsertUnaryOp IINC 1 amount
   * 10 Strong Mutation 117: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustValue(CI)Z:163 - InsertUnaryOp Negation of amount
   * 11 Strong Mutation 116: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustValue(CI)Z:163 - InsertUnaryOp IINC -1 key
   * 12 Strong Mutation 114: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustValue(CI)Z:163 - InsertUnaryOp Negation of key
   * 13 Strong Mutation 113: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustValue(CI)Z:163 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 14 Strong Mutation 112: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustValue(CI)Z:163 - DeleteField: mutexLjava/lang/Object;
   * 15 gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustValue(CI)Z: root-Branch
   */

  @Test
  public void test29()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'h';
      int[] intArray0 = new int[2];
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(charArray0, intArray0);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      boolean boolean0 = tSynchronizedCharIntMap0.adjustValue('h', 'h');
      assertEquals("{h=104}", tCharIntHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 30
  /*
   * 5 covered goals:
   * 1 Strong Mutation 127: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - InsertUnaryOp Negation of adjust_amount
   * 2 Strong Mutation 127: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - InsertUnaryOp Negation of adjust_amount
   * 3 Strong Mutation 126: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - ReplaceVariable adjust_amount -> put_amount
   * 4 Strong Mutation 129: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - InsertUnaryOp IINC -1 adjust_amount
   * 5 Strong Mutation 128: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - InsertUnaryOp IINC 1 adjust_amount
   */

  @Test
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[10];
      charArray0[0] = '\'';
      int[] intArray0 = new int[4];
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(charArray0, intArray0);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      int int0 = tSynchronizedCharIntMap0.adjustOrPutValue('\'', (int) 'd', 1432);
      assertEquals("{'=100, \u0000=0}", tCharIntHashMap0.toString());
      assertEquals(100, int0);
  }

  //Test case number: 31
  /*
   * 13 covered goals:
   * 1 Strong Mutation 128: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - InsertUnaryOp IINC 1 adjust_amount
   * 2 Strong Mutation 85: gnu.trove.impl.sync.TSynchronizedCharIntMap.putIfAbsent(CI)I:142 - InsertUnaryOp IINC 1 key
   * 3 Strong Mutation 84: gnu.trove.impl.sync.TSynchronizedCharIntMap.putIfAbsent(CI)I:142 - InsertUnaryOp Negation of key
   * 4 Strong Mutation 87: gnu.trove.impl.sync.TSynchronizedCharIntMap.putIfAbsent(CI)I:142 - InsertUnaryOp Negation of value
   * 5 Strong Mutation 86: gnu.trove.impl.sync.TSynchronizedCharIntMap.putIfAbsent(CI)I:142 - InsertUnaryOp IINC -1 key
   * 6 Strong Mutation 83: gnu.trove.impl.sync.TSynchronizedCharIntMap.putIfAbsent(CI)I:142 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 7 Strong Mutation 82: gnu.trove.impl.sync.TSynchronizedCharIntMap.putIfAbsent(CI)I:142 - DeleteField: mutexLjava/lang/Object;
   * 8 Strong Mutation 89: gnu.trove.impl.sync.TSynchronizedCharIntMap.putIfAbsent(CI)I:142 - InsertUnaryOp IINC -1 value
   * 9 Strong Mutation 88: gnu.trove.impl.sync.TSynchronizedCharIntMap.putIfAbsent(CI)I:142 - InsertUnaryOp IINC 1 value
   * 10 Strong Mutation 90: gnu.trove.impl.sync.TSynchronizedCharIntMap.putIfAbsent(CI)I:142 - DeleteStatement: putIfAbsent(CI)I
   * 11 Strong Mutation 126: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - ReplaceVariable adjust_amount -> put_amount
   * 12 Strong Mutation 129: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - InsertUnaryOp IINC -1 adjust_amount
   * 13 Strong Mutation 87: gnu.trove.impl.sync.TSynchronizedCharIntMap.putIfAbsent(CI)I:142 - InsertUnaryOp Negation of value
   */

  @Test
  public void test31()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(0);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      tSynchronizedCharIntMap0.putIfAbsent('r', 788);
      int int0 = tSynchronizedCharIntMap0.adjustOrPutValue('r', 0, 1129);
      assertEquals(1, tCharIntHashMap0.size());
      assertEquals(788, int0);
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * 1 Strong Mutation 131: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - InsertUnaryOp Negation of put_amount
   */

  @Test
  public void test32()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap((-1741));
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      int int0 = tSynchronizedCharIntMap0.adjustOrPutValue('f', 0, 1191);
      assertEquals(1, tCharIntHashMap0.size());
      assertEquals(1191, int0);
  }

  //Test case number: 33
  /*
   * 9 covered goals:
   * 1 Strong Mutation 134: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - DeleteStatement: adjustOrPutValue(CII)I
   * 2 Strong Mutation 125: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - InsertUnaryOp IINC -1 key
   * 3 Strong Mutation 124: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - InsertUnaryOp IINC 1 key
   * 4 Strong Mutation 123: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - InsertUnaryOp Negation of key
   * 5 Strong Mutation 122: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 6 Strong Mutation 121: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - DeleteField: mutexLjava/lang/Object;
   * 7 Strong Mutation 130: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - ReplaceVariable put_amount -> adjust_amount
   * 8 Strong Mutation 133: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - InsertUnaryOp IINC -1 put_amount
   * 9 Strong Mutation 132: gnu.trove.impl.sync.TSynchronizedCharIntMap.adjustOrPutValue(CII)I:166 - InsertUnaryOp IINC 1 put_amount
   */

  @Test
  public void test33()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap((-1319));
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0, (Object) "");
      int int0 = tSynchronizedCharIntMap0.adjustOrPutValue('f', 1378, 0);
      assertEquals(false, tCharIntHashMap0.isEmpty());
      assertEquals(0, int0);
  }

  //Test case number: 34
  /*
   * 3 covered goals:
   * 1 Strong Mutation 137: gnu.trove.impl.sync.TSynchronizedCharIntMap.equals(Ljava/lang/Object;)Z:170 - ReplaceVariable o -> mutex
   * 2 gnu.trove.impl.sync.TSynchronizedCharIntMap.equals(Ljava/lang/Object;)Z: root-Branch
   * 3 Strong Mutation 137: gnu.trove.impl.sync.TSynchronizedCharIntMap.equals(Ljava/lang/Object;)Z:170 - ReplaceVariable o -> mutex
   */

  @Test
  public void test34()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap((-697), 1482.3354F, 'c', (int) 'c');
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      boolean boolean0 = tSynchronizedCharIntMap0.equals((Object) "1224");
      assertEquals(false, boolean0);
  }

  //Test case number: 35
  /*
   * 2 covered goals:
   * 1 Strong Mutation 138: gnu.trove.impl.sync.TSynchronizedCharIntMap.equals(Ljava/lang/Object;)Z:170 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 2 Strong Mutation 138: gnu.trove.impl.sync.TSynchronizedCharIntMap.equals(Ljava/lang/Object;)Z:170 - DeleteStatement: equals(Ljava/lang/Object;)Z
   */

  @Test
  public void test35()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(790, 790);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0, (Object) "");
      tSynchronizedCharIntMap0.equals((Object) null);
      TSynchronizedCharIntMap tSynchronizedCharIntMap1 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      assertTrue(tSynchronizedCharIntMap1.equals(tSynchronizedCharIntMap0));
  }

  //Test case number: 36
  /*
   * 4 covered goals:
   * 1 Strong Mutation 135: gnu.trove.impl.sync.TSynchronizedCharIntMap.equals(Ljava/lang/Object;)Z:170 - DeleteField: mutexLjava/lang/Object;
   * 2 Strong Mutation 136: gnu.trove.impl.sync.TSynchronizedCharIntMap.equals(Ljava/lang/Object;)Z:170 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 3 Strong Mutation 136: gnu.trove.impl.sync.TSynchronizedCharIntMap.equals(Ljava/lang/Object;)Z:170 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 4 Strong Mutation 135: gnu.trove.impl.sync.TSynchronizedCharIntMap.equals(Ljava/lang/Object;)Z:170 - DeleteField: mutexLjava/lang/Object;
   */

  @Test
  public void test36()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[4] = 'J';
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0, (Object) charArray0[4]);
      tSynchronizedCharIntMap0.equals((Object) charArray0[2]);
      charArray0[4] = '}';
  }

  //Test case number: 37
  /*
   * 11 covered goals:
   * 1 Strong Mutation 141: gnu.trove.impl.sync.TSynchronizedCharIntMap.hashCode()I:173 - DeleteStatement: hashCode()I
   * 2 Strong Mutation 27: gnu.trove.impl.sync.TSynchronizedCharIntMap.put(CI)I:87 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 3 Strong Mutation 26: gnu.trove.impl.sync.TSynchronizedCharIntMap.put(CI)I:87 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 29: gnu.trove.impl.sync.TSynchronizedCharIntMap.put(CI)I:87 - InsertUnaryOp IINC 1 key
   * 5 Strong Mutation 28: gnu.trove.impl.sync.TSynchronizedCharIntMap.put(CI)I:87 - InsertUnaryOp Negation of key
   * 6 Strong Mutation 30: gnu.trove.impl.sync.TSynchronizedCharIntMap.put(CI)I:87 - InsertUnaryOp IINC -1 key
   * 7 Strong Mutation 34: gnu.trove.impl.sync.TSynchronizedCharIntMap.put(CI)I:87 - DeleteStatement: put(CI)I
   * 8 Strong Mutation 32: gnu.trove.impl.sync.TSynchronizedCharIntMap.put(CI)I:87 - InsertUnaryOp IINC 1 value
   * 9 Strong Mutation 33: gnu.trove.impl.sync.TSynchronizedCharIntMap.put(CI)I:87 - InsertUnaryOp IINC -1 value
   * 10 Strong Mutation 141: gnu.trove.impl.sync.TSynchronizedCharIntMap.hashCode()I:173 - DeleteStatement: hashCode()I
   * 11 gnu.trove.impl.sync.TSynchronizedCharIntMap.hashCode()I: root-Branch
   */

  @Test
  public void test37()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      tSynchronizedCharIntMap0.put('u', 0);
      int int0 = tSynchronizedCharIntMap0.hashCode();
      assertEquals(1, tCharIntHashMap0.size());
      assertEquals(117, int0);
  }

  //Test case number: 38
  /*
   * 4 covered goals:
   * 1 Strong Mutation 140: gnu.trove.impl.sync.TSynchronizedCharIntMap.hashCode()I:173 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 2 Strong Mutation 139: gnu.trove.impl.sync.TSynchronizedCharIntMap.hashCode()I:173 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 139: gnu.trove.impl.sync.TSynchronizedCharIntMap.hashCode()I:173 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 140: gnu.trove.impl.sync.TSynchronizedCharIntMap.hashCode()I:173 - DeleteField: mLgnu/trove/map/TCharIntMap;
   */

  @Test
  public void test38()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[4] = 'J';
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0, (Object) charArray0[5]);
      tSynchronizedCharIntMap0.hashCode();
      charArray0[4] = '}';
  }

  //Test case number: 39
  /*
   * 7 covered goals:
   * 1 Strong Mutation 144: gnu.trove.impl.sync.TSynchronizedCharIntMap.toString()Ljava/lang/String;:176 - DeleteStatement: toString()Ljava/lang/String;
   * 2 Strong Mutation 143: gnu.trove.impl.sync.TSynchronizedCharIntMap.toString()Ljava/lang/String;:176 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 3 Strong Mutation 142: gnu.trove.impl.sync.TSynchronizedCharIntMap.toString()Ljava/lang/String;:176 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 143: gnu.trove.impl.sync.TSynchronizedCharIntMap.toString()Ljava/lang/String;:176 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 5 Strong Mutation 142: gnu.trove.impl.sync.TSynchronizedCharIntMap.toString()Ljava/lang/String;:176 - DeleteField: mutexLjava/lang/Object;
   * 6 Strong Mutation 144: gnu.trove.impl.sync.TSynchronizedCharIntMap.toString()Ljava/lang/String;:176 - DeleteStatement: toString()Ljava/lang/String;
   * 7 gnu.trove.impl.sync.TSynchronizedCharIntMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test39()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0);
      String string0 = tSynchronizedCharIntMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 40
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.<init>(Lgnu/trove/map/TCharIntMap;)V: I17 Branch 1 IFNONNULL L59 - false
   * 2 Strong Mutation 0: gnu.trove.impl.sync.TSynchronizedCharIntMap.<init>(Lgnu/trove/map/TCharIntMap;)V:59 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test40()  throws Throwable  {
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = null;
      try {
        tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 41
  /*
   * 9 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.keySet()Lgnu/trove/set/TCharSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 Strong Mutation 50: gnu.trove.impl.sync.TSynchronizedCharIntMap.keySet()Lgnu/trove/set/TCharSet;:106 - DeleteField: mutexLjava/lang/Object;
   * 3 Strong Mutation 53: gnu.trove.impl.sync.TSynchronizedCharIntMap.keySet()Lgnu/trove/set/TCharSet;:108 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 4 Strong Mutation 52: gnu.trove.impl.sync.TSynchronizedCharIntMap.keySet()Lgnu/trove/set/TCharSet;:107 - ReplaceComparisonOperator != null -> = null
   * 5 Strong Mutation 56: gnu.trove.impl.sync.TSynchronizedCharIntMap.keySet()Lgnu/trove/set/TCharSet;:109 - DeleteField: keySetLgnu/trove/set/TCharSet;
   * 6 Strong Mutation 50: gnu.trove.impl.sync.TSynchronizedCharIntMap.keySet()Lgnu/trove/set/TCharSet;:106 - DeleteField: mutexLjava/lang/Object;
   * 7 Strong Mutation 53: gnu.trove.impl.sync.TSynchronizedCharIntMap.keySet()Lgnu/trove/set/TCharSet;:108 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 8 Strong Mutation 56: gnu.trove.impl.sync.TSynchronizedCharIntMap.keySet()Lgnu/trove/set/TCharSet;:109 - DeleteField: keySetLgnu/trove/set/TCharSet;
   * 9 gnu.trove.impl.sync.TSynchronizedCharIntMap.keySet()Lgnu/trove/set/TCharSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test41()  throws Throwable  {
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap(790, 790);
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0, (Object) "");
      TSynchronizedCharSet tSynchronizedCharSet0 = (TSynchronizedCharSet)tSynchronizedCharIntMap0.keySet();
      assertNotNull(tSynchronizedCharSet0);
      
      TSynchronizedCharSet tSynchronizedCharSet1 = (TSynchronizedCharSet)tSynchronizedCharIntMap0.keySet();
      assertSame(tSynchronizedCharSet1, tSynchronizedCharSet0);
  }

  //Test case number: 42
  /*
   * 10 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedCharIntMap.valueCollection()Lgnu/trove/TIntCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 Strong Mutation 1: gnu.trove.impl.sync.TSynchronizedCharIntMap.<init>(Lgnu/trove/map/TCharIntMap;Ljava/lang/Object;)V:67 - ReplaceVariable mutex -> mutex
   * 3 Strong Mutation 63: gnu.trove.impl.sync.TSynchronizedCharIntMap.valueCollection()Lgnu/trove/TIntCollection;:120 - DeleteField: mutexLjava/lang/Object;
   * 4 Strong Mutation 69: gnu.trove.impl.sync.TSynchronizedCharIntMap.valueCollection()Lgnu/trove/TIntCollection;:123 - DeleteField: valuesLgnu/trove/TIntCollection;
   * 5 Strong Mutation 65: gnu.trove.impl.sync.TSynchronizedCharIntMap.valueCollection()Lgnu/trove/TIntCollection;:121 - ReplaceComparisonOperator != null -> = null
   * 6 Strong Mutation 66: gnu.trove.impl.sync.TSynchronizedCharIntMap.valueCollection()Lgnu/trove/TIntCollection;:122 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 7 Strong Mutation 63: gnu.trove.impl.sync.TSynchronizedCharIntMap.valueCollection()Lgnu/trove/TIntCollection;:120 - DeleteField: mutexLjava/lang/Object;
   * 8 Strong Mutation 69: gnu.trove.impl.sync.TSynchronizedCharIntMap.valueCollection()Lgnu/trove/TIntCollection;:123 - DeleteField: valuesLgnu/trove/TIntCollection;
   * 9 Strong Mutation 66: gnu.trove.impl.sync.TSynchronizedCharIntMap.valueCollection()Lgnu/trove/TIntCollection;:122 - DeleteField: mLgnu/trove/map/TCharIntMap;
   * 10 gnu.trove.impl.sync.TSynchronizedCharIntMap.valueCollection()Lgnu/trove/TIntCollection;: I11 Branch 3 IFNONNULL L121 - false
   */

  @Test
  public void test42()  throws Throwable  {
      char[] charArray0 = new char[6];
      TCharIntHashMap tCharIntHashMap0 = new TCharIntHashMap();
      TSynchronizedCharIntMap tSynchronizedCharIntMap0 = new TSynchronizedCharIntMap((TCharIntMap) tCharIntHashMap0, (Object) charArray0[2]);
      TSynchronizedIntCollection tSynchronizedIntCollection0 = (TSynchronizedIntCollection)tSynchronizedCharIntMap0.valueCollection();
      assertNotNull(tSynchronizedIntCollection0);
      
      TSynchronizedIntCollection tSynchronizedIntCollection1 = (TSynchronizedIntCollection)tSynchronizedCharIntMap0.valueCollection();
      assertSame(tSynchronizedIntCollection1, tSynchronizedIntCollection0);
  }
}

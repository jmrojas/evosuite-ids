/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.PrimeFinder;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class PrimeFinderEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 37 covered goals:
   * 1 Weak Mutation 0: gnu.trove.impl.PrimeFinder.nextPrime(I)I:150 - DeleteField: primeCapacities[I
   * 2 Weak Mutation 1: gnu.trove.impl.PrimeFinder.nextPrime(I)I:150 - ReplaceVariable desiredCapacity -> largestPrime
   * 3 Weak Mutation 2: gnu.trove.impl.PrimeFinder.nextPrime(I)I:150 - InsertUnaryOp Negation of desiredCapacity
   * 4 Weak Mutation 3: gnu.trove.impl.PrimeFinder.nextPrime(I)I:150 - InsertUnaryOp IINC 1 desiredCapacity
   * 5 Weak Mutation 4: gnu.trove.impl.PrimeFinder.nextPrime(I)I:150 - InsertUnaryOp IINC -1 desiredCapacity
   * 6 Weak Mutation 5: gnu.trove.impl.PrimeFinder.nextPrime(I)I:150 - DeleteStatement: binarySearch([II)I
   * 7 Weak Mutation 6: gnu.trove.impl.PrimeFinder.nextPrime(I)I:151 - ReplaceVariable i -> largestPrime
   * 8 Weak Mutation 7: gnu.trove.impl.PrimeFinder.nextPrime(I)I:151 - ReplaceVariable i -> desiredCapacity
   * 9 Weak Mutation 8: gnu.trove.impl.PrimeFinder.nextPrime(I)I:151 - InsertUnaryOp Negation of i
   * 10 Weak Mutation 9: gnu.trove.impl.PrimeFinder.nextPrime(I)I:151 - InsertUnaryOp IINC 1 i
   * 11 Weak Mutation 10: gnu.trove.impl.PrimeFinder.nextPrime(I)I:151 - InsertUnaryOp IINC -1 i
   * 12 Weak Mutation 11: gnu.trove.impl.PrimeFinder.nextPrime(I)I:151 - ReplaceComparisonOperator >= -> ==
   * 13 Weak Mutation 25: gnu.trove.impl.PrimeFinder.nextPrime(I)I:156 - ReplaceVariable i -> largestPrime
   * 14 Weak Mutation 24: gnu.trove.impl.PrimeFinder.nextPrime(I)I:156 - DeleteField: primeCapacities[I
   * 15 Weak Mutation 27: gnu.trove.impl.PrimeFinder.nextPrime(I)I:156 - InsertUnaryOp Negation of i
   * 16 Weak Mutation 26: gnu.trove.impl.PrimeFinder.nextPrime(I)I:156 - ReplaceVariable i -> desiredCapacity
   * 17 Weak Mutation 29: gnu.trove.impl.PrimeFinder.nextPrime(I)I:156 - InsertUnaryOp IINC -1 i
   * 18 Weak Mutation 28: gnu.trove.impl.PrimeFinder.nextPrime(I)I:156 - InsertUnaryOp IINC 1 i
   * 19 gnu.trove.impl.PrimeFinder.nextPrime(I)I: I9 Branch 1 IFGE L151 - true
   * 20 Weak Mutation 0: gnu.trove.impl.PrimeFinder.nextPrime(I)I:150 - DeleteField: primeCapacities[I
   * 21 Weak Mutation 1: gnu.trove.impl.PrimeFinder.nextPrime(I)I:150 - ReplaceVariable desiredCapacity -> largestPrime
   * 22 Weak Mutation 2: gnu.trove.impl.PrimeFinder.nextPrime(I)I:150 - InsertUnaryOp Negation of desiredCapacity
   * 23 Weak Mutation 3: gnu.trove.impl.PrimeFinder.nextPrime(I)I:150 - InsertUnaryOp IINC 1 desiredCapacity
   * 24 Weak Mutation 4: gnu.trove.impl.PrimeFinder.nextPrime(I)I:150 - InsertUnaryOp IINC -1 desiredCapacity
   * 25 Weak Mutation 5: gnu.trove.impl.PrimeFinder.nextPrime(I)I:150 - DeleteStatement: binarySearch([II)I
   * 26 Weak Mutation 6: gnu.trove.impl.PrimeFinder.nextPrime(I)I:151 - ReplaceVariable i -> largestPrime
   * 27 Weak Mutation 7: gnu.trove.impl.PrimeFinder.nextPrime(I)I:151 - ReplaceVariable i -> desiredCapacity
   * 28 Weak Mutation 8: gnu.trove.impl.PrimeFinder.nextPrime(I)I:151 - InsertUnaryOp Negation of i
   * 29 Weak Mutation 9: gnu.trove.impl.PrimeFinder.nextPrime(I)I:151 - InsertUnaryOp IINC 1 i
   * 30 Weak Mutation 10: gnu.trove.impl.PrimeFinder.nextPrime(I)I:151 - InsertUnaryOp IINC -1 i
   * 31 Weak Mutation 11: gnu.trove.impl.PrimeFinder.nextPrime(I)I:151 - ReplaceComparisonOperator >= -> ==
   * 32 Weak Mutation 25: gnu.trove.impl.PrimeFinder.nextPrime(I)I:156 - ReplaceVariable i -> largestPrime
   * 33 Weak Mutation 24: gnu.trove.impl.PrimeFinder.nextPrime(I)I:156 - DeleteField: primeCapacities[I
   * 34 Weak Mutation 27: gnu.trove.impl.PrimeFinder.nextPrime(I)I:156 - InsertUnaryOp Negation of i
   * 35 Weak Mutation 26: gnu.trove.impl.PrimeFinder.nextPrime(I)I:156 - ReplaceVariable i -> desiredCapacity
   * 36 Weak Mutation 29: gnu.trove.impl.PrimeFinder.nextPrime(I)I:156 - InsertUnaryOp IINC -1 i
   * 37 Weak Mutation 28: gnu.trove.impl.PrimeFinder.nextPrime(I)I:156 - InsertUnaryOp IINC 1 i
   */

  @Test
  public void test0()  throws Throwable  {
      int int0 = PrimeFinder.nextPrime(43853);
      assertEquals(43853, int0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 Weak Mutation 12: gnu.trove.impl.PrimeFinder.nextPrime(I)I:151 - ReplaceComparisonOperator >= -> >
   * 2 Weak Mutation 12: gnu.trove.impl.PrimeFinder.nextPrime(I)I:151 - ReplaceComparisonOperator >= -> >
   */

  @Test
  public void test1()  throws Throwable  {
      int int0 = PrimeFinder.nextPrime(3);
      assertEquals(3, int0);
  }

  //Test case number: 2
  /*
   * 40 covered goals:
   * 1 Weak Mutation 21: gnu.trove.impl.PrimeFinder.nextPrime(I)I:154 - ReplaceArithmeticOperator - -> %
   * 2 Weak Mutation 0: gnu.trove.impl.PrimeFinder.nextPrime(I)I:150 - DeleteField: primeCapacities[I
   * 3 Weak Mutation 1: gnu.trove.impl.PrimeFinder.nextPrime(I)I:150 - ReplaceVariable desiredCapacity -> largestPrime
   * 4 Weak Mutation 2: gnu.trove.impl.PrimeFinder.nextPrime(I)I:150 - InsertUnaryOp Negation of desiredCapacity
   * 5 Weak Mutation 3: gnu.trove.impl.PrimeFinder.nextPrime(I)I:150 - InsertUnaryOp IINC 1 desiredCapacity
   * 6 Weak Mutation 4: gnu.trove.impl.PrimeFinder.nextPrime(I)I:150 - InsertUnaryOp IINC -1 desiredCapacity
   * 7 Weak Mutation 5: gnu.trove.impl.PrimeFinder.nextPrime(I)I:150 - DeleteStatement: binarySearch([II)I
   * 8 Weak Mutation 6: gnu.trove.impl.PrimeFinder.nextPrime(I)I:151 - ReplaceVariable i -> largestPrime
   * 9 Weak Mutation 7: gnu.trove.impl.PrimeFinder.nextPrime(I)I:151 - ReplaceVariable i -> desiredCapacity
   * 10 Weak Mutation 8: gnu.trove.impl.PrimeFinder.nextPrime(I)I:151 - InsertUnaryOp Negation of i
   * 11 Weak Mutation 9: gnu.trove.impl.PrimeFinder.nextPrime(I)I:151 - InsertUnaryOp IINC 1 i
   * 12 Weak Mutation 10: gnu.trove.impl.PrimeFinder.nextPrime(I)I:151 - InsertUnaryOp IINC -1 i
   * 13 Weak Mutation 13: gnu.trove.impl.PrimeFinder.nextPrime(I)I:151 - ReplaceComparisonOperator >= -> -1
   * 14 Weak Mutation 14: gnu.trove.impl.PrimeFinder.nextPrime(I)I:154 - ReplaceVariable i -> largestPrime
   * 15 Weak Mutation 15: gnu.trove.impl.PrimeFinder.nextPrime(I)I:154 - ReplaceVariable i -> desiredCapacity
   * 16 Weak Mutation 17: gnu.trove.impl.PrimeFinder.nextPrime(I)I:154 - InsertUnaryOp IINC 1 i
   * 17 Weak Mutation 16: gnu.trove.impl.PrimeFinder.nextPrime(I)I:154 - InsertUnaryOp Negation of i
   * 18 Weak Mutation 19: gnu.trove.impl.PrimeFinder.nextPrime(I)I:154 - ReplaceConstant - 1 -> 0
   * 19 Weak Mutation 18: gnu.trove.impl.PrimeFinder.nextPrime(I)I:154 - InsertUnaryOp IINC -1 i
   * 20 Weak Mutation 20: gnu.trove.impl.PrimeFinder.nextPrime(I)I:154 - ReplaceArithmeticOperator - -> +
   * 21 Weak Mutation 23: gnu.trove.impl.PrimeFinder.nextPrime(I)I:154 - ReplaceArithmeticOperator - -> *
   * 22 Weak Mutation 22: gnu.trove.impl.PrimeFinder.nextPrime(I)I:154 - ReplaceArithmeticOperator - -> /
   * 23 Weak Mutation 25: gnu.trove.impl.PrimeFinder.nextPrime(I)I:156 - ReplaceVariable i -> largestPrime
   * 24 Weak Mutation 24: gnu.trove.impl.PrimeFinder.nextPrime(I)I:156 - DeleteField: primeCapacities[I
   * 25 Weak Mutation 27: gnu.trove.impl.PrimeFinder.nextPrime(I)I:156 - InsertUnaryOp Negation of i
   * 26 Weak Mutation 26: gnu.trove.impl.PrimeFinder.nextPrime(I)I:156 - ReplaceVariable i -> desiredCapacity
   * 27 Weak Mutation 29: gnu.trove.impl.PrimeFinder.nextPrime(I)I:156 - InsertUnaryOp IINC -1 i
   * 28 Weak Mutation 28: gnu.trove.impl.PrimeFinder.nextPrime(I)I:156 - InsertUnaryOp IINC 1 i
   * 29 Weak Mutation 13: gnu.trove.impl.PrimeFinder.nextPrime(I)I:151 - ReplaceComparisonOperator >= -> -1
   * 30 Weak Mutation 14: gnu.trove.impl.PrimeFinder.nextPrime(I)I:154 - ReplaceVariable i -> largestPrime
   * 31 Weak Mutation 15: gnu.trove.impl.PrimeFinder.nextPrime(I)I:154 - ReplaceVariable i -> desiredCapacity
   * 32 Weak Mutation 17: gnu.trove.impl.PrimeFinder.nextPrime(I)I:154 - InsertUnaryOp IINC 1 i
   * 33 Weak Mutation 16: gnu.trove.impl.PrimeFinder.nextPrime(I)I:154 - InsertUnaryOp Negation of i
   * 34 Weak Mutation 19: gnu.trove.impl.PrimeFinder.nextPrime(I)I:154 - ReplaceConstant - 1 -> 0
   * 35 Weak Mutation 18: gnu.trove.impl.PrimeFinder.nextPrime(I)I:154 - InsertUnaryOp IINC -1 i
   * 36 Weak Mutation 21: gnu.trove.impl.PrimeFinder.nextPrime(I)I:154 - ReplaceArithmeticOperator - -> %
   * 37 Weak Mutation 20: gnu.trove.impl.PrimeFinder.nextPrime(I)I:154 - ReplaceArithmeticOperator - -> +
   * 38 Weak Mutation 23: gnu.trove.impl.PrimeFinder.nextPrime(I)I:154 - ReplaceArithmeticOperator - -> *
   * 39 Weak Mutation 22: gnu.trove.impl.PrimeFinder.nextPrime(I)I:154 - ReplaceArithmeticOperator - -> /
   * 40 gnu.trove.impl.PrimeFinder.nextPrime(I)I: I9 Branch 1 IFGE L151 - false
   */

  @Test
  public void test2()  throws Throwable  {
      int int0 = PrimeFinder.nextPrime(170);
      assertEquals(179, int0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TDoubleFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet;
import gnu.trove.map.TDoubleDoubleMap;
import gnu.trove.map.hash.TDoubleDoubleHashMap;
import gnu.trove.procedure.TDoubleDoubleProcedure;
import gnu.trove.procedure.TDoubleProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableDoubleDoubleMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.containsKey(D)Z: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap((-1518), (-1518), (-1518), (-1518));
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      boolean boolean0 = tUnmodifiableDoubleDoubleMap0.containsKey((double) (-1518));
      assertEquals(false, boolean0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.forEachKey(Lgnu/trove/procedure/TDoubleProcedure;)Z: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(doubleArray0, doubleArray0);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleDoubleMap0.forEachKey((TDoubleProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.adjustOrPutValue(DDD)D: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      double[] doubleArray0 = new double[15];
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(doubleArray0, doubleArray0);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleDoubleMap0.adjustOrPutValue(6.360262212547228, 0.0, 0.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.clear()V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      double[] doubleArray0 = new double[14];
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(doubleArray0, doubleArray0);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleDoubleMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.increment(D)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(doubleArray0, doubleArray0);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleDoubleMap0.increment((-1454.2700809690793));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.keys()[D: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      double[] doubleArray0 = new double[15];
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(doubleArray0, doubleArray0);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      double[] doubleArray1 = tUnmodifiableDoubleDoubleMap0.keys();
      assertNotSame(doubleArray0, doubleArray1);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.putIfAbsent(DD)D: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleDoubleMap0.putIfAbsent((double) 1, (double) 1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.hashCode()I: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      int int0 = tUnmodifiableDoubleDoubleMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.put(DD)D: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap((-28), 623.4027F, (double) 623.4027F, (double) (-28));
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleDoubleMap0.put((double) 623.4027F, (double) 623.4027F);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.containsValue(D)Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap((-1518), (-1518), (-1518), (-1518));
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      boolean boolean0 = tUnmodifiableDoubleDoubleMap0.containsValue((double) (-1518));
      assertEquals(false, boolean0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.get(D)D: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[15];
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(doubleArray0, doubleArray0);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      double double0 = tUnmodifiableDoubleDoubleMap0.get(6.360262212547228);
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.values([D)[D: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap((-1518), (-1518), (-1518), (-1518));
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      double[] doubleArray0 = tUnmodifiableDoubleDoubleMap0.values(tDoubleDoubleHashMap0._set);
      assertNotNull(doubleArray0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.getNoEntryValue()D: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      double double0 = tUnmodifiableDoubleDoubleMap0.getNoEntryValue();
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap((-1), (-1), (-1), (-1));
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      boolean boolean0 = tUnmodifiableDoubleDoubleMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.forEachEntry(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      boolean boolean0 = tUnmodifiableDoubleDoubleMap0.forEachEntry((TDoubleDoubleProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.putAll(Lgnu/trove/map/TDoubleDoubleMap;)V: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(1034, 1034, 1034, 1034);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleDoubleMap0.putAll((TDoubleDoubleMap) tDoubleDoubleHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap((-1518), (-1518), (-1518), (-1518));
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      String string0 = tUnmodifiableDoubleDoubleMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(1038, 1038, 1038, 1038);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      HashMap<Double, Double> hashMap0 = new HashMap<Double, Double>();
      // Undeclared exception!
      try {
        tUnmodifiableDoubleDoubleMap0.putAll((Map<? extends Double, ? extends Double>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.keys([D)[D: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[15];
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(doubleArray0, doubleArray0);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      double[] doubleArray1 = tUnmodifiableDoubleDoubleMap0.keys(doubleArray0);
      assertSame(doubleArray1, doubleArray0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.retainEntries(Lgnu/trove/procedure/TDoubleDoubleProcedure;)Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleDoubleMap0.retainEntries((TDoubleDoubleProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 20
  /*
   * 7 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.iterator()Lgnu/trove/iterator/TDoubleDoubleIterator;: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.size()I: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableDoubleDoubleMap;)V: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap$1.value()D: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap$1.advance()V: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap$1.key()D: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap$1.hasNext()Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[14];
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(doubleArray0, doubleArray0);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap((TDoubleDoubleMap) tUnmodifiableDoubleDoubleMap0);
      assertEquals(1, tUnmodifiableDoubleDoubleMap0.size());
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.adjustValue(DD)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap((-1330), (-1330), (-1330), (-1330));
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleDoubleMap0.adjustValue((double) (-1330), (double) (-1330));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.remove(D)D: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleDoubleMap0.remove((-26.04722523551958));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.values()[D: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      double[] doubleArray0 = tUnmodifiableDoubleDoubleMap0.values();
      assertNotNull(doubleArray0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.getNoEntryKey()D: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap((-1518), (-1518), (-1518), (-1518));
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      double double0 = tUnmodifiableDoubleDoubleMap0.getNoEntryKey();
      assertEquals((-1518.0), double0, 0.01D);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.forEachValue(Lgnu/trove/procedure/TDoubleProcedure;)Z: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap((-1518), (-1518), (-1518), (-1518));
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      boolean boolean0 = tUnmodifiableDoubleDoubleMap0.forEachValue((TDoubleProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.transformValues(Lgnu/trove/function/TDoubleFunction;)V: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(1470, 1470, 1470, 1470);
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleDoubleMap0.transformValues((TDoubleFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = null;
      try {
        tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.keySet()Lgnu/trove/set/TDoubleSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.keySet()Lgnu/trove/set/TDoubleSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet0 = (TUnmodifiableDoubleSet)tUnmodifiableDoubleDoubleMap0.keySet();
      assertNotNull(tUnmodifiableDoubleSet0);
      
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet1 = (TUnmodifiableDoubleSet)tUnmodifiableDoubleDoubleMap0.keySet();
      assertSame(tUnmodifiableDoubleSet1, tUnmodifiableDoubleSet0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.valueCollection()Lgnu/trove/TDoubleCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap((-1518), (-1518), (-1518), (-1518));
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      TUnmodifiableDoubleCollection tUnmodifiableDoubleCollection0 = (TUnmodifiableDoubleCollection)tUnmodifiableDoubleDoubleMap0.valueCollection();
      assertNotNull(tUnmodifiableDoubleCollection0);
      
      TUnmodifiableDoubleCollection tUnmodifiableDoubleCollection1 = (TUnmodifiableDoubleCollection)tUnmodifiableDoubleDoubleMap0.valueCollection();
      assertSame(tUnmodifiableDoubleCollection1, tUnmodifiableDoubleCollection0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleDoubleMap.<init>(Lgnu/trove/map/TDoubleDoubleMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      TUnmodifiableDoubleDoubleMap tUnmodifiableDoubleDoubleMap0 = new TUnmodifiableDoubleDoubleMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      boolean boolean0 = tUnmodifiableDoubleDoubleMap0.equals((Object) "English (United States)");
      assertEquals(false, boolean0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TFloatFunction;
import gnu.trove.map.TShortFloatMap;
import gnu.trove.map.hash.TShortFloatHashMap;
import gnu.trove.procedure.TFloatProcedure;
import gnu.trove.procedure.TShortFloatProcedure;
import gnu.trove.procedure.TShortProcedure;
import gnu.trove.set.TShortSet;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TShortFloatHashMapEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 87 covered goals:
   * 1 Weak Mutation 305: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:133 - ReplaceComparisonOperator == -> !=
   * 2 Weak Mutation 307: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:135 - InsertUnaryOp Negation
   * 3 Weak Mutation 306: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:135 - ReplaceVariable hashmap -> this
   * 4 Weak Mutation 308: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:135 - DeleteField: _loadFactorF
   * 5 Weak Mutation 309: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:136 - ReplaceVariable hashmap -> this
   * 6 Weak Mutation 310: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:136 - InsertUnaryOp Negation
   * 7 Weak Mutation 313: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:137 - InsertUnaryOp Negation
   * 8 Weak Mutation 312: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:137 - ReplaceVariable hashmap -> this
   * 9 Weak Mutation 315: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:139 - InsertUnaryOp Negation
   * 10 Weak Mutation 319: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:139 - ReplaceComparisonOperator == -> -2
   * 11 Weak Mutation 326: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:143 - ReplaceConstant - 0.0 -> 1.0
   * 12 Weak Mutation 327: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:143 - ReplaceConstant - 0.0 -> -1.0
   * 13 Weak Mutation 324: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:143 - InsertUnaryOp Negation
   * 14 Weak Mutation 331: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:143 - ReplaceComparisonOperator == -> -2
   * 15 Weak Mutation 328: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:143 - DeleteStatement: floatSub(FF)I
   * 16 Weak Mutation 343: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceArithmeticOperator / -> -
   * 17 Weak Mutation 342: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - DeleteField: _loadFactorF
   * 18 Weak Mutation 341: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - InsertUnaryOp Negation
   * 19 Weak Mutation 340: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceConstant - 10.0 -> 11.0
   * 20 Weak Mutation 339: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceConstant - 10.0 -> 9.0
   * 21 Weak Mutation 338: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceConstant - 10.0 -> -1.0
   * 22 Weak Mutation 337: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceConstant - 10.0 -> 1.0
   * 23 Weak Mutation 336: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceConstant - 10.0 -> 0.0
   * 24 Weak Mutation 348: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - DeleteStatement: setUp(I)I
   * 25 Weak Mutation 347: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - DeleteStatement: ceil(D)D
   * 26 Weak Mutation 346: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceArithmeticOperator / -> *
   * 27 Weak Mutation 345: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceArithmeticOperator / -> %
   * 28 Weak Mutation 344: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceArithmeticOperator / -> +
   * 29 Weak Mutation 349: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:148 - DeleteStatement: putAll(Lgnu/trove/map/TShortFloatMap;)V
   * 30 Weak Mutation 502: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:241 - DeleteStatement: size()I
   * 31 Weak Mutation 503: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:241 - DeleteStatement: ensureCapacity(I)V
   * 32 Weak Mutation 504: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:242 - DeleteStatement: iterator()Lgnu/trove/iterator/TShortFloatIterator;
   * 33 Weak Mutation 505: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:243 - DeleteStatement: hasNext()Z
   * 34 Weak Mutation 506: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:243 - ReplaceComparisonOperator == -> !=
   * 35 gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.<init>(Lgnu/trove/map/hash/TShortFloatHashMap;Lgnu/trove/map/hash/TShortFloatHashMap;)V: root-Branch
   * 36 gnu.trove.map.hash.TShortFloatHashMap.iterator()Lgnu/trove/iterator/TShortFloatIterator;: root-Branch
   * 37 gnu.trove.map.hash.TShortFloatHashMap.<init>()V: root-Branch
   * 38 gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V: I10 Branch 34 IFEQ L133 - false
   * 39 gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V: I38 Branch 35 IFEQ L139 - true
   * 40 gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V: I52 Branch 36 IFEQ L143 - true
   * 41 gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V: I15 Branch 43 IFEQ L243 - true
   * 42 Weak Mutation 305: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:133 - ReplaceComparisonOperator == -> !=
   * 43 Weak Mutation 307: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:135 - InsertUnaryOp Negation
   * 44 Weak Mutation 306: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:135 - ReplaceVariable hashmap -> this
   * 45 Weak Mutation 309: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:136 - ReplaceVariable hashmap -> this
   * 46 Weak Mutation 308: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:135 - DeleteField: _loadFactorF
   * 47 Weak Mutation 310: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:136 - InsertUnaryOp Negation
   * 48 Weak Mutation 313: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:137 - InsertUnaryOp Negation
   * 49 Weak Mutation 312: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:137 - ReplaceVariable hashmap -> this
   * 50 Weak Mutation 315: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:139 - InsertUnaryOp Negation
   * 51 Weak Mutation 319: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:139 - ReplaceComparisonOperator == -> -2
   * 52 Weak Mutation 343: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceArithmeticOperator / -> -
   * 53 Weak Mutation 342: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - DeleteField: _loadFactorF
   * 54 Weak Mutation 341: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - InsertUnaryOp Negation
   * 55 Weak Mutation 340: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceConstant - 10.0 -> 11.0
   * 56 Weak Mutation 339: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceConstant - 10.0 -> 9.0
   * 57 Weak Mutation 338: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceConstant - 10.0 -> -1.0
   * 58 Weak Mutation 337: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceConstant - 10.0 -> 1.0
   * 59 Weak Mutation 336: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceConstant - 10.0 -> 0.0
   * 60 Weak Mutation 351: gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I:162 - InsertUnaryOp IINC 1 initialCapacity
   * 61 Weak Mutation 350: gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I:162 - InsertUnaryOp Negation of initialCapacity
   * 62 Weak Mutation 349: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:148 - DeleteStatement: putAll(Lgnu/trove/map/TShortFloatMap;)V
   * 63 Weak Mutation 348: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - DeleteStatement: setUp(I)I
   * 64 Weak Mutation 347: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - DeleteStatement: ceil(D)D
   * 65 Weak Mutation 346: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceArithmeticOperator / -> *
   * 66 Weak Mutation 345: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceArithmeticOperator / -> %
   * 67 Weak Mutation 344: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceArithmeticOperator / -> +
   * 68 Weak Mutation 326: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:143 - ReplaceConstant - 0.0 -> 1.0
   * 69 Weak Mutation 327: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:143 - ReplaceConstant - 0.0 -> -1.0
   * 70 Weak Mutation 324: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:143 - InsertUnaryOp Negation
   * 71 Weak Mutation 331: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:143 - ReplaceComparisonOperator == -> -2
   * 72 Weak Mutation 328: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:143 - DeleteStatement: floatSub(FF)I
   * 73 Weak Mutation 356: gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I:163 - InsertUnaryOp IINC -1 capacity
   * 74 Weak Mutation 357: gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I:164 - ReplaceVariable capacity -> initialCapacity
   * 75 Weak Mutation 358: gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I:164 - InsertUnaryOp Negation of capacity
   * 76 Weak Mutation 359: gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I:164 - InsertUnaryOp IINC 1 capacity
   * 77 Weak Mutation 352: gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I:162 - InsertUnaryOp IINC -1 initialCapacity
   * 78 Weak Mutation 353: gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I:163 - ReplaceVariable capacity -> initialCapacity
   * 79 Weak Mutation 354: gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I:163 - InsertUnaryOp Negation of capacity
   * 80 Weak Mutation 355: gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I:163 - InsertUnaryOp IINC 1 capacity
   * 81 Weak Mutation 360: gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I:164 - InsertUnaryOp IINC -1 capacity
   * 82 Weak Mutation 504: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:242 - DeleteStatement: iterator()Lgnu/trove/iterator/TShortFloatIterator;
   * 83 Weak Mutation 505: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:243 - DeleteStatement: hasNext()Z
   * 84 Weak Mutation 506: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:243 - ReplaceComparisonOperator == -> !=
   * 85 Weak Mutation 502: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:241 - DeleteStatement: size()I
   * 86 Weak Mutation 503: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:241 - DeleteStatement: ensureCapacity(I)V
   * 87 gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I: root-Branch
   */

//   @Test
//   public void test0()  throws Throwable  {
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap();
//       TShortFloatHashMap tShortFloatHashMap1 = new TShortFloatHashMap((TShortFloatMap) tShortFloatHashMap0);
//       assertEquals(0.0F, tShortFloatHashMap1.getNoEntryValue(), 0.01F);
//       assertEquals(23, tShortFloatHashMap1.capacity());
//   }

  //Test case number: 1
  /*
   * 31 covered goals:
   * 1 Weak Mutation 311: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:136 - DeleteField: no_entry_keyS
   * 2 Weak Mutation 314: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:137 - DeleteField: no_entry_valueF
   * 3 Weak Mutation 317: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:139 - ReplaceComparisonOperator == -> >=
   * 4 Weak Mutation 316: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:139 - DeleteField: no_entry_keyS
   * 5 Weak Mutation 322: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:140 - DeleteField: no_entry_keyS
   * 6 Weak Mutation 323: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:140 - DeleteStatement: fill([SS)V
   * 7 Weak Mutation 320: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:140 - DeleteField: _set[S
   * 8 Weak Mutation 321: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:140 - InsertUnaryOp Negation
   * 9 Weak Mutation 325: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:143 - DeleteField: no_entry_valueF
   * 10 Weak Mutation 329: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:143 - ReplaceComparisonOperator == -> >=
   * 11 Weak Mutation 334: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:144 - DeleteField: no_entry_valueF
   * 12 Weak Mutation 335: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:144 - DeleteStatement: fill([FF)V
   * 13 Weak Mutation 332: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:144 - DeleteField: _values[F
   * 14 Weak Mutation 333: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:144 - InsertUnaryOp Negation
   * 15 gnu.trove.map.hash.TShortFloatHashMap.<init>(IFSF)V: root-Branch
   * 16 gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V: I38 Branch 35 IFEQ L139 - false
   * 17 gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V: I52 Branch 36 IFEQ L143 - false
   * 18 Weak Mutation 311: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:136 - DeleteField: no_entry_keyS
   * 19 Weak Mutation 314: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:137 - DeleteField: no_entry_valueF
   * 20 Weak Mutation 317: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:139 - ReplaceComparisonOperator == -> >=
   * 21 Weak Mutation 316: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:139 - DeleteField: no_entry_keyS
   * 22 Weak Mutation 325: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:143 - DeleteField: no_entry_valueF
   * 23 Weak Mutation 322: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:140 - DeleteField: no_entry_keyS
   * 24 Weak Mutation 323: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:140 - DeleteStatement: fill([SS)V
   * 25 Weak Mutation 320: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:140 - DeleteField: _set[S
   * 26 Weak Mutation 321: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:140 - InsertUnaryOp Negation
   * 27 Weak Mutation 334: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:144 - DeleteField: no_entry_valueF
   * 28 Weak Mutation 335: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:144 - DeleteStatement: fill([FF)V
   * 29 Weak Mutation 332: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:144 - DeleteField: _values[F
   * 30 Weak Mutation 333: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:144 - InsertUnaryOp Negation
   * 31 Weak Mutation 329: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:143 - ReplaceComparisonOperator == -> >=
   */

//   @Test
//   public void test1()  throws Throwable  {
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(1, (float) 1, (short)9, (float) (short)9);
//       TShortFloatHashMap tShortFloatHashMap1 = new TShortFloatHashMap((TShortFloatMap) tShortFloatHashMap0);
//       assertEquals(11, tShortFloatHashMap1.capacity());
//       assertEquals(9.0F, tShortFloatHashMap1.getNoEntryValue(), 0.01F);
//       assertEquals(9, tShortFloatHashMap1.getNoEntryKey());
//   }

  //Test case number: 2
  /*
   * 82 covered goals:
   * 1 Weak Mutation 318: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:139 - ReplaceComparisonOperator == -> <=
   * 2 Weak Mutation 361: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:175 - DeleteField: _set[S
   * 3 Weak Mutation 362: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:177 - DeleteField: _set[S
   * 4 Weak Mutation 363: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:178 - DeleteField: _values[F
   * 5 Weak Mutation 364: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:179 - DeleteField: _states[B
   * 6 Weak Mutation 368: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:181 - InsertUnaryOp IINC -1 newCapacity
   * 7 Weak Mutation 366: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:181 - InsertUnaryOp Negation of newCapacity
   * 8 Weak Mutation 367: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:181 - InsertUnaryOp IINC 1 newCapacity
   * 9 Weak Mutation 372: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:182 - InsertUnaryOp IINC -1 newCapacity
   * 10 Weak Mutation 371: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:182 - InsertUnaryOp IINC 1 newCapacity
   * 11 Weak Mutation 370: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:182 - InsertUnaryOp Negation of newCapacity
   * 12 Weak Mutation 375: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:183 - InsertUnaryOp IINC 1 newCapacity
   * 13 Weak Mutation 374: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:183 - InsertUnaryOp Negation of newCapacity
   * 14 Weak Mutation 376: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:183 - InsertUnaryOp IINC -1 newCapacity
   * 15 Weak Mutation 381: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - ReplaceVariable i -> newCapacity
   * 16 Weak Mutation 380: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - InsertUnaryOp IINC -1 oldCapacity
   * 17 Weak Mutation 383: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - InsertUnaryOp Negation of i
   * 18 Weak Mutation 382: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - ReplaceVariable i -> oldCapacity
   * 19 Weak Mutation 379: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - InsertUnaryOp IINC 1 oldCapacity
   * 20 Weak Mutation 378: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - InsertUnaryOp Negation of oldCapacity
   * 21 Weak Mutation 387: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - ReplaceVariable i -> oldCapacity
   * 22 Weak Mutation 386: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - ReplaceVariable i -> newCapacity
   * 23 Weak Mutation 385: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - InsertUnaryOp IINC -1 i
   * 24 Weak Mutation 384: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - InsertUnaryOp IINC 1 i
   * 25 Weak Mutation 390: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - ReplaceComparisonOperator <= -> -1
   * 26 Weak Mutation 389: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - ReplaceComparisonOperator <= -> <
   * 27 Weak Mutation 395: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - InsertUnaryOp IINC 1 i
   * 28 Weak Mutation 394: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - InsertUnaryOp Negation of i
   * 29 Weak Mutation 393: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - ReplaceVariable i -> oldCapacity
   * 30 Weak Mutation 392: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - ReplaceVariable i -> newCapacity
   * 31 Weak Mutation 398: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - ReplaceComparisonOperator != -> ==
   * 32 Weak Mutation 397: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - ReplaceConstant - 1 -> 0
   * 33 Weak Mutation 396: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - InsertUnaryOp IINC -1 i
   * 34 Weak Mutation 391: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - ReplaceVariable oldStates -> _states
   * 35 gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 36 gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 37 gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 38 Weak Mutation 308: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:135 - DeleteField: _loadFactorF
   * 39 Weak Mutation 311: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:136 - DeleteField: no_entry_keyS
   * 40 Weak Mutation 316: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:139 - DeleteField: no_entry_keyS
   * 41 Weak Mutation 342: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - DeleteField: _loadFactorF
   * 42 Weak Mutation 349: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:148 - DeleteStatement: putAll(Lgnu/trove/map/TShortFloatMap;)V
   * 43 Weak Mutation 345: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceArithmeticOperator / -> %
   * 44 Weak Mutation 322: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:140 - DeleteField: no_entry_keyS
   * 45 Weak Mutation 323: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:140 - DeleteStatement: fill([SS)V
   * 46 Weak Mutation 320: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:140 - DeleteField: _set[S
   * 47 Weak Mutation 321: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:140 - InsertUnaryOp Negation
   * 48 Weak Mutation 329: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:143 - ReplaceComparisonOperator == -> >=
   * 49 Weak Mutation 318: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:139 - ReplaceComparisonOperator == -> <=
   * 50 Weak Mutation 372: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:182 - InsertUnaryOp IINC -1 newCapacity
   * 51 Weak Mutation 375: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:183 - InsertUnaryOp IINC 1 newCapacity
   * 52 Weak Mutation 374: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:183 - InsertUnaryOp Negation of newCapacity
   * 53 Weak Mutation 368: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:181 - InsertUnaryOp IINC -1 newCapacity
   * 54 Weak Mutation 371: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:182 - InsertUnaryOp IINC 1 newCapacity
   * 55 Weak Mutation 370: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:182 - InsertUnaryOp Negation of newCapacity
   * 56 Weak Mutation 381: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - ReplaceVariable i -> newCapacity
   * 57 Weak Mutation 380: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - InsertUnaryOp IINC -1 oldCapacity
   * 58 Weak Mutation 383: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - InsertUnaryOp Negation of i
   * 59 Weak Mutation 382: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - ReplaceVariable i -> oldCapacity
   * 60 Weak Mutation 376: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:183 - InsertUnaryOp IINC -1 newCapacity
   * 61 Weak Mutation 379: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - InsertUnaryOp IINC 1 oldCapacity
   * 62 Weak Mutation 378: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - InsertUnaryOp Negation of oldCapacity
   * 63 Weak Mutation 364: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:179 - DeleteField: _states[B
   * 64 Weak Mutation 366: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:181 - InsertUnaryOp Negation of newCapacity
   * 65 Weak Mutation 367: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:181 - InsertUnaryOp IINC 1 newCapacity
   * 66 Weak Mutation 361: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:175 - DeleteField: _set[S
   * 67 Weak Mutation 362: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:177 - DeleteField: _set[S
   * 68 Weak Mutation 363: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:178 - DeleteField: _values[F
   * 69 Weak Mutation 395: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - InsertUnaryOp IINC 1 i
   * 70 Weak Mutation 394: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - InsertUnaryOp Negation of i
   * 71 Weak Mutation 393: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - ReplaceVariable i -> oldCapacity
   * 72 Weak Mutation 392: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - ReplaceVariable i -> newCapacity
   * 73 Weak Mutation 398: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - ReplaceComparisonOperator != -> ==
   * 74 Weak Mutation 397: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - ReplaceConstant - 1 -> 0
   * 75 Weak Mutation 396: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - InsertUnaryOp IINC -1 i
   * 76 Weak Mutation 387: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - ReplaceVariable i -> oldCapacity
   * 77 Weak Mutation 386: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - ReplaceVariable i -> newCapacity
   * 78 Weak Mutation 385: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - InsertUnaryOp IINC -1 i
   * 79 Weak Mutation 384: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - InsertUnaryOp IINC 1 i
   * 80 Weak Mutation 391: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - ReplaceVariable oldStates -> _states
   * 81 Weak Mutation 390: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - ReplaceComparisonOperator <= -> -1
   * 82 Weak Mutation 389: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - ReplaceComparisonOperator <= -> <
   */

//   @Test
//   public void test2()  throws Throwable  {
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((int) (short)1, (float) (short) (-1255), (short) (-396), 10.0F);
//       TShortFloatHashMap tShortFloatHashMap1 = new TShortFloatHashMap((TShortFloatMap) tShortFloatHashMap0);
//       assertEquals(-396, tShortFloatHashMap1.getNoEntryKey());
//       assertEquals(10.0F, tShortFloatHashMap1.getNoEntryValue(), 0.01F);
//       assertEquals(3, tShortFloatHashMap1.capacity());
//   }

  //Test case number: 3
  /*
   * 32 covered goals:
   * 1 Weak Mutation 330: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:143 - ReplaceComparisonOperator == -> <=
   * 2 Weak Mutation 305: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:133 - ReplaceComparisonOperator == -> !=
   * 3 Weak Mutation 307: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:135 - InsertUnaryOp Negation
   * 4 Weak Mutation 306: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:135 - ReplaceVariable hashmap -> this
   * 5 Weak Mutation 309: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:136 - ReplaceVariable hashmap -> this
   * 6 Weak Mutation 310: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:136 - InsertUnaryOp Negation
   * 7 Weak Mutation 313: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:137 - InsertUnaryOp Negation
   * 8 Weak Mutation 312: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:137 - ReplaceVariable hashmap -> this
   * 9 Weak Mutation 315: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:139 - InsertUnaryOp Negation
   * 10 Weak Mutation 314: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:137 - DeleteField: no_entry_valueF
   * 11 Weak Mutation 319: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:139 - ReplaceComparisonOperator == -> -2
   * 12 Weak Mutation 343: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceArithmeticOperator / -> -
   * 13 Weak Mutation 341: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - InsertUnaryOp Negation
   * 14 Weak Mutation 340: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceConstant - 10.0 -> 11.0
   * 15 Weak Mutation 339: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceConstant - 10.0 -> 9.0
   * 16 Weak Mutation 338: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceConstant - 10.0 -> -1.0
   * 17 Weak Mutation 337: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceConstant - 10.0 -> 1.0
   * 18 Weak Mutation 336: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceConstant - 10.0 -> 0.0
   * 19 Weak Mutation 348: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - DeleteStatement: setUp(I)I
   * 20 Weak Mutation 347: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - DeleteStatement: ceil(D)D
   * 21 Weak Mutation 346: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceArithmeticOperator / -> *
   * 22 Weak Mutation 344: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:146 - ReplaceArithmeticOperator / -> +
   * 23 Weak Mutation 326: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:143 - ReplaceConstant - 0.0 -> 1.0
   * 24 Weak Mutation 327: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:143 - ReplaceConstant - 0.0 -> -1.0
   * 25 Weak Mutation 324: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:143 - InsertUnaryOp Negation
   * 26 Weak Mutation 325: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:143 - DeleteField: no_entry_valueF
   * 27 Weak Mutation 334: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:144 - DeleteField: no_entry_valueF
   * 28 Weak Mutation 335: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:144 - DeleteStatement: fill([FF)V
   * 29 Weak Mutation 332: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:144 - DeleteField: _values[F
   * 30 Weak Mutation 333: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:144 - InsertUnaryOp Negation
   * 31 Weak Mutation 328: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:143 - DeleteStatement: floatSub(FF)I
   * 32 Weak Mutation 330: gnu.trove.map.hash.TShortFloatHashMap.<init>(Lgnu/trove/map/TShortFloatMap;)V:143 - ReplaceComparisonOperator == -> <=
   */

  @Test
  public void test3()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-327), (float) (short)0, (short)0, (float) (-327));
      TShortFloatHashMap tShortFloatHashMap1 = null;
      try {
        tShortFloatHashMap1 = new TShortFloatHashMap((TShortFloatMap) tShortFloatHashMap0);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  //Test case number: 4
  /*
   * 90 covered goals:
   * 1 Weak Mutation 400: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:187 - ReplaceVariable i -> newCapacity
   * 2 Weak Mutation 417: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - ReplaceVariable i -> newCapacity
   * 3 Weak Mutation 373: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:183 - ReplaceVariable newCapacity -> oldCapacity
   * 4 Weak Mutation 369: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:182 - ReplaceVariable newCapacity -> oldCapacity
   * 5 Weak Mutation 377: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - ReplaceVariable oldCapacity -> newCapacity
   * 6 Weak Mutation 365: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:181 - ReplaceVariable newCapacity -> oldCapacity
   * 7 Weak Mutation 410: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - ReplaceVariable index -> newCapacity
   * 8 Weak Mutation 411: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - ReplaceVariable index -> oldCapacity
   * 9 Weak Mutation 408: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:188 - DeleteStatement: insertKey(S)I
   * 10 Weak Mutation 409: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - DeleteField: _values[F
   * 11 Weak Mutation 414: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - InsertUnaryOp IINC 1 index
   * 12 Weak Mutation 415: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - InsertUnaryOp IINC -1 index
   * 13 Weak Mutation 412: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - ReplaceVariable index -> i
   * 14 Weak Mutation 413: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - InsertUnaryOp Negation of index
   * 15 Weak Mutation 402: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:187 - InsertUnaryOp Negation of i
   * 16 Weak Mutation 403: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:187 - InsertUnaryOp IINC 1 i
   * 17 Weak Mutation 401: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:187 - ReplaceVariable i -> oldCapacity
   * 18 Weak Mutation 406: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:188 - InsertUnaryOp IINC 1 o
   * 19 Weak Mutation 407: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:188 - InsertUnaryOp IINC -1 o
   * 20 Weak Mutation 404: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:187 - InsertUnaryOp IINC -1 i
   * 21 Weak Mutation 405: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:188 - InsertUnaryOp Negation of o
   * 22 Weak Mutation 399: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:187 - ReplaceVariable oldKeys -> _set
   * 23 Weak Mutation 416: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - ReplaceVariable i -> index
   * 24 Weak Mutation 419: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - InsertUnaryOp Negation of i
   * 25 Weak Mutation 418: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - ReplaceVariable i -> oldCapacity
   * 26 Weak Mutation 421: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - InsertUnaryOp IINC -1 i
   * 27 Weak Mutation 420: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - InsertUnaryOp IINC 1 i
   * 28 Weak Mutation 373: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:183 - ReplaceVariable newCapacity -> oldCapacity
   * 29 Weak Mutation 369: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:182 - ReplaceVariable newCapacity -> oldCapacity
   * 30 Weak Mutation 377: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - ReplaceVariable oldCapacity -> newCapacity
   * 31 Weak Mutation 365: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:181 - ReplaceVariable newCapacity -> oldCapacity
   * 32 Weak Mutation 410: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - ReplaceVariable index -> newCapacity
   * 33 Weak Mutation 411: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - ReplaceVariable index -> oldCapacity
   * 34 Weak Mutation 408: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:188 - DeleteStatement: insertKey(S)I
   * 35 Weak Mutation 409: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - DeleteField: _values[F
   * 36 Weak Mutation 414: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - InsertUnaryOp IINC 1 index
   * 37 Weak Mutation 415: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - InsertUnaryOp IINC -1 index
   * 38 Weak Mutation 412: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - ReplaceVariable index -> i
   * 39 Weak Mutation 413: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - InsertUnaryOp Negation of index
   * 40 Weak Mutation 402: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:187 - InsertUnaryOp Negation of i
   * 41 Weak Mutation 403: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:187 - InsertUnaryOp IINC 1 i
   * 42 Weak Mutation 400: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:187 - ReplaceVariable i -> newCapacity
   * 43 Weak Mutation 401: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:187 - ReplaceVariable i -> oldCapacity
   * 44 Weak Mutation 406: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:188 - InsertUnaryOp IINC 1 o
   * 45 Weak Mutation 407: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:188 - InsertUnaryOp IINC -1 o
   * 46 Weak Mutation 404: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:187 - InsertUnaryOp IINC -1 i
   * 47 Weak Mutation 405: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:188 - InsertUnaryOp Negation of o
   * 48 Weak Mutation 399: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:187 - ReplaceVariable oldKeys -> _set
   * 49 Weak Mutation 440: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:205 - ReplaceComparisonOperator >= -> ==
   * 50 Weak Mutation 433: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:204 - InsertUnaryOp Negation of key
   * 51 Weak Mutation 434: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:204 - InsertUnaryOp IINC 1 key
   * 52 Weak Mutation 435: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:204 - InsertUnaryOp IINC -1 key
   * 53 Weak Mutation 436: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:204 - DeleteStatement: insertKey(S)I
   * 54 Weak Mutation 437: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:205 - InsertUnaryOp Negation of index
   * 55 Weak Mutation 438: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:205 - InsertUnaryOp IINC 1 index
   * 56 Weak Mutation 439: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:205 - InsertUnaryOp IINC -1 index
   * 57 Weak Mutation 417: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - ReplaceVariable i -> newCapacity
   * 58 Weak Mutation 416: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - ReplaceVariable i -> index
   * 59 Weak Mutation 419: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - InsertUnaryOp Negation of i
   * 60 Weak Mutation 418: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - ReplaceVariable i -> oldCapacity
   * 61 Weak Mutation 421: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - InsertUnaryOp IINC -1 i
   * 62 Weak Mutation 420: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:189 - InsertUnaryOp IINC 1 i
   * 63 Weak Mutation 478: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:219 - InsertUnaryOp Negation of index
   * 64 Weak Mutation 479: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:219 - InsertUnaryOp IINC 1 index
   * 65 Weak Mutation 477: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:219 - DeleteField: _values[F
   * 66 Weak Mutation 463: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:214 - ReplaceComparisonOperator >= -> ==
   * 67 Weak Mutation 462: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:214 - InsertUnaryOp Negation of index
   * 68 Weak Mutation 461: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:213 - ReplaceConstant - 1 -> 0
   * 69 Weak Mutation 459: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:212 - InsertUnaryOp Negation
   * 70 Weak Mutation 458: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:207 - InsertUnaryOp IINC -1 index
   * 71 Weak Mutation 457: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:207 - InsertUnaryOp IINC 1 index
   * 72 Weak Mutation 456: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:207 - InsertUnaryOp Negation of index
   * 73 Weak Mutation 455: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:207 - InsertUnaryOp Negation of value
   * 74 Weak Mutation 454: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:207 - InsertUnaryOp IINC -1 key
   * 75 Weak Mutation 453: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:207 - InsertUnaryOp IINC 1 key
   * 76 Weak Mutation 452: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:207 - InsertUnaryOp Negation of key
   * 77 Weak Mutation 489: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:225 - InsertUnaryOp Negation of previous
   * 78 Weak Mutation 488: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:225 - ReplaceVariable previous -> value
   * 79 Weak Mutation 485: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:222 - InsertUnaryOp Negation
   * 80 Weak Mutation 484: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:221 - ReplaceComparisonOperator == -> !=
   * 81 Weak Mutation 487: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:222 - DeleteStatement: postInsertHook(Z)V
   * 82 Weak Mutation 486: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:222 - DeleteField: consumeFreeSlotZ
   * 83 Weak Mutation 481: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:219 - ReplaceVariable value -> previous
   * 84 Weak Mutation 480: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:219 - InsertUnaryOp IINC -1 index
   * 85 Weak Mutation 483: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:221 - InsertUnaryOp Negation of isNewMapping
   * 86 Weak Mutation 482: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:219 - InsertUnaryOp Negation of value
   * 87 gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 88 gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F: I12 Branch 40 IFGE L214 - true
   * 89 gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F: I41 Branch 41 IFEQ L221 - false
   * 90 gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F: I9 Branch 39 IFGE L205 - true
   */

  @Test
  public void test4()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap();
      tShortFloatHashMap0.putIfAbsent((short)1567, (short)1);
      tShortFloatHashMap0.compact();
      tShortFloatHashMap0.compact();
      assertEquals(false, tShortFloatHashMap0.isEmpty());
      assertEquals("{1567=1.0}", tShortFloatHashMap0.toString());
  }

  //Test case number: 5
  /*
   * 73 covered goals:
   * 1 Weak Mutation 449: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:206 - ReplaceArithmeticOperator - -> %
   * 2 Weak Mutation 442: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:205 - ReplaceComparisonOperator >= -> -1
   * 3 Weak Mutation 443: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:206 - DeleteField: _values[F
   * 4 Weak Mutation 444: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:206 - InsertUnaryOp Negation of index
   * 5 Weak Mutation 445: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:206 - InsertUnaryOp IINC 1 index
   * 6 Weak Mutation 446: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:206 - InsertUnaryOp IINC -1 index
   * 7 Weak Mutation 447: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:206 - ReplaceConstant - 1 -> 0
   * 8 Weak Mutation 451: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:206 - ReplaceArithmeticOperator - -> *
   * 9 Weak Mutation 450: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:206 - ReplaceArithmeticOperator - -> /
   * 10 Weak Mutation 448: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:206 - ReplaceArithmeticOperator - -> +
   * 11 Weak Mutation 283: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - ReplaceVariable i -> size
   * 12 Weak Mutation 282: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - ReplaceConstant - 0 -> 1
   * 13 Weak Mutation 281: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:118 - DeleteStatement: min(II)I
   * 14 Weak Mutation 280: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:118 - ReplaceVariable keys -> _set
   * 15 Weak Mutation 287: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - ReplaceVariable size -> i
   * 16 Weak Mutation 286: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - InsertUnaryOp IINC -1 i
   * 17 Weak Mutation 285: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - InsertUnaryOp IINC 1 i
   * 18 Weak Mutation 284: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - InsertUnaryOp Negation of i
   * 19 Weak Mutation 304: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - ReplaceVariable i -> size
   * 20 Weak Mutation 288: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - InsertUnaryOp Negation of size
   * 21 Weak Mutation 289: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - InsertUnaryOp IINC 1 size
   * 22 Weak Mutation 290: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - InsertUnaryOp IINC -1 size
   * 23 Weak Mutation 292: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - ReplaceComparisonOperator >= -> >
   * 24 Weak Mutation 293: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - ReplaceComparisonOperator >= -> -1
   * 25 Weak Mutation 294: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:120 - ReplaceVariable keys -> _set
   * 26 Weak Mutation 295: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:120 - ReplaceVariable i -> size
   * 27 Weak Mutation 296: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:120 - InsertUnaryOp Negation of i
   * 28 Weak Mutation 297: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:120 - InsertUnaryOp IINC 1 i
   * 29 Weak Mutation 298: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:120 - InsertUnaryOp IINC -1 i
   * 30 Weak Mutation 299: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:120 - ReplaceVariable i -> size
   * 31 Weak Mutation 300: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:120 - InsertUnaryOp Negation of i
   * 32 Weak Mutation 301: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:120 - InsertUnaryOp IINC 1 i
   * 33 Weak Mutation 302: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:120 - InsertUnaryOp IINC -1 i
   * 34 Weak Mutation 303: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:120 - DeleteStatement: put(SF)F
   * 35 Weak Mutation 442: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:205 - ReplaceComparisonOperator >= -> -1
   * 36 Weak Mutation 443: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:206 - DeleteField: _values[F
   * 37 Weak Mutation 444: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:206 - InsertUnaryOp Negation of index
   * 38 Weak Mutation 445: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:206 - InsertUnaryOp IINC 1 index
   * 39 Weak Mutation 446: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:206 - InsertUnaryOp IINC -1 index
   * 40 Weak Mutation 447: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:206 - ReplaceConstant - 1 -> 0
   * 41 Weak Mutation 432: gnu.trove.map.hash.TShortFloatHashMap.put(SF)F:198 - InsertUnaryOp IINC -1 index
   * 42 Weak Mutation 425: gnu.trove.map.hash.TShortFloatHashMap.put(SF)F:197 - DeleteStatement: insertKey(S)I
   * 43 Weak Mutation 424: gnu.trove.map.hash.TShortFloatHashMap.put(SF)F:197 - InsertUnaryOp IINC -1 key
   * 44 Weak Mutation 427: gnu.trove.map.hash.TShortFloatHashMap.put(SF)F:198 - InsertUnaryOp IINC 1 key
   * 45 Weak Mutation 426: gnu.trove.map.hash.TShortFloatHashMap.put(SF)F:198 - InsertUnaryOp Negation of key
   * 46 Weak Mutation 429: gnu.trove.map.hash.TShortFloatHashMap.put(SF)F:198 - InsertUnaryOp Negation of value
   * 47 Weak Mutation 428: gnu.trove.map.hash.TShortFloatHashMap.put(SF)F:198 - InsertUnaryOp IINC -1 key
   * 48 Weak Mutation 431: gnu.trove.map.hash.TShortFloatHashMap.put(SF)F:198 - InsertUnaryOp IINC 1 index
   * 49 Weak Mutation 430: gnu.trove.map.hash.TShortFloatHashMap.put(SF)F:198 - InsertUnaryOp Negation of index
   * 50 Weak Mutation 423: gnu.trove.map.hash.TShortFloatHashMap.put(SF)F:197 - InsertUnaryOp IINC 1 key
   * 51 Weak Mutation 422: gnu.trove.map.hash.TShortFloatHashMap.put(SF)F:197 - InsertUnaryOp Negation of key
   * 52 Weak Mutation 476: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:217 - ReplaceConstant - 0 -> 1
   * 53 Weak Mutation 474: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:216 - InsertUnaryOp IINC 1 index
   * 54 Weak Mutation 475: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:216 - InsertUnaryOp IINC -1 index
   * 55 Weak Mutation 472: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:216 - DeleteField: _values[F
   * 56 Weak Mutation 473: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:216 - InsertUnaryOp Negation of index
   * 57 Weak Mutation 470: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:215 - ReplaceArithmeticOperator - -> /
   * 58 Weak Mutation 471: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:215 - ReplaceArithmeticOperator - -> *
   * 59 Weak Mutation 468: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:215 - ReplaceArithmeticOperator - -> +
   * 60 Weak Mutation 466: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:215 - InsertUnaryOp Negation of index
   * 61 Weak Mutation 467: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:215 - ReplaceConstant - 1 -> 0
   * 62 Weak Mutation 464: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:214 - ReplaceComparisonOperator >= -> >
   * 63 Weak Mutation 465: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:214 - ReplaceComparisonOperator >= -> -1
   * 64 Weak Mutation 451: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:206 - ReplaceArithmeticOperator - -> *
   * 65 Weak Mutation 450: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:206 - ReplaceArithmeticOperator - -> /
   * 66 Weak Mutation 449: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:206 - ReplaceArithmeticOperator - -> %
   * 67 Weak Mutation 448: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:206 - ReplaceArithmeticOperator - -> +
   * 68 gnu.trove.map.hash.TShortFloatHashMap.put(SF)F: root-Branch
   * 69 gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F: I12 Branch 40 IFGE L214 - false
   * 70 gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F: I41 Branch 41 IFEQ L221 - true
   * 71 gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F: I9 Branch 39 IFGE L205 - false
   * 72 gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 73 gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V: I24 Branch 33 IF_ICMPGE L119 - false
   */

//   @Test
//   public void test5()  throws Throwable  {
//       short[] shortArray0 = new short[5];
//       shortArray0[3] = (short)5;
//       float[] floatArray0 = new float[9];
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
//       float float0 = tShortFloatHashMap0.putIfAbsent((short)5, Float.POSITIVE_INFINITY);
//       assertEquals("{5=0.0, 0=0.0}", tShortFloatHashMap0.toString());
//       assertEquals(2, tShortFloatHashMap0.size());
//       assertEquals(23, tShortFloatHashMap0.capacity());
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 6
  /*
   * 46 covered goals:
   * 1 Weak Mutation 469: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:215 - ReplaceArithmeticOperator - -> %
   * 2 Weak Mutation 507: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:244 - DeleteStatement: advance()V
   * 3 Weak Mutation 508: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:245 - DeleteStatement: key()S
   * 4 Weak Mutation 509: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:245 - DeleteStatement: value()F
   * 5 Weak Mutation 510: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:245 - DeleteStatement: put(SF)F
   * 6 Weak Mutation 1346: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.advance()V:1143 - DeleteStatement: moveToNextIndex()V
   * 7 Weak Mutation 1352: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.key()S:1148 - DeleteField: _indexI
   * 8 Weak Mutation 1350: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.key()S:1148 - InsertUnaryOp +1
   * 9 Weak Mutation 1351: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.key()S:1148 - InsertUnaryOp -1
   * 10 Weak Mutation 1348: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.key()S:1148 - DeleteField: _set[S
   * 11 Weak Mutation 1349: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.key()S:1148 - InsertUnaryOp Negation
   * 12 Weak Mutation 1347: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.key()S:1148 - DeleteField: this$0Lgnu/trove/map/hash/TShortFloatHashMap;
   * 13 Weak Mutation 1358: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.value()F:1153 - DeleteField: _indexI
   * 14 Weak Mutation 1356: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.value()F:1153 - InsertUnaryOp +1
   * 15 Weak Mutation 1357: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.value()F:1153 - InsertUnaryOp -1
   * 16 Weak Mutation 1354: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.value()F:1153 - DeleteField: _values[F
   * 17 Weak Mutation 1355: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.value()F:1153 - InsertUnaryOp Negation
   * 18 Weak Mutation 1353: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.value()F:1153 - DeleteField: this$0Lgnu/trove/map/hash/TShortFloatHashMap;
   * 19 gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.value()F: root-Branch
   * 20 gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.advance()V: root-Branch
   * 21 gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.key()S: root-Branch
   * 22 gnu.trove.map.hash.TShortFloatHashMap.<init>(I)V: root-Branch
   * 23 gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V: I15 Branch 43 IFEQ L243 - false
   * 24 Weak Mutation 504: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:242 - DeleteStatement: iterator()Lgnu/trove/iterator/TShortFloatIterator;
   * 25 Weak Mutation 505: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:243 - DeleteStatement: hasNext()Z
   * 26 Weak Mutation 506: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:243 - ReplaceComparisonOperator == -> !=
   * 27 Weak Mutation 502: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:241 - DeleteStatement: size()I
   * 28 Weak Mutation 503: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:241 - DeleteStatement: ensureCapacity(I)V
   * 29 Weak Mutation 469: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:215 - ReplaceArithmeticOperator - -> %
   * 30 Weak Mutation 508: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:245 - DeleteStatement: key()S
   * 31 Weak Mutation 509: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:245 - DeleteStatement: value()F
   * 32 Weak Mutation 510: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:245 - DeleteStatement: put(SF)F
   * 33 Weak Mutation 507: gnu.trove.map.hash.TShortFloatHashMap.putAll(Lgnu/trove/map/TShortFloatMap;)V:244 - DeleteStatement: advance()V
   * 34 Weak Mutation 1358: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.value()F:1153 - DeleteField: _indexI
   * 35 Weak Mutation 1356: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.value()F:1153 - InsertUnaryOp +1
   * 36 Weak Mutation 1357: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.value()F:1153 - InsertUnaryOp -1
   * 37 Weak Mutation 1354: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.value()F:1153 - DeleteField: _values[F
   * 38 Weak Mutation 1355: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.value()F:1153 - InsertUnaryOp Negation
   * 39 Weak Mutation 1352: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.key()S:1148 - DeleteField: _indexI
   * 40 Weak Mutation 1353: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.value()F:1153 - DeleteField: this$0Lgnu/trove/map/hash/TShortFloatHashMap;
   * 41 Weak Mutation 1350: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.key()S:1148 - InsertUnaryOp +1
   * 42 Weak Mutation 1351: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.key()S:1148 - InsertUnaryOp -1
   * 43 Weak Mutation 1348: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.key()S:1148 - DeleteField: _set[S
   * 44 Weak Mutation 1349: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.key()S:1148 - InsertUnaryOp Negation
   * 45 Weak Mutation 1346: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.advance()V:1143 - DeleteStatement: moveToNextIndex()V
   * 46 Weak Mutation 1347: gnu.trove.map.hash.TShortFloatHashMap$TShortFloatHashIterator.key()S:1148 - DeleteField: this$0Lgnu/trove/map/hash/TShortFloatHashMap;
   */

  @Test
  public void test6()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(1618);
      tShortFloatHashMap0.put((short) (-1199), (short) (-1199));
      tShortFloatHashMap0.putAll((TShortFloatMap) tShortFloatHashMap0);
      assertEquals(false, tShortFloatHashMap0.isEmpty());
      assertEquals("{-1199=-1199.0}", tShortFloatHashMap0.toString());
  }

  //Test case number: 7
  /*
   * 13 covered goals:
   * 1 Weak Mutation 491: gnu.trove.map.hash.TShortFloatHashMap.putAll(Ljava/util/Map;)V:231 - DeleteStatement: ensureCapacity(I)V
   * 2 Weak Mutation 490: gnu.trove.map.hash.TShortFloatHashMap.putAll(Ljava/util/Map;)V:231 - DeleteStatement: size()I
   * 3 Weak Mutation 493: gnu.trove.map.hash.TShortFloatHashMap.putAll(Ljava/util/Map;)V:233 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 4 Weak Mutation 492: gnu.trove.map.hash.TShortFloatHashMap.putAll(Ljava/util/Map;)V:233 - DeleteStatement: entrySet()Ljava/util/Set;
   * 5 Weak Mutation 495: gnu.trove.map.hash.TShortFloatHashMap.putAll(Ljava/util/Map;)V:233 - ReplaceComparisonOperator == -> !=
   * 6 Weak Mutation 494: gnu.trove.map.hash.TShortFloatHashMap.putAll(Ljava/util/Map;)V:233 - DeleteStatement: hasNext()Z
   * 7 gnu.trove.map.hash.TShortFloatHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - true
   * 8 Weak Mutation 493: gnu.trove.map.hash.TShortFloatHashMap.putAll(Ljava/util/Map;)V:233 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 9 Weak Mutation 492: gnu.trove.map.hash.TShortFloatHashMap.putAll(Ljava/util/Map;)V:233 - DeleteStatement: entrySet()Ljava/util/Set;
   * 10 Weak Mutation 495: gnu.trove.map.hash.TShortFloatHashMap.putAll(Ljava/util/Map;)V:233 - ReplaceComparisonOperator == -> !=
   * 11 Weak Mutation 494: gnu.trove.map.hash.TShortFloatHashMap.putAll(Ljava/util/Map;)V:233 - DeleteStatement: hasNext()Z
   * 12 Weak Mutation 491: gnu.trove.map.hash.TShortFloatHashMap.putAll(Ljava/util/Map;)V:231 - DeleteStatement: ensureCapacity(I)V
   * 13 Weak Mutation 490: gnu.trove.map.hash.TShortFloatHashMap.putAll(Ljava/util/Map;)V:231 - DeleteStatement: size()I
   */

  @Test
  public void test7()  throws Throwable  {
      short[] shortArray0 = new short[2];
      float[] floatArray0 = new float[5];
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
      HashMap<Short, Float> hashMap0 = new HashMap<Short, Float>();
      tShortFloatHashMap0.putAll((Map<? extends Short, ? extends Float>) hashMap0);
      assertEquals(1, tShortFloatHashMap0.size());
      assertEquals(11, tShortFloatHashMap0.capacity());
      assertEquals("{0=0.0}", tShortFloatHashMap0.toString());
  }

  //Test case number: 8
  /*
   * 14 covered goals:
   * 1 Weak Mutation 522: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - DeleteField: no_entry_valueF
   * 2 Weak Mutation 520: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - ReplaceComparisonOperator >= -> -1
   * 3 Weak Mutation 521: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - InsertUnaryOp Negation
   * 4 Weak Mutation 511: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:252 - InsertUnaryOp Negation of key
   * 5 Weak Mutation 516: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - InsertUnaryOp IINC 1 index
   * 6 Weak Mutation 517: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - InsertUnaryOp IINC -1 index
   * 7 Weak Mutation 512: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:252 - InsertUnaryOp IINC 1 key
   * 8 Weak Mutation 513: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:252 - InsertUnaryOp IINC -1 key
   * 9 Weak Mutation 514: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:252 - DeleteStatement: index(S)I
   * 10 Weak Mutation 515: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - InsertUnaryOp Negation of index
   * 11 Weak Mutation 520: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - ReplaceComparisonOperator >= -> -1
   * 12 Weak Mutation 521: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - InsertUnaryOp Negation
   * 13 Weak Mutation 522: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - DeleteField: no_entry_valueF
   * 14 gnu.trove.map.hash.TShortFloatHashMap.get(S)F: I9 Branch 44 IFGE L253 - false
   */

//   @Test
//   public void test8()  throws Throwable  {
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(96, (float) 96, (short)272, (float) (short)272);
//       float float0 = tShortFloatHashMap0.get((short)272);
//       assertEquals(272.0F, float0, 0.01F);
//   }

  //Test case number: 9
  /*
   * 35 covered goals:
   * 1 Weak Mutation 527: gnu.trove.map.hash.TShortFloatHashMap.clear()V:260 - DeleteField: _set[S
   * 2 Weak Mutation 532: gnu.trove.map.hash.TShortFloatHashMap.clear()V:260 - DeleteStatement: fill([SIIS)V
   * 3 Weak Mutation 529: gnu.trove.map.hash.TShortFloatHashMap.clear()V:260 - DeleteField: _set[S
   * 4 Weak Mutation 528: gnu.trove.map.hash.TShortFloatHashMap.clear()V:260 - ReplaceConstant - 0 -> 1
   * 5 Weak Mutation 531: gnu.trove.map.hash.TShortFloatHashMap.clear()V:260 - DeleteField: no_entry_keyS
   * 6 Weak Mutation 530: gnu.trove.map.hash.TShortFloatHashMap.clear()V:260 - InsertUnaryOp Negation
   * 7 Weak Mutation 533: gnu.trove.map.hash.TShortFloatHashMap.clear()V:261 - DeleteField: _values[F
   * 8 Weak Mutation 535: gnu.trove.map.hash.TShortFloatHashMap.clear()V:261 - DeleteField: _values[F
   * 9 Weak Mutation 534: gnu.trove.map.hash.TShortFloatHashMap.clear()V:261 - ReplaceConstant - 0 -> 1
   * 10 Weak Mutation 537: gnu.trove.map.hash.TShortFloatHashMap.clear()V:261 - DeleteField: no_entry_valueF
   * 11 Weak Mutation 536: gnu.trove.map.hash.TShortFloatHashMap.clear()V:261 - InsertUnaryOp Negation
   * 12 Weak Mutation 538: gnu.trove.map.hash.TShortFloatHashMap.clear()V:261 - DeleteStatement: fill([FIIF)V
   * 13 Weak Mutation 541: gnu.trove.map.hash.TShortFloatHashMap.clear()V:262 - DeleteField: _states[B
   * 14 Weak Mutation 540: gnu.trove.map.hash.TShortFloatHashMap.clear()V:262 - ReplaceConstant - 0 -> 1
   * 15 Weak Mutation 543: gnu.trove.map.hash.TShortFloatHashMap.clear()V:262 - DeleteStatement: fill([BIIB)V
   * 16 Weak Mutation 542: gnu.trove.map.hash.TShortFloatHashMap.clear()V:262 - ReplaceConstant - 0 -> 1
   * 17 Weak Mutation 539: gnu.trove.map.hash.TShortFloatHashMap.clear()V:262 - DeleteField: _states[B
   * 18 gnu.trove.map.hash.TShortFloatHashMap.clear()V: root-Branch
   * 19 Weak Mutation 527: gnu.trove.map.hash.TShortFloatHashMap.clear()V:260 - DeleteField: _set[S
   * 20 Weak Mutation 533: gnu.trove.map.hash.TShortFloatHashMap.clear()V:261 - DeleteField: _values[F
   * 21 Weak Mutation 532: gnu.trove.map.hash.TShortFloatHashMap.clear()V:260 - DeleteStatement: fill([SIIS)V
   * 22 Weak Mutation 535: gnu.trove.map.hash.TShortFloatHashMap.clear()V:261 - DeleteField: _values[F
   * 23 Weak Mutation 534: gnu.trove.map.hash.TShortFloatHashMap.clear()V:261 - ReplaceConstant - 0 -> 1
   * 24 Weak Mutation 529: gnu.trove.map.hash.TShortFloatHashMap.clear()V:260 - DeleteField: _set[S
   * 25 Weak Mutation 528: gnu.trove.map.hash.TShortFloatHashMap.clear()V:260 - ReplaceConstant - 0 -> 1
   * 26 Weak Mutation 531: gnu.trove.map.hash.TShortFloatHashMap.clear()V:260 - DeleteField: no_entry_keyS
   * 27 Weak Mutation 530: gnu.trove.map.hash.TShortFloatHashMap.clear()V:260 - InsertUnaryOp Negation
   * 28 Weak Mutation 541: gnu.trove.map.hash.TShortFloatHashMap.clear()V:262 - DeleteField: _states[B
   * 29 Weak Mutation 540: gnu.trove.map.hash.TShortFloatHashMap.clear()V:262 - ReplaceConstant - 0 -> 1
   * 30 Weak Mutation 543: gnu.trove.map.hash.TShortFloatHashMap.clear()V:262 - DeleteStatement: fill([BIIB)V
   * 31 Weak Mutation 542: gnu.trove.map.hash.TShortFloatHashMap.clear()V:262 - ReplaceConstant - 0 -> 1
   * 32 Weak Mutation 537: gnu.trove.map.hash.TShortFloatHashMap.clear()V:261 - DeleteField: no_entry_valueF
   * 33 Weak Mutation 536: gnu.trove.map.hash.TShortFloatHashMap.clear()V:261 - InsertUnaryOp Negation
   * 34 Weak Mutation 539: gnu.trove.map.hash.TShortFloatHashMap.clear()V:262 - DeleteField: _states[B
   * 35 Weak Mutation 538: gnu.trove.map.hash.TShortFloatHashMap.clear()V:261 - DeleteStatement: fill([FIIF)V
   */

  @Test
  public void test9()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(0, (-988.8052F), (short) (-829), 245.81944F);
      tShortFloatHashMap0.clear();
      assertEquals("{}", tShortFloatHashMap0.toString());
  }

  //Test case number: 10
  /*
   * 13 covered goals:
   * 1 Weak Mutation 551: gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z:268 - ReplaceComparisonOperator != -> -1
   * 2 Weak Mutation 546: gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z:268 - InsertUnaryOp +1
   * 3 Weak Mutation 547: gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z:268 - InsertUnaryOp -1
   * 4 Weak Mutation 544: gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z:268 - ReplaceConstant - 0 -> 1
   * 5 Weak Mutation 545: gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z:268 - InsertUnaryOp Negation
   * 6 Weak Mutation 552: gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z:268 - ReplaceConstant - 1 -> 0
   * 7 gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - false
   * 8 Weak Mutation 551: gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z:268 - ReplaceComparisonOperator != -> -1
   * 9 Weak Mutation 546: gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z:268 - InsertUnaryOp +1
   * 10 Weak Mutation 547: gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z:268 - InsertUnaryOp -1
   * 11 Weak Mutation 544: gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z:268 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 545: gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z:268 - InsertUnaryOp Negation
   * 13 Weak Mutation 552: gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z:268 - ReplaceConstant - 1 -> 0
   */

  @Test
  public void test10()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap();
      boolean boolean0 = tShortFloatHashMap0.isEmpty();
      assertEquals(true, boolean0);
      assertEquals(23, tShortFloatHashMap0.capacity());
  }

  //Test case number: 11
  /*
   * 12 covered goals:
   * 1 Weak Mutation 548: gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z:268 - DeleteField: _sizeI
   * 2 Weak Mutation 549: gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z:268 - ReplaceComparisonOperator != -> >
   * 3 Weak Mutation 553: gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z:268 - ReplaceConstant - 0 -> 1
   * 4 gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - true
   * 5 Weak Mutation 546: gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z:268 - InsertUnaryOp +1
   * 6 Weak Mutation 547: gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z:268 - InsertUnaryOp -1
   * 7 Weak Mutation 544: gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z:268 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 545: gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z:268 - InsertUnaryOp Negation
   * 9 Weak Mutation 441: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:205 - ReplaceComparisonOperator >= -> >
   * 10 Weak Mutation 548: gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z:268 - DeleteField: _sizeI
   * 11 Weak Mutation 549: gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z:268 - ReplaceComparisonOperator != -> >
   * 12 Weak Mutation 553: gnu.trove.map.hash.TShortFloatHashMap.isEmpty()Z:268 - ReplaceConstant - 0 -> 1
   */

  @Test
  public void test11()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(1, (float) 1, (short)0, (float) (short)0);
      tShortFloatHashMap0.putIfAbsent((short)0, 1.0F);
      boolean boolean0 = tShortFloatHashMap0.isEmpty();
      assertEquals(1, tShortFloatHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 14 covered goals:
   * 1 Weak Mutation 555: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:274 - DeleteField: no_entry_valueF
   * 2 Weak Mutation 565: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:276 - ReplaceComparisonOperator < -> -2
   * 3 Weak Mutation 558: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:275 - InsertUnaryOp IINC -1 key
   * 4 Weak Mutation 559: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:275 - DeleteStatement: index(S)I
   * 5 Weak Mutation 556: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:275 - InsertUnaryOp Negation of key
   * 6 Weak Mutation 557: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:275 - InsertUnaryOp IINC 1 key
   * 7 Weak Mutation 554: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:274 - InsertUnaryOp Negation
   * 8 Weak Mutation 555: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:274 - DeleteField: no_entry_valueF
   * 9 Weak Mutation 565: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:276 - ReplaceComparisonOperator < -> -2
   * 10 Weak Mutation 562: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:276 - InsertUnaryOp IINC -1 index
   * 11 Weak Mutation 561: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:276 - InsertUnaryOp IINC 1 index
   * 12 Weak Mutation 560: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:276 - InsertUnaryOp Negation of index
   * 13 Weak Mutation 574: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:280 - InsertUnaryOp Negation of prev
   * 14 gnu.trove.map.hash.TShortFloatHashMap.remove(S)F: I14 Branch 46 IFLT L276 - true
   */

//   @Test
//   public void test12()  throws Throwable  {
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(1, (float) 1, (short)9, (float) (short)9);
//       float float0 = tShortFloatHashMap0.remove((short)9);
//       assertEquals(9.0F, float0, 0.01F);
//   }

  //Test case number: 13
  /*
   * 74 covered goals:
   * 1 Weak Mutation 564: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:276 - ReplaceComparisonOperator < -> <=
   * 2 Weak Mutation 567: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:277 - InsertUnaryOp Negation of index
   * 3 Weak Mutation 566: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:277 - DeleteField: _values[F
   * 4 Weak Mutation 569: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:277 - InsertUnaryOp IINC -1 index
   * 5 Weak Mutation 568: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:277 - InsertUnaryOp IINC 1 index
   * 6 Weak Mutation 573: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:278 - DeleteStatement: removeAt(I)V
   * 7 Weak Mutation 572: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:278 - InsertUnaryOp IINC -1 index
   * 8 Weak Mutation 571: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:278 - InsertUnaryOp IINC 1 index
   * 9 Weak Mutation 570: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:278 - InsertUnaryOp Negation of index
   * 10 Weak Mutation 575: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:286 - DeleteField: _values[F
   * 11 Weak Mutation 576: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:286 - InsertUnaryOp Negation of index
   * 12 Weak Mutation 577: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:286 - InsertUnaryOp IINC 1 index
   * 13 Weak Mutation 578: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:286 - InsertUnaryOp IINC -1 index
   * 14 Weak Mutation 579: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:286 - InsertUnaryOp Negation
   * 15 Weak Mutation 580: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:286 - DeleteField: no_entry_valueF
   * 16 Weak Mutation 581: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:287 - InsertUnaryOp Negation of index
   * 17 Weak Mutation 582: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:287 - InsertUnaryOp IINC 1 index
   * 18 Weak Mutation 583: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:287 - InsertUnaryOp IINC -1 index
   * 19 gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V: root-Branch
   * 20 gnu.trove.map.hash.TShortFloatHashMap.remove(S)F: I14 Branch 46 IFLT L276 - false
   * 21 Weak Mutation 372: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:182 - InsertUnaryOp IINC -1 newCapacity
   * 22 Weak Mutation 375: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:183 - InsertUnaryOp IINC 1 newCapacity
   * 23 Weak Mutation 374: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:183 - InsertUnaryOp Negation of newCapacity
   * 24 Weak Mutation 368: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:181 - InsertUnaryOp IINC -1 newCapacity
   * 25 Weak Mutation 371: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:182 - InsertUnaryOp IINC 1 newCapacity
   * 26 Weak Mutation 370: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:182 - InsertUnaryOp Negation of newCapacity
   * 27 Weak Mutation 381: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - ReplaceVariable i -> newCapacity
   * 28 Weak Mutation 380: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - InsertUnaryOp IINC -1 oldCapacity
   * 29 Weak Mutation 383: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - InsertUnaryOp Negation of i
   * 30 Weak Mutation 382: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - ReplaceVariable i -> oldCapacity
   * 31 Weak Mutation 376: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:183 - InsertUnaryOp IINC -1 newCapacity
   * 32 Weak Mutation 379: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - InsertUnaryOp IINC 1 oldCapacity
   * 33 Weak Mutation 378: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - InsertUnaryOp Negation of oldCapacity
   * 34 Weak Mutation 364: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:179 - DeleteField: _states[B
   * 35 Weak Mutation 366: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:181 - InsertUnaryOp Negation of newCapacity
   * 36 Weak Mutation 367: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:181 - InsertUnaryOp IINC 1 newCapacity
   * 37 Weak Mutation 361: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:175 - DeleteField: _set[S
   * 38 Weak Mutation 362: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:177 - DeleteField: _set[S
   * 39 Weak Mutation 363: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:178 - DeleteField: _values[F
   * 40 Weak Mutation 395: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - InsertUnaryOp IINC 1 i
   * 41 Weak Mutation 394: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - InsertUnaryOp Negation of i
   * 42 Weak Mutation 393: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - ReplaceVariable i -> oldCapacity
   * 43 Weak Mutation 392: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - ReplaceVariable i -> newCapacity
   * 44 Weak Mutation 398: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - ReplaceComparisonOperator != -> ==
   * 45 Weak Mutation 397: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - ReplaceConstant - 1 -> 0
   * 46 Weak Mutation 396: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - InsertUnaryOp IINC -1 i
   * 47 Weak Mutation 387: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - ReplaceVariable i -> oldCapacity
   * 48 Weak Mutation 386: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - ReplaceVariable i -> newCapacity
   * 49 Weak Mutation 385: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - InsertUnaryOp IINC -1 i
   * 50 Weak Mutation 384: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - InsertUnaryOp IINC 1 i
   * 51 Weak Mutation 391: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:186 - ReplaceVariable oldStates -> _states
   * 52 Weak Mutation 390: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - ReplaceComparisonOperator <= -> -1
   * 53 Weak Mutation 389: gnu.trove.map.hash.TShortFloatHashMap.rehash(I)V:185 - ReplaceComparisonOperator <= -> <
   * 54 Weak Mutation 460: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:212 - DeleteField: no_entry_valueF
   * 55 Weak Mutation 555: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:274 - DeleteField: no_entry_valueF
   * 56 Weak Mutation 460: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:212 - DeleteField: no_entry_valueF
   * 57 Weak Mutation 567: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:277 - InsertUnaryOp Negation of index
   * 58 Weak Mutation 566: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:277 - DeleteField: _values[F
   * 59 Weak Mutation 564: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:276 - ReplaceComparisonOperator < -> <=
   * 60 Weak Mutation 575: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:286 - DeleteField: _values[F
   * 61 Weak Mutation 573: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:278 - DeleteStatement: removeAt(I)V
   * 62 Weak Mutation 572: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:278 - InsertUnaryOp IINC -1 index
   * 63 Weak Mutation 571: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:278 - InsertUnaryOp IINC 1 index
   * 64 Weak Mutation 570: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:278 - InsertUnaryOp Negation of index
   * 65 Weak Mutation 569: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:277 - InsertUnaryOp IINC -1 index
   * 66 Weak Mutation 568: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:277 - InsertUnaryOp IINC 1 index
   * 67 Weak Mutation 576: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:286 - InsertUnaryOp Negation of index
   * 68 Weak Mutation 577: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:286 - InsertUnaryOp IINC 1 index
   * 69 Weak Mutation 578: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:286 - InsertUnaryOp IINC -1 index
   * 70 Weak Mutation 579: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:286 - InsertUnaryOp Negation
   * 71 Weak Mutation 580: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:286 - DeleteField: no_entry_valueF
   * 72 Weak Mutation 581: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:287 - InsertUnaryOp Negation of index
   * 73 Weak Mutation 582: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:287 - InsertUnaryOp IINC 1 index
   * 74 Weak Mutation 583: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:287 - InsertUnaryOp IINC -1 index
   */

//   @Test
//   public void test13()  throws Throwable  {
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(1, (float) 1, (short)9, (float) (short)9);
//       tShortFloatHashMap0.putIfAbsent((short)9, 1.0F);
//       float float0 = tShortFloatHashMap0.remove((short)9);
//       assertEquals("{}", tShortFloatHashMap0.toString());
//       assertEquals(1.0F, float0, 0.01F);
//   }

  //Test case number: 14
  /*
   * 27 covered goals:
   * 1 Weak Mutation 563: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:276 - ReplaceComparisonOperator < -> !=
   * 2 Weak Mutation 558: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:275 - InsertUnaryOp IINC -1 key
   * 3 Weak Mutation 559: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:275 - DeleteStatement: index(S)I
   * 4 Weak Mutation 556: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:275 - InsertUnaryOp Negation of key
   * 5 Weak Mutation 557: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:275 - InsertUnaryOp IINC 1 key
   * 6 Weak Mutation 554: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:274 - InsertUnaryOp Negation
   * 7 Weak Mutation 567: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:277 - InsertUnaryOp Negation of index
   * 8 Weak Mutation 566: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:277 - DeleteField: _values[F
   * 9 Weak Mutation 562: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:276 - InsertUnaryOp IINC -1 index
   * 10 Weak Mutation 561: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:276 - InsertUnaryOp IINC 1 index
   * 11 Weak Mutation 560: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:276 - InsertUnaryOp Negation of index
   * 12 Weak Mutation 575: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:286 - DeleteField: _values[F
   * 13 Weak Mutation 574: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:280 - InsertUnaryOp Negation of prev
   * 14 Weak Mutation 573: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:278 - DeleteStatement: removeAt(I)V
   * 15 Weak Mutation 572: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:278 - InsertUnaryOp IINC -1 index
   * 16 Weak Mutation 571: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:278 - InsertUnaryOp IINC 1 index
   * 17 Weak Mutation 570: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:278 - InsertUnaryOp Negation of index
   * 18 Weak Mutation 569: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:277 - InsertUnaryOp IINC -1 index
   * 19 Weak Mutation 568: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:277 - InsertUnaryOp IINC 1 index
   * 20 Weak Mutation 576: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:286 - InsertUnaryOp Negation of index
   * 21 Weak Mutation 577: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:286 - InsertUnaryOp IINC 1 index
   * 22 Weak Mutation 578: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:286 - InsertUnaryOp IINC -1 index
   * 23 Weak Mutation 579: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:286 - InsertUnaryOp Negation
   * 24 Weak Mutation 581: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:287 - InsertUnaryOp Negation of index
   * 25 Weak Mutation 582: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:287 - InsertUnaryOp IINC 1 index
   * 26 Weak Mutation 583: gnu.trove.map.hash.TShortFloatHashMap.removeAt(I)V:287 - InsertUnaryOp IINC -1 index
   * 27 Weak Mutation 563: gnu.trove.map.hash.TShortFloatHashMap.remove(S)F:276 - ReplaceComparisonOperator < -> !=
   */

//   @Test
//   public void test14()  throws Throwable  {
//       short[] shortArray0 = new short[8];
//       shortArray0[3] = (short) (-1);
//       float[] floatArray0 = new float[9];
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
//       assertEquals(2, tShortFloatHashMap0.size());
//       
//       float float0 = tShortFloatHashMap0.remove((short) (-1));
//       assertEquals(1, tShortFloatHashMap0.size());
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 15
  /*
   * 48 covered goals:
   * 1 Weak Mutation 610: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - InsertUnaryOp IINC -1 j
   * 2 Weak Mutation 611: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - ReplaceVariable j -> i
   * 3 Weak Mutation 608: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - InsertUnaryOp Negation of j
   * 4 Weak Mutation 609: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - InsertUnaryOp IINC 1 j
   * 5 Weak Mutation 614: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - ReplaceVariable i -> j
   * 6 Weak Mutation 615: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - InsertUnaryOp Negation of i
   * 7 Weak Mutation 612: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - ReplaceVariable k -> keys
   * 8 Weak Mutation 616: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - InsertUnaryOp IINC 1 i
   * 9 Weak Mutation 617: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - InsertUnaryOp IINC -1 i
   * 10 Weak Mutation 605: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - ReplaceVariable keys -> _set
   * 11 Weak Mutation 607: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - ReplaceVariable j -> i
   * 12 Weak Mutation 606: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - ReplaceVariable keys -> k
   * 13 gnu.trove.map.hash.TShortFloatHashMap.keys()[S: I34 Branch 48 IF_ICMPNE L304 - false
   * 14 Weak Mutation 610: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - InsertUnaryOp IINC -1 j
   * 15 Weak Mutation 611: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - ReplaceVariable j -> i
   * 16 Weak Mutation 608: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - InsertUnaryOp Negation of j
   * 17 Weak Mutation 609: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - InsertUnaryOp IINC 1 j
   * 18 Weak Mutation 614: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - ReplaceVariable i -> j
   * 19 Weak Mutation 615: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - InsertUnaryOp Negation of i
   * 20 Weak Mutation 612: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - ReplaceVariable k -> keys
   * 21 Weak Mutation 618: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:308 - ReplaceVariable keys -> _set
   * 22 Weak Mutation 619: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:308 - ReplaceVariable keys -> k
   * 23 Weak Mutation 616: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - InsertUnaryOp IINC 1 i
   * 24 Weak Mutation 617: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - InsertUnaryOp IINC -1 i
   * 25 Weak Mutation 584: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:299 - DeleteStatement: size()I
   * 26 Weak Mutation 585: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:300 - DeleteField: _set[S
   * 27 Weak Mutation 586: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:301 - DeleteField: _states[B
   * 28 Weak Mutation 587: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:303 - ReplaceVariable k -> keys
   * 29 Weak Mutation 589: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:303 - ReplaceConstant - 0 -> 1
   * 30 Weak Mutation 590: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:303 - ReplaceVariable i -> j
   * 31 Weak Mutation 591: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:303 - InsertUnaryOp Negation of i
   * 32 Weak Mutation 593: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:303 - InsertUnaryOp IINC -1 i
   * 33 Weak Mutation 592: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:303 - InsertUnaryOp IINC 1 i
   * 34 Weak Mutation 594: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:303 - ReplaceVariable i -> j
   * 35 Weak Mutation 597: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:303 - ReplaceComparisonOperator <= -> -1
   * 36 Weak Mutation 596: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:303 - ReplaceComparisonOperator <= -> <
   * 37 Weak Mutation 599: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:304 - ReplaceVariable i -> j
   * 38 Weak Mutation 601: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:304 - InsertUnaryOp IINC 1 i
   * 39 Weak Mutation 600: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:304 - InsertUnaryOp Negation of i
   * 40 Weak Mutation 603: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:304 - ReplaceConstant - 1 -> 0
   * 41 Weak Mutation 602: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:304 - InsertUnaryOp IINC -1 i
   * 42 Weak Mutation 605: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - ReplaceVariable keys -> _set
   * 43 Weak Mutation 604: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:304 - ReplaceComparisonOperator != -> ==
   * 44 Weak Mutation 607: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - ReplaceVariable j -> i
   * 45 Weak Mutation 606: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:305 - ReplaceVariable keys -> k
   * 46 gnu.trove.map.hash.TShortFloatHashMap.keys()[S: I27 Branch 47 IFLE L303 - true
   * 47 gnu.trove.map.hash.TShortFloatHashMap.keys()[S: I27 Branch 47 IFLE L303 - false
   * 48 gnu.trove.map.hash.TShortFloatHashMap.keys()[S: I34 Branch 48 IF_ICMPNE L304 - true
   */

  @Test
  public void test15()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(1618);
      tShortFloatHashMap0.put((short) (-1199), (short) (-1199));
      tShortFloatHashMap0.keys();
      assertEquals(false, tShortFloatHashMap0.isEmpty());
      assertEquals("{-1199=-1199.0}", tShortFloatHashMap0.toString());
  }

  //Test case number: 16
  /*
   * 37 covered goals:
   * 1 Weak Mutation 621: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:315 - ReplaceVariable array -> _set
   * 2 Weak Mutation 634: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - ReplaceVariable keys -> array
   * 3 Weak Mutation 670: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:327 - ReplaceVariable array -> keys
   * 4 Weak Mutation 671: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:327 - ReplaceVariable array -> _set
   * 5 Weak Mutation 625: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:315 - ReplaceComparisonOperator >= -> ==
   * 6 Weak Mutation 622: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:315 - InsertUnaryOp Negation of size
   * 7 Weak Mutation 623: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:315 - InsertUnaryOp IINC 1 size
   * 8 Weak Mutation 620: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:314 - DeleteStatement: size()I
   * 9 Weak Mutation 621: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:315 - ReplaceVariable array -> _set
   * 10 Weak Mutation 625: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:315 - ReplaceComparisonOperator >= -> ==
   * 11 Weak Mutation 624: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:315 - InsertUnaryOp IINC -1 size
   * 12 Weak Mutation 631: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:319 - DeleteField: _set[S
   * 13 Weak Mutation 635: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - ReplaceConstant - 0 -> 1
   * 14 Weak Mutation 634: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - ReplaceVariable keys -> array
   * 15 Weak Mutation 632: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:320 - DeleteField: _states[B
   * 16 Weak Mutation 639: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - InsertUnaryOp IINC 1 i
   * 17 Weak Mutation 638: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - InsertUnaryOp Negation of i
   * 18 Weak Mutation 637: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - ReplaceVariable i -> size
   * 19 Weak Mutation 636: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - ReplaceVariable i -> j
   * 20 Weak Mutation 653: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:323 - ReplaceComparisonOperator != -> ==
   * 21 Weak Mutation 652: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:323 - ReplaceConstant - 1 -> 0
   * 22 Weak Mutation 649: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:323 - InsertUnaryOp Negation of i
   * 23 Weak Mutation 648: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:323 - ReplaceVariable i -> size
   * 24 Weak Mutation 651: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:323 - InsertUnaryOp IINC -1 i
   * 25 Weak Mutation 650: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:323 - InsertUnaryOp IINC 1 i
   * 26 Weak Mutation 645: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - ReplaceComparisonOperator <= -> -1
   * 27 Weak Mutation 644: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - ReplaceComparisonOperator <= -> <
   * 28 Weak Mutation 647: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:323 - ReplaceVariable i -> j
   * 29 Weak Mutation 641: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - ReplaceVariable i -> j
   * 30 Weak Mutation 640: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - InsertUnaryOp IINC -1 i
   * 31 Weak Mutation 642: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - ReplaceVariable i -> size
   * 32 Weak Mutation 670: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:327 - ReplaceVariable array -> keys
   * 33 Weak Mutation 671: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:327 - ReplaceVariable array -> _set
   * 34 gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S: I10 Branch 49 IF_ICMPGE L315 - true
   * 35 gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S: I37 Branch 50 IFLE L322 - true
   * 36 gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S: I37 Branch 50 IFLE L322 - false
   * 37 gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test16()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-1604));
      TShortFloatHashMap tShortFloatHashMap1 = new TShortFloatHashMap();
      short[] shortArray0 = tShortFloatHashMap1.keys(tShortFloatHashMap0._set);
      assertNotNull(shortArray0);
      assertEquals(23, tShortFloatHashMap1.capacity());
  }

  //Test case number: 17
  /*
   * 41 covered goals:
   * 1 Weak Mutation 627: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:315 - ReplaceComparisonOperator >= -> -1
   * 2 Weak Mutation 630: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:316 - InsertUnaryOp IINC -1 size
   * 3 Weak Mutation 629: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:316 - InsertUnaryOp IINC 1 size
   * 4 Weak Mutation 628: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:316 - InsertUnaryOp Negation of size
   * 5 Weak Mutation 655: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - ReplaceVariable array -> _set
   * 6 Weak Mutation 654: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - ReplaceVariable array -> keys
   * 7 Weak Mutation 668: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - InsertUnaryOp IINC 1 i
   * 8 Weak Mutation 669: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - InsertUnaryOp IINC -1 i
   * 9 Weak Mutation 664: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - ReplaceVariable keys -> array
   * 10 Weak Mutation 665: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - ReplaceVariable i -> j
   * 11 Weak Mutation 666: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - ReplaceVariable i -> size
   * 12 Weak Mutation 667: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - InsertUnaryOp Negation of i
   * 13 Weak Mutation 660: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - InsertUnaryOp IINC -1 j
   * 14 Weak Mutation 661: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - ReplaceVariable j -> i
   * 15 Weak Mutation 662: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - ReplaceVariable j -> size
   * 16 Weak Mutation 656: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - ReplaceVariable j -> i
   * 17 Weak Mutation 657: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - ReplaceVariable j -> size
   * 18 Weak Mutation 658: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - InsertUnaryOp Negation of j
   * 19 Weak Mutation 659: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - InsertUnaryOp IINC 1 j
   * 20 gnu.trove.map.hash.TShortFloatHashMap.<init>(IF)V: root-Branch
   * 21 gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S: I10 Branch 49 IF_ICMPGE L315 - false
   * 22 gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S: I44 Branch 51 IF_ICMPNE L323 - false
   * 23 Weak Mutation 627: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:315 - ReplaceComparisonOperator >= -> -1
   * 24 Weak Mutation 630: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:316 - InsertUnaryOp IINC -1 size
   * 25 Weak Mutation 629: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:316 - InsertUnaryOp IINC 1 size
   * 26 Weak Mutation 628: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:316 - InsertUnaryOp Negation of size
   * 27 Weak Mutation 655: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - ReplaceVariable array -> _set
   * 28 Weak Mutation 654: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - ReplaceVariable array -> keys
   * 29 Weak Mutation 668: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - InsertUnaryOp IINC 1 i
   * 30 Weak Mutation 669: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - InsertUnaryOp IINC -1 i
   * 31 Weak Mutation 664: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - ReplaceVariable keys -> array
   * 32 Weak Mutation 665: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - ReplaceVariable i -> j
   * 33 Weak Mutation 666: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - ReplaceVariable i -> size
   * 34 Weak Mutation 667: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - InsertUnaryOp Negation of i
   * 35 Weak Mutation 660: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - InsertUnaryOp IINC -1 j
   * 36 Weak Mutation 661: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - ReplaceVariable j -> i
   * 37 Weak Mutation 662: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - ReplaceVariable j -> size
   * 38 Weak Mutation 656: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - ReplaceVariable j -> i
   * 39 Weak Mutation 657: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - ReplaceVariable j -> size
   * 40 Weak Mutation 658: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - InsertUnaryOp Negation of j
   * 41 Weak Mutation 659: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:324 - InsertUnaryOp IINC 1 j
   */

  @Test
  public void test17()  throws Throwable  {
      short[] shortArray0 = new short[8];
      shortArray0[1] = (short)350;
      shortArray0[3] = (short) (-1);
      shortArray0[4] = (short) (-1255);
      float[] floatArray0 = new float[9];
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
      TShortFloatHashMap tShortFloatHashMap1 = new TShortFloatHashMap((-1897), 0.0F);
      short[] shortArray1 = tShortFloatHashMap0.keys(tShortFloatHashMap1._set);
      assertNotNull(shortArray1);
      assertEquals(23, tShortFloatHashMap0.capacity());
      assertEquals("{-1255=0.0, 350=0.0, -1=0.0, 0=0.0}", tShortFloatHashMap0.toString());
      assertEquals(4, tShortFloatHashMap0.size());
  }

  //Test case number: 18
  /*
   * 49 covered goals:
   * 1 Weak Mutation 626: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:315 - ReplaceComparisonOperator >= -> >
   * 2 Weak Mutation 618: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:308 - ReplaceVariable keys -> _set
   * 3 Weak Mutation 619: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:308 - ReplaceVariable keys -> k
   * 4 Weak Mutation 622: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:315 - InsertUnaryOp Negation of size
   * 5 Weak Mutation 623: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:315 - InsertUnaryOp IINC 1 size
   * 6 Weak Mutation 620: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:314 - DeleteStatement: size()I
   * 7 Weak Mutation 621: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:315 - ReplaceVariable array -> _set
   * 8 Weak Mutation 624: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:315 - InsertUnaryOp IINC -1 size
   * 9 Weak Mutation 631: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:319 - DeleteField: _set[S
   * 10 Weak Mutation 635: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 634: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - ReplaceVariable keys -> array
   * 12 Weak Mutation 632: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:320 - DeleteField: _states[B
   * 13 Weak Mutation 639: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - InsertUnaryOp IINC 1 i
   * 14 Weak Mutation 638: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - InsertUnaryOp Negation of i
   * 15 Weak Mutation 637: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - ReplaceVariable i -> size
   * 16 Weak Mutation 636: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - ReplaceVariable i -> j
   * 17 Weak Mutation 584: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:299 - DeleteStatement: size()I
   * 18 Weak Mutation 585: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:300 - DeleteField: _set[S
   * 19 Weak Mutation 586: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:301 - DeleteField: _states[B
   * 20 Weak Mutation 587: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:303 - ReplaceVariable k -> keys
   * 21 Weak Mutation 589: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:303 - ReplaceConstant - 0 -> 1
   * 22 Weak Mutation 590: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:303 - ReplaceVariable i -> j
   * 23 Weak Mutation 591: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:303 - InsertUnaryOp Negation of i
   * 24 Weak Mutation 593: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:303 - InsertUnaryOp IINC -1 i
   * 25 Weak Mutation 592: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:303 - InsertUnaryOp IINC 1 i
   * 26 Weak Mutation 594: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:303 - ReplaceVariable i -> j
   * 27 Weak Mutation 597: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:303 - ReplaceComparisonOperator <= -> -1
   * 28 Weak Mutation 596: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:303 - ReplaceComparisonOperator <= -> <
   * 29 Weak Mutation 599: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:304 - ReplaceVariable i -> j
   * 30 Weak Mutation 601: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:304 - InsertUnaryOp IINC 1 i
   * 31 Weak Mutation 600: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:304 - InsertUnaryOp Negation of i
   * 32 Weak Mutation 603: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:304 - ReplaceConstant - 1 -> 0
   * 33 Weak Mutation 602: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:304 - InsertUnaryOp IINC -1 i
   * 34 Weak Mutation 604: gnu.trove.map.hash.TShortFloatHashMap.keys()[S:304 - ReplaceComparisonOperator != -> ==
   * 35 Weak Mutation 653: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:323 - ReplaceComparisonOperator != -> ==
   * 36 Weak Mutation 652: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:323 - ReplaceConstant - 1 -> 0
   * 37 Weak Mutation 649: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:323 - InsertUnaryOp Negation of i
   * 38 Weak Mutation 648: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:323 - ReplaceVariable i -> size
   * 39 Weak Mutation 651: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:323 - InsertUnaryOp IINC -1 i
   * 40 Weak Mutation 650: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:323 - InsertUnaryOp IINC 1 i
   * 41 Weak Mutation 645: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - ReplaceComparisonOperator <= -> -1
   * 42 Weak Mutation 644: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - ReplaceComparisonOperator <= -> <
   * 43 Weak Mutation 647: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:323 - ReplaceVariable i -> j
   * 44 Weak Mutation 641: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - ReplaceVariable i -> j
   * 45 Weak Mutation 640: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - InsertUnaryOp IINC -1 i
   * 46 Weak Mutation 642: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:322 - ReplaceVariable i -> size
   * 47 Weak Mutation 670: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:327 - ReplaceVariable array -> keys
   * 48 Weak Mutation 671: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:327 - ReplaceVariable array -> _set
   * 49 Weak Mutation 626: gnu.trove.map.hash.TShortFloatHashMap.keys([S)[S:315 - ReplaceComparisonOperator >= -> >
   */

  @Test
  public void test18()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((-1604));
      short[] shortArray0 = tShortFloatHashMap0.keys();
      assertNotNull(shortArray0);
      
      short[] shortArray1 = tShortFloatHashMap0.keys(shortArray0);
      assertSame(shortArray0, shortArray1);
      assertNotNull(shortArray1);
  }

  //Test case number: 19
  /*
   * 45 covered goals:
   * 1 Weak Mutation 702: gnu.trove.map.hash.TShortFloatHashMap.values()[F:345 - InsertUnaryOp IINC -1 i
   * 2 Weak Mutation 700: gnu.trove.map.hash.TShortFloatHashMap.values()[F:345 - InsertUnaryOp Negation of i
   * 3 Weak Mutation 701: gnu.trove.map.hash.TShortFloatHashMap.values()[F:345 - InsertUnaryOp IINC 1 i
   * 4 Weak Mutation 698: gnu.trove.map.hash.TShortFloatHashMap.values()[F:345 - ReplaceVariable v -> vals
   * 5 Weak Mutation 699: gnu.trove.map.hash.TShortFloatHashMap.values()[F:345 - ReplaceVariable i -> j
   * 6 Weak Mutation 696: gnu.trove.map.hash.TShortFloatHashMap.values()[F:345 - InsertUnaryOp IINC -1 j
   * 7 Weak Mutation 697: gnu.trove.map.hash.TShortFloatHashMap.values()[F:345 - ReplaceVariable j -> i
   * 8 Weak Mutation 694: gnu.trove.map.hash.TShortFloatHashMap.values()[F:345 - InsertUnaryOp Negation of j
   * 9 Weak Mutation 695: gnu.trove.map.hash.TShortFloatHashMap.values()[F:345 - InsertUnaryOp IINC 1 j
   * 10 Weak Mutation 692: gnu.trove.map.hash.TShortFloatHashMap.values()[F:345 - ReplaceVariable vals -> v
   * 11 Weak Mutation 693: gnu.trove.map.hash.TShortFloatHashMap.values()[F:345 - ReplaceVariable j -> i
   * 12 gnu.trove.map.hash.TShortFloatHashMap.values()[F: I34 Branch 53 IF_ICMPNE L344 - false
   * 13 Weak Mutation 687: gnu.trove.map.hash.TShortFloatHashMap.values()[F:344 - InsertUnaryOp Negation of i
   * 14 Weak Mutation 686: gnu.trove.map.hash.TShortFloatHashMap.values()[F:344 - ReplaceVariable i -> j
   * 15 Weak Mutation 684: gnu.trove.map.hash.TShortFloatHashMap.values()[F:343 - ReplaceComparisonOperator <= -> -1
   * 16 Weak Mutation 683: gnu.trove.map.hash.TShortFloatHashMap.values()[F:343 - ReplaceComparisonOperator <= -> <
   * 17 Weak Mutation 681: gnu.trove.map.hash.TShortFloatHashMap.values()[F:343 - ReplaceVariable i -> j
   * 18 Weak Mutation 680: gnu.trove.map.hash.TShortFloatHashMap.values()[F:343 - InsertUnaryOp IINC -1 i
   * 19 Weak Mutation 679: gnu.trove.map.hash.TShortFloatHashMap.values()[F:343 - InsertUnaryOp IINC 1 i
   * 20 Weak Mutation 678: gnu.trove.map.hash.TShortFloatHashMap.values()[F:343 - InsertUnaryOp Negation of i
   * 21 Weak Mutation 677: gnu.trove.map.hash.TShortFloatHashMap.values()[F:343 - ReplaceVariable i -> j
   * 22 Weak Mutation 676: gnu.trove.map.hash.TShortFloatHashMap.values()[F:343 - ReplaceConstant - 0 -> 1
   * 23 Weak Mutation 675: gnu.trove.map.hash.TShortFloatHashMap.values()[F:343 - ReplaceVariable v -> vals
   * 24 Weak Mutation 674: gnu.trove.map.hash.TShortFloatHashMap.values()[F:341 - DeleteField: _states[B
   * 25 Weak Mutation 673: gnu.trove.map.hash.TShortFloatHashMap.values()[F:340 - DeleteField: _values[F
   * 26 Weak Mutation 672: gnu.trove.map.hash.TShortFloatHashMap.values()[F:339 - DeleteStatement: size()I
   * 27 Weak Mutation 702: gnu.trove.map.hash.TShortFloatHashMap.values()[F:345 - InsertUnaryOp IINC -1 i
   * 28 Weak Mutation 703: gnu.trove.map.hash.TShortFloatHashMap.values()[F:348 - ReplaceVariable vals -> v
   * 29 Weak Mutation 700: gnu.trove.map.hash.TShortFloatHashMap.values()[F:345 - InsertUnaryOp Negation of i
   * 30 Weak Mutation 701: gnu.trove.map.hash.TShortFloatHashMap.values()[F:345 - InsertUnaryOp IINC 1 i
   * 31 Weak Mutation 698: gnu.trove.map.hash.TShortFloatHashMap.values()[F:345 - ReplaceVariable v -> vals
   * 32 Weak Mutation 699: gnu.trove.map.hash.TShortFloatHashMap.values()[F:345 - ReplaceVariable i -> j
   * 33 Weak Mutation 696: gnu.trove.map.hash.TShortFloatHashMap.values()[F:345 - InsertUnaryOp IINC -1 j
   * 34 Weak Mutation 697: gnu.trove.map.hash.TShortFloatHashMap.values()[F:345 - ReplaceVariable j -> i
   * 35 Weak Mutation 694: gnu.trove.map.hash.TShortFloatHashMap.values()[F:345 - InsertUnaryOp Negation of j
   * 36 Weak Mutation 695: gnu.trove.map.hash.TShortFloatHashMap.values()[F:345 - InsertUnaryOp IINC 1 j
   * 37 Weak Mutation 692: gnu.trove.map.hash.TShortFloatHashMap.values()[F:345 - ReplaceVariable vals -> v
   * 38 Weak Mutation 693: gnu.trove.map.hash.TShortFloatHashMap.values()[F:345 - ReplaceVariable j -> i
   * 39 Weak Mutation 690: gnu.trove.map.hash.TShortFloatHashMap.values()[F:344 - ReplaceConstant - 1 -> 0
   * 40 Weak Mutation 691: gnu.trove.map.hash.TShortFloatHashMap.values()[F:344 - ReplaceComparisonOperator != -> ==
   * 41 Weak Mutation 688: gnu.trove.map.hash.TShortFloatHashMap.values()[F:344 - InsertUnaryOp IINC 1 i
   * 42 Weak Mutation 689: gnu.trove.map.hash.TShortFloatHashMap.values()[F:344 - InsertUnaryOp IINC -1 i
   * 43 gnu.trove.map.hash.TShortFloatHashMap.values()[F: I27 Branch 52 IFLE L343 - true
   * 44 gnu.trove.map.hash.TShortFloatHashMap.values()[F: I27 Branch 52 IFLE L343 - false
   * 45 gnu.trove.map.hash.TShortFloatHashMap.values()[F: I34 Branch 53 IF_ICMPNE L344 - true
   */

  @Test
  public void test19()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(1618);
      tShortFloatHashMap0.put((short) (-1199), (short) (-1199));
      tShortFloatHashMap0.values();
      assertEquals(1, tShortFloatHashMap0.size());
      assertEquals("{-1199=-1199.0}", tShortFloatHashMap0.toString());
  }

  //Test case number: 20
  /*
   * 75 covered goals:
   * 1 Weak Mutation 704: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:354 - DeleteStatement: size()I
   * 2 Weak Mutation 705: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:355 - InsertUnaryOp Negation of size
   * 3 Weak Mutation 707: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:355 - InsertUnaryOp IINC -1 size
   * 4 Weak Mutation 706: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:355 - InsertUnaryOp IINC 1 size
   * 5 Weak Mutation 709: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:355 - ReplaceComparisonOperator >= -> >
   * 6 Weak Mutation 714: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:359 - DeleteField: _values[F
   * 7 Weak Mutation 715: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:360 - DeleteField: _states[B
   * 8 Weak Mutation 717: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 716: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceVariable v -> array
   * 10 Weak Mutation 719: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceVariable i -> size
   * 11 Weak Mutation 718: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceVariable i -> j
   * 12 Weak Mutation 720: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - InsertUnaryOp Negation of i
   * 13 Weak Mutation 721: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - InsertUnaryOp IINC 1 i
   * 14 Weak Mutation 722: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - InsertUnaryOp IINC -1 i
   * 15 Weak Mutation 723: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceVariable i -> j
   * 16 Weak Mutation 724: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceVariable i -> size
   * 17 Weak Mutation 726: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceComparisonOperator <= -> <
   * 18 Weak Mutation 727: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceComparisonOperator <= -> -1
   * 19 Weak Mutation 729: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:363 - ReplaceVariable i -> j
   * 20 Weak Mutation 730: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:363 - ReplaceVariable i -> size
   * 21 Weak Mutation 731: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:363 - InsertUnaryOp Negation of i
   * 22 Weak Mutation 732: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:363 - InsertUnaryOp IINC 1 i
   * 23 Weak Mutation 733: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:363 - InsertUnaryOp IINC -1 i
   * 24 Weak Mutation 734: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:363 - ReplaceConstant - 1 -> 0
   * 25 Weak Mutation 735: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:363 - ReplaceComparisonOperator != -> ==
   * 26 Weak Mutation 750: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:367 - ReplaceVariable array -> v
   * 27 gnu.trove.map.hash.TShortFloatHashMap.values([F)[F: I10 Branch 54 IF_ICMPGE L355 - true
   * 28 gnu.trove.map.hash.TShortFloatHashMap.values([F)[F: I37 Branch 55 IFLE L362 - true
   * 29 gnu.trove.map.hash.TShortFloatHashMap.values([F)[F: I37 Branch 55 IFLE L362 - false
   * 30 gnu.trove.map.hash.TShortFloatHashMap.values([F)[F: I44 Branch 56 IF_ICMPNE L363 - true
   * 31 Weak Mutation 687: gnu.trove.map.hash.TShortFloatHashMap.values()[F:344 - InsertUnaryOp Negation of i
   * 32 Weak Mutation 686: gnu.trove.map.hash.TShortFloatHashMap.values()[F:344 - ReplaceVariable i -> j
   * 33 Weak Mutation 684: gnu.trove.map.hash.TShortFloatHashMap.values()[F:343 - ReplaceComparisonOperator <= -> -1
   * 34 Weak Mutation 683: gnu.trove.map.hash.TShortFloatHashMap.values()[F:343 - ReplaceComparisonOperator <= -> <
   * 35 Weak Mutation 681: gnu.trove.map.hash.TShortFloatHashMap.values()[F:343 - ReplaceVariable i -> j
   * 36 Weak Mutation 680: gnu.trove.map.hash.TShortFloatHashMap.values()[F:343 - InsertUnaryOp IINC -1 i
   * 37 Weak Mutation 679: gnu.trove.map.hash.TShortFloatHashMap.values()[F:343 - InsertUnaryOp IINC 1 i
   * 38 Weak Mutation 678: gnu.trove.map.hash.TShortFloatHashMap.values()[F:343 - InsertUnaryOp Negation of i
   * 39 Weak Mutation 677: gnu.trove.map.hash.TShortFloatHashMap.values()[F:343 - ReplaceVariable i -> j
   * 40 Weak Mutation 676: gnu.trove.map.hash.TShortFloatHashMap.values()[F:343 - ReplaceConstant - 0 -> 1
   * 41 Weak Mutation 675: gnu.trove.map.hash.TShortFloatHashMap.values()[F:343 - ReplaceVariable v -> vals
   * 42 Weak Mutation 674: gnu.trove.map.hash.TShortFloatHashMap.values()[F:341 - DeleteField: _states[B
   * 43 Weak Mutation 673: gnu.trove.map.hash.TShortFloatHashMap.values()[F:340 - DeleteField: _values[F
   * 44 Weak Mutation 672: gnu.trove.map.hash.TShortFloatHashMap.values()[F:339 - DeleteStatement: size()I
   * 45 Weak Mutation 703: gnu.trove.map.hash.TShortFloatHashMap.values()[F:348 - ReplaceVariable vals -> v
   * 46 Weak Mutation 690: gnu.trove.map.hash.TShortFloatHashMap.values()[F:344 - ReplaceConstant - 1 -> 0
   * 47 Weak Mutation 691: gnu.trove.map.hash.TShortFloatHashMap.values()[F:344 - ReplaceComparisonOperator != -> ==
   * 48 Weak Mutation 688: gnu.trove.map.hash.TShortFloatHashMap.values()[F:344 - InsertUnaryOp IINC 1 i
   * 49 Weak Mutation 689: gnu.trove.map.hash.TShortFloatHashMap.values()[F:344 - InsertUnaryOp IINC -1 i
   * 50 Weak Mutation 750: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:367 - ReplaceVariable array -> v
   * 51 Weak Mutation 715: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:360 - DeleteField: _states[B
   * 52 Weak Mutation 714: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:359 - DeleteField: _values[F
   * 53 Weak Mutation 717: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceConstant - 0 -> 1
   * 54 Weak Mutation 716: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceVariable v -> array
   * 55 Weak Mutation 719: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceVariable i -> size
   * 56 Weak Mutation 718: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceVariable i -> j
   * 57 Weak Mutation 705: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:355 - InsertUnaryOp Negation of size
   * 58 Weak Mutation 704: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:354 - DeleteStatement: size()I
   * 59 Weak Mutation 707: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:355 - InsertUnaryOp IINC -1 size
   * 60 Weak Mutation 706: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:355 - InsertUnaryOp IINC 1 size
   * 61 Weak Mutation 709: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:355 - ReplaceComparisonOperator >= -> >
   * 62 Weak Mutation 729: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:363 - ReplaceVariable i -> j
   * 63 Weak Mutation 730: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:363 - ReplaceVariable i -> size
   * 64 Weak Mutation 731: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:363 - InsertUnaryOp Negation of i
   * 65 Weak Mutation 732: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:363 - InsertUnaryOp IINC 1 i
   * 66 Weak Mutation 733: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:363 - InsertUnaryOp IINC -1 i
   * 67 Weak Mutation 734: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:363 - ReplaceConstant - 1 -> 0
   * 68 Weak Mutation 735: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:363 - ReplaceComparisonOperator != -> ==
   * 69 Weak Mutation 720: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - InsertUnaryOp Negation of i
   * 70 Weak Mutation 721: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - InsertUnaryOp IINC 1 i
   * 71 Weak Mutation 722: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - InsertUnaryOp IINC -1 i
   * 72 Weak Mutation 723: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceVariable i -> j
   * 73 Weak Mutation 724: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceVariable i -> size
   * 74 Weak Mutation 726: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceComparisonOperator <= -> <
   * 75 Weak Mutation 727: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceComparisonOperator <= -> -1
   */

  @Test
  public void test20()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap();
      float[] floatArray0 = tShortFloatHashMap0.values();
      assertNotNull(floatArray0);
      
      float[] floatArray1 = tShortFloatHashMap0.values(floatArray0);
      assertEquals(23, tShortFloatHashMap0.capacity());
      assertNotNull(floatArray1);
      assertSame(floatArray1, floatArray0);
  }

  //Test case number: 21
  /*
   * 2 covered goals:
   * 1 Weak Mutation 708: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:355 - ReplaceComparisonOperator >= -> ==
   * 2 Weak Mutation 708: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:355 - ReplaceComparisonOperator >= -> ==
   */

  @Test
  public void test21()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(96, (float) 96, (short)272, (float) (short)272);
      float[] floatArray0 = new float[7];
      float[] floatArray1 = tShortFloatHashMap0.values(floatArray0);
      assertNotNull(floatArray1);
      assertSame(floatArray0, floatArray1);
  }

  //Test case number: 22
  /*
   * 63 covered goals:
   * 1 Weak Mutation 710: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:355 - ReplaceComparisonOperator >= -> -1
   * 2 Weak Mutation 713: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:356 - InsertUnaryOp IINC -1 size
   * 3 Weak Mutation 712: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:356 - InsertUnaryOp IINC 1 size
   * 4 Weak Mutation 711: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:356 - InsertUnaryOp Negation of size
   * 5 Weak Mutation 747: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - InsertUnaryOp Negation of i
   * 6 Weak Mutation 746: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - ReplaceVariable i -> size
   * 7 Weak Mutation 745: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - ReplaceVariable i -> j
   * 8 Weak Mutation 744: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - ReplaceVariable v -> array
   * 9 Weak Mutation 749: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - InsertUnaryOp IINC -1 i
   * 10 Weak Mutation 748: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - InsertUnaryOp IINC 1 i
   * 11 Weak Mutation 739: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - InsertUnaryOp Negation of j
   * 12 Weak Mutation 738: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - ReplaceVariable j -> size
   * 13 Weak Mutation 737: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - ReplaceVariable j -> i
   * 14 Weak Mutation 736: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - ReplaceVariable array -> v
   * 15 Weak Mutation 743: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - ReplaceVariable j -> size
   * 16 Weak Mutation 742: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - ReplaceVariable j -> i
   * 17 Weak Mutation 741: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - InsertUnaryOp IINC -1 j
   * 18 Weak Mutation 740: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - InsertUnaryOp IINC 1 j
   * 19 gnu.trove.map.hash.TShortFloatHashMap.values([F)[F: I10 Branch 54 IF_ICMPGE L355 - false
   * 20 gnu.trove.map.hash.TShortFloatHashMap.values([F)[F: I44 Branch 56 IF_ICMPNE L363 - false
   * 21 Weak Mutation 750: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:367 - ReplaceVariable array -> v
   * 22 Weak Mutation 715: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:360 - DeleteField: _states[B
   * 23 Weak Mutation 714: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:359 - DeleteField: _values[F
   * 24 Weak Mutation 717: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceConstant - 0 -> 1
   * 25 Weak Mutation 716: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceVariable v -> array
   * 26 Weak Mutation 719: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceVariable i -> size
   * 27 Weak Mutation 718: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceVariable i -> j
   * 28 Weak Mutation 705: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:355 - InsertUnaryOp Negation of size
   * 29 Weak Mutation 704: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:354 - DeleteStatement: size()I
   * 30 Weak Mutation 707: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:355 - InsertUnaryOp IINC -1 size
   * 31 Weak Mutation 706: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:355 - InsertUnaryOp IINC 1 size
   * 32 Weak Mutation 729: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:363 - ReplaceVariable i -> j
   * 33 Weak Mutation 730: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:363 - ReplaceVariable i -> size
   * 34 Weak Mutation 731: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:363 - InsertUnaryOp Negation of i
   * 35 Weak Mutation 732: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:363 - InsertUnaryOp IINC 1 i
   * 36 Weak Mutation 733: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:363 - InsertUnaryOp IINC -1 i
   * 37 Weak Mutation 734: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:363 - ReplaceConstant - 1 -> 0
   * 38 Weak Mutation 735: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:363 - ReplaceComparisonOperator != -> ==
   * 39 Weak Mutation 720: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - InsertUnaryOp Negation of i
   * 40 Weak Mutation 721: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - InsertUnaryOp IINC 1 i
   * 41 Weak Mutation 722: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - InsertUnaryOp IINC -1 i
   * 42 Weak Mutation 723: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceVariable i -> j
   * 43 Weak Mutation 724: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceVariable i -> size
   * 44 Weak Mutation 726: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceComparisonOperator <= -> <
   * 45 Weak Mutation 727: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:362 - ReplaceComparisonOperator <= -> -1
   * 46 Weak Mutation 747: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - InsertUnaryOp Negation of i
   * 47 Weak Mutation 746: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - ReplaceVariable i -> size
   * 48 Weak Mutation 745: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - ReplaceVariable i -> j
   * 49 Weak Mutation 744: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - ReplaceVariable v -> array
   * 50 Weak Mutation 749: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - InsertUnaryOp IINC -1 i
   * 51 Weak Mutation 748: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - InsertUnaryOp IINC 1 i
   * 52 Weak Mutation 739: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - InsertUnaryOp Negation of j
   * 53 Weak Mutation 738: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - ReplaceVariable j -> size
   * 54 Weak Mutation 737: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - ReplaceVariable j -> i
   * 55 Weak Mutation 736: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - ReplaceVariable array -> v
   * 56 Weak Mutation 743: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - ReplaceVariable j -> size
   * 57 Weak Mutation 742: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - ReplaceVariable j -> i
   * 58 Weak Mutation 741: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - InsertUnaryOp IINC -1 j
   * 59 Weak Mutation 740: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:364 - InsertUnaryOp IINC 1 j
   * 60 Weak Mutation 713: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:356 - InsertUnaryOp IINC -1 size
   * 61 Weak Mutation 712: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:356 - InsertUnaryOp IINC 1 size
   * 62 Weak Mutation 711: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:356 - InsertUnaryOp Negation of size
   * 63 Weak Mutation 710: gnu.trove.map.hash.TShortFloatHashMap.values([F)[F:355 - ReplaceComparisonOperator >= -> -1
   */

  @Test
  public void test22()  throws Throwable  {
      short[] shortArray0 = new short[5];
      shortArray0[0] = (short) (-1802);
      shortArray0[1] = (short)1;
      shortArray0[2] = (short) (-1512);
      float[] floatArray0 = new float[9];
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
      float[] floatArray1 = new float[3];
      float[] floatArray2 = tShortFloatHashMap0.values(floatArray1);
      assertEquals(4, tShortFloatHashMap0.size());
      assertEquals("{-1802=0.0, -1512=0.0, 1=0.0, 0=0.0}", tShortFloatHashMap0.toString());
      assertNotNull(floatArray2);
  }

  //Test case number: 23
  /*
   * 82 covered goals:
   * 1 Weak Mutation 772: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - ReplaceComparisonOperator != -> -1
   * 2 Weak Mutation 773: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:378 - ReplaceConstant - 1 -> 0
   * 3 Weak Mutation 918: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:488 - InsertUnaryOp IINC -1 key
   * 4 Weak Mutation 919: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:488 - DeleteStatement: insertKey(S)I
   * 5 Weak Mutation 916: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:488 - InsertUnaryOp Negation of key
   * 6 Weak Mutation 917: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:488 - InsertUnaryOp IINC 1 key
   * 7 Weak Mutation 922: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:491 - InsertUnaryOp IINC -1 index
   * 8 Weak Mutation 923: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:491 - ReplaceComparisonOperator >= -> ==
   * 9 Weak Mutation 920: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:491 - InsertUnaryOp Negation of index
   * 10 Weak Mutation 921: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:491 - InsertUnaryOp IINC 1 index
   * 11 Weak Mutation 948: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:496 - InsertUnaryOp IINC -1 index
   * 12 Weak Mutation 949: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:496 - ReplaceVariable put_amount -> adjust_amount
   * 13 Weak Mutation 950: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:496 - InsertUnaryOp Negation of put_amount
   * 14 Weak Mutation 945: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:496 - DeleteField: _values[F
   * 15 Weak Mutation 946: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:496 - InsertUnaryOp Negation of index
   * 16 Weak Mutation 947: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:496 - InsertUnaryOp IINC 1 index
   * 17 Weak Mutation 951: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:497 - ReplaceConstant - 1 -> 0
   * 18 Weak Mutation 952: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:500 - DeleteField: _states[B
   * 19 Weak Mutation 953: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:500 - InsertUnaryOp Negation of index
   * 20 Weak Mutation 954: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:500 - InsertUnaryOp IINC 1 index
   * 21 Weak Mutation 955: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:500 - InsertUnaryOp IINC -1 index
   * 22 Weak Mutation 956: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:502 - InsertUnaryOp Negation of isNewMapping
   * 23 Weak Mutation 957: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:502 - InsertUnaryOp IINC 1 isNewMapping
   * 24 Weak Mutation 958: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:502 - InsertUnaryOp IINC -1 isNewMapping
   * 25 Weak Mutation 959: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:502 - ReplaceComparisonOperator == -> !=
   * 26 Weak Mutation 962: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:503 - DeleteStatement: postInsertHook(Z)V
   * 27 Weak Mutation 961: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:503 - DeleteField: consumeFreeSlotZ
   * 28 Weak Mutation 960: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:503 - InsertUnaryOp Negation
   * 29 Weak Mutation 963: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:506 - ReplaceVariable newValue -> adjust_amount
   * 30 Weak Mutation 965: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:506 - InsertUnaryOp Negation of newValue
   * 31 gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z: I31 Branch 59 IFNE L377 - false
   * 32 gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F: I9 Branch 72 IFGE L491 - true
   * 33 gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F: I58 Branch 73 IFEQ L502 - false
   * 34 Weak Mutation 751: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:373 - DeleteField: _states[B
   * 35 Weak Mutation 762: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - InsertUnaryOp IINC -1 i
   * 36 Weak Mutation 763: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - ReplaceConstant - 1 -> 0
   * 37 Weak Mutation 760: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - InsertUnaryOp Negation of i
   * 38 Weak Mutation 761: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - InsertUnaryOp IINC 1 i
   * 39 Weak Mutation 766: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - InsertUnaryOp Negation of i
   * 40 Weak Mutation 767: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - InsertUnaryOp IINC 1 i
   * 41 Weak Mutation 764: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - ReplaceComparisonOperator != -> ==
   * 42 Weak Mutation 765: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - InsertUnaryOp Negation of val
   * 43 Weak Mutation 754: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:376 - InsertUnaryOp IINC 1 i
   * 44 Weak Mutation 755: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:376 - InsertUnaryOp IINC -1 i
   * 45 Weak Mutation 752: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:374 - DeleteField: _values[F
   * 46 Weak Mutation 753: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:376 - InsertUnaryOp Negation of i
   * 47 Weak Mutation 758: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:376 - ReplaceComparisonOperator <= -> -1
   * 48 Weak Mutation 772: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - ReplaceComparisonOperator != -> -1
   * 49 Weak Mutation 773: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:378 - ReplaceConstant - 1 -> 0
   * 50 Weak Mutation 768: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - InsertUnaryOp IINC -1 i
   * 51 Weak Mutation 769: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - DeleteStatement: floatSub(FF)I
   * 52 Weak Mutation 956: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:502 - InsertUnaryOp Negation of isNewMapping
   * 53 Weak Mutation 957: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:502 - InsertUnaryOp IINC 1 isNewMapping
   * 54 Weak Mutation 958: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:502 - InsertUnaryOp IINC -1 isNewMapping
   * 55 Weak Mutation 959: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:502 - ReplaceComparisonOperator == -> !=
   * 56 Weak Mutation 952: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:500 - DeleteField: _states[B
   * 57 Weak Mutation 953: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:500 - InsertUnaryOp Negation of index
   * 58 Weak Mutation 954: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:500 - InsertUnaryOp IINC 1 index
   * 59 Weak Mutation 955: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:500 - InsertUnaryOp IINC -1 index
   * 60 Weak Mutation 948: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:496 - InsertUnaryOp IINC -1 index
   * 61 Weak Mutation 949: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:496 - ReplaceVariable put_amount -> adjust_amount
   * 62 Weak Mutation 950: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:496 - InsertUnaryOp Negation of put_amount
   * 63 Weak Mutation 951: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:497 - ReplaceConstant - 1 -> 0
   * 64 Weak Mutation 945: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:496 - DeleteField: _values[F
   * 65 Weak Mutation 946: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:496 - InsertUnaryOp Negation of index
   * 66 Weak Mutation 947: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:496 - InsertUnaryOp IINC 1 index
   * 67 Weak Mutation 922: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:491 - InsertUnaryOp IINC -1 index
   * 68 Weak Mutation 923: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:491 - ReplaceComparisonOperator >= -> ==
   * 69 Weak Mutation 920: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:491 - InsertUnaryOp Negation of index
   * 70 Weak Mutation 921: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:491 - InsertUnaryOp IINC 1 index
   * 71 Weak Mutation 918: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:488 - InsertUnaryOp IINC -1 key
   * 72 Weak Mutation 919: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:488 - DeleteStatement: insertKey(S)I
   * 73 Weak Mutation 916: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:488 - InsertUnaryOp Negation of key
   * 74 Weak Mutation 917: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:488 - InsertUnaryOp IINC 1 key
   * 75 Weak Mutation 963: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:506 - ReplaceVariable newValue -> adjust_amount
   * 76 Weak Mutation 962: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:503 - DeleteStatement: postInsertHook(Z)V
   * 77 Weak Mutation 961: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:503 - DeleteField: consumeFreeSlotZ
   * 78 Weak Mutation 960: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:503 - InsertUnaryOp Negation
   * 79 Weak Mutation 965: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:506 - InsertUnaryOp Negation of newValue
   * 80 gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z: I18 Branch 57 IFLE L376 - false
   * 81 gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 82 gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z: I25 Branch 58 IF_ICMPNE L377 - false
   */

  @Test
  public void test23()  throws Throwable  {
      short[] shortArray0 = new short[10];
      float[] floatArray0 = new float[10];
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
      tShortFloatHashMap0.adjustOrPutValue((short)1742, (float) (short)1742, (-1914.1844F));
      boolean boolean0 = tShortFloatHashMap0.containsValue((-1914.1844F));
      assertEquals("{1742=-1914.1844, 0=0.0}", tShortFloatHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 26 covered goals:
   * 1 Weak Mutation 770: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - ReplaceComparisonOperator != -> <
   * 2 Weak Mutation 751: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:373 - DeleteField: _states[B
   * 3 Weak Mutation 762: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - InsertUnaryOp IINC -1 i
   * 4 Weak Mutation 763: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - ReplaceConstant - 1 -> 0
   * 5 Weak Mutation 760: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - InsertUnaryOp Negation of i
   * 6 Weak Mutation 761: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - InsertUnaryOp IINC 1 i
   * 7 Weak Mutation 766: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - InsertUnaryOp Negation of i
   * 8 Weak Mutation 767: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - InsertUnaryOp IINC 1 i
   * 9 Weak Mutation 764: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - ReplaceComparisonOperator != -> ==
   * 10 Weak Mutation 765: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - InsertUnaryOp Negation of val
   * 11 Weak Mutation 754: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:376 - InsertUnaryOp IINC 1 i
   * 12 Weak Mutation 755: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:376 - InsertUnaryOp IINC -1 i
   * 13 Weak Mutation 752: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:374 - DeleteField: _values[F
   * 14 Weak Mutation 753: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:376 - InsertUnaryOp Negation of i
   * 15 Weak Mutation 758: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:376 - ReplaceComparisonOperator <= -> -1
   * 16 Weak Mutation 757: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:376 - ReplaceComparisonOperator <= -> <
   * 17 Weak Mutation 774: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:381 - ReplaceConstant - 0 -> 1
   * 18 Weak Mutation 771: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - ReplaceComparisonOperator != -> >
   * 19 Weak Mutation 768: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - InsertUnaryOp IINC -1 i
   * 20 Weak Mutation 769: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - DeleteStatement: floatSub(FF)I
   * 21 Weak Mutation 757: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:376 - ReplaceComparisonOperator <= -> <
   * 22 Weak Mutation 774: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:381 - ReplaceConstant - 0 -> 1
   * 23 Weak Mutation 770: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - ReplaceComparisonOperator != -> <
   * 24 Weak Mutation 771: gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z:377 - ReplaceComparisonOperator != -> >
   * 25 gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z: I18 Branch 57 IFLE L376 - true
   * 26 gnu.trove.map.hash.TShortFloatHashMap.containsValue(F)Z: I31 Branch 59 IFNE L377 - true
   */

  @Test
  public void test24()  throws Throwable  {
      short[] shortArray0 = new short[5];
      shortArray0[2] = (short) (-160);
      float[] floatArray0 = new float[4];
      floatArray0[2] = (float) (short) (-160);
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
      boolean boolean0 = tShortFloatHashMap0.containsValue((float) (short) (-1));
      assertEquals(2, tShortFloatHashMap0.size());
      assertEquals(11, tShortFloatHashMap0.capacity());
      assertEquals(false, boolean0);
      assertEquals("{-160=-160.0, 0=0.0}", tShortFloatHashMap0.toString());
  }

  //Test case number: 25
  /*
   * 9 covered goals:
   * 1 Weak Mutation 775: gnu.trove.map.hash.TShortFloatHashMap.containsKey(S)Z:387 - InsertUnaryOp Negation of key
   * 2 Weak Mutation 778: gnu.trove.map.hash.TShortFloatHashMap.containsKey(S)Z:387 - DeleteStatement: contains(S)Z
   * 3 Weak Mutation 776: gnu.trove.map.hash.TShortFloatHashMap.containsKey(S)Z:387 - InsertUnaryOp IINC 1 key
   * 4 Weak Mutation 777: gnu.trove.map.hash.TShortFloatHashMap.containsKey(S)Z:387 - InsertUnaryOp IINC -1 key
   * 5 gnu.trove.map.hash.TShortFloatHashMap.containsKey(S)Z: root-Branch
   * 6 Weak Mutation 775: gnu.trove.map.hash.TShortFloatHashMap.containsKey(S)Z:387 - InsertUnaryOp Negation of key
   * 7 Weak Mutation 778: gnu.trove.map.hash.TShortFloatHashMap.containsKey(S)Z:387 - DeleteStatement: contains(S)Z
   * 8 Weak Mutation 776: gnu.trove.map.hash.TShortFloatHashMap.containsKey(S)Z:387 - InsertUnaryOp IINC 1 key
   * 9 Weak Mutation 777: gnu.trove.map.hash.TShortFloatHashMap.containsKey(S)Z:387 - InsertUnaryOp IINC -1 key
   */

  @Test
  public void test25()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap();
      tShortFloatHashMap0.containsKey((short)929);
      assertEquals(23, tShortFloatHashMap0.capacity());
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * 1 Weak Mutation 779: gnu.trove.map.hash.TShortFloatHashMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z:399 - DeleteStatement: forEach(Lgnu/trove/procedure/TShortProcedure;)Z
   * 2 gnu.trove.map.hash.TShortFloatHashMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   * 3 Weak Mutation 779: gnu.trove.map.hash.TShortFloatHashMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z:399 - DeleteStatement: forEach(Lgnu/trove/procedure/TShortProcedure;)Z
   */

  @Test
  public void test26()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(1, (float) 1, (short)9, (float) (short)9);
      boolean boolean0 = tShortFloatHashMap0.forEachKey((TShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 27
  /*
   * 29 covered goals:
   * 1 Weak Mutation 780: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:405 - DeleteField: _states[B
   * 2 Weak Mutation 781: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:406 - DeleteField: _values[F
   * 3 Weak Mutation 787: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:407 - ReplaceComparisonOperator <= -> -1
   * 4 Weak Mutation 786: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:407 - ReplaceComparisonOperator <= -> <
   * 5 Weak Mutation 784: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:407 - InsertUnaryOp IINC -1 i
   * 6 Weak Mutation 782: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:407 - InsertUnaryOp Negation of i
   * 7 Weak Mutation 783: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:407 - InsertUnaryOp IINC 1 i
   * 8 Weak Mutation 791: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - InsertUnaryOp IINC -1 i
   * 9 Weak Mutation 790: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - InsertUnaryOp IINC 1 i
   * 10 Weak Mutation 789: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - InsertUnaryOp Negation of i
   * 11 Weak Mutation 793: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - ReplaceComparisonOperator != -> ==
   * 12 Weak Mutation 792: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - ReplaceConstant - 1 -> 0
   * 13 Weak Mutation 800: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:412 - ReplaceConstant - 1 -> 0
   * 14 gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: I18 Branch 60 IFLE L407 - true
   * 15 gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 16 gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   * 17 Weak Mutation 800: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:412 - ReplaceConstant - 1 -> 0
   * 18 Weak Mutation 791: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - InsertUnaryOp IINC -1 i
   * 19 Weak Mutation 790: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - InsertUnaryOp IINC 1 i
   * 20 Weak Mutation 789: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - InsertUnaryOp Negation of i
   * 21 Weak Mutation 787: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:407 - ReplaceComparisonOperator <= -> -1
   * 22 Weak Mutation 786: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:407 - ReplaceComparisonOperator <= -> <
   * 23 Weak Mutation 784: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:407 - InsertUnaryOp IINC -1 i
   * 24 Weak Mutation 793: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - ReplaceComparisonOperator != -> ==
   * 25 Weak Mutation 792: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - ReplaceConstant - 1 -> 0
   * 26 Weak Mutation 782: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:407 - InsertUnaryOp Negation of i
   * 27 Weak Mutation 783: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:407 - InsertUnaryOp IINC 1 i
   * 28 Weak Mutation 780: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:405 - DeleteField: _states[B
   * 29 Weak Mutation 781: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:406 - DeleteField: _values[F
   */

  @Test
  public void test27()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap();
      boolean boolean0 = tShortFloatHashMap0.forEachValue((TFloatProcedure) null);
      assertEquals(true, boolean0);
      assertEquals(23, tShortFloatHashMap0.capacity());
  }

  //Test case number: 28
  /*
   * 21 covered goals:
   * 1 Weak Mutation 797: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - DeleteStatement: execute(F)Z
   * 2 Weak Mutation 796: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - InsertUnaryOp IINC -1 i
   * 3 Weak Mutation 795: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - InsertUnaryOp IINC 1 i
   * 4 Weak Mutation 794: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - InsertUnaryOp Negation of i
   * 5 gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - false
   * 6 Weak Mutation 440: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:205 - ReplaceComparisonOperator >= -> ==
   * 7 Weak Mutation 791: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - InsertUnaryOp IINC -1 i
   * 8 Weak Mutation 790: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - InsertUnaryOp IINC 1 i
   * 9 Weak Mutation 789: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - InsertUnaryOp Negation of i
   * 10 Weak Mutation 787: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:407 - ReplaceComparisonOperator <= -> -1
   * 11 Weak Mutation 784: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:407 - InsertUnaryOp IINC -1 i
   * 12 Weak Mutation 793: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - ReplaceComparisonOperator != -> ==
   * 13 Weak Mutation 792: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - ReplaceConstant - 1 -> 0
   * 14 Weak Mutation 782: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:407 - InsertUnaryOp Negation of i
   * 15 Weak Mutation 783: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:407 - InsertUnaryOp IINC 1 i
   * 16 Weak Mutation 780: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:405 - DeleteField: _states[B
   * 17 Weak Mutation 781: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:406 - DeleteField: _values[F
   * 18 Weak Mutation 797: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - DeleteStatement: execute(F)Z
   * 19 Weak Mutation 796: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - InsertUnaryOp IINC -1 i
   * 20 Weak Mutation 795: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - InsertUnaryOp IINC 1 i
   * 21 Weak Mutation 794: gnu.trove.map.hash.TShortFloatHashMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:408 - InsertUnaryOp Negation of i
   */

  @Test
  public void test28()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap();
      tShortFloatHashMap0.putIfAbsent((short)1567, (short)1);
      // Undeclared exception!
      try {
        tShortFloatHashMap0.forEachValue((TFloatProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 29
  /*
   * 27 covered goals:
   * 1 Weak Mutation 828: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:432 - DeleteField: _states[B
   * 2 Weak Mutation 829: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:433 - DeleteField: _values[F
   * 3 Weak Mutation 831: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:434 - InsertUnaryOp IINC 1 i
   * 4 Weak Mutation 830: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:434 - InsertUnaryOp Negation of i
   * 5 Weak Mutation 834: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:434 - ReplaceComparisonOperator <= -> <
   * 6 Weak Mutation 835: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:434 - ReplaceComparisonOperator <= -> -1
   * 7 Weak Mutation 832: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:434 - InsertUnaryOp IINC -1 i
   * 8 Weak Mutation 838: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:435 - InsertUnaryOp IINC 1 i
   * 9 Weak Mutation 839: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:435 - InsertUnaryOp IINC -1 i
   * 10 Weak Mutation 837: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:435 - InsertUnaryOp Negation of i
   * 11 Weak Mutation 840: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:435 - ReplaceConstant - 1 -> 0
   * 12 Weak Mutation 841: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:435 - ReplaceComparisonOperator != -> ==
   * 13 gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V: I18 Branch 66 IFLE L434 - true
   * 14 gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V: I18 Branch 66 IFLE L434 - false
   * 15 gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   * 16 Weak Mutation 829: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:433 - DeleteField: _values[F
   * 17 Weak Mutation 828: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:432 - DeleteField: _states[B
   * 18 Weak Mutation 831: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:434 - InsertUnaryOp IINC 1 i
   * 19 Weak Mutation 830: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:434 - InsertUnaryOp Negation of i
   * 20 Weak Mutation 834: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:434 - ReplaceComparisonOperator <= -> <
   * 21 Weak Mutation 835: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:434 - ReplaceComparisonOperator <= -> -1
   * 22 Weak Mutation 832: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:434 - InsertUnaryOp IINC -1 i
   * 23 Weak Mutation 838: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:435 - InsertUnaryOp IINC 1 i
   * 24 Weak Mutation 839: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:435 - InsertUnaryOp IINC -1 i
   * 25 Weak Mutation 837: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:435 - InsertUnaryOp Negation of i
   * 26 Weak Mutation 840: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:435 - ReplaceConstant - 1 -> 0
   * 27 Weak Mutation 841: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:435 - ReplaceComparisonOperator != -> ==
   */

  @Test
  public void test29()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(1, (float) 1, (short)0, (float) (short)0);
      tShortFloatHashMap0.transformValues((TFloatFunction) null);
      assertEquals(3, tShortFloatHashMap0.capacity());
  }

  //Test case number: 30
  /*
   * 41 covered goals:
   * 1 Weak Mutation 848: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:436 - DeleteStatement: execute(F)F
   * 2 Weak Mutation 842: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:436 - InsertUnaryOp Negation of i
   * 3 Weak Mutation 843: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:436 - InsertUnaryOp IINC 1 i
   * 4 Weak Mutation 846: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:436 - InsertUnaryOp IINC 1 i
   * 5 Weak Mutation 847: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:436 - InsertUnaryOp IINC -1 i
   * 6 Weak Mutation 844: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:436 - InsertUnaryOp IINC -1 i
   * 7 Weak Mutation 845: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:436 - InsertUnaryOp Negation of i
   * 8 gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V: I25 Branch 67 IF_ICMPNE L435 - false
   * 9 Weak Mutation 441: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:205 - ReplaceComparisonOperator >= -> >
   * 10 Weak Mutation 433: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:204 - InsertUnaryOp Negation of key
   * 11 Weak Mutation 434: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:204 - InsertUnaryOp IINC 1 key
   * 12 Weak Mutation 435: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:204 - InsertUnaryOp IINC -1 key
   * 13 Weak Mutation 436: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:204 - DeleteStatement: insertKey(S)I
   * 14 Weak Mutation 437: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:205 - InsertUnaryOp Negation of index
   * 15 Weak Mutation 438: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:205 - InsertUnaryOp IINC 1 index
   * 16 Weak Mutation 439: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:205 - InsertUnaryOp IINC -1 index
   * 17 Weak Mutation 458: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:207 - InsertUnaryOp IINC -1 index
   * 18 Weak Mutation 457: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:207 - InsertUnaryOp IINC 1 index
   * 19 Weak Mutation 456: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:207 - InsertUnaryOp Negation of index
   * 20 Weak Mutation 455: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:207 - InsertUnaryOp Negation of value
   * 21 Weak Mutation 454: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:207 - InsertUnaryOp IINC -1 key
   * 22 Weak Mutation 453: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:207 - InsertUnaryOp IINC 1 key
   * 23 Weak Mutation 452: gnu.trove.map.hash.TShortFloatHashMap.putIfAbsent(SF)F:207 - InsertUnaryOp Negation of key
   * 24 Weak Mutation 829: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:433 - DeleteField: _values[F
   * 25 Weak Mutation 828: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:432 - DeleteField: _states[B
   * 26 Weak Mutation 831: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:434 - InsertUnaryOp IINC 1 i
   * 27 Weak Mutation 830: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:434 - InsertUnaryOp Negation of i
   * 28 Weak Mutation 835: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:434 - ReplaceComparisonOperator <= -> -1
   * 29 Weak Mutation 832: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:434 - InsertUnaryOp IINC -1 i
   * 30 Weak Mutation 838: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:435 - InsertUnaryOp IINC 1 i
   * 31 Weak Mutation 839: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:435 - InsertUnaryOp IINC -1 i
   * 32 Weak Mutation 837: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:435 - InsertUnaryOp Negation of i
   * 33 Weak Mutation 840: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:435 - ReplaceConstant - 1 -> 0
   * 34 Weak Mutation 841: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:435 - ReplaceComparisonOperator != -> ==
   * 35 Weak Mutation 848: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:436 - DeleteStatement: execute(F)F
   * 36 Weak Mutation 842: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:436 - InsertUnaryOp Negation of i
   * 37 Weak Mutation 843: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:436 - InsertUnaryOp IINC 1 i
   * 38 Weak Mutation 846: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:436 - InsertUnaryOp IINC 1 i
   * 39 Weak Mutation 847: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:436 - InsertUnaryOp IINC -1 i
   * 40 Weak Mutation 844: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:436 - InsertUnaryOp IINC -1 i
   * 41 Weak Mutation 845: gnu.trove.map.hash.TShortFloatHashMap.transformValues(Lgnu/trove/function/TFloatFunction;)V:436 - InsertUnaryOp Negation of i
   */

  @Test
  public void test30()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(1, (float) 1, (short)0, (float) (short)0);
      tShortFloatHashMap0.putIfAbsent((short)0, 1.0F);
      // Undeclared exception!
      try {
        tShortFloatHashMap0.transformValues((TFloatFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 31
  /*
   * 43 covered goals:
   * 1 Weak Mutation 849: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:444 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 850: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:445 - DeleteField: _states[B
   * 3 Weak Mutation 851: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:446 - DeleteField: _set[S
   * 4 Weak Mutation 852: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:447 - DeleteField: _values[F
   * 5 Weak Mutation 853: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:451 - DeleteStatement: tempDisableAutoCompaction()V
   * 6 Weak Mutation 855: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:453 - InsertUnaryOp Negation of i
   * 7 Weak Mutation 859: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:453 - ReplaceComparisonOperator <= -> <
   * 8 Weak Mutation 857: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:453 - InsertUnaryOp IINC -1 i
   * 9 Weak Mutation 856: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:453 - InsertUnaryOp IINC 1 i
   * 10 Weak Mutation 860: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:453 - ReplaceComparisonOperator <= -> -1
   * 11 Weak Mutation 864: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - InsertUnaryOp IINC -1 i
   * 12 Weak Mutation 865: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - ReplaceConstant - 1 -> 0
   * 13 Weak Mutation 866: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - ReplaceComparisonOperator != -> ==
   * 14 Weak Mutation 863: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - InsertUnaryOp IINC 1 i
   * 15 Weak Mutation 862: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - InsertUnaryOp Negation of i
   * 16 Weak Mutation 881: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:461 - ReplaceConstant - 1 -> 0
   * 17 Weak Mutation 882: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:461 - DeleteStatement: reenableAutoCompaction(Z)V
   * 18 Weak Mutation 885: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:464 - InsertUnaryOp Negation of modified
   * 19 Weak Mutation 887: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:464 - InsertUnaryOp IINC -1 modified
   * 20 Weak Mutation 886: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:464 - InsertUnaryOp IINC 1 modified
   * 21 gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z: I31 Branch 68 IFLE L453 - true
   * 22 gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 23 gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   * 24 Weak Mutation 881: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:461 - ReplaceConstant - 1 -> 0
   * 25 Weak Mutation 882: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:461 - DeleteStatement: reenableAutoCompaction(Z)V
   * 26 Weak Mutation 885: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:464 - InsertUnaryOp Negation of modified
   * 27 Weak Mutation 887: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:464 - InsertUnaryOp IINC -1 modified
   * 28 Weak Mutation 886: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:464 - InsertUnaryOp IINC 1 modified
   * 29 Weak Mutation 864: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - InsertUnaryOp IINC -1 i
   * 30 Weak Mutation 865: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - ReplaceConstant - 1 -> 0
   * 31 Weak Mutation 866: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - ReplaceComparisonOperator != -> ==
   * 32 Weak Mutation 851: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:446 - DeleteField: _set[S
   * 33 Weak Mutation 850: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:445 - DeleteField: _states[B
   * 34 Weak Mutation 849: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:444 - ReplaceConstant - 0 -> 1
   * 35 Weak Mutation 855: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:453 - InsertUnaryOp Negation of i
   * 36 Weak Mutation 853: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:451 - DeleteStatement: tempDisableAutoCompaction()V
   * 37 Weak Mutation 852: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:447 - DeleteField: _values[F
   * 38 Weak Mutation 859: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:453 - ReplaceComparisonOperator <= -> <
   * 39 Weak Mutation 857: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:453 - InsertUnaryOp IINC -1 i
   * 40 Weak Mutation 856: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:453 - InsertUnaryOp IINC 1 i
   * 41 Weak Mutation 863: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - InsertUnaryOp IINC 1 i
   * 42 Weak Mutation 862: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - InsertUnaryOp Negation of i
   * 43 Weak Mutation 860: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:453 - ReplaceComparisonOperator <= -> -1
   */

  @Test
  public void test31()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap();
      boolean boolean0 = tShortFloatHashMap0.retainEntries((TShortFloatProcedure) null);
      assertEquals(23, tShortFloatHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 32
  /*
   * 33 covered goals:
   * 1 Weak Mutation 868: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - InsertUnaryOp Negation of i
   * 2 Weak Mutation 869: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - InsertUnaryOp IINC 1 i
   * 3 Weak Mutation 870: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - InsertUnaryOp IINC -1 i
   * 4 Weak Mutation 871: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - InsertUnaryOp Negation of i
   * 5 Weak Mutation 872: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - InsertUnaryOp IINC 1 i
   * 6 Weak Mutation 873: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - InsertUnaryOp IINC -1 i
   * 7 Weak Mutation 874: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - DeleteStatement: execute(SF)Z
   * 8 Weak Mutation 883: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:461 - ReplaceConstant - 1 -> 0
   * 9 Weak Mutation 884: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:461 - DeleteStatement: reenableAutoCompaction(Z)V
   * 10 gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - false
   * 11 Weak Mutation 864: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - InsertUnaryOp IINC -1 i
   * 12 Weak Mutation 865: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - ReplaceConstant - 1 -> 0
   * 13 Weak Mutation 866: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - ReplaceComparisonOperator != -> ==
   * 14 Weak Mutation 851: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:446 - DeleteField: _set[S
   * 15 Weak Mutation 850: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:445 - DeleteField: _states[B
   * 16 Weak Mutation 849: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:444 - ReplaceConstant - 0 -> 1
   * 17 Weak Mutation 855: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:453 - InsertUnaryOp Negation of i
   * 18 Weak Mutation 853: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:451 - DeleteStatement: tempDisableAutoCompaction()V
   * 19 Weak Mutation 852: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:447 - DeleteField: _values[F
   * 20 Weak Mutation 857: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:453 - InsertUnaryOp IINC -1 i
   * 21 Weak Mutation 856: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:453 - InsertUnaryOp IINC 1 i
   * 22 Weak Mutation 863: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - InsertUnaryOp IINC 1 i
   * 23 Weak Mutation 862: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - InsertUnaryOp Negation of i
   * 24 Weak Mutation 860: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:453 - ReplaceComparisonOperator <= -> -1
   * 25 Weak Mutation 883: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:461 - ReplaceConstant - 1 -> 0
   * 26 Weak Mutation 884: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:461 - DeleteStatement: reenableAutoCompaction(Z)V
   * 27 Weak Mutation 868: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - InsertUnaryOp Negation of i
   * 28 Weak Mutation 869: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - InsertUnaryOp IINC 1 i
   * 29 Weak Mutation 870: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - InsertUnaryOp IINC -1 i
   * 30 Weak Mutation 871: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - InsertUnaryOp Negation of i
   * 31 Weak Mutation 872: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - InsertUnaryOp IINC 1 i
   * 32 Weak Mutation 873: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - InsertUnaryOp IINC -1 i
   * 33 Weak Mutation 874: gnu.trove.map.hash.TShortFloatHashMap.retainEntries(Lgnu/trove/procedure/TShortFloatProcedure;)Z:454 - DeleteStatement: execute(SF)Z
   */

  @Test
  public void test32()  throws Throwable  {
      short[] shortArray0 = new short[4];
      float[] floatArray0 = new float[7];
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
      // Undeclared exception!
      try {
        tShortFloatHashMap0.retainEntries((TShortFloatProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 33
  /*
   * 34 covered goals:
   * 1 Weak Mutation 889: gnu.trove.map.hash.TShortFloatHashMap.increment(S)Z:470 - InsertUnaryOp IINC 1 key
   * 2 Weak Mutation 888: gnu.trove.map.hash.TShortFloatHashMap.increment(S)Z:470 - InsertUnaryOp Negation of key
   * 3 Weak Mutation 891: gnu.trove.map.hash.TShortFloatHashMap.increment(S)Z:470 - ReplaceConstant - 1.0 -> 0.0
   * 4 Weak Mutation 890: gnu.trove.map.hash.TShortFloatHashMap.increment(S)Z:470 - InsertUnaryOp IINC -1 key
   * 5 Weak Mutation 893: gnu.trove.map.hash.TShortFloatHashMap.increment(S)Z:470 - ReplaceConstant - 1.0 -> 2.0
   * 6 Weak Mutation 892: gnu.trove.map.hash.TShortFloatHashMap.increment(S)Z:470 - ReplaceConstant - 1.0 -> -1.0
   * 7 Weak Mutation 894: gnu.trove.map.hash.TShortFloatHashMap.increment(S)Z:470 - DeleteStatement: adjustValue(SF)Z
   * 8 Weak Mutation 895: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:476 - InsertUnaryOp Negation of key
   * 9 Weak Mutation 898: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:476 - DeleteStatement: index(S)I
   * 10 Weak Mutation 897: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:476 - InsertUnaryOp IINC -1 key
   * 11 Weak Mutation 896: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:476 - InsertUnaryOp IINC 1 key
   * 12 Weak Mutation 904: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:477 - ReplaceComparisonOperator >= -> -1
   * 13 Weak Mutation 901: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:477 - InsertUnaryOp IINC -1 index
   * 14 Weak Mutation 900: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:477 - InsertUnaryOp IINC 1 index
   * 15 Weak Mutation 899: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:477 - InsertUnaryOp Negation of index
   * 16 Weak Mutation 905: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:478 - ReplaceConstant - 0 -> 1
   * 17 gnu.trove.map.hash.TShortFloatHashMap.increment(S)Z: root-Branch
   * 18 gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z: I9 Branch 71 IFGE L477 - false
   * 19 Weak Mutation 889: gnu.trove.map.hash.TShortFloatHashMap.increment(S)Z:470 - InsertUnaryOp IINC 1 key
   * 20 Weak Mutation 888: gnu.trove.map.hash.TShortFloatHashMap.increment(S)Z:470 - InsertUnaryOp Negation of key
   * 21 Weak Mutation 891: gnu.trove.map.hash.TShortFloatHashMap.increment(S)Z:470 - ReplaceConstant - 1.0 -> 0.0
   * 22 Weak Mutation 890: gnu.trove.map.hash.TShortFloatHashMap.increment(S)Z:470 - InsertUnaryOp IINC -1 key
   * 23 Weak Mutation 893: gnu.trove.map.hash.TShortFloatHashMap.increment(S)Z:470 - ReplaceConstant - 1.0 -> 2.0
   * 24 Weak Mutation 892: gnu.trove.map.hash.TShortFloatHashMap.increment(S)Z:470 - ReplaceConstant - 1.0 -> -1.0
   * 25 Weak Mutation 895: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:476 - InsertUnaryOp Negation of key
   * 26 Weak Mutation 894: gnu.trove.map.hash.TShortFloatHashMap.increment(S)Z:470 - DeleteStatement: adjustValue(SF)Z
   * 27 Weak Mutation 905: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:478 - ReplaceConstant - 0 -> 1
   * 28 Weak Mutation 904: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:477 - ReplaceComparisonOperator >= -> -1
   * 29 Weak Mutation 901: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:477 - InsertUnaryOp IINC -1 index
   * 30 Weak Mutation 900: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:477 - InsertUnaryOp IINC 1 index
   * 31 Weak Mutation 899: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:477 - InsertUnaryOp Negation of index
   * 32 Weak Mutation 898: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:476 - DeleteStatement: index(S)I
   * 33 Weak Mutation 897: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:476 - InsertUnaryOp IINC -1 key
   * 34 Weak Mutation 896: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:476 - InsertUnaryOp IINC 1 key
   */

  @Test
  public void test33()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap();
      boolean boolean0 = tShortFloatHashMap0.increment((short) (-1));
      assertEquals(false, boolean0);
      assertEquals(23, tShortFloatHashMap0.capacity());
  }

  //Test case number: 34
  /*
   * 19 covered goals:
   * 1 Weak Mutation 903: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:477 - ReplaceComparisonOperator >= -> >
   * 2 Weak Mutation 912: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - ReplaceArithmeticOperator + -> %
   * 3 Weak Mutation 913: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - ReplaceArithmeticOperator + -> /
   * 4 Weak Mutation 910: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - InsertUnaryOp Negation of amount
   * 5 Weak Mutation 909: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - InsertUnaryOp IINC -1 index
   * 6 Weak Mutation 908: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - InsertUnaryOp IINC 1 index
   * 7 Weak Mutation 907: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - InsertUnaryOp Negation of index
   * 8 Weak Mutation 906: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - DeleteField: _values[F
   * 9 Weak Mutation 915: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:481 - ReplaceConstant - 1 -> 0
   * 10 gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z: I9 Branch 71 IFGE L477 - true
   * 11 Weak Mutation 915: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:481 - ReplaceConstant - 1 -> 0
   * 12 Weak Mutation 912: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - ReplaceArithmeticOperator + -> %
   * 13 Weak Mutation 913: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - ReplaceArithmeticOperator + -> /
   * 14 Weak Mutation 910: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - InsertUnaryOp Negation of amount
   * 15 Weak Mutation 909: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - InsertUnaryOp IINC -1 index
   * 16 Weak Mutation 908: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - InsertUnaryOp IINC 1 index
   * 17 Weak Mutation 907: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - InsertUnaryOp Negation of index
   * 18 Weak Mutation 906: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - DeleteField: _values[F
   * 19 Weak Mutation 903: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:477 - ReplaceComparisonOperator >= -> >
   */

  @Test
  public void test34()  throws Throwable  {
      short[] shortArray0 = new short[10];
      float[] floatArray0 = new float[10];
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
      boolean boolean0 = tShortFloatHashMap0.adjustValue((short)0, 0.0F);
      assertEquals(true, boolean0);
      assertEquals(23, tShortFloatHashMap0.capacity());
      assertEquals("{0=0.0}", tShortFloatHashMap0.toString());
      assertEquals(1, tShortFloatHashMap0.size());
  }

  //Test case number: 35
  /*
   * 29 covered goals:
   * 1 Weak Mutation 902: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:477 - ReplaceComparisonOperator >= -> ==
   * 2 Weak Mutation 914: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - ReplaceArithmeticOperator + -> *
   * 3 Weak Mutation 911: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - ReplaceArithmeticOperator + -> -
   * 4 Weak Mutation 889: gnu.trove.map.hash.TShortFloatHashMap.increment(S)Z:470 - InsertUnaryOp IINC 1 key
   * 5 Weak Mutation 888: gnu.trove.map.hash.TShortFloatHashMap.increment(S)Z:470 - InsertUnaryOp Negation of key
   * 6 Weak Mutation 891: gnu.trove.map.hash.TShortFloatHashMap.increment(S)Z:470 - ReplaceConstant - 1.0 -> 0.0
   * 7 Weak Mutation 890: gnu.trove.map.hash.TShortFloatHashMap.increment(S)Z:470 - InsertUnaryOp IINC -1 key
   * 8 Weak Mutation 893: gnu.trove.map.hash.TShortFloatHashMap.increment(S)Z:470 - ReplaceConstant - 1.0 -> 2.0
   * 9 Weak Mutation 892: gnu.trove.map.hash.TShortFloatHashMap.increment(S)Z:470 - ReplaceConstant - 1.0 -> -1.0
   * 10 Weak Mutation 895: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:476 - InsertUnaryOp Negation of key
   * 11 Weak Mutation 894: gnu.trove.map.hash.TShortFloatHashMap.increment(S)Z:470 - DeleteStatement: adjustValue(SF)Z
   * 12 Weak Mutation 923: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:491 - ReplaceComparisonOperator >= -> ==
   * 13 Weak Mutation 915: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:481 - ReplaceConstant - 1 -> 0
   * 14 Weak Mutation 912: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - ReplaceArithmeticOperator + -> %
   * 15 Weak Mutation 913: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - ReplaceArithmeticOperator + -> /
   * 16 Weak Mutation 910: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - InsertUnaryOp Negation of amount
   * 17 Weak Mutation 909: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - InsertUnaryOp IINC -1 index
   * 18 Weak Mutation 908: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - InsertUnaryOp IINC 1 index
   * 19 Weak Mutation 907: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - InsertUnaryOp Negation of index
   * 20 Weak Mutation 906: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - DeleteField: _values[F
   * 21 Weak Mutation 901: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:477 - InsertUnaryOp IINC -1 index
   * 22 Weak Mutation 900: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:477 - InsertUnaryOp IINC 1 index
   * 23 Weak Mutation 899: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:477 - InsertUnaryOp Negation of index
   * 24 Weak Mutation 898: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:476 - DeleteStatement: index(S)I
   * 25 Weak Mutation 897: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:476 - InsertUnaryOp IINC -1 key
   * 26 Weak Mutation 896: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:476 - InsertUnaryOp IINC 1 key
   * 27 Weak Mutation 914: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - ReplaceArithmeticOperator + -> *
   * 28 Weak Mutation 911: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:480 - ReplaceArithmeticOperator + -> -
   * 29 Weak Mutation 902: gnu.trove.map.hash.TShortFloatHashMap.adjustValue(SF)Z:477 - ReplaceComparisonOperator >= -> ==
   */

  @Test
  public void test35()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap();
      tShortFloatHashMap0.adjustOrPutValue((short) (-1), (float) 0, 0.0F);
      boolean boolean0 = tShortFloatHashMap0.increment((short) (-1));
      assertEquals("{-1=1.0}", tShortFloatHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 36
  /*
   * 12 covered goals:
   * 1 Weak Mutation 924: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:491 - ReplaceComparisonOperator >= -> >
   * 2 Weak Mutation 948: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:496 - InsertUnaryOp IINC -1 index
   * 3 Weak Mutation 949: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:496 - ReplaceVariable put_amount -> adjust_amount
   * 4 Weak Mutation 950: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:496 - InsertUnaryOp Negation of put_amount
   * 5 Weak Mutation 951: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:497 - ReplaceConstant - 1 -> 0
   * 6 Weak Mutation 945: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:496 - DeleteField: _values[F
   * 7 Weak Mutation 946: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:496 - InsertUnaryOp Negation of index
   * 8 Weak Mutation 947: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:496 - InsertUnaryOp IINC 1 index
   * 9 Weak Mutation 962: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:503 - DeleteStatement: postInsertHook(Z)V
   * 10 Weak Mutation 961: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:503 - DeleteField: consumeFreeSlotZ
   * 11 Weak Mutation 960: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:503 - InsertUnaryOp Negation
   * 12 Weak Mutation 924: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:491 - ReplaceComparisonOperator >= -> >
   */

//   @Test
//   public void test36()  throws Throwable  {
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap();
//       float float0 = tShortFloatHashMap0.adjustOrPutValue((short)0, (-937.52936F), (-1832.0642F));
//       assertEquals(1, tShortFloatHashMap0.size());
//       assertEquals((-1832.0642F), float0, 0.01F);
//   }

  //Test case number: 37
  /*
   * 61 covered goals:
   * 1 Weak Mutation 925: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:491 - ReplaceComparisonOperator >= -> -1
   * 2 Weak Mutation 933: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:492 - ReplaceArithmeticOperator - -> *
   * 3 Weak Mutation 932: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:492 - ReplaceArithmeticOperator - -> /
   * 4 Weak Mutation 929: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:492 - ReplaceConstant - 1 -> 0
   * 5 Weak Mutation 928: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:492 - InsertUnaryOp IINC -1 index
   * 6 Weak Mutation 931: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:492 - ReplaceArithmeticOperator - -> %
   * 7 Weak Mutation 930: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:492 - ReplaceArithmeticOperator - -> +
   * 8 Weak Mutation 926: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:492 - InsertUnaryOp Negation of index
   * 9 Weak Mutation 927: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:492 - InsertUnaryOp IINC 1 index
   * 10 Weak Mutation 941: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:493 - ReplaceArithmeticOperator + -> %
   * 11 Weak Mutation 940: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:493 - ReplaceArithmeticOperator + -> -
   * 12 Weak Mutation 943: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:493 - ReplaceArithmeticOperator + -> *
   * 13 Weak Mutation 942: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:493 - ReplaceArithmeticOperator + -> /
   * 14 Weak Mutation 937: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:493 - InsertUnaryOp IINC -1 index
   * 15 Weak Mutation 936: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:493 - InsertUnaryOp IINC 1 index
   * 16 Weak Mutation 939: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:493 - InsertUnaryOp Negation of adjust_amount
   * 17 Weak Mutation 938: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:493 - ReplaceVariable adjust_amount -> put_amount
   * 18 Weak Mutation 935: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:493 - InsertUnaryOp Negation of index
   * 19 Weak Mutation 934: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:493 - DeleteField: _values[F
   * 20 Weak Mutation 944: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:494 - ReplaceConstant - 0 -> 1
   * 21 Weak Mutation 964: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:506 - ReplaceVariable newValue -> put_amount
   * 22 gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F: I9 Branch 72 IFGE L491 - false
   * 23 gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F: I58 Branch 73 IFEQ L502 - true
   * 24 Weak Mutation 956: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:502 - InsertUnaryOp Negation of isNewMapping
   * 25 Weak Mutation 957: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:502 - InsertUnaryOp IINC 1 isNewMapping
   * 26 Weak Mutation 958: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:502 - InsertUnaryOp IINC -1 isNewMapping
   * 27 Weak Mutation 959: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:502 - ReplaceComparisonOperator == -> !=
   * 28 Weak Mutation 952: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:500 - DeleteField: _states[B
   * 29 Weak Mutation 953: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:500 - InsertUnaryOp Negation of index
   * 30 Weak Mutation 954: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:500 - InsertUnaryOp IINC 1 index
   * 31 Weak Mutation 955: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:500 - InsertUnaryOp IINC -1 index
   * 32 Weak Mutation 922: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:491 - InsertUnaryOp IINC -1 index
   * 33 Weak Mutation 920: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:491 - InsertUnaryOp Negation of index
   * 34 Weak Mutation 921: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:491 - InsertUnaryOp IINC 1 index
   * 35 Weak Mutation 918: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:488 - InsertUnaryOp IINC -1 key
   * 36 Weak Mutation 919: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:488 - DeleteStatement: insertKey(S)I
   * 37 Weak Mutation 916: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:488 - InsertUnaryOp Negation of key
   * 38 Weak Mutation 917: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:488 - InsertUnaryOp IINC 1 key
   * 39 Weak Mutation 963: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:506 - ReplaceVariable newValue -> adjust_amount
   * 40 Weak Mutation 965: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:506 - InsertUnaryOp Negation of newValue
   * 41 Weak Mutation 944: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:494 - ReplaceConstant - 0 -> 1
   * 42 Weak Mutation 941: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:493 - ReplaceArithmeticOperator + -> %
   * 43 Weak Mutation 940: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:493 - ReplaceArithmeticOperator + -> -
   * 44 Weak Mutation 943: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:493 - ReplaceArithmeticOperator + -> *
   * 45 Weak Mutation 942: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:493 - ReplaceArithmeticOperator + -> /
   * 46 Weak Mutation 937: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:493 - InsertUnaryOp IINC -1 index
   * 47 Weak Mutation 936: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:493 - InsertUnaryOp IINC 1 index
   * 48 Weak Mutation 939: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:493 - InsertUnaryOp Negation of adjust_amount
   * 49 Weak Mutation 938: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:493 - ReplaceVariable adjust_amount -> put_amount
   * 50 Weak Mutation 933: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:492 - ReplaceArithmeticOperator - -> *
   * 51 Weak Mutation 932: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:492 - ReplaceArithmeticOperator - -> /
   * 52 Weak Mutation 935: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:493 - InsertUnaryOp Negation of index
   * 53 Weak Mutation 934: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:493 - DeleteField: _values[F
   * 54 Weak Mutation 929: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:492 - ReplaceConstant - 1 -> 0
   * 55 Weak Mutation 928: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:492 - InsertUnaryOp IINC -1 index
   * 56 Weak Mutation 931: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:492 - ReplaceArithmeticOperator - -> %
   * 57 Weak Mutation 930: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:492 - ReplaceArithmeticOperator - -> +
   * 58 Weak Mutation 926: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:492 - InsertUnaryOp Negation of index
   * 59 Weak Mutation 927: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:492 - InsertUnaryOp IINC 1 index
   * 60 Weak Mutation 925: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:491 - ReplaceComparisonOperator >= -> -1
   * 61 Weak Mutation 964: gnu.trove.map.hash.TShortFloatHashMap.adjustOrPutValue(SFF)F:506 - ReplaceVariable newValue -> put_amount
   */

//   @Test
//   public void test37()  throws Throwable  {
//       TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(1618);
//       tShortFloatHashMap0.put((short) (-1199), (short) (-1199));
//       float float0 = tShortFloatHashMap0.adjustOrPutValue((short) (-1199), 2000.8658F, (float) 1618);
//       assertEquals(false, tShortFloatHashMap0.isEmpty());
//       assertEquals(801.86584F, float0, 0.01F);
//   }

  //Test case number: 38
  /*
   * 4 covered goals:
   * 1 Weak Mutation 967: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1185 - ReplaceConstant - 0 -> 1
   * 2 gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - false
   * 3 Weak Mutation 967: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1185 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 966: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1184 - ReplaceComparisonOperator != -> ==
   */

  @Test
  public void test38()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap();
      boolean boolean0 = tShortFloatHashMap0.equals((Object) null);
      assertEquals(false, boolean0);
      assertEquals(23, tShortFloatHashMap0.capacity());
  }

  //Test case number: 39
  /*
   * 8 covered goals:
   * 1 Weak Mutation 972: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1188 - ReplaceComparisonOperator == -> <=
   * 2 Weak Mutation 973: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1189 - ReplaceConstant - 0 -> 1
   * 3 gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - false
   * 4 Weak Mutation 969: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1188 - DeleteStatement: size()I
   * 5 Weak Mutation 968: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1188 - DeleteStatement: size()I
   * 6 Weak Mutation 973: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1189 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 972: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1188 - ReplaceComparisonOperator == -> <=
   * 8 gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   */

  @Test
  public void test39()  throws Throwable  {
      short[] shortArray0 = new short[8];
      float[] floatArray0 = new float[9];
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap((int) (short)1, (float) (short) (-1255), (short) (-396), 10.0F);
      TShortFloatHashMap tShortFloatHashMap1 = new TShortFloatHashMap(shortArray0, floatArray0);
      boolean boolean0 = tShortFloatHashMap1.equals((Object) tShortFloatHashMap0);
      assertEquals("{0=0.0}", tShortFloatHashMap1.toString());
      assertFalse(tShortFloatHashMap0.equals(tShortFloatHashMap1));
      assertEquals(23, tShortFloatHashMap1.capacity());
      assertEquals(false, boolean0);
      assertEquals(1, tShortFloatHashMap1.size());
  }

  //Test case number: 40
  /*
   * 97 covered goals:
   * 1 Weak Mutation 1001: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable this_value -> this_no_entry_value
   * 2 Weak Mutation 1002: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable this_value -> that_no_entry_value
   * 3 Weak Mutation 1005: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable that_value -> this_no_entry_value
   * 4 Weak Mutation 1007: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable that_value -> that_no_entry_value
   * 5 Weak Mutation 511: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:252 - InsertUnaryOp Negation of key
   * 6 Weak Mutation 516: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - InsertUnaryOp IINC 1 index
   * 7 Weak Mutation 517: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - InsertUnaryOp IINC -1 index
   * 8 Weak Mutation 518: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - ReplaceComparisonOperator >= -> ==
   * 9 Weak Mutation 519: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - ReplaceComparisonOperator >= -> >
   * 10 Weak Mutation 512: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:252 - InsertUnaryOp IINC 1 key
   * 11 Weak Mutation 513: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:252 - InsertUnaryOp IINC -1 key
   * 12 Weak Mutation 514: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:252 - DeleteStatement: index(S)I
   * 13 Weak Mutation 515: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - InsertUnaryOp Negation of index
   * 14 Weak Mutation 524: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - InsertUnaryOp Negation of index
   * 15 Weak Mutation 525: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - InsertUnaryOp IINC 1 index
   * 16 Weak Mutation 526: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - InsertUnaryOp IINC -1 index
   * 17 Weak Mutation 523: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - DeleteField: _values[F
   * 18 Weak Mutation 1008: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp Negation of that_value
   * 19 Weak Mutation 1009: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1200 - DeleteStatement: floatSub(FF)I
   * 20 Weak Mutation 1012: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceComparisonOperator == -> -2
   * 21 Weak Mutation 1000: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1199 - InsertUnaryOp IINC -1 i
   * 22 Weak Mutation 1004: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp Negation of this_value
   * 23 Weak Mutation 993: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1197 - InsertUnaryOp IINC -1 i
   * 24 Weak Mutation 992: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1197 - InsertUnaryOp IINC 1 i
   * 25 Weak Mutation 995: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1198 - InsertUnaryOp IINC 1 key
   * 26 Weak Mutation 994: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1198 - InsertUnaryOp Negation of key
   * 27 Weak Mutation 997: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1198 - DeleteStatement: get(S)F
   * 28 Weak Mutation 996: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1198 - InsertUnaryOp IINC -1 key
   * 29 Weak Mutation 999: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1199 - InsertUnaryOp IINC 1 i
   * 30 Weak Mutation 998: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1199 - InsertUnaryOp Negation of i
   * 31 Weak Mutation 986: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1196 - InsertUnaryOp IINC 1 i
   * 32 Weak Mutation 987: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1196 - InsertUnaryOp IINC -1 i
   * 33 Weak Mutation 985: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1196 - InsertUnaryOp Negation of i
   * 34 Weak Mutation 990: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1197 - DeleteField: _set[S
   * 35 Weak Mutation 991: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1197 - InsertUnaryOp Negation of i
   * 36 Weak Mutation 988: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1196 - ReplaceConstant - 1 -> 0
   * 37 Weak Mutation 989: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1196 - ReplaceComparisonOperator != -> ==
   * 38 Weak Mutation 978: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1195 - InsertUnaryOp Negation of i
   * 39 Weak Mutation 979: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1195 - InsertUnaryOp IINC 1 i
   * 40 Weak Mutation 976: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1193 - DeleteStatement: getNoEntryValue()F
   * 41 Weak Mutation 977: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1194 - DeleteStatement: getNoEntryValue()F
   * 42 Weak Mutation 982: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1195 - ReplaceComparisonOperator <= -> <
   * 43 Weak Mutation 983: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1195 - ReplaceComparisonOperator <= -> -1
   * 44 Weak Mutation 980: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1195 - InsertUnaryOp IINC -1 i
   * 45 Weak Mutation 971: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1188 - ReplaceComparisonOperator == -> -2
   * 46 Weak Mutation 969: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1188 - DeleteStatement: size()I
   * 47 Weak Mutation 968: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1188 - DeleteStatement: size()I
   * 48 Weak Mutation 975: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1192 - DeleteField: _states[B
   * 49 Weak Mutation 974: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1191 - DeleteField: _values[F
   * 50 Weak Mutation 966: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1184 - ReplaceComparisonOperator != -> ==
   * 51 Weak Mutation 518: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - ReplaceComparisonOperator >= -> ==
   * 52 Weak Mutation 519: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - ReplaceComparisonOperator >= -> >
   * 53 Weak Mutation 524: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - InsertUnaryOp Negation of index
   * 54 Weak Mutation 525: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - InsertUnaryOp IINC 1 index
   * 55 Weak Mutation 526: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - InsertUnaryOp IINC -1 index
   * 56 Weak Mutation 523: gnu.trove.map.hash.TShortFloatHashMap.get(S)F:253 - DeleteField: _values[F
   * 57 Weak Mutation 1008: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp Negation of that_value
   * 58 Weak Mutation 1009: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1200 - DeleteStatement: floatSub(FF)I
   * 59 Weak Mutation 1012: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceComparisonOperator == -> -2
   * 60 Weak Mutation 1001: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable this_value -> this_no_entry_value
   * 61 Weak Mutation 1000: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1199 - InsertUnaryOp IINC -1 i
   * 62 Weak Mutation 1002: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable this_value -> that_no_entry_value
   * 63 Weak Mutation 1005: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable that_value -> this_no_entry_value
   * 64 Weak Mutation 1004: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1200 - InsertUnaryOp Negation of this_value
   * 65 Weak Mutation 1007: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1200 - ReplaceVariable that_value -> that_no_entry_value
   * 66 Weak Mutation 993: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1197 - InsertUnaryOp IINC -1 i
   * 67 Weak Mutation 992: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1197 - InsertUnaryOp IINC 1 i
   * 68 Weak Mutation 995: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1198 - InsertUnaryOp IINC 1 key
   * 69 Weak Mutation 994: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1198 - InsertUnaryOp Negation of key
   * 70 Weak Mutation 997: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1198 - DeleteStatement: get(S)F
   * 71 Weak Mutation 996: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1198 - InsertUnaryOp IINC -1 key
   * 72 Weak Mutation 999: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1199 - InsertUnaryOp IINC 1 i
   * 73 Weak Mutation 998: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1199 - InsertUnaryOp Negation of i
   * 74 Weak Mutation 986: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1196 - InsertUnaryOp IINC 1 i
   * 75 Weak Mutation 987: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1196 - InsertUnaryOp IINC -1 i
   * 76 Weak Mutation 985: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1196 - InsertUnaryOp Negation of i
   * 77 Weak Mutation 990: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1197 - DeleteField: _set[S
   * 78 Weak Mutation 991: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1197 - InsertUnaryOp Negation of i
   * 79 Weak Mutation 988: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1196 - ReplaceConstant - 1 -> 0
   * 80 Weak Mutation 989: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1196 - ReplaceComparisonOperator != -> ==
   * 81 Weak Mutation 978: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1195 - InsertUnaryOp Negation of i
   * 82 Weak Mutation 979: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1195 - InsertUnaryOp IINC 1 i
   * 83 Weak Mutation 976: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1193 - DeleteStatement: getNoEntryValue()F
   * 84 Weak Mutation 977: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1194 - DeleteStatement: getNoEntryValue()F
   * 85 Weak Mutation 982: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1195 - ReplaceComparisonOperator <= -> <
   * 86 Weak Mutation 983: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1195 - ReplaceComparisonOperator <= -> -1
   * 87 Weak Mutation 980: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1195 - InsertUnaryOp IINC -1 i
   * 88 Weak Mutation 971: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1188 - ReplaceComparisonOperator == -> -2
   * 89 Weak Mutation 975: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1192 - DeleteField: _states[B
   * 90 Weak Mutation 974: gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z:1191 - DeleteField: _values[F
   * 91 gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 92 gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 93 gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 94 gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 95 gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 96 gnu.trove.map.hash.TShortFloatHashMap.equals(Ljava/lang/Object;)Z: I85 Branch 78 IFEQ L1200 - true
   * 97 gnu.trove.map.hash.TShortFloatHashMap.get(S)F: I9 Branch 44 IFGE L253 - true
   */

  @Test
  public void test40()  throws Throwable  {
      short[] shortArray0 = new short[8];
      shortArray0[2] = (short)1;
      float[] floatArray0 = new float[9];
      floatArray0[2] = (float) (short)1645;
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
      boolean boolean0 = tShortFloatHashMap0.equals((Object) tShortFloatHashMap0);
      assertEquals("{1=1645.0, 0=0.0}", tShortFloatHashMap0.toString());
      assertEquals(2, tShortFloatHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 41
  /*
   * 86 covered goals:
   * 1 Weak Mutation 1038: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - ReplaceVariable hashcode -> i
   * 2 Weak Mutation 1039: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - InsertUnaryOp Negation of hashcode
   * 3 Weak Mutation 1049: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - ReplaceVariable i -> hashcode
   * 4 Weak Mutation 1048: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - DeleteField: _values[F
   * 5 Weak Mutation 1051: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - InsertUnaryOp IINC 1 i
   * 6 Weak Mutation 1050: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - InsertUnaryOp Negation of i
   * 7 Weak Mutation 1053: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - DeleteStatement: hash(F)I
   * 8 Weak Mutation 1052: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - InsertUnaryOp IINC -1 i
   * 9 Weak Mutation 1055: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - ReplaceBitwiseOperator ^ -> |
   * 10 Weak Mutation 1054: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - ReplaceBitwiseOperator ^ -> &
   * 11 Weak Mutation 1041: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - InsertUnaryOp IINC -1 hashcode
   * 12 Weak Mutation 1040: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - InsertUnaryOp IINC 1 hashcode
   * 13 Weak Mutation 1043: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - ReplaceVariable i -> hashcode
   * 14 Weak Mutation 1042: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - DeleteField: _set[S
   * 15 Weak Mutation 1045: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - InsertUnaryOp IINC 1 i
   * 16 Weak Mutation 1044: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - InsertUnaryOp Negation of i
   * 17 Weak Mutation 1047: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - DeleteStatement: hash(I)I
   * 18 Weak Mutation 1046: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - InsertUnaryOp IINC -1 i
   * 19 Weak Mutation 1058: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> /
   * 20 Weak Mutation 1059: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> *
   * 21 Weak Mutation 1056: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> -
   * 22 Weak Mutation 1057: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> %
   * 23 gnu.trove.map.hash.TShortFloatHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - false
   * 24 Weak Mutation 1020: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1214 - ReplaceConstant - 0 -> 1
   * 25 Weak Mutation 1021: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1215 - DeleteField: _states[B
   * 26 Weak Mutation 1022: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1216 - DeleteField: _values[F
   * 27 Weak Mutation 1023: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1216 - ReplaceVariable i -> hashcode
   * 28 Weak Mutation 1032: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1217 - ReplaceVariable i -> hashcode
   * 29 Weak Mutation 1033: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1217 - InsertUnaryOp Negation of i
   * 30 Weak Mutation 1034: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1217 - InsertUnaryOp IINC 1 i
   * 31 Weak Mutation 1035: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1217 - InsertUnaryOp IINC -1 i
   * 32 Weak Mutation 1036: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1217 - ReplaceConstant - 1 -> 0
   * 33 Weak Mutation 1037: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1217 - ReplaceComparisonOperator != -> ==
   * 34 Weak Mutation 1024: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1216 - InsertUnaryOp Negation of i
   * 35 Weak Mutation 1025: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1216 - InsertUnaryOp IINC 1 i
   * 36 Weak Mutation 1026: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1216 - InsertUnaryOp IINC -1 i
   * 37 Weak Mutation 1027: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1216 - ReplaceVariable i -> hashcode
   * 38 Weak Mutation 1029: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1216 - ReplaceComparisonOperator <= -> <
   * 39 Weak Mutation 1030: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1216 - ReplaceComparisonOperator <= -> -1
   * 40 Weak Mutation 1062: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1222 - InsertUnaryOp IINC -1 hashcode
   * 41 Weak Mutation 1060: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1222 - InsertUnaryOp Negation of hashcode
   * 42 Weak Mutation 1061: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1222 - InsertUnaryOp IINC 1 hashcode
   * 43 Weak Mutation 1020: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1214 - ReplaceConstant - 0 -> 1
   * 44 Weak Mutation 1021: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1215 - DeleteField: _states[B
   * 45 Weak Mutation 1022: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1216 - DeleteField: _values[F
   * 46 Weak Mutation 1023: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1216 - ReplaceVariable i -> hashcode
   * 47 Weak Mutation 1032: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1217 - ReplaceVariable i -> hashcode
   * 48 Weak Mutation 1033: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1217 - InsertUnaryOp Negation of i
   * 49 Weak Mutation 1034: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1217 - InsertUnaryOp IINC 1 i
   * 50 Weak Mutation 1035: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1217 - InsertUnaryOp IINC -1 i
   * 51 Weak Mutation 1036: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1217 - ReplaceConstant - 1 -> 0
   * 52 Weak Mutation 1037: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1217 - ReplaceComparisonOperator != -> ==
   * 53 Weak Mutation 1038: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - ReplaceVariable hashcode -> i
   * 54 Weak Mutation 1039: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - InsertUnaryOp Negation of hashcode
   * 55 Weak Mutation 1024: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1216 - InsertUnaryOp Negation of i
   * 56 Weak Mutation 1025: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1216 - InsertUnaryOp IINC 1 i
   * 57 Weak Mutation 1026: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1216 - InsertUnaryOp IINC -1 i
   * 58 Weak Mutation 1027: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1216 - ReplaceVariable i -> hashcode
   * 59 Weak Mutation 1029: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1216 - ReplaceComparisonOperator <= -> <
   * 60 Weak Mutation 1030: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1216 - ReplaceComparisonOperator <= -> -1
   * 61 Weak Mutation 1049: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - ReplaceVariable i -> hashcode
   * 62 Weak Mutation 1048: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - DeleteField: _values[F
   * 63 Weak Mutation 1051: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - InsertUnaryOp IINC 1 i
   * 64 Weak Mutation 1050: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - InsertUnaryOp Negation of i
   * 65 Weak Mutation 1053: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - DeleteStatement: hash(F)I
   * 66 Weak Mutation 1052: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - InsertUnaryOp IINC -1 i
   * 67 Weak Mutation 1055: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - ReplaceBitwiseOperator ^ -> |
   * 68 Weak Mutation 1054: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - ReplaceBitwiseOperator ^ -> &
   * 69 Weak Mutation 1041: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - InsertUnaryOp IINC -1 hashcode
   * 70 Weak Mutation 1040: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - InsertUnaryOp IINC 1 hashcode
   * 71 Weak Mutation 1043: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - ReplaceVariable i -> hashcode
   * 72 Weak Mutation 1042: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - DeleteField: _set[S
   * 73 Weak Mutation 1045: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - InsertUnaryOp IINC 1 i
   * 74 Weak Mutation 1044: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - InsertUnaryOp Negation of i
   * 75 Weak Mutation 1047: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - DeleteStatement: hash(I)I
   * 76 Weak Mutation 1046: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - InsertUnaryOp IINC -1 i
   * 77 Weak Mutation 1058: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> /
   * 78 Weak Mutation 1059: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> *
   * 79 Weak Mutation 1056: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> -
   * 80 Weak Mutation 1057: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1218 - ReplaceArithmeticOperator + -> %
   * 81 Weak Mutation 1062: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1222 - InsertUnaryOp IINC -1 hashcode
   * 82 Weak Mutation 1060: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1222 - InsertUnaryOp Negation of hashcode
   * 83 Weak Mutation 1061: gnu.trove.map.hash.TShortFloatHashMap.hashCode()I:1222 - InsertUnaryOp IINC 1 hashcode
   * 84 gnu.trove.map.hash.TShortFloatHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 85 gnu.trove.map.hash.TShortFloatHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 86 gnu.trove.map.hash.TShortFloatHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   */

  @Test
  public void test41()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(1618);
      tShortFloatHashMap0.put((short) (-1199), (short) (-1199));
      int int0 = tShortFloatHashMap0.hashCode();
      assertEquals(false, tShortFloatHashMap0.isEmpty());
      assertEquals(751221284, int0);
  }

  //Test case number: 42
  /*
   * 137 covered goals:
   * 1 Weak Mutation 1407: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1234 - ReplaceConstant - ,  -> 
   * 2 Weak Mutation 1406: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1234 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 3 Weak Mutation 1408: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1234 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 4 gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z: I4 Branch 115 IFEQ L1233 - true
   * 5 Weak Mutation 283: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - ReplaceVariable i -> size
   * 6 Weak Mutation 282: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 281: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:118 - DeleteStatement: min(II)I
   * 8 Weak Mutation 280: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:118 - ReplaceVariable keys -> _set
   * 9 Weak Mutation 287: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - ReplaceVariable size -> i
   * 10 Weak Mutation 286: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - InsertUnaryOp IINC -1 i
   * 11 Weak Mutation 285: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - InsertUnaryOp IINC 1 i
   * 12 Weak Mutation 284: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - InsertUnaryOp Negation of i
   * 13 Weak Mutation 304: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - ReplaceVariable i -> size
   * 14 Weak Mutation 288: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - InsertUnaryOp Negation of size
   * 15 Weak Mutation 289: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - InsertUnaryOp IINC 1 size
   * 16 Weak Mutation 290: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - InsertUnaryOp IINC -1 size
   * 17 Weak Mutation 292: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - ReplaceComparisonOperator >= -> >
   * 18 Weak Mutation 293: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:119 - ReplaceComparisonOperator >= -> -1
   * 19 Weak Mutation 294: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:120 - ReplaceVariable keys -> _set
   * 20 Weak Mutation 295: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:120 - ReplaceVariable i -> size
   * 21 Weak Mutation 296: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:120 - InsertUnaryOp Negation of i
   * 22 Weak Mutation 297: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:120 - InsertUnaryOp IINC 1 i
   * 23 Weak Mutation 298: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:120 - InsertUnaryOp IINC -1 i
   * 24 Weak Mutation 299: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:120 - ReplaceVariable i -> size
   * 25 Weak Mutation 300: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:120 - InsertUnaryOp Negation of i
   * 26 Weak Mutation 301: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:120 - InsertUnaryOp IINC 1 i
   * 27 Weak Mutation 302: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:120 - InsertUnaryOp IINC -1 i
   * 28 Weak Mutation 303: gnu.trove.map.hash.TShortFloatHashMap.<init>([S[F)V:120 - DeleteStatement: put(SF)F
   * 29 Weak Mutation 476: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:217 - ReplaceConstant - 0 -> 1
   * 30 Weak Mutation 474: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:216 - InsertUnaryOp IINC 1 index
   * 31 Weak Mutation 475: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:216 - InsertUnaryOp IINC -1 index
   * 32 Weak Mutation 472: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:216 - DeleteField: _values[F
   * 33 Weak Mutation 473: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:216 - InsertUnaryOp Negation of index
   * 34 Weak Mutation 470: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:215 - ReplaceArithmeticOperator - -> /
   * 35 Weak Mutation 471: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:215 - ReplaceArithmeticOperator - -> *
   * 36 Weak Mutation 468: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:215 - ReplaceArithmeticOperator - -> +
   * 37 Weak Mutation 466: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:215 - InsertUnaryOp Negation of index
   * 38 Weak Mutation 467: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:215 - ReplaceConstant - 1 -> 0
   * 39 Weak Mutation 464: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:214 - ReplaceComparisonOperator >= -> >
   * 40 Weak Mutation 465: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:214 - ReplaceComparisonOperator >= -> -1
   * 41 Weak Mutation 821: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - InsertUnaryOp Negation of i
   * 42 Weak Mutation 820: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - InsertUnaryOp IINC -1 i
   * 43 Weak Mutation 823: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - InsertUnaryOp IINC -1 i
   * 44 Weak Mutation 822: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - InsertUnaryOp IINC 1 i
   * 45 Weak Mutation 816: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - ReplaceComparisonOperator != -> ==
   * 46 Weak Mutation 819: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - InsertUnaryOp IINC 1 i
   * 47 Weak Mutation 818: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - InsertUnaryOp Negation of i
   * 48 Weak Mutation 825: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - ReplaceComparisonOperator != -> ==
   * 49 Weak Mutation 824: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - DeleteStatement: execute(SF)Z
   * 50 Weak Mutation 827: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:426 - ReplaceConstant - 1 -> 0
   * 51 Weak Mutation 805: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:421 - InsertUnaryOp Negation of i
   * 52 Weak Mutation 806: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:421 - InsertUnaryOp IINC 1 i
   * 53 Weak Mutation 807: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:421 - InsertUnaryOp IINC -1 i
   * 54 Weak Mutation 801: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:418 - DeleteField: _states[B
   * 55 Weak Mutation 802: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:419 - DeleteField: _set[S
   * 56 Weak Mutation 803: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:420 - DeleteField: _values[F
   * 57 Weak Mutation 812: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - InsertUnaryOp Negation of i
   * 58 Weak Mutation 813: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - InsertUnaryOp IINC 1 i
   * 59 Weak Mutation 814: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - InsertUnaryOp IINC -1 i
   * 60 Weak Mutation 815: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - ReplaceConstant - 1 -> 0
   * 61 Weak Mutation 809: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:421 - ReplaceComparisonOperator <= -> <
   * 62 Weak Mutation 810: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:421 - ReplaceComparisonOperator <= -> -1
   * 63 Weak Mutation 1066: gnu.trove.map.hash.TShortFloatHashMap.toString()Ljava/lang/String;:1242 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 64 Weak Mutation 1067: gnu.trove.map.hash.TShortFloatHashMap.toString()Ljava/lang/String;:1243 - DeleteStatement: toString()Ljava/lang/String;
   * 65 Weak Mutation 1064: gnu.trove.map.hash.TShortFloatHashMap.toString()Ljava/lang/String;:1230 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z
   * 66 Weak Mutation 1065: gnu.trove.map.hash.TShortFloatHashMap.toString()Ljava/lang/String;:1242 - ReplaceConstant - } -> 
   * 67 Weak Mutation 1063: gnu.trove.map.hash.TShortFloatHashMap.toString()Ljava/lang/String;:1229 - ReplaceConstant - { -> 
   * 68 Weak Mutation 1405: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1233 - ReplaceConstant - 0 -> 1
   * 69 Weak Mutation 1404: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1233 - ReplaceComparisonOperator == -> !=
   * 70 Weak Mutation 1403: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1233 - DeleteField: firstZ
   * 71 Weak Mutation 1402: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1233 - InsertUnaryOp Negation
   * 72 Weak Mutation 1411: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1236 - InsertUnaryOp IINC 1 key
   * 73 Weak Mutation 1410: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1236 - InsertUnaryOp Negation of key
   * 74 Weak Mutation 1409: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1236 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 75 Weak Mutation 1415: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1237 - ReplaceConstant - = -> 
   * 76 Weak Mutation 1414: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1237 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 77 Weak Mutation 1413: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1236 - DeleteStatement: append(I)Ljava/lang/StringBuilder;
   * 78 Weak Mutation 1412: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1236 - InsertUnaryOp IINC -1 key
   * 79 Weak Mutation 1419: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1238 - DeleteStatement: append(F)Ljava/lang/StringBuilder;
   * 80 Weak Mutation 1418: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1238 - InsertUnaryOp Negation of value
   * 81 Weak Mutation 1417: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1238 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 82 Weak Mutation 1416: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1237 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 83 Weak Mutation 1420: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1239 - ReplaceConstant - 1 -> 0
   * 84 Weak Mutation 821: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - InsertUnaryOp Negation of i
   * 85 Weak Mutation 820: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - InsertUnaryOp IINC -1 i
   * 86 Weak Mutation 823: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - InsertUnaryOp IINC -1 i
   * 87 Weak Mutation 822: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - InsertUnaryOp IINC 1 i
   * 88 Weak Mutation 816: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - ReplaceComparisonOperator != -> ==
   * 89 Weak Mutation 819: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - InsertUnaryOp IINC 1 i
   * 90 Weak Mutation 818: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - InsertUnaryOp Negation of i
   * 91 Weak Mutation 825: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - ReplaceComparisonOperator != -> ==
   * 92 Weak Mutation 824: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - DeleteStatement: execute(SF)Z
   * 93 Weak Mutation 827: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:426 - ReplaceConstant - 1 -> 0
   * 94 Weak Mutation 805: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:421 - InsertUnaryOp Negation of i
   * 95 Weak Mutation 806: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:421 - InsertUnaryOp IINC 1 i
   * 96 Weak Mutation 807: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:421 - InsertUnaryOp IINC -1 i
   * 97 Weak Mutation 801: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:418 - DeleteField: _states[B
   * 98 Weak Mutation 802: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:419 - DeleteField: _set[S
   * 99 Weak Mutation 803: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:420 - DeleteField: _values[F
   * 100 Weak Mutation 812: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - InsertUnaryOp Negation of i
   * 101 Weak Mutation 813: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - InsertUnaryOp IINC 1 i
   * 102 Weak Mutation 814: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - InsertUnaryOp IINC -1 i
   * 103 Weak Mutation 815: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:422 - ReplaceConstant - 1 -> 0
   * 104 Weak Mutation 809: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:421 - ReplaceComparisonOperator <= -> <
   * 105 Weak Mutation 810: gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z:421 - ReplaceComparisonOperator <= -> -1
   * 106 Weak Mutation 1066: gnu.trove.map.hash.TShortFloatHashMap.toString()Ljava/lang/String;:1242 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 107 Weak Mutation 1067: gnu.trove.map.hash.TShortFloatHashMap.toString()Ljava/lang/String;:1243 - DeleteStatement: toString()Ljava/lang/String;
   * 108 Weak Mutation 1064: gnu.trove.map.hash.TShortFloatHashMap.toString()Ljava/lang/String;:1230 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z
   * 109 Weak Mutation 1065: gnu.trove.map.hash.TShortFloatHashMap.toString()Ljava/lang/String;:1242 - ReplaceConstant - } -> 
   * 110 Weak Mutation 1063: gnu.trove.map.hash.TShortFloatHashMap.toString()Ljava/lang/String;:1229 - ReplaceConstant - { -> 
   * 111 Weak Mutation 1405: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1233 - ReplaceConstant - 0 -> 1
   * 112 Weak Mutation 1404: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1233 - ReplaceComparisonOperator == -> !=
   * 113 Weak Mutation 1407: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1234 - ReplaceConstant - ,  -> 
   * 114 Weak Mutation 1406: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1234 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 115 Weak Mutation 1403: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1233 - DeleteField: firstZ
   * 116 Weak Mutation 1402: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1233 - InsertUnaryOp Negation
   * 117 Weak Mutation 1411: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1236 - InsertUnaryOp IINC 1 key
   * 118 Weak Mutation 1410: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1236 - InsertUnaryOp Negation of key
   * 119 Weak Mutation 1409: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1236 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 120 Weak Mutation 1408: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1234 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 121 Weak Mutation 1415: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1237 - ReplaceConstant - = -> 
   * 122 Weak Mutation 1414: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1237 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 123 Weak Mutation 1413: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1236 - DeleteStatement: append(I)Ljava/lang/StringBuilder;
   * 124 Weak Mutation 1412: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1236 - InsertUnaryOp IINC -1 key
   * 125 Weak Mutation 1419: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1238 - DeleteStatement: append(F)Ljava/lang/StringBuilder;
   * 126 Weak Mutation 1418: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1238 - InsertUnaryOp Negation of value
   * 127 Weak Mutation 1417: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1238 - DeleteField: val$bufLjava/lang/StringBuilder;
   * 128 Weak Mutation 1416: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1237 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 129 Weak Mutation 1420: gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z:1239 - ReplaceConstant - 1 -> 0
   * 130 gnu.trove.map.hash.TShortFloatHashMap$1.<init>(Lgnu/trove/map/hash/TShortFloatHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 131 gnu.trove.map.hash.TShortFloatHashMap$1.execute(SF)Z: I4 Branch 115 IFEQ L1233 - false
   * 132 gnu.trove.map.hash.TShortFloatHashMap.toString()Ljava/lang/String;: root-Branch
   * 133 gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 134 gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 135 gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 136 gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 137 gnu.trove.map.hash.TShortFloatHashMap.forEachEntry(Lgnu/trove/procedure/TShortFloatProcedure;)Z: I39 Branch 65 IFNE L422 - true
   */

  @Test
  public void test42()  throws Throwable  {
      short[] shortArray0 = new short[8];
      shortArray0[0] = (short)1;
      float[] floatArray0 = new float[5];
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(shortArray0, floatArray0);
      String string0 = tShortFloatHashMap0.toString();
      assertNotNull(string0);
      assertEquals(17, tShortFloatHashMap0.capacity());
      assertEquals(2, tShortFloatHashMap0.size());
      assertEquals("{1=0.0, 0=0.0}", string0);
  }

  //Test case number: 43
  /*
   * 90 covered goals:
   * 1 Weak Mutation 1073: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - DeleteField: _sizeI
   * 2 Weak Mutation 1092: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - DeleteStatement: writeShort(I)V
   * 3 Weak Mutation 1088: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - DeleteField: _set[S
   * 4 Weak Mutation 1089: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - InsertUnaryOp Negation of i
   * 5 Weak Mutation 1090: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - InsertUnaryOp IINC 1 i
   * 6 Weak Mutation 1091: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - InsertUnaryOp IINC -1 i
   * 7 Weak Mutation 1096: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - InsertUnaryOp IINC -1 i
   * 8 Weak Mutation 1097: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - DeleteStatement: writeFloat(F)V
   * 9 Weak Mutation 1093: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - DeleteField: _values[F
   * 10 Weak Mutation 1094: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - InsertUnaryOp Negation of i
   * 11 Weak Mutation 1095: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - InsertUnaryOp IINC 1 i
   * 12 gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - false
   * 13 Weak Mutation 432: gnu.trove.map.hash.TShortFloatHashMap.put(SF)F:198 - InsertUnaryOp IINC -1 index
   * 14 Weak Mutation 425: gnu.trove.map.hash.TShortFloatHashMap.put(SF)F:197 - DeleteStatement: insertKey(S)I
   * 15 Weak Mutation 424: gnu.trove.map.hash.TShortFloatHashMap.put(SF)F:197 - InsertUnaryOp IINC -1 key
   * 16 Weak Mutation 427: gnu.trove.map.hash.TShortFloatHashMap.put(SF)F:198 - InsertUnaryOp IINC 1 key
   * 17 Weak Mutation 426: gnu.trove.map.hash.TShortFloatHashMap.put(SF)F:198 - InsertUnaryOp Negation of key
   * 18 Weak Mutation 429: gnu.trove.map.hash.TShortFloatHashMap.put(SF)F:198 - InsertUnaryOp Negation of value
   * 19 Weak Mutation 428: gnu.trove.map.hash.TShortFloatHashMap.put(SF)F:198 - InsertUnaryOp IINC -1 key
   * 20 Weak Mutation 431: gnu.trove.map.hash.TShortFloatHashMap.put(SF)F:198 - InsertUnaryOp IINC 1 index
   * 21 Weak Mutation 430: gnu.trove.map.hash.TShortFloatHashMap.put(SF)F:198 - InsertUnaryOp Negation of index
   * 22 Weak Mutation 423: gnu.trove.map.hash.TShortFloatHashMap.put(SF)F:197 - InsertUnaryOp IINC 1 key
   * 23 Weak Mutation 422: gnu.trove.map.hash.TShortFloatHashMap.put(SF)F:197 - InsertUnaryOp Negation of key
   * 24 Weak Mutation 478: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:219 - InsertUnaryOp Negation of index
   * 25 Weak Mutation 479: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:219 - InsertUnaryOp IINC 1 index
   * 26 Weak Mutation 477: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:219 - DeleteField: _values[F
   * 27 Weak Mutation 463: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:214 - ReplaceComparisonOperator >= -> ==
   * 28 Weak Mutation 462: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:214 - InsertUnaryOp Negation of index
   * 29 Weak Mutation 461: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:213 - ReplaceConstant - 1 -> 0
   * 30 Weak Mutation 459: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:212 - InsertUnaryOp Negation
   * 31 Weak Mutation 489: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:225 - InsertUnaryOp Negation of previous
   * 32 Weak Mutation 488: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:225 - ReplaceVariable previous -> value
   * 33 Weak Mutation 485: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:222 - InsertUnaryOp Negation
   * 34 Weak Mutation 484: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:221 - ReplaceComparisonOperator == -> !=
   * 35 Weak Mutation 487: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:222 - DeleteStatement: postInsertHook(Z)V
   * 36 Weak Mutation 486: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:222 - DeleteField: consumeFreeSlotZ
   * 37 Weak Mutation 481: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:219 - ReplaceVariable value -> previous
   * 38 Weak Mutation 480: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:219 - InsertUnaryOp IINC -1 index
   * 39 Weak Mutation 483: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:221 - InsertUnaryOp Negation of isNewMapping
   * 40 Weak Mutation 482: gnu.trove.map.hash.TShortFloatHashMap.doPut(SFI)F:219 - InsertUnaryOp Negation of value
   * 41 Weak Mutation 1070: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - InsertUnaryOp Negation
   * 42 Weak Mutation 1071: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - InsertUnaryOp +1
   * 43 Weak Mutation 1068: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1250 - ReplaceConstant - 0 -> 1
   * 44 Weak Mutation 1069: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1250 - DeleteStatement: writeByte(I)V
   * 45 Weak Mutation 1083: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - InsertUnaryOp Negation of i
   * 46 Weak Mutation 1082: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - DeleteField: _states[B
   * 47 Weak Mutation 1081: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - ReplaceComparisonOperator <= -> -1
   * 48 Weak Mutation 1080: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - ReplaceComparisonOperator <= -> <
   * 49 Weak Mutation 1087: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - ReplaceComparisonOperator != -> ==
   * 50 Weak Mutation 1086: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - ReplaceConstant - 1 -> 0
   * 51 Weak Mutation 1085: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - InsertUnaryOp IINC -1 i
   * 52 Weak Mutation 1084: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - InsertUnaryOp IINC 1 i
   * 53 Weak Mutation 1075: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - DeleteField: _states[B
   * 54 Weak Mutation 1074: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - DeleteStatement: writeInt(I)V
   * 55 Weak Mutation 1072: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - InsertUnaryOp -1
   * 56 Weak Mutation 1078: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - InsertUnaryOp IINC -1 i
   * 57 Weak Mutation 1077: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - InsertUnaryOp IINC 1 i
   * 58 Weak Mutation 1076: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - InsertUnaryOp Negation of i
   * 59 Weak Mutation 1096: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - InsertUnaryOp IINC -1 i
   * 60 Weak Mutation 1097: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - DeleteStatement: writeFloat(F)V
   * 61 Weak Mutation 1092: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - DeleteStatement: writeShort(I)V
   * 62 Weak Mutation 1093: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - DeleteField: _values[F
   * 63 Weak Mutation 1094: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - InsertUnaryOp Negation of i
   * 64 Weak Mutation 1095: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1262 - InsertUnaryOp IINC 1 i
   * 65 Weak Mutation 1088: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - DeleteField: _set[S
   * 66 Weak Mutation 1089: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - InsertUnaryOp Negation of i
   * 67 Weak Mutation 1090: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - InsertUnaryOp IINC 1 i
   * 68 Weak Mutation 1091: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1261 - InsertUnaryOp IINC -1 i
   * 69 Weak Mutation 1070: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - InsertUnaryOp Negation
   * 70 Weak Mutation 1071: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - InsertUnaryOp +1
   * 71 Weak Mutation 1068: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1250 - ReplaceConstant - 0 -> 1
   * 72 Weak Mutation 1069: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1250 - DeleteStatement: writeByte(I)V
   * 73 Weak Mutation 1083: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - InsertUnaryOp Negation of i
   * 74 Weak Mutation 1082: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - DeleteField: _states[B
   * 75 Weak Mutation 1081: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - ReplaceComparisonOperator <= -> -1
   * 76 Weak Mutation 1080: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - ReplaceComparisonOperator <= -> <
   * 77 Weak Mutation 1087: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - ReplaceComparisonOperator != -> ==
   * 78 Weak Mutation 1086: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - ReplaceConstant - 1 -> 0
   * 79 Weak Mutation 1085: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - InsertUnaryOp IINC -1 i
   * 80 Weak Mutation 1084: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1260 - InsertUnaryOp IINC 1 i
   * 81 Weak Mutation 1075: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - DeleteField: _states[B
   * 82 Weak Mutation 1074: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - DeleteStatement: writeInt(I)V
   * 83 Weak Mutation 1073: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - DeleteField: _sizeI
   * 84 Weak Mutation 1072: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1256 - InsertUnaryOp -1
   * 85 Weak Mutation 1078: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - InsertUnaryOp IINC -1 i
   * 86 Weak Mutation 1077: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - InsertUnaryOp IINC 1 i
   * 87 Weak Mutation 1076: gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V:1259 - InsertUnaryOp Negation of i
   * 88 gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - true
   * 89 gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - false
   * 90 gnu.trove.map.hash.TShortFloatHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - true
   */

  @Test
  public void test43()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(1618);
      tShortFloatHashMap0.put((short) (-1199), (short) (-1199));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tShortFloatHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(false, tShortFloatHashMap0.isEmpty());
      assertEquals("{-1199=-1199.0}", tShortFloatHashMap0.toString());
  }

  //Test case number: 44
  /*
   * 2 covered goals:
   * 1 Weak Mutation 1098: gnu.trove.map.hash.TShortFloatHashMap.readExternal(Ljava/io/ObjectInput;)V:1271 - DeleteStatement: readByte()B
   * 2 Weak Mutation 1098: gnu.trove.map.hash.TShortFloatHashMap.readExternal(Ljava/io/ObjectInput;)V:1271 - DeleteStatement: readByte()B
   */

  @Test
  public void test44()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(602);
      // Undeclared exception!
      try {
        tShortFloatHashMap0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 45
  /*
   * 13 covered goals:
   * 1 gnu.trove.map.hash.TShortFloatHashMap.keySet()Lgnu/trove/set/TShortSet;: root-Branch
   * 2 gnu.trove.map.hash.TShortFloatHashMap$TKeyView.<init>(Lgnu/trove/map/hash/TShortFloatHashMap;)V: root-Branch
   * 3 Weak Mutation 351: gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I:162 - InsertUnaryOp IINC 1 initialCapacity
   * 4 Weak Mutation 350: gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I:162 - InsertUnaryOp Negation of initialCapacity
   * 5 Weak Mutation 356: gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I:163 - InsertUnaryOp IINC -1 capacity
   * 6 Weak Mutation 357: gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I:164 - ReplaceVariable capacity -> initialCapacity
   * 7 Weak Mutation 358: gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I:164 - InsertUnaryOp Negation of capacity
   * 8 Weak Mutation 359: gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I:164 - InsertUnaryOp IINC 1 capacity
   * 9 Weak Mutation 352: gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I:162 - InsertUnaryOp IINC -1 initialCapacity
   * 10 Weak Mutation 353: gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I:163 - ReplaceVariable capacity -> initialCapacity
   * 11 Weak Mutation 354: gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I:163 - InsertUnaryOp Negation of capacity
   * 12 Weak Mutation 355: gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I:163 - InsertUnaryOp IINC 1 capacity
   * 13 Weak Mutation 360: gnu.trove.map.hash.TShortFloatHashMap.setUp(I)I:164 - InsertUnaryOp IINC -1 capacity
   */

  @Test
  public void test45()  throws Throwable  {
      TShortFloatHashMap tShortFloatHashMap0 = new TShortFloatHashMap(1, (float) 1, (short)0, (float) (short)0);
      TShortSet tShortSet0 = tShortFloatHashMap0.keySet();
      assertEquals(0, tShortSet0.size());
  }
}

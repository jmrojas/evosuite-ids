/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TIntFunction;
import gnu.trove.impl.sync.TSynchronizedIntCollection;
import gnu.trove.impl.sync.TSynchronizedLongIntMap;
import gnu.trove.impl.sync.TSynchronizedLongSet;
import gnu.trove.map.TLongIntMap;
import gnu.trove.map.hash.TLongIntHashMap;
import gnu.trove.procedure.TIntProcedure;
import gnu.trove.procedure.TLongIntProcedure;
import gnu.trove.procedure.TLongProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedLongIntMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.put(JI)I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedLongIntMap.<init>(Lgnu/trove/map/TLongIntMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0, (Object) "");
      tSynchronizedLongIntMap0.put((long) 0, 0);
      assertEquals(1, tLongIntHashMap0.size());
      assertEquals("{0=0}", tSynchronizedLongIntMap0.toString());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.containsKey(J)Z: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedLongIntMap.<init>(Lgnu/trove/map/TLongIntMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test1()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0);
      boolean boolean0 = tSynchronizedLongIntMap0.containsKey((-331L));
      assertEquals(false, boolean0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.hashCode()I: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0);
      int int0 = tSynchronizedLongIntMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.equals(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap((-30), (-30), (-30), (-30));
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0);
      boolean boolean0 = tSynchronizedLongIntMap0.equals((Object) "37777777742");
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0);
      HashMap<Long, Integer> hashMap0 = new HashMap<Long, Integer>();
      tSynchronizedLongIntMap0.putAll((Map<? extends Long, ? extends Integer>) hashMap0);
      assertEquals(true, tSynchronizedLongIntMap0.isEmpty());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.clear()V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0);
      tSynchronizedLongIntMap0.clear();
      assertEquals(true, tSynchronizedLongIntMap0.isEmpty());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.adjustValue(JI)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0);
      boolean boolean0 = tSynchronizedLongIntMap0.adjustValue((long) (-18), (-18));
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0);
      boolean boolean0 = tSynchronizedLongIntMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.forEachValue(Lgnu/trove/procedure/TIntProcedure;)Z: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0);
      boolean boolean0 = tSynchronizedLongIntMap0.forEachValue((TIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.values()[I: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0, (Object) "");
      int[] intArray0 = tSynchronizedLongIntMap0.values();
      assertNotNull(intArray0);
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.iterator()Lgnu/trove/iterator/TLongIntIterator;: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedLongIntMap.size()I: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0, (Object) "");
      tLongIntHashMap0.putAll((TLongIntMap) tSynchronizedLongIntMap0);
      assertEquals(0, tSynchronizedLongIntMap0.getNoEntryValue());
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.adjustOrPutValue(JII)I: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0);
      int int0 = tSynchronizedLongIntMap0.adjustOrPutValue((-331L), (-1874), (-1874));
      assertEquals(1, tLongIntHashMap0.size());
      assertEquals((-1874), int0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.getNoEntryKey()J: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0);
      long long0 = tSynchronizedLongIntMap0.getNoEntryKey();
      assertEquals(0L, long0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap((-1139), (-1139));
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0);
      boolean boolean0 = tSynchronizedLongIntMap0.forEachKey((TLongProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.transformValues(Lgnu/trove/function/TIntFunction;)V: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      long[] longArray0 = new long[6];
      int[] intArray0 = new int[1];
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(longArray0, intArray0);
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0, (Object) "\u65E5\u672C\u8A9E");
      // Undeclared exception!
      try {
        tSynchronizedLongIntMap0.transformValues((TIntFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.keys([J)[J: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0);
      long[] longArray0 = tSynchronizedLongIntMap0.keys(tLongIntHashMap0._set);
      assertNotNull(longArray0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.forEachEntry(Lgnu/trove/procedure/TLongIntProcedure;)Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0, (Object) "");
      boolean boolean0 = tSynchronizedLongIntMap0.forEachEntry((TLongIntProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.retainEntries(Lgnu/trove/procedure/TLongIntProcedure;)Z: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap(18);
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0);
      boolean boolean0 = tSynchronizedLongIntMap0.retainEntries((TLongIntProcedure) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0);
      String string0 = tSynchronizedLongIntMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.containsValue(I)Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap((-1139), (-1139));
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0);
      boolean boolean0 = tSynchronizedLongIntMap0.containsValue((-1139));
      assertEquals(false, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.keys()[J: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0, (Object) "");
      long[] longArray0 = tSynchronizedLongIntMap0.keys();
      assertNotNull(longArray0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.putIfAbsent(JI)I: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap((-1139), (-1139));
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0);
      tSynchronizedLongIntMap0.putIfAbsent((long) (-1139), (-1139));
      assertEquals(false, tLongIntHashMap0.isEmpty());
      assertEquals("{-1139=-1139}", tSynchronizedLongIntMap0.toString());
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.get(J)I: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0);
      int int0 = tSynchronizedLongIntMap0.get((-331L));
      assertEquals(0, int0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.increment(J)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0);
      boolean boolean0 = tSynchronizedLongIntMap0.increment((-331L));
      assertEquals(false, boolean0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.remove(J)I: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0, (Object) "");
      int int0 = tSynchronizedLongIntMap0.remove(1079L);
      assertEquals(0, int0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.values([I)[I: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0, (Object) "");
      int[] intArray0 = new int[6];
      int[] intArray1 = tSynchronizedLongIntMap0.values(intArray0);
      assertSame(intArray1, intArray0);
  }

  //Test case number: 26
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.getNoEntryValue()I: root-Branch
   * 2 gnu.trove.impl.sync.TSynchronizedLongIntMap.<init>(Lgnu/trove/map/TLongIntMap;)V: I17 Branch 1 IFNONNULL L59 - true
   */

  @Test
  public void test26()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0);
      int int0 = tSynchronizedLongIntMap0.getNoEntryValue();
      assertEquals(0, int0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.putAll(Lgnu/trove/map/TLongIntMap;)V: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0, (Object) "");
      tSynchronizedLongIntMap0.putAll((TLongIntMap) tLongIntHashMap0);
      assertEquals(0L, tLongIntHashMap0.getNoEntryKey());
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.<init>(Lgnu/trove/map/TLongIntMap;)V: I17 Branch 1 IFNONNULL L59 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = null;
      try {
        tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.keySet()Lgnu/trove/set/TLongSet;: I11 Branch 2 IFNONNULL L107 - true
   * 2 gnu.trove.impl.sync.TSynchronizedLongIntMap.keySet()Lgnu/trove/set/TLongSet;: I11 Branch 2 IFNONNULL L107 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0, (Object) "");
      TSynchronizedLongSet tSynchronizedLongSet0 = (TSynchronizedLongSet)tSynchronizedLongIntMap0.keySet();
      assertNotNull(tSynchronizedLongSet0);
      
      TSynchronizedLongSet tSynchronizedLongSet1 = (TSynchronizedLongSet)tSynchronizedLongIntMap0.keySet();
      assertSame(tSynchronizedLongSet1, tSynchronizedLongSet0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.sync.TSynchronizedLongIntMap.valueCollection()Lgnu/trove/TIntCollection;: I11 Branch 3 IFNONNULL L121 - true
   * 2 gnu.trove.impl.sync.TSynchronizedLongIntMap.valueCollection()Lgnu/trove/TIntCollection;: I11 Branch 3 IFNONNULL L121 - false
   * 3 gnu.trove.impl.sync.TSynchronizedLongIntMap.<init>(Lgnu/trove/map/TLongIntMap;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test30()  throws Throwable  {
      TLongIntHashMap tLongIntHashMap0 = new TLongIntHashMap();
      TSynchronizedLongIntMap tSynchronizedLongIntMap0 = new TSynchronizedLongIntMap((TLongIntMap) tLongIntHashMap0, (Object) "");
      TSynchronizedIntCollection tSynchronizedIntCollection0 = (TSynchronizedIntCollection)tSynchronizedLongIntMap0.valueCollection();
      assertNotNull(tSynchronizedIntCollection0);
      
      TSynchronizedIntCollection tSynchronizedIntCollection1 = (TSynchronizedIntCollection)tSynchronizedLongIntMap0.valueCollection();
      assertSame(tSynchronizedIntCollection1, tSynchronizedIntCollection0);
  }
}

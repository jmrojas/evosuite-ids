/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedCharLongMap;
import gnu.trove.map.TCharLongMap;
import gnu.trove.map.hash.TCharLongHashMap;
import gnu.trove.procedure.TCharProcedure;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Locale;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.swing.text.Segment;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedCharLongMapEvoSuite_Random {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = 0;
      int int1 = (-1);
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(int1);
      String string0 = File.separator;
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0, (Object) string0);
      char char0 = 'I';
      tSynchronizedCharLongMap0.remove(char0);
      TCharLongHashMap tCharLongHashMap1 = new TCharLongHashMap(int0, int0);
      Object object0 = null;
      TSynchronizedCharLongMap tSynchronizedCharLongMap1 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap1, object0);
      // Undeclared exception!
      try {
        tSynchronizedCharLongMap1.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = 1558;
      char char0 = 'L';
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(int0, (float) int0, char0, (long) int0);
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      long long0 = 0L;
      tSynchronizedCharLongMap0.adjustValue(char0, long0);
      TCharLongHashMap tCharLongHashMap1 = new TCharLongHashMap(int0, int0);
      TSynchronizedCharLongMap tSynchronizedCharLongMap1 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap1);
      char char1 = '4';
      tSynchronizedCharLongMap1.get(char1);
      char char2 = 'E';
      tCharLongHashMap0.compact();
      tSynchronizedCharLongMap1.putIfAbsent(char2, (long) int0);
      TSynchronizedCharLongMap tSynchronizedCharLongMap2 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap1);
      assertEquals(false, tCharLongHashMap1.isEmpty());
      assertEquals("{E=1558}", tSynchronizedCharLongMap2.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      char[] charArray0 = new char[9];
      char char0 = 'i';
      charArray0[0] = char0;
      char char1 = ',';
      charArray0[1] = char1;
      char char2 = 'r';
      charArray0[2] = char2;
      char char3 = 'q';
      charArray0[3] = char3;
      char char4 = 'N';
      charArray0[4] = char4;
      char char5 = '2';
      charArray0[5] = char5;
      char char6 = '>';
      charArray0[6] = char6;
      char char7 = 'q';
      charArray0[7] = char7;
      char char8 = '-';
      charArray0[8] = char8;
      long[] longArray0 = new long[8];
      longArray0[0] = (long) charArray0[8];
      longArray0[1] = (long) char2;
      longArray0[2] = (long) charArray0[3];
      longArray0[3] = (long) char6;
      longArray0[4] = (long) char2;
      longArray0[5] = (long) charArray0[8];
      longArray0[6] = (long) char3;
      longArray0[7] = (long) charArray0[5];
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(charArray0, longArray0);
      TCharLongHashMap tCharLongHashMap1 = new TCharLongHashMap((TCharLongMap) tCharLongHashMap0);
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap1);
      int int0 = (-302);
      Segment segment0 = new Segment(charArray0, (int) char1, int0);
      // Undeclared exception!
      try {
        segment0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -302
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = 381;
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(int0);
      Locale locale0 = Locale.CHINA;
      Locale locale1 = Locale.CHINA;
      TCharLongMap tCharLongMap0 = null;
      String string0 = locale1.toLanguageTag();
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap(tCharLongMap0, (Object) string0);
      String string1 = locale0.getDisplayName(locale1);
      TSynchronizedCharLongMap tSynchronizedCharLongMap1 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0, (Object) string1);
      tSynchronizedCharLongMap1.getNoEntryKey();
      tCharLongHashMap0.getNoEntryValue();
      TSynchronizedCharLongMap tSynchronizedCharLongMap2 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      char char0 = '8';
      tSynchronizedCharLongMap2.increment(char0);
      TSynchronizedCharLongMap tSynchronizedCharLongMap3 = new TSynchronizedCharLongMap((TCharLongMap) tSynchronizedCharLongMap2);
      TCharProcedure tCharProcedure0 = null;
      boolean boolean0 = tSynchronizedCharLongMap3.forEachKey(tCharProcedure0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 0;
      char char0 = 'A';
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(int0, (float) int0, char0, (long) int0);
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      Object object0 = null;
      TSynchronizedCharLongMap tSynchronizedCharLongMap1 = new TSynchronizedCharLongMap((TCharLongMap) tSynchronizedCharLongMap0, object0);
      long long0 = 1023L;
      // Undeclared exception!
      try {
        tSynchronizedCharLongMap1.containsValue(long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = 0;
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(int0);
      Locale locale0 = Locale.ITALIAN;
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      tSynchronizedCharLongMap0.keys();
      String string0 = locale0.toString();
      TSynchronizedCharLongMap tSynchronizedCharLongMap1 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0, (Object) string0);
      char char0 = ',';
      tSynchronizedCharLongMap1.adjustValue(char0, (long) int0);
      TSynchronizedCharLongMap tSynchronizedCharLongMap2 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      TCharLongMap tCharLongMap0 = null;
      String string1 = "";
      TSynchronizedCharLongMap tSynchronizedCharLongMap3 = null;
      try {
        tSynchronizedCharLongMap3 = new TSynchronizedCharLongMap(tCharLongMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      char[] charArray0 = new char[2];
      char char0 = 'g';
      charArray0[0] = char0;
      char char1 = 'v';
      charArray0[1] = char1;
      long[] longArray0 = new long[6];
      longArray0[0] = (long) char0;
      longArray0[1] = (long) charArray0[0];
      long long0 = 509L;
      longArray0[0] = (long) charArray0[0];
      long long1 = 1527L;
      longArray0[1] = long1;
      longArray0[2] = (long) char0;
      longArray0[3] = long1;
      longArray0[4] = (long) charArray0[0];
      longArray0[5] = (long) char1;
      longArray0[2] = long0;
      longArray0[3] = (long) char1;
      long long2 = 137L;
      longArray0[0] = (long) char1;
      longArray0[1] = (long) char0;
      longArray0[2] = (long) char0;
      longArray0[3] = long2;
      longArray0[4] = (long) char1;
      longArray0[5] = long2;
      longArray0[4] = long2;
      longArray0[5] = (long) char0;
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(charArray0, longArray0);
      Object object0 = new Object();
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0, object0);
      long long3 = 0L;
      tCharLongHashMap0.adjustOrPutValue(char1, long3, longArray0[0]);
      char[] charArray1 = tSynchronizedCharLongMap0.keys();
      assertFalse(charArray0.equals(charArray1));
  }

  @Test
  public void test7()  throws Throwable  {
      char[] charArray0 = new char[5];
      char char0 = 'c';
      charArray0[0] = char0;
      char char1 = 'a';
      charArray0[1] = char1;
      char char2 = '-';
      charArray0[2] = char2;
      char char3 = '/';
      charArray0[3] = char3;
      char char4 = '_';
      charArray0[4] = char4;
      long[] longArray0 = new long[7];
      longArray0[0] = (long) char1;
      longArray0[1] = (long) charArray0[2];
      longArray0[2] = (long) char2;
      longArray0[3] = (long) charArray0[2];
      longArray0[4] = (long) charArray0[2];
      longArray0[5] = (long) charArray0[0];
      longArray0[6] = (long) charArray0[3];
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(charArray0, longArray0);
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      assertEquals(5, tSynchronizedCharLongMap0.size());
  }

  @Test
  public void test8()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          int int0 = 0;
          TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(int0);
          TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
          char char0 = '|';
          long long0 = 1410L;
          long long1 = 1L;
          tSynchronizedCharLongMap0.adjustOrPutValue(char0, long0, long1);
          TCharLongHashMap tCharLongHashMap1 = new TCharLongHashMap();
          String string0 = "2X U*LO5Cv\\!d\\Z&q]";
          TSynchronizedCharLongMap tSynchronizedCharLongMap1 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap1);
          tSynchronizedCharLongMap1.isEmpty();
          File file0 = new File(string0);
          File file1 = new File(file0, string0);
          tSynchronizedCharLongMap1.iterator();
          // Undeclared exception!
          try {
            File.createTempFile(string0, string0, file1);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.io.FilePermission\" \"2X U*LO5Cv\\!d\\Z&q]/2X U*LO5Cv\\!d\\Z&q]/2X U*LO5Cv\\!d\\Z&q]68311771173251946622X U*LO5Cv\\!d\\Z&q]\" \"write\")
             // java.lang.Thread.getStackTrace(Thread.java:1567)
             // org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
             // java.io.File.createTempFile(File.java:1871)
             // sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             // sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:601)
             // org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:264)
             // org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:144)
             // org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:217)
             // org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             // org.evosuite.testcase.TestRunnable.call(TestRunnable.java:1)
             // java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
             // java.util.concurrent.FutureTask.run(FutureTask.java:166)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
             // java.lang.Thread.run(Thread.java:722)
             //
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test9()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0);
      tSynchronizedCharLongMap0.size();
      int int0 = (-1);
      TCharLongHashMap tCharLongHashMap1 = new TCharLongHashMap(int0);
      String string0 = "";
      URI uRI0 = URI.create(string0);
      String string1 = uRI0.toASCIIString();
      TSynchronizedCharLongMap tSynchronizedCharLongMap1 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap1, (Object) string1);
      String string2 = "";
      File file0 = new File(string2);
      File file1 = new File(file0, string2);
      RandomAccessFile randomAccessFile0 = null;
      try {
        randomAccessFile0 = new RandomAccessFile(file1, string2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[8];
      char char0 = 'd';
      charArray0[0] = char0;
      char char1 = 'g';
      charArray0[1] = char1;
      char char2 = 'd';
      charArray0[2] = char2;
      char char3 = ',';
      charArray0[3] = char3;
      char char4 = '&';
      charArray0[4] = char4;
      char char5 = 'S';
      charArray0[5] = char5;
      char char6 = '!';
      charArray0[6] = char6;
      char char7 = '^';
      charArray0[7] = char7;
      long[] longArray0 = new long[1];
      longArray0[0] = (long) charArray0[0];
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(charArray0, longArray0);
      String string0 = "1y*S8";
      RandomAccessFile randomAccessFile0 = null;
      try {
        randomAccessFile0 = new RandomAccessFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"1y*S8\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 0;
      int int1 = (-145);
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(int1, int0);
      String string0 = "gx*%6ae?mM^";
      String string1 = "r";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string1, string1, int0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: gx*%6ae?mM^://r@r:0gx*%256ae%3FmM%5E?gx*%256ae?mM%5E#gx*%256ae?mM%5E
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 1;
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap(int0);
      String string0 = "o+8_J";
      File file0 = new File(string0, string0);
      File file1 = new File(file0, string0);
      String string1 = file1.getParent();
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap((TCharLongMap) tCharLongHashMap0, (Object) string1);
      String string2 = File.separator;
      TSynchronizedCharLongMap tSynchronizedCharLongMap1 = new TSynchronizedCharLongMap((TCharLongMap) tSynchronizedCharLongMap0, (Object) string2);
      tSynchronizedCharLongMap1.keys();
      int int1 = 0;
      TCharLongHashMap tCharLongHashMap1 = new TCharLongHashMap(int1);
      TCharLongHashMap tCharLongHashMap2 = new TCharLongHashMap();
      String string3 = "BPF;!I&}Mca";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string3, string3, string3);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 3: BPF;!I&}Mca:BPF;!I&%7DMca#BPF;!I&%7DMca
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TCharLongHashMap tCharLongHashMap0 = new TCharLongHashMap();
      Locale locale0 = Locale.FRANCE;
      String string0 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://#
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TCharLongMap tCharLongMap0 = null;
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = null;
      try {
        tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap(tCharLongMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TCharLongMap tCharLongMap0 = null;
      Object object0 = null;
      TSynchronizedCharLongMap tSynchronizedCharLongMap0 = new TSynchronizedCharLongMap(tCharLongMap0, object0);
      TSynchronizedCharLongMap tSynchronizedCharLongMap1 = new TSynchronizedCharLongMap((TCharLongMap) tSynchronizedCharLongMap0);
      TSynchronizedCharLongMap tSynchronizedCharLongMap2 = (TSynchronizedCharLongMap)tSynchronizedCharLongMap1.mutex;
      TSynchronizedCharLongMap tSynchronizedCharLongMap3 = new TSynchronizedCharLongMap(tCharLongMap0, (Object) tSynchronizedCharLongMap2);
      // Undeclared exception!
      try {
        tSynchronizedCharLongMap3.values();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

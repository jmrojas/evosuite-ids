/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TCharFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet;
import gnu.trove.map.TDoubleCharMap;
import gnu.trove.map.hash.TDoubleCharHashMap;
import gnu.trove.procedure.TCharProcedure;
import gnu.trove.procedure.TDoubleCharProcedure;
import gnu.trove.procedure.TDoubleProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableDoubleCharMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap((-165), (-165));
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      boolean boolean0 = tUnmodifiableDoubleCharMap0.forEachValue((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.transformValues(Lgnu/trove/function/TCharFunction;)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(0);
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleCharMap0.transformValues((TCharFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 7 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.iterator()Lgnu/trove/iterator/TDoubleCharIterator;: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.size()I: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap$1.value()C: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap$1.hasNext()Z: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap$1.advance()V: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap$1.key()D: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableDoubleCharMap;)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      char[] charArray0 = new char[8];
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      TDoubleCharHashMap tDoubleCharHashMap1 = new TDoubleCharHashMap((TDoubleCharMap) tUnmodifiableDoubleCharMap0);
      assertEquals(1, tUnmodifiableDoubleCharMap0.size());
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.values([C)[C: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      char[] charArray0 = new char[18];
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      char[] charArray1 = tUnmodifiableDoubleCharMap0.values(charArray0);
      assertSame(charArray1, charArray0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.remove(D)C: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      char[] charArray0 = new char[5];
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleCharMap0.remove((double) '3');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.increment(D)Z: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap();
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleCharMap0.increment((double) 'W');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.retainEntries(Lgnu/trove/procedure/TDoubleCharProcedure;)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      char[] charArray0 = new char[2];
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleCharMap0.retainEntries((TDoubleCharProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.keys([D)[D: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(0, 0);
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      double[] doubleArray0 = tUnmodifiableDoubleCharMap0.keys(tDoubleCharHashMap0._set);
      assertNotNull(doubleArray0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(0, 0);
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      HashMap<Double, Character> hashMap0 = new HashMap<Double, Character>();
      // Undeclared exception!
      try {
        tUnmodifiableDoubleCharMap0.putAll((Map<? extends Double, ? extends Character>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      char[] charArray0 = new char[8];
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      String string0 = tUnmodifiableDoubleCharMap0.toString();
      assertEquals("{0.0=\u0000}", string0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.putIfAbsent(DC)C: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap((-260), (float) (-260), (double) (-260), 'M');
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleCharMap0.putIfAbsent((double) 'M', 'M');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(8);
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      boolean boolean0 = tUnmodifiableDoubleCharMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.getNoEntryKey()D: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      char[] charArray0 = new char[8];
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      double double0 = tUnmodifiableDoubleCharMap0.getNoEntryKey();
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.clear()V: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      char[] charArray0 = new char[18];
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleCharMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.adjustOrPutValue(DCC)C: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap();
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleCharMap0.adjustOrPutValue(0.0, '\u0000', '\u0000');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.get(D)C: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap((-165), (-165));
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      char char0 = tUnmodifiableDoubleCharMap0.get((double) (-165));
      assertEquals('\u0000', char0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.put(DC)C: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      char[] charArray0 = new char[8];
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleCharMap0.put((double) '\u001E', '\u001E');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.forEachEntry(Lgnu/trove/procedure/TDoubleCharProcedure;)Z: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(0);
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      boolean boolean0 = tUnmodifiableDoubleCharMap0.forEachEntry((TDoubleCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.putAll(Lgnu/trove/map/TDoubleCharMap;)V: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(8);
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleCharMap0.putAll((TDoubleCharMap) tDoubleCharHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.keys()[D: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      char[] charArray0 = new char[18];
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      double[] doubleArray1 = tUnmodifiableDoubleCharMap0.keys();
      assertNotSame(doubleArray1, doubleArray0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.forEachKey(Lgnu/trove/procedure/TDoubleProcedure;)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(8);
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      boolean boolean0 = tUnmodifiableDoubleCharMap0.forEachKey((TDoubleProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.adjustValue(DC)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      char[] charArray0 = new char[8];
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleCharMap0.adjustValue(0.0, '^');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.hashCode()I: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap();
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      int int0 = tUnmodifiableDoubleCharMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.getNoEntryValue()C: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap();
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      char char0 = tUnmodifiableDoubleCharMap0.getNoEntryValue();
      assertEquals('\u0000', char0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.containsValue(C)Z: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap();
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      boolean boolean0 = tUnmodifiableDoubleCharMap0.containsValue('\u0000');
      assertEquals(false, boolean0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.containsKey(D)Z: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(1613, (float) 1613, (double) 1613, 'H');
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      boolean boolean0 = tUnmodifiableDoubleCharMap0.containsKey((double) 'H');
      assertEquals(false, boolean0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.values()[C: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(0, 0);
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      char[] charArray0 = tUnmodifiableDoubleCharMap0.values();
      assertNotNull(charArray0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = null;
      try {
        tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.keySet()Lgnu/trove/set/TDoubleSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.keySet()Lgnu/trove/set/TDoubleSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(0, 0);
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet0 = (TUnmodifiableDoubleSet)tUnmodifiableDoubleCharMap0.keySet();
      assertNotNull(tUnmodifiableDoubleSet0);
      
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet1 = (TUnmodifiableDoubleSet)tUnmodifiableDoubleCharMap0.keySet();
      assertSame(tUnmodifiableDoubleSet1, tUnmodifiableDoubleSet0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.valueCollection()Lgnu/trove/TCharCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.valueCollection()Lgnu/trove/TCharCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(1613, (float) 1613, (double) 1613, 'H');
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      TUnmodifiableCharCollection tUnmodifiableCharCollection0 = (TUnmodifiableCharCollection)tUnmodifiableDoubleCharMap0.valueCollection();
      assertNotNull(tUnmodifiableCharCollection0);
      
      TUnmodifiableCharCollection tUnmodifiableCharCollection1 = (TUnmodifiableCharCollection)tUnmodifiableDoubleCharMap0.valueCollection();
      assertSame(tUnmodifiableCharCollection1, tUnmodifiableCharCollection0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleCharMap.<init>(Lgnu/trove/map/TDoubleCharMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test30()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      char[] charArray0 = new char[5];
      TDoubleCharHashMap tDoubleCharHashMap0 = new TDoubleCharHashMap(doubleArray0, charArray0);
      TUnmodifiableDoubleCharMap tUnmodifiableDoubleCharMap0 = new TUnmodifiableDoubleCharMap((TDoubleCharMap) tDoubleCharHashMap0);
      boolean boolean0 = tUnmodifiableDoubleCharMap0.equals((Object) "3");
      assertEquals(false, boolean0);
  }
}

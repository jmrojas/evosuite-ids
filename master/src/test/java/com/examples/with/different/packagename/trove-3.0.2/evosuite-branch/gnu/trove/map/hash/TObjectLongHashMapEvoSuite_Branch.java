/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TLongFunction;
import gnu.trove.impl.hash.TObjectHash;
import gnu.trove.map.TObjectLongMap;
import gnu.trove.map.custom_hash.TObjectLongCustomHashMap;
import gnu.trove.map.hash.TObjectLongHashMap;
import gnu.trove.procedure.TLongProcedure;
import gnu.trove.procedure.TObjectLongProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TObjectLongHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 15 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap$TObjectLongHashIterator.<init>(Lgnu/trove/map/hash/TObjectLongHashMap;Lgnu/trove/map/hash/TObjectLongHashMap;)V: root-Branch
   * 2 gnu.trove.map.hash.TObjectLongHashMap.iterator()Lgnu/trove/iterator/TObjectLongIterator;: root-Branch
   * 3 gnu.trove.map.hash.TObjectLongHashMap.<init>(IFJ)V: I25 Branch 8 IFEQ L124 - false
   * 4 gnu.trove.map.hash.TObjectLongHashMap.<init>(Lgnu/trove/map/TObjectLongMap;)V: I37 Branch 10 IFEQ L143 - false
   * 5 gnu.trove.map.hash.TObjectLongHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L576 - true
   * 6 gnu.trove.map.hash.TObjectLongHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 59 IF_ICMPEQ L580 - true
   * 7 gnu.trove.map.hash.TObjectLongHashMap.equals(Ljava/lang/Object;)Z: I34 Branch 60 IFEQ L585 - true
   * 8 gnu.trove.map.hash.TObjectLongHashMap$1.<init>(Lgnu/trove/map/hash/TObjectLongHashMap;)V: root-Branch
   * 9 gnu.trove.map.hash.TObjectLongHashMap.putAll(Lgnu/trove/map/TObjectLongMap;)V: root-Branch
   * 10 gnu.trove.map.hash.TObjectLongHashMap.setUp(I)I: root-Branch
   * 11 gnu.trove.map.hash.TObjectLongHashMap.getNoEntryValue()J: root-Branch
   * 12 gnu.trove.map.hash.TObjectLongHashMap.<init>(Lgnu/trove/map/TObjectLongMap;)V: I13 Branch 9 IFEQ L138 - false
   * 13 gnu.trove.map.hash.TObjectLongHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I18 Branch 47 IFLE L506 - true
   * 14 gnu.trove.map.hash.TObjectLongHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I18 Branch 47 IFLE L506 - false
   * 15 gnu.trove.map.hash.TObjectLongHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I25 Branch 48 IF_ACMPEQ L507 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TObjectLongHashMap<Integer> tObjectLongHashMap0 = new TObjectLongHashMap<Integer>((-1368), (-1368), (-1368));
      TObjectLongHashMap<Object> tObjectLongHashMap1 = new TObjectLongHashMap<Object>((TObjectLongMap<?>) tObjectLongHashMap0);
      boolean boolean0 = tObjectLongHashMap1.equals((Object) tObjectLongHashMap1);
      assertEquals(true, boolean0);
      assertEquals(3, tObjectLongHashMap1.capacity());
      assertEquals((-1368L), tObjectLongHashMap1.getNoEntryValue());
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap$KeyView.<init>(Lgnu/trove/map/hash/TObjectLongHashMap;)V: root-Branch
   * 2 gnu.trove.map.hash.TObjectLongHashMap.<init>(I)V: root-Branch
   * 3 gnu.trove.map.hash.TObjectLongHashMap.keySet()Ljava/util/Set;: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TObjectLongHashMap<Object> tObjectLongHashMap0 = new TObjectLongHashMap<Object>(1);
      Set<Object> set0 = tObjectLongHashMap0.keySet();
      assertEquals(true, set0.isEmpty());
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.increment(Ljava/lang/Object;)Z: root-Branch
   * 2 gnu.trove.map.hash.TObjectLongHashMap.adjustValue(Ljava/lang/Object;J)Z: I9 Branch 40 IFGE L427 - false
   * 3 gnu.trove.map.hash.TObjectLongHashMap.<init>()V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>();
      boolean boolean0 = tObjectLongHashMap0.increment((Long) 0L);
      assertEquals(23, tObjectLongHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>();
      TObjectLongHashMap<String> tObjectLongHashMap1 = new TObjectLongHashMap<String>(352);
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(tObjectLongHashMap0._set);
      boolean boolean0 = tObjectLongHashMap1.forEachKey((TObjectProcedure<? super String>) toObjectArrayProceedure0);
      assertEquals(23, tObjectLongHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.removeAt(I)V: root-Branch
   * 2 gnu.trove.map.hash.TObjectLongHashMap.remove(Ljava/lang/Object;)J: I14 Branch 23 IFLT L274 - false
   * 3 gnu.trove.map.hash.TObjectLongHashMap.put(Ljava/lang/Object;J)J: root-Branch
   * 4 gnu.trove.map.hash.TObjectLongHashMap.<init>(IF)V: root-Branch
   * 5 gnu.trove.map.hash.TObjectLongHashMap.doPut(JI)J: I12 Branch 21 IFGE L255 - true
   * 6 gnu.trove.map.hash.TObjectLongHashMap.doPut(JI)J: I41 Branch 22 IFEQ L263 - false
   */

  @Test
  public void test4()  throws Throwable  {
      TObjectLongHashMap<Object> tObjectLongHashMap0 = new TObjectLongHashMap<Object>(1946, 1946);
      tObjectLongHashMap0.put((Object) null, (long) 1946);
      assertEquals(1, tObjectLongHashMap0.size());
      
      long long0 = tObjectLongHashMap0.remove((Object) null);
      assertEquals(1946L, long0);
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.valueCollection()Lgnu/trove/TLongCollection;: root-Branch
   * 2 gnu.trove.map.hash.TObjectLongHashMap$TLongValueCollection.<init>(Lgnu/trove/map/hash/TObjectLongHashMap;)V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TObjectLongHashMap<String> tObjectLongHashMap0 = new TObjectLongHashMap<String>();
      tObjectLongHashMap0.valueCollection();
      assertEquals(23, tObjectLongHashMap0.capacity());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.containsKey(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TObjectLongHashMap<Integer> tObjectLongHashMap0 = new TObjectLongHashMap<Integer>((-1368), (-1368), (-1368));
      tObjectLongHashMap0.containsKey((Object) "\u4E2D\u56FD\u8A9E (\u4E2D\u83EF\u4EBA\u6C11\u5171\u548C\u56FD)");
      assertEquals((-1368L), tObjectLongHashMap0.getNoEntryValue());
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.clear()V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TObjectLongHashMap<Integer> tObjectLongHashMap0 = new TObjectLongHashMap<Integer>(1, 1);
      tObjectLongHashMap0.clear();
      assertEquals("{}", tObjectLongHashMap0.toString());
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.<init>(Lgnu/trove/map/TObjectLongMap;)V: I13 Branch 9 IFEQ L138 - true
   * 2 gnu.trove.map.hash.TObjectLongHashMap.<init>(IFJ)V: I25 Branch 8 IFEQ L124 - true
   */

  @Test
  public void test8()  throws Throwable  {
      TObjectLongCustomHashMap<String> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<String>();
      TObjectLongHashMap<String> tObjectLongHashMap0 = new TObjectLongHashMap<String>((TObjectLongMap<? extends String>) tObjectLongCustomHashMap0);
      assertEquals(0L, tObjectLongHashMap0.getNoEntryValue());
  }

  //Test case number: 9
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.rehash(I)V: I61 Branch 13 IF_ACMPEQ L186 - true
   * 2 gnu.trove.map.hash.TObjectLongHashMap.<init>(Lgnu/trove/map/TObjectLongMap;)V: I37 Branch 10 IFEQ L143 - false
   * 3 gnu.trove.map.hash.TObjectLongHashMap.rehash(I)V: I49 Branch 11 IFLE L185 - true
   * 4 gnu.trove.map.hash.TObjectLongHashMap.rehash(I)V: I49 Branch 11 IFLE L185 - false
   * 5 gnu.trove.map.hash.TObjectLongHashMap.rehash(I)V: I56 Branch 12 IF_ACMPEQ L186 - true
   * 6 gnu.trove.map.hash.TObjectLongHashMap.rehash(I)V: I56 Branch 12 IF_ACMPEQ L186 - false
   */

  @Test
  public void test9()  throws Throwable  {
      TObjectLongHashMap<Integer> tObjectLongHashMap0 = new TObjectLongHashMap<Integer>((-1368), (-1368), (-1368));
      TObjectLongHashMap<Object> tObjectLongHashMap1 = new TObjectLongHashMap<Object>((TObjectLongMap<?>) tObjectLongHashMap0);
      Object object0 = TObjectHash.REMOVED;
      long long0 = tObjectLongHashMap1.put(object0, (-1368L));
      assertEquals(1, tObjectLongHashMap1.size());
      assertEquals((-1368L), long0);
  }

  //Test case number: 10
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.containsValue(J)Z: I25 Branch 16 IF_ACMPEQ L219 - false
   * 2 gnu.trove.map.hash.TObjectLongHashMap.containsValue(J)Z: I30 Branch 17 IF_ACMPEQ L219 - false
   * 3 gnu.trove.map.hash.TObjectLongHashMap.containsValue(J)Z: I36 Branch 18 IFNE L219 - false
   * 4 gnu.trove.map.hash.TObjectLongHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J: I9 Branch 41 IFGE L443 - true
   * 5 gnu.trove.map.hash.TObjectLongHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J: I51 Branch 42 IFEQ L454 - false
   * 6 gnu.trove.map.hash.TObjectLongHashMap.rehash(I)V: I61 Branch 13 IF_ACMPEQ L186 - false
   * 7 gnu.trove.map.hash.TObjectLongHashMap.rehash(I)V: I77 Branch 14 IFGE L189 - true
   * 8 gnu.trove.map.hash.TObjectLongHashMap.containsValue(J)Z: I18 Branch 15 IFLE L218 - false
   * 9 gnu.trove.map.hash.TObjectLongHashMap.containsValue(J)Z: I25 Branch 16 IF_ACMPEQ L219 - true
   */

  @Test
  public void test10()  throws Throwable  {
      TObjectLongHashMap<Integer> tObjectLongHashMap0 = new TObjectLongHashMap<Integer>(0, 0, 0);
      tObjectLongHashMap0.adjustOrPutValue((Integer) 0, (long) 0, (long) 0);
      boolean boolean0 = tObjectLongHashMap0.containsValue((long) 0);
      assertEquals(false, tObjectLongHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 11
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.containsValue(J)Z: I36 Branch 18 IFNE L219 - true
   * 2 gnu.trove.map.hash.TObjectLongHashMap.containsValue(J)Z: I18 Branch 15 IFLE L218 - true
   * 3 gnu.trove.map.hash.TObjectLongHashMap.containsValue(J)Z: I18 Branch 15 IFLE L218 - false
   * 4 gnu.trove.map.hash.TObjectLongHashMap.containsValue(J)Z: I25 Branch 16 IF_ACMPEQ L219 - true
   * 5 gnu.trove.map.hash.TObjectLongHashMap.containsValue(J)Z: I25 Branch 16 IF_ACMPEQ L219 - false
   * 6 gnu.trove.map.hash.TObjectLongHashMap.containsValue(J)Z: I30 Branch 17 IF_ACMPEQ L219 - false
   */

  @Test
  public void test11()  throws Throwable  {
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>();
      Long long0 = new Long(2006L);
      tObjectLongHashMap0.put(long0, (long) long0);
      boolean boolean0 = tObjectLongHashMap0.containsValue((long) 352);
      assertEquals(1, tObjectLongHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.get(Ljava/lang/Object;)J: I9 Branch 19 IFGE L230 - false
   */

  @Test
  public void test12()  throws Throwable  {
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>((-2));
      long long0 = tObjectLongHashMap0.get((Object) "{}");
      assertEquals(3, tObjectLongHashMap0.capacity());
      assertEquals(0L, long0);
  }

  //Test case number: 13
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.putIfAbsent(Ljava/lang/Object;J)J: I9 Branch 20 IFGE L246 - false
   * 2 gnu.trove.map.hash.TObjectLongHashMap.putIfAbsent(Ljava/lang/Object;J)J: I9 Branch 20 IFGE L246 - true
   */

  @Test
  public void test13()  throws Throwable  {
      TObjectLongHashMap<Integer> tObjectLongHashMap0 = new TObjectLongHashMap<Integer>((-1361), (-1361), (-1361));
      tObjectLongHashMap0.putIfAbsent((Integer) (-1361), (long) (-1361));
      long long0 = tObjectLongHashMap0.putIfAbsent((Integer) (-1361), (long) (-1361));
      assertEquals(false, tObjectLongHashMap0.isEmpty());
      assertEquals((-1361L), long0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.remove(Ljava/lang/Object;)J: I14 Branch 23 IFLT L274 - true
   */

  @Test
  public void test14()  throws Throwable  {
      TObjectLongHashMap<Object> tObjectLongHashMap0 = new TObjectLongHashMap<Object>(1);
      long long0 = tObjectLongHashMap0.remove((Object) "\u4E2D\u56FD\u8A9E");
      assertEquals(0L, long0);
      assertEquals(0, tObjectLongHashMap0.size());
  }

  //Test case number: 15
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.putAll(Ljava/util/Map;)V: I13 Branch 24 IFEQ L300 - false
   * 2 gnu.trove.map.hash.TObjectLongHashMap.putAll(Ljava/util/Map;)V: I13 Branch 24 IFEQ L300 - true
   */

  @Test
  public void test15()  throws Throwable  {
      TObjectLongHashMap<Integer> tObjectLongHashMap0 = new TObjectLongHashMap<Integer>();
      HashMap<Integer, Long> hashMap0 = new HashMap<Integer, Long>();
      Long long0 = new Long(0L);
      hashMap0.put((Integer) null, long0);
      tObjectLongHashMap0.putAll((Map<? extends Integer, ? extends Long>) hashMap0);
      assertEquals(1, tObjectLongHashMap0.size());
      assertEquals(false, tObjectLongHashMap0.isEmpty());
  }

  //Test case number: 16
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L335 - false
   * 2 gnu.trove.map.hash.TObjectLongHashMap.keys()[Ljava/lang/Object;: I35 Branch 27 IF_ACMPEQ L335 - false
   * 3 gnu.trove.map.hash.TObjectLongHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L334 - true
   * 4 gnu.trove.map.hash.TObjectLongHashMap.keys()[Ljava/lang/Object;: I23 Branch 25 IFLE L334 - false
   * 5 gnu.trove.map.hash.TObjectLongHashMap.keys()[Ljava/lang/Object;: I30 Branch 26 IF_ACMPEQ L335 - true
   */

  @Test
  public void test16()  throws Throwable  {
      TObjectLongHashMap<Integer> tObjectLongHashMap0 = new TObjectLongHashMap<Integer>((-1361), (-1361), (-1361));
      tObjectLongHashMap0.putIfAbsent((Integer) (-1361), (long) (-1361));
      tObjectLongHashMap0.keys();
      assertEquals(7, tObjectLongHashMap0.capacity());
      assertEquals("{-1361=-1361}", tObjectLongHashMap0.toString());
  }

  //Test case number: 17
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L356 - false
   * 2 gnu.trove.map.hash.TObjectLongHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I49 Branch 31 IF_ACMPEQ L356 - false
   * 3 gnu.trove.map.hash.TObjectLongHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I10 Branch 28 IF_ICMPGE L347 - true
   * 4 gnu.trove.map.hash.TObjectLongHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L355 - true
   * 5 gnu.trove.map.hash.TObjectLongHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I37 Branch 29 IFLE L355 - false
   * 6 gnu.trove.map.hash.TObjectLongHashMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: I44 Branch 30 IF_ACMPEQ L356 - true
   */

  @Test
  public void test17()  throws Throwable  {
      TObjectLongHashMap<String> tObjectLongHashMap0 = new TObjectLongHashMap<String>();
      tObjectLongHashMap0.adjustOrPutValue("B6j1ZG5ecHV-vZPS;", 273L, 273L);
      String[] stringArray0 = new String[2];
      tObjectLongHashMap0.keys(stringArray0);
      assertEquals(1, tObjectLongHashMap0.size());
      assertEquals("{B6j1ZG5ecHV-vZPS;=273}", tObjectLongHashMap0.toString());
  }

  //Test case number: 18
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.values()[J: I34 Branch 33 IF_ACMPEQ L378 - false
   * 2 gnu.trove.map.hash.TObjectLongHashMap.values()[J: I39 Branch 34 IF_ACMPEQ L378 - false
   * 3 gnu.trove.map.hash.TObjectLongHashMap.values()[J: I27 Branch 32 IFLE L377 - true
   * 4 gnu.trove.map.hash.TObjectLongHashMap.values()[J: I27 Branch 32 IFLE L377 - false
   * 5 gnu.trove.map.hash.TObjectLongHashMap.values()[J: I34 Branch 33 IF_ACMPEQ L378 - true
   */

  @Test
  public void test18()  throws Throwable  {
      TObjectLongHashMap<Integer> tObjectLongHashMap0 = new TObjectLongHashMap<Integer>((-1361), (-1361), (-1361));
      tObjectLongHashMap0.putIfAbsent((Integer) (-1361), (long) (-1361));
      tObjectLongHashMap0.values();
      assertEquals("{-1361=-1361}", tObjectLongHashMap0.toString());
      assertEquals(1, tObjectLongHashMap0.size());
  }

  //Test case number: 19
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.values([J)[J: I10 Branch 35 IF_ICMPGE L389 - true
   * 2 gnu.trove.map.hash.TObjectLongHashMap.values([J)[J: I37 Branch 36 IFLE L396 - true
   * 3 gnu.trove.map.hash.TObjectLongHashMap.values([J)[J: I37 Branch 36 IFLE L396 - false
   * 4 gnu.trove.map.hash.TObjectLongHashMap.values([J)[J: I44 Branch 37 IF_ACMPEQ L397 - true
   * 5 gnu.trove.map.hash.TObjectLongHashMap.values([J)[J: I65 Branch 39 IF_ICMPLE L401 - false
   */

  @Test
  public void test19()  throws Throwable  {
      TObjectLongHashMap<String> tObjectLongHashMap0 = new TObjectLongHashMap<String>();
      long[] longArray0 = new long[12];
      long[] longArray1 = tObjectLongHashMap0.values(longArray0);
      assertEquals(23, tObjectLongHashMap0.capacity());
      assertSame(longArray0, longArray1);
      assertNotNull(longArray1);
  }

  //Test case number: 20
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.values([J)[J: I10 Branch 35 IF_ICMPGE L389 - false
   * 2 gnu.trove.map.hash.TObjectLongHashMap.values([J)[J: I44 Branch 37 IF_ACMPEQ L397 - false
   * 3 gnu.trove.map.hash.TObjectLongHashMap.values([J)[J: I49 Branch 38 IF_ACMPEQ L397 - false
   * 4 gnu.trove.map.hash.TObjectLongHashMap.values([J)[J: I65 Branch 39 IF_ICMPLE L401 - true
   * 5 gnu.trove.map.hash.TObjectLongHashMap.values()[J: I27 Branch 32 IFLE L377 - true
   * 6 gnu.trove.map.hash.TObjectLongHashMap.values()[J: I27 Branch 32 IFLE L377 - false
   * 7 gnu.trove.map.hash.TObjectLongHashMap.values()[J: I34 Branch 33 IF_ACMPEQ L378 - true
   * 8 gnu.trove.map.hash.TObjectLongHashMap.values([J)[J: I37 Branch 36 IFLE L396 - true
   * 9 gnu.trove.map.hash.TObjectLongHashMap.values([J)[J: I37 Branch 36 IFLE L396 - false
   * 10 gnu.trove.map.hash.TObjectLongHashMap.values([J)[J: I44 Branch 37 IF_ACMPEQ L397 - true
   */

  @Test
  public void test20()  throws Throwable  {
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>();
      long[] longArray0 = tObjectLongHashMap0.values();
      Long long0 = new Long(2006L);
      tObjectLongHashMap0.put(long0, (long) long0);
      tObjectLongHashMap0.values(longArray0);
      assertEquals(1, tObjectLongHashMap0.size());
      assertEquals("{2006=2006}", tObjectLongHashMap0.toString());
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.adjustValue(Ljava/lang/Object;J)Z: I9 Branch 40 IFGE L427 - true
   */

  @Test
  public void test21()  throws Throwable  {
      TObjectLongHashMap<String> tObjectLongHashMap0 = new TObjectLongHashMap<String>();
      tObjectLongHashMap0.adjustOrPutValue("B6j1ZG5ecHV-vZPS;", 273L, 273L);
      boolean boolean0 = tObjectLongHashMap0.adjustValue("B6j1ZG5ecHV-vZPS;", 273L);
      assertEquals(1, tObjectLongHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 22
  /*
   * 10 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J: I9 Branch 41 IFGE L443 - false
   * 2 gnu.trove.map.hash.TObjectLongHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J: I51 Branch 42 IFEQ L454 - true
   * 3 gnu.trove.map.hash.TObjectLongHashMap.<init>(IFJ)V: I25 Branch 8 IFEQ L124 - false
   * 4 gnu.trove.map.hash.TObjectLongHashMap.rehash(I)V: I49 Branch 11 IFLE L185 - true
   * 5 gnu.trove.map.hash.TObjectLongHashMap.rehash(I)V: I49 Branch 11 IFLE L185 - false
   * 6 gnu.trove.map.hash.TObjectLongHashMap.rehash(I)V: I56 Branch 12 IF_ACMPEQ L186 - true
   * 7 gnu.trove.map.hash.TObjectLongHashMap.rehash(I)V: I56 Branch 12 IF_ACMPEQ L186 - false
   * 8 gnu.trove.map.hash.TObjectLongHashMap.rehash(I)V: I61 Branch 13 IF_ACMPEQ L186 - false
   * 9 gnu.trove.map.hash.TObjectLongHashMap.rehash(I)V: I77 Branch 14 IFGE L189 - true
   * 10 gnu.trove.map.hash.TObjectLongHashMap.putIfAbsent(Ljava/lang/Object;J)J: I9 Branch 20 IFGE L246 - true
   */

  @Test
  public void test22()  throws Throwable  {
      TObjectLongHashMap<Integer> tObjectLongHashMap0 = new TObjectLongHashMap<Integer>((-1361), (-1361), (-1361));
      tObjectLongHashMap0.putIfAbsent((Integer) (-1361), (long) (-1361));
      long long0 = tObjectLongHashMap0.adjustOrPutValue((Integer) (-1361), (long) (-1361), (long) (-1361));
      assertEquals(false, tObjectLongHashMap0.isEmpty());
      assertEquals((-2722L), long0);
  }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 43 IFLE L484 - true
   * 2 gnu.trove.map.hash.TObjectLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 43 IFLE L484 - false
   * 3 gnu.trove.map.hash.TObjectLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 44 IF_ACMPEQ L485 - true
   */

  @Test
  public void test23()  throws Throwable  {
      TObjectLongHashMap<Object> tObjectLongHashMap0 = new TObjectLongHashMap<Object>();
      boolean boolean0 = tObjectLongHashMap0.forEachValue((TLongProcedure) null);
      assertEquals(23, tObjectLongHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 44 IF_ACMPEQ L485 - false
   * 2 gnu.trove.map.hash.TObjectLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I30 Branch 45 IF_ACMPEQ L485 - false
   * 3 gnu.trove.map.hash.TObjectLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I18 Branch 43 IFLE L484 - false
   * 4 gnu.trove.map.hash.TObjectLongHashMap.forEachValue(Lgnu/trove/procedure/TLongProcedure;)Z: I25 Branch 44 IF_ACMPEQ L485 - true
   */

  @Test
  public void test24()  throws Throwable  {
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>();
      Long long0 = new Long(2006L);
      tObjectLongHashMap0.put(long0, (long) long0);
      // Undeclared exception!
      try {
        tObjectLongHashMap0.forEachValue((TLongProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I27 Branch 51 IFLE L533 - true
   * 2 gnu.trove.map.hash.TObjectLongHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I27 Branch 51 IFLE L533 - false
   * 3 gnu.trove.map.hash.TObjectLongHashMap.retainEntries(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I34 Branch 52 IF_ACMPEQ L534 - true
   */

  @Test
  public void test25()  throws Throwable  {
      TObjectLongHashMap<Integer> tObjectLongHashMap0 = new TObjectLongHashMap<Integer>();
      boolean boolean0 = tObjectLongHashMap0.retainEntries((TObjectLongProcedure<? super Integer>) null);
      assertEquals(23, tObjectLongHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 26
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I18 Branch 55 IFLE L558 - false
   * 2 gnu.trove.map.hash.TObjectLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I24 Branch 56 IFNULL L559 - false
   * 3 gnu.trove.map.hash.TObjectLongHashMap.transformValues(Lgnu/trove/function/TLongFunction;)V: I29 Branch 57 IF_ACMPEQ L559 - false
   * 4 gnu.trove.map.hash.TObjectLongHashMap.<init>(I)V: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>((-2));
      // Undeclared exception!
      try {
        tObjectLongHashMap0.transformValues((TLongFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L576 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>();
      boolean boolean0 = tObjectLongHashMap0.equals((Object) "\u4E2D\u56FD\u8A9E (\u4E2D\u83EF\u4EBA\u6C11\u5171\u548C\u56FD)");
      assertEquals(23, tObjectLongHashMap0.capacity());
      assertEquals(false, boolean0);
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 59 IF_ICMPEQ L580 - false
   * 2 gnu.trove.map.hash.TObjectLongHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 58 IFNE L576 - true
   */

  @Test
  public void test28()  throws Throwable  {
      TObjectLongHashMap<String> tObjectLongHashMap0 = new TObjectLongHashMap<String>();
      tObjectLongHashMap0.adjustOrPutValue("", 1L, 1L);
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, 1, (float) 1);
      boolean boolean0 = tObjectLongHashMap0.equals((Object) tObjectLongCustomHashMap0);
      assertEquals(false, tObjectLongHashMap0.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 29
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L614 - false
   * 2 gnu.trove.map.hash.TObjectLongHashMap.hashCode()I: I34 Branch 67 IF_ACMPEQ L614 - false
   * 3 gnu.trove.map.hash.TObjectLongHashMap.hashCode()I: I45 Branch 68 IFNONNULL L615 - true
   * 4 gnu.trove.map.hash.TObjectLongHashMap.hashCode()I: I22 Branch 65 IFLE L613 - true
   * 5 gnu.trove.map.hash.TObjectLongHashMap.hashCode()I: I22 Branch 65 IFLE L613 - false
   * 6 gnu.trove.map.hash.TObjectLongHashMap.hashCode()I: I29 Branch 66 IF_ACMPEQ L614 - true
   */

  @Test
  public void test29()  throws Throwable  {
      TObjectLongHashMap<String> tObjectLongHashMap0 = new TObjectLongHashMap<String>();
      tObjectLongHashMap0.adjustOrPutValue("", 1L, 1L);
      int int0 = tObjectLongHashMap0.hashCode();
      assertEquals(1, tObjectLongHashMap0.size());
      assertEquals(1, int0);
  }

  //Test case number: 30
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I45 Branch 71 IF_ACMPEQ L1094 - false
   * 2 gnu.trove.map.hash.TObjectLongHashMap.<init>(IF)V: root-Branch
   * 3 gnu.trove.map.hash.TObjectLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I31 Branch 69 IFLE L1093 - true
   * 4 gnu.trove.map.hash.TObjectLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I31 Branch 69 IFLE L1093 - false
   * 5 gnu.trove.map.hash.TObjectLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I39 Branch 70 IF_ACMPEQ L1094 - false
   * 6 gnu.trove.map.hash.TObjectLongHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I45 Branch 71 IF_ACMPEQ L1094 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TObjectLongHashMap<Integer> tObjectLongHashMap0 = new TObjectLongHashMap<Integer>(1, 1);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      tObjectLongHashMap0.adjustOrPutValue((Integer) 1, (long) 1, (long) 1);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tObjectLongHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals("{1=1}", tObjectLongHashMap0.toString());
      assertEquals(1, tObjectLongHashMap0.size());
  }

  //Test case number: 31
  /*
   * 26 covered goals:
   * 1 gnu.trove.map.hash.TObjectLongHashMap$2.execute(Ljava/lang/Object;J)Z: I4 Branch 102 IFEQ L1134 - true
   * 2 gnu.trove.map.hash.TObjectLongHashMap$2.execute(Ljava/lang/Object;J)Z: I4 Branch 102 IFEQ L1134 - false
   * 3 gnu.trove.map.hash.TObjectLongHashMap$1.<init>(Lgnu/trove/map/hash/TObjectLongHashMap;)V: root-Branch
   * 4 gnu.trove.map.hash.TObjectLongHashMap$1.execute(Ljava/lang/Object;J)Z: root-Branch
   * 5 gnu.trove.map.hash.TObjectLongHashMap$2.<init>(Lgnu/trove/map/hash/TObjectLongHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 6 gnu.trove.map.hash.TObjectLongHashMap.putAll(Lgnu/trove/map/TObjectLongMap;)V: root-Branch
   * 7 gnu.trove.map.hash.TObjectLongHashMap.toString()Ljava/lang/String;: root-Branch
   * 8 gnu.trove.map.hash.TObjectLongHashMap.put(Ljava/lang/Object;J)J: root-Branch
   * 9 gnu.trove.map.hash.TObjectLongHashMap.setUp(I)I: root-Branch
   * 10 gnu.trove.map.hash.TObjectLongHashMap.<init>()V: root-Branch
   * 11 gnu.trove.map.hash.TObjectLongHashMap.getNoEntryValue()J: root-Branch
   * 12 gnu.trove.map.hash.TObjectLongHashMap.<init>(Lgnu/trove/map/TObjectLongMap;)V: I13 Branch 9 IFEQ L138 - false
   * 13 gnu.trove.map.hash.TObjectLongHashMap.<init>(Lgnu/trove/map/TObjectLongMap;)V: I37 Branch 10 IFEQ L143 - true
   * 14 gnu.trove.map.hash.TObjectLongHashMap.<init>(IFJ)V: I25 Branch 8 IFEQ L124 - true
   * 15 gnu.trove.map.hash.TObjectLongHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I18 Branch 47 IFLE L506 - true
   * 16 gnu.trove.map.hash.TObjectLongHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I18 Branch 47 IFLE L506 - false
   * 17 gnu.trove.map.hash.TObjectLongHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I25 Branch 48 IF_ACMPEQ L507 - true
   * 18 gnu.trove.map.hash.TObjectLongHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I25 Branch 48 IF_ACMPEQ L507 - false
   * 19 gnu.trove.map.hash.TObjectLongHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I30 Branch 49 IF_ACMPEQ L507 - false
   * 20 gnu.trove.map.hash.TObjectLongHashMap.forEachEntry(Lgnu/trove/procedure/TObjectLongProcedure;)Z: I39 Branch 50 IFNE L507 - true
   * 21 gnu.trove.map.hash.TObjectLongHashMap.doPut(JI)J: I12 Branch 21 IFGE L255 - true
   * 22 gnu.trove.map.hash.TObjectLongHashMap.doPut(JI)J: I12 Branch 21 IFGE L255 - false
   * 23 gnu.trove.map.hash.TObjectLongHashMap.doPut(JI)J: I41 Branch 22 IFEQ L263 - true
   * 24 gnu.trove.map.hash.TObjectLongHashMap.doPut(JI)J: I41 Branch 22 IFEQ L263 - false
   * 25 gnu.trove.map.hash.TObjectLongHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J: I9 Branch 41 IFGE L443 - true
   * 26 gnu.trove.map.hash.TObjectLongHashMap.adjustOrPutValue(Ljava/lang/Object;JJ)J: I51 Branch 42 IFEQ L454 - false
   */

  @Test
  public void test31()  throws Throwable  {
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>();
      Long long0 = new Long(2006L);
      tObjectLongHashMap0.put(long0, (long) long0);
      TObjectLongHashMap<Object> tObjectLongHashMap1 = new TObjectLongHashMap<Object>((TObjectLongMap<?>) tObjectLongHashMap0);
      tObjectLongHashMap0.adjustOrPutValue((Long) 42L, 42L, 42L);
      tObjectLongHashMap1.putAll((TObjectLongMap<?>) tObjectLongHashMap0);
      String string0 = tObjectLongHashMap1.toString();
      assertEquals(2, tObjectLongHashMap0.size());
      assertEquals("{42=42,2006=2006}", string0);
  }
}

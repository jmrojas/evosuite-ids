/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TCharFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatSet;
import gnu.trove.map.TFloatCharMap;
import gnu.trove.map.hash.TFloatCharHashMap;
import gnu.trove.procedure.TCharProcedure;
import gnu.trove.procedure.TFloatCharProcedure;
import gnu.trove.procedure.TFloatProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableFloatCharMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap$1.value()C: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap$1.advance()V: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap$1.hasNext()Z: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap$1.key()F: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableFloatCharMap;)V: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.iterator()Lgnu/trove/iterator/TFloatCharIterator;: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.size()I: root-Branch
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.<init>(Lgnu/trove/map/TFloatCharMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      float[] floatArray0 = new float[3];
      char[] charArray0 = new char[37];
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap(floatArray0, charArray0);
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      TFloatCharHashMap tFloatCharHashMap1 = new TFloatCharHashMap((TFloatCharMap) tUnmodifiableFloatCharMap0);
      assertEquals(1, tUnmodifiableFloatCharMap0.size());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.adjustValue(FC)Z: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      float[] floatArray0 = new float[3];
      char[] charArray0 = new char[37];
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap(floatArray0, charArray0);
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatCharMap0.adjustValue((float) 'y', 'y');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.keys([F)[F: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap((-1583), (float) (-1583), (float) (-1583), ';');
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      float[] floatArray0 = tUnmodifiableFloatCharMap0.keys(tFloatCharHashMap0._set);
      assertNotNull(floatArray0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.values([C)[C: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap((-1583), (float) (-1583), (float) (-1583), ';');
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      char[] charArray0 = new char[4];
      char[] charArray1 = tUnmodifiableFloatCharMap0.values(charArray0);
      assertSame(charArray1, charArray0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap();
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      HashMap<Float, Character> hashMap0 = new HashMap<Float, Character>();
      // Undeclared exception!
      try {
        tUnmodifiableFloatCharMap0.putAll((Map<? extends Float, ? extends Character>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.hashCode()I: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap((int) '[', 7.825019F);
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      int int0 = tUnmodifiableFloatCharMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.getNoEntryKey()F: root-Branch
   */

//   @Test
//   public void test6()  throws Throwable  {
//       TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap((-8));
//       TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
//       float float0 = tUnmodifiableFloatCharMap0.getNoEntryKey();
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.containsValue(C)Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap();
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      boolean boolean0 = tUnmodifiableFloatCharMap0.containsValue('\u008B');
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.keys()[F: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap((-99));
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      float[] floatArray0 = tUnmodifiableFloatCharMap0.keys();
      assertNotNull(floatArray0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.adjustOrPutValue(FCC)C: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      float[] floatArray0 = new float[1];
      char[] charArray0 = new char[2];
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap(floatArray0, charArray0);
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatCharMap0.adjustOrPutValue(719.4785F, '\u0000', 'P');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.transformValues(Lgnu/trove/function/TCharFunction;)V: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      float[] floatArray0 = new float[1];
      char[] charArray0 = new char[6];
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap(floatArray0, charArray0);
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatCharMap0.transformValues((TCharFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      float[] floatArray0 = new float[3];
      char[] charArray0 = new char[37];
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap(floatArray0, charArray0);
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      boolean boolean0 = tUnmodifiableFloatCharMap0.isEmpty();
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.putAll(Lgnu/trove/map/TFloatCharMap;)V: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap((int) '1');
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatCharMap0.putAll((TFloatCharMap) tFloatCharHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.putIfAbsent(FC)C: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap((-804), (float) (-804), (float) ']', ']');
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatCharMap0.putIfAbsent((float) ']', ']');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.remove(F)C: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap(279, 1470.9331F);
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatCharMap0.remove((float) 279);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.getNoEntryValue()C: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap();
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      char char0 = tUnmodifiableFloatCharMap0.getNoEntryValue();
      assertEquals('\u0000', char0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.increment(F)Z: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap((-8));
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatCharMap0.increment((float) (-8));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.containsKey(F)Z: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap((-1583), (float) (-1583), (float) (-1583), ';');
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      boolean boolean0 = tUnmodifiableFloatCharMap0.containsKey((float) '\u0000');
      assertEquals(false, boolean0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.forEachValue(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap(1141);
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      boolean boolean0 = tUnmodifiableFloatCharMap0.forEachValue((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.put(FC)C: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap((-1583), (float) (-1583), (float) (-1583), ';');
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatCharMap0.put((float) '\u0000', ';');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.clear()V: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap(1141);
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatCharMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap((-8));
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      boolean boolean0 = tUnmodifiableFloatCharMap0.forEachKey((TFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.forEachEntry(Lgnu/trove/procedure/TFloatCharProcedure;)Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap((-804), (float) (-804), (float) ']', ']');
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      boolean boolean0 = tUnmodifiableFloatCharMap0.forEachEntry((TFloatCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.retainEntries(Lgnu/trove/procedure/TFloatCharProcedure;)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap((-99));
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatCharMap0.retainEntries((TFloatCharProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.values()[C: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap((int) '[', 7.825019F);
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      char[] charArray0 = tUnmodifiableFloatCharMap0.values();
      assertNotNull(charArray0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap(1141);
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      String string0 = tUnmodifiableFloatCharMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.get(F)C: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap((-99));
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      char char0 = tUnmodifiableFloatCharMap0.get((float) (-99));
      assertEquals('\u0000', char0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.<init>(Lgnu/trove/map/TFloatCharMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = null;
      try {
        tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.keySet()Lgnu/trove/set/TFloatSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.keySet()Lgnu/trove/set/TFloatSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap(1141);
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      TUnmodifiableFloatSet tUnmodifiableFloatSet0 = (TUnmodifiableFloatSet)tUnmodifiableFloatCharMap0.keySet();
      assertNotNull(tUnmodifiableFloatSet0);
      
      TUnmodifiableFloatSet tUnmodifiableFloatSet1 = (TUnmodifiableFloatSet)tUnmodifiableFloatCharMap0.keySet();
      assertSame(tUnmodifiableFloatSet1, tUnmodifiableFloatSet0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.valueCollection()Lgnu/trove/TCharCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.valueCollection()Lgnu/trove/TCharCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap(1141);
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      TUnmodifiableCharCollection tUnmodifiableCharCollection0 = (TUnmodifiableCharCollection)tUnmodifiableFloatCharMap0.valueCollection();
      assertNotNull(tUnmodifiableCharCollection0);
      
      TUnmodifiableCharCollection tUnmodifiableCharCollection1 = (TUnmodifiableCharCollection)tUnmodifiableFloatCharMap0.valueCollection();
      assertSame(tUnmodifiableCharCollection1, tUnmodifiableCharCollection0);
  }

  //Test case number: 30
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatCharMap.<init>(Lgnu/trove/map/TFloatCharMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TFloatCharHashMap tFloatCharHashMap0 = new TFloatCharHashMap();
      TUnmodifiableFloatCharMap tUnmodifiableFloatCharMap0 = new TUnmodifiableFloatCharMap((TFloatCharMap) tFloatCharHashMap0);
      boolean boolean0 = tUnmodifiableFloatCharMap0.equals((Object) "96vif:dbid");
      assertEquals(false, boolean0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedFloatLongMap;
import gnu.trove.map.TFloatLongMap;
import gnu.trove.map.hash.TFloatLongHashMap;
import gnu.trove.procedure.TFloatLongProcedure;
import java.io.File;
import java.io.IOException;
import java.io.ObjectOutput;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.Locale;
import javax.swing.text.Segment;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedFloatLongMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = 1096;
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
      TFloatLongHashMap tFloatLongHashMap1 = new TFloatLongHashMap((TFloatLongMap) tFloatLongHashMap0);
      String string0 = "";
      String string1 = "";
      File file0 = new File(string1, string0);
      // Undeclared exception!
      try {
        File.createTempFile(string0, string0, file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      tSynchronizedFloatLongMap0.iterator();
      TFloatLongHashMap tFloatLongHashMap1 = new TFloatLongHashMap();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap1 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap1);
      tSynchronizedFloatLongMap1.getNoEntryKey();
      TFloatLongHashMap tFloatLongHashMap2 = new TFloatLongHashMap();
      float float0 = (-1308.7095F);
      tSynchronizedFloatLongMap1.increment(float0);
      float float1 = 0.0F;
      tFloatLongHashMap1.increment(float1);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap2 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap2);
      float float2 = 6.6360896E8F;
      tSynchronizedFloatLongMap2.containsKey(float2);
      TFloatLongHashMap tFloatLongHashMap3 = new TFloatLongHashMap();
      tSynchronizedFloatLongMap0.getNoEntryKey();
      tSynchronizedFloatLongMap2.remove(float2);
      long long0 = 1L;
      int int0 = (-563);
      tFloatLongHashMap0.tempDisableAutoCompaction();
      TFloatLongHashMap tFloatLongHashMap4 = new TFloatLongHashMap(int0);
      tFloatLongHashMap4.values();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap3 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap4);
      tSynchronizedFloatLongMap2.containsValue(long0);
      String string0 = "$8YxN!~XR";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 0: $8YxN!~XR:$8YxN!~XR#$8YxN!~XR
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      float[] floatArray0 = new float[5];
      float float0 = (-1446.8138F);
      floatArray0[0] = float0;
      float float1 = 0.0F;
      floatArray0[1] = float1;
      float float2 = 997.7491F;
      floatArray0[2] = float2;
      float float3 = (-79.27748F);
      floatArray0[3] = float3;
      float float4 = 0.0F;
      floatArray0[4] = float4;
      long[] longArray0 = new long[10];
      long long0 = 0L;
      longArray0[0] = long0;
      long long1 = 0L;
      longArray0[1] = long1;
      long long2 = 1L;
      longArray0[2] = long2;
      long long3 = (-1278L);
      longArray0[3] = long3;
      long long4 = 260L;
      longArray0[4] = long4;
      long long5 = 1177L;
      longArray0[5] = long5;
      long long6 = 1772L;
      longArray0[6] = long6;
      long long7 = 1232L;
      longArray0[7] = long7;
      long long8 = (-909L);
      longArray0[8] = long8;
      long long9 = 0L;
      longArray0[9] = long9;
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(floatArray0, longArray0);
      Locale locale0 = Locale.JAPANESE;
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      String string0 = locale0.getDisplayScript(locale1);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0, (Object) string0);
      int int0 = 93;
      TFloatLongHashMap tFloatLongHashMap1 = new TFloatLongHashMap(int0, int0, int0, int0);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap1 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap1);
      long long10 = 667L;
      long long11 = tSynchronizedFloatLongMap1.putIfAbsent((float) int0, long10);
      assertEquals("{93.0=667}", tFloatLongHashMap1.toString());
      assertEquals(93L, long11);
  }

  @Test
  public void test3()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      tFloatLongHashMap0.valueCollection();
      tSynchronizedFloatLongMap0.getNoEntryValue();
      TFloatLongHashMap tFloatLongHashMap1 = new TFloatLongHashMap();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap1 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap1);
      String string0 = "";
      // Undeclared exception!
      try {
        File.createTempFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 0;
      float float0 = 6.6360896E8F;
      float[] floatArray0 = new float[10];
      floatArray0[0] = (float) int0;
      floatArray0[1] = float0;
      floatArray0[2] = (float) int0;
      floatArray0[3] = float0;
      floatArray0[4] = float0;
      floatArray0[5] = (float) int0;
      float float1 = 1027.0575F;
      floatArray0[6] = float1;
      floatArray0[7] = (float) int0;
      floatArray0[8] = float0;
      floatArray0[9] = float0;
      long[] longArray0 = new long[8];
      longArray0[0] = (long) int0;
      longArray0[1] = (long) int0;
      longArray0[2] = (long) int0;
      longArray0[3] = (long) int0;
      longArray0[4] = (long) int0;
      longArray0[5] = (long) int0;
      longArray0[6] = (long) int0;
      longArray0[7] = (long) int0;
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(floatArray0, longArray0);
      String string0 = "zMc~&UqER^T5<bWLe/|";
      Locale locale0 = Locale.forLanguageTag(string0);
      String string1 = locale0.getDisplayName();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0, (Object) string1);
      tSynchronizedFloatLongMap0.toString();
      TFloatLongHashMap tFloatLongHashMap1 = new TFloatLongHashMap(int0, float0);
      tFloatLongHashMap1.tempDisableAutoCompaction();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap1 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap1);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap2 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap1);
      tSynchronizedFloatLongMap2.hashCode();
      tSynchronizedFloatLongMap2.getNoEntryValue();
      TFloatLongMap tFloatLongMap0 = null;
      Locale locale1 = Locale.KOREAN;
      String string2 = locale1.getDisplayCountry();
      String string3 = locale1.getCountry();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap3 = new TSynchronizedFloatLongMap(tFloatLongMap0, (Object) string3);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap4 = new TSynchronizedFloatLongMap(tFloatLongMap0, (Object) string2);
      // Undeclared exception!
      try {
        tSynchronizedFloatLongMap4.iterator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = 0;
      float float0 = (-1.0F);
      long long0 = 1485L;
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(int0, (float) int0, float0, long0);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      Float float1 = new Float((double) float0);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap1 = new TSynchronizedFloatLongMap((TFloatLongMap) tSynchronizedFloatLongMap0, (Object) float1);
      tSynchronizedFloatLongMap1.keySet();
      float float2 = (-1194.1185F);
      float float3 = 0.0F;
      TFloatLongHashMap tFloatLongHashMap1 = new TFloatLongHashMap(int0, float2, float3, (long) int0);
      String string0 = File.separator;
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap2 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap1, (Object) string0);
      Locale locale0 = Locale.JAPANESE;
      String string1 = locale0.getLanguage();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap3 = new TSynchronizedFloatLongMap((TFloatLongMap) tSynchronizedFloatLongMap2, (Object) string1);
      float[] floatArray0 = tSynchronizedFloatLongMap3.keys();
      assertNotNull(floatArray0);
  }

  @Test
  public void test6()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
      HashMap<Float, Float> hashMap0 = new HashMap<Float, Float>();
      String string0 = hashMap0.toString();
      String string1 = File.pathSeparator;
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0, (Object) string1);
      float float0 = 0.0F;
      tSynchronizedFloatLongMap0.containsKey(float0);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap1 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0, (Object) string0);
      TFloatLongHashMap tFloatLongHashMap1 = new TFloatLongHashMap((TFloatLongMap) tSynchronizedFloatLongMap1);
      float float1 = 417.41803F;
      long long0 = 0L;
      long long1 = tSynchronizedFloatLongMap1.put(float1, long0);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap2 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap1);
      tSynchronizedFloatLongMap1.containsKey((float) long0);
      float float2 = (-229.0127F);
      Float float3 = new Float(float2);
      float float4 = 1.0F;
      tFloatLongHashMap1.contains(float4);
      hashMap0.put(float3, float3);
      tSynchronizedFloatLongMap1.iterator();
      float float5 = 0.0F;
      tSynchronizedFloatLongMap2.adjustValue(float5, long1);
      assertEquals(false, tFloatLongHashMap0.isEmpty());
      assertEquals("{417.41803=0}", tFloatLongHashMap0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
      String string0 = "AEO";
      URI uRI0 = new URI(string0);
      URI uRI1 = uRI0.normalize();
      uRI1.getSchemeSpecificPart();
      char[] charArray0 = new char[10];
      char char0 = '^';
      charArray0[0] = char0;
      char char1 = 'E';
      charArray0[1] = char1;
      char char2 = ' ';
      charArray0[2] = char2;
      char char3 = '~';
      charArray0[3] = char3;
      char char4 = '3';
      charArray0[4] = char4;
      char char5 = 'V';
      charArray0[5] = char5;
      char char6 = '@';
      charArray0[6] = char6;
      char char7 = 'w';
      charArray0[7] = char7;
      char char8 = '\"';
      charArray0[8] = char8;
      char char9 = '_';
      charArray0[9] = char9;
      Segment segment0 = new Segment(charArray0, (int) charArray0[7], (int) charArray0[4]);
      // Undeclared exception!
      try {
        segment0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 170
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = (-1472);
      float float0 = 0.0F;
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(int0, (float) int0, float0, (long) int0);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      ObjectOutput objectOutput0 = null;
      // Undeclared exception!
      try {
        tFloatLongHashMap0.writeExternal(objectOutput0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TFloatLongMap tFloatLongMap0 = null;
      float[] floatArray0 = new float[9];
      float float0 = 0.0F;
      floatArray0[0] = float0;
      float float1 = 0.0F;
      floatArray0[1] = float1;
      float float2 = 665.09863F;
      floatArray0[2] = float2;
      float float3 = 0.0F;
      floatArray0[3] = float3;
      float float4 = 0.0F;
      floatArray0[4] = float4;
      float float5 = 0.0F;
      floatArray0[5] = float5;
      float float6 = 0.0F;
      floatArray0[6] = float6;
      float float7 = 1349.2491F;
      floatArray0[7] = float7;
      float float8 = 1828.438F;
      floatArray0[8] = float8;
      long[] longArray0 = new long[9];
      long long0 = (-1886L);
      longArray0[0] = long0;
      long long1 = 0L;
      longArray0[1] = long1;
      long long2 = (-1545L);
      longArray0[2] = long2;
      long long3 = 1L;
      longArray0[3] = long3;
      long long4 = 0L;
      longArray0[4] = long4;
      long long5 = (-1L);
      longArray0[5] = long5;
      long long6 = (-825L);
      longArray0[6] = long6;
      long long7 = 1882L;
      longArray0[7] = long7;
      long long8 = (-1923L);
      longArray0[8] = long8;
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(floatArray0, longArray0);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      float float9 = (-1.0F);
      tSynchronizedFloatLongMap0.remove(float9);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap1 = null;
      try {
        tSynchronizedFloatLongMap1 = new TSynchronizedFloatLongMap(tFloatLongMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      float[] floatArray0 = new float[2];
      float float0 = 0.0F;
      floatArray0[0] = float0;
      float float1 = 0.0F;
      floatArray0[1] = float1;
      long[] longArray0 = new long[10];
      long long0 = (-1L);
      longArray0[0] = long0;
      long long1 = (-317L);
      longArray0[1] = long1;
      long long2 = 0L;
      longArray0[2] = long2;
      long long3 = 1L;
      longArray0[3] = long3;
      long long4 = 1630L;
      longArray0[4] = long4;
      long long5 = (-1224L);
      longArray0[5] = long5;
      long long6 = 1157L;
      longArray0[6] = long6;
      long long7 = 988L;
      longArray0[7] = long7;
      long long8 = (-175L);
      longArray0[8] = long8;
      long long9 = (-1919L);
      longArray0[9] = long9;
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(floatArray0, longArray0);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      boolean boolean0 = tSynchronizedFloatLongMap0.isEmpty();
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      float[] floatArray0 = new float[1];
      float float0 = (-916.45905F);
      TFloatLongMap tFloatLongMap0 = null;
      String string0 = "";
      String string1 = "";
      // Undeclared exception!
      try {
        File.createTempFile(string0, string1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 1715;
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(int0, int0);
      Locale locale0 = Locale.CHINA;
      String string0 = locale0.getDisplayLanguage();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap1 = (TSynchronizedFloatLongMap)tSynchronizedFloatLongMap0.mutex;
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap2 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0, (Object) tSynchronizedFloatLongMap1);
      float float0 = tSynchronizedFloatLongMap2.getNoEntryKey();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap3 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0, (Object) string0);
      long long0 = 54L;
      long long1 = 1L;
      long long2 = tSynchronizedFloatLongMap3.adjustOrPutValue(float0, long0, long1);
      tSynchronizedFloatLongMap0.put((float) long2, long2);
      tSynchronizedFloatLongMap3.keySet();
      assertEquals("{1.0=1, 0.0=1}", tFloatLongHashMap0.toString());
      assertEquals("{1.0=1, 0.0=1}", tSynchronizedFloatLongMap3.toString());
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = 418;
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(int0);
      String string0 = "3>m..%@rAwrlz$9";
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0, (Object) string0);
      String string1 = tSynchronizedFloatLongMap0.toString();
      assertNotNull(string1);
      
      TFloatLongHashMap tFloatLongHashMap1 = new TFloatLongHashMap();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap1 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap1);
      long long0 = (-110L);
      tSynchronizedFloatLongMap1.containsValue(long0);
      tFloatLongHashMap1.values();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap2 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap1);
      TFloatLongProcedure tFloatLongProcedure0 = null;
      boolean boolean0 = tSynchronizedFloatLongMap2.isEmpty();
      tFloatLongHashMap0.size();
      boolean boolean1 = tSynchronizedFloatLongMap2.forEachEntry(tFloatLongProcedure0);
      assertTrue(boolean1 == boolean0);
      
      float float0 = (-586.4406F);
      long long1 = 0L;
      boolean boolean2 = tSynchronizedFloatLongMap2.adjustValue(float0, long1);
      assertFalse(boolean2 == boolean1);
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 0;
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(int0);
      Float float0 = new Float((double) int0);
      Object object0 = null;
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0, object0);
      // Undeclared exception!
      try {
        tSynchronizedFloatLongMap0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TFloatLongMap tFloatLongMap0 = null;
      String string0 = "j&NUik?y";
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = null;
      try {
        tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap(tFloatLongMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = (-1);
      int int1 = (-1);
      float float0 = 0.0F;
      int int2 = 462;
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(int2);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      long long0 = (-10L);
      long long1 = (-1L);
      tSynchronizedFloatLongMap0.adjustOrPutValue((float) int1, long0, long1);
      assertEquals(1, tFloatLongHashMap0.size());
      
      long long2 = 1L;
      TFloatLongHashMap tFloatLongHashMap1 = new TFloatLongHashMap(int1, float0, (float) int1, long2);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap1 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap1);
      tSynchronizedFloatLongMap1.getNoEntryKey();
      TFloatLongHashMap tFloatLongHashMap2 = new TFloatLongHashMap(int0);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap2 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap2);
      tSynchronizedFloatLongMap2.iterator();
      tSynchronizedFloatLongMap2.values();
      String string0 = File.separator;
      tSynchronizedFloatLongMap2.equals((Object) string0);
      tSynchronizedFloatLongMap2.toString();
      tSynchronizedFloatLongMap2.increment((float) int0);
      assertFalse(tFloatLongHashMap2.equals(tFloatLongHashMap0));
  }

  @Test
  public void test17()  throws Throwable  {
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap();
      Locale locale0 = Locale.JAPANESE;
      float[] floatArray0 = new float[3];
      float float0 = 0.0F;
      floatArray0[0] = float0;
      float float1 = 1159.712F;
      floatArray0[1] = float1;
      float float2 = 0.0F;
      floatArray0[2] = float2;
      tFloatLongHashMap0.keys(floatArray0);
      char char0 = ',';
      // Undeclared exception!
      try {
        locale0.getExtension(char0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Ill-formed extension key: ,
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      int int0 = (-32);
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(int0);
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) int0;
      floatArray0[1] = (float) int0;
      floatArray0[2] = (float) int0;
      floatArray0[3] = (float) int0;
      floatArray0[4] = (float) int0;
      floatArray0[5] = (float) int0;
      float float0 = (-623.99585F);
      floatArray0[6] = float0;
      floatArray0[7] = (float) int0;
      float float1 = 0.0F;
      floatArray0[8] = float1;
      tFloatLongHashMap0.keys(floatArray0);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      TFloatLongHashMap tFloatLongHashMap1 = new TFloatLongHashMap(int0);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap1 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap1);
      String string0 = tFloatLongHashMap0.toString();
      assertEquals("{}", string0);
  }

  @Test
  public void test19()  throws Throwable  {
      int int0 = (-784);
      float float0 = (-1242.3354F);
      TFloatLongHashMap tFloatLongHashMap0 = new TFloatLongHashMap(int0, float0);
      float float1 = 1170.8092F;
      String string0 = "b1";
      URI uRI0 = new URI(string0, string0, string0);
      String string1 = uRI0.getFragment();
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap0 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0, (Object) string1);
      long long0 = tSynchronizedFloatLongMap0.putIfAbsent(float0, (long) int0);
      tFloatLongHashMap0.increment(float1);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap1 = new TSynchronizedFloatLongMap((TFloatLongMap) tSynchronizedFloatLongMap0);
      TSynchronizedFloatLongMap tSynchronizedFloatLongMap2 = new TSynchronizedFloatLongMap((TFloatLongMap) tFloatLongHashMap0);
      tSynchronizedFloatLongMap2.adjustOrPutValue(float1, long0, long0);
      String string2 = "";
      // Undeclared exception!
      try {
        File.createTempFile(string2, string2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
      }
  }
}

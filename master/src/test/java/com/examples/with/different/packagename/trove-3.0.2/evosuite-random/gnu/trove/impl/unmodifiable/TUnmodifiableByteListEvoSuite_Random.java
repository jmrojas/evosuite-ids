/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedRandomAccessByteList;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteList;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessByteList;
import gnu.trove.list.TByteList;
import gnu.trove.list.array.TByteArrayList;
import gnu.trove.list.linked.TByteLinkedList;
import java.util.Stack;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableByteListEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList();
      int int0 = 0;
      TUnmodifiableRandomAccessByteList tUnmodifiableRandomAccessByteList0 = new TUnmodifiableRandomAccessByteList((TByteList) tByteArrayList0);
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)1;
      byteArray0[1] = byte1;
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessByteList0.removeAll(byteArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      byte byte0 = (byte) (-43);
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList(byte0);
      TUnmodifiableByteList tUnmodifiableByteList0 = new TUnmodifiableByteList((TByteList) tByteLinkedList0);
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-1);
      byteArray0[1] = byte1;
      byteArray0[2] = byte0;
      byteArray0[3] = byte0;
      byteArray0[4] = byte0;
      byteArray0[5] = byte0;
      byteArray0[6] = byte0;
      byteArray0[7] = byte0;
      byte byte2 = (byte) (-104);
      byteArray0[8] = byte2;
      byteArray0[9] = byte0;
      // Undeclared exception!
      try {
        tUnmodifiableByteList0.set((int) byte0, byteArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-66);
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-1);
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-31);
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-1);
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-85);
      byteArray0[5] = byte5;
      byte byte6 = (byte)101;
      byteArray0[6] = byte6;
      byte byte7 = (byte)0;
      byteArray0[7] = byte7;
      byte byte8 = (byte) (-1);
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, byte8);
      Object object0 = null;
      TSynchronizedRandomAccessByteList tSynchronizedRandomAccessByteList0 = new TSynchronizedRandomAccessByteList((TByteList) tByteArrayList0, object0);
      TUnmodifiableRandomAccessByteList tUnmodifiableRandomAccessByteList0 = new TUnmodifiableRandomAccessByteList((TByteList) tSynchronizedRandomAccessByteList0);
      int int0 = (-1);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessByteList0.subList((int) byteArray0[6], int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TByteList tByteList0 = null;
      TUnmodifiableByteList tUnmodifiableByteList0 = null;
      try {
        tUnmodifiableByteList0 = new TUnmodifiableByteList(tByteList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TByteList tByteList0 = null;
      Stack<Integer> stack0 = new Stack<Integer>();
      TUnmodifiableByteList tUnmodifiableByteList0 = null;
      try {
        tUnmodifiableByteList0 = new TUnmodifiableByteList(tByteList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)0;
      byte byte1 = (byte)98;
      TByteArrayList tByteArrayList0 = new TByteArrayList((int) byte0, byte1);
      TUnmodifiableByteList tUnmodifiableByteList0 = new TUnmodifiableByteList((TByteList) tByteArrayList0);
      int int0 = 851;
      // Undeclared exception!
      try {
        tUnmodifiableByteList0.set(int0, byteArray0, int0, (int) byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte) (-13);
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-1);
      byteArray0[1] = byte1;
      byte byte2 = (byte)85;
      byteArray0[2] = byte2;
      TByteList tByteList0 = null;
      TUnmodifiableRandomAccessByteList tUnmodifiableRandomAccessByteList0 = null;
      try {
        tUnmodifiableRandomAccessByteList0 = new TUnmodifiableRandomAccessByteList(tByteList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      TUnmodifiableByteList tUnmodifiableByteList0 = new TUnmodifiableByteList((TByteList) tByteLinkedList0);
      boolean boolean0 = tUnmodifiableByteList0.isEmpty();
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      TByteList tByteList0 = null;
      TUnmodifiableRandomAccessByteList tUnmodifiableRandomAccessByteList0 = null;
      try {
        tUnmodifiableRandomAccessByteList0 = new TUnmodifiableRandomAccessByteList(tByteList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte) (-72);
      byteArray0[0] = byte0;
      byte byte1 = (byte)4;
      byteArray0[1] = byte1;
      byte byte2 = (byte)1;
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      byte byte4 = (byte)24;
      byteArray0[4] = byte4;
      byte byte5 = (byte)106;
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-38);
      byteArray0[6] = byte6;
      byte byte7 = (byte)96;
      byteArray0[7] = byte7;
      TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
      int int0 = (-1);
      // Undeclared exception!
      try {
        tByteArrayList0.subList(int0, (int) byteArray0[7]);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-97);
      byteArray0[0] = byte0;
      byte byte1 = (byte)88;
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList(byte1);
      // Undeclared exception!
      try {
        tByteLinkedList0.subList((int) byte1, (int) byte0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // begin index 88 greater than end index -97
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte) (-87);
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte)127;
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-24);
      byteArray0[4] = byte4;
      byte byte5 = (byte)0;
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-88);
      byteArray0[6] = byte6;
      byte byte7 = (byte)16;
      byteArray0[7] = byte7;
      TByteArrayList tByteArrayList0 = new TByteArrayList(byteArray0);
      int int0 = 0;
      // Undeclared exception!
      try {
        tByteArrayList0.subList((int) byteArray0[2], int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // end index 0 greater than begin index 127
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)91;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      byte byte3 = (byte)84;
      byteArray0[3] = byte3;
      TByteArrayList tByteArrayList0 = TByteArrayList.wrap(byteArray0, byte0);
      TUnmodifiableByteList tUnmodifiableByteList0 = new TUnmodifiableByteList((TByteList) tByteArrayList0);
      int int0 = (-503);
      // Undeclared exception!
      try {
        tUnmodifiableByteList0.subList((int) byteArray0[1], int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // end index -503 greater than begin index 91
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TByteLinkedList tByteLinkedList0 = new TByteLinkedList();
      int int0 = (-1818);
      // Undeclared exception!
      try {
        tByteLinkedList0.subList(int0, int0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TByteArrayList tByteArrayList0 = new TByteArrayList();
      int int0 = (-1054);
      int int1 = (-754);
      // Undeclared exception!
      try {
        tByteArrayList0.subList(int0, int1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TByteList tByteList0 = null;
      String string0 = "end index < ";
      TUnmodifiableRandomAccessByteList tUnmodifiableRandomAccessByteList0 = null;
      try {
        tUnmodifiableRandomAccessByteList0 = new TUnmodifiableRandomAccessByteList(tByteList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      int int0 = (-1353);
      TByteArrayList tByteArrayList0 = null;
      try {
        tByteArrayList0 = new TByteArrayList(int0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection;
import gnu.trove.map.TByteFloatMap;
import gnu.trove.map.hash.TByteFloatHashMap;
import gnu.trove.procedure.TByteFloatProcedure;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TFloatProcedure;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableByteFloatMapEvoSuite_StrongMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 6 covered goals:
   * 1 Strong Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.isEmpty()Z:64 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.isEmpty()Z: root-Branch
   * 3 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.<init>(Lgnu/trove/map/TByteFloatMap;)V:58 - ReplaceComparisonOperator != null -> = null
   * 4 Strong Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.isEmpty()Z:64 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 5 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.<init>(Lgnu/trove/map/TByteFloatMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-1723));
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-112);
      byteArray0[0] = (byte) (-112);
      tUnmodifiableByteFloatMap0.isEmpty();
      byteArray0[0] = (byte)27;
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   */

  @Test
  public void test1()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-1), (-1));
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      boolean boolean0 = tUnmodifiableByteFloatMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 Strong Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.containsKey(B)Z:65 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.containsKey(B)Z: root-Branch
   * 3 Strong Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.containsKey(B)Z:65 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   */

  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((int) (byte)46, 1762.5615F);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      byteArray0[1] = (byte)0;
      tUnmodifiableByteFloatMap0.containsKey((byte)0);
      byteArray0[1] = (byte)50;
  }

  //Test case number: 3
  /*
   * 8 covered goals:
   * 1 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.containsKey(B)Z:65 - InsertUnaryOp IINC -1 key
   * 2 Strong Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.containsKey(B)Z:65 - InsertUnaryOp Negation of key
   * 3 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.containsKey(B)Z:65 - InsertUnaryOp IINC 1 key
   * 4 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.containsKey(B)Z:65 - DeleteStatement: containsKey(B)Z
   * 5 Strong Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.containsKey(B)Z:65 - InsertUnaryOp Negation of key
   * 6 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.containsKey(B)Z:65 - InsertUnaryOp IINC 1 key
   * 7 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.containsKey(B)Z:65 - DeleteStatement: containsKey(B)Z
   * 8 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.containsKey(B)Z:65 - InsertUnaryOp IINC -1 key
   */

  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)127;
      float[] floatArray0 = new float[10];
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(byteArray0, floatArray0);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      boolean boolean0 = tUnmodifiableByteFloatMap0.containsKey((byte)127);
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * 1 Strong Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.containsValue(F)Z:66 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 2 Strong Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.containsValue(F)Z:66 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.containsValue(F)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-1158), 0);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      float[] floatArray0 = new float[10];
      floatArray0[2] = (float) (-1158);
      tUnmodifiableByteFloatMap0.containsValue(0.0F);
      floatArray0[2] = (float) (byte)0;
  }

  //Test case number: 5
  /*
   * 4 covered goals:
   * 1 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.containsValue(F)Z:66 - DeleteStatement: containsValue(F)Z
   * 2 Strong Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.containsValue(F)Z:66 - InsertUnaryOp Negation of val
   * 3 Strong Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.containsValue(F)Z:66 - InsertUnaryOp Negation of val
   * 4 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.containsValue(F)Z:66 - DeleteStatement: containsValue(F)Z
   */

  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte) (-103);
      float[] floatArray0 = new float[6];
      floatArray0[3] = (float) (byte)50;
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(byteArray0, floatArray0);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      boolean boolean0 = tUnmodifiableByteFloatMap0.containsValue((float) (byte)50);
      assertEquals(true, boolean0);
  }

  //Test case number: 6
  /*
   * 9 covered goals:
   * 1 Strong Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.get(B)F:67 - InsertUnaryOp IINC -1 key
   * 2 Strong Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.get(B)F:67 - InsertUnaryOp IINC 1 key
   * 3 Strong Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.get(B)F:67 - InsertUnaryOp Negation of key
   * 4 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.get(B)F:67 - DeleteStatement: get(B)F
   * 5 Strong Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.get(B)F:67 - InsertUnaryOp IINC 1 key
   * 6 Strong Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.get(B)F:67 - InsertUnaryOp Negation of key
   * 7 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.get(B)F:67 - DeleteStatement: get(B)F
   * 8 Strong Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.get(B)F:67 - InsertUnaryOp IINC -1 key
   * 9 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.get(B)F: root-Branch
   */

//   @Test
//   public void test6()  throws Throwable  {
//       TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap();
//       tByteFloatHashMap0.putIfAbsent((byte)26, 1764.5231F);
//       TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
//       float float0 = tUnmodifiableByteFloatMap0.get((byte)26);
//       assertEquals(1764.5231F, float0, 0.01F);
//   }

  //Test case number: 7
  /*
   * 5 covered goals:
   * 1 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.keys()[B:83 - DeleteStatement: keys()[B
   * 2 Strong Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.keys()[B:83 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 3 Strong Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.keys()[B:83 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 4 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.keys()[B:83 - DeleteStatement: keys()[B
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.keys()[B: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-1), (-1));
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      byte[] byteArray0 = tUnmodifiableByteFloatMap0.keys();
      assertNotNull(byteArray0);
  }

  //Test case number: 8
  /*
   * 5 covered goals:
   * 1 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.keys([B)[B:84 - DeleteStatement: keys([B)[B
   * 2 Strong Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.keys([B)[B:84 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 3 Strong Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.keys([B)[B:84 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 4 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.keys([B)[B:84 - DeleteStatement: keys([B)[B
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.keys([B)[B: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-1), (-1));
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      byte[] byteArray0 = tUnmodifiableByteFloatMap0.keys(tByteFloatHashMap0._states);
      assertNotNull(byteArray0);
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.values()[F:91 - DeleteStatement: values()[F
   * 2 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.values()[F:91 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 3 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.values()[F:91 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 4 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.values()[F:91 - DeleteStatement: values()[F
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.values()[F: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-1), (-1));
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      float[] floatArray0 = tUnmodifiableByteFloatMap0.values();
      assertNotNull(floatArray0);
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.values([F)[F:92 - DeleteStatement: values([F)[F
   * 2 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.values([F)[F:92 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 3 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.values([F)[F:92 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 4 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.values([F)[F:92 - DeleteStatement: values([F)[F
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.values([F)[F: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-1), (-1));
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      float[] floatArray0 = tByteFloatHashMap0.values();
      float[] floatArray1 = tUnmodifiableByteFloatMap0.values(floatArray0);
      assertSame(floatArray0, floatArray1);
  }

  //Test case number: 11
  /*
   * 7 covered goals:
   * 1 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.equals(Ljava/lang/Object;)Z:94 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 2 Strong Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 3 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.equals(Ljava/lang/Object;)Z:94 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 4 Strong Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   * 5 Strong Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   */

  @Test
  public void test11()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-1), (-1));
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      float[] floatArray0 = new float[4];
      floatArray0[1] = (-1719.6204F);
      tUnmodifiableByteFloatMap0.equals((Object) "");
      floatArray0[1] = 0.0F;
  }

  //Test case number: 12
  /*
   * 4 covered goals:
   * 1 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 2 Strong Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 3 Strong Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   * 4 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   */

  @Test
  public void test12()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-1), (-1));
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap1 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      boolean boolean0 = tUnmodifiableByteFloatMap0.equals((Object) "");
      assertTrue(tUnmodifiableByteFloatMap0.equals(tUnmodifiableByteFloatMap1));
      assertEquals(false, boolean0);
  }

  //Test case number: 13
  /*
   * 3 covered goals:
   * 1 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.hashCode()I:95 - DeleteStatement: hashCode()I
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.hashCode()I: root-Branch
   * 3 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.hashCode()I:95 - DeleteStatement: hashCode()I
   */

  @Test
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[2] = (byte) (-72);
      float[] floatArray0 = new float[3];
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(byteArray0, floatArray0);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      int int0 = tUnmodifiableByteFloatMap0.hashCode();
      assertEquals((-72), int0);
  }

  //Test case number: 14
  /*
   * 2 covered goals:
   * 1 Strong Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.hashCode()I:95 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 2 Strong Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.hashCode()I:95 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   */

  @Test
  public void test14()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-1), (-1));
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      float[] floatArray0 = new float[4];
      floatArray0[1] = (-1719.6204F);
      tUnmodifiableByteFloatMap0.hashCode();
      floatArray0[1] = 0.0F;
  }

  //Test case number: 15
  /*
   * 5 covered goals:
   * 1 Strong Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 2 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 3 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 4 Strong Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-1), (-1));
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      String string0 = tUnmodifiableByteFloatMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 16
  /*
   * 3 covered goals:
   * 1 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.getNoEntryKey()B:97 - DeleteStatement: getNoEntryKey()B
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.getNoEntryKey()B: root-Branch
   * 3 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.getNoEntryKey()B:97 - DeleteStatement: getNoEntryKey()B
   */

//   @Test
//   public void test16()  throws Throwable  {
//       TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-1), (-1));
//       TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
//       tUnmodifiableByteFloatMap0.getNoEntryKey();
//       TByteFloatHashMap tByteFloatHashMap1 = new TByteFloatHashMap(0, (-1612.4552F), (byte) (-6), (float) (byte) (-6));
//       TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap1 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap1);
//       assertEquals(-6, tUnmodifiableByteFloatMap1.getNoEntryKey());
//   }

  //Test case number: 17
  /*
   * 2 covered goals:
   * 1 Strong Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.getNoEntryKey()B:97 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 2 Strong Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.getNoEntryKey()B:97 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   */

  @Test
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((int) (byte)0, 1902.8271F);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      byteArray0[1] = (byte)64;
      tUnmodifiableByteFloatMap0.getNoEntryKey();
      byteArray0[1] = (byte)0;
  }

  //Test case number: 18
  /*
   * 3 covered goals:
   * 1 Strong Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.getNoEntryValue()F:98 - DeleteStatement: getNoEntryValue()F
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.getNoEntryValue()F: root-Branch
   * 3 Strong Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.getNoEntryValue()F:98 - DeleteStatement: getNoEntryValue()F
   */

//   @Test
//   public void test18()  throws Throwable  {
//       TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-1), (-1));
//       TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
//       tUnmodifiableByteFloatMap0.getNoEntryValue();
//       TByteFloatHashMap tByteFloatHashMap1 = new TByteFloatHashMap(0, (-1612.4552F), (byte) (-6), (float) (byte) (-6));
//       TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap1 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap1);
//       assertEquals((-6.0F), tUnmodifiableByteFloatMap1.getNoEntryValue(), 0.01F);
//   }

  //Test case number: 19
  /*
   * 4 covered goals:
   * 1 Strong Mutation 60: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z:101 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 2 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z
   * 3 Strong Mutation 60: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z:101 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.forEachKey(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(931);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) (byte)59;
      tUnmodifiableByteFloatMap0.forEachKey((TByteProcedure) null);
      floatArray0[0] = (float) 931;
  }

  //Test case number: 20
  /*
   * 3 covered goals:
   * 1 Strong Mutation 63: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   * 3 Strong Mutation 63: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z
   */

  @Test
  public void test20()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(931);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      boolean boolean0 = tUnmodifiableByteFloatMap0.forEachValue((TFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 3 covered goals:
   * 1 Strong Mutation 65: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.forEachEntry(Lgnu/trove/procedure/TByteFloatProcedure;)Z:107 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TByteFloatProcedure;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.forEachEntry(Lgnu/trove/procedure/TByteFloatProcedure;)Z: root-Branch
   * 3 Strong Mutation 65: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.forEachEntry(Lgnu/trove/procedure/TByteFloatProcedure;)Z:107 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TByteFloatProcedure;)Z
   */

  @Test
  public void test21()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap((-1), (-1));
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      boolean boolean0 = tUnmodifiableByteFloatMap0.forEachEntry((TByteFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 22
  /*
   * 16 covered goals:
   * 1 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap$1.key()B:114 - DeleteStatement: key()B
   * 2 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap$1.key()B:114 - DeleteField: iterLgnu/trove/iterator/TByteFloatIterator;
   * 3 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap$1.key()B:114 - DeleteStatement: key()B
   * 4 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap$1.value()F:115 - DeleteField: iterLgnu/trove/iterator/TByteFloatIterator;
   * 5 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TByteFloatIterator;
   * 6 Strong Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap$1.advance()V:116 - DeleteStatement: advance()V
   * 7 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TByteFloatIterator;
   * 8 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.size()I:63 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 9 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.size()I:63 - DeleteStatement: size()I
   * 10 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.size()I: root-Branch
   * 11 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.iterator()Lgnu/trove/iterator/TByteFloatIterator;: root-Branch
   * 12 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap$1.hasNext()Z: root-Branch
   * 13 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap$1.key()B: root-Branch
   * 14 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap$1.value()F: root-Branch
   * 15 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap$1.advance()V: root-Branch
   * 16 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableByteFloatMap;)V: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      float[] floatArray0 = new float[10];
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(byteArray0, floatArray0);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      TByteFloatHashMap tByteFloatHashMap1 = new TByteFloatHashMap((TByteFloatMap) tUnmodifiableByteFloatMap0);
      assertEquals(1, tUnmodifiableByteFloatMap0.size());
      assertEquals("{1=0.0}", tByteFloatHashMap1.toString());
  }

  //Test case number: 23
  /*
   * 2 covered goals:
   * 1 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap$1.value()F:115 - DeleteStatement: value()F
   * 2 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap$1.value()F:115 - DeleteStatement: value()F
   */

  @Test
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      float[] floatArray0 = new float[10];
      floatArray0[0] = (float) (byte)1;
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(byteArray0, floatArray0);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      TByteFloatHashMap tByteFloatHashMap1 = new TByteFloatHashMap((TByteFloatMap) tUnmodifiableByteFloatMap0);
      assertEquals("{0=1.0}", tByteFloatHashMap1.toString());
      assertEquals(1, tUnmodifiableByteFloatMap0.size());
  }

  //Test case number: 24
  /*
   * 8 covered goals:
   * 1 Strong Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 2 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap$1.key()B:114 - DeleteField: iterLgnu/trove/iterator/TByteFloatIterator;
   * 3 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap$1.value()F:115 - DeleteField: iterLgnu/trove/iterator/TByteFloatIterator;
   * 4 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TByteFloatIterator;
   * 5 Strong Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap$1.advance()V:116 - DeleteStatement: advance()V
   * 6 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TByteFloatIterator;
   * 7 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.size()I:63 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 8 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.size()I:63 - DeleteStatement: size()I
   */

  @Test
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      float[] floatArray0 = new float[10];
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(byteArray0, floatArray0);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      TByteFloatHashMap tByteFloatHashMap1 = new TByteFloatHashMap((TByteFloatMap) tUnmodifiableByteFloatMap0);
      assertEquals(1, tByteFloatHashMap1.size());
      assertEquals(1, tUnmodifiableByteFloatMap0.size());
  }

  //Test case number: 25
  /*
   * 12 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.keySet()Lgnu/trove/set/TByteSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.keySet()Lgnu/trove/set/TByteSet;:79 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.keySet()Lgnu/trove/set/TByteSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TByteSet;
   * 4 Strong Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.keySet()Lgnu/trove/set/TByteSet;:80 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 5 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.keySet()Lgnu/trove/set/TByteSet;:81 - DeleteField: keySetLgnu/trove/set/TByteSet;
   * 6 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.keySet()Lgnu/trove/set/TByteSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TByteSet;)Lgnu/trove/set/TByteSet;
   * 7 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.keySet()Lgnu/trove/set/TByteSet;:79 - ReplaceComparisonOperator != null -> = null
   * 8 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.keySet()Lgnu/trove/set/TByteSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TByteSet;
   * 9 Strong Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.keySet()Lgnu/trove/set/TByteSet;:80 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 10 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.keySet()Lgnu/trove/set/TByteSet;:81 - DeleteField: keySetLgnu/trove/set/TByteSet;
   * 11 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.keySet()Lgnu/trove/set/TByteSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TByteSet;)Lgnu/trove/set/TByteSet;
   * 12 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.keySet()Lgnu/trove/set/TByteSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test25()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(931);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      TUnmodifiableByteSet tUnmodifiableByteSet0 = (TUnmodifiableByteSet)tUnmodifiableByteFloatMap0.keySet();
      assertNotNull(tUnmodifiableByteSet0);
      
      TUnmodifiableByteSet tUnmodifiableByteSet1 = (TUnmodifiableByteSet)tUnmodifiableByteFloatMap0.keySet();
      assertSame(tUnmodifiableByteSet1, tUnmodifiableByteSet0);
  }

  //Test case number: 26
  /*
   * 12 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 Strong Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:88 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 3 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TFloatCollection;
   * 4 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 5 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TFloatCollection;)Lgnu/trove/TFloatCollection;
   * 6 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:89 - DeleteField: valuesLgnu/trove/TFloatCollection;
   * 7 Strong Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:88 - DeleteField: mLgnu/trove/map/TByteFloatMap;
   * 8 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TFloatCollection;
   * 9 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 10 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TFloatCollection;)Lgnu/trove/TFloatCollection;
   * 11 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;:89 - DeleteField: valuesLgnu/trove/TFloatCollection;
   * 12 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test26()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap();
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = (TUnmodifiableFloatCollection)tUnmodifiableByteFloatMap0.valueCollection();
      assertNotNull(tUnmodifiableFloatCollection0);
      
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection1 = (TUnmodifiableFloatCollection)tUnmodifiableByteFloatMap0.valueCollection();
      assertSame(tUnmodifiableFloatCollection1, tUnmodifiableFloatCollection0);
  }

  //Test case number: 27
  /*
   * 7 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - false
   * 2 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.<init>(Lgnu/trove/map/TByteFloatMap;)V:58 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 1 -> 0
   * 4 Strong Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 5 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 6 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 1 -> 0
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableByteFloatMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - true
   */

  @Test
  public void test27()  throws Throwable  {
      TByteFloatHashMap tByteFloatHashMap0 = new TByteFloatHashMap(931, 931);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap0 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      TUnmodifiableByteFloatMap tUnmodifiableByteFloatMap1 = new TUnmodifiableByteFloatMap((TByteFloatMap) tByteFloatHashMap0);
      boolean boolean0 = tUnmodifiableByteFloatMap0.equals((Object) tUnmodifiableByteFloatMap1);
      assertEquals(true, boolean0);
  }
}

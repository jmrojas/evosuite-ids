/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TShortFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection;
import gnu.trove.iterator.TObjectShortIterator;
import gnu.trove.map.TObjectShortMap;
import gnu.trove.map.custom_hash.TObjectShortCustomHashMap;
import gnu.trove.map.hash.TObjectShortHashMap;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.TObjectShortProcedure;
import gnu.trove.procedure.TShortProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableObjectShortMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 5 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.isEmpty()Z: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.getNoEntryValue()S: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.size()I: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.<init>(Lgnu/trove/map/TObjectShortMap;)V: I17 Branch 1 IFNONNULL L53 - true
   */

  @Test
  public void test0()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>(975, 975);
      TUnmodifiableObjectShortMap<Short> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Short>((TObjectShortMap<Short>) tObjectShortHashMap0);
      TObjectShortCustomHashMap<Object> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectShortMap<?>) tUnmodifiableObjectShortMap0);
      TUnmodifiableObjectShortMap<Object> tUnmodifiableObjectShortMap1 = new TUnmodifiableObjectShortMap<Object>((TObjectShortMap<Object>) tObjectShortCustomHashMap0);
      boolean boolean0 = tUnmodifiableObjectShortMap1.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.putIfAbsent(Ljava/lang/Object;S)S: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TObjectShortHashMap<Integer> tObjectShortHashMap0 = new TObjectShortHashMap<Integer>();
      TUnmodifiableObjectShortMap<Integer> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Integer>((TObjectShortMap<Integer>) tObjectShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectShortMap0.putIfAbsent((Integer) (-1880), (short)1793);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TObjectShortHashMap<Integer> tObjectShortHashMap0 = new TObjectShortHashMap<Integer>();
      TUnmodifiableObjectShortMap<Integer> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Integer>((TObjectShortMap<Integer>) tObjectShortHashMap0);
      String string0 = tUnmodifiableObjectShortMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.transformValues(Lgnu/trove/function/TShortFunction;)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>((int) (short)233, (-1069.3438F));
      TUnmodifiableObjectShortMap<Short> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Short>((TObjectShortMap<Short>) tObjectShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectShortMap0.transformValues((TShortFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectShortCustomHashMap<Short> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Short>((HashingStrategy<? super Short>) identityHashingStrategy0, 1134, (float) 1134);
      TUnmodifiableObjectShortMap<Short> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Short>((TObjectShortMap<Short>) tObjectShortCustomHashMap0);
      boolean boolean0 = tUnmodifiableObjectShortMap0.forEachValue((TShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keys()[Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TObjectShortHashMap<String> tObjectShortHashMap0 = new TObjectShortHashMap<String>(887);
      TUnmodifiableObjectShortMap<String> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<String>((TObjectShortMap<String>) tObjectShortHashMap0);
      Object[] objectArray0 = tUnmodifiableObjectShortMap0.keys();
      assertNotNull(objectArray0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.containsKey(Ljava/lang/Object;)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectShortCustomHashMap<Object> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 887, (float) 887);
      TUnmodifiableObjectShortMap<Object> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Object>((TObjectShortMap<Object>) tObjectShortCustomHashMap0);
      boolean boolean0 = tUnmodifiableObjectShortMap0.containsKey((Object) "{}");
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.containsValue(S)Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectShortCustomHashMap<Object> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 887, (float) 887);
      TUnmodifiableObjectShortMap<Object> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Object>((TObjectShortMap<Object>) tObjectShortCustomHashMap0);
      Short[] shortArray0 = new Short[11];
      shortArray0[0] = (Short) (short)0;
      boolean boolean0 = tUnmodifiableObjectShortMap0.containsValue((short) shortArray0[0]);
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.iterator()Lgnu/trove/iterator/TObjectShortIterator;: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableObjectShortMap;)V: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TObjectShortHashMap<Integer> tObjectShortHashMap0 = new TObjectShortHashMap<Integer>();
      TUnmodifiableObjectShortMap<Integer> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Integer>((TObjectShortMap<Integer>) tObjectShortHashMap0);
      TObjectShortIterator<Integer> tObjectShortIterator0 = tUnmodifiableObjectShortMap0.iterator();
      assertEquals(false, tObjectShortIterator0.hasNext());
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.adjustOrPutValue(Ljava/lang/Object;SS)S: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TObjectShortHashMap<Object> tObjectShortHashMap0 = new TObjectShortHashMap<Object>();
      TUnmodifiableObjectShortMap<Object> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Object>((TObjectShortMap<Object>) tObjectShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectShortMap0.adjustOrPutValue((Object) tUnmodifiableObjectShortMap0, (short)3, (short)3);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.put(Ljava/lang/Object;S)S: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TObjectShortHashMap<String> tObjectShortHashMap0 = new TObjectShortHashMap<String>(1);
      TUnmodifiableObjectShortMap<String> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<String>((TObjectShortMap<String>) tObjectShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectShortMap0.put("*q(eA~\"$\"8<.e;A", (short)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.adjustValue(Ljava/lang/Object;S)Z: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectShortCustomHashMap<Object> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (-1725), (float) (-1725));
      TUnmodifiableObjectShortMap<Object> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Object>((TObjectShortMap<Object>) tObjectShortCustomHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectShortMap0.adjustValue((Object) "it-IT", (short)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      IdentityHashingStrategy<Short> identityHashingStrategy0 = new IdentityHashingStrategy<Short>();
      TObjectShortCustomHashMap<Short> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Short>((HashingStrategy<? super Short>) identityHashingStrategy0, 887, (float) 887, (short)0);
      TUnmodifiableObjectShortMap<Short> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Short>((TObjectShortMap<Short>) tObjectShortCustomHashMap0);
      Short[] shortArray0 = new Short[11];
      Short[] shortArray1 = tUnmodifiableObjectShortMap0.keys(shortArray0);
      assertSame(shortArray0, shortArray1);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.putAll(Lgnu/trove/map/TObjectShortMap;)V: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TObjectShortHashMap<Integer> tObjectShortHashMap0 = new TObjectShortHashMap<Integer>();
      TUnmodifiableObjectShortMap<Integer> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Integer>((TObjectShortMap<Integer>) tObjectShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectShortMap0.putAll((TObjectShortMap<? extends Integer>) tUnmodifiableObjectShortMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>(443, (float) 443, (short)0);
      TUnmodifiableObjectShortMap<Short> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Short>((TObjectShortMap<Short>) tObjectShortHashMap0);
      Short[] shortArray0 = new Short[12];
      ToObjectArrayProceedure<Short> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Short>(shortArray0);
      boolean boolean0 = tUnmodifiableObjectShortMap0.forEachKey((TObjectProcedure<? super Short>) toObjectArrayProceedure0);
      assertEquals(true, boolean0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.retainEntries(Lgnu/trove/procedure/TObjectShortProcedure;)Z: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TObjectShortHashMap<Integer> tObjectShortHashMap0 = new TObjectShortHashMap<Integer>();
      TUnmodifiableObjectShortMap<Integer> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Integer>((TObjectShortMap<Integer>) tObjectShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectShortMap0.retainEntries((TObjectShortProcedure<? super Integer>) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.get(Ljava/lang/Object;)S: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>(443, (float) 443, (short)0);
      TUnmodifiableObjectShortMap<Short> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Short>((TObjectShortMap<Short>) tObjectShortHashMap0);
      short short0 = tUnmodifiableObjectShortMap0.get((Object) null);
      assertEquals((short)0, short0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.values()[S: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>(975, 975);
      TUnmodifiableObjectShortMap<Short> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Short>((TObjectShortMap<Short>) tObjectShortHashMap0);
      short[] shortArray0 = tUnmodifiableObjectShortMap0.values();
      assertNotNull(shortArray0);
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.clear()V: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectShortCustomHashMap<Object> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (int) 'u', (float) 'u', (short)0);
      TUnmodifiableObjectShortMap<Object> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Object>((TObjectShortMap<Object>) tObjectShortCustomHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectShortMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.values([S)[S: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectShortCustomHashMap<Short> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Short>((HashingStrategy<? super Short>) identityHashingStrategy0, 1134, (float) 1134);
      TObjectShortCustomHashMap<Object> tObjectShortCustomHashMap1 = new TObjectShortCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectShortMap<?>) tObjectShortCustomHashMap0);
      TUnmodifiableObjectShortMap<Object> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Object>((TObjectShortMap<Object>) tObjectShortCustomHashMap1);
      short[] shortArray0 = new short[5];
      short[] shortArray1 = tUnmodifiableObjectShortMap0.values(shortArray0);
      assertSame(shortArray0, shortArray1);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.hashCode()I: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectShortCustomHashMap<Short> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Short>((HashingStrategy<? super Short>) identityHashingStrategy0, 1134, (float) 1134);
      TObjectShortCustomHashMap<Object> tObjectShortCustomHashMap1 = new TObjectShortCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectShortMap<?>) tObjectShortCustomHashMap0);
      TUnmodifiableObjectShortMap<Object> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Object>((TObjectShortMap<Object>) tObjectShortCustomHashMap1);
      int int0 = tUnmodifiableObjectShortMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TObjectShortHashMap<Object> tObjectShortHashMap0 = new TObjectShortHashMap<Object>((int) 'J');
      TUnmodifiableObjectShortMap<Object> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Object>((TObjectShortMap<Object>) tObjectShortHashMap0);
      HashMap<Short, Short> hashMap0 = new HashMap<Short, Short>();
      // Undeclared exception!
      try {
        tUnmodifiableObjectShortMap0.putAll((Map<?, ? extends Short>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.remove(Ljava/lang/Object;)S: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>((int) (short) (-18), (float) (short) (-18), (short) (-18));
      TUnmodifiableObjectShortMap<Short> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Short>((TObjectShortMap<Short>) tObjectShortHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectShortMap0.remove((Object) "");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.increment(Ljava/lang/Object;)Z: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.getNoEntryValue()S: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>(975, 975);
      TUnmodifiableObjectShortMap<Short> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Short>((TObjectShortMap<Short>) tObjectShortHashMap0);
      TObjectShortCustomHashMap<Object> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectShortMap<?>) tUnmodifiableObjectShortMap0);
      TUnmodifiableObjectShortMap<Object> tUnmodifiableObjectShortMap1 = new TUnmodifiableObjectShortMap<Object>((TObjectShortMap<Object>) tObjectShortCustomHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableObjectShortMap1.increment((Object) "8|!*WxSAr");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.<init>(Lgnu/trove/map/TObjectShortMap;)V: I17 Branch 1 IFNONNULL L53 - false
   */

  @Test
  public void test24()  throws Throwable  {
      TUnmodifiableObjectShortMap<Short> tUnmodifiableObjectShortMap0 = null;
      try {
        tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Short>((TObjectShortMap<Short>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keySet()Ljava/util/Set;: I4 Branch 2 IFNONNULL L74 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keySet()Ljava/util/Set;: I4 Branch 2 IFNONNULL L74 - false
   */

  @Test
  public void test25()  throws Throwable  {
      TObjectShortHashMap<Integer> tObjectShortHashMap0 = new TObjectShortHashMap<Integer>(17);
      TUnmodifiableObjectShortMap<Integer> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Integer>((TObjectShortMap<Integer>) tObjectShortHashMap0);
      Set<Integer> set0 = tUnmodifiableObjectShortMap0.keySet();
      assertNotNull(set0);
      
      Set<Integer> set1 = tUnmodifiableObjectShortMap0.keySet();
      assertSame(set1, set0);
  }

  //Test case number: 26
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.valueCollection()Lgnu/trove/TShortCollection;: I4 Branch 3 IFNONNULL L82 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.valueCollection()Lgnu/trove/TShortCollection;: I4 Branch 3 IFNONNULL L82 - false
   */

  @Test
  public void test26()  throws Throwable  {
      TObjectShortHashMap<Integer> tObjectShortHashMap0 = new TObjectShortHashMap<Integer>();
      TUnmodifiableObjectShortMap<Integer> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Integer>((TObjectShortMap<Integer>) tObjectShortHashMap0);
      TUnmodifiableShortCollection tUnmodifiableShortCollection0 = (TUnmodifiableShortCollection)tUnmodifiableObjectShortMap0.valueCollection();
      assertNotNull(tUnmodifiableShortCollection0);
      
      TUnmodifiableShortCollection tUnmodifiableShortCollection1 = (TUnmodifiableShortCollection)tUnmodifiableObjectShortMap0.valueCollection();
      assertSame(tUnmodifiableShortCollection1, tUnmodifiableShortCollection0);
  }

  //Test case number: 27
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L89 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L89 - false
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.size()I: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TObjectShortHashMap<Integer> tObjectShortHashMap0 = new TObjectShortHashMap<Integer>();
      TUnmodifiableObjectShortMap<Integer> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Integer>((TObjectShortMap<Integer>) tObjectShortHashMap0);
      TObjectShortHashMap<Object> tObjectShortHashMap1 = new TObjectShortHashMap<Object>();
      TUnmodifiableObjectShortMap<Object> tUnmodifiableObjectShortMap1 = new TUnmodifiableObjectShortMap<Object>((TObjectShortMap<Object>) tObjectShortHashMap1);
      boolean boolean0 = tUnmodifiableObjectShortMap1.equals((Object) tUnmodifiableObjectShortMap0);
      assertEquals(true, boolean0);
  }

  //Test case number: 28
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L89 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L89 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.<init>(Lgnu/trove/map/TObjectShortMap;)V: I17 Branch 1 IFNONNULL L53 - true
   */

  @Test
  public void test28()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectShortCustomHashMap<Object> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, 887, (float) 887);
      TUnmodifiableObjectShortMap<Object> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Object>((TObjectShortMap<Object>) tObjectShortCustomHashMap0);
      boolean boolean0 = tUnmodifiableObjectShortMap0.equals((Object) "{}");
      assertEquals(false, boolean0);
  }
}

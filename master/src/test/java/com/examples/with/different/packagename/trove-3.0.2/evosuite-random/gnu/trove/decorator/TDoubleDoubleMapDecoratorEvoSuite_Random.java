/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TDoubleDoubleMapDecorator;
import gnu.trove.map.TDoubleDoubleMap;
import gnu.trove.map.hash.TDoubleDoubleHashMap;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.EOFException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.RandomAccessFile;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.AbstractMap;
import java.util.Locale;
import java.util.Map;
import java.util.MissingResourceException;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TDoubleDoubleMapDecoratorEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TDoubleDoubleMapDecorator tDoubleDoubleMapDecorator0 = new TDoubleDoubleMapDecorator();
      Locale locale0 = Locale.FRANCE;
      String string0 = "c0D";
      Locale locale1 = new Locale(string0);
      double double0 = 0.0;
      Double double1 = new Double(double0);
      // Undeclared exception!
      try {
        tDoubleDoubleMapDecorator0.put(double1, (Double) double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      String string0 = "";
      AbstractMap.SimpleImmutableEntry<String, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<String, String>(string0, string0);
      TDoubleDoubleMapDecorator tDoubleDoubleMapDecorator0 = new TDoubleDoubleMapDecorator();
      double double0 = 1.0;
      Double double1 = new Double(double0);
      abstractMap_SimpleImmutableEntry0.equals((Object) double1);
      double double2 = 0.0;
      String string1 = Double.toHexString(double2);
      tDoubleDoubleMapDecorator0.equals((Object) string1);
      Locale locale0 = Locale.FRENCH;
      String string2 = locale0.getISO3Country();
      int int0 = 10;
      TDoubleDoubleMapDecorator tDoubleDoubleMapDecorator1 = new TDoubleDoubleMapDecorator();
      float float0 = (-968.6355F);
      double double3 = 0.0;
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string2, string2, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://#
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = (-1967);
      float float0 = (-1.0F);
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(int0, float0);
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      TDoubleDoubleMapDecorator tDoubleDoubleMapDecorator0 = new TDoubleDoubleMapDecorator((TDoubleDoubleMap) tDoubleDoubleHashMap1);
      TDoubleDoubleHashMap tDoubleDoubleHashMap2 = (TDoubleDoubleHashMap)tDoubleDoubleMapDecorator0.getMap();
      TDoubleDoubleMapDecorator tDoubleDoubleMapDecorator1 = new TDoubleDoubleMapDecorator((TDoubleDoubleMap) tDoubleDoubleHashMap2);
      Locale locale0 = Locale.getDefault();
      String string0 = locale0.getDisplayVariant();
      boolean boolean0 = tDoubleDoubleMapDecorator1.equals((Object) string0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      TDoubleDoubleMapDecorator tDoubleDoubleMapDecorator0 = new TDoubleDoubleMapDecorator();
      double double0 = (-625.1256860006869);
      Double double1 = new Double(double0);
      Locale locale0 = Locale.JAPAN;
      String string0 = locale0.getScript();
      double1.isInfinite();
      tDoubleDoubleMapDecorator0.remove((Object) string0);
      // Undeclared exception!
      try {
        tDoubleDoubleMapDecorator0.put(double1, double1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      double double0 = (-792.5886378418484);
      Double double1 = new Double(double0);
      AbstractMap.SimpleEntry<Double, Double> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Double, Double>(double1, double1);
      abstractMap_SimpleEntry0.getValue();
      TDoubleDoubleMapDecorator tDoubleDoubleMapDecorator0 = new TDoubleDoubleMapDecorator();
      tDoubleDoubleMapDecorator0.keySet();
      tDoubleDoubleMapDecorator0.values();
      String string0 = "}`zcTpW\\B[GEAyA";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in path at index 0: }`zcTpW\\B[GEAyA
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TDoubleDoubleMapDecorator tDoubleDoubleMapDecorator0 = new TDoubleDoubleMapDecorator();
      int int0 = 0;
      float float0 = 0.0F;
      Double double0 = new Double((double) int0);
      // Undeclared exception!
      try {
        tDoubleDoubleMapDecorator0.put(double0, double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TDoubleDoubleMapDecorator tDoubleDoubleMapDecorator0 = new TDoubleDoubleMapDecorator();
      // Undeclared exception!
      try {
        tDoubleDoubleMapDecorator0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      double double0 = (-1790.785097404633);
      doubleArray0[0] = double0;
      double double1 = (-109.52359239539418);
      doubleArray0[1] = double1;
      double double2 = 199.9239127467926;
      doubleArray0[2] = double2;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = null;
      AbstractMap.SimpleEntry<Double, TDoubleDoubleHashMap> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Double, TDoubleDoubleHashMap>((Double) double0, tDoubleDoubleHashMap0);
      Locale locale0 = Locale.ENGLISH;
      char char0 = '>';
      // Undeclared exception!
      try {
        locale0.getExtension(char0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Ill-formed extension key: >
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TDoubleDoubleMapDecorator tDoubleDoubleMapDecorator0 = new TDoubleDoubleMapDecorator();
      // Undeclared exception!
      try {
        tDoubleDoubleMapDecorator0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TDoubleDoubleMap tDoubleDoubleMap0 = null;
      TDoubleDoubleMapDecorator tDoubleDoubleMapDecorator0 = new TDoubleDoubleMapDecorator(tDoubleDoubleMap0);
      TDoubleDoubleMapDecorator tDoubleDoubleMapDecorator1 = new TDoubleDoubleMapDecorator(tDoubleDoubleMap0);
      double double0 = (-584.2672581601585);
      Double double1 = new Double(double0);
      // Undeclared exception!
      try {
        tDoubleDoubleMapDecorator1.put(double1, (Double) double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TDoubleDoubleMapDecorator tDoubleDoubleMapDecorator0 = new TDoubleDoubleMapDecorator();
      // Undeclared exception!
      try {
        tDoubleDoubleMapDecorator0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      Map.Entry<Integer, TDoubleDoubleHashMap> map_Entry0 = null;
      int int0 = (-1316);
      TDoubleDoubleMapDecorator tDoubleDoubleMapDecorator0 = new TDoubleDoubleMapDecorator();
      Map<Double, Double> map0 = null;
      // Undeclared exception!
      try {
        tDoubleDoubleMapDecorator0.putAll(map0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = (-792);
      float float0 = 99.57357F;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(int0, float0);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) int0;
      doubleArray0[1] = (double) float0;
      doubleArray0[2] = (double) float0;
      doubleArray0[3] = (double) float0;
      doubleArray0[4] = (double) int0;
      doubleArray0[5] = (double) float0;
      doubleArray0[6] = (double) float0;
      doubleArray0[7] = (double) float0;
      tDoubleDoubleHashMap0.values(doubleArray0);
      TDoubleDoubleMapDecorator tDoubleDoubleMapDecorator0 = new TDoubleDoubleMapDecorator((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      tDoubleDoubleMapDecorator0.hashCode();
      TDoubleDoubleMapDecorator tDoubleDoubleMapDecorator1 = new TDoubleDoubleMapDecorator();
      Double double0 = null;
      // Undeclared exception!
      try {
        tDoubleDoubleMapDecorator1.put(double0, double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap();
      TDoubleDoubleMapDecorator tDoubleDoubleMapDecorator0 = new TDoubleDoubleMapDecorator((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      String string0 = "begin index can not be < 0";
      File file0 = new File(string0, string0);
      File file1 = file0.getAbsoluteFile();
      RandomAccessFile randomAccessFile0 = null;
      try {
        randomAccessFile0 = new RandomAccessFile(file1, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"begin index can not be < 0\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TDoubleDoubleMapDecorator tDoubleDoubleMapDecorator0 = new TDoubleDoubleMapDecorator();
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte) (-78);
      byteArray0[0] = byte0;
      byteArray0[1] = byte0;
      byteArray0[2] = byte0;
      byteArray0[3] = byte0;
      byteArray0[4] = byte0;
      byte byte1 = (byte)17;
      byteArray0[5] = byte1;
      byteArray0[6] = byte1;
      byteArray0[0] = byte0;
      byte byte2 = (byte) (-91);
      tDoubleDoubleMapDecorator0.keySet();
      byteArray0[1] = byte2;
      tDoubleDoubleMapDecorator0.entrySet();
      byte byte3 = (byte) (-84);
      tDoubleDoubleMapDecorator0.values();
      byteArray0[2] = byte3;
      byte byte4 = (byte)0;
      byteArray0[3] = byte4;
      byte byte5 = (byte) (-52);
      byteArray0[4] = byte5;
      byte byte6 = (byte)23;
      byteArray0[5] = byte6;
      byte byte7 = (byte)10;
      byteArray0[6] = byte7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (int) byte6, (int) byteArray0[6]);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) byteArrayInputStream0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) dataInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      double double0 = 396.6487424888294;
      doubleArray0[0] = double0;
      double double1 = (-691.1874477992084);
      doubleArray0[1] = double1;
      double double2 = 0.0;
      doubleArray0[2] = double2;
      double double3 = 0.0;
      doubleArray0[3] = double3;
      double double4 = 1056.7760298403111;
      doubleArray0[4] = double4;
      double double5 = (-994.9686192763543);
      doubleArray0[5] = double5;
      double double6 = 1774.3503564339076;
      doubleArray0[6] = double6;
      double double7 = (-1.0);
      doubleArray0[7] = double7;
      TDoubleDoubleHashMap tDoubleDoubleHashMap0 = new TDoubleDoubleHashMap(doubleArray0, doubleArray0);
      TDoubleDoubleHashMap tDoubleDoubleHashMap1 = new TDoubleDoubleHashMap((TDoubleDoubleMap) tDoubleDoubleHashMap0);
      TDoubleDoubleMapDecorator tDoubleDoubleMapDecorator0 = new TDoubleDoubleMapDecorator((TDoubleDoubleMap) tDoubleDoubleHashMap1);
      String string0 = "[~V|X0.}Sn";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: [~V|X0.}Sn://[~V|X0.}Sn%5B~V%7CX0.%7DSn#[~V%7CX0.%7DSn
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      TDoubleDoubleMapDecorator tDoubleDoubleMapDecorator0 = new TDoubleDoubleMapDecorator();
      // Undeclared exception!
      try {
        tDoubleDoubleMapDecorator0.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      TDoubleDoubleMapDecorator tDoubleDoubleMapDecorator0 = new TDoubleDoubleMapDecorator();
      double double0 = 0.0;
      Double double1 = new Double(double0);
      // Undeclared exception!
      try {
        tDoubleDoubleMapDecorator0.put(double1, double1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

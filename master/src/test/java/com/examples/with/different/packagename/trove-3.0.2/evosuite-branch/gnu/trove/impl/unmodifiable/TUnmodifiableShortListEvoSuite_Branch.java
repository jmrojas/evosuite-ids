/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TShortCollection;
import gnu.trove.function.TShortFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessShortList;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortList;
import gnu.trove.list.TShortList;
import gnu.trove.list.array.TShortArrayList;
import gnu.trove.list.linked.TShortLinkedList;
import gnu.trove.procedure.TShortProcedure;
import gnu.trove.set.hash.TShortHashSet;
import java.util.Random;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableShortListEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.shuffle(Ljava/util/Random;)V: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.<init>(Lgnu/trove/list/TShortList;)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      short[] shortArray0 = new short[7];
      TShortArrayList tShortArrayList0 = TShortArrayList.wrap(shortArray0);
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      Random random0 = new Random((long) (short)0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessShortList0.shuffle(random0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.add([SII)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList();
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      short[] shortArray0 = new short[8];
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessShortList0.add(shortArray0, (int) (short)0, (int) (short)611);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.transformValues(Lgnu/trove/function/TShortFunction;)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList((int) (short)119, (short)119);
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessShortList0.transformValues((TShortFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.lastIndexOf(S)I: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList();
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      int int0 = tUnmodifiableRandomAccessShortList0.lastIndexOf((short)611);
      assertEquals((-1), int0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.add([S)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList(15);
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      short[] shortArray0 = new short[4];
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessShortList0.add(shortArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.sort(II)V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TShortHashSet tShortHashSet0 = new TShortHashSet(366, 366);
      TShortArrayList tShortArrayList0 = new TShortArrayList((TShortCollection) tShortHashSet0);
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessShortList0.sort(366, 366);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.forEachDescending(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TShortLinkedList tShortLinkedList0 = new TShortLinkedList((short)1);
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortLinkedList0);
      boolean boolean0 = tUnmodifiableRandomAccessShortList0.forEachDescending((TShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.sort()V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TShortLinkedList tShortLinkedList0 = new TShortLinkedList();
      TUnmodifiableShortList tUnmodifiableShortList0 = new TUnmodifiableShortList((TShortList) tShortLinkedList0);
      // Undeclared exception!
      try {
        tUnmodifiableShortList0.sort();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.set(I[SII)V: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList();
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      short[] shortArray0 = new short[19];
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessShortList0.set(3553, shortArray0, (int) (short)0, (int) (short)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.set(IS)S: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList();
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessShortList0.set((int) (short)33, (short)33);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.binarySearch(SII)I: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      short[] shortArray0 = new short[8];
      TShortArrayList tShortArrayList0 = TShortArrayList.wrap(shortArray0);
      TUnmodifiableShortList tUnmodifiableShortList0 = new TUnmodifiableShortList((TShortList) tShortArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableShortList0.binarySearch((short)0, 1738, 1738);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1738
         //
      }
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.indexOf(IS)I: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList(12, (short)0);
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      int int0 = tUnmodifiableRandomAccessShortList0.indexOf((int) (short)0, (short)0);
      assertEquals((-1), int0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.indexOf(S)I: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList(543, (short)0);
      TUnmodifiableShortList tUnmodifiableShortList0 = new TUnmodifiableShortList((TShortList) tShortArrayList0);
      int int0 = tUnmodifiableShortList0.indexOf((short) (-126));
      assertEquals((-1), int0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.min()S: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      short[] shortArray0 = new short[7];
      TShortArrayList tShortArrayList0 = new TShortArrayList(shortArray0);
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      short short0 = tUnmodifiableRandomAccessShortList0.min();
      assertEquals((short)0, short0);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.insert(IS)V: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList(12, (short)0);
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessShortList0.insert((int) (short)0, (short)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.sum()S: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TShortLinkedList tShortLinkedList0 = new TShortLinkedList();
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortLinkedList0);
      short short0 = tUnmodifiableRandomAccessShortList0.sum();
      assertEquals((short)0, short0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.insert(I[SII)V: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      short[] shortArray0 = new short[4];
      TShortArrayList tShortArrayList0 = new TShortArrayList(543, (short)0);
      TUnmodifiableShortList tUnmodifiableShortList0 = new TUnmodifiableShortList((TShortList) tShortArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableShortList0.insert((int) (short) (-126), shortArray0, (int) (short)0, (int) (short)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.toArray([SIII)[S: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      short[] shortArray0 = new short[8];
      TShortArrayList tShortArrayList0 = TShortArrayList.wrap(shortArray0, (short) (-22557));
      TUnmodifiableShortList tUnmodifiableShortList0 = new TUnmodifiableShortList((TShortList) tShortArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableShortList0.toArray(shortArray0, (int) (short)0, (int) (short)0, (int) (short) (-22557));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.set(I[S)V: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TShortLinkedList tShortLinkedList0 = new TShortLinkedList();
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortLinkedList0);
      short[] shortArray0 = new short[15];
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessShortList0.set(1, shortArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.grep(Lgnu/trove/procedure/TShortProcedure;)Lgnu/trove/list/TShortList;: root-Branch
   */

//   @Test
//   public void test19()  throws Throwable  {
//       TShortArrayList tShortArrayList0 = new TShortArrayList(543, (short)0);
//       TUnmodifiableShortList tUnmodifiableShortList0 = new TUnmodifiableShortList((TShortList) tShortArrayList0);
//       TShortArrayList tShortArrayList1 = (TShortArrayList)tUnmodifiableShortList0.grep((TShortProcedure) null);
//       assertEquals(0, tShortArrayList1.sum());
//   }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.binarySearch(S)I: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList(9, (short) (-1304));
      TUnmodifiableShortList tUnmodifiableShortList0 = new TUnmodifiableShortList((TShortList) tShortArrayList0);
      int int0 = tUnmodifiableShortList0.binarySearch((short) (-1304));
      assertEquals((-1), int0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.removeAt(I)S: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      short[] shortArray0 = new short[1];
      TShortArrayList tShortArrayList0 = TShortArrayList.wrap(shortArray0);
      TUnmodifiableShortList tUnmodifiableShortList0 = new TUnmodifiableShortList((TShortList) tShortArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableShortList0.removeAt((int) (short)166);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.subList(II)Lgnu/trove/list/TShortList;: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      short[] shortArray0 = new short[13];
      TShortArrayList tShortArrayList0 = TShortArrayList.wrap(shortArray0);
      TUnmodifiableShortList tUnmodifiableShortList0 = new TUnmodifiableShortList((TShortList) tShortArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableShortList0.subList((int) (short) (-67), (int) (short) (-67));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // begin index can not be < 0
         //
      }
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.lastIndexOf(IS)I: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList(17);
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      int int0 = tUnmodifiableRandomAccessShortList0.lastIndexOf(17, (short)1020);
      assertEquals((-1), int0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.replace(IS)S: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList(17);
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessShortList0.replace((-1), (short)1020);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.remove(II)V: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      short[] shortArray0 = new short[8];
      TShortArrayList tShortArrayList0 = new TShortArrayList(shortArray0);
      TUnmodifiableShortList tUnmodifiableShortList0 = new TUnmodifiableShortList((TShortList) tShortArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableShortList0.remove(1, 1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.fill(S)V: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TShortLinkedList tShortLinkedList0 = new TShortLinkedList((short)166);
      TUnmodifiableShortList tUnmodifiableShortList0 = new TUnmodifiableShortList((TShortList) tShortLinkedList0);
      // Undeclared exception!
      try {
        tUnmodifiableShortList0.fill((short)166);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.inverseGrep(Lgnu/trove/procedure/TShortProcedure;)Lgnu/trove/list/TShortList;: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      TShortLinkedList tShortLinkedList0 = new TShortLinkedList();
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortLinkedList0);
      TShortLinkedList tShortLinkedList1 = (TShortLinkedList)tUnmodifiableRandomAccessShortList0.inverseGrep((TShortProcedure) null);
      assertEquals("{}", tShortLinkedList1.toString());
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.insert(I[S)V: root-Branch
   */

  @Test
  public void test28()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList();
      TUnmodifiableShortList tUnmodifiableShortList0 = new TUnmodifiableShortList((TShortList) tShortArrayList0);
      short[] shortArray0 = new short[6];
      // Undeclared exception!
      try {
        tUnmodifiableShortList0.insert((int) (short)0, shortArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.fill(IIS)V: root-Branch
   */

  @Test
  public void test29()  throws Throwable  {
      short[] shortArray0 = new short[3];
      TShortArrayList tShortArrayList0 = new TShortArrayList(shortArray0);
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessShortList0.fill((int) (short)0, (-4), (short)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 30
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.reverse()V: root-Branch
   */

  @Test
  public void test30()  throws Throwable  {
      short[] shortArray0 = new short[17];
      TShortArrayList tShortArrayList0 = TShortArrayList.wrap(shortArray0, (short) (-1767));
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessShortList0.reverse();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.reverse(II)V: root-Branch
   */

  @Test
  public void test31()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList(9, (short) (-1304));
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessShortList0.reverse((int) (short) (-1304), (int) (short)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.max()S: root-Branch
   */

  @Test
  public void test32()  throws Throwable  {
      TShortLinkedList tShortLinkedList0 = new TShortLinkedList((short)1);
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortLinkedList0);
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessShortList0.max();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 33
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.hashCode()I: root-Branch
   */

  @Test
  public void test33()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList();
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      int int0 = tUnmodifiableRandomAccessShortList0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 34
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.toArray(II)[S: root-Branch
   */

  @Test
  public void test34()  throws Throwable  {
      TShortLinkedList tShortLinkedList0 = new TShortLinkedList();
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortLinkedList0);
      short[] shortArray0 = tUnmodifiableRandomAccessShortList0.toArray((int) (short)0, (int) (short)0);
      assertNotNull(shortArray0);
  }

  //Test case number: 35
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.get(I)S: root-Branch
   */

  @Test
  public void test35()  throws Throwable  {
      short[] shortArray0 = new short[13];
      TShortArrayList tShortArrayList0 = TShortArrayList.wrap(shortArray0);
      TUnmodifiableShortList tUnmodifiableShortList0 = new TUnmodifiableShortList((TShortList) tShortArrayList0);
      short short0 = tUnmodifiableShortList0.get(1);
      assertEquals((short)0, short0);
  }

  //Test case number: 36
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.toArray([SII)[S: root-Branch
   */

  @Test
  public void test36()  throws Throwable  {
      TShortArrayList tShortArrayList0 = new TShortArrayList(15);
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      short[] shortArray0 = new short[4];
      short[] shortArray1 = tUnmodifiableRandomAccessShortList0.toArray(shortArray0, (int) (short)0, (int) (short)0);
      assertSame(shortArray1, shortArray0);
  }

  //Test case number: 37
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.equals(Ljava/lang/Object;)Z: I4 Branch 1 IF_ACMPEQ L62 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.equals(Ljava/lang/Object;)Z: I9 Branch 2 IFEQ L62 - true
   */

  @Test
  public void test37()  throws Throwable  {
      short[] shortArray0 = new short[17];
      TShortArrayList tShortArrayList0 = TShortArrayList.wrap(shortArray0, (short) (-1767));
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      boolean boolean0 = tUnmodifiableRandomAccessShortList0.equals((Object) "{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}");
      assertEquals(false, boolean0);
  }

  //Test case number: 38
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.equals(Ljava/lang/Object;)Z: I9 Branch 2 IFEQ L62 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.<init>(Lgnu/trove/list/TShortList;)V: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortList.equals(Ljava/lang/Object;)Z: I4 Branch 1 IF_ACMPEQ L62 - false
   */

  @Test
  public void test38()  throws Throwable  {
      short[] shortArray0 = new short[7];
      TShortArrayList tShortArrayList0 = TShortArrayList.wrap(shortArray0);
      TUnmodifiableRandomAccessShortList tUnmodifiableRandomAccessShortList0 = new TUnmodifiableRandomAccessShortList((TShortList) tShortArrayList0);
      boolean boolean0 = tUnmodifiableRandomAccessShortList0.equals((Object) tShortArrayList0);
      assertEquals(true, boolean0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.map.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TShortCollection;
import gnu.trove.function.TShortFunction;
import gnu.trove.map.TLongShortMap;
import gnu.trove.map.hash.TLongShortHashMap;
import gnu.trove.procedure.TLongProcedure;
import gnu.trove.procedure.TLongShortProcedure;
import gnu.trove.procedure.TShortProcedure;
import gnu.trove.set.TLongSet;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TLongShortHashMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap$TKeyView.<init>(Lgnu/trove/map/hash/TLongShortHashMap;)V: root-Branch
   * 2 gnu.trove.map.hash.TLongShortHashMap.keySet()Lgnu/trove/set/TLongSet;: root-Branch
   * 3 gnu.trove.map.hash.TLongShortHashMap.setUp(I)I: root-Branch
   * 4 gnu.trove.map.hash.TLongShortHashMap.<init>(IF)V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap((-2), (-2));
      TLongSet tLongSet0 = tLongShortHashMap0.keySet();
      assertEquals(0L, tLongSet0.getNoEntryValue());
  }

  //Test case number: 1
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.forEachKey(Lgnu/trove/procedure/TLongProcedure;)Z: root-Branch
   * 2 gnu.trove.map.hash.TLongShortHashMap.put(JS)S: root-Branch
   * 3 gnu.trove.map.hash.TLongShortHashMap.<init>([J[S)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 4 gnu.trove.map.hash.TLongShortHashMap.<init>([J[S)V: I24 Branch 33 IF_ICMPGE L119 - false
   * 5 gnu.trove.map.hash.TLongShortHashMap.doPut(JSI)S: I12 Branch 40 IFGE L214 - true
   * 6 gnu.trove.map.hash.TLongShortHashMap.doPut(JSI)S: I41 Branch 41 IFEQ L221 - false
   */

  @Test
  public void test1()  throws Throwable  {
      long[] longArray0 = new long[1];
      short[] shortArray0 = new short[2];
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap(longArray0, shortArray0);
      // Undeclared exception!
      try {
        tLongShortHashMap0.forEachKey((TLongProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.removeAt(I)V: root-Branch
   * 2 gnu.trove.map.hash.TLongShortHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 3 gnu.trove.map.hash.TLongShortHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 4 gnu.trove.map.hash.TLongShortHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 5 gnu.trove.map.hash.TLongShortHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 6 gnu.trove.map.hash.TLongShortHashMap.remove(J)S: I14 Branch 46 IFLT L276 - false
   * 7 gnu.trove.map.hash.TLongShortHashMap.adjustOrPutValue(JSS)S: I9 Branch 72 IFGE L491 - true
   * 8 gnu.trove.map.hash.TLongShortHashMap.adjustOrPutValue(JSS)S: I59 Branch 73 IFEQ L502 - false
   */

  @Test
  public void test2()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap((-2), (-2));
      tLongShortHashMap0.adjustOrPutValue((long) 1, (short)1, (short)1);
      assertEquals(false, tLongShortHashMap0.isEmpty());
      
      short short0 = tLongShortHashMap0.remove((long) (short)1);
      assertEquals((short)1, short0);
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.increment(J)Z: root-Branch
   * 2 gnu.trove.map.hash.TLongShortHashMap.<init>(IFJS)V: root-Branch
   * 3 gnu.trove.map.hash.TLongShortHashMap.adjustValue(JS)Z: I9 Branch 71 IFGE L477 - false
   */

  @Test
  public void test3()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap((-717), (float) (-717), (long) (-717), (short) (-9));
      boolean boolean0 = tLongShortHashMap0.increment((long) (-717));
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.valueCollection()Lgnu/trove/TShortCollection;: root-Branch
   * 2 gnu.trove.map.hash.TLongShortHashMap$TValueView.<init>(Lgnu/trove/map/hash/TLongShortHashMap;)V: root-Branch
   * 3 gnu.trove.map.hash.TLongShortHashMap.doPut(JSI)S: I12 Branch 40 IFGE L214 - false
   * 4 gnu.trove.map.hash.TLongShortHashMap.doPut(JSI)S: I41 Branch 41 IFEQ L221 - true
   */

  @Test
  public void test4()  throws Throwable  {
      long[] longArray0 = new long[5];
      short[] shortArray0 = new short[6];
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap(longArray0, shortArray0);
      TShortCollection tShortCollection0 = tLongShortHashMap0.valueCollection();
      assertEquals(1, tShortCollection0.size());
      assertEquals(17, tLongShortHashMap0.capacity());
      assertEquals("{0=0}", tLongShortHashMap0.toString());
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.containsKey(J)Z: root-Branch
   * 2 gnu.trove.map.hash.TLongShortHashMap.<init>()V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap();
      tLongShortHashMap0.containsKey((-4L));
      assertEquals(23, tLongShortHashMap0.capacity());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongShortHashMap.clear()V: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap();
      tLongShortHashMap0.clear();
      assertEquals(23, tLongShortHashMap0.capacity());
      assertEquals("{}", tLongShortHashMap0.toString());
  }

  //Test case number: 7
  /*
   * 12 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap$TLongShortHashIterator.advance()V: root-Branch
   * 2 gnu.trove.map.hash.TLongShortHashMap$TLongShortHashIterator.value()S: root-Branch
   * 3 gnu.trove.map.hash.TLongShortHashMap$TLongShortHashIterator.key()J: root-Branch
   * 4 gnu.trove.map.hash.TLongShortHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - true
   * 5 gnu.trove.map.hash.TLongShortHashMap.putAll(Ljava/util/Map;)V: I15 Branch 42 IFEQ L233 - false
   * 6 gnu.trove.map.hash.TLongShortHashMap.putAll(Lgnu/trove/map/TLongShortMap;)V: I15 Branch 43 IFEQ L243 - false
   * 7 gnu.trove.map.hash.TLongShortHashMap.<init>(Lgnu/trove/map/TLongShortMap;)V: I40 Branch 35 IFEQ L139 - false
   * 8 gnu.trove.map.hash.TLongShortHashMap.<init>(Lgnu/trove/map/TLongShortMap;)V: I52 Branch 36 IFEQ L143 - false
   * 9 gnu.trove.map.hash.TLongShortHashMap.iterator()Lgnu/trove/iterator/TLongShortIterator;: root-Branch
   * 10 gnu.trove.map.hash.TLongShortHashMap.<init>(Lgnu/trove/map/TLongShortMap;)V: I10 Branch 34 IFEQ L133 - false
   * 11 gnu.trove.map.hash.TLongShortHashMap.putAll(Lgnu/trove/map/TLongShortMap;)V: I15 Branch 43 IFEQ L243 - true
   * 12 gnu.trove.map.hash.TLongShortHashMap$TLongShortHashIterator.<init>(Lgnu/trove/map/hash/TLongShortHashMap;Lgnu/trove/map/hash/TLongShortHashMap;)V: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap((-717), (float) (-717), (long) (-717), (short) (-9));
      HashMap<Long, Short> hashMap0 = new HashMap<Long, Short>();
      Long long0 = new Long((long) (short) (-9));
      hashMap0.put(long0, (Short) (short) (-9));
      tLongShortHashMap0.putAll((Map<? extends Long, ? extends Short>) hashMap0);
      TLongShortHashMap tLongShortHashMap1 = new TLongShortHashMap((TLongShortMap) tLongShortHashMap0);
      assertEquals(1, tLongShortHashMap0.size());
      assertTrue(tLongShortHashMap1.equals(tLongShortHashMap0));
  }

  //Test case number: 8
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.<init>(Lgnu/trove/map/TLongShortMap;)V: I40 Branch 35 IFEQ L139 - true
   * 2 gnu.trove.map.hash.TLongShortHashMap.<init>(Lgnu/trove/map/TLongShortMap;)V: I52 Branch 36 IFEQ L143 - true
   * 3 gnu.trove.map.hash.TLongShortHashMap.iterator()Lgnu/trove/iterator/TLongShortIterator;: root-Branch
   * 4 gnu.trove.map.hash.TLongShortHashMap.<init>(Lgnu/trove/map/TLongShortMap;)V: I10 Branch 34 IFEQ L133 - false
   * 5 gnu.trove.map.hash.TLongShortHashMap.putAll(Lgnu/trove/map/TLongShortMap;)V: I15 Branch 43 IFEQ L243 - true
   * 6 gnu.trove.map.hash.TLongShortHashMap$TLongShortHashIterator.<init>(Lgnu/trove/map/hash/TLongShortHashMap;Lgnu/trove/map/hash/TLongShortHashMap;)V: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap();
      TLongShortHashMap tLongShortHashMap1 = new TLongShortHashMap((TLongShortMap) tLongShortHashMap0);
      assertEquals(0L, tLongShortHashMap1.getNoEntryKey());
      assertEquals(23, tLongShortHashMap1.capacity());
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.putIfAbsent(JS)S: I9 Branch 39 IFGE L205 - false
   * 2 gnu.trove.map.hash.TLongShortHashMap.putIfAbsent(JS)S: I9 Branch 39 IFGE L205 - true
   */

  @Test
  public void test9()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap();
      tLongShortHashMap0.putIfAbsent(0L, (short)848);
      short short0 = tLongShortHashMap0.putIfAbsent(0L, (short) (-1));
      assertEquals("{0=848}", tLongShortHashMap0.toString());
      assertEquals((short)848, short0);
  }

  //Test case number: 10
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.get(J)S: I9 Branch 44 IFGE L253 - true
   * 2 gnu.trove.map.hash.TLongShortHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 3 gnu.trove.map.hash.TLongShortHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 4 gnu.trove.map.hash.TLongShortHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   * 5 gnu.trove.map.hash.TLongShortHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 6 gnu.trove.map.hash.TLongShortHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 7 gnu.trove.map.hash.TLongShortHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 8 gnu.trove.map.hash.TLongShortHashMap.equals(Ljava/lang/Object;)Z: I84 Branch 78 IF_ICMPEQ L1200 - true
   */

  @Test
  public void test10()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap();
      tLongShortHashMap0.adjustOrPutValue((long) 0, (short)133, (short)133);
      boolean boolean0 = tLongShortHashMap0.equals((Object) tLongShortHashMap0);
      assertEquals("{0=133}", tLongShortHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongShortHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - true
   */

  @Test
  public void test11()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap();
      tLongShortHashMap0.put((long) (short)0, (short)0);
      boolean boolean0 = tLongShortHashMap0.isEmpty();
      assertEquals(1, tLongShortHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongShortHashMap.isEmpty()Z: I5 Branch 45 IF_ICMPNE L268 - false
   */

  @Test
  public void test12()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap(0, (float) (short)2027);
      boolean boolean0 = tLongShortHashMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongShortHashMap.remove(J)S: I14 Branch 46 IFLT L276 - true
   */

  @Test
  public void test13()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap();
      short short0 = tLongShortHashMap0.remove((-29L));
      assertEquals(23, tLongShortHashMap0.capacity());
      assertEquals((short)0, short0);
      assertEquals(true, tLongShortHashMap0.isEmpty());
  }

  //Test case number: 14
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.keys()[J: I34 Branch 48 IF_ICMPNE L304 - false
   * 2 gnu.trove.map.hash.TLongShortHashMap.keys()[J: I27 Branch 47 IFLE L303 - true
   * 3 gnu.trove.map.hash.TLongShortHashMap.keys()[J: I27 Branch 47 IFLE L303 - false
   * 4 gnu.trove.map.hash.TLongShortHashMap.keys()[J: I34 Branch 48 IF_ICMPNE L304 - true
   */

  @Test
  public void test14()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap();
      tLongShortHashMap0.putIfAbsent(0L, (short)848);
      tLongShortHashMap0.keys();
      assertEquals(1, tLongShortHashMap0.size());
      assertEquals("{0=848}", tLongShortHashMap0.toString());
  }

  //Test case number: 15
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.keys([J)[J: I10 Branch 49 IF_ICMPGE L315 - true
   * 2 gnu.trove.map.hash.TLongShortHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - true
   * 3 gnu.trove.map.hash.TLongShortHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - false
   * 4 gnu.trove.map.hash.TLongShortHashMap.keys([J)[J: I44 Branch 51 IF_ICMPNE L323 - true
   */

  @Test
  public void test15()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap();
      long[] longArray0 = tLongShortHashMap0.keys(tLongShortHashMap0._set);
      assertEquals(23, tLongShortHashMap0.capacity());
      assertNotNull(longArray0);
  }

  //Test case number: 16
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.keys([J)[J: I10 Branch 49 IF_ICMPGE L315 - false
   * 2 gnu.trove.map.hash.TLongShortHashMap.keys([J)[J: I44 Branch 51 IF_ICMPNE L323 - false
   * 3 gnu.trove.map.hash.TLongShortHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - true
   * 4 gnu.trove.map.hash.TLongShortHashMap.keys([J)[J: I37 Branch 50 IFLE L322 - false
   * 5 gnu.trove.map.hash.TLongShortHashMap.keys([J)[J: I44 Branch 51 IF_ICMPNE L323 - true
   * 6 gnu.trove.map.hash.TLongShortHashMap.keys()[J: I27 Branch 47 IFLE L303 - true
   * 7 gnu.trove.map.hash.TLongShortHashMap.keys()[J: I27 Branch 47 IFLE L303 - false
   * 8 gnu.trove.map.hash.TLongShortHashMap.keys()[J: I34 Branch 48 IF_ICMPNE L304 - true
   */

  @Test
  public void test16()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap();
      long[] longArray0 = tLongShortHashMap0.keys();
      tLongShortHashMap0.put((long) (short)0, (short)0);
      tLongShortHashMap0.keys(longArray0);
      assertEquals(1, tLongShortHashMap0.size());
      assertEquals("{0=0}", tLongShortHashMap0.toString());
  }

  //Test case number: 17
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.values()[S: I34 Branch 53 IF_ICMPNE L344 - false
   * 2 gnu.trove.map.hash.TLongShortHashMap.values()[S: I27 Branch 52 IFLE L343 - true
   * 3 gnu.trove.map.hash.TLongShortHashMap.values()[S: I27 Branch 52 IFLE L343 - false
   * 4 gnu.trove.map.hash.TLongShortHashMap.values()[S: I34 Branch 53 IF_ICMPNE L344 - true
   */

  @Test
  public void test17()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap((-2), (-2));
      tLongShortHashMap0.adjustOrPutValue((long) 1, (short)1, (short)1);
      tLongShortHashMap0.values();
      assertEquals(false, tLongShortHashMap0.isEmpty());
      assertEquals("{1=1}", tLongShortHashMap0.toString());
  }

  //Test case number: 18
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.values([S)[S: I10 Branch 54 IF_ICMPGE L355 - true
   * 2 gnu.trove.map.hash.TLongShortHashMap.values([S)[S: I37 Branch 55 IFLE L362 - true
   * 3 gnu.trove.map.hash.TLongShortHashMap.values([S)[S: I37 Branch 55 IFLE L362 - false
   * 4 gnu.trove.map.hash.TLongShortHashMap.values([S)[S: I44 Branch 56 IF_ICMPNE L363 - true
   */

  @Test
  public void test18()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap();
      short[] shortArray0 = tLongShortHashMap0.values();
      assertNotNull(shortArray0);
      
      short[] shortArray1 = tLongShortHashMap0.values(shortArray0);
      assertSame(shortArray0, shortArray1);
      assertNotNull(shortArray1);
      assertEquals(23, tLongShortHashMap0.capacity());
  }

  //Test case number: 19
  /*
   * 8 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.values([S)[S: I10 Branch 54 IF_ICMPGE L355 - false
   * 2 gnu.trove.map.hash.TLongShortHashMap.values([S)[S: I44 Branch 56 IF_ICMPNE L363 - false
   * 3 gnu.trove.map.hash.TLongShortHashMap.values()[S: I27 Branch 52 IFLE L343 - true
   * 4 gnu.trove.map.hash.TLongShortHashMap.values()[S: I27 Branch 52 IFLE L343 - false
   * 5 gnu.trove.map.hash.TLongShortHashMap.values()[S: I34 Branch 53 IF_ICMPNE L344 - true
   * 6 gnu.trove.map.hash.TLongShortHashMap.values([S)[S: I37 Branch 55 IFLE L362 - true
   * 7 gnu.trove.map.hash.TLongShortHashMap.values([S)[S: I37 Branch 55 IFLE L362 - false
   * 8 gnu.trove.map.hash.TLongShortHashMap.values([S)[S: I44 Branch 56 IF_ICMPNE L363 - true
   */

  @Test
  public void test19()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap();
      short[] shortArray0 = tLongShortHashMap0.values();
      tLongShortHashMap0.putIfAbsent(0L, (short)848);
      tLongShortHashMap0.values(shortArray0);
      assertEquals(false, tLongShortHashMap0.isEmpty());
      assertEquals("{0=848}", tLongShortHashMap0.toString());
  }

  //Test case number: 20
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.containsValue(S)Z: I25 Branch 58 IF_ICMPNE L377 - false
   * 2 gnu.trove.map.hash.TLongShortHashMap.containsValue(S)Z: I30 Branch 59 IF_ICMPNE L377 - false
   * 3 gnu.trove.map.hash.TLongShortHashMap.containsValue(S)Z: I18 Branch 57 IFLE L376 - false
   */

  @Test
  public void test20()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap(62, (float) 62, (long) 62, (short)511);
      tLongShortHashMap0.putIfAbsent((long) 62, (short)511);
      boolean boolean0 = tLongShortHashMap0.containsValue((short)511);
      assertEquals(false, tLongShortHashMap0.isEmpty());
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.containsValue(S)Z: I30 Branch 59 IF_ICMPNE L377 - true
   * 2 gnu.trove.map.hash.TLongShortHashMap.containsValue(S)Z: I18 Branch 57 IFLE L376 - true
   * 3 gnu.trove.map.hash.TLongShortHashMap.containsValue(S)Z: I18 Branch 57 IFLE L376 - false
   * 4 gnu.trove.map.hash.TLongShortHashMap.containsValue(S)Z: I25 Branch 58 IF_ICMPNE L377 - true
   * 5 gnu.trove.map.hash.TLongShortHashMap.containsValue(S)Z: I25 Branch 58 IF_ICMPNE L377 - false
   */

  @Test
  public void test21()  throws Throwable  {
      long[] longArray0 = new long[4];
      short[] shortArray0 = new short[8];
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap(longArray0, shortArray0);
      boolean boolean0 = tLongShortHashMap0.containsValue((short) (-1462));
      assertEquals("{0=0}", tLongShortHashMap0.toString());
      assertEquals(17, tLongShortHashMap0.capacity());
      assertEquals(false, boolean0);
      assertEquals(1, tLongShortHashMap0.size());
  }

  //Test case number: 22
  /*
   * 4 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I18 Branch 60 IFLE L407 - true
   * 2 gnu.trove.map.hash.TLongShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TLongShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   * 4 gnu.trove.map.hash.TLongShortHashMap.<init>(I)V: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap(658);
      boolean boolean0 = tLongShortHashMap0.forEachValue((TShortProcedure) null);
      assertEquals(1361, tLongShortHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - false
   * 2 gnu.trove.map.hash.TLongShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I18 Branch 60 IFLE L407 - false
   * 3 gnu.trove.map.hash.TLongShortHashMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: I25 Branch 61 IF_ICMPNE L408 - true
   */

  @Test
  public void test23()  throws Throwable  {
      long[] longArray0 = new long[8];
      short[] shortArray0 = new short[2];
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap(longArray0, shortArray0);
      // Undeclared exception!
      try {
        tLongShortHashMap0.forEachValue((TShortProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.transformValues(Lgnu/trove/function/TShortFunction;)V: I18 Branch 66 IFLE L434 - true
   * 2 gnu.trove.map.hash.TLongShortHashMap.transformValues(Lgnu/trove/function/TShortFunction;)V: I18 Branch 66 IFLE L434 - false
   * 3 gnu.trove.map.hash.TLongShortHashMap.transformValues(Lgnu/trove/function/TShortFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test24()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap(0, (float) (short)2027);
      tLongShortHashMap0.transformValues((TShortFunction) null);
      assertEquals(0, tLongShortHashMap0.size());
  }

  //Test case number: 25
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.transformValues(Lgnu/trove/function/TShortFunction;)V: I25 Branch 67 IF_ICMPNE L435 - false
   * 2 gnu.trove.map.hash.TLongShortHashMap.transformValues(Lgnu/trove/function/TShortFunction;)V: I18 Branch 66 IFLE L434 - false
   * 3 gnu.trove.map.hash.TLongShortHashMap.transformValues(Lgnu/trove/function/TShortFunction;)V: I25 Branch 67 IF_ICMPNE L435 - true
   */

  @Test
  public void test25()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap();
      tLongShortHashMap0.adjustOrPutValue((long) 0, (short) (-1012), (short) (-1012));
      // Undeclared exception!
      try {
        tLongShortHashMap0.transformValues((TShortFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.retainEntries(Lgnu/trove/procedure/TLongShortProcedure;)Z: I31 Branch 68 IFLE L453 - true
   * 2 gnu.trove.map.hash.TLongShortHashMap.retainEntries(Lgnu/trove/procedure/TLongShortProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TLongShortHashMap.retainEntries(Lgnu/trove/procedure/TLongShortProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test26()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap();
      boolean boolean0 = tLongShortHashMap0.retainEntries((TLongShortProcedure) null);
      assertEquals(false, boolean0);
      assertEquals(23, tLongShortHashMap0.capacity());
  }

  //Test case number: 27
  /*
   * 3 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.retainEntries(Lgnu/trove/procedure/TLongShortProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - false
   * 2 gnu.trove.map.hash.TLongShortHashMap.retainEntries(Lgnu/trove/procedure/TLongShortProcedure;)Z: I31 Branch 68 IFLE L453 - false
   * 3 gnu.trove.map.hash.TLongShortHashMap.retainEntries(Lgnu/trove/procedure/TLongShortProcedure;)Z: I38 Branch 69 IF_ICMPNE L454 - true
   */

  @Test
  public void test27()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap();
      tLongShortHashMap0.put((-29L), (short)0);
      // Undeclared exception!
      try {
        tLongShortHashMap0.retainEntries((TLongShortProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongShortHashMap.adjustValue(JS)Z: I9 Branch 71 IFGE L477 - true
   */

  @Test
  public void test28()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap();
      tLongShortHashMap0.put((long) (short)0, (short)0);
      boolean boolean0 = tLongShortHashMap0.adjustValue((long) (short)0, (short)0);
      assertEquals("{0=0}", tLongShortHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.adjustOrPutValue(JSS)S: I9 Branch 72 IFGE L491 - false
   * 2 gnu.trove.map.hash.TLongShortHashMap.adjustOrPutValue(JSS)S: I59 Branch 73 IFEQ L502 - true
   */

  @Test
  public void test29()  throws Throwable  {
      long[] longArray0 = new long[9];
      short[] shortArray0 = new short[6];
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap(longArray0, shortArray0);
      short short0 = tLongShortHashMap0.adjustOrPutValue(0L, (short)0, (short)204);
      assertEquals(1, tLongShortHashMap0.size());
      assertEquals((short)0, short0);
      assertEquals(23, tLongShortHashMap0.capacity());
  }

  //Test case number: 30
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongShortHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - false
   */

  @Test
  public void test30()  throws Throwable  {
      long[] longArray0 = new long[6];
      short[] shortArray0 = new short[2];
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap(longArray0, shortArray0);
      boolean boolean0 = tLongShortHashMap0.equals((Object) shortArray0);
      assertEquals(17, tLongShortHashMap0.capacity());
      assertEquals("{0=0}", tLongShortHashMap0.toString());
      assertEquals(1, tLongShortHashMap0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * 1 gnu.trove.map.hash.TLongShortHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - false
   */

  @Test
  public void test31()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap();
      tLongShortHashMap0.adjustOrPutValue((long) 0, (short) (-1012), (short) (-1012));
      TLongShortHashMap tLongShortHashMap1 = new TLongShortHashMap(0, 0);
      boolean boolean0 = tLongShortHashMap0.equals((Object) tLongShortHashMap1);
      assertEquals("{0=-1012}", tLongShortHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 32
  /*
   * 5 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.equals(Ljava/lang/Object;)Z: I84 Branch 78 IF_ICMPEQ L1200 - false
   * 2 gnu.trove.map.hash.TLongShortHashMap.equals(Ljava/lang/Object;)Z: I87 Branch 79 IF_ICMPEQ L1200 - false
   * 3 gnu.trove.map.hash.TLongShortHashMap.equals(Ljava/lang/Object;)Z: I90 Branch 80 IF_ICMPEQ L1200 - true
   * 4 gnu.trove.map.hash.TLongShortHashMap.get(J)S: I9 Branch 44 IFGE L253 - false
   * 5 gnu.trove.map.hash.TLongShortHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - true
   */

  @Test
  public void test32()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap();
      tLongShortHashMap0.adjustOrPutValue((long) 0, (short) (-1031), (short) (-1031));
      TLongShortHashMap tLongShortHashMap1 = new TLongShortHashMap(0, 0);
      tLongShortHashMap1.put((long) (short) (-1031), (short)0);
      boolean boolean0 = tLongShortHashMap0.equals((Object) tLongShortHashMap1);
      assertEquals("{0=-1031}", tLongShortHashMap0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 33
  /*
   * 17 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.equals(Ljava/lang/Object;)Z: I90 Branch 80 IF_ICMPEQ L1200 - false
   * 2 gnu.trove.map.hash.TLongShortHashMap.<init>()V: root-Branch
   * 3 gnu.trove.map.hash.TLongShortHashMap.<init>(IF)V: root-Branch
   * 4 gnu.trove.map.hash.TLongShortHashMap.adjustOrPutValue(JSS)S: I9 Branch 72 IFGE L491 - true
   * 5 gnu.trove.map.hash.TLongShortHashMap.adjustOrPutValue(JSS)S: I59 Branch 73 IFEQ L502 - false
   * 6 gnu.trove.map.hash.TLongShortHashMap.get(J)S: I9 Branch 44 IFGE L253 - true
   * 7 gnu.trove.map.hash.TLongShortHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - true
   * 8 gnu.trove.map.hash.TLongShortHashMap.rehash(I)V: I46 Branch 37 IFLE L185 - false
   * 9 gnu.trove.map.hash.TLongShortHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - true
   * 10 gnu.trove.map.hash.TLongShortHashMap.rehash(I)V: I53 Branch 38 IF_ICMPNE L186 - false
   * 11 gnu.trove.map.hash.TLongShortHashMap.equals(Ljava/lang/Object;)Z: I4 Branch 74 IFNE L1184 - true
   * 12 gnu.trove.map.hash.TLongShortHashMap.equals(Ljava/lang/Object;)Z: I20 Branch 75 IF_ICMPEQ L1188 - true
   * 13 gnu.trove.map.hash.TLongShortHashMap.equals(Ljava/lang/Object;)Z: I53 Branch 76 IFLE L1195 - false
   * 14 gnu.trove.map.hash.TLongShortHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - true
   * 15 gnu.trove.map.hash.TLongShortHashMap.equals(Ljava/lang/Object;)Z: I60 Branch 77 IF_ICMPNE L1196 - false
   * 16 gnu.trove.map.hash.TLongShortHashMap.equals(Ljava/lang/Object;)Z: I84 Branch 78 IF_ICMPEQ L1200 - false
   * 17 gnu.trove.map.hash.TLongShortHashMap.equals(Ljava/lang/Object;)Z: I87 Branch 79 IF_ICMPEQ L1200 - false
   */

  @Test
  public void test33()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap();
      tLongShortHashMap0.adjustOrPutValue((long) 0, (short)133, (short)133);
      TLongShortHashMap tLongShortHashMap1 = new TLongShortHashMap(0, 0);
      tLongShortHashMap1.put(0L, (short)16);
      boolean boolean0 = tLongShortHashMap0.equals((Object) tLongShortHashMap1);
      assertEquals("{0=133}", tLongShortHashMap0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 34
  /*
   * 6 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - false
   * 2 gnu.trove.map.hash.TLongShortHashMap.<init>(IFJS)V: root-Branch
   * 3 gnu.trove.map.hash.TLongShortHashMap.putIfAbsent(JS)S: I9 Branch 39 IFGE L205 - true
   * 4 gnu.trove.map.hash.TLongShortHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - true
   * 5 gnu.trove.map.hash.TLongShortHashMap.hashCode()I: I18 Branch 81 IFLE L1216 - false
   * 6 gnu.trove.map.hash.TLongShortHashMap.hashCode()I: I25 Branch 82 IF_ICMPNE L1217 - true
   */

  @Test
  public void test34()  throws Throwable  {
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap(62, (float) 62, (long) 62, (short)511);
      tLongShortHashMap0.putIfAbsent((long) 62, (short)511);
      int int0 = tLongShortHashMap0.hashCode();
      assertEquals(1, tLongShortHashMap0.size());
      assertEquals(449, int0);
  }

  //Test case number: 35
  /*
   * 9 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap$1.execute(JS)Z: I4 Branch 115 IFEQ L1233 - true
   * 2 gnu.trove.map.hash.TLongShortHashMap.toString()Ljava/lang/String;: root-Branch
   * 3 gnu.trove.map.hash.TLongShortHashMap.forEachEntry(Lgnu/trove/procedure/TLongShortProcedure;)Z: I23 Branch 63 IFLE L421 - true
   * 4 gnu.trove.map.hash.TLongShortHashMap.forEachEntry(Lgnu/trove/procedure/TLongShortProcedure;)Z: I23 Branch 63 IFLE L421 - false
   * 5 gnu.trove.map.hash.TLongShortHashMap.forEachEntry(Lgnu/trove/procedure/TLongShortProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - true
   * 6 gnu.trove.map.hash.TLongShortHashMap.forEachEntry(Lgnu/trove/procedure/TLongShortProcedure;)Z: I30 Branch 64 IF_ICMPNE L422 - false
   * 7 gnu.trove.map.hash.TLongShortHashMap.forEachEntry(Lgnu/trove/procedure/TLongShortProcedure;)Z: I39 Branch 65 IFNE L422 - true
   * 8 gnu.trove.map.hash.TLongShortHashMap$1.<init>(Lgnu/trove/map/hash/TLongShortHashMap;Ljava/lang/StringBuilder;)V: root-Branch
   * 9 gnu.trove.map.hash.TLongShortHashMap$1.execute(JS)Z: I4 Branch 115 IFEQ L1233 - false
   */

  @Test
  public void test35()  throws Throwable  {
      long[] longArray0 = new long[4];
      longArray0[0] = (-1032L);
      short[] shortArray0 = new short[8];
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap(longArray0, shortArray0);
      String string0 = tLongShortHashMap0.toString();
      assertNotNull(string0);
      assertEquals("{-1032=0, 0=0}", string0);
      assertEquals(2, tLongShortHashMap0.size());
      assertEquals(17, tLongShortHashMap0.capacity());
  }

  //Test case number: 36
  /*
   * 12 covered goals:
   * 1 gnu.trove.map.hash.TLongShortHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - true
   * 2 gnu.trove.map.hash.TLongShortHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I25 Branch 83 IFLE L1259 - false
   * 3 gnu.trove.map.hash.TLongShortHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - true
   * 4 gnu.trove.map.hash.TLongShortHashMap.writeExternal(Ljava/io/ObjectOutput;)V: I33 Branch 84 IF_ICMPNE L1260 - false
   * 5 gnu.trove.map.hash.TLongShortHashMap.put(JS)S: root-Branch
   * 6 gnu.trove.map.hash.TLongShortHashMap.setUp(I)I: root-Branch
   * 7 gnu.trove.map.hash.TLongShortHashMap.doPut(JSI)S: I12 Branch 40 IFGE L214 - true
   * 8 gnu.trove.map.hash.TLongShortHashMap.doPut(JSI)S: I12 Branch 40 IFGE L214 - false
   * 9 gnu.trove.map.hash.TLongShortHashMap.doPut(JSI)S: I41 Branch 41 IFEQ L221 - true
   * 10 gnu.trove.map.hash.TLongShortHashMap.doPut(JSI)S: I41 Branch 41 IFEQ L221 - false
   * 11 gnu.trove.map.hash.TLongShortHashMap.<init>([J[S)V: I24 Branch 33 IF_ICMPGE L119 - true
   * 12 gnu.trove.map.hash.TLongShortHashMap.<init>([J[S)V: I24 Branch 33 IF_ICMPGE L119 - false
   */

  @Test
  public void test36()  throws Throwable  {
      long[] longArray0 = new long[5];
      short[] shortArray0 = new short[6];
      TLongShortHashMap tLongShortHashMap0 = new TLongShortHashMap(longArray0, shortArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tLongShortHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(17, tLongShortHashMap0.capacity());
      assertEquals("{0=0}", tLongShortHashMap0.toString());
      assertEquals(1, tLongShortHashMap0.size());
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.iterator.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.set.hash.TCustomHashSet;
import java.util.Collection;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TObjectHashIteratorEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 21 covered goals:
   * 1 Weak Mutation 0: gnu.trove.iterator.hash.TObjectHashIterator.objectAtIndex(I)Ljava/lang/Object;:50 - DeleteField: _objectHashLgnu/trove/impl/hash/TObjectHash;
   * 2 Weak Mutation 1: gnu.trove.iterator.hash.TObjectHashIterator.objectAtIndex(I)Ljava/lang/Object;:50 - DeleteField: _set[Ljava/lang/Object;
   * 3 Weak Mutation 2: gnu.trove.iterator.hash.TObjectHashIterator.objectAtIndex(I)Ljava/lang/Object;:50 - InsertUnaryOp Negation of index
   * 4 Weak Mutation 3: gnu.trove.iterator.hash.TObjectHashIterator.objectAtIndex(I)Ljava/lang/Object;:50 - InsertUnaryOp IINC 1 index
   * 5 Weak Mutation 4: gnu.trove.iterator.hash.TObjectHashIterator.objectAtIndex(I)Ljava/lang/Object;:50 - InsertUnaryOp IINC -1 index
   * 6 Weak Mutation 5: gnu.trove.iterator.hash.TObjectHashIterator.objectAtIndex(I)Ljava/lang/Object;:51 - DeleteField: FREELjava/lang/Object;
   * 7 Weak Mutation 6: gnu.trove.iterator.hash.TObjectHashIterator.objectAtIndex(I)Ljava/lang/Object;:51 - ReplaceComparisonOperator == -> !=
   * 8 Weak Mutation 7: gnu.trove.iterator.hash.TObjectHashIterator.objectAtIndex(I)Ljava/lang/Object;:51 - DeleteField: REMOVEDLjava/lang/Object;
   * 9 Weak Mutation 8: gnu.trove.iterator.hash.TObjectHashIterator.objectAtIndex(I)Ljava/lang/Object;:51 - ReplaceComparisonOperator != -> ==
   * 10 gnu.trove.iterator.hash.TObjectHashIterator.<init>(Lgnu/trove/impl/hash/TObjectHash;)V: root-Branch
   * 11 gnu.trove.iterator.hash.TObjectHashIterator.objectAtIndex(I)Ljava/lang/Object;: I12 Branch 1 IF_ACMPEQ L51 - false
   * 12 gnu.trove.iterator.hash.TObjectHashIterator.objectAtIndex(I)Ljava/lang/Object;: I15 Branch 2 IF_ACMPNE L51 - true
   * 13 Weak Mutation 0: gnu.trove.iterator.hash.TObjectHashIterator.objectAtIndex(I)Ljava/lang/Object;:50 - DeleteField: _objectHashLgnu/trove/impl/hash/TObjectHash;
   * 14 Weak Mutation 1: gnu.trove.iterator.hash.TObjectHashIterator.objectAtIndex(I)Ljava/lang/Object;:50 - DeleteField: _set[Ljava/lang/Object;
   * 15 Weak Mutation 2: gnu.trove.iterator.hash.TObjectHashIterator.objectAtIndex(I)Ljava/lang/Object;:50 - InsertUnaryOp Negation of index
   * 16 Weak Mutation 3: gnu.trove.iterator.hash.TObjectHashIterator.objectAtIndex(I)Ljava/lang/Object;:50 - InsertUnaryOp IINC 1 index
   * 17 Weak Mutation 4: gnu.trove.iterator.hash.TObjectHashIterator.objectAtIndex(I)Ljava/lang/Object;:50 - InsertUnaryOp IINC -1 index
   * 18 Weak Mutation 5: gnu.trove.iterator.hash.TObjectHashIterator.objectAtIndex(I)Ljava/lang/Object;:51 - DeleteField: FREELjava/lang/Object;
   * 19 Weak Mutation 6: gnu.trove.iterator.hash.TObjectHashIterator.objectAtIndex(I)Ljava/lang/Object;:51 - ReplaceComparisonOperator == -> !=
   * 20 Weak Mutation 7: gnu.trove.iterator.hash.TObjectHashIterator.objectAtIndex(I)Ljava/lang/Object;:51 - DeleteField: REMOVEDLjava/lang/Object;
   * 21 Weak Mutation 8: gnu.trove.iterator.hash.TObjectHashIterator.objectAtIndex(I)Ljava/lang/Object;:51 - ReplaceComparisonOperator != -> ==
   */

  @Test
  public void test0()  throws Throwable  {
      TCustomHashSet<Object> tCustomHashSet0 = new TCustomHashSet<Object>();
      tCustomHashSet0.add((Object) null);
      boolean boolean0 = tCustomHashSet0.containsAll((Collection<?>) tCustomHashSet0);
      assertEquals(true, boolean0);
  }
}

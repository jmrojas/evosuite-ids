/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedObjectLongMap;
import gnu.trove.map.TObjectLongMap;
import gnu.trove.map.custom_hash.TObjectLongCustomHashMap;
import gnu.trove.map.hash.TObjectLongHashMap;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Locale;
import java.util.MissingResourceException;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedObjectLongMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = 0;
      float float0 = 0.0F;
      long long0 = (-1716L);
      int int1 = (-767);
      TObjectLongHashMap<Object> tObjectLongHashMap0 = new TObjectLongHashMap<Object>(int1, int1);
      TSynchronizedObjectLongMap<Object> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Object>((TObjectLongMap<Object>) tObjectLongHashMap0);
      tSynchronizedObjectLongMap0.keySet();
      TObjectLongHashMap<Object> tObjectLongHashMap1 = new TObjectLongHashMap<Object>(int0, float0, long0);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale locale0 = Locale.getDefault(locale_Category0);
      String string0 = locale0.getDisplayLanguage();
      TSynchronizedObjectLongMap<Object> tSynchronizedObjectLongMap1 = new TSynchronizedObjectLongMap<Object>((TObjectLongMap<Object>) tObjectLongHashMap1, (Object) string0);
      URI uRI0 = new URI(string0);
      String string1 = uRI0.getPath();
      long long1 = tSynchronizedObjectLongMap1.get((Object) string1);
      HashingStrategy<String> hashingStrategy0 = null;
      int int2 = 0;
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int3 = 1;
      TObjectLongCustomHashMap<String> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<String>((HashingStrategy<? super String>) hashingStrategy0, int3, (float) long1, long0);
      RandomAccessFile randomAccessFile0 = null;
      try {
        randomAccessFile0 = new RandomAccessFile(string0, string1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"English\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = 1008;
      TObjectLongHashMap<Object> tObjectLongHashMap0 = new TObjectLongHashMap<Object>(int0);
      long long0 = 542L;
      TObjectLongHashMap<Integer> tObjectLongHashMap1 = new TObjectLongHashMap<Integer>(int0, (float) int0, long0);
      tObjectLongHashMap0.compact();
      TSynchronizedObjectLongMap<Integer> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Integer>((TObjectLongMap<Integer>) tObjectLongHashMap1);
      tSynchronizedObjectLongMap0.putAll((TObjectLongMap<? extends Integer>) tObjectLongHashMap1);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>();
      TSynchronizedObjectLongMap<Long> tSynchronizedObjectLongMap1 = new TSynchronizedObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongCustomHashMap0);
      long[] longArray0 = new long[7];
      longArray0[0] = long0;
      longArray0[1] = (long) int0;
      longArray0[2] = long0;
      long long1 = (-9223372036854775808L);
      longArray0[3] = long1;
      longArray0[4] = long0;
      longArray0[5] = long0;
      longArray0[6] = long0;
      tSynchronizedObjectLongMap1.values(longArray0);
      String string0 = locale0.getDisplayLanguage();
      TSynchronizedObjectLongMap<Object> tSynchronizedObjectLongMap2 = new TSynchronizedObjectLongMap<Object>((TObjectLongMap<Object>) tObjectLongHashMap0, (Object) string0);
      String string1 = locale0.getLanguage();
      tSynchronizedObjectLongMap0.containsKey((Object) string1);
      String string2 = "";
      URI uRI0 = new URI(string0, string2, string2, string0);
      String string3 = "Could not find insertion index for null key. Key set full!?!!";
      // Undeclared exception!
      try {
        locale0.getUnicodeLocaleType(string3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Ill-formed Unicode locale key: Could not find insertion index for null key. Key set full!?!!
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>();
      TSynchronizedObjectLongMap<Long> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongHashMap0);
      tSynchronizedObjectLongMap0.clear();
      Long long0 = null;
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int0 = 0;
      float float0 = 125.910255F;
      TObjectLongMap<String> tObjectLongMap0 = null;
      Object object0 = null;
      TSynchronizedObjectLongMap<String> tSynchronizedObjectLongMap1 = new TSynchronizedObjectLongMap<String>(tObjectLongMap0, object0);
      TSynchronizedObjectLongMap<String> tSynchronizedObjectLongMap2 = new TSynchronizedObjectLongMap<String>((TObjectLongMap<String>) tSynchronizedObjectLongMap1);
      String string0 = "end index > size: ";
      long long1 = (-1571L);
      // Undeclared exception!
      try {
        tSynchronizedObjectLongMap2.putIfAbsent(string0, long1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TObjectLongCustomHashMap<Object> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Object>();
      long long0 = (-449L);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      String string0 = "";
      try {
        byteArrayOutputStream0.toString(string0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
         //
         // 
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TObjectLongMap<String> tObjectLongMap0 = null;
      TSynchronizedObjectLongMap<String> tSynchronizedObjectLongMap0 = null;
      try {
        tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<String>(tObjectLongMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>();
      Object object0 = null;
      TSynchronizedObjectLongMap<Long> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongHashMap0, object0);
      TSynchronizedObjectLongMap<Long> tSynchronizedObjectLongMap1 = new TSynchronizedObjectLongMap<Long>((TObjectLongMap<Long>) tSynchronizedObjectLongMap0);
      TObjectLongCustomHashMap<Object> tObjectLongCustomHashMap0 = null;
      try {
        tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (TObjectLongMap<?>) tSynchronizedObjectLongMap1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      IdentityHashingStrategy<Long> identityHashingStrategy0 = new IdentityHashingStrategy<Long>();
      int int0 = (-1160);
      float float0 = (-1060.1923F);
      TObjectLongCustomHashMap<Long> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Long>((HashingStrategy<? super Long>) identityHashingStrategy0, int0, float0);
      Object object0 = null;
      TSynchronizedObjectLongMap<Long> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Long>((TObjectLongMap<Long>) tObjectLongCustomHashMap0, object0);
      // Undeclared exception!
      try {
        tSynchronizedObjectLongMap0.keys();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TObjectLongHashMap<Long> tObjectLongHashMap0 = new TObjectLongHashMap<Long>();
      int int0 = 151;
      float float0 = 6.6360896E8F;
      long long0 = 0L;
      long long1 = tObjectLongHashMap0.put((Long) long0, long0);
      TObjectLongHashMap<Integer> tObjectLongHashMap1 = new TObjectLongHashMap<Integer>(int0, float0, long0);
      TSynchronizedObjectLongMap<Integer> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Integer>((TObjectLongMap<Integer>) tObjectLongHashMap1);
      tSynchronizedObjectLongMap0.keySet();
      long[] longArray0 = new long[9];
      longArray0[0] = long0;
      longArray0[1] = (long) int0;
      longArray0[2] = (long) int0;
      longArray0[3] = long1;
      longArray0[4] = long1;
      long long2 = 0L;
      longArray0[5] = long2;
      longArray0[6] = long1;
      longArray0[7] = long0;
      longArray0[8] = long0;
      tSynchronizedObjectLongMap0.values(longArray0);
      long[] longArray1 = new long[3];
      long long3 = (-288L);
      longArray1[0] = long3;
      long long4 = 9223372036854775807L;
      String string0 = "";
      File file0 = new File(string0);
      // Undeclared exception!
      try {
        File.createTempFile(string0, string0, file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int0 = 1771;
      float float0 = 1.4E-45F;
      TObjectLongCustomHashMap<Integer> tObjectLongCustomHashMap0 = new TObjectLongCustomHashMap<Integer>((HashingStrategy<? super Integer>) identityHashingStrategy0, int0, float0);
      TSynchronizedObjectLongMap<Integer> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Integer>((TObjectLongMap<Integer>) tObjectLongCustomHashMap0);
      long[] longArray0 = new long[6];
      TObjectLongHashMap<Object> tObjectLongHashMap0 = new TObjectLongHashMap<Object>((TObjectLongMap<?>) tObjectLongCustomHashMap0);
      TSynchronizedObjectLongMap<Object> tSynchronizedObjectLongMap1 = new TSynchronizedObjectLongMap<Object>((TObjectLongMap<Object>) tObjectLongHashMap0);
      Long long0 = new Long((long) int0);
      String string0 = long0.toString();
      TSynchronizedObjectLongMap<Object> tSynchronizedObjectLongMap2 = new TSynchronizedObjectLongMap<Object>((TObjectLongMap<Object>) tSynchronizedObjectLongMap1, (Object) string0);
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, int0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: 1771://1771@1771:17711771?1771#1771
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = (-1374);
      TObjectLongHashMap<String> tObjectLongHashMap0 = new TObjectLongHashMap<String>(int0, int0);
      TObjectLongHashMap<Object> tObjectLongHashMap1 = new TObjectLongHashMap<Object>((TObjectLongMap<?>) tObjectLongHashMap0);
      TSynchronizedObjectLongMap<Object> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<Object>((TObjectLongMap<Object>) tObjectLongHashMap1);
      Integer[] integerArray0 = new Integer[6];
      integerArray0[0] = (Integer) int0;
      integerArray0[1] = (Integer) int0;
      String string0 = "";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://#
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = 1911;
      float float0 = (-1841.5166F);
      TObjectLongHashMap<String> tObjectLongHashMap0 = new TObjectLongHashMap<String>(int0, float0);
      TSynchronizedObjectLongMap<String> tSynchronizedObjectLongMap0 = new TSynchronizedObjectLongMap<String>((TObjectLongMap<String>) tObjectLongHashMap0);
      tSynchronizedObjectLongMap0.clear();
      tObjectLongHashMap0.iterator();
      TObjectLongMap<Object> tObjectLongMap0 = null;
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      String string0 = locale0.getISO3Country();
      TSynchronizedObjectLongMap<Object> tSynchronizedObjectLongMap1 = new TSynchronizedObjectLongMap<Object>(tObjectLongMap0, (Object) string0);
      // Undeclared exception!
      try {
        tSynchronizedObjectLongMap1.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TFloatCollection;
import gnu.trove.impl.sync.TSynchronizedFloatSet;
import gnu.trove.impl.sync.TSynchronizedRandomAccessFloatList;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatList;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessFloatList;
import gnu.trove.list.TFloatList;
import gnu.trove.list.array.TFloatArrayList;
import gnu.trove.list.linked.TFloatLinkedList;
import gnu.trove.procedure.TFloatProcedure;
import gnu.trove.set.TFloatSet;
import gnu.trove.set.hash.TFloatHashSet;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.RandomAccessFile;
import java.util.Collection;
import java.util.LinkedList;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableFloatCollectionEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = 0;
      float float0 = (-455.59756F);
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet(int0, float0);
      TSynchronizedFloatSet tSynchronizedFloatSet0 = new TSynchronizedFloatSet((TFloatSet) tFloatHashSet0);
      TUnmodifiableFloatSet tUnmodifiableFloatSet0 = new TUnmodifiableFloatSet((TFloatSet) tSynchronizedFloatSet0);
      float float1 = 1766.3998F;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(int0, float1);
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList0);
      // Undeclared exception!
      try {
        tFloatArrayList0.replace(int0, int0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      float[] floatArray0 = new float[3];
      float float0 = (-1887.6023F);
      floatArray0[0] = float0;
      float float1 = (-1103.8762F);
      int int0 = (-658);
      floatArray0[0] = float0;
      floatArray0[1] = (float) int0;
      floatArray0[2] = (float) int0;
      float float2 = (-468.78818F);
      float float3 = (-1371.79F);
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet(int0, float2, float3);
      String string0 = "D#^DD=:2oMv\\<";
      File file0 = new File(string0);
      File file1 = file0.getAbsoluteFile();
      File file2 = file1.getParentFile();
      File file3 = new File(file2, string0);
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = new TUnmodifiableFloatCollection((TFloatCollection) tFloatHashSet0);
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      // Undeclared exception!
      try {
        tUnmodifiableFloatCollection0.addAll((Collection<? extends Float>) linkedList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet();
      TUnmodifiableFloatSet tUnmodifiableFloatSet0 = new TUnmodifiableFloatSet((TFloatSet) tFloatHashSet0);
      float float0 = (-950.9979F);
      boolean boolean0 = tUnmodifiableFloatSet0.contains(float0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      int int0 = 0;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(int0);
      int int1 = 1069;
      int int2 = 1853;
      // Undeclared exception!
      try {
        tFloatArrayList0.subList(int1, int2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index < 0
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 0;
      int int1 = (-1);
      TFloatArrayList tFloatArrayList0 = null;
      try {
        tFloatArrayList0 = new TFloatArrayList(int1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TFloatList tFloatList0 = null;
      TSynchronizedRandomAccessFloatList tSynchronizedRandomAccessFloatList0 = null;
      try {
        tSynchronizedRandomAccessFloatList0 = new TSynchronizedRandomAccessFloatList(tFloatList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet();
      TUnmodifiableFloatSet tUnmodifiableFloatSet0 = new TUnmodifiableFloatSet((TFloatSet) tFloatHashSet0);
      boolean boolean0 = tUnmodifiableFloatSet0.containsAll((TFloatCollection) tFloatHashSet0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList();
      TFloatProcedure tFloatProcedure0 = null;
      TFloatArrayList tFloatArrayList1 = (TFloatArrayList)tFloatArrayList0.inverseGrep(tFloatProcedure0);
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList1);
      boolean boolean0 = tUnmodifiableFloatList0.isEmpty();
      assertEquals(true, boolean0);
      
      int int0 = 1;
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet(int0);
      float[] floatArray0 = new float[4];
      floatArray0[0] = (float) int0;
      floatArray0[1] = (float) int0;
      floatArray0[2] = (float) int0;
      floatArray0[3] = (float) int0;
      tFloatHashSet0.containsAll(floatArray0);
      tFloatHashSet0.setAutoCompactionFactor((float) int0);
      TFloatArrayList tFloatArrayList2 = new TFloatArrayList((TFloatCollection) tFloatHashSet0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList2);
      tFloatArrayList2.reverse();
      float[] floatArray1 = tUnmodifiableRandomAccessFloatList0.toArray(tFloatHashSet0._set);
      assertNotNull(floatArray1);
      
      tUnmodifiableRandomAccessFloatList0.getNoEntryValue();
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = new TUnmodifiableFloatCollection((TFloatCollection) tFloatHashSet0);
      float[] floatArray2 = tUnmodifiableRandomAccessFloatList0.toArray();
      assertNotNull(floatArray2);
      
      tUnmodifiableFloatList0.toArray(floatArray1);
      int int1 = 0;
      // Undeclared exception!
      try {
        tUnmodifiableRandomAccessFloatList0.insert(int1, floatArray1, int1, int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      float[] floatArray0 = new float[3];
      float float0 = 0.0F;
      Collection<Float> collection0 = null;
      TFloatHashSet tFloatHashSet0 = null;
      try {
        tFloatHashSet0 = new TFloatHashSet(collection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      int int0 = 36;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(int0);
      TUnmodifiableRandomAccessFloatList tUnmodifiableRandomAccessFloatList0 = new TUnmodifiableRandomAccessFloatList((TFloatList) tFloatArrayList0);
      tUnmodifiableRandomAccessFloatList0.getNoEntryValue();
      String string0 = "";
      int int1 = 1;
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet(int1, int1);
      TUnmodifiableFloatSet tUnmodifiableFloatSet0 = new TUnmodifiableFloatSet((TFloatSet) tFloatHashSet0);
      TFloatHashSet tFloatHashSet1 = (TFloatHashSet)tUnmodifiableFloatSet0.c;
      TFloatHashSet tFloatHashSet2 = new TFloatHashSet((TFloatCollection) tFloatHashSet1);
      TSynchronizedFloatSet tSynchronizedFloatSet0 = new TSynchronizedFloatSet((TFloatSet) tFloatHashSet2);
      RandomAccessFile randomAccessFile0 = null;
      try {
        randomAccessFile0 = new RandomAccessFile(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      float[] floatArray0 = new float[1];
      float float0 = (-1.0F);
      floatArray0[0] = float0;
      TFloatArrayList tFloatArrayList0 = TFloatArrayList.wrap(floatArray0);
      int int0 = 604;
      // Undeclared exception!
      try {
        tFloatArrayList0.subList(int0, int0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // end index < 1
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 196;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(int0);
      TFloatLinkedList tFloatLinkedList0 = new TFloatLinkedList((TFloatList) tFloatArrayList0);
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatLinkedList0);
      float[] floatArray0 = new float[5];
      floatArray0[0] = (float) int0;
      floatArray0[1] = (float) int0;
      floatArray0[2] = (float) int0;
      floatArray0[3] = (float) int0;
      float float0 = 0.0F;
      floatArray0[4] = float0;
      float[] floatArray1 = tUnmodifiableFloatList0.toArray(floatArray0);
      assertSame(floatArray0, floatArray1);
  }

  @Test
  public void test12()  throws Throwable  {
      TFloatList tFloatList0 = null;
      float[] floatArray0 = new float[3];
      float float0 = (-1418.0376F);
      floatArray0[0] = float0;
      float float1 = 0.0F;
      floatArray0[1] = float1;
      float float2 = 0.0F;
      floatArray0[2] = float2;
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet(floatArray0);
      TUnmodifiableFloatSet tUnmodifiableFloatSet0 = new TUnmodifiableFloatSet((TFloatSet) tFloatHashSet0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatSet0.retainAll(floatArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      float[] floatArray0 = new float[10];
      float float0 = 0.0F;
      floatArray0[0] = float0;
      float float1 = 0.0F;
      floatArray0[1] = float1;
      float float2 = 0.0F;
      floatArray0[2] = float2;
      float float3 = 0.0F;
      floatArray0[3] = float3;
      float float4 = (-728.48773F);
      floatArray0[4] = float4;
      float float5 = Float.POSITIVE_INFINITY;
      floatArray0[5] = float5;
      float float6 = 6.6360896E8F;
      floatArray0[6] = float6;
      float float7 = (-910.2739F);
      floatArray0[7] = float7;
      float float8 = (-1740.774F);
      floatArray0[8] = float8;
      float float9 = (-692.2064F);
      floatArray0[9] = float9;
      TFloatArrayList tFloatArrayList0 = new TFloatArrayList(floatArray0);
      TUnmodifiableFloatList tUnmodifiableFloatList0 = new TUnmodifiableFloatList((TFloatList) tFloatArrayList0);
      float float10 = 0.0F;
      // Undeclared exception!
      try {
        tUnmodifiableFloatList0.remove(float10);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 0;
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet(int0);
      int int1 = tFloatHashSet0.size();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      float[] floatArray0 = new float[6];
      floatArray0[0] = (float) int0;
      floatArray0[1] = (float) int0;
      floatArray0[2] = (float) int0;
      floatArray0[0] = (float) int0;
      floatArray0[1] = (float) int1;
      floatArray0[2] = (float) int1;
      floatArray0[3] = (float) int1;
      floatArray0[4] = (float) int0;
      floatArray0[5] = (float) int0;
      floatArray0[3] = (float) int1;
      floatArray0[4] = (float) int1;
      floatArray0[5] = (float) int1;
      floatArray0[0] = (float) int1;
      float float0 = (-1863.6256F);
      floatArray0[1] = float0;
      floatArray0[2] = (float) int1;
      floatArray0[3] = (float) int1;
      floatArray0[4] = (float) int1;
      TFloatList tFloatList0 = null;
      TUnmodifiableFloatList tUnmodifiableFloatList0 = null;
      try {
        tUnmodifiableFloatList0 = new TUnmodifiableFloatList(tFloatList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = (-160);
      float float0 = (-6.565427F);
      TFloatCollection tFloatCollection0 = null;
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = null;
      try {
        tUnmodifiableFloatCollection0 = new TUnmodifiableFloatCollection(tFloatCollection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      TFloatSet tFloatSet0 = null;
      TUnmodifiableFloatSet tUnmodifiableFloatSet0 = null;
      try {
        tUnmodifiableFloatSet0 = new TUnmodifiableFloatSet(tFloatSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      float[] floatArray0 = new float[3];
      float float0 = 1397.5779F;
      floatArray0[0] = float0;
      float float1 = 0.0F;
      floatArray0[1] = float1;
      float float2 = 0.0F;
      floatArray0[2] = float2;
      TFloatHashSet tFloatHashSet0 = new TFloatHashSet(floatArray0);
      TUnmodifiableFloatSet tUnmodifiableFloatSet0 = new TUnmodifiableFloatSet((TFloatSet) tFloatHashSet0);
      TSynchronizedFloatSet tSynchronizedFloatSet0 = new TSynchronizedFloatSet((TFloatSet) tUnmodifiableFloatSet0);
      TUnmodifiableFloatSet tUnmodifiableFloatSet1 = new TUnmodifiableFloatSet((TFloatSet) tSynchronizedFloatSet0);
      TFloatHashSet tFloatHashSet1 = (TFloatHashSet)tUnmodifiableFloatSet0.c;
      // Undeclared exception!
      try {
        tUnmodifiableFloatSet1.removeAll((TFloatCollection) tFloatHashSet1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

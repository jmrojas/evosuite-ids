/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.sync;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.sync.TSynchronizedLongDoubleMap;
import gnu.trove.iterator.TLongDoubleIterator;
import gnu.trove.map.TLongDoubleMap;
import gnu.trove.map.hash.TLongDoubleHashMap;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.PipedInputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Locale;
import java.util.NoSuchElementException;
import java.util.StringTokenizer;
import javax.swing.text.Segment;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TSynchronizedLongDoubleMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = (-1);
      float float0 = 0.5F;
      double double0 = 0.0;
      int int1 = 1937;
      float float1 = 42.241493F;
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(int1, float1);
      Locale locale0 = Locale.UK;
      String string0 = locale0.toLanguageTag();
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap0 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0, (Object) string0);
      tSynchronizedLongDoubleMap0.clear();
      TLongDoubleHashMap tLongDoubleHashMap1 = new TLongDoubleHashMap(int0, float0, (long) int0, double0);
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      String string1 = locale1.getDisplayLanguage();
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap1 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap1, (Object) string1);
      tSynchronizedLongDoubleMap1.putAll((TLongDoubleMap) tLongDoubleHashMap1);
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap2 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap1);
      boolean boolean0 = tSynchronizedLongDoubleMap2.containsKey((long) int0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      int int0 = 1952;
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(int0, int0);
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap0 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0);
      tSynchronizedLongDoubleMap0.iterator();
      String string0 = tSynchronizedLongDoubleMap0.toString();
      tSynchronizedLongDoubleMap0.putAll((TLongDoubleMap) tLongDoubleHashMap0);
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap1 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0, (Object) string0);
      Locale locale0 = Locale.UK;
      String string1 = locale0.getCountry();
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap2 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tSynchronizedLongDoubleMap1, (Object) string1);
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte) (-1);
      byteArray0[0] = byte0;
      byte byte1 = (byte)78;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) int0;
      doubleArray0[1] = (double) byte0;
      tSynchronizedLongDoubleMap1.values(doubleArray0);
      tLongDoubleHashMap0._states = byteArray0;
      assertSame(tLongDoubleHashMap0._states, byteArray0);
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = 411527;
      long long0 = (-1367L);
      int int1 = 0;
      int int2 = 0;
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(int2);
      Object object0 = new Object();
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap0 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0, object0);
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap1 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tSynchronizedLongDoubleMap0, object0);
      tSynchronizedLongDoubleMap1.keySet();
      TLongDoubleHashMap tLongDoubleHashMap1 = new TLongDoubleHashMap(int1, int0);
      Object object1 = null;
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap2 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap1, object1);
      // Undeclared exception!
      try {
        tSynchronizedLongDoubleMap2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TLongDoubleMap tLongDoubleMap0 = null;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try {
        pipedInputStream0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int int0 = 1706;
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(int0);
      String string0 = "@v!C+KB[n<6q>s";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in path at index 7: @v!C+KB[n<6q>s
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap();
      long long0 = 0L;
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap0 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0);
      tSynchronizedLongDoubleMap0.increment(long0);
      double double0 = 0.0;
      tLongDoubleHashMap0.putIfAbsent(long0, double0);
      tLongDoubleHashMap0.getAutoCompactionFactor();
      long long1 = 1710L;
      tLongDoubleHashMap0.get(long1);
      Long long2 = new Long(long1);
      String string0 = "";
      Long.getLong(string0, (Long) long1);
      String string1 = "tIRD)F}^-xr@J[Rmj#";
      long long3 = 0L;
      Long.toString(long3);
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap1 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0);
      StringTokenizer stringTokenizer0 = new StringTokenizer(string1, string1);
      long long4 = 0L;
      tSynchronizedLongDoubleMap1.remove(long4);
      // Undeclared exception!
      try {
        stringTokenizer0.nextToken();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TLongDoubleMap tLongDoubleMap0 = null;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      String string0 = byteArrayOutputStream0.toString();
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap0 = new TSynchronizedLongDoubleMap(tLongDoubleMap0, (Object) string0);
      long long0 = (-846L);
      double double0 = 82.17897914377514;
      // Undeclared exception!
      try {
        tSynchronizedLongDoubleMap0.adjustValue(long0, double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      long[] longArray0 = new long[3];
      long long0 = 0L;
      longArray0[0] = long0;
      long long1 = (-1L);
      longArray0[1] = long1;
      TLongDoubleMap tLongDoubleMap0 = null;
      String string0 = "<L) ELCqti#-`g>jrA";
      String string1 = "X\\oOxg]D";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, string0, string1);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: <L) ELCqti#-`g>jrA://%3CL)%20ELCqti%23-%60g%3EjrA%3CL)%20ELCqti%23-%60g%3EjrA?%3CL)%20ELCqti%23-%60g%3EjrA#X%5CoOxg]D
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      long[] longArray0 = new long[10];
      long long0 = 302L;
      longArray0[0] = long0;
      long long1 = 1992L;
      longArray0[1] = long1;
      long long2 = 9223372036854775807L;
      longArray0[2] = long2;
      long long3 = 500L;
      longArray0[3] = long3;
      long long4 = (-1L);
      longArray0[4] = long4;
      long long5 = (-1993L);
      longArray0[5] = long5;
      long long6 = 0L;
      longArray0[6] = long6;
      long long7 = (-324L);
      longArray0[7] = long7;
      long long8 = 605L;
      longArray0[8] = long8;
      long long9 = (-1235L);
      longArray0[9] = long9;
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) long9;
      doubleArray0[1] = (double) longArray0[1];
      doubleArray0[2] = (double) long3;
      doubleArray0[3] = (double) longArray0[2];
      doubleArray0[4] = (double) longArray0[6];
      doubleArray0[5] = (double) longArray0[9];
      doubleArray0[6] = (double) longArray0[3];
      doubleArray0[7] = (double) longArray0[7];
      doubleArray0[8] = (double) long6;
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(longArray0, doubleArray0);
      TLongDoubleHashMap tLongDoubleHashMap1 = new TLongDoubleHashMap((TLongDoubleMap) tLongDoubleHashMap0);
      long long10 = 2027L;
      int int0 = (-1);
      String string0 = Long.toString(long10, int0);
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap0 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap1, (Object) string0);
      TLongDoubleIterator tLongDoubleIterator0 = tSynchronizedLongDoubleMap0.iterator();
      assertEquals(true, tLongDoubleIterator0.hasNext());
  }

  @Test
  public void test9()  throws Throwable  {
      TLongDoubleMap tLongDoubleMap0 = null;
      String string0 = "w2P6/";
      URI uRI0 = new URI(string0);
      String string1 = uRI0.getScheme();
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap0 = new TSynchronizedLongDoubleMap(tLongDoubleMap0, (Object) string1);
      // Undeclared exception!
      try {
        tSynchronizedLongDoubleMap0.keys();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      long[] longArray0 = new long[8];
      long long0 = (-9223372036854775808L);
      longArray0[0] = long0;
      long long1 = 0L;
      longArray0[1] = long1;
      long long2 = 1361L;
      longArray0[2] = long2;
      long long3 = (-45L);
      longArray0[3] = long3;
      long long4 = (-92L);
      longArray0[4] = long4;
      long long5 = 0L;
      longArray0[5] = long5;
      long long6 = 0L;
      longArray0[6] = long6;
      long long7 = (-1351L);
      longArray0[7] = long7;
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) longArray0[0];
      doubleArray0[1] = (double) long5;
      doubleArray0[2] = (double) longArray0[0];
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(longArray0, doubleArray0);
      String string0 = "";
      File file0 = new File(string0, string0);
      File file1 = file0.getAbsoluteFile();
      File file2 = file1.getCanonicalFile();
      String string1 = file2.getParent();
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap0 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0, (Object) string1);
      // Undeclared exception!
      try {
        tSynchronizedLongDoubleMap0.adjustValue(long5, longArray0[4]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 0;
      double double0 = 0.0;
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(int0, (float) int0, (long) int0, double0);
      Locale locale0 = Locale.ITALIAN;
      String string0 = locale0.getLanguage();
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap0 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0, (Object) string0);
      Object object0 = null;
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap1 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tSynchronizedLongDoubleMap0, object0);
      // Undeclared exception!
      try {
        tSynchronizedLongDoubleMap1.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 274174111;
      float float0 = (-798.2919F);
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(int0, float0);
      Locale locale0 = Locale.FRENCH;
      Locale locale1 = Locale.CHINA;
      String string0 = locale0.getDisplayLanguage(locale1);
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap0 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0, (Object) string0);
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap1 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tSynchronizedLongDoubleMap0);
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 0: \u6CD5\u6587:\u6CD5\u6587#\u6CD5\u6587
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap();
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap0 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap0);
      Locale locale0 = Locale.UK;
      Locale locale1 = Locale.FRENCH;
      String string0 = locale0.getDisplayCountry(locale1);
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap1 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tSynchronizedLongDoubleMap0, (Object) string0);
      char[] charArray0 = new char[5];
      char char0 = '4';
      charArray0[0] = char0;
      char char1 = '.';
      charArray0[1] = char1;
      char char2 = 'B';
      charArray0[2] = char2;
      char char3 = '=';
      charArray0[3] = char3;
      char char4 = '}';
      charArray0[4] = char4;
      int int0 = 499;
      Segment segment0 = new Segment(charArray0, (int) char3, int0);
      // Undeclared exception!
      try {
        segment0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 560
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = 0;
      float float0 = (-1.0F);
      long long0 = 0L;
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(int0, float0, long0, (double) long0);
      TLongDoubleHashMap tLongDoubleHashMap1 = new TLongDoubleHashMap((TLongDoubleMap) tLongDoubleHashMap0);
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap0 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap1);
      long long1 = (-1848L);
      double double0 = Double.NEGATIVE_INFINITY;
      tSynchronizedLongDoubleMap0.adjustOrPutValue(long1, double0, (double) float0);
      assertEquals("{-1848=-1.0}", tLongDoubleHashMap1.toString());
      
      int int1 = 108;
      int int2 = (-1);
      TLongDoubleHashMap tLongDoubleHashMap2 = new TLongDoubleHashMap(int2, int2);
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap1 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap2);
      tSynchronizedLongDoubleMap1.keys();
      TLongDoubleHashMap tLongDoubleHashMap3 = new TLongDoubleHashMap(int1, int1);
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap2 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap3);
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap3 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tSynchronizedLongDoubleMap2);
      long long2 = 554L;
      double double1 = 1.0;
      double double2 = 1733.3443221032603;
      tSynchronizedLongDoubleMap3.adjustOrPutValue(long2, double1, double2);
      int int3 = 1;
      TLongDoubleHashMap tLongDoubleHashMap4 = new TLongDoubleHashMap(int3, int3);
      int int4 = tLongDoubleHashMap4.size();
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap4 = new TSynchronizedLongDoubleMap((TLongDoubleMap) tLongDoubleHashMap4);
      tSynchronizedLongDoubleMap4.containsValue((double) int4);
      tSynchronizedLongDoubleMap4.getNoEntryValue();
      int int5 = tSynchronizedLongDoubleMap4.size();
      TLongDoubleMap tLongDoubleMap0 = null;
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      String string0 = locale0.getDisplayCountry();
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap5 = new TSynchronizedLongDoubleMap(tLongDoubleMap0, (Object) string0);
      long long3 = 1L;
      double double3 = 0.0;
      long long4 = (-817L);
      tSynchronizedLongDoubleMap4.adjustOrPutValue(long4, (double) int5, double3);
      tSynchronizedLongDoubleMap4.putIfAbsent(long3, double3);
      assertFalse(tSynchronizedLongDoubleMap4.equals(tSynchronizedLongDoubleMap2));
  }

  @Test
  public void test15()  throws Throwable  {
      TLongDoubleMap tLongDoubleMap0 = null;
      TSynchronizedLongDoubleMap tSynchronizedLongDoubleMap0 = null;
      try {
        tSynchronizedLongDoubleMap0 = new TSynchronizedLongDoubleMap(tLongDoubleMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      long[] longArray0 = new long[2];
      long long0 = 1L;
      longArray0[0] = long0;
      long long1 = 0L;
      longArray0[1] = long1;
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) long1;
      doubleArray0[1] = (double) long0;
      doubleArray0[2] = (double) longArray0[1];
      doubleArray0[3] = (double) longArray0[0];
      doubleArray0[4] = (double) longArray0[0];
      TLongDoubleHashMap tLongDoubleHashMap0 = new TLongDoubleHashMap(longArray0, doubleArray0);
      Locale locale0 = Locale.ITALIAN;
      Locale locale1 = null;
      // Undeclared exception!
      try {
        locale0.getDisplayName(locale1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.TCharCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharList;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableRandomAccessCharList;
import gnu.trove.list.TCharList;
import gnu.trove.list.array.TCharArrayList;
import gnu.trove.list.linked.TCharLinkedList;
import gnu.trove.procedure.TCharProcedure;
import gnu.trove.set.TCharSet;
import gnu.trove.set.hash.TCharHashSet;
import java.util.Collection;
import java.util.LinkedList;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableCharCollectionEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 9 covered goals:
   * 1 Weak Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.size()I:63 - DeleteField: cLgnu/trove/TCharCollection;
   * 2 Weak Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.size()I:63 - DeleteStatement: size()I
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.size()I: root-Branch
   * 4 Weak Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.<init>(Lgnu/trove/TCharCollection;)V:58 - ReplaceVariable c -> c
   * 5 Weak Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.<init>(Lgnu/trove/TCharCollection;)V:58 - ReplaceComparisonOperator != null -> = null
   * 6 Weak Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.<init>(Lgnu/trove/TCharCollection;)V:60 - ReplaceVariable c -> c
   * 7 Weak Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.size()I:63 - DeleteField: cLgnu/trove/TCharCollection;
   * 8 Weak Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.size()I:63 - DeleteStatement: size()I
   * 9 gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.<init>(Lgnu/trove/TCharCollection;)V: I7 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      TUnmodifiableCharSet tUnmodifiableCharSet0 = new TUnmodifiableCharSet((TCharSet) tCharHashSet0);
      int int0 = tUnmodifiableCharSet0.size();
      assertEquals(0, int0);
  }

  //Test case number: 1
  /*
   * 5 covered goals:
   * 1 Weak Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.isEmpty()Z:64 - DeleteField: cLgnu/trove/TCharCollection;
   * 2 Weak Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.isEmpty()Z: root-Branch
   * 4 Weak Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.isEmpty()Z:64 - DeleteField: cLgnu/trove/TCharCollection;
   * 5 Weak Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   */

  @Test
  public void test1()  throws Throwable  {
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      TUnmodifiableCharList tUnmodifiableCharList0 = new TUnmodifiableCharList((TCharList) tCharLinkedList0);
      boolean boolean0 = tUnmodifiableCharList0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 11 covered goals:
   * 1 Weak Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.contains(C)Z:65 - DeleteField: cLgnu/trove/TCharCollection;
   * 2 Weak Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.contains(C)Z:65 - InsertUnaryOp Negation of o
   * 3 Weak Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.contains(C)Z:65 - InsertUnaryOp IINC 1 o
   * 4 Weak Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.contains(C)Z:65 - InsertUnaryOp IINC -1 o
   * 5 Weak Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.contains(C)Z:65 - DeleteStatement: contains(C)Z
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.contains(C)Z: root-Branch
   * 7 Weak Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.contains(C)Z:65 - DeleteField: cLgnu/trove/TCharCollection;
   * 8 Weak Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.contains(C)Z:65 - InsertUnaryOp Negation of o
   * 9 Weak Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.contains(C)Z:65 - InsertUnaryOp IINC 1 o
   * 10 Weak Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.contains(C)Z:65 - InsertUnaryOp IINC -1 o
   * 11 Weak Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.contains(C)Z:65 - DeleteStatement: contains(C)Z
   */

  @Test
  public void test2()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      TUnmodifiableCharSet tUnmodifiableCharSet0 = new TUnmodifiableCharSet((TCharSet) tCharHashSet0);
      boolean boolean0 = tUnmodifiableCharSet0.contains('h');
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * 1 Weak Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.toArray()[C:66 - DeleteStatement: toArray()[C
   * 2 Weak Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.toArray()[C:66 - DeleteField: cLgnu/trove/TCharCollection;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.toArray()[C: root-Branch
   * 4 Weak Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.toArray()[C:66 - DeleteStatement: toArray()[C
   * 5 Weak Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.toArray()[C:66 - DeleteField: cLgnu/trove/TCharCollection;
   */

  @Test
  public void test3()  throws Throwable  {
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      TUnmodifiableRandomAccessCharList tUnmodifiableRandomAccessCharList0 = new TUnmodifiableRandomAccessCharList((TCharList) tCharLinkedList0);
      char[] charArray0 = tUnmodifiableRandomAccessCharList0.toArray();
      assertNotNull(charArray0);
  }

  //Test case number: 4
  /*
   * 5 covered goals:
   * 1 Weak Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.toArray([C)[C:67 - DeleteStatement: toArray([C)[C
   * 2 Weak Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.toArray([C)[C:67 - DeleteField: cLgnu/trove/TCharCollection;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.toArray([C)[C: root-Branch
   * 4 Weak Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.toArray([C)[C:67 - DeleteStatement: toArray([C)[C
   * 5 Weak Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.toArray([C)[C:67 - DeleteField: cLgnu/trove/TCharCollection;
   */

  @Test
  public void test4()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      TUnmodifiableCharSet tUnmodifiableCharSet0 = new TUnmodifiableCharSet((TCharSet) tCharHashSet0);
      char[] charArray0 = tUnmodifiableCharSet0.toArray(tCharHashSet0._set);
      assertNotNull(charArray0);
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 Weak Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.toString()Ljava/lang/String;:68 - DeleteStatement: toString()Ljava/lang/String;
   * 2 Weak Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.toString()Ljava/lang/String;:68 - DeleteField: cLgnu/trove/TCharCollection;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.toString()Ljava/lang/String;: root-Branch
   * 4 Weak Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.toString()Ljava/lang/String;:68 - DeleteStatement: toString()Ljava/lang/String;
   * 5 Weak Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.toString()Ljava/lang/String;:68 - DeleteField: cLgnu/trove/TCharCollection;
   */

  @Test
  public void test5()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      TUnmodifiableCharSet tUnmodifiableCharSet0 = new TUnmodifiableCharSet((TCharSet) tCharHashSet0);
      String string0 = tUnmodifiableCharSet0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 Weak Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.getNoEntryValue()C:69 - DeleteStatement: getNoEntryValue()C
   * 2 Weak Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.getNoEntryValue()C:69 - DeleteField: cLgnu/trove/TCharCollection;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.getNoEntryValue()C: root-Branch
   * 4 Weak Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.getNoEntryValue()C:69 - DeleteStatement: getNoEntryValue()C
   * 5 Weak Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.getNoEntryValue()C:69 - DeleteField: cLgnu/trove/TCharCollection;
   */

  @Test
  public void test6()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      TUnmodifiableCharSet tUnmodifiableCharSet0 = new TUnmodifiableCharSet((TCharSet) tCharHashSet0);
      char char0 = tUnmodifiableCharSet0.getNoEntryValue();
      assertEquals('\u0000', char0);
  }

  //Test case number: 7
  /*
   * 5 covered goals:
   * 1 Weak Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.forEach(Lgnu/trove/procedure/TCharProcedure;)Z:70 - DeleteStatement: forEach(Lgnu/trove/procedure/TCharProcedure;)Z
   * 2 Weak Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.forEach(Lgnu/trove/procedure/TCharProcedure;)Z:70 - DeleteField: cLgnu/trove/TCharCollection;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.forEach(Lgnu/trove/procedure/TCharProcedure;)Z: root-Branch
   * 4 Weak Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.forEach(Lgnu/trove/procedure/TCharProcedure;)Z:70 - DeleteStatement: forEach(Lgnu/trove/procedure/TCharProcedure;)Z
   * 5 Weak Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.forEach(Lgnu/trove/procedure/TCharProcedure;)Z:70 - DeleteField: cLgnu/trove/TCharCollection;
   */

  @Test
  public void test7()  throws Throwable  {
      TCharLinkedList tCharLinkedList0 = new TCharLinkedList();
      TUnmodifiableRandomAccessCharList tUnmodifiableRandomAccessCharList0 = new TUnmodifiableRandomAccessCharList((TCharList) tCharLinkedList0);
      boolean boolean0 = tUnmodifiableRandomAccessCharList0.forEach((TCharProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 8
  /*
   * 19 covered goals:
   * 1 Weak Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection$1.next()C:77 - DeleteField: iLgnu/trove/iterator/TCharIterator;
   * 2 Weak Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection$1.next()C:77 - DeleteStatement: next()C
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection$1.next()C: root-Branch
   * 4 Weak Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection$1.hasNext()Z:76 - DeleteField: iLgnu/trove/iterator/TCharIterator;
   * 5 Weak Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection$1.hasNext()Z:76 - DeleteStatement: hasNext()Z
   * 6 Weak Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.containsAll(Lgnu/trove/TCharCollection;)Z:86 - ReplaceVariable coll -> c
   * 7 Weak Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.containsAll(Lgnu/trove/TCharCollection;)Z:86 - DeleteField: cLgnu/trove/TCharCollection;
   * 8 Weak Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.containsAll(Lgnu/trove/TCharCollection;)Z:86 - DeleteStatement: containsAll(Lgnu/trove/TCharCollection;)Z
   * 9 Weak Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection$1.hasNext()Z:76 - DeleteField: iLgnu/trove/iterator/TCharIterator;
   * 10 Weak Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection$1.hasNext()Z:76 - DeleteStatement: hasNext()Z
   * 11 Weak Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection$1.next()C:77 - DeleteField: iLgnu/trove/iterator/TCharIterator;
   * 12 Weak Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection$1.next()C:77 - DeleteStatement: next()C
   * 13 Weak Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.containsAll(Lgnu/trove/TCharCollection;)Z:86 - ReplaceVariable coll -> c
   * 14 Weak Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.containsAll(Lgnu/trove/TCharCollection;)Z:86 - DeleteField: cLgnu/trove/TCharCollection;
   * 15 Weak Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.containsAll(Lgnu/trove/TCharCollection;)Z:86 - DeleteStatement: containsAll(Lgnu/trove/TCharCollection;)Z
   * 16 gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection$1.hasNext()Z: root-Branch
   * 17 gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableCharCollection;)V: root-Branch
   * 18 gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.iterator()Lgnu/trove/iterator/TCharIterator;: root-Branch
   * 19 gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.containsAll(Lgnu/trove/TCharCollection;)Z: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      TUnmodifiableCharSet tUnmodifiableCharSet0 = new TUnmodifiableCharSet((TCharSet) tCharHashSet0);
      tCharHashSet0.addAll(tCharHashSet0._set);
      boolean boolean0 = tUnmodifiableCharSet0.containsAll((TCharCollection) tUnmodifiableCharSet0);
      assertEquals(true, boolean0);
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 Weak Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.containsAll(Ljava/util/Collection;)Z:85 - DeleteStatement: containsAll(Ljava/util/Collection;)Z
   * 2 Weak Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.containsAll(Ljava/util/Collection;)Z:85 - DeleteField: cLgnu/trove/TCharCollection;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.containsAll(Ljava/util/Collection;)Z: root-Branch
   * 4 Weak Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.containsAll(Ljava/util/Collection;)Z:85 - DeleteStatement: containsAll(Ljava/util/Collection;)Z
   * 5 Weak Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.containsAll(Ljava/util/Collection;)Z:85 - DeleteField: cLgnu/trove/TCharCollection;
   */

  @Test
  public void test9()  throws Throwable  {
      TCharHashSet tCharHashSet0 = new TCharHashSet();
      TUnmodifiableCharSet tUnmodifiableCharSet0 = new TUnmodifiableCharSet((TCharSet) tCharHashSet0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      boolean boolean0 = tUnmodifiableCharSet0.containsAll((Collection<?>) linkedList0);
      assertEquals(true, boolean0);
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 Weak Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.containsAll([C)Z:87 - DeleteField: cLgnu/trove/TCharCollection;
   * 2 Weak Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.containsAll([C)Z:87 - DeleteStatement: containsAll([C)Z
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.containsAll([C)Z: root-Branch
   * 4 Weak Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.containsAll([C)Z:87 - DeleteField: cLgnu/trove/TCharCollection;
   * 5 Weak Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.containsAll([C)Z:87 - DeleteStatement: containsAll([C)Z
   */

  @Test
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[3];
      TCharHashSet tCharHashSet0 = new TCharHashSet((int) 'O');
      TUnmodifiableCharSet tUnmodifiableCharSet0 = new TUnmodifiableCharSet((TCharSet) tCharHashSet0);
      boolean boolean0 = tUnmodifiableCharSet0.containsAll(charArray0);
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.addAll(Lgnu/trove/TCharCollection;)Z: root-Branch
   * 2 Weak Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.<init>(Lgnu/trove/TCharCollection;)V:58 - ReplaceVariable c -> c
   * 3 Weak Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.<init>(Lgnu/trove/TCharCollection;)V:60 - ReplaceVariable c -> c
   */

  @Test
  public void test11()  throws Throwable  {
      TCharArrayList tCharArrayList0 = new TCharArrayList();
      TUnmodifiableCharCollection tUnmodifiableCharCollection0 = new TUnmodifiableCharCollection((TCharCollection) tCharArrayList0);
      // Undeclared exception!
      try {
        tUnmodifiableCharCollection0.addAll((TCharCollection) tCharArrayList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.<init>(Lgnu/trove/TCharCollection;)V: I7 Branch 1 IFNONNULL L58 - false
   * 2 Weak Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableCharCollection.<init>(Lgnu/trove/TCharCollection;)V:58 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test12()  throws Throwable  {
      TUnmodifiableCharList tUnmodifiableCharList0 = null;
      try {
        tUnmodifiableCharList0 = new TUnmodifiableCharList((TCharList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

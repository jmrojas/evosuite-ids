/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortSet;
import gnu.trove.map.TShortByteMap;
import gnu.trove.map.hash.TShortByteHashMap;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TShortByteProcedure;
import gnu.trove.procedure.TShortProcedure;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableShortByteMapEvoSuite_StrongMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 5 covered goals:
   * 1 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.isEmpty()Z: root-Branch
   * 3 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.<init>(Lgnu/trove/map/TShortByteMap;)V:58 - ReplaceComparisonOperator != null -> = null
   * 4 Strong Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.isEmpty()Z:64 - DeleteStatement: isEmpty()Z
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.<init>(Lgnu/trove/map/TShortByteMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      boolean boolean0 = tUnmodifiableShortByteMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * 1 Strong Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsKey(S)Z:65 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsKey(S)Z: root-Branch
   * 3 Strong Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsKey(S)Z:65 - DeleteField: mLgnu/trove/map/TShortByteMap;
   */

  @Test
  public void test1()  throws Throwable  {
      short[] shortArray0 = new short[3];
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(1);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      shortArray0[2] = (short)312;
      tUnmodifiableShortByteMap0.containsKey((short)312);
      shortArray0[2] = (short) (byte)124;
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * 1 Strong Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsKey(S)Z:65 - InsertUnaryOp Negation of key
   * 2 Strong Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsKey(S)Z:65 - InsertUnaryOp Negation of key
   * 3 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsKey(S)Z:65 - InsertUnaryOp IINC 1 key
   * 4 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsKey(S)Z:65 - DeleteStatement: containsKey(S)Z
   * 5 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsKey(S)Z:65 - InsertUnaryOp IINC -1 key
   */

  @Test
  public void test2()  throws Throwable  {
      short[] shortArray0 = new short[2];
      shortArray0[1] = (short) (-1789);
      byte[] byteArray0 = new byte[5];
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(shortArray0, byteArray0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      boolean boolean0 = tUnmodifiableShortByteMap0.containsKey((short) (-1789));
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 Strong Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsKey(S)Z:65 - InsertUnaryOp IINC -1 key
   * 2 Strong Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsKey(S)Z:65 - InsertUnaryOp IINC 1 key
   * 3 Strong Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsKey(S)Z:65 - DeleteStatement: containsKey(S)Z
   */

  @Test
  public void test3()  throws Throwable  {
      short[] shortArray0 = new short[2];
      byte[] byteArray0 = new byte[3];
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(shortArray0, byteArray0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      boolean boolean0 = tUnmodifiableShortByteMap0.containsKey((short)0);
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 4 covered goals:
   * 1 Strong Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsValue(B)Z:66 - InsertUnaryOp Negation of val
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsValue(B)Z: root-Branch
   * 3 Strong Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsValue(B)Z:66 - InsertUnaryOp Negation of val
   * 4 Strong Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsValue(B)Z:66 - InsertUnaryOp IINC -1 val
   */

  @Test
  public void test4()  throws Throwable  {
      short[] shortArray0 = new short[10];
      shortArray0[0] = (short) (-1);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(shortArray0, byteArray0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      boolean boolean0 = tUnmodifiableShortByteMap0.containsValue((byte)1);
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 Strong Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsValue(B)Z:66 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 2 Strong Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsValue(B)Z:66 - DeleteField: mLgnu/trove/map/TShortByteMap;
   */

  @Test
  public void test5()  throws Throwable  {
      short[] shortArray0 = new short[9];
      shortArray0[1] = (short)1;
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(93);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      tUnmodifiableShortByteMap0.containsValue((byte) (-1));
      shortArray0[1] = (short)0;
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 Strong Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsValue(B)Z:66 - DeleteStatement: containsValue(B)Z
   * 2 Strong Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsValue(B)Z:66 - InsertUnaryOp IINC -1 val
   * 3 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsValue(B)Z:66 - InsertUnaryOp IINC 1 val
   * 4 Strong Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsValue(B)Z:66 - InsertUnaryOp IINC 1 val
   * 5 Strong Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.containsValue(B)Z:66 - DeleteStatement: containsValue(B)Z
   */

  @Test
  public void test6()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      tShortByteHashMap0.adjustOrPutValue((short)13, (byte)0, (byte)0);
      boolean boolean0 = tUnmodifiableShortByteMap0.containsValue((byte)0);
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 3 covered goals:
   * 1 Strong Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.get(S)B:67 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.get(S)B: root-Branch
   * 3 Strong Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.get(S)B:67 - DeleteField: mLgnu/trove/map/TShortByteMap;
   */

  @Test
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap((int) (short) (-1776), (float) (short) (-1776));
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      byteArray0[0] = (byte) (-4);
      tUnmodifiableShortByteMap0.get((short) (byte)1);
      byteArray0[0] = (byte)1;
  }

  //Test case number: 8
  /*
   * 8 covered goals:
   * 1 Strong Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.get(S)B:67 - InsertUnaryOp IINC -1 key
   * 2 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.get(S)B:67 - InsertUnaryOp IINC 1 key
   * 3 Strong Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.get(S)B:67 - InsertUnaryOp Negation of key
   * 4 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.get(S)B:67 - DeleteStatement: get(S)B
   * 5 Strong Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.get(S)B:67 - InsertUnaryOp IINC 1 key
   * 6 Strong Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.get(S)B:67 - InsertUnaryOp Negation of key
   * 7 Strong Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.get(S)B:67 - DeleteStatement: get(S)B
   * 8 Strong Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.get(S)B:67 - InsertUnaryOp IINC -1 key
   */

  @Test
  public void test8()  throws Throwable  {
      short[] shortArray0 = new short[3];
      shortArray0[1] = (short) (byte) (-115);
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)112;
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(shortArray0, byteArray0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      byte byte0 = tUnmodifiableShortByteMap0.get((short) (-115));
      assertEquals((byte)112, byte0);
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keys()[S:83 - DeleteStatement: keys()[S
   * 2 Strong Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keys()[S:83 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 3 Strong Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keys()[S:83 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 4 Strong Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keys()[S:83 - DeleteStatement: keys()[S
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keys()[S: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      short[] shortArray0 = tUnmodifiableShortByteMap0.keys();
      assertNotNull(shortArray0);
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keys([S)[S:84 - DeleteStatement: keys([S)[S
   * 2 Strong Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keys([S)[S:84 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 3 Strong Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keys([S)[S:84 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 4 Strong Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keys([S)[S:84 - DeleteStatement: keys([S)[S
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keys([S)[S: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      short[] shortArray0 = tUnmodifiableShortByteMap0.keys(tShortByteHashMap0._set);
      assertNotNull(shortArray0);
  }

  //Test case number: 11
  /*
   * 5 covered goals:
   * 1 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.values()[B:91 - DeleteStatement: values()[B
   * 2 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.values()[B:91 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 3 Strong Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.values()[B:91 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 4 Strong Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.values()[B:91 - DeleteStatement: values()[B
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.values()[B: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      byte[] byteArray0 = tUnmodifiableShortByteMap0.values();
      assertNotNull(byteArray0);
  }

  //Test case number: 12
  /*
   * 5 covered goals:
   * 1 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.values([B)[B:92 - DeleteStatement: values([B)[B
   * 2 Strong Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.values([B)[B:92 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 3 Strong Mutation 46: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.values([B)[B:92 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 4 Strong Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.values([B)[B:92 - DeleteStatement: values([B)[B
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.values([B)[B: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap((-32768));
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      byte[] byteArray0 = tUnmodifiableShortByteMap0.values(tShortByteHashMap0._states);
      assertNotNull(byteArray0);
  }

  //Test case number: 13
  /*
   * 7 covered goals:
   * 1 Strong Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.equals(Ljava/lang/Object;)Z:94 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 2 Strong Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 3 Strong Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.equals(Ljava/lang/Object;)Z:94 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 4 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 5 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   */

  @Test
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap((int) (short) (-1776), (float) (short) (-1776));
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      byteArray0[0] = (byte) (-4);
      tUnmodifiableShortByteMap0.equals((Object) null);
      byteArray0[0] = (byte)1;
  }

  //Test case number: 14
  /*
   * 2 covered goals:
   * 1 Strong Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 0 -> 1
   * 2 Strong Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test14()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap((-1216), (-657.56824F), (short) (-905), (byte) (-92));
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      boolean boolean0 = tUnmodifiableShortByteMap0.equals((Object) "it");
      assertEquals(false, boolean0);
  }

  //Test case number: 15
  /*
   * 7 covered goals:
   * 1 Strong Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 1 -> 0
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - false
   * 4 Strong Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceComparisonOperator == -> !=
   * 5 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 6 Strong Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.equals(Ljava/lang/Object;)Z:94 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 7 Strong Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 1 -> 0
   */

  @Test
  public void test15()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap((int) (short) (-1776), (float) (short) (-1776));
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      boolean boolean0 = tUnmodifiableShortByteMap0.equals((Object) tShortByteHashMap0);
      assertEquals(true, boolean0);
  }

  //Test case number: 16
  /*
   * 3 covered goals:
   * 1 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.hashCode()I:95 - DeleteStatement: hashCode()I
   * 2 Strong Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.hashCode()I:95 - DeleteStatement: hashCode()I
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.hashCode()I: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      tShortByteHashMap0.adjustOrPutValue((short)1, (byte)3, (byte)0);
      int int0 = tUnmodifiableShortByteMap0.hashCode();
      assertEquals(1, int0);
  }

  //Test case number: 17
  /*
   * 5 covered goals:
   * 1 Strong Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 2 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 3 Strong Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.toString()Ljava/lang/String;:96 - DeleteStatement: toString()Ljava/lang/String;
   * 4 Strong Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.toString()Ljava/lang/String;:96 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap((-58));
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      String string0 = tUnmodifiableShortByteMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 18
  /*
   * 3 covered goals:
   * 1 Strong Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.getNoEntryKey()S:97 - DeleteStatement: getNoEntryKey()S
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.getNoEntryKey()S: root-Branch
   * 3 Strong Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.getNoEntryKey()S:97 - DeleteStatement: getNoEntryKey()S
   */

  @Test
  public void test18()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(52, 1361.9812F, (short)3527, (byte)1);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      short short0 = tUnmodifiableShortByteMap0.getNoEntryKey();
      assertEquals((short)3527, short0);
  }

  //Test case number: 19
  /*
   * 2 covered goals:
   * 1 Strong Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.getNoEntryKey()S:97 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 2 Strong Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.getNoEntryKey()S:97 - DeleteField: mLgnu/trove/map/TShortByteMap;
   */

  @Test
  public void test19()  throws Throwable  {
      short[] shortArray0 = new short[3];
      shortArray0[2] = (short)154;
      byte[] byteArray0 = new byte[4];
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(shortArray0, byteArray0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      tUnmodifiableShortByteMap0.getNoEntryKey();
      shortArray0[2] = (short) (byte)0;
  }

  //Test case number: 20
  /*
   * 3 covered goals:
   * 1 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.getNoEntryValue()B:98 - DeleteStatement: getNoEntryValue()B
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.getNoEntryValue()B: root-Branch
   * 3 Strong Mutation 61: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.getNoEntryValue()B:98 - DeleteStatement: getNoEntryValue()B
   */

  @Test
  public void test20()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap((-128), 1954.4602F, (short)959, (byte) (-115));
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      byte byte0 = tUnmodifiableShortByteMap0.getNoEntryValue();
      assertEquals((byte) (-115), byte0);
  }

  //Test case number: 21
  /*
   * 2 covered goals:
   * 1 Strong Mutation 60: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.getNoEntryValue()B:98 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 2 Strong Mutation 60: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.getNoEntryValue()B:98 - DeleteField: mLgnu/trove/map/TShortByteMap;
   */

  @Test
  public void test21()  throws Throwable  {
      short[] shortArray0 = new short[3];
      shortArray0[2] = (short)154;
      byte[] byteArray0 = new byte[4];
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(shortArray0, byteArray0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      tUnmodifiableShortByteMap0.getNoEntryValue();
      shortArray0[2] = (short) (byte)0;
  }

  //Test case number: 22
  /*
   * 5 covered goals:
   * 1 Strong Mutation 62: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z:101 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 2 Strong Mutation 63: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z
   * 3 Strong Mutation 63: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z:101 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z
   * 4 Strong Mutation 62: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z:101 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.forEachKey(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      short[] shortArray0 = new short[3];
      shortArray0[2] = (short)154;
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap((int) (byte)13, 1920.571F);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      tUnmodifiableShortByteMap0.forEachKey((TShortProcedure) null);
      shortArray0[2] = (short) (byte)0;
  }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 Strong Mutation 65: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   * 3 Strong Mutation 65: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z:104 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z
   */

  @Test
  public void test23()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      boolean boolean0 = tUnmodifiableShortByteMap0.forEachValue((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 3 covered goals:
   * 1 Strong Mutation 67: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.forEachEntry(Lgnu/trove/procedure/TShortByteProcedure;)Z:107 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TShortByteProcedure;)Z
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.forEachEntry(Lgnu/trove/procedure/TShortByteProcedure;)Z: root-Branch
   * 3 Strong Mutation 67: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.forEachEntry(Lgnu/trove/procedure/TShortByteProcedure;)Z:107 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TShortByteProcedure;)Z
   */

  @Test
  public void test24()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap();
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      boolean boolean0 = tUnmodifiableShortByteMap0.forEachEntry((TShortByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 25
  /*
   * 17 covered goals:
   * 1 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.key()S:114 - DeleteStatement: key()S
   * 2 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.key()S:114 - DeleteField: iterLgnu/trove/iterator/TShortByteIterator;
   * 3 Strong Mutation 1: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.key()S:114 - DeleteStatement: key()S
   * 4 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.value()B:115 - DeleteField: iterLgnu/trove/iterator/TShortByteIterator;
   * 5 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TShortByteIterator;
   * 6 Strong Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.advance()V:116 - DeleteStatement: advance()V
   * 7 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TShortByteIterator;
   * 8 Strong Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 9 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.size()I:63 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 10 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.size()I:63 - DeleteStatement: size()I
   * 11 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableShortByteMap;)V: root-Branch
   * 12 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.advance()V: root-Branch
   * 13 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.key()S: root-Branch
   * 14 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.value()B: root-Branch
   * 15 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.hasNext()Z: root-Branch
   * 16 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.iterator()Lgnu/trove/iterator/TShortByteIterator;: root-Branch
   * 17 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.size()I: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      short[] shortArray0 = new short[10];
      shortArray0[0] = (short) (-1);
      byte[] byteArray0 = new byte[2];
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(shortArray0, byteArray0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      TShortByteHashMap tShortByteHashMap1 = new TShortByteHashMap((TShortByteMap) tUnmodifiableShortByteMap0);
      assertEquals(5, tShortByteHashMap1.capacity());
      assertEquals(2, tShortByteHashMap1.size());
  }

  //Test case number: 26
  /*
   * 2 covered goals:
   * 1 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.value()B:115 - DeleteStatement: value()B
   * 2 Strong Mutation 3: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.value()B:115 - DeleteStatement: value()B
   */

  @Test
  public void test26()  throws Throwable  {
      short[] shortArray0 = new short[10];
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)51;
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(shortArray0, byteArray0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      TShortByteHashMap tShortByteHashMap1 = new TShortByteHashMap((TShortByteMap) tUnmodifiableShortByteMap0);
      assertEquals(1, tUnmodifiableShortByteMap0.size());
      assertEquals("{0=51}", tShortByteHashMap1.toString());
  }

  //Test case number: 27
  /*
   * 8 covered goals:
   * 1 Strong Mutation 7: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.hasNext()Z:117 - DeleteStatement: hasNext()Z
   * 2 Strong Mutation 0: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.key()S:114 - DeleteField: iterLgnu/trove/iterator/TShortByteIterator;
   * 3 Strong Mutation 2: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.value()B:115 - DeleteField: iterLgnu/trove/iterator/TShortByteIterator;
   * 4 Strong Mutation 4: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.advance()V:116 - DeleteField: iterLgnu/trove/iterator/TShortByteIterator;
   * 5 Strong Mutation 5: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.advance()V:116 - DeleteStatement: advance()V
   * 6 Strong Mutation 6: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap$1.hasNext()Z:117 - DeleteField: iterLgnu/trove/iterator/TShortByteIterator;
   * 7 Strong Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.size()I:63 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 8 Strong Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.size()I:63 - DeleteStatement: size()I
   */

  @Test
  public void test27()  throws Throwable  {
      short[] shortArray0 = new short[10];
      byte[] byteArray0 = new byte[2];
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(shortArray0, byteArray0);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      TShortByteHashMap tShortByteHashMap1 = new TShortByteHashMap((TShortByteMap) tUnmodifiableShortByteMap0);
      assertEquals(1, tUnmodifiableShortByteMap0.size());
      assertEquals(false, tShortByteHashMap1.isEmpty());
  }

  //Test case number: 28
  /*
   * 12 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keySet()Lgnu/trove/set/TShortSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keySet()Lgnu/trove/set/TShortSet;:79 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keySet()Lgnu/trove/set/TShortSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TShortSet;
   * 4 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keySet()Lgnu/trove/set/TShortSet;:80 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 5 Strong Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keySet()Lgnu/trove/set/TShortSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TShortSet;)Lgnu/trove/set/TShortSet;
   * 6 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keySet()Lgnu/trove/set/TShortSet;:81 - DeleteField: keySetLgnu/trove/set/TShortSet;
   * 7 Strong Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keySet()Lgnu/trove/set/TShortSet;:79 - ReplaceComparisonOperator != null -> = null
   * 8 Strong Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keySet()Lgnu/trove/set/TShortSet;:80 - DeleteStatement: keySet()Lgnu/trove/set/TShortSet;
   * 9 Strong Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keySet()Lgnu/trove/set/TShortSet;:80 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 10 Strong Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keySet()Lgnu/trove/set/TShortSet;:80 - DeleteStatement: unmodifiableSet(Lgnu/trove/set/TShortSet;)Lgnu/trove/set/TShortSet;
   * 11 Strong Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keySet()Lgnu/trove/set/TShortSet;:81 - DeleteField: keySetLgnu/trove/set/TShortSet;
   * 12 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.keySet()Lgnu/trove/set/TShortSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap(1202);
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      TUnmodifiableShortSet tUnmodifiableShortSet0 = (TUnmodifiableShortSet)tUnmodifiableShortByteMap0.keySet();
      assertNotNull(tUnmodifiableShortSet0);
      
      TUnmodifiableShortSet tUnmodifiableShortSet1 = (TUnmodifiableShortSet)tUnmodifiableShortByteMap0.keySet();
      assertSame(tUnmodifiableShortSet1, tUnmodifiableShortSet0);
  }

  //Test case number: 29
  /*
   * 13 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.valueCollection()Lgnu/trove/TByteCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 Strong Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.<init>(Lgnu/trove/map/TShortByteMap;)V:58 - ReplaceComparisonOperator != null -> = null
   * 3 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.valueCollection()Lgnu/trove/TByteCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 4 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TByteCollection;)Lgnu/trove/TByteCollection;
   * 5 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.valueCollection()Lgnu/trove/TByteCollection;:89 - DeleteField: valuesLgnu/trove/TByteCollection;
   * 6 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 7 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TByteCollection;
   * 8 Strong Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.valueCollection()Lgnu/trove/TByteCollection;:87 - ReplaceComparisonOperator != null -> = null
   * 9 Strong Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TByteCollection;)Lgnu/trove/TByteCollection;
   * 10 Strong Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.valueCollection()Lgnu/trove/TByteCollection;:89 - DeleteField: valuesLgnu/trove/TByteCollection;
   * 11 Strong Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteField: mLgnu/trove/map/TShortByteMap;
   * 12 Strong Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.valueCollection()Lgnu/trove/TByteCollection;:88 - DeleteStatement: valueCollection()Lgnu/trove/TByteCollection;
   * 13 gnu.trove.impl.unmodifiable.TUnmodifiableShortByteMap.valueCollection()Lgnu/trove/TByteCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TShortByteHashMap tShortByteHashMap0 = new TShortByteHashMap((int) (short) (-1776), (float) (short) (-1776));
      TUnmodifiableShortByteMap tUnmodifiableShortByteMap0 = new TUnmodifiableShortByteMap((TShortByteMap) tShortByteHashMap0);
      TUnmodifiableByteCollection tUnmodifiableByteCollection0 = (TUnmodifiableByteCollection)tUnmodifiableShortByteMap0.valueCollection();
      assertNotNull(tUnmodifiableByteCollection0);
      
      TUnmodifiableByteCollection tUnmodifiableByteCollection1 = (TUnmodifiableByteCollection)tUnmodifiableShortByteMap0.valueCollection();
      assertSame(tUnmodifiableByteCollection1, tUnmodifiableByteCollection0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharObjectMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableCharSet;
import gnu.trove.map.TCharObjectMap;
import gnu.trove.map.hash.TCharObjectHashMap;
import gnu.trove.procedure.TCharProcedure;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Collection;
import java.util.Locale;
import java.util.NoSuchElementException;
import java.util.StringTokenizer;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableCharObjectMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      int int0 = 1131;
      TCharObjectHashMap<Character> tCharObjectHashMap0 = new TCharObjectHashMap<Character>(int0);
      TUnmodifiableCharObjectMap<Character> tUnmodifiableCharObjectMap0 = new TUnmodifiableCharObjectMap<Character>((TCharObjectMap<Character>) tCharObjectHashMap0);
      int int1 = 0;
      char char0 = '$';
      TCharObjectHashMap<String> tCharObjectHashMap1 = new TCharObjectHashMap<String>(int1, (float) int1, char0);
      TUnmodifiableCharObjectMap<String> tUnmodifiableCharObjectMap1 = new TUnmodifiableCharObjectMap<String>((TCharObjectMap<String>) tCharObjectHashMap1);
      int int2 = 0;
      TCharObjectHashMap<Character> tCharObjectHashMap2 = new TCharObjectHashMap<Character>(int2);
      tUnmodifiableCharObjectMap1.iterator();
      TUnmodifiableCharObjectMap<Character> tUnmodifiableCharObjectMap2 = new TUnmodifiableCharObjectMap<Character>((TCharObjectMap<Character>) tCharObjectHashMap2);
      TCharProcedure tCharProcedure0 = null;
      boolean boolean0 = tUnmodifiableCharObjectMap2.forEachKey(tCharProcedure0);
      TUnmodifiableCharSet tUnmodifiableCharSet0 = (TUnmodifiableCharSet)tUnmodifiableCharObjectMap1.keySet();
      assertNotNull(tUnmodifiableCharSet0);
      
      tCharObjectHashMap1.keySet();
      TCharObjectHashMap<Integer> tCharObjectHashMap3 = new TCharObjectHashMap<Integer>();
      boolean boolean1 = tUnmodifiableCharObjectMap1.isEmpty();
      assertTrue(boolean1 == boolean0);
      
      tCharObjectHashMap3.getNoEntryValue();
      tCharObjectHashMap3._states = tCharObjectHashMap1._states;
      TCharObjectHashMap<Object> tCharObjectHashMap4 = new TCharObjectHashMap<Object>();
      String string0 = "D9pXx{8R+7TsE.";
      String string1 = tUnmodifiableCharObjectMap1.toString();
      assertNotNull(string1);
      
      // Undeclared exception!
      try {
        tUnmodifiableCharObjectMap1.put(char0, string0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TCharObjectMap<Character> tCharObjectMap0 = null;
      TUnmodifiableCharObjectMap<Character> tUnmodifiableCharObjectMap0 = null;
      try {
        tUnmodifiableCharObjectMap0 = new TUnmodifiableCharObjectMap<Character>(tCharObjectMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int int0 = 0;
      float float0 = (-1213.1267F);
      char char0 = '<';
      TCharObjectHashMap<Integer> tCharObjectHashMap0 = new TCharObjectHashMap<Integer>(int0, float0, char0);
      TUnmodifiableCharObjectMap<Integer> tUnmodifiableCharObjectMap0 = new TUnmodifiableCharObjectMap<Integer>((TCharObjectMap<Integer>) tCharObjectHashMap0);
      assertEquals(true, tUnmodifiableCharObjectMap0.isEmpty());
  }

  @Test
  public void test3()  throws Throwable  {
      TCharObjectHashMap<String> tCharObjectHashMap0 = new TCharObjectHashMap<String>();
      tCharObjectHashMap0.compact();
      TUnmodifiableCharObjectMap<String> tUnmodifiableCharObjectMap0 = new TUnmodifiableCharObjectMap<String>((TCharObjectMap<String>) tCharObjectHashMap0);
      tUnmodifiableCharObjectMap0.keySet();
      tCharObjectHashMap0.trimToSize();
      int int0 = 0;
      TCharObjectMap<Integer> tCharObjectMap0 = null;
      TCharObjectHashMap<Object> tCharObjectHashMap1 = new TCharObjectHashMap<Object>();
      TUnmodifiableCharObjectMap<Object> tUnmodifiableCharObjectMap1 = new TUnmodifiableCharObjectMap<Object>((TCharObjectMap<Object>) tCharObjectHashMap1);
      char char0 = '=';
      String string0 = "";
      StringTokenizer stringTokenizer0 = new StringTokenizer(string0, string0);
      // Undeclared exception!
      try {
        stringTokenizer0.nextToken();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TCharObjectMap<String> tCharObjectMap0 = null;
      TCharObjectHashMap<Integer> tCharObjectHashMap0 = new TCharObjectHashMap<Integer>();
      TUnmodifiableCharObjectMap<Integer> tUnmodifiableCharObjectMap0 = new TUnmodifiableCharObjectMap<Integer>((TCharObjectMap<Integer>) tCharObjectHashMap0);
      tUnmodifiableCharObjectMap0.valueCollection();
      TUnmodifiableCharObjectMap<String> tUnmodifiableCharObjectMap1 = null;
      try {
        tUnmodifiableCharObjectMap1 = new TUnmodifiableCharObjectMap<String>(tCharObjectMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = 0;
      TCharObjectHashMap<Object> tCharObjectHashMap0 = new TCharObjectHashMap<Object>(int0);
      TUnmodifiableCharObjectMap<Object> tUnmodifiableCharObjectMap0 = new TUnmodifiableCharObjectMap<Object>((TCharObjectMap<Object>) tCharObjectHashMap0);
      TUnmodifiableCharObjectMap<Object> tUnmodifiableCharObjectMap1 = new TUnmodifiableCharObjectMap<Object>((TCharObjectMap<Object>) tUnmodifiableCharObjectMap0);
      String string0 = ".#-&E$4x7?%";
      TCharObjectHashMap<String> tCharObjectHashMap1 = new TCharObjectHashMap<String>();
      TUnmodifiableCharObjectMap<String> tUnmodifiableCharObjectMap2 = new TUnmodifiableCharObjectMap<String>((TCharObjectMap<String>) tCharObjectHashMap1);
      tUnmodifiableCharObjectMap2.iterator();
      Locale locale0 = Locale.forLanguageTag(string0);
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      String string1 = locale0.getDisplayLanguage(locale1);
      tUnmodifiableCharObjectMap1.equals((Object) string1);
      TCharObjectMap<Object> tCharObjectMap0 = null;
      TUnmodifiableCharObjectMap<Object> tUnmodifiableCharObjectMap3 = null;
      try {
        tUnmodifiableCharObjectMap3 = new TUnmodifiableCharObjectMap<Object>(tCharObjectMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = 474;
      float float0 = (-142.07669F);
      char char0 = 'o';
      char char1 = '-';
      TCharObjectHashMap<String> tCharObjectHashMap0 = new TCharObjectHashMap<String>((int) char0);
      TUnmodifiableCharObjectMap<String> tUnmodifiableCharObjectMap0 = new TUnmodifiableCharObjectMap<String>((TCharObjectMap<String>) tCharObjectHashMap0);
      char char2 = '$';
      tUnmodifiableCharObjectMap0.get(char2);
      TCharObjectHashMap<Object> tCharObjectHashMap1 = new TCharObjectHashMap<Object>(int0, (float) char0, char1);
      TUnmodifiableCharObjectMap<Object> tUnmodifiableCharObjectMap1 = new TUnmodifiableCharObjectMap<Object>((TCharObjectMap<Object>) tCharObjectHashMap1);
      TCharObjectHashMap<Object> tCharObjectHashMap2 = new TCharObjectHashMap<Object>(int0, float0, char0);
      TUnmodifiableCharObjectMap<Object> tUnmodifiableCharObjectMap2 = new TUnmodifiableCharObjectMap<Object>((TCharObjectMap<Object>) tCharObjectHashMap2);
      tCharObjectHashMap1._states = tCharObjectHashMap2._states;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      String string0 = "";
      try {
        byteArrayOutputStream0.toString(string0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
         //
         // 
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = 1075;
      float float0 = 1.4E-45F;
      char char0 = ':';
      TCharObjectHashMap<String> tCharObjectHashMap0 = new TCharObjectHashMap<String>(int0, float0, char0);
      TUnmodifiableCharObjectMap<String> tUnmodifiableCharObjectMap0 = new TUnmodifiableCharObjectMap<String>((TCharObjectMap<String>) tCharObjectHashMap0);
      String string0 = "";
      String string1 = "vX=/SM`Yxf^7P]";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0, string0, string0, int0, string0, string1, string1);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://@:1075?vX=/SM%60Yxf%5E7P]#vX=/SM%60Yxf%5E7P]
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int int0 = 1494;
      TCharObjectHashMap<Object> tCharObjectHashMap0 = new TCharObjectHashMap<Object>(int0, int0);
      TUnmodifiableCharObjectMap<Object> tUnmodifiableCharObjectMap0 = new TUnmodifiableCharObjectMap<Object>((TCharObjectMap<Object>) tCharObjectHashMap0);
      Object object0 = null;
      boolean boolean0 = tUnmodifiableCharObjectMap0.equals(object0);
      assertEquals(false, boolean0);
      
      TUnmodifiableCharObjectMap<Object> tUnmodifiableCharObjectMap1 = new TUnmodifiableCharObjectMap<Object>((TCharObjectMap<Object>) tCharObjectHashMap0);
      assertTrue(tUnmodifiableCharObjectMap1.equals(tUnmodifiableCharObjectMap0));
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = 521;
      char char0 = '~';
      TCharObjectHashMap<Integer> tCharObjectHashMap0 = new TCharObjectHashMap<Integer>(int0, (float) int0, char0);
      int int1 = 98;
      TCharObjectHashMap<Object> tCharObjectHashMap1 = new TCharObjectHashMap<Object>(int1);
      TUnmodifiableCharObjectMap<Object> tUnmodifiableCharObjectMap0 = new TUnmodifiableCharObjectMap<Object>((TCharObjectMap<Object>) tCharObjectHashMap1);
      Integer[] integerArray0 = new Integer[9];
      integerArray0[0] = (Integer) int1;
      integerArray0[1] = (Integer) int1;
      integerArray0[2] = (Integer) int1;
      integerArray0[3] = (Integer) int1;
      TCharObjectMap<String> tCharObjectMap0 = null;
      TUnmodifiableCharObjectMap<String> tUnmodifiableCharObjectMap1 = null;
      try {
        tUnmodifiableCharObjectMap1 = new TUnmodifiableCharObjectMap<String>(tCharObjectMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = 940;
      float float0 = 0.0F;
      TCharObjectHashMap<Character> tCharObjectHashMap0 = new TCharObjectHashMap<Character>(int0, float0);
      TUnmodifiableCharObjectMap<Character> tUnmodifiableCharObjectMap0 = new TUnmodifiableCharObjectMap<Character>((TCharObjectMap<Character>) tCharObjectHashMap0);
      char char0 = '5';
      tUnmodifiableCharObjectMap0.get(char0);
      TCharObjectMap<Object> tCharObjectMap0 = null;
      TUnmodifiableCharObjectMap<Object> tUnmodifiableCharObjectMap1 = null;
      try {
        tUnmodifiableCharObjectMap1 = new TUnmodifiableCharObjectMap<Object>(tCharObjectMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 1271;
      float float0 = (-345.74893F);
      TCharObjectHashMap<String> tCharObjectHashMap0 = new TCharObjectHashMap<String>(int0, float0);
      TUnmodifiableCharObjectMap<String> tUnmodifiableCharObjectMap0 = new TUnmodifiableCharObjectMap<String>((TCharObjectMap<String>) tCharObjectHashMap0);
      Object[] objectArray0 = new Object[10];
      objectArray0[0] = (Object) float0;
      objectArray0[1] = (Object) tCharObjectHashMap0;
      objectArray0[2] = (Object) int0;
      objectArray0[3] = (Object) int0;
      objectArray0[4] = (Object) tUnmodifiableCharObjectMap0;
      objectArray0[5] = (Object) float0;
      objectArray0[6] = (Object) int0;
      objectArray0[7] = (Object) int0;
      objectArray0[8] = (Object) float0;
      objectArray0[9] = (Object) int0;
      ToObjectArrayProceedure<Object> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Object>(objectArray0);
      tUnmodifiableCharObjectMap0.forEachValue((TObjectProcedure<? super String>) toObjectArrayProceedure0);
      TCharObjectHashMap<Object> tCharObjectHashMap1 = new TCharObjectHashMap<Object>();
      TCharObjectHashMap<Object> tCharObjectHashMap2 = new TCharObjectHashMap<Object>((TCharObjectMap<?>) tCharObjectHashMap1);
      TUnmodifiableCharObjectMap<Object> tUnmodifiableCharObjectMap1 = new TUnmodifiableCharObjectMap<Object>((TCharObjectMap<Object>) tCharObjectHashMap2);
      char char0 = '!';
      // Undeclared exception!
      try {
        tUnmodifiableCharObjectMap1.remove(char0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 259;
      float float0 = 150.0214F;
      char char0 = 'q';
      TCharObjectHashMap<Character> tCharObjectHashMap0 = new TCharObjectHashMap<Character>(int0, float0, char0);
      TUnmodifiableCharObjectMap<Character> tUnmodifiableCharObjectMap0 = new TUnmodifiableCharObjectMap<Character>((TCharObjectMap<Character>) tCharObjectHashMap0);
      TUnmodifiableCharObjectMap<Character> tUnmodifiableCharObjectMap1 = new TUnmodifiableCharObjectMap<Character>((TCharObjectMap<Character>) tUnmodifiableCharObjectMap0);
      Character[] characterArray0 = new Character[10];
      characterArray0[0] = (Character) char0;
      characterArray0[1] = (Character) char0;
      characterArray0[2] = (Character) char0;
      characterArray0[3] = (Character) char0;
      characterArray0[4] = (Character) char0;
      characterArray0[5] = (Character) char0;
      characterArray0[6] = (Character) char0;
      characterArray0[7] = (Character) char0;
      characterArray0[8] = (Character) char0;
      characterArray0[9] = (Character) char0;
      tUnmodifiableCharObjectMap1.values(characterArray0);
      int int1 = 1;
      TCharObjectHashMap<Object> tCharObjectHashMap1 = new TCharObjectHashMap<Object>(int1, int1);
      TUnmodifiableCharObjectMap<Object> tUnmodifiableCharObjectMap2 = new TUnmodifiableCharObjectMap<Object>((TCharObjectMap<Object>) tCharObjectHashMap1);
      Collection<Object> collection0 = tUnmodifiableCharObjectMap2.valueCollection();
      assertEquals(0, collection0.size());
  }

  @Test
  public void test13()  throws Throwable  {
      int int0 = 707;
      float float0 = (-1413.6134F);
      TCharObjectHashMap<Character> tCharObjectHashMap0 = new TCharObjectHashMap<Character>(int0, float0);
      TUnmodifiableCharObjectMap<Character> tUnmodifiableCharObjectMap0 = new TUnmodifiableCharObjectMap<Character>((TCharObjectMap<Character>) tCharObjectHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableCharObjectMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TCharObjectHashMap<Integer> tCharObjectHashMap0 = new TCharObjectHashMap<Integer>();
      TUnmodifiableCharObjectMap<Integer> tUnmodifiableCharObjectMap0 = new TUnmodifiableCharObjectMap<Integer>((TCharObjectMap<Integer>) tCharObjectHashMap0);
      TUnmodifiableCharObjectMap<Integer> tUnmodifiableCharObjectMap1 = new TUnmodifiableCharObjectMap<Integer>((TCharObjectMap<Integer>) tUnmodifiableCharObjectMap0);
      String string0 = "";
      File file0 = new File(string0, string0);
      File file1 = file0.getCanonicalFile();
      File file2 = new File(file1, string0);
      String string1 = file2.getAbsolutePath();
      tUnmodifiableCharObjectMap1.equals((Object) string1);
      int int0 = 0;
      TCharObjectMap<String> tCharObjectMap0 = null;
      TUnmodifiableCharObjectMap<String> tUnmodifiableCharObjectMap2 = null;
      try {
        tUnmodifiableCharObjectMap2 = new TUnmodifiableCharObjectMap<String>(tCharObjectMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TCharObjectHashMap<Object> tCharObjectHashMap0 = new TCharObjectHashMap<Object>();
      TUnmodifiableCharObjectMap<Object> tUnmodifiableCharObjectMap0 = new TUnmodifiableCharObjectMap<Object>((TCharObjectMap<Object>) tCharObjectHashMap0);
      char[] charArray0 = tUnmodifiableCharObjectMap0.keys(tCharObjectHashMap0._set);
      assertNotNull(charArray0);
  }
}

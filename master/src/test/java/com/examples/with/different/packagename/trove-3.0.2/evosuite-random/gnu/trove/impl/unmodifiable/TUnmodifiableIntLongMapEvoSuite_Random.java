/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntLongMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableIntSet;
import gnu.trove.map.TIntLongMap;
import gnu.trove.map.hash.TIntLongHashMap;
import gnu.trove.procedure.TLongProcedure;
import java.util.HashMap;
import java.util.Locale;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableIntLongMapEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap0 = new TUnmodifiableIntLongMap((TIntLongMap) tIntLongHashMap0);
      TLongProcedure tLongProcedure0 = null;
      tUnmodifiableIntLongMap0.forEachValue(tLongProcedure0);
      long[] longArray0 = new long[5];
      long long0 = (-1L);
      longArray0[0] = long0;
      long long1 = (-1L);
      longArray0[1] = long1;
      long long2 = 0L;
      longArray0[2] = long2;
      long long3 = 0L;
      longArray0[3] = long3;
      long long4 = 647L;
      longArray0[4] = long4;
      tUnmodifiableIntLongMap0.values(longArray0);
      int int0 = (-601);
      TIntLongHashMap tIntLongHashMap1 = new TIntLongHashMap(int0);
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap1 = new TUnmodifiableIntLongMap((TIntLongMap) tIntLongHashMap1);
      // Undeclared exception!
      try {
        tUnmodifiableIntLongMap1.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap0 = new TUnmodifiableIntLongMap((TIntLongMap) tIntLongHashMap0);
      int int0 = tUnmodifiableIntLongMap0.size();
      long[] longArray0 = new long[6];
      tUnmodifiableIntLongMap0.containsKey(int0);
      longArray0[0] = (long) int0;
      longArray0[1] = (long) int0;
      longArray0[2] = (long) int0;
      longArray0[3] = (long) int0;
      longArray0[4] = (long) int0;
      longArray0[5] = (long) int0;
      tUnmodifiableIntLongMap0.values(longArray0);
      int int1 = (-1675);
      tUnmodifiableIntLongMap0.toString();
      float float0 = (-828.7861F);
      TIntLongHashMap tIntLongHashMap1 = new TIntLongHashMap(int1, float0);
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap1 = new TUnmodifiableIntLongMap((TIntLongMap) tIntLongHashMap1);
      tUnmodifiableIntLongMap1.toString();
      tIntLongHashMap1.getNoEntryKey();
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap2 = new TUnmodifiableIntLongMap((TIntLongMap) tUnmodifiableIntLongMap1);
      int int2 = 1263;
      long long0 = 0L;
      // Undeclared exception!
      try {
        tUnmodifiableIntLongMap2.putIfAbsent(int2, long0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      int[] intArray0 = new int[8];
      int int0 = 422;
      intArray0[0] = int0;
      int int1 = 139;
      intArray0[1] = int1;
      int int2 = 943;
      intArray0[2] = int2;
      int int3 = 1549;
      intArray0[3] = int3;
      int int4 = (-1156);
      intArray0[4] = int4;
      int int5 = 189;
      intArray0[5] = int5;
      int int6 = 0;
      intArray0[6] = int6;
      int int7 = 2034;
      intArray0[7] = int7;
      long[] longArray0 = new long[5];
      longArray0[0] = (long) intArray0[2];
      longArray0[1] = (long) intArray0[0];
      longArray0[2] = (long) int0;
      longArray0[3] = (long) intArray0[4];
      longArray0[4] = (long) int5;
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(intArray0, longArray0);
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap0 = new TUnmodifiableIntLongMap((TIntLongMap) tIntLongHashMap0);
      int int8 = 0;
      longArray0[0] = (long) intArray0[0];
      longArray0[1] = (long) int4;
      longArray0[2] = (long) int5;
      longArray0[3] = (long) int4;
      long long0 = (-803L);
      longArray0[4] = long0;
      tUnmodifiableIntLongMap0.get(int8);
      int int9 = 85;
      // Undeclared exception!
      try {
        tUnmodifiableIntLongMap0.increment(int7);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      int[] intArray0 = new int[8];
      int int0 = 1356;
      intArray0[0] = int0;
      int int1 = 625;
      intArray0[1] = int1;
      int int2 = (-881);
      intArray0[2] = int2;
      int int3 = 0;
      intArray0[3] = int3;
      int int4 = 0;
      intArray0[4] = int4;
      int int5 = 1416;
      intArray0[5] = int5;
      int int6 = 0;
      intArray0[6] = int6;
      int int7 = 0;
      intArray0[7] = int7;
      long[] longArray0 = new long[2];
      longArray0[0] = (long) intArray0[7];
      long long0 = 1153L;
      longArray0[1] = long0;
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(intArray0, longArray0);
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap0 = new TUnmodifiableIntLongMap((TIntLongMap) tIntLongHashMap0);
      long long1 = (-588L);
      // Undeclared exception!
      try {
        tUnmodifiableIntLongMap0.adjustValue(int5, long1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      int[] intArray0 = new int[1];
      int int0 = 930;
      intArray0[0] = int0;
      int int1 = 6;
      intArray0[0] = int1;
      intArray0[0] = int1;
      long[] longArray0 = new long[10];
      longArray0[0] = (long) intArray0[0];
      longArray0[1] = (long) int1;
      long long0 = 0L;
      longArray0[2] = long0;
      longArray0[3] = (long) int1;
      longArray0[4] = (long) int1;
      longArray0[5] = (long) int1;
      longArray0[6] = (long) intArray0[0];
      longArray0[7] = (long) intArray0[0];
      longArray0[8] = (long) int1;
      int int2 = 1;
      float float0 = (-1.0F);
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(int2, float0);
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap0 = new TUnmodifiableIntLongMap((TIntLongMap) tIntLongHashMap0);
      longArray0[9] = (long) int1;
      TIntLongHashMap tIntLongHashMap1 = new TIntLongHashMap(intArray0, longArray0);
      tIntLongHashMap1.capacity();
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap1 = new TUnmodifiableIntLongMap((TIntLongMap) tIntLongHashMap1);
      int int3 = 0;
      long long1 = 1084L;
      tIntLongHashMap0.adjustOrPutValue(int3, long1, long1);
      boolean boolean0 = tUnmodifiableIntLongMap1.isEmpty();
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      int int0 = (-1);
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap0 = new TUnmodifiableIntLongMap((TIntLongMap) tIntLongHashMap0);
      long[] longArray0 = new long[7];
      longArray0[0] = (long) int0;
      longArray0[1] = (long) int0;
      longArray0[2] = (long) int0;
      longArray0[3] = (long) int0;
      longArray0[4] = (long) int0;
      longArray0[5] = (long) int0;
      longArray0[6] = (long) int0;
      TIntLongHashMap tIntLongHashMap1 = new TIntLongHashMap(tIntLongHashMap0._set, longArray0);
      // Undeclared exception!
      try {
        tUnmodifiableIntLongMap0.putAll((TIntLongMap) tIntLongHashMap1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = (-1);
      TIntLongMap tIntLongMap0 = null;
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap0 = null;
      try {
        tUnmodifiableIntLongMap0 = new TUnmodifiableIntLongMap(tIntLongMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = 0;
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap();
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap0 = new TUnmodifiableIntLongMap((TIntLongMap) tIntLongHashMap0);
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap1 = new TUnmodifiableIntLongMap((TIntLongMap) tIntLongHashMap0);
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap2 = new TUnmodifiableIntLongMap((TIntLongMap) tUnmodifiableIntLongMap1);
      // Undeclared exception!
      try {
        tUnmodifiableIntLongMap2.increment(int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      int[] intArray0 = new int[8];
      int int0 = (-1871);
      intArray0[0] = int0;
      int int1 = 1;
      intArray0[1] = int1;
      int int2 = 856;
      intArray0[2] = int2;
      int int3 = 1337;
      intArray0[3] = int3;
      int int4 = (-823);
      intArray0[4] = int4;
      int int5 = 8963;
      intArray0[5] = int5;
      int int6 = (-1859);
      intArray0[6] = int6;
      int int7 = 0;
      intArray0[7] = int7;
      long[] longArray0 = new long[6];
      longArray0[0] = (long) intArray0[2];
      longArray0[1] = (long) int4;
      longArray0[2] = (long) int3;
      longArray0[3] = (long) intArray0[2];
      longArray0[4] = (long) int3;
      longArray0[5] = (long) intArray0[6];
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(intArray0, longArray0);
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap0 = new TUnmodifiableIntLongMap((TIntLongMap) tIntLongHashMap0);
      TUnmodifiableIntSet tUnmodifiableIntSet0 = (TUnmodifiableIntSet)tUnmodifiableIntLongMap0.keySet();
      assertEquals(false, tUnmodifiableIntSet0.isEmpty());
  }

  @Test
  public void test9()  throws Throwable  {
      int int0 = (-1524);
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(int0, int0, int0, int0);
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap0 = new TUnmodifiableIntLongMap((TIntLongMap) tIntLongHashMap0);
      HashMap<Object, Long> hashMap0 = new HashMap<Object, Long>();
      String string0 = hashMap0.toString();
      boolean boolean0 = tUnmodifiableIntLongMap0.equals((Object) string0);
      assertEquals(false, boolean0);
      
      Locale locale0 = Locale.JAPAN;
      String string1 = locale0.getCountry();
      Long long0 = null;
      hashMap0.put((Object) string1, long0);
      int int1 = (-1091);
      boolean boolean1 = tUnmodifiableIntLongMap0.containsKey(int1);
      assertTrue(boolean1 == boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = 0;
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(int0);
      TIntLongHashMap tIntLongHashMap1 = new TIntLongHashMap((TIntLongMap) tIntLongHashMap0);
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap0 = new TUnmodifiableIntLongMap((TIntLongMap) tIntLongHashMap1);
      tUnmodifiableIntLongMap0.keySet();
      TIntLongHashMap tIntLongHashMap2 = new TIntLongHashMap();
      Object object0 = null;
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap1 = new TUnmodifiableIntLongMap((TIntLongMap) tIntLongHashMap2);
      int int1 = 1927;
      tUnmodifiableIntLongMap1.containsKey(int1);
      tIntLongHashMap2.equals(object0);
      tUnmodifiableIntLongMap1.values();
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap2 = new TUnmodifiableIntLongMap((TIntLongMap) tIntLongHashMap2);
      tUnmodifiableIntLongMap1.getNoEntryValue();
      // Undeclared exception!
      try {
        tUnmodifiableIntLongMap2.putAll((TIntLongMap) tIntLongHashMap2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[8];
      int int0 = 1241;
      intArray0[0] = int0;
      int int1 = 1376;
      intArray0[1] = int1;
      int int2 = (-1261);
      intArray0[2] = int2;
      int int3 = (-887);
      intArray0[3] = int3;
      int int4 = 878;
      intArray0[4] = int4;
      int int5 = 252;
      intArray0[5] = int5;
      int int6 = 1;
      intArray0[6] = int6;
      int int7 = (-1238);
      intArray0[7] = int7;
      long[] longArray0 = new long[8];
      longArray0[0] = (long) intArray0[4];
      longArray0[1] = (long) intArray0[6];
      longArray0[2] = (long) intArray0[1];
      longArray0[3] = (long) intArray0[4];
      longArray0[4] = (long) int7;
      long long0 = 0L;
      longArray0[5] = long0;
      longArray0[6] = (long) intArray0[0];
      longArray0[7] = (long) intArray0[4];
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(intArray0, longArray0);
      TIntLongHashMap tIntLongHashMap1 = new TIntLongHashMap((TIntLongMap) tIntLongHashMap0);
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap0 = new TUnmodifiableIntLongMap((TIntLongMap) tIntLongHashMap1);
      boolean boolean0 = tUnmodifiableIntLongMap0.isEmpty();
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = (-1);
      float float0 = 0.0F;
      int int1 = (-908);
      int int2 = 0;
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(int2, int1);
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap0 = new TUnmodifiableIntLongMap((TIntLongMap) tIntLongHashMap0);
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap1 = new TUnmodifiableIntLongMap((TIntLongMap) tUnmodifiableIntLongMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntLongMap1.putAll((TIntLongMap) tUnmodifiableIntLongMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[1];
      int int0 = (-57);
      intArray0[0] = int0;
      long[] longArray0 = new long[10];
      longArray0[0] = (long) int0;
      longArray0[1] = (long) int0;
      longArray0[2] = (long) int0;
      longArray0[3] = (long) int0;
      longArray0[4] = (long) intArray0[0];
      long long0 = 0L;
      longArray0[5] = long0;
      longArray0[6] = (long) int0;
      longArray0[7] = (long) int0;
      longArray0[8] = (long) int0;
      long long1 = (-1L);
      longArray0[9] = long1;
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(intArray0, longArray0);
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap0 = new TUnmodifiableIntLongMap((TIntLongMap) tIntLongHashMap0);
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap1 = new TUnmodifiableIntLongMap((TIntLongMap) tUnmodifiableIntLongMap0);
      int int1 = 0;
      boolean boolean0 = tUnmodifiableIntLongMap1.containsKey(int1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      int int0 = (-1022);
      float float0 = (-941.06885F);
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(int0, float0);
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap0 = new TUnmodifiableIntLongMap((TIntLongMap) tIntLongHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableIntLongMap0.putAll((TIntLongMap) tIntLongHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      int int0 = 10;
      float float0 = 0.0F;
      int int1 = 103;
      long long0 = 1629L;
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(int0, float0, int1, long0);
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap0 = new TUnmodifiableIntLongMap((TIntLongMap) tIntLongHashMap0);
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap1 = new TUnmodifiableIntLongMap((TIntLongMap) tUnmodifiableIntLongMap0);
      long long1 = 1267L;
      tUnmodifiableIntLongMap1.hashCode();
      // Undeclared exception!
      try {
        tUnmodifiableIntLongMap1.adjustOrPutValue(int1, (long) int1, long1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      TIntLongMap tIntLongMap0 = null;
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap0 = null;
      try {
        tUnmodifiableIntLongMap0 = new TUnmodifiableIntLongMap(tIntLongMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[10];
      int int0 = 0;
      intArray0[0] = int0;
      int int1 = 39;
      intArray0[1] = int1;
      int int2 = 0;
      intArray0[2] = int2;
      int int3 = 1984;
      intArray0[3] = int3;
      int int4 = 10949;
      intArray0[4] = int4;
      int int5 = (-1);
      intArray0[5] = int5;
      int int6 = 0;
      intArray0[6] = int6;
      int int7 = (-1690);
      intArray0[7] = int7;
      int int8 = 1999;
      intArray0[8] = int8;
      int int9 = (-951);
      intArray0[9] = int9;
      long[] longArray0 = new long[3];
      longArray0[0] = (long) int9;
      longArray0[1] = (long) int4;
      long long0 = 0L;
      longArray0[2] = long0;
      TIntLongHashMap tIntLongHashMap0 = new TIntLongHashMap(intArray0, longArray0);
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap0 = new TUnmodifiableIntLongMap((TIntLongMap) tIntLongHashMap0);
      int[] intArray1 = tUnmodifiableIntLongMap0.keys();
      assertNotSame(intArray0, intArray1);
  }

  @Test
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[6];
      int int0 = 0;
      intArray0[0] = int0;
      intArray0[1] = int0;
      intArray0[2] = int0;
      intArray0[0] = int0;
      intArray0[1] = int0;
      intArray0[2] = int0;
      intArray0[3] = int0;
      intArray0[4] = int0;
      intArray0[5] = int0;
      intArray0[3] = int0;
      intArray0[4] = int0;
      intArray0[5] = int0;
      int int1 = 0;
      intArray0[0] = int1;
      int int2 = 1;
      intArray0[1] = int2;
      int int3 = 0;
      intArray0[2] = int3;
      int int4 = 1387;
      intArray0[3] = int4;
      int int5 = 855;
      intArray0[4] = int5;
      TIntLongMap tIntLongMap0 = null;
      TUnmodifiableIntLongMap tUnmodifiableIntLongMap0 = null;
      try {
        tUnmodifiableIntLongMap0 = new TUnmodifiableIntLongMap(tIntLongMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

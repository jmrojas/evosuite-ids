/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TByteFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableByteCollection;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatSet;
import gnu.trove.map.TFloatByteMap;
import gnu.trove.map.hash.TFloatByteHashMap;
import gnu.trove.procedure.TByteProcedure;
import gnu.trove.procedure.TFloatByteProcedure;
import gnu.trove.procedure.TFloatProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableFloatByteMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.toString()Ljava/lang/String;: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.<init>(Lgnu/trove/map/TFloatByteMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      String string0 = tUnmodifiableFloatByteMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.transformValues(Lgnu/trove/function/TByteFunction;)V: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      float[] floatArray0 = new float[10];
      byte[] byteArray0 = new byte[2];
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(floatArray0, byteArray0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatByteMap0.transformValues((TByteFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.getNoEntryValue()B: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(128);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      byte byte0 = tUnmodifiableFloatByteMap0.getNoEntryValue();
      assertEquals((byte)0, byte0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.forEachKey(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap((-967), (-967));
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      boolean boolean0 = tUnmodifiableFloatByteMap0.forEachKey((TFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.putAll(Lgnu/trove/map/TFloatByteMap;)V: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap((-1), (-1));
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatByteMap0.putAll((TFloatByteMap) tFloatByteHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(557, (float) 557, (float) 557, (byte) (-24));
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      HashMap<Float, Byte> hashMap0 = new HashMap<Float, Byte>();
      // Undeclared exception!
      try {
        tUnmodifiableFloatByteMap0.putAll((Map<? extends Float, ? extends Byte>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.values()[B: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(128);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      byte[] byteArray0 = tUnmodifiableFloatByteMap0.values();
      assertNotNull(byteArray0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.containsValue(B)Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap((-1), (-1));
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      boolean boolean0 = tUnmodifiableFloatByteMap0.containsValue((byte)0);
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.hashCode()I: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      int int0 = tUnmodifiableFloatByteMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.clear()V: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(1);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatByteMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 7 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.iterator()Lgnu/trove/iterator/TFloatByteIterator;: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.size()I: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableFloatByteMap;)V: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.hasNext()Z: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.key()F: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.advance()V: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap$1.value()B: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      float[] floatArray0 = new float[4];
      byte[] byteArray0 = new byte[1];
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(floatArray0, byteArray0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      TFloatByteHashMap tFloatByteHashMap1 = new TFloatByteHashMap((TFloatByteMap) tUnmodifiableFloatByteMap0);
      assertEquals(1, tUnmodifiableFloatByteMap0.size());
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.values([B)[B: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      byte[] byteArray0 = tUnmodifiableFloatByteMap0.values(tFloatByteHashMap0._states);
      assertNotNull(byteArray0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.forEachValue(Lgnu/trove/procedure/TByteProcedure;)Z: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      boolean boolean0 = tUnmodifiableFloatByteMap0.forEachValue((TByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.retainEntries(Lgnu/trove/procedure/TFloatByteProcedure;)Z: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatByteMap0.retainEntries((TFloatByteProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.get(F)B: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap((-1), (-1));
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      byte byte0 = tUnmodifiableFloatByteMap0.get((float) (-1));
      assertEquals((byte)0, byte0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.put(FB)B: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      float[] floatArray0 = new float[8];
      byte[] byteArray0 = new byte[23];
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(floatArray0, byteArray0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatByteMap0.put(0.0F, (byte)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.adjustOrPutValue(FBB)B: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(128);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatByteMap0.adjustOrPutValue((float) (byte)0, (byte)0, (byte)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.putIfAbsent(FB)B: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatByteMap0.putIfAbsent((float) (byte)124, (byte)124);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keys([F)[F: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      float[] floatArray0 = new float[3];
      byte[] byteArray0 = new byte[2];
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(floatArray0, byteArray0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      float[] floatArray1 = tUnmodifiableFloatByteMap0.keys(floatArray0);
      assertSame(floatArray0, floatArray1);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      float[] floatArray0 = new float[4];
      byte[] byteArray0 = new byte[1];
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(floatArray0, byteArray0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      boolean boolean0 = tUnmodifiableFloatByteMap0.isEmpty();
      assertEquals(false, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.forEachEntry(Lgnu/trove/procedure/TFloatByteProcedure;)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap((-967), (-967));
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      boolean boolean0 = tUnmodifiableFloatByteMap0.forEachEntry((TFloatByteProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.increment(F)Z: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap((-11), (-11));
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatByteMap0.increment((float) (byte) (-7));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keys()[F: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(557, (float) 557, (float) 557, (byte) (-24));
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      float[] floatArray0 = tUnmodifiableFloatByteMap0.keys();
      assertNotNull(floatArray0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.adjustValue(FB)Z: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatByteMap0.adjustValue((float) 0, (byte)64);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.getNoEntryKey()F: root-Branch
   */

//   @Test
//   public void test24()  throws Throwable  {
//       TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap((-967), (-967));
//       TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
//       float float0 = tUnmodifiableFloatByteMap0.getNoEntryKey();
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.containsKey(F)Z: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap((-1), (-1));
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      boolean boolean0 = tUnmodifiableFloatByteMap0.containsKey((float) (-1));
      assertEquals(false, boolean0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.remove(F)B: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      float[] floatArray0 = new float[3];
      byte[] byteArray0 = new byte[2];
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(floatArray0, byteArray0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableFloatByteMap0.remove((float) (byte) (-17));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.<init>(Lgnu/trove/map/TFloatByteMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = null;
      try {
        tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keySet()Lgnu/trove/set/TFloatSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.keySet()Lgnu/trove/set/TFloatSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap(1);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      TUnmodifiableFloatSet tUnmodifiableFloatSet0 = (TUnmodifiableFloatSet)tUnmodifiableFloatByteMap0.keySet();
      assertNotNull(tUnmodifiableFloatSet0);
      
      TUnmodifiableFloatSet tUnmodifiableFloatSet1 = (TUnmodifiableFloatSet)tUnmodifiableFloatByteMap0.keySet();
      assertSame(tUnmodifiableFloatSet1, tUnmodifiableFloatSet0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.valueCollection()Lgnu/trove/TByteCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.valueCollection()Lgnu/trove/TByteCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap((-11), (-11));
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      TUnmodifiableByteCollection tUnmodifiableByteCollection0 = (TUnmodifiableByteCollection)tUnmodifiableFloatByteMap0.valueCollection();
      assertNotNull(tUnmodifiableByteCollection0);
      
      TUnmodifiableByteCollection tUnmodifiableByteCollection1 = (TUnmodifiableByteCollection)tUnmodifiableFloatByteMap0.valueCollection();
      assertSame(tUnmodifiableByteCollection1, tUnmodifiableByteCollection0);
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   */

  @Test
  public void test30()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap((-11), (-11));
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      Byte byte0 = new Byte((byte) (-7));
      boolean boolean0 = tUnmodifiableFloatByteMap0.equals((Object) byte0);
      assertEquals(false, boolean0);
  }

  //Test case number: 31
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.<init>(Lgnu/trove/map/TFloatByteMap;)V: I17 Branch 1 IFNONNULL L58 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableFloatByteMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TFloatByteHashMap tFloatByteHashMap0 = new TFloatByteHashMap();
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap0 = new TUnmodifiableFloatByteMap((TFloatByteMap) tFloatByteHashMap0);
      TUnmodifiableFloatByteMap tUnmodifiableFloatByteMap1 = new TUnmodifiableFloatByteMap((TFloatByteMap) tUnmodifiableFloatByteMap0);
      boolean boolean0 = tUnmodifiableFloatByteMap1.equals((Object) tUnmodifiableFloatByteMap0);
      assertEquals(true, boolean0);
  }
}

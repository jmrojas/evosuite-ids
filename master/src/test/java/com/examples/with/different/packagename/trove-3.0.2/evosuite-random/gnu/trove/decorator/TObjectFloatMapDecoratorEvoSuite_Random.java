/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.decorator;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.decorator.TObjectFloatMapDecorator;
import gnu.trove.map.TObjectFloatMap;
import gnu.trove.map.custom_hash.TObjectFloatCustomHashMap;
import gnu.trove.map.hash.TObjectFloatHashMap;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.AbstractMap;
import java.util.Locale;
import java.util.MissingResourceException;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TObjectFloatMapDecoratorEvoSuite_Random {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.setLoggingForJUnit(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  @Test
  public void test0()  throws Throwable  {
      TObjectFloatMapDecorator<Float> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<Float>();
      String string0 = "yx4";
      File file0 = new File(string0);
      File file1 = file0.getCanonicalFile();
      File file2 = file1.getAbsoluteFile();
      String string1 = file2.getParent();
      // Undeclared exception!
      try {
        tObjectFloatMapDecorator0.remove((Object) string1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test1()  throws Throwable  {
      IdentityHashingStrategy<TObjectFloatHashMap<Object>> identityHashingStrategy0 = new IdentityHashingStrategy<TObjectFloatHashMap<Object>>();
      TObjectFloatMapDecorator<Float> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<Float>();
      float float0 = 0.0F;
      Float float1 = new Float(float0);
      // Undeclared exception!
      try {
        tObjectFloatMapDecorator0.put(float1, (Float) float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TObjectFloatMapDecorator<AbstractMap.SimpleImmutableEntry<Integer, Float>> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<AbstractMap.SimpleImmutableEntry<Integer, Float>>();
      // Undeclared exception!
      try {
        tObjectFloatMapDecorator0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test3()  throws Throwable  {
      TObjectFloatMapDecorator<TObjectFloatHashMap<Object>> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<TObjectFloatHashMap<Object>>();
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try {
        tObjectFloatMapDecorator0.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test4()  throws Throwable  {
      TObjectFloatMapDecorator<Integer> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<Integer>();
      InputStream inputStream0 = null;
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(inputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TObjectFloatMap<String> tObjectFloatMap0 = null;
      float float0 = 0.0F;
      Float float1 = new Float(float0);
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      int int0 = 1994;
      AbstractMap.SimpleImmutableEntry<Integer, Integer> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, Integer>((Integer) int0, (Integer) int0);
      // Undeclared exception!
      try {
        abstractMap_SimpleImmutableEntry0.setValue((Integer) int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TObjectFloatCustomHashMap<Float> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Float>();
      Float float0 = null;
      AbstractMap.SimpleEntry<TObjectFloatCustomHashMap<Float>, Float> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<TObjectFloatCustomHashMap<Float>, Float>(tObjectFloatCustomHashMap0, float0);
      String string0 = "";
      File file0 = new File(string0, string0);
      String string1 = file0.getCanonicalPath();
      abstractMap_SimpleEntry0.equals((Object) string1);
      TObjectFloatMapDecorator<Integer> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<Integer>();
      // Undeclared exception!
      try {
        tObjectFloatMapDecorator0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test7()  throws Throwable  {
      TObjectFloatMap<String> tObjectFloatMap0 = null;
      TObjectFloatMapDecorator<String> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<String>(tObjectFloatMap0);
      Locale locale0 = Locale.CHINA;
      String string0 = locale0.getISO3Language();
      double double0 = 1.0;
      Float float0 = new Float(double0);
      // Undeclared exception!
      try {
        tObjectFloatMapDecorator0.put(string0, float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test8()  throws Throwable  {
      TObjectFloatCustomHashMap<Object> tObjectFloatCustomHashMap0 = new TObjectFloatCustomHashMap<Object>();
      TObjectFloatMapDecorator<Object> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<Object>((TObjectFloatMap<Object>) tObjectFloatCustomHashMap0);
      String string0 = "8Q_\"nA!c2)-r;E]$j";
      File file0 = new File(string0, string0);
      PrintStream printStream0 = null;
      try {
        printStream0 = new PrintStream(file0, string0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
         //
         // 8Q_\"nA!c2)-r;E]$j
         //
      }
  }

  @Test
  public void test9()  throws Throwable  {
      TObjectFloatMapDecorator<Float> tObjectFloatMapDecorator0 = new TObjectFloatMapDecorator<Float>();
      // Undeclared exception!
      try {
        tObjectFloatMapDecorator0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      String string0 = "DEFAULT_FLOAT_NO_ENTRY_VALUE: ";
      URI uRI0 = null;
      try {
        uRI0 = new URI(string0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 7: DEFAULT_FLOAT_NO_ENTRY_VALUE: 
         //
      }
  }
}

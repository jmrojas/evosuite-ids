/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableShortCollection;
import gnu.trove.map.TObjectShortMap;
import gnu.trove.map.custom_hash.TObjectShortCustomHashMap;
import gnu.trove.map.hash.TObjectShortHashMap;
import gnu.trove.procedure.TObjectProcedure;
import gnu.trove.procedure.TShortProcedure;
import gnu.trove.procedure.array.ToObjectArrayProceedure;
import gnu.trove.strategy.HashingStrategy;
import gnu.trove.strategy.IdentityHashingStrategy;
import java.util.Set;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableObjectShortMapEvoSuite_WeakMutation {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 17 covered goals:
   * 1 Weak Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.size()I:58 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 2 Weak Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.size()I:58 - DeleteStatement: size()I
   * 3 Weak Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.getNoEntryValue()S:92 - DeleteStatement: getNoEntryValue()S
   * 4 Weak Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.getNoEntryValue()S:92 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 5 Weak Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z:101 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z
   * 6 Weak Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z:101 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z: root-Branch
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.getNoEntryValue()S: root-Branch
   * 9 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.size()I: root-Branch
   * 10 Weak Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.<init>(Lgnu/trove/map/TObjectShortMap;)V:53 - ReplaceComparisonOperator != null -> = null
   * 11 Weak Mutation 9: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.size()I:58 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 12 Weak Mutation 10: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.size()I:58 - DeleteStatement: size()I
   * 13 Weak Mutation 53: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.getNoEntryValue()S:92 - DeleteStatement: getNoEntryValue()S
   * 14 Weak Mutation 52: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.getNoEntryValue()S:92 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 15 Weak Mutation 59: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z:101 - DeleteStatement: forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z
   * 16 Weak Mutation 58: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.forEachEntry(Lgnu/trove/procedure/TObjectShortProcedure;)Z:101 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 17 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.<init>(Lgnu/trove/map/TObjectShortMap;)V: I17 Branch 1 IFNONNULL L53 - true
   */

  @Test
  public void test0()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectShortCustomHashMap<Short> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Short>((HashingStrategy<? super Short>) identityHashingStrategy0);
      TUnmodifiableObjectShortMap<Short> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Short>((TObjectShortMap<Short>) tObjectShortCustomHashMap0);
      TObjectShortHashMap<Object> tObjectShortHashMap0 = new TObjectShortHashMap<Object>((TObjectShortMap<?>) tUnmodifiableObjectShortMap0);
      assertEquals("{}", tObjectShortHashMap0.toString());
  }

  //Test case number: 1
  /*
   * 5 covered goals:
   * 1 Weak Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.isEmpty()Z:59 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 2 Weak Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.isEmpty()Z:59 - DeleteStatement: isEmpty()Z
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.isEmpty()Z: root-Branch
   * 4 Weak Mutation 11: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.isEmpty()Z:59 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 5 Weak Mutation 12: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.isEmpty()Z:59 - DeleteStatement: isEmpty()Z
   */

  @Test
  public void test1()  throws Throwable  {
      IdentityHashingStrategy<Short> identityHashingStrategy0 = new IdentityHashingStrategy<Short>();
      TObjectShortCustomHashMap<Short> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Short>((HashingStrategy<? super Short>) identityHashingStrategy0, 1173, (float) 1173, (short)31);
      TUnmodifiableObjectShortMap<Short> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Short>((TObjectShortMap<Short>) tObjectShortCustomHashMap0);
      boolean boolean0 = tUnmodifiableObjectShortMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * 1 Weak Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.containsKey(Ljava/lang/Object;)Z:60 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 2 Weak Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.containsKey(Ljava/lang/Object;)Z:60 - DeleteStatement: containsKey(Ljava/lang/Object;)Z
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.containsKey(Ljava/lang/Object;)Z: root-Branch
   * 4 Weak Mutation 13: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.containsKey(Ljava/lang/Object;)Z:60 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 5 Weak Mutation 14: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.containsKey(Ljava/lang/Object;)Z:60 - DeleteStatement: containsKey(Ljava/lang/Object;)Z
   */

  @Test
  public void test2()  throws Throwable  {
      TObjectShortHashMap<Short> tObjectShortHashMap0 = new TObjectShortHashMap<Short>();
      TUnmodifiableObjectShortMap<Short> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Short>((TObjectShortMap<Short>) tObjectShortHashMap0);
      boolean boolean0 = tUnmodifiableObjectShortMap0.containsKey((Object) "0");
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 11 covered goals:
   * 1 Weak Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.containsValue(S)Z:61 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 2 Weak Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.containsValue(S)Z:61 - InsertUnaryOp IINC 1 val
   * 3 Weak Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.containsValue(S)Z:61 - InsertUnaryOp Negation of val
   * 4 Weak Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.containsValue(S)Z:61 - DeleteStatement: containsValue(S)Z
   * 5 Weak Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.containsValue(S)Z:61 - InsertUnaryOp IINC -1 val
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.containsValue(S)Z: root-Branch
   * 7 Weak Mutation 15: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.containsValue(S)Z:61 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 8 Weak Mutation 17: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.containsValue(S)Z:61 - InsertUnaryOp IINC 1 val
   * 9 Weak Mutation 16: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.containsValue(S)Z:61 - InsertUnaryOp Negation of val
   * 10 Weak Mutation 19: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.containsValue(S)Z:61 - DeleteStatement: containsValue(S)Z
   * 11 Weak Mutation 18: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.containsValue(S)Z:61 - InsertUnaryOp IINC -1 val
   */

  @Test
  public void test3()  throws Throwable  {
      TObjectShortCustomHashMap<Short> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Short>();
      TUnmodifiableObjectShortMap<Short> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Short>((TObjectShortMap<Short>) tObjectShortCustomHashMap0);
      boolean boolean0 = tUnmodifiableObjectShortMap0.containsValue((short)190);
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 5 covered goals:
   * 1 Weak Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.get(Ljava/lang/Object;)S:62 - DeleteStatement: get(Ljava/lang/Object;)S
   * 2 Weak Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.get(Ljava/lang/Object;)S:62 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.get(Ljava/lang/Object;)S: root-Branch
   * 4 Weak Mutation 21: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.get(Ljava/lang/Object;)S:62 - DeleteStatement: get(Ljava/lang/Object;)S
   * 5 Weak Mutation 20: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.get(Ljava/lang/Object;)S:62 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   */

  @Test
  public void test4()  throws Throwable  {
      TObjectShortHashMap<String> tObjectShortHashMap0 = new TObjectShortHashMap<String>();
      TUnmodifiableObjectShortMap<String> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<String>((TObjectShortMap<String>) tObjectShortHashMap0);
      short short0 = tUnmodifiableObjectShortMap0.get((Object) "");
      assertEquals((short)0, short0);
  }

  //Test case number: 5
  /*
   * 14 covered goals:
   * 1 Weak Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keySet()Ljava/util/Set;:74 - DeleteField: keySetLjava/util/Set;
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keySet()Ljava/util/Set;: I4 Branch 2 IFNONNULL L74 - true
   * 3 Weak Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keySet()Ljava/util/Set;:74 - ReplaceComparisonOperator != null -> = null
   * 4 Weak Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keySet()Ljava/util/Set;:75 - DeleteStatement: keySet()Ljava/util/Set;
   * 5 Weak Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keySet()Ljava/util/Set;:75 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 6 Weak Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keySet()Ljava/util/Set;:76 - DeleteField: keySetLjava/util/Set;
   * 7 Weak Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keySet()Ljava/util/Set;:75 - DeleteStatement: unmodifiableSet(Ljava/util/Set;)Ljava/util/Set;
   * 8 Weak Mutation 23: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keySet()Ljava/util/Set;:74 - ReplaceComparisonOperator != null -> = null
   * 9 Weak Mutation 22: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keySet()Ljava/util/Set;:74 - DeleteField: keySetLjava/util/Set;
   * 10 Weak Mutation 25: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keySet()Ljava/util/Set;:75 - DeleteStatement: keySet()Ljava/util/Set;
   * 11 Weak Mutation 24: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keySet()Ljava/util/Set;:75 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 12 Weak Mutation 27: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keySet()Ljava/util/Set;:76 - DeleteField: keySetLjava/util/Set;
   * 13 Weak Mutation 26: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keySet()Ljava/util/Set;:75 - DeleteStatement: unmodifiableSet(Ljava/util/Set;)Ljava/util/Set;
   * 14 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keySet()Ljava/util/Set;: I4 Branch 2 IFNONNULL L74 - false
   */

  @Test
  public void test5()  throws Throwable  {
      TObjectShortHashMap<Object> tObjectShortHashMap0 = new TObjectShortHashMap<Object>(61169, 61169);
      TUnmodifiableObjectShortMap<Object> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Object>((TObjectShortMap<Object>) tObjectShortHashMap0);
      Set<Object> set0 = tUnmodifiableObjectShortMap0.keySet();
      assertNotNull(set0);
      
      Set<Object> set1 = tUnmodifiableObjectShortMap0.keySet();
      assertSame(set1, set0);
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 Weak Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keys()[Ljava/lang/Object;:78 - DeleteStatement: keys()[Ljava/lang/Object;
   * 2 Weak Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keys()[Ljava/lang/Object;:78 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keys()[Ljava/lang/Object;: root-Branch
   * 4 Weak Mutation 29: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keys()[Ljava/lang/Object;:78 - DeleteStatement: keys()[Ljava/lang/Object;
   * 5 Weak Mutation 28: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keys()[Ljava/lang/Object;:78 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   */

  @Test
  public void test6()  throws Throwable  {
      TObjectShortHashMap<Object> tObjectShortHashMap0 = new TObjectShortHashMap<Object>((-8));
      TUnmodifiableObjectShortMap<Object> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Object>((TObjectShortMap<Object>) tObjectShortHashMap0);
      Object[] objectArray0 = tUnmodifiableObjectShortMap0.keys();
      assertNotNull(objectArray0);
  }

  //Test case number: 7
  /*
   * 5 covered goals:
   * 1 Weak Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:79 - DeleteStatement: keys([Ljava/lang/Object;)[Ljava/lang/Object;
   * 2 Weak Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:79 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;: root-Branch
   * 4 Weak Mutation 31: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:79 - DeleteStatement: keys([Ljava/lang/Object;)[Ljava/lang/Object;
   * 5 Weak Mutation 30: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.keys([Ljava/lang/Object;)[Ljava/lang/Object;:79 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   */

  @Test
  public void test7()  throws Throwable  {
      TObjectShortCustomHashMap<Short> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Short>((HashingStrategy<? super Short>) null, 1618, (float) 1618, (short) (-449));
      TUnmodifiableObjectShortMap<Short> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Short>((TObjectShortMap<Short>) tObjectShortCustomHashMap0);
      Short[] shortArray0 = new Short[7];
      Short[] shortArray1 = tUnmodifiableObjectShortMap0.keys(shortArray0);
      assertSame(shortArray1, shortArray0);
  }

  //Test case number: 8
  /*
   * 14 covered goals:
   * 1 Weak Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.valueCollection()Lgnu/trove/TShortCollection;:82 - DeleteField: valuesLgnu/trove/TShortCollection;
   * 2 Weak Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.valueCollection()Lgnu/trove/TShortCollection;:82 - ReplaceComparisonOperator != null -> = null
   * 3 Weak Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.valueCollection()Lgnu/trove/TShortCollection;:83 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 4 Weak Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.valueCollection()Lgnu/trove/TShortCollection;:83 - DeleteStatement: valueCollection()Lgnu/trove/TShortCollection;
   * 5 Weak Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.valueCollection()Lgnu/trove/TShortCollection;:83 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TShortCollection;)Lgnu/trove/TShortCollection;
   * 6 Weak Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.valueCollection()Lgnu/trove/TShortCollection;:84 - DeleteField: valuesLgnu/trove/TShortCollection;
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.valueCollection()Lgnu/trove/TShortCollection;: I4 Branch 3 IFNONNULL L82 - true
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.valueCollection()Lgnu/trove/TShortCollection;: I4 Branch 3 IFNONNULL L82 - false
   * 9 Weak Mutation 34: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.valueCollection()Lgnu/trove/TShortCollection;:83 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 10 Weak Mutation 35: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.valueCollection()Lgnu/trove/TShortCollection;:83 - DeleteStatement: valueCollection()Lgnu/trove/TShortCollection;
   * 11 Weak Mutation 32: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.valueCollection()Lgnu/trove/TShortCollection;:82 - DeleteField: valuesLgnu/trove/TShortCollection;
   * 12 Weak Mutation 33: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.valueCollection()Lgnu/trove/TShortCollection;:82 - ReplaceComparisonOperator != null -> = null
   * 13 Weak Mutation 36: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.valueCollection()Lgnu/trove/TShortCollection;:83 - DeleteStatement: unmodifiableCollection(Lgnu/trove/TShortCollection;)Lgnu/trove/TShortCollection;
   * 14 Weak Mutation 37: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.valueCollection()Lgnu/trove/TShortCollection;:84 - DeleteField: valuesLgnu/trove/TShortCollection;
   */

  @Test
  public void test8()  throws Throwable  {
      IdentityHashingStrategy<Short> identityHashingStrategy0 = new IdentityHashingStrategy<Short>();
      TObjectShortCustomHashMap<Short> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Short>((HashingStrategy<? super Short>) identityHashingStrategy0, 1173, (float) 1173, (short)31);
      TUnmodifiableObjectShortMap<Short> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Short>((TObjectShortMap<Short>) tObjectShortCustomHashMap0);
      TUnmodifiableShortCollection tUnmodifiableShortCollection0 = (TUnmodifiableShortCollection)tUnmodifiableObjectShortMap0.valueCollection();
      assertNotNull(tUnmodifiableShortCollection0);
      
      TUnmodifiableShortCollection tUnmodifiableShortCollection1 = (TUnmodifiableShortCollection)tUnmodifiableObjectShortMap0.valueCollection();
      assertSame(tUnmodifiableShortCollection1, tUnmodifiableShortCollection0);
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 Weak Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.values()[S:86 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 2 Weak Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.values()[S:86 - DeleteStatement: values()[S
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.values()[S: root-Branch
   * 4 Weak Mutation 38: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.values()[S:86 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 5 Weak Mutation 39: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.values()[S:86 - DeleteStatement: values()[S
   */

  @Test
  public void test9()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectShortCustomHashMap<Short> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Short>((HashingStrategy<? super Short>) identityHashingStrategy0, 199);
      TUnmodifiableObjectShortMap<Short> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Short>((TObjectShortMap<Short>) tObjectShortCustomHashMap0);
      short[] shortArray0 = tUnmodifiableObjectShortMap0.values();
      assertNotNull(shortArray0);
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 Weak Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.values([S)[S:87 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 2 Weak Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.values([S)[S:87 - DeleteStatement: values([S)[S
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.values([S)[S: root-Branch
   * 4 Weak Mutation 40: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.values([S)[S:87 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 5 Weak Mutation 41: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.values([S)[S:87 - DeleteStatement: values([S)[S
   */

  @Test
  public void test10()  throws Throwable  {
      TObjectShortHashMap<Object> tObjectShortHashMap0 = new TObjectShortHashMap<Object>((-8));
      TUnmodifiableObjectShortMap<Object> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Object>((TObjectShortMap<Object>) tObjectShortHashMap0);
      short[] shortArray0 = new short[7];
      short[] shortArray1 = tUnmodifiableObjectShortMap0.values(shortArray0);
      assertSame(shortArray1, shortArray0);
  }

  //Test case number: 11
  /*
   * 12 covered goals:
   * 1 Weak Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> !=
   * 2 Weak Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.equals(Ljava/lang/Object;)Z:89 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 3 Weak Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.equals(Ljava/lang/Object;)Z:89 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.equals(Ljava/lang/Object;)Z:89 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 5 Weak Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> !=
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L89 - false
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L89 - true
   * 8 Weak Mutation 42: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> !=
   * 9 Weak Mutation 43: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.equals(Ljava/lang/Object;)Z:89 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 10 Weak Mutation 47: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.equals(Ljava/lang/Object;)Z:89 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 44: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.equals(Ljava/lang/Object;)Z:89 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 12 Weak Mutation 45: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test11()  throws Throwable  {
      TObjectShortHashMap<Integer> tObjectShortHashMap0 = new TObjectShortHashMap<Integer>((int) (short) (-1));
      TUnmodifiableObjectShortMap<Integer> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Integer>((TObjectShortMap<Integer>) tObjectShortHashMap0);
      boolean boolean0 = tUnmodifiableObjectShortMap0.equals((Object) "0");
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 5 covered goals:
   * 1 Weak Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.hashCode()I:90 - DeleteStatement: hashCode()I
   * 2 Weak Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.hashCode()I:90 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.hashCode()I: root-Branch
   * 4 Weak Mutation 49: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.hashCode()I:90 - DeleteStatement: hashCode()I
   * 5 Weak Mutation 48: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.hashCode()I:90 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   */

  @Test
  public void test12()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectShortCustomHashMap<Object> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Object>((HashingStrategy<? super Object>) identityHashingStrategy0, (-728));
      TUnmodifiableObjectShortMap<Object> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Object>((TObjectShortMap<Object>) tObjectShortCustomHashMap0);
      int int0 = tUnmodifiableObjectShortMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 13
  /*
   * 5 covered goals:
   * 1 Weak Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.toString()Ljava/lang/String;:91 - DeleteStatement: toString()Ljava/lang/String;
   * 2 Weak Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.toString()Ljava/lang/String;:91 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.toString()Ljava/lang/String;: root-Branch
   * 4 Weak Mutation 51: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.toString()Ljava/lang/String;:91 - DeleteStatement: toString()Ljava/lang/String;
   * 5 Weak Mutation 50: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.toString()Ljava/lang/String;:91 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   */

  @Test
  public void test13()  throws Throwable  {
      TObjectShortHashMap<String> tObjectShortHashMap0 = new TObjectShortHashMap<String>((int) (short)1);
      TUnmodifiableObjectShortMap<String> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<String>((TObjectShortMap<String>) tObjectShortHashMap0);
      String string0 = tUnmodifiableObjectShortMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 14
  /*
   * 5 covered goals:
   * 1 Weak Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z:95 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z
   * 2 Weak Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z:95 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z: root-Branch
   * 4 Weak Mutation 55: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z:95 - DeleteStatement: forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z
   * 5 Weak Mutation 54: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.forEachKey(Lgnu/trove/procedure/TObjectProcedure;)Z:95 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   */

  @Test
  public void test14()  throws Throwable  {
      IdentityHashingStrategy<Object> identityHashingStrategy0 = new IdentityHashingStrategy<Object>();
      TObjectShortCustomHashMap<Short> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Short>((HashingStrategy<? super Short>) identityHashingStrategy0, (-1793));
      TUnmodifiableObjectShortMap<Short> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Short>((TObjectShortMap<Short>) tObjectShortCustomHashMap0);
      Short[] shortArray0 = new Short[1];
      ToObjectArrayProceedure<Short> toObjectArrayProceedure0 = new ToObjectArrayProceedure<Short>(shortArray0);
      boolean boolean0 = tUnmodifiableObjectShortMap0.forEachKey((TObjectProcedure<? super Short>) toObjectArrayProceedure0);
      assertEquals(true, boolean0);
  }

  //Test case number: 15
  /*
   * 5 covered goals:
   * 1 Weak Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z:98 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z
   * 2 Weak Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z:98 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z: root-Branch
   * 4 Weak Mutation 57: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z:98 - DeleteStatement: forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z
   * 5 Weak Mutation 56: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.forEachValue(Lgnu/trove/procedure/TShortProcedure;)Z:98 - DeleteField: mLgnu/trove/map/TObjectShortMap;
   */

  @Test
  public void test15()  throws Throwable  {
      TObjectShortCustomHashMap<Integer> tObjectShortCustomHashMap0 = new TObjectShortCustomHashMap<Integer>();
      TUnmodifiableObjectShortMap<Integer> tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Integer>((TObjectShortMap<Integer>) tObjectShortCustomHashMap0);
      boolean boolean0 = tUnmodifiableObjectShortMap0.forEachValue((TShortProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 16
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.<init>(Lgnu/trove/map/TObjectShortMap;)V: I17 Branch 1 IFNONNULL L53 - false
   * 2 Weak Mutation 8: gnu.trove.impl.unmodifiable.TUnmodifiableObjectShortMap.<init>(Lgnu/trove/map/TObjectShortMap;)V:53 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test16()  throws Throwable  {
      TUnmodifiableObjectShortMap<Object> tUnmodifiableObjectShortMap0 = null;
      try {
        tUnmodifiableObjectShortMap0 = new TUnmodifiableObjectShortMap<Object>((TObjectShortMap<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

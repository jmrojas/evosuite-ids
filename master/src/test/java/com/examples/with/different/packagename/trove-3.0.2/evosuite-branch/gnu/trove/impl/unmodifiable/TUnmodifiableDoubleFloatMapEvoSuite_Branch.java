/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.unmodifiable;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.function.TFloatFunction;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap;
import gnu.trove.impl.unmodifiable.TUnmodifiableDoubleSet;
import gnu.trove.impl.unmodifiable.TUnmodifiableFloatCollection;
import gnu.trove.map.TDoubleFloatMap;
import gnu.trove.map.hash.TDoubleFloatHashMap;
import gnu.trove.procedure.TDoubleFloatProcedure;
import gnu.trove.procedure.TDoubleProcedure;
import gnu.trove.procedure.TFloatProcedure;
import java.util.HashMap;
import java.util.Map;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TUnmodifiableDoubleFloatMapEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap$1.value()F: root-Branch
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap$1.key()D: root-Branch
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap$1.hasNext()Z: root-Branch
   * 4 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap$1.<init>(Lgnu/trove/impl/unmodifiable/TUnmodifiableDoubleFloatMap;)V: root-Branch
   * 5 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap$1.advance()V: root-Branch
   * 6 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.size()I: root-Branch
   * 7 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.iterator()Lgnu/trove/iterator/TDoubleFloatIterator;: root-Branch
   * 8 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.<init>(Lgnu/trove/map/TDoubleFloatMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test0()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap((-1999));
      float[] floatArray0 = new float[5];
      TDoubleFloatHashMap tDoubleFloatHashMap1 = new TDoubleFloatHashMap(tDoubleFloatHashMap0._set, floatArray0);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap1);
      tDoubleFloatHashMap0.putAll((TDoubleFloatMap) tUnmodifiableDoubleFloatMap0);
      assertEquals(1, tDoubleFloatHashMap0.size());
      assertEquals(1, tUnmodifiableDoubleFloatMap0.size());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.get(D)F: root-Branch
   */

//   @Test
//   public void test1()  throws Throwable  {
//       TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap((-1999));
//       TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
//       float float0 = tUnmodifiableDoubleFloatMap0.get((double) 0.0F);
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.adjustValue(DF)Z: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap((-675));
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleFloatMap0.adjustValue((double) (-675), (float) (-675));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.retainEntries(Lgnu/trove/procedure/TDoubleFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap((-1999));
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleFloatMap0.retainEntries((TDoubleFloatProcedure) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.putIfAbsent(DF)F: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(0);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleFloatMap0.putIfAbsent((double) 0, (float) 0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap((-1999));
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      String string0 = tUnmodifiableDoubleFloatMap0.toString();
      assertEquals("{}", string0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.put(DF)F: root-Branch
   */

  @Test
  public void test6()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(0);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleFloatMap0.put((double) 0, (float) 0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.forEachKey(Lgnu/trove/procedure/TDoubleProcedure;)Z: root-Branch
   */

  @Test
  public void test7()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap();
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      boolean boolean0 = tUnmodifiableDoubleFloatMap0.forEachKey((TDoubleProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.increment(D)Z: root-Branch
   */

  @Test
  public void test8()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(1547, 1547, 1547, 1547);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleFloatMap0.increment((double) 1547);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.forEachValue(Lgnu/trove/procedure/TFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test9()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(1547, 1547, 1547, 1547);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      boolean boolean0 = tUnmodifiableDoubleFloatMap0.forEachValue((TFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.containsValue(F)Z: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(0);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      boolean boolean0 = tUnmodifiableDoubleFloatMap0.containsValue((float) 0);
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.hashCode()I: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap((-1952));
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      int int0 = tUnmodifiableDoubleFloatMap0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.values([F)[F: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap((-469), (-469));
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      float[] floatArray0 = new float[10];
      float[] floatArray1 = tUnmodifiableDoubleFloatMap0.values(floatArray0);
      assertSame(floatArray1, floatArray0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.putAll(Lgnu/trove/map/TDoubleFloatMap;)V: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap((-1952));
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleFloatMap0.putAll((TDoubleFloatMap) tDoubleFloatHashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.isEmpty()Z: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap((-1952));
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      boolean boolean0 = tUnmodifiableDoubleFloatMap0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.containsKey(D)Z: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(0);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      boolean boolean0 = tUnmodifiableDoubleFloatMap0.containsKey((double) 0);
      assertEquals(false, boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.clear()V: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap((-469), (-469));
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleFloatMap0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.getNoEntryValue()F: root-Branch
   */

//   @Test
//   public void test17()  throws Throwable  {
//       TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(10, 10);
//       TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
//       float float0 = tUnmodifiableDoubleFloatMap0.getNoEntryValue();
//       assertEquals(0.0F, float0, 0.01F);
//   }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.keys([D)[D: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap((-1999));
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      double[] doubleArray0 = tUnmodifiableDoubleFloatMap0.keys(tDoubleFloatHashMap0._set);
      assertNotNull(doubleArray0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.getNoEntryKey()D: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap((-1999));
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      double double0 = tUnmodifiableDoubleFloatMap0.getNoEntryKey();
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.forEachEntry(Lgnu/trove/procedure/TDoubleFloatProcedure;)Z: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap();
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      boolean boolean0 = tUnmodifiableDoubleFloatMap0.forEachEntry((TDoubleFloatProcedure) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.adjustOrPutValue(DFF)F: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap();
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleFloatMap0.adjustOrPutValue(0.0, (-979.2364F), (-979.2364F));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.values()[F: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(10, 10);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      float[] floatArray0 = tUnmodifiableDoubleFloatMap0.values();
      assertNotNull(floatArray0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.transformValues(Lgnu/trove/function/TFloatFunction;)V: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap((-1867), (-1867));
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleFloatMap0.transformValues((TFloatFunction) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.putAll(Ljava/util/Map;)V: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      HashMap<Double, Float> hashMap0 = new HashMap<Double, Float>();
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap();
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleFloatMap0.putAll((Map<? extends Double, ? extends Float>) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.keys()[D: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap((-469), (-469));
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      double[] doubleArray0 = tUnmodifiableDoubleFloatMap0.keys();
      assertNotNull(doubleArray0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.remove(D)F: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap();
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      // Undeclared exception!
      try {
        tUnmodifiableDoubleFloatMap0.remove((double) 1.8050511F);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.<init>(Lgnu/trove/map/TDoubleFloatMap;)V: I17 Branch 1 IFNONNULL L58 - false
   */

  @Test
  public void test27()  throws Throwable  {
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = null;
      try {
        tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.keySet()Lgnu/trove/set/TDoubleSet;: I4 Branch 2 IFNONNULL L79 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.keySet()Lgnu/trove/set/TDoubleSet;: I4 Branch 2 IFNONNULL L79 - false
   */

  @Test
  public void test28()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap((-469), (-469));
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet0 = (TUnmodifiableDoubleSet)tUnmodifiableDoubleFloatMap0.keySet();
      assertNotNull(tUnmodifiableDoubleSet0);
      
      TUnmodifiableDoubleSet tUnmodifiableDoubleSet1 = (TUnmodifiableDoubleSet)tUnmodifiableDoubleFloatMap0.keySet();
      assertSame(tUnmodifiableDoubleSet1, tUnmodifiableDoubleSet0);
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I4 Branch 3 IFNONNULL L87 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.valueCollection()Lgnu/trove/TFloatCollection;: I4 Branch 3 IFNONNULL L87 - false
   */

  @Test
  public void test29()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap(10, 10);
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection0 = (TUnmodifiableFloatCollection)tUnmodifiableDoubleFloatMap0.valueCollection();
      assertNotNull(tUnmodifiableFloatCollection0);
      
      TUnmodifiableFloatCollection tUnmodifiableFloatCollection1 = (TUnmodifiableFloatCollection)tUnmodifiableDoubleFloatMap0.valueCollection();
      assertSame(tUnmodifiableFloatCollection1, tUnmodifiableFloatCollection0);
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - true
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - false
   */

  @Test
  public void test30()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap((-1999));
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      boolean boolean0 = tUnmodifiableDoubleFloatMap0.equals((Object) tDoubleFloatHashMap0);
      assertEquals(true, boolean0);
  }

  //Test case number: 31
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPEQ L94 - false
   * 2 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.equals(Ljava/lang/Object;)Z: I9 Branch 5 IFEQ L94 - true
   * 3 gnu.trove.impl.unmodifiable.TUnmodifiableDoubleFloatMap.<init>(Lgnu/trove/map/TDoubleFloatMap;)V: I17 Branch 1 IFNONNULL L58 - true
   */

  @Test
  public void test31()  throws Throwable  {
      TDoubleFloatHashMap tDoubleFloatHashMap0 = new TDoubleFloatHashMap();
      TUnmodifiableDoubleFloatMap tUnmodifiableDoubleFloatMap0 = new TUnmodifiableDoubleFloatMap((TDoubleFloatMap) tDoubleFloatHashMap0);
      boolean boolean0 = tUnmodifiableDoubleFloatMap0.equals((Object) "");
      assertEquals(false, boolean0);
  }
}

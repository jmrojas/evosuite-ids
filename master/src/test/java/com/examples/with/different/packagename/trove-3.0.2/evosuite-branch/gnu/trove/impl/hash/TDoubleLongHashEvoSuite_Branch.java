/*
 * This file was automatically generated by EvoSuite
 */

package gnu.trove.impl.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import gnu.trove.map.TDoubleLongMap;
import gnu.trove.map.hash.TDoubleLongHashMap;
import gnu.trove.procedure.TDoubleProcedure;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;

public class TDoubleLongHashEvoSuite_Branch {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.utils.LoggingUtils.loadLogbackForEvoSuite(); 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.agent.InstrumentingAgent.initialize(); 
  } 

  @Before 
  public void initTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    org.evosuite.agent.InstrumentingAgent.deactivate(); 
  } 


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleLongHash.getNoEntryKey()D: root-Branch
   * 2 gnu.trove.impl.hash.TDoubleLongHash.setUp(I)I: root-Branch
   * 3 gnu.trove.impl.hash.TDoubleLongHash.<init>()V: root-Branch
   */

  @Test
  public void test0()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      double double0 = tDoubleLongHashMap0.getNoEntryKey();
      assertEquals(0.0, double0, 0.01D);
      assertEquals(23, tDoubleLongHashMap0.capacity());
      assertEquals(0L, tDoubleLongHashMap0.getNoEntryValue());
  }

  //Test case number: 1
  /*
   * 10 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleLongHash.removeAt(I)V: root-Branch
   * 2 gnu.trove.impl.hash.TDoubleLongHash.insertKeyAt(ID)V: root-Branch
   * 3 gnu.trove.impl.hash.TDoubleLongHash.<init>(I)V: root-Branch
   * 4 gnu.trove.impl.hash.TDoubleLongHash.index(D)I: I37 Branch 5 IFNE L228 - true
   * 5 gnu.trove.impl.hash.TDoubleLongHash.index(D)I: I46 Branch 6 IF_ICMPNE L231 - false
   * 6 gnu.trove.impl.hash.TDoubleLongHash.index(D)I: I52 Branch 7 IFNE L231 - false
   * 7 gnu.trove.impl.hash.TDoubleLongHash.insertKey(D)I: I30 Branch 13 IFNE L279 - true
   * 8 gnu.trove.impl.hash.TDoubleLongHash.insertKey(D)I: I30 Branch 13 IFNE L279 - false
   * 9 gnu.trove.impl.hash.TDoubleLongHash.insertKey(D)I: I50 Branch 14 IF_ICMPNE L286 - false
   * 10 gnu.trove.impl.hash.TDoubleLongHash.insertKey(D)I: I57 Branch 15 IFNE L286 - false
   */

  @Test
  public void test1()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      long[] longArray0 = new long[5];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      assertEquals(false, tDoubleLongHashMap0.isEmpty());
      
      tDoubleLongHashMap0.remove(0.0);
      assertEquals(0, tDoubleLongHashMap0.size());
      assertEquals(0L, tDoubleLongHashMap0.getNoEntryValue());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.hash.TDoubleLongHash.writeExternal(Ljava/io/ObjectOutput;)V: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      tDoubleLongHashMap0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals(0.0, tDoubleLongHashMap0.getNoEntryKey(), 0.01D);
      assertEquals(0L, tDoubleLongHashMap0.getNoEntryValue());
      assertEquals(23, tDoubleLongHashMap0.capacity());
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.hash.TDoubleLongHash.<init>(IF)V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(92, 92);
      assertEquals(0L, tDoubleLongHashMap0.getNoEntryValue());
      assertEquals(0.0, tDoubleLongHashMap0.getNoEntryKey(), 0.01D);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.hash.TDoubleLongHash.getNoEntryValue()J: root-Branch
   */

  @Test
  public void test4()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      long long0 = tDoubleLongHashMap0.getNoEntryValue();
      assertEquals(23, tDoubleLongHashMap0.capacity());
      assertEquals(0.0, tDoubleLongHashMap0.getNoEntryKey(), 0.01D);
      assertEquals(0L, long0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 gnu.trove.impl.hash.TDoubleLongHash.<init>(IFDJ)V: root-Branch
   */

  @Test
  public void test5()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(1314, (float) 1314, 0.0, (long) 1314);
      assertEquals(1314L, tDoubleLongHashMap0.getNoEntryValue());
      assertEquals(0.0, tDoubleLongHashMap0.getNoEntryKey(), 0.01D);
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleLongHash.contains(D)Z: I5 Branch 1 IFLT L178 - true
   * 2 gnu.trove.impl.hash.TDoubleLongHash.index(D)I: I37 Branch 5 IFNE L228 - false
   */

  @Test
  public void test6()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      boolean boolean0 = tDoubleLongHashMap0.contains((-1.0));
      assertEquals(23, tDoubleLongHashMap0.capacity());
      assertEquals(false, boolean0);
      assertEquals(0L, tDoubleLongHashMap0.getNoEntryValue());
      assertEquals(0.0, tDoubleLongHashMap0.getNoEntryKey(), 0.01D);
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleLongHash.contains(D)Z: I5 Branch 1 IFLT L178 - false
   * 2 gnu.trove.impl.hash.TDoubleLongHash.index(D)I: I52 Branch 7 IFNE L231 - false
   */

  @Test
  public void test7()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-1591.333545759881);
      long[] longArray0 = new long[7];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      boolean boolean0 = tDoubleLongHashMap0.containsKey((-1591.333545759881));
      assertEquals(17, tDoubleLongHashMap0.capacity());
      assertEquals(0L, tDoubleLongHashMap0.getNoEntryValue());
      assertEquals(0.0, tDoubleLongHashMap0.getNoEntryKey(), 0.01D);
      assertEquals(2, tDoubleLongHashMap0.size());
      assertEquals(true, boolean0);
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleLongHash.forEach(Lgnu/trove/procedure/TDoubleProcedure;)Z: I18 Branch 2 IFLE L192 - true
   * 2 gnu.trove.impl.hash.TDoubleLongHash.forEach(Lgnu/trove/procedure/TDoubleProcedure;)Z: I18 Branch 2 IFLE L192 - false
   * 3 gnu.trove.impl.hash.TDoubleLongHash.forEach(Lgnu/trove/procedure/TDoubleProcedure;)Z: I25 Branch 3 IF_ICMPNE L193 - true
   */

  @Test
  public void test8()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      boolean boolean0 = tDoubleLongHashMap0.forEachKey((TDoubleProcedure) null);
      assertEquals(23, tDoubleLongHashMap0.capacity());
      assertEquals(true, boolean0);
      assertEquals(0L, tDoubleLongHashMap0.getNoEntryValue());
      assertEquals(0.0, tDoubleLongHashMap0.getNoEntryKey(), 0.01D);
  }

  //Test case number: 9
  /*
   * 3 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleLongHash.forEach(Lgnu/trove/procedure/TDoubleProcedure;)Z: I25 Branch 3 IF_ICMPNE L193 - false
   * 2 gnu.trove.impl.hash.TDoubleLongHash.forEach(Lgnu/trove/procedure/TDoubleProcedure;)Z: I18 Branch 2 IFLE L192 - false
   * 3 gnu.trove.impl.hash.TDoubleLongHash.forEach(Lgnu/trove/procedure/TDoubleProcedure;)Z: I25 Branch 3 IF_ICMPNE L193 - true
   */

  @Test
  public void test9()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      long[] longArray0 = new long[7];
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(doubleArray0, longArray0);
      // Undeclared exception!
      try {
        tDoubleLongHashMap0.forEach((TDoubleProcedure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 7 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleLongHash.indexRehashed(DIIB)I: I29 Branch 8 IFGE L245 - true
   * 2 gnu.trove.impl.hash.TDoubleLongHash.indexRehashed(DIIB)I: I46 Branch 9 IFNE L250 - true
   * 3 gnu.trove.impl.hash.TDoubleLongHash.indexRehashed(DIIB)I: I59 Branch 10 IFNE L254 - true
   * 4 gnu.trove.impl.hash.TDoubleLongHash.indexRehashed(DIIB)I: I71 Branch 12 IF_ICMPNE L256 - true
   * 5 gnu.trove.impl.hash.TDoubleLongHash.indexRehashed(DIIB)I: I46 Branch 9 IFNE L250 - false
   * 6 gnu.trove.impl.hash.TDoubleLongHash.index(D)I: I46 Branch 6 IF_ICMPNE L231 - true
   * 7 gnu.trove.impl.hash.TDoubleLongHash.indexRehashed(DIIB)I: I29 Branch 8 IFGE L245 - false
   */

  @Test
  public void test10()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      assertEquals(23, tDoubleLongHashMap0.capacity());
      
      tDoubleLongHashMap0.trimToSize();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      tDoubleLongHashMap0._states = byteArray0;
      boolean boolean0 = tDoubleLongHashMap0.adjustValue((double) (byte) (-1), (long) (byte) (-1));
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 15 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleLongHash.indexRehashed(DIIB)I: I59 Branch 10 IFNE L254 - false
   * 2 gnu.trove.impl.hash.TDoubleLongHash.indexRehashed(DIIB)I: I62 Branch 11 IF_ICMPEQ L254 - false
   * 3 gnu.trove.impl.hash.TDoubleLongHash.insertKey(D)I: I57 Branch 15 IFNE L286 - true
   * 4 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I28 Branch 16 IF_ICMPNE L306 - true
   * 5 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I45 Branch 18 IFGE L310 - false
   * 6 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I62 Branch 19 IFNE L316 - true
   * 7 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I62 Branch 19 IFNE L316 - false
   * 8 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I67 Branch 20 IF_ICMPEQ L317 - true
   * 9 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I97 Branch 21 IF_ICMPNE L327 - false
   * 10 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I104 Branch 22 IFNE L327 - false
   * 11 gnu.trove.impl.hash.TDoubleLongHash.<init>(I)V: root-Branch
   * 12 gnu.trove.impl.hash.TDoubleLongHash.insertKey(D)I: I50 Branch 14 IF_ICMPNE L286 - false
   * 13 gnu.trove.impl.hash.TDoubleLongHash.insertKey(D)I: I57 Branch 15 IFNE L286 - false
   * 14 gnu.trove.impl.hash.TDoubleLongHash.index(D)I: I46 Branch 6 IF_ICMPNE L231 - false
   * 15 gnu.trove.impl.hash.TDoubleLongHash.index(D)I: I52 Branch 7 IFNE L231 - true
   */

  @Test
  public void test11()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap(0);
      tDoubleLongHashMap0.adjustOrPutValue(1058.2405782698825, (long) 0, (-2000L));
      tDoubleLongHashMap0.putIfAbsent((double) 0, (long) 0);
      tDoubleLongHashMap0.putAll((TDoubleLongMap) tDoubleLongHashMap0);
      boolean boolean0 = tDoubleLongHashMap0.increment((double) 0);
      assertEquals(11, tDoubleLongHashMap0.capacity());
      assertEquals(true, boolean0);
  }

  //Test case number: 12
  /*
   * 8 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleLongHash.indexRehashed(DIIB)I: I71 Branch 12 IF_ICMPNE L256 - false
   * 2 gnu.trove.impl.hash.TDoubleLongHash.index(D)I: I37 Branch 5 IFNE L228 - true
   * 3 gnu.trove.impl.hash.TDoubleLongHash.index(D)I: I46 Branch 6 IF_ICMPNE L231 - true
   * 4 gnu.trove.impl.hash.TDoubleLongHash.indexRehashed(DIIB)I: I29 Branch 8 IFGE L245 - true
   * 5 gnu.trove.impl.hash.TDoubleLongHash.indexRehashed(DIIB)I: I29 Branch 8 IFGE L245 - false
   * 6 gnu.trove.impl.hash.TDoubleLongHash.indexRehashed(DIIB)I: I46 Branch 9 IFNE L250 - true
   * 7 gnu.trove.impl.hash.TDoubleLongHash.indexRehashed(DIIB)I: I59 Branch 10 IFNE L254 - true
   * 8 gnu.trove.impl.hash.TDoubleLongHash.indexRehashed(DIIB)I: I71 Branch 12 IF_ICMPNE L256 - true
   */

  @Test
  public void test12()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      tDoubleLongHashMap0.trimToSize();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      tDoubleLongHashMap0._states = byteArray0;
      boolean boolean0 = tDoubleLongHashMap0.adjustValue((double) (byte) (-1), (long) (byte) (-1));
      assertEquals(false, boolean0);
      assertEquals(0.0, tDoubleLongHashMap0.getNoEntryKey(), 0.01D);
  }

  //Test case number: 13
  /*
   * 9 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I31 Branch 17 IF_ICMPNE L306 - true
   * 2 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I45 Branch 18 IFGE L310 - true
   * 3 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I67 Branch 20 IF_ICMPEQ L317 - false
   * 4 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I97 Branch 21 IF_ICMPNE L327 - true
   * 5 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I116 Branch 23 IF_ICMPNE L332 - true
   * 6 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I62 Branch 19 IFNE L316 - false
   * 7 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I28 Branch 16 IF_ICMPNE L306 - false
   * 8 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I31 Branch 17 IF_ICMPNE L306 - false
   * 9 gnu.trove.impl.hash.TDoubleLongHash.insertKey(D)I: I50 Branch 14 IF_ICMPNE L286 - true
   */

  @Test
  public void test13()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      tDoubleLongHashMap0.trimToSize();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      tDoubleLongHashMap0._states = byteArray0;
      long long0 = tDoubleLongHashMap0.put((-958.4341205695455), (long) (byte)2);
      assertEquals(false, tDoubleLongHashMap0.isEmpty());
      assertEquals(0L, long0);
  }

  //Test case number: 14
  /*
   * 9 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I104 Branch 22 IFNE L327 - true
   * 2 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I116 Branch 23 IF_ICMPNE L332 - false
   * 3 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I121 Branch 24 IF_ICMPEQ L336 - false
   * 4 gnu.trove.impl.hash.TDoubleLongHash.insertKeyAt(ID)V: root-Branch
   * 5 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I28 Branch 16 IF_ICMPNE L306 - false
   * 6 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I31 Branch 17 IF_ICMPNE L306 - true
   * 7 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I31 Branch 17 IF_ICMPNE L306 - false
   * 8 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I97 Branch 21 IF_ICMPNE L327 - false
   * 9 gnu.trove.impl.hash.TDoubleLongHash.insertKey(D)I: I30 Branch 13 IFNE L279 - false
   */

  @Test
  public void test14()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      tDoubleLongHashMap0.trimToSize();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      tDoubleLongHashMap0._states = byteArray0;
      tDoubleLongHashMap0.adjustOrPutValue((-1.0), 0L, (-1115L));
      long long0 = tDoubleLongHashMap0.put((-958.4341205695455), (long) (byte)2);
      assertEquals(7, tDoubleLongHashMap0.capacity());
      assertEquals(0L, long0);
  }

  //Test case number: 15
  /*
   * 12 covered goals:
   * 1 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I121 Branch 24 IF_ICMPEQ L336 - true
   * 2 gnu.trove.impl.hash.TDoubleLongHash.setUp(I)I: root-Branch
   * 3 gnu.trove.impl.hash.TDoubleLongHash.<init>()V: root-Branch
   * 4 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I28 Branch 16 IF_ICMPNE L306 - true
   * 5 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I45 Branch 18 IFGE L310 - true
   * 6 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I45 Branch 18 IFGE L310 - false
   * 7 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I62 Branch 19 IFNE L316 - true
   * 8 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I97 Branch 21 IF_ICMPNE L327 - true
   * 9 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I116 Branch 23 IF_ICMPNE L332 - true
   * 10 gnu.trove.impl.hash.TDoubleLongHash.insertKeyRehash(DIIB)I: I116 Branch 23 IF_ICMPNE L332 - false
   * 11 gnu.trove.impl.hash.TDoubleLongHash.insertKey(D)I: I30 Branch 13 IFNE L279 - true
   * 12 gnu.trove.impl.hash.TDoubleLongHash.insertKey(D)I: I50 Branch 14 IF_ICMPNE L286 - true
   */

  @Test
  public void test15()  throws Throwable  {
      TDoubleLongHashMap tDoubleLongHashMap0 = new TDoubleLongHashMap();
      assertEquals(23, tDoubleLongHashMap0.capacity());
      
      tDoubleLongHashMap0.trimToSize();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      tDoubleLongHashMap0._states = byteArray0;
      // Undeclared exception!
      try {
        tDoubleLongHashMap0.put((-958.4341205695455), (long) (byte) (-1));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No free or removed slots available. Key set full?!!
         //
      }
  }
}
